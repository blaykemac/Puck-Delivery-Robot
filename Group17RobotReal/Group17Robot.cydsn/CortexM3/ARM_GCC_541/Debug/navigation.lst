ARM GAS  C:\Users\Misha\AppData\Local\Temp\cc92bABD.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"navigation.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.armMoving,"ax",%progbits
  20              		.align	2
  21              		.global	armMoving
  22              		.thumb
  23              		.thumb_func
  24              		.type	armMoving, %function
  25              	armMoving:
  26              	.LFB64:
  27              		.file 1 "navigation.c"
   1:navigation.c  **** 
   2:navigation.c  **** /* ========================================
   3:navigation.c  ****  *
   4:navigation.c  ****  * Copyright Group 17, 2019
   5:navigation.c  ****  * All Rights Reserved
   6:navigation.c  ****  * UNPUBLISHED, LICENSED SOFTWARE.
   7:navigation.c  ****  *
   8:navigation.c  ****  * CONFIDENTIAL AND PROPRIETARY INFORMATION
   9:navigation.c  ****  * WHICH IS THE PROPERTY OF Blayke, Misha, Nidhin.
  10:navigation.c  ****  *
  11:navigation.c  ****  * ========================================
  12:navigation.c  **** */
  13:navigation.c  **** 
  14:navigation.c  **** // * PSOC LIBRARY * //
  15:navigation.c  **** #include "project.h"
  16:navigation.c  **** 
  17:navigation.c  **** // * C LIBRARIES * // 
  18:navigation.c  **** #include <stdlib.h>
  19:navigation.c  **** #include <stdio.h>
  20:navigation.c  **** #include <math.h>
  21:navigation.c  **** 
  22:navigation.c  **** // * OUR LIBRARIES * //
  23:navigation.c  **** #include "main.h"
  24:navigation.c  **** #include "colour.h"
  25:navigation.c  **** #include "ultrasonic.h" 
  26:navigation.c  **** #include "servo.h"
  27:navigation.c  **** #include "motor.h"
  28:navigation.c  **** #include "customMath.h"
  29:navigation.c  **** #include "navigation.h"
  30:navigation.c  **** #include "debugging.h"
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cc92bABD.s 			page 2


  31:navigation.c  **** 
  32:navigation.c  **** void armMoving(void){
  28              		.loc 1 32 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 38B5     		push	{r3, r4, r5, lr}
  33              		.cfi_def_cfa_offset 16
  34              		.cfi_offset 3, -16
  35              		.cfi_offset 4, -12
  36              		.cfi_offset 5, -8
  37              		.cfi_offset 14, -4
  38              	.LVL0:
  33:navigation.c  ****     
  34:navigation.c  ****     int puck_correct = FALSE;   // A flag to determine if the correct puck has been picked up
  35:navigation.c  ****     int puck_scan;
  36:navigation.c  ****     
  37:navigation.c  ****     puck_construction_plan[1] = RED;  // this was a test
  39              		.loc 1 37 0
  40 0002 0122     		movs	r2, #1
  41 0004 0E4B     		ldr	r3, .L7
  42 0006 5A60     		str	r2, [r3, #4]
  38:navigation.c  ****     
  39:navigation.c  ****     // States
  40:navigation.c  ****     // moving
  41:navigation.c  ****     changeHeightToPuck(3, NEITHER);  // Arm has to be lifted to highest position
  43              		.loc 1 41 0
  44 0008 0221     		movs	r1, #2
  45 000a 0320     		movs	r0, #3
  46 000c FFF7FEFF 		bl	changeHeightToPuck
  47              	.LVL1:
  34:navigation.c  ****     int puck_scan;
  48              		.loc 1 34 0
  49 0010 0025     		movs	r5, #0
  42:navigation.c  ****         // THIS WILL be ensured by always returning the claw to the highest position after completi
  43:navigation.c  ****         
  44:navigation.c  ****     // Scanning puck:
  45:navigation.c  ****     while (puck_correct == FALSE) 
  50              		.loc 1 45 0
  51 0012 12E0     		b	.L2
  52              	.LVL2:
  53              	.L4:
  46:navigation.c  ****     {
  47:navigation.c  ****                                 // robot moves forward towards puck
  48:navigation.c  ****         changeHeightToPuck(1, NEITHER);  // arm lowers onto robot
  54              		.loc 1 48 0
  55 0014 0221     		movs	r1, #2
  56 0016 0120     		movs	r0, #1
  57 0018 FFF7FEFF 		bl	changeHeightToPuck
  58              	.LVL3:
  49:navigation.c  ****         puck_scan = colourSensingOutput();  // colour sensor takes a scan
  59              		.loc 1 49 0
  60 001c FFF7FEFF 		bl	colourSensingOutput
  61              	.LVL4:
  62 0020 0446     		mov	r4, r0
  63              	.LVL5:
  50:navigation.c  ****         changeHeightToPuck(3, NEITHER);  // arm returns to high position
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cc92bABD.s 			page 3


  64              		.loc 1 50 0
  65 0022 0221     		movs	r1, #2
  66 0024 0320     		movs	r0, #3
  67              	.LVL6:
  68 0026 FFF7FEFF 		bl	changeHeightToPuck
  69              	.LVL7:
  51:navigation.c  ****                                 // robot moves backwards
  52:navigation.c  ****         if (puck_scan == puck_construction_plan[current_stage]) {puck_correct = TRUE;}
  70              		.loc 1 52 0
  71 002a 064B     		ldr	r3, .L7+4
  72 002c 1A68     		ldr	r2, [r3]
  73 002e 044B     		ldr	r3, .L7
  74 0030 53F82230 		ldr	r3, [r3, r2, lsl #2]
  75 0034 9C42     		cmp	r4, r3
  76 0036 00D1     		bne	.L2
  77 0038 0125     		movs	r5, #1
  78              	.LVL8:
  79              	.L2:
  45:navigation.c  ****     {
  80              		.loc 1 45 0
  81 003a 002D     		cmp	r5, #0
  82 003c EAD0     		beq	.L4
  53:navigation.c  ****                                 // if colour == true:
  54:navigation.c  ****                                     // enter picking up puck from 
  55:navigation.c  ****         else 
  56:navigation.c  ****         {
  57:navigation.c  ****                                 // if colour == false
  58:navigation.c  ****                                     // robot translates to side to see next puck, and performs scan
  59:navigation.c  ****         }
  60:navigation.c  ****     }
  61:navigation.c  ****     
  62:navigation.c  **** }
  83              		.loc 1 62 0
  84 003e 38BD     		pop	{r3, r4, r5, pc}
  85              	.LVL9:
  86              	.L8:
  87              		.align	2
  88              	.L7:
  89 0040 00000000 		.word	puck_construction_plan
  90 0044 00000000 		.word	current_stage
  91              		.cfi_endproc
  92              	.LFE64:
  93              		.size	armMoving, .-armMoving
  94              		.section	.text.moveUntilPuck,"ax",%progbits
  95              		.align	2
  96              		.global	moveUntilPuck
  97              		.thumb
  98              		.thumb_func
  99              		.type	moveUntilPuck, %function
 100              	moveUntilPuck:
 101              	.LFB66:
  63:navigation.c  **** 
  64:navigation.c  **** void checkHoldingPuck(void) {
  65:navigation.c  ****     // This function will check if we are holding a puck after having attempted to pick up a puck,
  66:navigation.c  ****     // if we are not holding a puck, it will translate to the left or right, and then attempt to pi
  67:navigation.c  ****     // the puck again 
  68:navigation.c  ****     int colour_check = colourSensingOutput();
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cc92bABD.s 			page 4


  69:navigation.c  ****     
  70:navigation.c  ****     if (colour_check == BLANK) {
  71:navigation.c  ****         // Reattempt to pick up the puck
  72:navigation.c  ****         //straightAdjustSensor(FRONT_MIDDLE);
  73:navigation.c  ****         moveUntilPuck(CLAW_GROUND_ALGORITHM);       // This may be the wrong algorithm, 
  74:navigation.c  ****                                                     // as the claw is fairly above the ground now
  75:navigation.c  ****     }
  76:navigation.c  ****     else {
  77:navigation.c  ****         // still have a puck, can continue as normal
  78:navigation.c  ****         return;
  79:navigation.c  ****     }
  80:navigation.c  ****     
  81:navigation.c  **** }
  82:navigation.c  **** 
  83:navigation.c  **** 
  84:navigation.c  **** void moveUntilPuck(int algorithm) {
 102              		.loc 1 84 0
 103              		.cfi_startproc
 104              		@ args = 0, pretend = 0, frame = 0
 105              		@ frame_needed = 0, uses_anonymous_args = 0
 106              	.LVL10:
 107 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 108              		.cfi_def_cfa_offset 32
 109              		.cfi_offset 3, -32
 110              		.cfi_offset 4, -28
 111              		.cfi_offset 5, -24
 112              		.cfi_offset 6, -20
 113              		.cfi_offset 7, -16
 114              		.cfi_offset 8, -12
 115              		.cfi_offset 9, -8
 116              		.cfi_offset 14, -4
 117 0004 0446     		mov	r4, r0
 118              	.LVL11:
  85:navigation.c  ****       
  86:navigation.c  ****     int puck_detect = 0;
  87:navigation.c  ****     
  88:navigation.c  ****     int speed = 70;
  89:navigation.c  ****     
  90:navigation.c  ****     int count_right;
  91:navigation.c  ****     int count_left;
  92:navigation.c  ****     int speed_left = speed;
  93:navigation.c  ****     int speed_right = speed;
  94:navigation.c  ****     
  95:navigation.c  ****     Motor_Left_Control_Write(0);        // move FORWARD
 119              		.loc 1 95 0
 120 0006 0020     		movs	r0, #0
 121              	.LVL12:
 122 0008 FFF7FEFF 		bl	Motor_Left_Control_Write
 123              	.LVL13:
  96:navigation.c  ****     Motor_Right_Control_Write(0);
 124              		.loc 1 96 0
 125 000c 0020     		movs	r0, #0
 126 000e FFF7FEFF 		bl	Motor_Right_Control_Write
 127              	.LVL14:
  97:navigation.c  ****     
  98:navigation.c  ****     Motor_Left_Driver_Wakeup();
 128              		.loc 1 98 0
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cc92bABD.s 			page 5


 129 0012 FFF7FEFF 		bl	Motor_Left_Driver_Wakeup
 130              	.LVL15:
  99:navigation.c  ****     Motor_Left_Driver_WriteCompare(speed_left);
 131              		.loc 1 99 0
 132 0016 4620     		movs	r0, #70
 133 0018 FFF7FEFF 		bl	Motor_Left_Driver_WriteCompare
 134              	.LVL16:
 100:navigation.c  ****     Motor_Right_Driver_Wakeup();
 135              		.loc 1 100 0
 136 001c FFF7FEFF 		bl	Motor_Right_Driver_Wakeup
 137              	.LVL17:
 101:navigation.c  ****     Motor_Right_Driver_WriteCompare(speed_right);
 138              		.loc 1 101 0
 139 0020 4620     		movs	r0, #70
 140 0022 FFF7FEFF 		bl	Motor_Right_Driver_WriteCompare
 141              	.LVL18:
 102:navigation.c  ****     
 103:navigation.c  ****     armOpen();                                  // ensures the arm is open
 142              		.loc 1 103 0
 143 0026 FFF7FEFF 		bl	armOpen
 144              	.LVL19:
 104:navigation.c  ****     control_photodiode_Write(CLAW_SENSING);     //ENSURES that it is the claw that is sensing
 145              		.loc 1 104 0
 146 002a 0120     		movs	r0, #1
 147 002c FFF7FEFF 		bl	control_photodiode_Write
 148              	.LVL20:
 105:navigation.c  ****     colour_sensing_algorithm = algorithm;       
 149              		.loc 1 105 0
 150 0030 244B     		ldr	r3, .L17
 151 0032 1C60     		str	r4, [r3]
  93:navigation.c  ****     
 152              		.loc 1 93 0
 153 0034 4FF04608 		mov	r8, #70
  92:navigation.c  ****     int speed_right = speed;
 154              		.loc 1 92 0
 155 0038 C146     		mov	r9, r8
  86:navigation.c  ****     
 156              		.loc 1 86 0
 157 003a 0026     		movs	r6, #0
 106:navigation.c  ****     
 107:navigation.c  ****     while (puck_detect == 0) 
 158              		.loc 1 107 0
 159 003c 2EE0     		b	.L10
 160              	.LVL21:
 161              	.L13:
 108:navigation.c  ****     {
 109:navigation.c  ****         count_right = Motor_Right_Decoder_GetCounter();        
 162              		.loc 1 109 0
 163 003e FFF7FEFF 		bl	Motor_Right_Decoder_GetCounter
 164              	.LVL22:
 165 0042 0446     		mov	r4, r0
 166              	.LVL23:
 110:navigation.c  ****         count_left = Motor_Left_Decoder_GetCounter();
 167              		.loc 1 110 0
 168 0044 FFF7FEFF 		bl	Motor_Left_Decoder_GetCounter
 169              	.LVL24:
 170 0048 0546     		mov	r5, r0
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cc92bABD.s 			page 6


 171              	.LVL25:
 111:navigation.c  ****         puck_detect = colourSensingOutput();
 172              		.loc 1 111 0
 173 004a FFF7FEFF 		bl	colourSensingOutput
 174              	.LVL26:
 175 004e 0646     		mov	r6, r0
 176              	.LVL27:
 112:navigation.c  ****         CyDelay(10);
 177              		.loc 1 112 0
 178 0050 0A20     		movs	r0, #10
 179              	.LVL28:
 180 0052 FFF7FEFF 		bl	CyDelay
 181              	.LVL29:
 113:navigation.c  ****         sprintf(output, "%i \t", puck_detect);       
 182              		.loc 1 113 0
 183 0056 1C4F     		ldr	r7, .L17+4
 184 0058 3246     		mov	r2, r6
 185 005a 1C49     		ldr	r1, .L17+8
 186 005c 3846     		mov	r0, r7
 187 005e FFF7FEFF 		bl	sprintf
 188              	.LVL30:
 114:navigation.c  ****         UART_1_PutString(output);
 189              		.loc 1 114 0
 190 0062 3846     		mov	r0, r7
 191 0064 FFF7FEFF 		bl	UART_1_PutString
 192              	.LVL31:
 115:navigation.c  ****         
 116:navigation.c  ****         // DRIFT CORRECTION: 
 117:navigation.c  ****         
 118:navigation.c  ****         if (abs(count_left) > abs(count_right)) {
 193              		.loc 1 118 0
 194 0068 85EAE570 		eor	r0, r5, r5, asr #31
 195 006c A0EBE570 		sub	r0, r0, r5, asr #31
 196 0070 84EAE473 		eor	r3, r4, r4, asr #31
 197 0074 A3EBE473 		sub	r3, r3, r4, asr #31
 198 0078 9842     		cmp	r0, r3
 199 007a 03DD     		ble	.L11
 119:navigation.c  ****             speed_left = speed - ADJUST;
 120:navigation.c  ****             speed_right = speed + ADJUST;
 200              		.loc 1 120 0
 201 007c 4FF04A08 		mov	r8, #74
 202              	.LVL32:
 119:navigation.c  ****             speed_left = speed - ADJUST;
 203              		.loc 1 119 0
 204 0080 4FF04209 		mov	r9, #66
 205              	.LVL33:
 206              	.L11:
 121:navigation.c  ****         }
 122:navigation.c  ****         if (abs(count_right) > abs(count_left)) {
 207              		.loc 1 122 0
 208 0084 9842     		cmp	r0, r3
 209 0086 03DA     		bge	.L12
 123:navigation.c  ****             speed_right = speed - ADJUST;             
 210              		.loc 1 123 0
 211 0088 4FF04208 		mov	r8, #66
 212              	.LVL34:
 124:navigation.c  ****             speed_left = speed + ADJUST;
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cc92bABD.s 			page 7


 213              		.loc 1 124 0
 214 008c 4FF04A09 		mov	r9, #74
 215              	.LVL35:
 216              	.L12:
 125:navigation.c  ****         } 
 126:navigation.c  ****         Motor_Left_Driver_WriteCompare(speed_left);
 217              		.loc 1 126 0
 218 0090 4846     		mov	r0, r9
 219 0092 FFF7FEFF 		bl	Motor_Left_Driver_WriteCompare
 220              	.LVL36:
 127:navigation.c  ****         Motor_Right_Driver_WriteCompare(speed_right);        
 221              		.loc 1 127 0
 222 0096 4046     		mov	r0, r8
 223 0098 FFF7FEFF 		bl	Motor_Right_Driver_WriteCompare
 224              	.LVL37:
 225              	.L10:
 107:navigation.c  ****     {
 226              		.loc 1 107 0
 227 009c 002E     		cmp	r6, #0
 228 009e CED0     		beq	.L13
 128:navigation.c  ****     }
 129:navigation.c  ****     
 130:navigation.c  ****     Motor_Left_Decoder_SetCounter(0);
 229              		.loc 1 130 0
 230 00a0 0020     		movs	r0, #0
 231 00a2 FFF7FEFF 		bl	Motor_Left_Decoder_SetCounter
 232              	.LVL38:
 131:navigation.c  ****     Motor_Right_Decoder_SetCounter(0);
 233              		.loc 1 131 0
 234 00a6 0020     		movs	r0, #0
 235 00a8 FFF7FEFF 		bl	Motor_Right_Decoder_SetCounter
 236              	.LVL39:
 132:navigation.c  ****     
 133:navigation.c  ****     Motor_Left_Driver_Sleep();
 237              		.loc 1 133 0
 238 00ac FFF7FEFF 		bl	Motor_Left_Driver_Sleep
 239              	.LVL40:
 134:navigation.c  ****     Motor_Right_Driver_Sleep();
 240              		.loc 1 134 0
 241 00b0 FFF7FEFF 		bl	Motor_Right_Driver_Sleep
 242              	.LVL41:
 135:navigation.c  ****     
 136:navigation.c  ****     moveDynamic(37, 100, FALSE);
 243              		.loc 1 136 0
 244 00b4 0022     		movs	r2, #0
 245 00b6 6421     		movs	r1, #100
 246 00b8 2520     		movs	r0, #37
 247 00ba FFF7FEFF 		bl	moveDynamic
 248              	.LVL42:
 249 00be BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 250              	.LVL43:
 251              	.L18:
 252 00c2 00BF     		.align	2
 253              	.L17:
 254 00c4 00000000 		.word	colour_sensing_algorithm
 255 00c8 00000000 		.word	output
 256 00cc 00000000 		.word	.LC0
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cc92bABD.s 			page 8


 257              		.cfi_endproc
 258              	.LFE66:
 259              		.size	moveUntilPuck, .-moveUntilPuck
 260              		.section	.text.checkHoldingPuck,"ax",%progbits
 261              		.align	2
 262              		.global	checkHoldingPuck
 263              		.thumb
 264              		.thumb_func
 265              		.type	checkHoldingPuck, %function
 266              	checkHoldingPuck:
 267              	.LFB65:
  64:navigation.c  ****     // This function will check if we are holding a puck after having attempted to pick up a puck,
 268              		.loc 1 64 0
 269              		.cfi_startproc
 270              		@ args = 0, pretend = 0, frame = 0
 271              		@ frame_needed = 0, uses_anonymous_args = 0
 272 0000 08B5     		push	{r3, lr}
 273              		.cfi_def_cfa_offset 8
 274              		.cfi_offset 3, -8
 275              		.cfi_offset 14, -4
  68:navigation.c  ****     
 276              		.loc 1 68 0
 277 0002 FFF7FEFF 		bl	colourSensingOutput
 278              	.LVL44:
  70:navigation.c  ****         // Reattempt to pick up the puck
 279              		.loc 1 70 0
 280 0006 10B9     		cbnz	r0, .L19
  73:navigation.c  ****                                                     // as the claw is fairly above the ground now
 281              		.loc 1 73 0
 282 0008 0520     		movs	r0, #5
 283              	.LVL45:
 284 000a FFF7FEFF 		bl	moveUntilPuck
 285              	.LVL46:
 286              	.L19:
 287 000e 08BD     		pop	{r3, pc}
 288              		.cfi_endproc
 289              	.LFE65:
 290              		.size	checkHoldingPuck, .-checkHoldingPuck
 291              		.section	.text.changeOrientation,"ax",%progbits
 292              		.align	2
 293              		.global	changeOrientation
 294              		.thumb
 295              		.thumb_func
 296              		.type	changeOrientation, %function
 297              	changeOrientation:
 298              	.LFB68:
 137:navigation.c  **** }
 138:navigation.c  **** 
 139:navigation.c  **** 
 140:navigation.c  **** 
 141:navigation.c  **** void moveUntil(int distance_set, int direction, int less_or_great, int ultrasonic_sensor, int speed
 142:navigation.c  ****     // This function will move until given a set distance (in mm)
 143:navigation.c  ****     // Can indicate the direction (FORWARD or BACKWARD)
 144:navigation.c  ****     // whether you want it to move until it is greater or less than the set distance
 145:navigation.c  ****     // which ultrasonic_sensor you want to use
 146:navigation.c  ****     // the speed you want to move
 147:navigation.c  ****     // can activate_safety (TRUE or FALSE) so that it will always stop before it hits a wall (movin
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cc92bABD.s 			page 9


 148:navigation.c  ****     
 149:navigation.c  ****     // safetyDistanceCheck();        // CALL this if you want to recalibrate
 150:navigation.c  ****     
 151:navigation.c  ****     int count_left;                 // counts the encoder values
 152:navigation.c  ****     int count_right;
 153:navigation.c  ****     int speed_left = speed;         // the set speed of the motors
 154:navigation.c  ****     int speed_right = speed;
 155:navigation.c  ****     int front_sensor_flag = FALSE;
 156:navigation.c  ****                                   // the ultrasonic sensor we will be using 
 157:navigation.c  ****     int distance_sensor;            // the measured distance of the sensor
 158:navigation.c  ****     
 159:navigation.c  ****     int old_count = -(SAFETY_MARGIN)*ENCODER_MULTIPLIER*0.75 - 1000;  // used in the old failsafe t
 160:navigation.c  ****                                                         // will enter the failsafe check straight a
 161:navigation.c  ****     int emergency_exit = FALSE;
 162:navigation.c  ****     
 163:navigation.c  ****     // Check if we are closer to or further away from the side wall: 
 164:navigation.c  ****     /*
 165:navigation.c  ****         int side_prox_sensor;
 166:navigation.c  ****         int initial_side_distance;
 167:navigation.c  ****         distanceSensor(SIDE_LEFT);
 168:navigation.c  ****         CyDelay(50);
 169:navigation.c  ****         distanceSensor(SIDE_RIGHT);
 170:navigation.c  ****         CyDelay(50);
 171:navigation.c  ****         if (sensor_distances[SIDE_LEFT] > sensor_distances[SIDE_RIGHT]) {
 172:navigation.c  ****             side_prox_sensor = SIDE_RIGHT; 
 173:navigation.c  ****             initial_side_distance = sensor_distances[SIDE_RIGHT];
 174:navigation.c  ****         }
 175:navigation.c  ****         else { side_prox_sensor = SIDE_LEFT; initial_side_distance = sensor_distances[SIDE_LEFT]; }
 176:navigation.c  ****     */
 177:navigation.c  ****     // Setting the direction 
 178:navigation.c  ****     if (direction == FORWARD) { 
 179:navigation.c  ****         Motor_Left_Control_Write(0); 
 180:navigation.c  ****         Motor_Right_Control_Write(0); 
 181:navigation.c  ****     }
 182:navigation.c  ****     if (direction == BACKWARD) {
 183:navigation.c  ****         Motor_Left_Control_Write(1); 
 184:navigation.c  ****         Motor_Right_Control_Write(1);
 185:navigation.c  ****     }
 186:navigation.c  ****     
 187:navigation.c  ****     
 188:navigation.c  ****     //if (ultrasonic_sensor == FRONT_SENSORS) {ultrasonic_sensor = FRONT_LEFT; front_sensor_flag = 
 189:navigation.c  ****     
 190:navigation.c  ****     // This ensures that the initial sensing value is good 
 191:navigation.c  ****     sensor_distances[ultrasonic_sensor] = ARENA_WIDTH + 100;             // Enters the while loop
 192:navigation.c  ****     while (sensor_distances[ultrasonic_sensor] > ARENA_WIDTH) {          // protects against dodgy 
 193:navigation.c  ****         distanceSensor(ultrasonic_sensor);
 194:navigation.c  ****         CyDelay(50);
 195:navigation.c  ****         distance_sensor = sensor_distances[ultrasonic_sensor];   // checks the distance measured by
 196:navigation.c  ****         sprintf(output, "%d \t", distance_sensor);       
 197:navigation.c  ****         UART_1_PutString(output);
 198:navigation.c  ****     }
 199:navigation.c  ****     
 200:navigation.c  ****     //if (front_sensor_flag == TRUE) {ultrasonic_sensor = FRONT_SENSORS; front_sensor_flag = FALSE;
 201:navigation.c  ****     
 202:navigation.c  ****     Motor_Left_Driver_Wakeup();
 203:navigation.c  ****     Motor_Left_Driver_WriteCompare(speed_left);
 204:navigation.c  ****     Motor_Right_Driver_Wakeup();
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cc92bABD.s 			page 10


 205:navigation.c  ****     Motor_Right_Driver_WriteCompare(speed_right);
 206:navigation.c  ****     
 207:navigation.c  ****     if (less_or_great == GREATER_THAN) {                                         // if distance_set
 208:navigation.c  ****         //UART_1_PutString("\n GREATER THAN LOOP: \n");
 209:navigation.c  ****         while (distance_sensor < abs(distance_set) && emergency_exit == FALSE) {               // T
 210:navigation.c  ****             
 211:navigation.c  ****             count_left = Motor_Left_Decoder_GetCounter();
 212:navigation.c  ****             count_right = Motor_Right_Decoder_GetCounter();
 213:navigation.c  ****             
 214:navigation.c  ****             // DRIFT CORRECTION:
 215:navigation.c  ****             if (abs(count_left) > abs(count_right)) {
 216:navigation.c  ****                 speed_left = speed - ADJUST;
 217:navigation.c  ****                 speed_right = speed + ADJUST;
 218:navigation.c  ****             }        
 219:navigation.c  ****             if (abs(count_right) > abs(count_left)) {
 220:navigation.c  ****                 speed_right = speed - ADJUST;              
 221:navigation.c  ****                 speed_left = speed + ADJUST;
 222:navigation.c  ****             }
 223:navigation.c  ****             // end of drift correction 
 224:navigation.c  ****             
 225:navigation.c  ****             Motor_Left_Driver_WriteCompare(speed_left);         // updates the driver speed
 226:navigation.c  ****             Motor_Right_Driver_WriteCompare(speed_right);
 227:navigation.c  ****             
 228:navigation.c  ****             // When you want to do both front sensors: 
 229:navigation.c  ****             if (ultrasonic_sensor == FRONT_SENSORS && front_sensor_flag == TRUE) {
 230:navigation.c  ****                 distanceSensor(FRONT_LEFT);
 231:navigation.c  ****                 CyDelay(50);
 232:navigation.c  ****                 distance_sensor = sensor_distances[ultrasonic_sensor];   // checks the distance mea
 233:navigation.c  ****                 front_sensor_flag = FALSE;
 234:navigation.c  ****             }
 235:navigation.c  ****             else if (ultrasonic_sensor == FRONT_SENSORS && front_sensor_flag == FALSE) {
 236:navigation.c  ****                 distanceSensor(FRONT_RIGHT);
 237:navigation.c  ****                 CyDelay(50);
 238:navigation.c  ****                 distance_sensor = sensor_distances[ultrasonic_sensor];   // checks the distance mea
 239:navigation.c  ****                 front_sensor_flag = TRUE;
 240:navigation.c  ****             }
 241:navigation.c  ****             else {
 242:navigation.c  ****                 distanceSensor(ultrasonic_sensor);
 243:navigation.c  ****                 CyDelay(50);
 244:navigation.c  ****                 distance_sensor = sensor_distances[ultrasonic_sensor];   // checks the distance mea
 245:navigation.c  ****                 sprintf(output, "%d \t", distance_sensor);       
 246:navigation.c  ****                 UART_1_PutString(output);
 247:navigation.c  ****             }
 248:navigation.c  ****             
 249:navigation.c  ****             // FAILSAFES:
 250:navigation.c  ****                 // the failsafes will alternate between each other if failsafe is activated
 251:navigation.c  ****                 // they should both run within one safety margin
 252:navigation.c  ****                 // if you want to get rid of one of the failsafes, you will need to double the safe
 253:navigation.c  ****             int failsafe_alternator = TRUE;
 254:navigation.c  ****             
 255:navigation.c  ****             // FAILSAFE forward & backward
 256:navigation.c  ****             if (abs(count_left) > (old_count + (SAFETY_MARGIN)*ENCODER_MULTIPLIER*0.75 - 100) 
 257:navigation.c  ****                                         && failsafe_alternator == TRUE 
 258:navigation.c  ****                                         && activate_safety == TRUE){
 259:navigation.c  ****                 emergency_exit = failsafe(direction);
 260:navigation.c  ****                 old_count = count_left;
 261:navigation.c  ****                 //failsafe_alternator = FALSE;
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cc92bABD.s 			page 11


 262:navigation.c  ****             }
 263:navigation.c  ****                         
 264:navigation.c  ****             //  side sensors sensors
 265:navigation.c  ****             /*
 266:navigation.c  ****             if (abs(count_left) > (old_count + (SAFETY_MARGIN/2)*ENCODER_MULTIPLIER - 100)
 267:navigation.c  ****                                         && failsafe_alternator == FALSE 
 268:navigation.c  ****                                         && activate_safety == TRUE){
 269:navigation.c  ****                 failsafeSideSensors(side_prox_sensor, initial_side_distance);
 270:navigation.c  ****                 old_count = count_left;
 271:navigation.c  ****                 failsafe_alternator = TRUE;
 272:navigation.c  ****             }
 273:navigation.c  ****             */                            
 274:navigation.c  ****         } 
 275:navigation.c  ****     }
 276:navigation.c  ****     
 277:navigation.c  ****     if (less_or_great == LESS_THAN) {                                         // if distance_set is
 278:navigation.c  ****         //UART_1_PutString("\n LESS THAN LOOP: \n");
 279:navigation.c  ****         while (distance_sensor > abs(distance_set) && emergency_exit == FALSE){                    
 280:navigation.c  ****             
 281:navigation.c  ****             count_left = Motor_Left_Decoder_GetCounter();
 282:navigation.c  ****             count_right = Motor_Right_Decoder_GetCounter();
 283:navigation.c  ****             
 284:navigation.c  ****             // DRIFT CORRECTION:
 285:navigation.c  ****             if (abs(count_left) > abs(count_right)) {
 286:navigation.c  ****                 speed_left = speed - ADJUST;
 287:navigation.c  ****                 speed_right = speed + ADJUST;
 288:navigation.c  ****             }        
 289:navigation.c  ****             if (abs(count_right) > abs(count_left)) {
 290:navigation.c  ****                     speed_right = speed - ADJUST;              // If the speeds are equal, we decre
 291:navigation.c  ****                                                         // adjust tolerance 
 292:navigation.c  ****                     speed_left = speed + ADJUST;
 293:navigation.c  ****             }
 294:navigation.c  ****             // end of drift correction 
 295:navigation.c  ****             
 296:navigation.c  ****             Motor_Left_Driver_WriteCompare(speed_left);         // updates the driver speed
 297:navigation.c  ****             Motor_Right_Driver_WriteCompare(speed_right);
 298:navigation.c  ****             
 299:navigation.c  ****             distanceSensor(ultrasonic_sensor);
 300:navigation.c  ****             CyDelay(50);
 301:navigation.c  ****             distance_sensor = sensor_distances[ultrasonic_sensor];   // checks the distance measure
 302:navigation.c  ****             sprintf(output, "%d \t", distance_sensor);       
 303:navigation.c  ****             UART_1_PutString(output);
 304:navigation.c  ****             
 305:navigation.c  ****             // FAILSAFES:
 306:navigation.c  ****                 // the failsafes will alternate between each other if failsafe is activated
 307:navigation.c  ****                 // they should both run within one safety margin
 308:navigation.c  ****                 // if you want to get rid of one of the failsafes, you will need to double the safe
 309:navigation.c  ****             int failsafe_alternator = TRUE;
 310:navigation.c  ****             
 311:navigation.c  ****             // FAILSAFE forward & backward
 312:navigation.c  ****             if (abs(count_left) > (old_count + (SAFETY_MARGIN/2)*ENCODER_MULTIPLIER - 100) 
 313:navigation.c  ****                                         && failsafe_alternator == TRUE 
 314:navigation.c  ****                                         && activate_safety == TRUE){
 315:navigation.c  ****                 emergency_exit = failsafe(direction);
 316:navigation.c  ****                 old_count = count_left;
 317:navigation.c  ****                 //failsafe_alternator = FALSE;
 318:navigation.c  ****             }
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cc92bABD.s 			page 12


 319:navigation.c  ****                         
 320:navigation.c  ****             //  side sensors sensors
 321:navigation.c  ****             /*
 322:navigation.c  ****             if (abs(count_left) > (old_count + (SAFETY_MARGIN/2)*ENCODER_MULTIPLIER - 100)
 323:navigation.c  ****                                         && failsafe_alternator == FALSE 
 324:navigation.c  ****                                         && activate_safety == TRUE){
 325:navigation.c  ****                 failsafeSideSensors(side_prox_sensor, initial_side_distance);
 326:navigation.c  ****                 old_count = count_left;
 327:navigation.c  ****                 failsafe_alternator = TRUE;
 328:navigation.c  ****             }
 329:navigation.c  ****             */                            
 330:navigation.c  ****         } 
 331:navigation.c  ****     }
 332:navigation.c  ****     
 333:navigation.c  ****     
 334:navigation.c  ****     
 335:navigation.c  ****     //sprintf(output, "left motor: %d \n", count_left);       
 336:navigation.c  ****     //UART_1_PutString(output);
 337:navigation.c  ****     //sprintf(output, "right motor: %d \n", count_right);      
 338:navigation.c  ****     //UART_1_PutString(output);
 339:navigation.c  ****         
 340:navigation.c  ****     // final check of sensor:
 341:navigation.c  ****     distanceSensor(ultrasonic_sensor);
 342:navigation.c  ****     CyDelay(50);
 343:navigation.c  ****     distance_sensor = sensor_distances[ultrasonic_sensor];   // checks the distance measured by the
 344:navigation.c  ****     sprintf(output, "\n fin: %d \n", distance_sensor);    
 345:navigation.c  ****     UART_1_PutString(output);
 346:navigation.c  ****     
 347:navigation.c  ****     Motor_Left_Decoder_SetCounter(0);                       // RESET the decoders to 0
 348:navigation.c  ****     Motor_Right_Decoder_SetCounter(0);   
 349:navigation.c  ****     
 350:navigation.c  ****     Motor_Left_Driver_Sleep();              // Puts motors to sleep 
 351:navigation.c  ****     Motor_Right_Driver_Sleep();
 352:navigation.c  ****     
 353:navigation.c  **** }
 354:navigation.c  **** 
 355:navigation.c  **** void changeOrientation(int orientation_change, int speed) {
 299              		.loc 1 355 0
 300              		.cfi_startproc
 301              		@ args = 0, pretend = 0, frame = 0
 302              		@ frame_needed = 0, uses_anonymous_args = 0
 303              	.LVL47:
 304 0000 10B5     		push	{r4, lr}
 305              		.cfi_def_cfa_offset 8
 306              		.cfi_offset 4, -8
 307              		.cfi_offset 14, -4
 308 0002 0446     		mov	r4, r0
 356:navigation.c  ****     //define NORTH 0
 357:navigation.c  ****     //define EAST 1
 358:navigation.c  ****     //define SOUTH 2
 359:navigation.c  ****     //define WEST 3
 360:navigation.c  ****     int degree_change;
 361:navigation.c  ****     
 362:navigation.c  ****     // Incorporate some failsafes so that it turns in a direction that won't hit anything:
 363:navigation.c  ****         // failsafes:
 364:navigation.c  ****     
 365:navigation.c  ****     int change = orientation_change - internal_orientation;
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cc92bABD.s 			page 13


 309              		.loc 1 365 0
 310 0004 0B4B     		ldr	r3, .L26
 311 0006 1868     		ldr	r0, [r3]
 312              	.LVL48:
 313 0008 201A     		subs	r0, r4, r0
 314              	.LVL49:
 366:navigation.c  ****     degree_change = 90*change;                                  // converts the amount of degrees w
 315              		.loc 1 366 0
 316 000a 5A23     		movs	r3, #90
 317 000c 03FB00F0 		mul	r0, r3, r0
 318              	.LVL50:
 367:navigation.c  ****     
 368:navigation.c  ****     if (degree_change == 270 || degree_change == -270)
 319              		.loc 1 368 0
 320 0010 B0F5877F 		cmp	r0, #270
 321 0014 02D0     		beq	.L23
 322              		.loc 1 368 0 is_stmt 0 discriminator 1
 323 0016 10F5877F 		cmn	r0, #270
 324 001a 04D1     		bne	.L24
 325              	.L23:
 369:navigation.c  ****     {
 370:navigation.c  ****         degree_change = degree_change/3;        
 326              		.loc 1 370 0 is_stmt 1
 327 001c 064B     		ldr	r3, .L26+4
 328 001e 83FB0023 		smull	r2, r3, r3, r0
 329              	.LVL51:
 371:navigation.c  ****         degree_change = -1*degree_change;       
 330              		.loc 1 371 0
 331 0022 C3EBE070 		rsb	r0, r3, r0, asr #31
 332              	.LVL52:
 333              	.L24:
 372:navigation.c  ****     }
 373:navigation.c  ****     
 374:navigation.c  ****     moveSwivel(degree_change, speed, TRUE);
 334              		.loc 1 374 0
 335 0026 0122     		movs	r2, #1
 336 0028 FFF7FEFF 		bl	moveSwivel
 337              	.LVL53:
 375:navigation.c  ****     internal_orientation = orientation_change;  
 338              		.loc 1 375 0
 339 002c 014B     		ldr	r3, .L26
 340 002e 1C60     		str	r4, [r3]
 341 0030 10BD     		pop	{r4, pc}
 342              	.LVL54:
 343              	.L27:
 344 0032 00BF     		.align	2
 345              	.L26:
 346 0034 00000000 		.word	internal_orientation
 347 0038 56555555 		.word	1431655766
 348              		.cfi_endproc
 349              	.LFE68:
 350              		.size	changeOrientation, .-changeOrientation
 351              		.section	.text.translateUntil,"ax",%progbits
 352              		.align	2
 353              		.global	translateUntil
 354              		.thumb
 355              		.thumb_func
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cc92bABD.s 			page 14


 356              		.type	translateUntil, %function
 357              	translateUntil:
 358              	.LFB69:
 376:navigation.c  **** }
 377:navigation.c  **** 
 378:navigation.c  **** void translateUntil(int distance_set, int direction, int less_or_great, int ultrasonic_sensor, int 
 359              		.loc 1 378 0
 360              		.cfi_startproc
 361              		@ args = 4, pretend = 0, frame = 0
 362              		@ frame_needed = 0, uses_anonymous_args = 0
 363              	.LVL55:
 364 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 365              		.cfi_def_cfa_offset 32
 366              		.cfi_offset 3, -32
 367              		.cfi_offset 4, -28
 368              		.cfi_offset 5, -24
 369              		.cfi_offset 6, -20
 370              		.cfi_offset 7, -16
 371              		.cfi_offset 8, -12
 372              		.cfi_offset 9, -8
 373              		.cfi_offset 14, -4
 374 0004 8046     		mov	r8, r0
 375 0006 0F46     		mov	r7, r1
 376 0008 9146     		mov	r9, r2
 377 000a 1C46     		mov	r4, r3
 378              	.LVL56:
 379:navigation.c  ****     // distance_set is in millimeteres
 380:navigation.c  ****     // will check the front two ultrasonics 
 381:navigation.c  ****     // will move until distance specified in function 
 382:navigation.c  ****     
 383:navigation.c  ****     // direction can be left or right
 384:navigation.c  ****     
 385:navigation.c  ****     int count_left;                 // counts the encoder values
 386:navigation.c  ****     int count_right;
 387:navigation.c  ****     int old_count = -SAFETY_MARGIN*ENCODER_MULTIPLIER;   // used in the old failsafe to check how m
 388:navigation.c  ****                                                         // will enter the failsafe straight away du
 389:navigation.c  ****     int speed_left = speed;         // the set speed of the motors
 390:navigation.c  ****     int speed_right = speed;
 391:navigation.c  ****     //int emergency_exit = FALSE;     // BREAKS out of the code in an emergency 
 392:navigation.c  ****                                   // the ultrasonic sensor we will be using 
 393:navigation.c  ****     int distance_sensor;            // the measured distance of the sensor
 394:navigation.c  **** 
 395:navigation.c  ****     
 396:navigation.c  ****     sensor_distances[ultrasonic_sensor] = ARENA_WIDTH + 100;             // So it will enter the wh
 379              		.loc 1 396 0
 380 000c 40F21452 		movw	r2, #1300
 381              	.LVL57:
 382 0010 484B     		ldr	r3, .L42
 383              	.LVL58:
 384 0012 43F82420 		str	r2, [r3, r4, lsl #2]
 397:navigation.c  ****     while (sensor_distances[ultrasonic_sensor] > ARENA_WIDTH) {          // protects against dodgy 
 385              		.loc 1 397 0
 386 0016 11E0     		b	.L29
 387              	.LVL59:
 388              	.L30:
 398:navigation.c  ****         distanceSensor(ultrasonic_sensor);
 389              		.loc 1 398 0
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cc92bABD.s 			page 15


 390 0018 2046     		mov	r0, r4
 391 001a FFF7FEFF 		bl	distanceSensor
 392              	.LVL60:
 399:navigation.c  ****         CyDelay(50);
 393              		.loc 1 399 0
 394 001e 3220     		movs	r0, #50
 395 0020 FFF7FEFF 		bl	CyDelay
 396              	.LVL61:
 400:navigation.c  ****         distance_sensor = sensor_distances[ultrasonic_sensor];   // checks the distance measured by
 397              		.loc 1 400 0
 398 0024 434B     		ldr	r3, .L42
 399 0026 53F82450 		ldr	r5, [r3, r4, lsl #2]
 400              	.LVL62:
 401:navigation.c  ****         sprintf(output, "%d \t", distance_sensor);       
 401              		.loc 1 401 0
 402 002a 434E     		ldr	r6, .L42+4
 403 002c 2A46     		mov	r2, r5
 404 002e 4349     		ldr	r1, .L42+8
 405 0030 3046     		mov	r0, r6
 406 0032 FFF7FEFF 		bl	sprintf
 407              	.LVL63:
 402:navigation.c  ****         UART_1_PutString(output);
 408              		.loc 1 402 0
 409 0036 3046     		mov	r0, r6
 410 0038 FFF7FEFF 		bl	UART_1_PutString
 411              	.LVL64:
 412              	.L29:
 397:navigation.c  ****         distanceSensor(ultrasonic_sensor);
 413              		.loc 1 397 0
 414 003c 3D4B     		ldr	r3, .L42
 415 003e 53F82430 		ldr	r3, [r3, r4, lsl #2]
 416 0042 B3F5966F 		cmp	r3, #1200
 417 0046 E7DC     		bgt	.L30
 403:navigation.c  ****     }
 404:navigation.c  ****     
 405:navigation.c  ****     //Motor_Left_Driver_Wakeup();
 406:navigation.c  ****     //Motor_Left_Driver_WriteCompare(speed_left);
 407:navigation.c  ****     //Motor_Right_Driver_Wakeup();
 408:navigation.c  ****     //Motor_Right_Driver_WriteCompare(speed_right);
 409:navigation.c  ****         
 410:navigation.c  ****     if (less_or_great == LESS_THAN) {                                         // if distance_set is
 418              		.loc 1 410 0
 419 0048 B9F1040F 		cmp	r9, #4
 420 004c 31D1     		bne	.L32
 421 004e 2AE0     		b	.L31
 422              	.L35:
 411:navigation.c  ****         while (distance_sensor > abs(distance_set)) {                // This adjusts for drift 
 412:navigation.c  ****             
 413:navigation.c  ****             UART_1_PutString("entering greater than\n");
 423              		.loc 1 413 0
 424 0050 3B48     		ldr	r0, .L42+12
 425 0052 FFF7FEFF 		bl	UART_1_PutString
 426              	.LVL65:
 414:navigation.c  ****             
 415:navigation.c  ****             count_left = Motor_Left_Decoder_GetCounter();
 427              		.loc 1 415 0
 428 0056 FFF7FEFF 		bl	Motor_Left_Decoder_GetCounter
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cc92bABD.s 			page 16


 429              	.LVL66:
 416:navigation.c  ****             count_right = Motor_Right_Decoder_GetCounter();
 430              		.loc 1 416 0
 431 005a FFF7FEFF 		bl	Motor_Right_Decoder_GetCounter
 432              	.LVL67:
 417:navigation.c  ****             
 418:navigation.c  ****             if (direction == LEFT) {
 433              		.loc 1 418 0
 434 005e 022F     		cmp	r7, #2
 435 0060 06D1     		bne	.L33
 419:navigation.c  ****                 translateMoveDynamic(-5, 7, speed, FALSE);      // This will translate to the left 
 436              		.loc 1 419 0
 437 0062 0023     		movs	r3, #0
 438 0064 089A     		ldr	r2, [sp, #32]
 439 0066 0721     		movs	r1, #7
 440 0068 6FF00400 		mvn	r0, #4
 441 006c FFF7FEFF 		bl	translateMoveDynamic
 442              	.LVL68:
 443              	.L33:
 420:navigation.c  ****             }
 421:navigation.c  ****             
 422:navigation.c  ****             if (direction == RIGHT) {
 444              		.loc 1 422 0
 445 0070 032F     		cmp	r7, #3
 446 0072 06D1     		bne	.L34
 423:navigation.c  ****                 translateMoveDynamic(5, -7, speed, FALSE);      // This will translate to the right
 447              		.loc 1 423 0
 448 0074 0023     		movs	r3, #0
 449 0076 089A     		ldr	r2, [sp, #32]
 450 0078 6FF00601 		mvn	r1, #6
 451 007c 0520     		movs	r0, #5
 452 007e FFF7FEFF 		bl	translateMoveDynamic
 453              	.LVL69:
 454              	.L34:
 424:navigation.c  ****             }
 425:navigation.c  ****                         
 426:navigation.c  ****             //Motor_Left_Driver_WriteCompare(speed_left);     // update the drivers
 427:navigation.c  ****             //Motor_Right_Driver_WriteCompare(speed_right);
 428:navigation.c  ****             
 429:navigation.c  ****             distanceSensor(ultrasonic_sensor);
 455              		.loc 1 429 0
 456 0082 2046     		mov	r0, r4
 457 0084 FFF7FEFF 		bl	distanceSensor
 458              	.LVL70:
 430:navigation.c  ****             CyDelay(50);
 459              		.loc 1 430 0
 460 0088 3220     		movs	r0, #50
 461 008a FFF7FEFF 		bl	CyDelay
 462              	.LVL71:
 431:navigation.c  ****             //distanceCheckOne(ultrasonic_sensor);                            // checks the distanc
 432:navigation.c  ****             distance_sensor = sensor_distances[ultrasonic_sensor];   // checks the distance measure
 463              		.loc 1 432 0
 464 008e 294B     		ldr	r3, .L42
 465 0090 53F82450 		ldr	r5, [r3, r4, lsl #2]
 466              	.LVL72:
 433:navigation.c  ****             sprintf(output, "%d \t", distance_sensor);       
 467              		.loc 1 433 0
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cc92bABD.s 			page 17


 468 0094 284E     		ldr	r6, .L42+4
 469 0096 2A46     		mov	r2, r5
 470 0098 2849     		ldr	r1, .L42+8
 471 009a 3046     		mov	r0, r6
 472 009c FFF7FEFF 		bl	sprintf
 473              	.LVL73:
 434:navigation.c  ****             UART_1_PutString(output);
 474              		.loc 1 434 0
 475 00a0 3046     		mov	r0, r6
 476 00a2 FFF7FEFF 		bl	UART_1_PutString
 477              	.LVL74:
 478              	.L31:
 411:navigation.c  ****             
 479              		.loc 1 411 0
 480 00a6 88EAE873 		eor	r3, r8, r8, asr #31
 481 00aa A3EBE873 		sub	r3, r3, r8, asr #31
 482 00ae 9D42     		cmp	r5, r3
 483 00b0 CEDC     		bgt	.L35
 484              	.L32:
 435:navigation.c  ****             
 436:navigation.c  ****            
 437:navigation.c  ****             
 438:navigation.c  ****         }
 439:navigation.c  ****     }
 440:navigation.c  ****     
 441:navigation.c  ****     if (less_or_great == GREATER_THAN){                                         // if distance_set 
 485              		.loc 1 441 0
 486 00b2 B9F1050F 		cmp	r9, #5
 487 00b6 31D1     		bne	.L37
 488 00b8 2AE0     		b	.L36
 489              	.L40:
 442:navigation.c  ****         while (distance_sensor < abs(distance_set)) {                // This adjusts for drift 
 443:navigation.c  ****             count_left = Motor_Left_Decoder_GetCounter();
 490              		.loc 1 443 0
 491 00ba FFF7FEFF 		bl	Motor_Left_Decoder_GetCounter
 492              	.LVL75:
 444:navigation.c  ****             count_right = Motor_Right_Decoder_GetCounter();
 493              		.loc 1 444 0
 494 00be FFF7FEFF 		bl	Motor_Right_Decoder_GetCounter
 495              	.LVL76:
 445:navigation.c  ****             
 446:navigation.c  ****             UART_1_PutString("entering less than\n");
 496              		.loc 1 446 0
 497 00c2 2048     		ldr	r0, .L42+16
 498 00c4 FFF7FEFF 		bl	UART_1_PutString
 499              	.LVL77:
 447:navigation.c  **** 
 448:navigation.c  ****             if (direction == LEFT) {
 500              		.loc 1 448 0
 501 00c8 022F     		cmp	r7, #2
 502 00ca 06D1     		bne	.L38
 449:navigation.c  ****                 translateMoveDynamic(-5, 7, speed, FALSE);      // This will translate to the left 
 503              		.loc 1 449 0
 504 00cc 0023     		movs	r3, #0
 505 00ce 089A     		ldr	r2, [sp, #32]
 506 00d0 0721     		movs	r1, #7
 507 00d2 6FF00400 		mvn	r0, #4
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cc92bABD.s 			page 18


 508 00d6 FFF7FEFF 		bl	translateMoveDynamic
 509              	.LVL78:
 510              	.L38:
 450:navigation.c  ****             }
 451:navigation.c  ****             
 452:navigation.c  ****             if (direction == RIGHT) {
 511              		.loc 1 452 0
 512 00da 032F     		cmp	r7, #3
 513 00dc 06D1     		bne	.L39
 453:navigation.c  ****                 translateMoveDynamic(5, -7, speed, FALSE);      // This will translate to the right
 514              		.loc 1 453 0
 515 00de 0023     		movs	r3, #0
 516 00e0 089A     		ldr	r2, [sp, #32]
 517 00e2 6FF00601 		mvn	r1, #6
 518 00e6 0520     		movs	r0, #5
 519 00e8 FFF7FEFF 		bl	translateMoveDynamic
 520              	.LVL79:
 521              	.L39:
 454:navigation.c  ****             }
 455:navigation.c  ****             
 456:navigation.c  ****             //Motor_Left_Driver_WriteCompare(speed_left);         // update the drivers
 457:navigation.c  ****             //Motor_Right_Driver_WriteCompare(speed_right);
 458:navigation.c  ****             
 459:navigation.c  ****             distanceSensor(ultrasonic_sensor);
 522              		.loc 1 459 0
 523 00ec 2046     		mov	r0, r4
 524 00ee FFF7FEFF 		bl	distanceSensor
 525              	.LVL80:
 460:navigation.c  ****             CyDelay(50);
 526              		.loc 1 460 0
 527 00f2 3220     		movs	r0, #50
 528 00f4 FFF7FEFF 		bl	CyDelay
 529              	.LVL81:
 461:navigation.c  ****             
 462:navigation.c  ****             distance_sensor = sensor_distances[ultrasonic_sensor];   // checks the distance measure
 530              		.loc 1 462 0
 531 00f8 0E4B     		ldr	r3, .L42
 532 00fa 53F82450 		ldr	r5, [r3, r4, lsl #2]
 533              	.LVL82:
 463:navigation.c  ****             sprintf(output, "%d \t", distance_sensor);       
 534              		.loc 1 463 0
 535 00fe 0E4E     		ldr	r6, .L42+4
 536 0100 2A46     		mov	r2, r5
 537 0102 0E49     		ldr	r1, .L42+8
 538 0104 3046     		mov	r0, r6
 539 0106 FFF7FEFF 		bl	sprintf
 540              	.LVL83:
 464:navigation.c  ****             UART_1_PutString(output);
 541              		.loc 1 464 0
 542 010a 3046     		mov	r0, r6
 543 010c FFF7FEFF 		bl	UART_1_PutString
 544              	.LVL84:
 545              	.L36:
 442:navigation.c  ****             count_left = Motor_Left_Decoder_GetCounter();
 546              		.loc 1 442 0
 547 0110 88EAE873 		eor	r3, r8, r8, asr #31
 548 0114 A3EBE873 		sub	r3, r3, r8, asr #31
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cc92bABD.s 			page 19


 549 0118 9D42     		cmp	r5, r3
 550 011a CEDB     		blt	.L40
 551              	.L37:
 465:navigation.c  ****             
 466:navigation.c  ****         }
 467:navigation.c  ****     }
 468:navigation.c  ****     
 469:navigation.c  ****     //sprintf(output, "left motor: %d \n", count_left);       
 470:navigation.c  ****     //UART_1_PutString(output);
 471:navigation.c  ****     //sprintf(output, "right motor: %d \n", count_right);      
 472:navigation.c  ****     //UART_1_PutString(output);
 473:navigation.c  ****         
 474:navigation.c  ****     UART_1_PutString("exited loop");
 552              		.loc 1 474 0
 553 011c 0A48     		ldr	r0, .L42+20
 554 011e FFF7FEFF 		bl	UART_1_PutString
 555              	.LVL85:
 475:navigation.c  ****     
 476:navigation.c  ****     Motor_Left_Decoder_SetCounter(0);                       // RESET the decoders to 0
 556              		.loc 1 476 0
 557 0122 0020     		movs	r0, #0
 558 0124 FFF7FEFF 		bl	Motor_Left_Decoder_SetCounter
 559              	.LVL86:
 477:navigation.c  ****     Motor_Right_Decoder_SetCounter(0);   
 560              		.loc 1 477 0
 561 0128 0020     		movs	r0, #0
 562 012a FFF7FEFF 		bl	Motor_Right_Decoder_SetCounter
 563              	.LVL87:
 564 012e BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 565              	.LVL88:
 566              	.L43:
 567 0132 00BF     		.align	2
 568              	.L42:
 569 0134 00000000 		.word	sensor_distances
 570 0138 00000000 		.word	output
 571 013c 08000000 		.word	.LC1
 572 0140 10000000 		.word	.LC2
 573 0144 28000000 		.word	.LC3
 574 0148 3C000000 		.word	.LC4
 575              		.cfi_endproc
 576              	.LFE69:
 577              		.size	translateUntil, .-translateUntil
 578              		.section	.text.failsafe,"ax",%progbits
 579              		.align	2
 580              		.global	failsafe
 581              		.thumb
 582              		.thumb_func
 583              		.type	failsafe, %function
 584              	failsafe:
 585              	.LFB70:
 478:navigation.c  ****     
 479:navigation.c  ****     //Motor_Left_Driver_Sleep();              // Puts motors to sleep 
 480:navigation.c  ****     //Motor_Right_Driver_Sleep();
 481:navigation.c  ****     
 482:navigation.c  **** }
 483:navigation.c  **** 
 484:navigation.c  **** int failsafe(int direction) {
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cc92bABD.s 			page 20


 586              		.loc 1 484 0
 587              		.cfi_startproc
 588              		@ args = 0, pretend = 0, frame = 0
 589              		@ frame_needed = 0, uses_anonymous_args = 0
 590              	.LVL89:
 591 0000 10B5     		push	{r4, lr}
 592              		.cfi_def_cfa_offset 8
 593              		.cfi_offset 4, -8
 594              		.cfi_offset 14, -4
 485:navigation.c  ****     int check_distance;
 486:navigation.c  ****     
 487:navigation.c  ****     // SAFETY OVERRIDE:
 488:navigation.c  ****     if(safety_override == TRUE){
 595              		.loc 1 488 0
 596 0002 1C4B     		ldr	r3, .L52
 597 0004 1B68     		ldr	r3, [r3]
 598 0006 012B     		cmp	r3, #1
 599 0008 2DD0     		beq	.L48
 489:navigation.c  ****         return FALSE;
 490:navigation.c  ****     }
 491:navigation.c  ****     
 492:navigation.c  ****     // detecting direction:    
 493:navigation.c  ****     if (direction == BACKWARD) {
 600              		.loc 1 493 0
 601 000a A0B9     		cbnz	r0, .L46
 494:navigation.c  ****         distanceSensor(BACK);
 602              		.loc 1 494 0
 603 000c 0420     		movs	r0, #4
 604              	.LVL90:
 605 000e FFF7FEFF 		bl	distanceSensor
 606              	.LVL91:
 495:navigation.c  ****         CyDelay(50);
 607              		.loc 1 495 0
 608 0012 3220     		movs	r0, #50
 609 0014 FFF7FEFF 		bl	CyDelay
 610              	.LVL92:
 496:navigation.c  ****         
 497:navigation.c  ****         check_distance = sensor_distances[BACK];   // checks the distance measured by the ultrasoni
 611              		.loc 1 497 0
 612 0018 174B     		ldr	r3, .L52+4
 613 001a 1A69     		ldr	r2, [r3, #16]
 614              	.LVL93:
 498:navigation.c  ****         if (check_distance < SAFETY_MARGIN && check_distance > 0) { 
 615              		.loc 1 498 0
 616 001c 531E     		subs	r3, r2, #1
 617 001e 532B     		cmp	r3, #83
 618 0020 23D8     		bhi	.L49
 499:navigation.c  ****             sprintf(output, "SAFETY MARGIN ACTIVATED @ %d\n", check_distance);      
 619              		.loc 1 499 0
 620 0022 164C     		ldr	r4, .L52+8
 621 0024 1649     		ldr	r1, .L52+12
 622 0026 2046     		mov	r0, r4
 623 0028 FFF7FEFF 		bl	sprintf
 624              	.LVL94:
 500:navigation.c  ****             UART_1_PutString(output); 
 625              		.loc 1 500 0
 626 002c 2046     		mov	r0, r4
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cc92bABD.s 			page 21


 627 002e FFF7FEFF 		bl	UART_1_PutString
 628              	.LVL95:
 501:navigation.c  ****             return TRUE; 
 629              		.loc 1 501 0
 630 0032 0120     		movs	r0, #1
 631 0034 10BD     		pop	{r4, pc}
 632              	.LVL96:
 633              	.L46:
 502:navigation.c  ****         }
 503:navigation.c  ****         else { return FALSE; }
 504:navigation.c  ****     }
 505:navigation.c  ****     else if (direction == FORWARD) {
 634              		.loc 1 505 0
 635 0036 0128     		cmp	r0, #1
 636 0038 14D1     		bne	.L47
 506:navigation.c  ****         distanceSensor(FRONT_LEFT);
 637              		.loc 1 506 0
 638 003a 0020     		movs	r0, #0
 639              	.LVL97:
 640 003c FFF7FEFF 		bl	distanceSensor
 641              	.LVL98:
 507:navigation.c  ****         CyDelay(50);
 642              		.loc 1 507 0
 643 0040 3220     		movs	r0, #50
 644 0042 FFF7FEFF 		bl	CyDelay
 645              	.LVL99:
 508:navigation.c  ****         //distanceSensor(FRONT_RIGHT);      // May need to add this in of front left sensor isnt en
 509:navigation.c  ****         //CyDelay(50);
 510:navigation.c  ****         
 511:navigation.c  ****         check_distance = sensor_distances[FRONT_LEFT];   // checks the distance measured by the ult
 646              		.loc 1 511 0
 647 0046 0C4B     		ldr	r3, .L52+4
 648 0048 1A68     		ldr	r2, [r3]
 649              	.LVL100:
 512:navigation.c  ****         if (check_distance < SAFETY_MARGIN && check_distance > 0) { 
 650              		.loc 1 512 0
 651 004a 531E     		subs	r3, r2, #1
 652 004c 532B     		cmp	r3, #83
 653 004e 0ED8     		bhi	.L50
 513:navigation.c  ****             sprintf(output, "SAFETY MARGIN ACTIVATED @ %d\n", check_distance);      
 654              		.loc 1 513 0
 655 0050 0A4C     		ldr	r4, .L52+8
 656 0052 0B49     		ldr	r1, .L52+12
 657 0054 2046     		mov	r0, r4
 658 0056 FFF7FEFF 		bl	sprintf
 659              	.LVL101:
 514:navigation.c  ****             UART_1_PutString(output); 
 660              		.loc 1 514 0
 661 005a 2046     		mov	r0, r4
 662 005c FFF7FEFF 		bl	UART_1_PutString
 663              	.LVL102:
 515:navigation.c  ****             return TRUE; 
 664              		.loc 1 515 0
 665 0060 0120     		movs	r0, #1
 666 0062 10BD     		pop	{r4, pc}
 667              	.LVL103:
 668              	.L47:
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cc92bABD.s 			page 22


 669              	.LVL104:
 516:navigation.c  ****         }
 517:navigation.c  ****         else { return FALSE; }
 518:navigation.c  ****     }
 519:navigation.c  ****     
 520:navigation.c  ****     // detecting side sensor usage: 
 521:navigation.c  ****     
 522:navigation.c  ****     
 523:navigation.c  ****     
 524:navigation.c  ****     // Considerations:
 525:navigation.c  ****         // we may not want this failsafe enabled in some cases
 526:navigation.c  ****     
 527:navigation.c  **** }
 670              		.loc 1 527 0
 671 0064 10BD     		pop	{r4, pc}
 672              	.LVL105:
 673              	.L48:
 489:navigation.c  ****     }
 674              		.loc 1 489 0
 675 0066 0020     		movs	r0, #0
 676              	.LVL106:
 677 0068 10BD     		pop	{r4, pc}
 678              	.LVL107:
 679              	.L49:
 503:navigation.c  ****     }
 680              		.loc 1 503 0
 681 006a 0020     		movs	r0, #0
 682 006c 10BD     		pop	{r4, pc}
 683              	.L50:
 517:navigation.c  ****     }
 684              		.loc 1 517 0
 685 006e 0020     		movs	r0, #0
 686              		.loc 1 527 0
 687 0070 10BD     		pop	{r4, pc}
 688              	.L53:
 689 0072 00BF     		.align	2
 690              	.L52:
 691 0074 00000000 		.word	safety_override
 692 0078 00000000 		.word	sensor_distances
 693 007c 00000000 		.word	output
 694 0080 48000000 		.word	.LC5
 695              		.cfi_endproc
 696              	.LFE70:
 697              		.size	failsafe, .-failsafe
 698              		.global	__aeabi_i2d
 699              		.global	__aeabi_dadd
 700              		.global	__aeabi_dsub
 701              		.global	__aeabi_dcmpgt
 702              		.section	.text.moveUntil,"ax",%progbits
 703              		.align	2
 704              		.global	moveUntil
 705              		.thumb
 706              		.thumb_func
 707              		.type	moveUntil, %function
 708              	moveUntil:
 709              	.LFB67:
 141:navigation.c  ****     // This function will move until given a set distance (in mm)
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cc92bABD.s 			page 23


 710              		.loc 1 141 0
 711              		.cfi_startproc
 712              		@ args = 8, pretend = 0, frame = 32
 713              		@ frame_needed = 0, uses_anonymous_args = 0
 714              	.LVL108:
 715 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 716              		.cfi_def_cfa_offset 36
 717              		.cfi_offset 4, -36
 718              		.cfi_offset 5, -32
 719              		.cfi_offset 6, -28
 720              		.cfi_offset 7, -24
 721              		.cfi_offset 8, -20
 722              		.cfi_offset 9, -16
 723              		.cfi_offset 10, -12
 724              		.cfi_offset 11, -8
 725              		.cfi_offset 14, -4
 726 0004 89B0     		sub	sp, sp, #36
 727              		.cfi_def_cfa_offset 72
 728 0006 8346     		mov	fp, r0
 729 0008 0791     		str	r1, [sp, #28]
 730 000a 0592     		str	r2, [sp, #20]
 731 000c 1C46     		mov	r4, r3
 732 000e 129E     		ldr	r6, [sp, #72]
 733              	.LVL109:
 178:navigation.c  ****         Motor_Left_Control_Write(0); 
 734              		.loc 1 178 0
 735 0010 0129     		cmp	r1, #1
 736 0012 05D1     		bne	.L55
 179:navigation.c  ****         Motor_Right_Control_Write(0); 
 737              		.loc 1 179 0
 738 0014 0020     		movs	r0, #0
 739              	.LVL110:
 740 0016 FFF7FEFF 		bl	Motor_Left_Control_Write
 741              	.LVL111:
 180:navigation.c  ****     }
 742              		.loc 1 180 0
 743 001a 0020     		movs	r0, #0
 744 001c FFF7FEFF 		bl	Motor_Right_Control_Write
 745              	.LVL112:
 746              	.L55:
 182:navigation.c  ****         Motor_Left_Control_Write(1); 
 747              		.loc 1 182 0
 748 0020 079B     		ldr	r3, [sp, #28]
 749 0022 2BB9     		cbnz	r3, .L56
 183:navigation.c  ****         Motor_Right_Control_Write(1);
 750              		.loc 1 183 0
 751 0024 0120     		movs	r0, #1
 752 0026 FFF7FEFF 		bl	Motor_Left_Control_Write
 753              	.LVL113:
 184:navigation.c  ****     }
 754              		.loc 1 184 0
 755 002a 0120     		movs	r0, #1
 756 002c FFF7FEFF 		bl	Motor_Right_Control_Write
 757              	.LVL114:
 758              	.L56:
 191:navigation.c  ****     while (sensor_distances[ultrasonic_sensor] > ARENA_WIDTH) {          // protects against dodgy 
 759              		.loc 1 191 0
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cc92bABD.s 			page 24


 760 0030 40F21452 		movw	r2, #1300
 761 0034 A04B     		ldr	r3, .L82+16
 762 0036 43F82420 		str	r2, [r3, r4, lsl #2]
 192:navigation.c  ****         distanceSensor(ultrasonic_sensor);
 763              		.loc 1 192 0
 764 003a 11E0     		b	.L57
 765              	.LVL115:
 766              	.L58:
 193:navigation.c  ****         CyDelay(50);
 767              		.loc 1 193 0
 768 003c 2046     		mov	r0, r4
 769 003e FFF7FEFF 		bl	distanceSensor
 770              	.LVL116:
 194:navigation.c  ****         distance_sensor = sensor_distances[ultrasonic_sensor];   // checks the distance measured by
 771              		.loc 1 194 0
 772 0042 3220     		movs	r0, #50
 773 0044 FFF7FEFF 		bl	CyDelay
 774              	.LVL117:
 195:navigation.c  ****         sprintf(output, "%d \t", distance_sensor);       
 775              		.loc 1 195 0
 776 0048 9B4B     		ldr	r3, .L82+16
 777 004a 53F82450 		ldr	r5, [r3, r4, lsl #2]
 778              	.LVL118:
 196:navigation.c  ****         UART_1_PutString(output);
 779              		.loc 1 196 0
 780 004e 9B4F     		ldr	r7, .L82+20
 781 0050 2A46     		mov	r2, r5
 782 0052 9B49     		ldr	r1, .L82+24
 783 0054 3846     		mov	r0, r7
 784 0056 FFF7FEFF 		bl	sprintf
 785              	.LVL119:
 197:navigation.c  ****     }
 786              		.loc 1 197 0
 787 005a 3846     		mov	r0, r7
 788 005c FFF7FEFF 		bl	UART_1_PutString
 789              	.LVL120:
 790              	.L57:
 192:navigation.c  ****         distanceSensor(ultrasonic_sensor);
 791              		.loc 1 192 0
 792 0060 954B     		ldr	r3, .L82+16
 793 0062 53F82430 		ldr	r3, [r3, r4, lsl #2]
 794 0066 B3F5966F 		cmp	r3, #1200
 795 006a E7DC     		bgt	.L58
 202:navigation.c  ****     Motor_Left_Driver_WriteCompare(speed_left);
 796              		.loc 1 202 0
 797 006c FFF7FEFF 		bl	Motor_Left_Driver_Wakeup
 798              	.LVL121:
 203:navigation.c  ****     Motor_Right_Driver_Wakeup();
 799              		.loc 1 203 0
 800 0070 5FFA86F8 		uxtb	r8, r6
 801 0074 4046     		mov	r0, r8
 802 0076 FFF7FEFF 		bl	Motor_Left_Driver_WriteCompare
 803              	.LVL122:
 204:navigation.c  ****     Motor_Right_Driver_WriteCompare(speed_right);
 804              		.loc 1 204 0
 805 007a FFF7FEFF 		bl	Motor_Right_Driver_Wakeup
 806              	.LVL123:
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cc92bABD.s 			page 25


 205:navigation.c  ****     
 807              		.loc 1 205 0
 808 007e 4046     		mov	r0, r8
 809 0080 FFF7FEFF 		bl	Motor_Right_Driver_WriteCompare
 810              	.LVL124:
 207:navigation.c  ****         //UART_1_PutString("\n GREATER THAN LOOP: \n");
 811              		.loc 1 207 0
 812 0084 059B     		ldr	r3, [sp, #20]
 813 0086 052B     		cmp	r3, #5
 814 0088 79D0     		beq	.L76
 154:navigation.c  ****     int front_sensor_flag = FALSE;
 815              		.loc 1 154 0
 816 008a B246     		mov	r10, r6
 153:navigation.c  ****     int speed_right = speed;
 817              		.loc 1 153 0
 818 008c B146     		mov	r9, r6
 161:navigation.c  ****     
 819              		.loc 1 161 0
 820 008e 0027     		movs	r7, #0
 159:navigation.c  ****                                                         // will enter the failsafe check straight a
 821              		.loc 1 159 0
 822 0090 6FF4A763 		mvn	r3, #1336
 823 0094 0193     		str	r3, [sp, #4]
 824 0096 87E0     		b	.L60
 825              	.LVL125:
 826              	.L68:
 827              	.LBB2:
 211:navigation.c  ****             count_right = Motor_Right_Decoder_GetCounter();
 828              		.loc 1 211 0
 829 0098 FFF7FEFF 		bl	Motor_Left_Decoder_GetCounter
 830              	.LVL126:
 831 009c 0746     		mov	r7, r0
 832 009e 0490     		str	r0, [sp, #16]
 833              	.LVL127:
 212:navigation.c  ****             
 834              		.loc 1 212 0
 835 00a0 FFF7FEFF 		bl	Motor_Right_Decoder_GetCounter
 836              	.LVL128:
 215:navigation.c  ****                 speed_left = speed - ADJUST;
 837              		.loc 1 215 0
 838 00a4 002F     		cmp	r7, #0
 839 00a6 B8BF     		it	lt
 840 00a8 7F42     		rsblt	r7, r7, #0
 841              	.LVL129:
 842 00aa 0028     		cmp	r0, #0
 843 00ac B8BF     		it	lt
 844 00ae 4042     		rsblt	r0, r0, #0
 845              	.LVL130:
 846 00b0 8742     		cmp	r7, r0
 847 00b2 03DD     		ble	.L61
 216:navigation.c  ****                 speed_right = speed + ADJUST;
 848              		.loc 1 216 0
 849 00b4 A6F10409 		sub	r9, r6, #4
 850              	.LVL131:
 217:navigation.c  ****             }        
 851              		.loc 1 217 0
 852 00b8 06F1040A 		add	r10, r6, #4
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cc92bABD.s 			page 26


 853              	.LVL132:
 854              	.L61:
 219:navigation.c  ****                 speed_right = speed - ADJUST;              
 855              		.loc 1 219 0
 856 00bc 8742     		cmp	r7, r0
 857 00be 03DA     		bge	.L62
 220:navigation.c  ****                 speed_left = speed + ADJUST;
 858              		.loc 1 220 0
 859 00c0 A6F1040A 		sub	r10, r6, #4
 860              	.LVL133:
 221:navigation.c  ****             }
 861              		.loc 1 221 0
 862 00c4 06F10409 		add	r9, r6, #4
 863              	.LVL134:
 864              	.L62:
 225:navigation.c  ****             Motor_Right_Driver_WriteCompare(speed_right);
 865              		.loc 1 225 0
 866 00c8 5FFA89F0 		uxtb	r0, r9
 867 00cc FFF7FEFF 		bl	Motor_Left_Driver_WriteCompare
 868              	.LVL135:
 226:navigation.c  ****             
 869              		.loc 1 226 0
 870 00d0 5FFA8AF0 		uxtb	r0, r10
 871 00d4 FFF7FEFF 		bl	Motor_Right_Driver_WriteCompare
 872              	.LVL136:
 229:navigation.c  ****                 distanceSensor(FRONT_LEFT);
 873              		.loc 1 229 0
 874 00d8 072C     		cmp	r4, #7
 875 00da 0DD1     		bne	.L63
 229:navigation.c  ****                 distanceSensor(FRONT_LEFT);
 876              		.loc 1 229 0 is_stmt 0 discriminator 1
 877 00dc 069B     		ldr	r3, [sp, #24]
 878 00de 5BB1     		cbz	r3, .L63
 230:navigation.c  ****                 CyDelay(50);
 879              		.loc 1 230 0 is_stmt 1
 880 00e0 0020     		movs	r0, #0
 881 00e2 FFF7FEFF 		bl	distanceSensor
 882              	.LVL137:
 231:navigation.c  ****                 distance_sensor = sensor_distances[ultrasonic_sensor];   // checks the distance mea
 883              		.loc 1 231 0
 884 00e6 3220     		movs	r0, #50
 885 00e8 FFF7FEFF 		bl	CyDelay
 886              	.LVL138:
 232:navigation.c  ****                 front_sensor_flag = FALSE;
 887              		.loc 1 232 0
 888 00ec 724B     		ldr	r3, .L82+16
 889 00ee 53F82450 		ldr	r5, [r3, r4, lsl #2]
 890              	.LVL139:
 233:navigation.c  ****             }
 891              		.loc 1 233 0
 892 00f2 0023     		movs	r3, #0
 893 00f4 0693     		str	r3, [sp, #24]
 894 00f6 20E0     		b	.L64
 895              	.LVL140:
 896              	.L63:
 235:navigation.c  ****                 distanceSensor(FRONT_RIGHT);
 897              		.loc 1 235 0
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cc92bABD.s 			page 27


 898 00f8 072C     		cmp	r4, #7
 899 00fa 0DD1     		bne	.L65
 235:navigation.c  ****                 distanceSensor(FRONT_RIGHT);
 900              		.loc 1 235 0 is_stmt 0 discriminator 1
 901 00fc 069B     		ldr	r3, [sp, #24]
 902 00fe 5BB9     		cbnz	r3, .L65
 236:navigation.c  ****                 CyDelay(50);
 903              		.loc 1 236 0 is_stmt 1
 904 0100 0120     		movs	r0, #1
 905 0102 FFF7FEFF 		bl	distanceSensor
 906              	.LVL141:
 237:navigation.c  ****                 distance_sensor = sensor_distances[ultrasonic_sensor];   // checks the distance mea
 907              		.loc 1 237 0
 908 0106 3220     		movs	r0, #50
 909 0108 FFF7FEFF 		bl	CyDelay
 910              	.LVL142:
 238:navigation.c  ****                 front_sensor_flag = TRUE;
 911              		.loc 1 238 0
 912 010c 6A4B     		ldr	r3, .L82+16
 913 010e 53F82450 		ldr	r5, [r3, r4, lsl #2]
 914              	.LVL143:
 239:navigation.c  ****             }
 915              		.loc 1 239 0
 916 0112 0123     		movs	r3, #1
 917 0114 0693     		str	r3, [sp, #24]
 918 0116 10E0     		b	.L64
 919              	.LVL144:
 920              	.L65:
 242:navigation.c  ****                 CyDelay(50);
 921              		.loc 1 242 0
 922 0118 2046     		mov	r0, r4
 923 011a FFF7FEFF 		bl	distanceSensor
 924              	.LVL145:
 243:navigation.c  ****                 distance_sensor = sensor_distances[ultrasonic_sensor];   // checks the distance mea
 925              		.loc 1 243 0
 926 011e 3220     		movs	r0, #50
 927 0120 FFF7FEFF 		bl	CyDelay
 928              	.LVL146:
 244:navigation.c  ****                 sprintf(output, "%d \t", distance_sensor);       
 929              		.loc 1 244 0
 930 0124 644B     		ldr	r3, .L82+16
 931 0126 53F82450 		ldr	r5, [r3, r4, lsl #2]
 932              	.LVL147:
 245:navigation.c  ****                 UART_1_PutString(output);
 933              		.loc 1 245 0
 934 012a 2A46     		mov	r2, r5
 935 012c 6449     		ldr	r1, .L82+24
 936 012e 6348     		ldr	r0, .L82+20
 937 0130 FFF7FEFF 		bl	sprintf
 938              	.LVL148:
 246:navigation.c  ****             }
 939              		.loc 1 246 0
 940 0134 6148     		ldr	r0, .L82+20
 941 0136 FFF7FEFF 		bl	UART_1_PutString
 942              	.LVL149:
 943              	.L64:
 256:navigation.c  ****                                         && failsafe_alternator == TRUE 
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cc92bABD.s 			page 28


 944              		.loc 1 256 0
 945 013a 3846     		mov	r0, r7
 946 013c FFF7FEFF 		bl	__aeabi_i2d
 947              	.LVL150:
 948 0140 CDE90201 		strd	r0, [sp, #8]
 949 0144 0198     		ldr	r0, [sp, #4]
 950 0146 FFF7FEFF 		bl	__aeabi_i2d
 951              	.LVL151:
 952 014a 57A3     		adr	r3, .L82
 953 014c D3E90023 		ldrd	r2, [r3]
 954 0150 FFF7FEFF 		bl	__aeabi_dadd
 955              	.LVL152:
 956 0154 0022     		movs	r2, #0
 957 0156 5B4B     		ldr	r3, .L82+28
 958 0158 FFF7FEFF 		bl	__aeabi_dsub
 959              	.LVL153:
 960 015c 0246     		mov	r2, r0
 961 015e 0B46     		mov	r3, r1
 962 0160 DDE90201 		ldrd	r0, [sp, #8]
 963 0164 FFF7FEFF 		bl	__aeabi_dcmpgt
 964              	.LVL154:
 965 0168 88B1     		cbz	r0, .L59
 258:navigation.c  ****                 emergency_exit = failsafe(direction);
 966              		.loc 1 258 0
 967 016a 139B     		ldr	r3, [sp, #76]
 968 016c 012B     		cmp	r3, #1
 969 016e 0ED1     		bne	.L59
 259:navigation.c  ****                 old_count = count_left;
 970              		.loc 1 259 0
 971 0170 0798     		ldr	r0, [sp, #28]
 972 0172 FFF7FEFF 		bl	failsafe
 973              	.LVL155:
 974 0176 8046     		mov	r8, r0
 975              	.LVL156:
 260:navigation.c  ****                 //failsafe_alternator = FALSE;
 976              		.loc 1 260 0
 977 0178 049B     		ldr	r3, [sp, #16]
 978 017a 0193     		str	r3, [sp, #4]
 979 017c 07E0     		b	.L59
 980              	.LVL157:
 981              	.L76:
 982              	.LBE2:
 983 017e B246     		mov	r10, r6
 984 0180 B146     		mov	r9, r6
 985 0182 0027     		movs	r7, #0
 986 0184 6FF4A763 		mvn	r3, #1336
 987 0188 0193     		str	r3, [sp, #4]
 988 018a 0697     		str	r7, [sp, #24]
 989 018c B846     		mov	r8, r7
 990              	.LVL158:
 991              	.L59:
 209:navigation.c  ****             
 992              		.loc 1 209 0
 993 018e 8BEAEB73 		eor	r3, fp, fp, asr #31
 994 0192 A3EBEB73 		sub	r3, r3, fp, asr #31
 995 0196 9D42     		cmp	r5, r3
 996 0198 05DA     		bge	.L79
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cc92bABD.s 			page 29


 209:navigation.c  ****             
 997              		.loc 1 209 0 is_stmt 0 discriminator 1
 998 019a B8F1000F 		cmp	r8, #0
 999 019e 3FF47BAF 		beq	.L68
 1000 01a2 4746     		mov	r7, r8
 1001 01a4 00E0     		b	.L60
 1002              	.L79:
 1003 01a6 4746     		mov	r7, r8
 1004              	.LVL159:
 1005              	.L60:
 277:navigation.c  ****         //UART_1_PutString("\n LESS THAN LOOP: \n");
 1006              		.loc 1 277 0 is_stmt 1
 1007 01a8 059B     		ldr	r3, [sp, #20]
 1008 01aa 042B     		cmp	r3, #4
 1009 01ac 5CD1     		bne	.L70
 1010 01ae B846     		mov	r8, r7
 1011 01b0 51E0     		b	.L69
 1012              	.LVL160:
 1013              	.L75:
 1014              	.LBB3:
 281:navigation.c  ****             count_right = Motor_Right_Decoder_GetCounter();
 1015              		.loc 1 281 0
 1016 01b2 FFF7FEFF 		bl	Motor_Left_Decoder_GetCounter
 1017              	.LVL161:
 1018 01b6 0746     		mov	r7, r0
 1019 01b8 0490     		str	r0, [sp, #16]
 1020              	.LVL162:
 282:navigation.c  ****             
 1021              		.loc 1 282 0
 1022 01ba FFF7FEFF 		bl	Motor_Right_Decoder_GetCounter
 1023              	.LVL163:
 285:navigation.c  ****                 speed_left = speed - ADJUST;
 1024              		.loc 1 285 0
 1025 01be 002F     		cmp	r7, #0
 1026 01c0 B8BF     		it	lt
 1027 01c2 7F42     		rsblt	r7, r7, #0
 1028              	.LVL164:
 1029 01c4 0028     		cmp	r0, #0
 1030 01c6 B8BF     		it	lt
 1031 01c8 4042     		rsblt	r0, r0, #0
 1032              	.LVL165:
 1033 01ca 8742     		cmp	r7, r0
 1034 01cc 03DD     		ble	.L71
 286:navigation.c  ****                 speed_right = speed + ADJUST;
 1035              		.loc 1 286 0
 1036 01ce A6F10409 		sub	r9, r6, #4
 1037              	.LVL166:
 287:navigation.c  ****             }        
 1038              		.loc 1 287 0
 1039 01d2 06F1040A 		add	r10, r6, #4
 1040              	.LVL167:
 1041              	.L71:
 289:navigation.c  ****                     speed_right = speed - ADJUST;              // If the speeds are equal, we decre
 1042              		.loc 1 289 0
 1043 01d6 8742     		cmp	r7, r0
 1044 01d8 03DA     		bge	.L72
 290:navigation.c  ****                                                         // adjust tolerance 
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cc92bABD.s 			page 30


 1045              		.loc 1 290 0
 1046 01da A6F1040A 		sub	r10, r6, #4
 1047              	.LVL168:
 292:navigation.c  ****             }
 1048              		.loc 1 292 0
 1049 01de 06F10409 		add	r9, r6, #4
 1050              	.LVL169:
 1051              	.L72:
 296:navigation.c  ****             Motor_Right_Driver_WriteCompare(speed_right);
 1052              		.loc 1 296 0
 1053 01e2 5FFA89F0 		uxtb	r0, r9
 1054 01e6 FFF7FEFF 		bl	Motor_Left_Driver_WriteCompare
 1055              	.LVL170:
 297:navigation.c  ****             
 1056              		.loc 1 297 0
 1057 01ea 5FFA8AF0 		uxtb	r0, r10
 1058 01ee FFF7FEFF 		bl	Motor_Right_Driver_WriteCompare
 1059              	.LVL171:
 299:navigation.c  ****             CyDelay(50);
 1060              		.loc 1 299 0
 1061 01f2 2046     		mov	r0, r4
 1062 01f4 FFF7FEFF 		bl	distanceSensor
 1063              	.LVL172:
 300:navigation.c  ****             distance_sensor = sensor_distances[ultrasonic_sensor];   // checks the distance measure
 1064              		.loc 1 300 0
 1065 01f8 3220     		movs	r0, #50
 1066 01fa FFF7FEFF 		bl	CyDelay
 1067              	.LVL173:
 301:navigation.c  ****             sprintf(output, "%d \t", distance_sensor);       
 1068              		.loc 1 301 0
 1069 01fe 2E4B     		ldr	r3, .L82+16
 1070 0200 53F82450 		ldr	r5, [r3, r4, lsl #2]
 1071              	.LVL174:
 302:navigation.c  ****             UART_1_PutString(output);
 1072              		.loc 1 302 0
 1073 0204 2A46     		mov	r2, r5
 1074 0206 2E49     		ldr	r1, .L82+24
 1075 0208 2C48     		ldr	r0, .L82+20
 1076 020a FFF7FEFF 		bl	sprintf
 1077              	.LVL175:
 303:navigation.c  ****             
 1078              		.loc 1 303 0
 1079 020e 2B48     		ldr	r0, .L82+20
 1080 0210 FFF7FEFF 		bl	UART_1_PutString
 1081              	.LVL176:
 312:navigation.c  ****                                         && failsafe_alternator == TRUE 
 1082              		.loc 1 312 0
 1083 0214 3846     		mov	r0, r7
 1084 0216 FFF7FEFF 		bl	__aeabi_i2d
 1085              	.LVL177:
 1086 021a CDE90201 		strd	r0, [sp, #8]
 1087 021e 0198     		ldr	r0, [sp, #4]
 1088 0220 FFF7FEFF 		bl	__aeabi_i2d
 1089              	.LVL178:
 1090 0224 22A3     		adr	r3, .L82+8
 1091 0226 D3E90023 		ldrd	r2, [r3]
 1092 022a FFF7FEFF 		bl	__aeabi_dadd
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cc92bABD.s 			page 31


 1093              	.LVL179:
 1094 022e 0022     		movs	r2, #0
 1095 0230 244B     		ldr	r3, .L82+28
 1096 0232 FFF7FEFF 		bl	__aeabi_dsub
 1097              	.LVL180:
 1098 0236 0246     		mov	r2, r0
 1099 0238 0B46     		mov	r3, r1
 1100 023a DDE90201 		ldrd	r0, [sp, #8]
 1101 023e FFF7FEFF 		bl	__aeabi_dcmpgt
 1102              	.LVL181:
 1103 0242 40B1     		cbz	r0, .L69
 314:navigation.c  ****                 emergency_exit = failsafe(direction);
 1104              		.loc 1 314 0
 1105 0244 139B     		ldr	r3, [sp, #76]
 1106 0246 012B     		cmp	r3, #1
 1107 0248 05D1     		bne	.L69
 315:navigation.c  ****                 old_count = count_left;
 1108              		.loc 1 315 0
 1109 024a 0798     		ldr	r0, [sp, #28]
 1110 024c FFF7FEFF 		bl	failsafe
 1111              	.LVL182:
 1112 0250 8046     		mov	r8, r0
 1113              	.LVL183:
 316:navigation.c  ****                 //failsafe_alternator = FALSE;
 1114              		.loc 1 316 0
 1115 0252 049B     		ldr	r3, [sp, #16]
 1116 0254 0193     		str	r3, [sp, #4]
 1117              	.LVL184:
 1118              	.L69:
 1119              	.LBE3:
 279:navigation.c  ****             
 1120              		.loc 1 279 0
 1121 0256 8BEAEB73 		eor	r3, fp, fp, asr #31
 1122 025a A3EBEB73 		sub	r3, r3, fp, asr #31
 1123 025e 9D42     		cmp	r5, r3
 1124 0260 02DD     		ble	.L70
 279:navigation.c  ****             
 1125              		.loc 1 279 0 is_stmt 0 discriminator 1
 1126 0262 B8F1000F 		cmp	r8, #0
 1127 0266 A4D0     		beq	.L75
 1128              	.LVL185:
 1129              	.L70:
 341:navigation.c  ****     CyDelay(50);
 1130              		.loc 1 341 0 is_stmt 1
 1131 0268 2046     		mov	r0, r4
 1132 026a FFF7FEFF 		bl	distanceSensor
 1133              	.LVL186:
 342:navigation.c  ****     distance_sensor = sensor_distances[ultrasonic_sensor];   // checks the distance measured by the
 1134              		.loc 1 342 0
 1135 026e 3220     		movs	r0, #50
 1136 0270 FFF7FEFF 		bl	CyDelay
 1137              	.LVL187:
 344:navigation.c  ****     UART_1_PutString(output);
 1138              		.loc 1 344 0
 1139 0274 114D     		ldr	r5, .L82+20
 1140 0276 104B     		ldr	r3, .L82+16
 1141 0278 53F82420 		ldr	r2, [r3, r4, lsl #2]
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cc92bABD.s 			page 32


 1142 027c 1249     		ldr	r1, .L82+32
 1143 027e 2846     		mov	r0, r5
 1144 0280 FFF7FEFF 		bl	sprintf
 1145              	.LVL188:
 345:navigation.c  ****     
 1146              		.loc 1 345 0
 1147 0284 2846     		mov	r0, r5
 1148 0286 FFF7FEFF 		bl	UART_1_PutString
 1149              	.LVL189:
 347:navigation.c  ****     Motor_Right_Decoder_SetCounter(0);   
 1150              		.loc 1 347 0
 1151 028a 0020     		movs	r0, #0
 1152 028c FFF7FEFF 		bl	Motor_Left_Decoder_SetCounter
 1153              	.LVL190:
 348:navigation.c  ****     
 1154              		.loc 1 348 0
 1155 0290 0020     		movs	r0, #0
 1156 0292 FFF7FEFF 		bl	Motor_Right_Decoder_SetCounter
 1157              	.LVL191:
 350:navigation.c  ****     Motor_Right_Driver_Sleep();
 1158              		.loc 1 350 0
 1159 0296 FFF7FEFF 		bl	Motor_Left_Driver_Sleep
 1160              	.LVL192:
 351:navigation.c  ****     
 1161              		.loc 1 351 0
 1162 029a FFF7FEFF 		bl	Motor_Right_Driver_Sleep
 1163              	.LVL193:
 353:navigation.c  **** 
 1164              		.loc 1 353 0
 1165 029e 09B0     		add	sp, sp, #36
 1166              		.cfi_def_cfa_offset 36
 1167              		@ sp needed
 1168 02a0 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 1169              	.LVL194:
 1170              	.L83:
 1171 02a4 AFF30080 		.align	3
 1172              	.L82:
 1173 02a8 CCCCCCCC 		.word	-858993460
 1174 02ac CC137540 		.word	1081414604
 1175 02b0 F6285C8F 		.word	-1889785610
 1176 02b4 C2C56B40 		.word	1080804802
 1177 02b8 00000000 		.word	sensor_distances
 1178 02bc 00000000 		.word	output
 1179 02c0 08000000 		.word	.LC1
 1180 02c4 00005940 		.word	1079574528
 1181 02c8 68000000 		.word	.LC6
 1182              		.cfi_endproc
 1183              	.LFE67:
 1184              		.size	moveUntil, .-moveUntil
 1185              		.section	.text.straightAdjust,"ax",%progbits
 1186              		.align	2
 1187              		.global	straightAdjust
 1188              		.thumb
 1189              		.thumb_func
 1190              		.type	straightAdjust, %function
 1191              	straightAdjust:
 1192              	.LFB72:
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cc92bABD.s 			page 33


 528:navigation.c  **** 
 529:navigation.c  **** void failsafeSideSensors(int side_sensing, int initial_value) {
 530:navigation.c  ****     
 531:navigation.c  ****     int drift_tolerance = 10;     // 10mm
 532:navigation.c  ****     int translate_direction;
 533:navigation.c  ****     
 534:navigation.c  ****     if (side_sensing == SIDE_LEFT) {translate_direction = RIGHT;} else { translate_direction = LEFT
 535:navigation.c  ****     
 536:navigation.c  ****         // SAFETY OVERRIDE:
 537:navigation.c  ****     if(safety_override == TRUE){
 538:navigation.c  ****         return;
 539:navigation.c  ****     }
 540:navigation.c  ****     
 541:navigation.c  ****     distanceSensor(side_sensing);
 542:navigation.c  ****     CyDelay(50);
 543:navigation.c  ****     
 544:navigation.c  ****     if (sensor_distances[side_sensing] > initial_value + drift_tolerance 
 545:navigation.c  ****                 || sensor_distances[side_sensing] < initial_value - drift_tolerance ){
 546:navigation.c  ****         // If it has drifted more than 10mm either side from the initial value, we perform a straig
 547:navigation.c  ****         //translateUntil(initial_value, translate_direction, GREATER_THAN,side_sensing,SPEED);   //
 548:navigation.c  ****                                                                                 // if this got trip
 549:navigation.c  ****         //translateMoveDynamic(translate_direction, 30, SPEED, FALSE);          // these are not th
 550:navigation.c  ****         straightAdjust(FRONT_SENSORS);                                          // straight adjust 
 551:navigation.c  ****         
 552:navigation.c  ****     }
 553:navigation.c  **** }
 554:navigation.c  **** 
 555:navigation.c  **** 
 556:navigation.c  **** void straightAdjust(int front_back) {
 1193              		.loc 1 556 0
 1194              		.cfi_startproc
 1195              		@ args = 0, pretend = 0, frame = 0
 1196              		@ frame_needed = 0, uses_anonymous_args = 0
 1197              	.LVL195:
 1198 0000 70B5     		push	{r4, r5, r6, lr}
 1199              		.cfi_def_cfa_offset 16
 1200              		.cfi_offset 4, -16
 1201              		.cfi_offset 5, -12
 1202              		.cfi_offset 6, -8
 1203              		.cfi_offset 14, -4
 1204 0002 82B0     		sub	sp, sp, #8
 1205              		.cfi_def_cfa_offset 24
 1206              	.LVL196:
 557:navigation.c  ****        
 558:navigation.c  ****     int sensor_left; 
 559:navigation.c  ****     int sensor_right;
 560:navigation.c  ****     int difference = 300;
 561:navigation.c  ****     int tolerance = 1;
 562:navigation.c  ****     int max_difference = 800;
 563:navigation.c  ****     int ultra_delay = 50;
 564:navigation.c  ****     int speed = 25;
 565:navigation.c  ****     int timer;
 566:navigation.c  ****     Timer_straight_adjust_Start();      // Starts counting the timer 
 1207              		.loc 1 566 0
 1208 0004 FFF7FEFF 		bl	Timer_straight_adjust_Start
 1209              	.LVL197:
 560:navigation.c  ****     int tolerance = 1;
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cc92bABD.s 			page 34


 1210              		.loc 1 560 0
 1211 0008 4FF49674 		mov	r4, #300
 1212 000c 29E0     		b	.L85
 1213              	.LVL198:
 1214              	.L86:
 567:navigation.c  ****     
 568:navigation.c  ****     // Are we adjusting with the back or front sensors: 
 569:navigation.c  ****     if (front_back == FRONT_SENSORS) {
 570:navigation.c  ****         sensor_left = FRONT_LEFT;
 571:navigation.c  ****         sensor_right = FRONT_RIGHT;
 572:navigation.c  ****     }
 573:navigation.c  ****     else {
 574:navigation.c  ****         //sensor_left = BACK_LEFT;
 575:navigation.c  ****         //sensor_right = BACK_RIGHT;
 576:navigation.c  ****     }
 577:navigation.c  ****           
 578:navigation.c  ****     // Ensure the initial readings are accurate: 
 579:navigation.c  ****     while (abs(difference) > max_difference) {              
 580:navigation.c  ****         distanceSensor(sensor_left);
 1215              		.loc 1 580 0
 1216 000e 0020     		movs	r0, #0
 1217 0010 FFF7FEFF 		bl	distanceSensor
 1218              	.LVL199:
 581:navigation.c  ****         CyDelay(50);                        // 50ms might not be enough ???
 1219              		.loc 1 581 0
 1220 0014 3220     		movs	r0, #50
 1221 0016 FFF7FEFF 		bl	CyDelay
 1222              	.LVL200:
 582:navigation.c  ****         sprintf(output, "%d \t", sensor_distances[sensor_left]);
 1223              		.loc 1 582 0
 1224 001a 634C     		ldr	r4, .L96
 1225              	.LVL201:
 1226 001c 634E     		ldr	r6, .L96+4
 1227 001e 644D     		ldr	r5, .L96+8
 1228 0020 2268     		ldr	r2, [r4]
 1229 0022 3146     		mov	r1, r6
 1230 0024 2846     		mov	r0, r5
 1231 0026 FFF7FEFF 		bl	sprintf
 1232              	.LVL202:
 583:navigation.c  ****         UART_1_PutString(output);
 1233              		.loc 1 583 0
 1234 002a 2846     		mov	r0, r5
 1235 002c FFF7FEFF 		bl	UART_1_PutString
 1236              	.LVL203:
 584:navigation.c  ****         
 585:navigation.c  ****         distanceSensor(sensor_right);
 1237              		.loc 1 585 0
 1238 0030 0120     		movs	r0, #1
 1239 0032 FFF7FEFF 		bl	distanceSensor
 1240              	.LVL204:
 586:navigation.c  ****         CyDelay(50);
 1241              		.loc 1 586 0
 1242 0036 3220     		movs	r0, #50
 1243 0038 FFF7FEFF 		bl	CyDelay
 1244              	.LVL205:
 587:navigation.c  ****         sprintf(output, "%d \t", sensor_distances[sensor_right]);
 1245              		.loc 1 587 0
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cc92bABD.s 			page 35


 1246 003c 6268     		ldr	r2, [r4, #4]
 1247 003e 3146     		mov	r1, r6
 1248 0040 2846     		mov	r0, r5
 1249 0042 FFF7FEFF 		bl	sprintf
 1250              	.LVL206:
 588:navigation.c  ****         UART_1_PutString(output);
 1251              		.loc 1 588 0
 1252 0046 2846     		mov	r0, r5
 1253 0048 FFF7FEFF 		bl	UART_1_PutString
 1254              	.LVL207:
 589:navigation.c  ****         
 590:navigation.c  ****         difference = sensor_distances[sensor_left] - sensor_distances[sensor_right];
 1255              		.loc 1 590 0
 1256 004c 2368     		ldr	r3, [r4]
 1257 004e 6468     		ldr	r4, [r4, #4]
 1258 0050 1C1B     		subs	r4, r3, r4
 1259              	.LVL208:
 591:navigation.c  ****         sprintf(output, "difference = %d, \n", difference);       
 1260              		.loc 1 591 0
 1261 0052 2246     		mov	r2, r4
 1262 0054 5749     		ldr	r1, .L96+12
 1263 0056 2846     		mov	r0, r5
 1264 0058 FFF7FEFF 		bl	sprintf
 1265              	.LVL209:
 592:navigation.c  ****         UART_1_PutString(output);
 1266              		.loc 1 592 0
 1267 005c 2846     		mov	r0, r5
 1268 005e FFF7FEFF 		bl	UART_1_PutString
 1269              	.LVL210:
 1270              	.L85:
 579:navigation.c  ****         distanceSensor(sensor_left);
 1271              		.loc 1 579 0
 1272 0062 84EAE473 		eor	r3, r4, r4, asr #31
 1273 0066 A3EBE473 		sub	r3, r3, r4, asr #31
 1274 006a B3F5487F 		cmp	r3, #800
 1275 006e CEDC     		bgt	.L86
 1276              	.LVL211:
 593:navigation.c  ****     }
 594:navigation.c  ****         
 595:navigation.c  ****     
 596:navigation.c  ****     // Adjust against the wall: 
 597:navigation.c  ****     int speed_left = speed;        // slow speed
 598:navigation.c  ****     int speed_right = speed;
 599:navigation.c  ****     
 600:navigation.c  ****     
 601:navigation.c  ****     Motor_Left_Driver_Wakeup();
 1277              		.loc 1 601 0
 1278 0070 FFF7FEFF 		bl	Motor_Left_Driver_Wakeup
 1279              	.LVL212:
 602:navigation.c  ****     Motor_Left_Driver_WriteCompare(speed_left);
 1280              		.loc 1 602 0
 1281 0074 1920     		movs	r0, #25
 1282 0076 FFF7FEFF 		bl	Motor_Left_Driver_WriteCompare
 1283              	.LVL213:
 603:navigation.c  ****     Motor_Right_Driver_Wakeup();
 1284              		.loc 1 603 0
 1285 007a FFF7FEFF 		bl	Motor_Right_Driver_Wakeup
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cc92bABD.s 			page 36


 1286              	.LVL214:
 604:navigation.c  ****     Motor_Right_Driver_WriteCompare(speed_right);
 1287              		.loc 1 604 0
 1288 007e 1920     		movs	r0, #25
 1289 0080 FFF7FEFF 		bl	Motor_Right_Driver_WriteCompare
 1290              	.LVL215:
 605:navigation.c  ****         
 606:navigation.c  ****     while(abs(difference) > tolerance ) {
 1291              		.loc 1 606 0
 1292 0084 81E0     		b	.L87
 1293              	.L94:
 607:navigation.c  ****         
 608:navigation.c  ****         if (difference > 0)             // This means we need to move it right
 1294              		.loc 1 608 0
 1295 0086 002C     		cmp	r4, #0
 1296 0088 22DD     		ble	.L88
 609:navigation.c  ****         {
 610:navigation.c  ****             Motor_Left_Control_Write(0); Motor_Right_Control_Write(1); 
 1297              		.loc 1 610 0
 1298 008a 0020     		movs	r0, #0
 1299 008c FFF7FEFF 		bl	Motor_Left_Control_Write
 1300              	.LVL216:
 1301 0090 0120     		movs	r0, #1
 1302 0092 FFF7FEFF 		bl	Motor_Right_Control_Write
 1303              	.LVL217:
 611:navigation.c  ****              
 612:navigation.c  ****             while (abs(difference) > tolerance 
 1304              		.loc 1 612 0
 1305 0096 0FE0     		b	.L89
 1306              	.L91:
 613:navigation.c  ****                 && difference > 0
 614:navigation.c  ****                 && abs(difference) < max_difference)     // ensures working correctly
 615:navigation.c  ****             {
 616:navigation.c  **** 
 617:navigation.c  ****             distanceSensor(sensor_left);
 1307              		.loc 1 617 0
 1308 0098 0020     		movs	r0, #0
 1309 009a FFF7FEFF 		bl	distanceSensor
 1310              	.LVL218:
 618:navigation.c  ****             CyDelay(ultra_delay);
 1311              		.loc 1 618 0
 1312 009e 3220     		movs	r0, #50
 1313 00a0 FFF7FEFF 		bl	CyDelay
 1314              	.LVL219:
 619:navigation.c  ****             distanceSensor(sensor_right);
 1315              		.loc 1 619 0
 1316 00a4 0120     		movs	r0, #1
 1317 00a6 FFF7FEFF 		bl	distanceSensor
 1318              	.LVL220:
 620:navigation.c  ****             CyDelay(ultra_delay);
 1319              		.loc 1 620 0
 1320 00aa 3220     		movs	r0, #50
 1321 00ac FFF7FEFF 		bl	CyDelay
 1322              	.LVL221:
 621:navigation.c  ****                       
 622:navigation.c  ****             difference = sensor_distances[sensor_left] - sensor_distances[sensor_right];
 1323              		.loc 1 622 0
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cc92bABD.s 			page 37


 1324 00b0 3D4A     		ldr	r2, .L96
 1325 00b2 1368     		ldr	r3, [r2]
 1326 00b4 5468     		ldr	r4, [r2, #4]
 1327              	.LVL222:
 1328 00b6 1C1B     		subs	r4, r3, r4
 1329              	.LVL223:
 1330              	.L89:
 612:navigation.c  ****                 && difference > 0
 1331              		.loc 1 612 0
 1332 00b8 84EAE473 		eor	r3, r4, r4, asr #31
 1333 00bc A3EBE473 		sub	r3, r3, r4, asr #31
 1334 00c0 012B     		cmp	r3, #1
 1335 00c2 42DD     		ble	.L90
 613:navigation.c  ****                 && abs(difference) < max_difference)     // ensures working correctly
 1336              		.loc 1 613 0
 1337 00c4 002C     		cmp	r4, #0
 1338 00c6 40DD     		ble	.L90
 614:navigation.c  ****             {
 1339              		.loc 1 614 0
 1340 00c8 B3F5487F 		cmp	r3, #800
 1341 00cc E4DB     		blt	.L91
 1342 00ce 3CE0     		b	.L90
 1343              	.L88:
 623:navigation.c  ****             
 624:navigation.c  ****             //sprintf(output, " %d , %d \t dif: %d, \n", sensor_distances[FRONT_LEFT], 
 625:navigation.c  ****             //                                            sensor_distances[FRONT_RIGHT],
 626:navigation.c  ****             //                                                                        difference); 
 627:navigation.c  ****             //UART_1_PutString(output);
 628:navigation.c  ****             
 629:navigation.c  ****             
 630:navigation.c  ****             }
 631:navigation.c  ****             
 632:navigation.c  ****             /* I DON'T KNOW WHY THIS IS DUPLICATED, JUST COMMENTING OUT FOR NOW
 633:navigation.c  ****             while (abs(difference) > tolerance                  
 634:navigation.c  ****                         && difference > 0
 635:navigation.c  ****                         && abs(difference) < max_difference) {    // ensures working correctly
 636:navigation.c  ****                 distanceSensor(FRONT_LEFT);
 637:navigation.c  ****                 CyDelay(ultra_delay);
 638:navigation.c  ****                 distanceSensor(FRONT_RIGHT);
 639:navigation.c  ****                 CyDelay(ultra_delay);
 640:navigation.c  ****                           
 641:navigation.c  ****                 difference = sensor_distances[FRONT_LEFT] - sensor_distances[FRONT_RIGHT];
 642:navigation.c  ****                 
 643:navigation.c  ****                 sprintf(output, " %d , %d \t dif: %d, \n", sensor_distances[FRONT_LEFT], 
 644:navigation.c  ****                                                             sensor_distances[FRONT_RIGHT],
 645:navigation.c  ****                                                                                         difference)
 646:navigation.c  ****                 UART_1_PutString(output);
 647:navigation.c  ****             } 
 648:navigation.c  ****             */
 649:navigation.c  ****         }
 650:navigation.c  ****         else if (difference < 0 ){      // HERE we are turning left
 1344              		.loc 1 650 0
 1345 00d0 002C     		cmp	r4, #0
 1346 00d2 3ADA     		bge	.L90
 651:navigation.c  ****             Motor_Left_Control_Write(1); Motor_Right_Control_Write(0);
 1347              		.loc 1 651 0
 1348 00d4 0120     		movs	r0, #1
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cc92bABD.s 			page 38


 1349 00d6 FFF7FEFF 		bl	Motor_Left_Control_Write
 1350              	.LVL224:
 1351 00da 0020     		movs	r0, #0
 1352 00dc FFF7FEFF 		bl	Motor_Right_Control_Write
 1353              	.LVL225:
 652:navigation.c  ****             
 653:navigation.c  ****             distanceSensor(sensor_left);
 1354              		.loc 1 653 0
 1355 00e0 0020     		movs	r0, #0
 1356 00e2 FFF7FEFF 		bl	distanceSensor
 1357              	.LVL226:
 654:navigation.c  ****             CyDelay(ultra_delay);
 1358              		.loc 1 654 0
 1359 00e6 3220     		movs	r0, #50
 1360 00e8 FFF7FEFF 		bl	CyDelay
 1361              	.LVL227:
 655:navigation.c  ****             distanceSensor(sensor_right);
 1362              		.loc 1 655 0
 1363 00ec 0120     		movs	r0, #1
 1364 00ee FFF7FEFF 		bl	distanceSensor
 1365              	.LVL228:
 656:navigation.c  ****             CyDelay(ultra_delay);
 1366              		.loc 1 656 0
 1367 00f2 3220     		movs	r0, #50
 1368 00f4 FFF7FEFF 		bl	CyDelay
 1369              	.LVL229:
 657:navigation.c  ****                       
 658:navigation.c  ****             difference = sensor_distances[sensor_left] - sensor_distances[sensor_right];
 1370              		.loc 1 658 0
 1371 00f8 2B4A     		ldr	r2, .L96
 1372 00fa 1368     		ldr	r3, [r2]
 1373 00fc 5468     		ldr	r4, [r2, #4]
 1374              	.LVL230:
 1375 00fe 1C1B     		subs	r4, r3, r4
 1376              	.LVL231:
 659:navigation.c  ****                        
 660:navigation.c  ****             //sprintf(output, " %d , %d \t dif: %d, \n", sensor_distances[FRONT_LEFT], 
 661:navigation.c  ****             //                                            sensor_distances[FRONT_RIGHT],
 662:navigation.c  ****             //                                                                        difference); 
 663:navigation.c  ****             //UART_1_PutString(output);
 664:navigation.c  ****             
 665:navigation.c  ****             while (abs(difference) > tolerance 
 1377              		.loc 1 665 0
 1378 0100 18E0     		b	.L92
 1379              	.L93:
 666:navigation.c  ****                         && difference < 0
 667:navigation.c  ****                         && abs(difference) < max_difference) {
 668:navigation.c  ****                 distanceSensor(sensor_left);
 1380              		.loc 1 668 0
 1381 0102 0020     		movs	r0, #0
 1382 0104 FFF7FEFF 		bl	distanceSensor
 1383              	.LVL232:
 669:navigation.c  ****                 CyDelay(ultra_delay);
 1384              		.loc 1 669 0
 1385 0108 3220     		movs	r0, #50
 1386 010a FFF7FEFF 		bl	CyDelay
 1387              	.LVL233:
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cc92bABD.s 			page 39


 670:navigation.c  ****                 distanceSensor(sensor_right);
 1388              		.loc 1 670 0
 1389 010e 0120     		movs	r0, #1
 1390 0110 FFF7FEFF 		bl	distanceSensor
 1391              	.LVL234:
 671:navigation.c  ****                 CyDelay(ultra_delay);
 1392              		.loc 1 671 0
 1393 0114 3220     		movs	r0, #50
 1394 0116 FFF7FEFF 		bl	CyDelay
 1395              	.LVL235:
 672:navigation.c  ****                           
 673:navigation.c  ****                 difference = sensor_distances[sensor_left] - sensor_distances[sensor_right];
 1396              		.loc 1 673 0
 1397 011a 234B     		ldr	r3, .L96
 1398 011c 1A68     		ldr	r2, [r3]
 1399 011e 5B68     		ldr	r3, [r3, #4]
 1400 0120 D41A     		subs	r4, r2, r3
 1401              	.LVL236:
 674:navigation.c  ****                            
 675:navigation.c  ****                 sprintf(output, " %d , %d \t dif: %d, \n", sensor_distances[sensor_left], 
 1402              		.loc 1 675 0
 1403 0122 234D     		ldr	r5, .L96+8
 1404 0124 0094     		str	r4, [sp]
 1405 0126 2449     		ldr	r1, .L96+16
 1406 0128 2846     		mov	r0, r5
 1407 012a FFF7FEFF 		bl	sprintf
 1408              	.LVL237:
 676:navigation.c  ****                                                             sensor_distances[sensor_right],
 677:navigation.c  ****                                                                                         difference)
 678:navigation.c  ****                 UART_1_PutString(output);
 1409              		.loc 1 678 0
 1410 012e 2846     		mov	r0, r5
 1411 0130 FFF7FEFF 		bl	UART_1_PutString
 1412              	.LVL238:
 1413              	.L92:
 665:navigation.c  ****                         && difference < 0
 1414              		.loc 1 665 0
 1415 0134 84EAE473 		eor	r3, r4, r4, asr #31
 1416 0138 A3EBE473 		sub	r3, r3, r4, asr #31
 1417 013c 012B     		cmp	r3, #1
 1418 013e 04DD     		ble	.L90
 666:navigation.c  ****                         && abs(difference) < max_difference) {
 1419              		.loc 1 666 0
 1420 0140 002C     		cmp	r4, #0
 1421 0142 02DA     		bge	.L90
 667:navigation.c  ****                 distanceSensor(sensor_left);
 1422              		.loc 1 667 0
 1423 0144 B3F5487F 		cmp	r3, #800
 1424 0148 DBDB     		blt	.L93
 1425              	.L90:
 679:navigation.c  ****             
 680:navigation.c  ****             }
 681:navigation.c  ****             
 682:navigation.c  ****         }
 683:navigation.c  ****         
 684:navigation.c  ****         // Comes out of the while loop if the max_difference is exceeded, but then the values might
 685:navigation.c  ****         // if max_difference is exceeded, it should probably be forced to swivel the other way to 
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cc92bABD.s 			page 40


 686:navigation.c  ****         // that it was swivelling        
 687:navigation.c  ****         
 688:navigation.c  ****         
 689:navigation.c  ****         // CHECKS one more time to ensure the difference is accurate: 
 690:navigation.c  ****             // consider putting in a for loop to get new readings
 691:navigation.c  ****         distanceSensor(sensor_left);
 1426              		.loc 1 691 0
 1427 014a 0020     		movs	r0, #0
 1428 014c FFF7FEFF 		bl	distanceSensor
 1429              	.LVL239:
 692:navigation.c  ****         CyDelay(ultra_delay);
 1430              		.loc 1 692 0
 1431 0150 3220     		movs	r0, #50
 1432 0152 FFF7FEFF 		bl	CyDelay
 1433              	.LVL240:
 693:navigation.c  ****         distanceSensor(sensor_right);
 1434              		.loc 1 693 0
 1435 0156 0120     		movs	r0, #1
 1436 0158 FFF7FEFF 		bl	distanceSensor
 1437              	.LVL241:
 694:navigation.c  ****         CyDelay(ultra_delay);
 1438              		.loc 1 694 0
 1439 015c 3220     		movs	r0, #50
 1440 015e FFF7FEFF 		bl	CyDelay
 1441              	.LVL242:
 695:navigation.c  ****                       
 696:navigation.c  ****         difference = sensor_distances[sensor_left] - sensor_distances[sensor_right];
 1442              		.loc 1 696 0
 1443 0162 114B     		ldr	r3, .L96
 1444 0164 1A68     		ldr	r2, [r3]
 1445 0166 5B68     		ldr	r3, [r3, #4]
 1446 0168 D41A     		subs	r4, r2, r3
 1447              	.LVL243:
 697:navigation.c  ****         sprintf(output, "%d, %d, ", sensor_distances[sensor_left], sensor_distances[sensor_right]);
 1448              		.loc 1 697 0
 1449 016a 114D     		ldr	r5, .L96+8
 1450 016c 1349     		ldr	r1, .L96+20
 1451 016e 2846     		mov	r0, r5
 1452 0170 FFF7FEFF 		bl	sprintf
 1453              	.LVL244:
 698:navigation.c  ****         UART_1_PutString(output);
 1454              		.loc 1 698 0
 1455 0174 2846     		mov	r0, r5
 1456 0176 FFF7FEFF 		bl	UART_1_PutString
 1457              	.LVL245:
 699:navigation.c  ****         sprintf(output, "dif: %d, \n", difference);       
 1458              		.loc 1 699 0
 1459 017a 2246     		mov	r2, r4
 1460 017c 1049     		ldr	r1, .L96+24
 1461 017e 2846     		mov	r0, r5
 1462 0180 FFF7FEFF 		bl	sprintf
 1463              	.LVL246:
 700:navigation.c  ****         UART_1_PutString(output);
 1464              		.loc 1 700 0
 1465 0184 2846     		mov	r0, r5
 1466 0186 FFF7FEFF 		bl	UART_1_PutString
 1467              	.LVL247:
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cc92bABD.s 			page 41


 1468              	.L87:
 606:navigation.c  ****         
 1469              		.loc 1 606 0
 1470 018a 84EAE473 		eor	r3, r4, r4, asr #31
 1471 018e A3EBE473 		sub	r3, r3, r4, asr #31
 1472 0192 012B     		cmp	r3, #1
 1473 0194 3FF777AF 		bgt	.L94
 701:navigation.c  ****         
 702:navigation.c  ****         // Timer out failsafe: 
 703:navigation.c  ****         
 704:navigation.c  ****         /*
 705:navigation.c  ****         timer = Timer_straight_adjust_ReadCounter();
 706:navigation.c  ****         
 707:navigation.c  ****         if (timer < 35000) {
 708:navigation.c  ****             Motor_Left_Driver_Sleep();                  // puts it back to sleep
 709:navigation.c  ****             Motor_Right_Driver_Sleep();
 710:navigation.c  ****             moveDynamic(-30,SPEED,TRUE);                // calls movedynamic
 711:navigation.c  ****             moveDynamic(30, SPEED,TRUE);      
 712:navigation.c  ****             Motor_Left_Driver_Wakeup();
 713:navigation.c  ****             Motor_Left_Driver_WriteCompare(speed_left); // brings it back to continue the while loo
 714:navigation.c  ****             Motor_Right_Driver_Wakeup();
 715:navigation.c  ****             Motor_Right_Driver_WriteCompare(speed_right);
 716:navigation.c  ****             Control_Reset_Straight_Write(1);            // Resets the timer (I think)
 717:navigation.c  ****             CyDelay(10); 
 718:navigation.c  ****             Control_Reset_Straight_Write(0);
 719:navigation.c  ****             
 720:navigation.c  ****             sprintf(output, "timer count: %d", timer);
 721:navigation.c  ****             UART_1_PutString(output);
 722:navigation.c  ****         }
 723:navigation.c  ****         
 724:navigation.c  ****         */
 725:navigation.c  ****         
 726:navigation.c  ****         
 727:navigation.c  ****         
 728:navigation.c  ****     }         // This ensures that the turning worked correctly
 729:navigation.c  ****                                             // changed it from 10 to 2, this might change the way i
 730:navigation.c  ****     
 731:navigation.c  ****     
 732:navigation.c  ****     Motor_Left_Driver_Sleep();
 1474              		.loc 1 732 0
 1475 0198 FFF7FEFF 		bl	Motor_Left_Driver_Sleep
 1476              	.LVL248:
 733:navigation.c  ****     Motor_Right_Driver_Sleep();
 1477              		.loc 1 733 0
 1478 019c FFF7FEFF 		bl	Motor_Right_Driver_Sleep
 1479              	.LVL249:
 734:navigation.c  ****     Timer_straight_adjust_Stop();       // stops the timer 
 1480              		.loc 1 734 0
 1481 01a0 FFF7FEFF 		bl	Timer_straight_adjust_Stop
 1482              	.LVL250:
 735:navigation.c  **** }
 1483              		.loc 1 735 0
 1484 01a4 02B0     		add	sp, sp, #8
 1485              		.cfi_def_cfa_offset 16
 1486              		@ sp needed
 1487 01a6 70BD     		pop	{r4, r5, r6, pc}
 1488              	.LVL251:
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cc92bABD.s 			page 42


 1489              	.L97:
 1490              		.align	2
 1491              	.L96:
 1492 01a8 00000000 		.word	sensor_distances
 1493 01ac 08000000 		.word	.LC1
 1494 01b0 00000000 		.word	output
 1495 01b4 74000000 		.word	.LC7
 1496 01b8 88000000 		.word	.LC8
 1497 01bc A0000000 		.word	.LC9
 1498 01c0 AC000000 		.word	.LC10
 1499              		.cfi_endproc
 1500              	.LFE72:
 1501              		.size	straightAdjust, .-straightAdjust
 1502              		.section	.text.failsafeSideSensors,"ax",%progbits
 1503              		.align	2
 1504              		.global	failsafeSideSensors
 1505              		.thumb
 1506              		.thumb_func
 1507              		.type	failsafeSideSensors, %function
 1508              	failsafeSideSensors:
 1509              	.LFB71:
 529:navigation.c  ****     
 1510              		.loc 1 529 0
 1511              		.cfi_startproc
 1512              		@ args = 0, pretend = 0, frame = 0
 1513              		@ frame_needed = 0, uses_anonymous_args = 0
 1514              	.LVL252:
 1515 0000 38B5     		push	{r3, r4, r5, lr}
 1516              		.cfi_def_cfa_offset 16
 1517              		.cfi_offset 3, -16
 1518              		.cfi_offset 4, -12
 1519              		.cfi_offset 5, -8
 1520              		.cfi_offset 14, -4
 1521              	.LVL253:
 537:navigation.c  ****         return;
 1522              		.loc 1 537 0
 1523 0002 0C4B     		ldr	r3, .L102
 1524 0004 1B68     		ldr	r3, [r3]
 1525 0006 012B     		cmp	r3, #1
 1526 0008 13D0     		beq	.L98
 1527 000a 0C46     		mov	r4, r1
 1528 000c 0546     		mov	r5, r0
 541:navigation.c  ****     CyDelay(50);
 1529              		.loc 1 541 0
 1530 000e FFF7FEFF 		bl	distanceSensor
 1531              	.LVL254:
 542:navigation.c  ****     
 1532              		.loc 1 542 0
 1533 0012 3220     		movs	r0, #50
 1534 0014 FFF7FEFF 		bl	CyDelay
 1535              	.LVL255:
 544:navigation.c  ****                 || sensor_distances[side_sensing] < initial_value - drift_tolerance ){
 1536              		.loc 1 544 0
 1537 0018 074B     		ldr	r3, .L102+4
 1538 001a 53F82530 		ldr	r3, [r3, r5, lsl #2]
 1539 001e 04F10A02 		add	r2, r4, #10
 1540 0022 9342     		cmp	r3, r2
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cc92bABD.s 			page 43


 1541 0024 02DC     		bgt	.L100
 545:navigation.c  ****         // If it has drifted more than 10mm either side from the initial value, we perform a straig
 1542              		.loc 1 545 0
 1543 0026 0A3C     		subs	r4, r4, #10
 1544              	.LVL256:
 1545 0028 A342     		cmp	r3, r4
 1546 002a 02DA     		bge	.L98
 1547              	.LVL257:
 1548              	.L100:
 550:navigation.c  ****         
 1549              		.loc 1 550 0
 1550 002c 0720     		movs	r0, #7
 1551 002e FFF7FEFF 		bl	straightAdjust
 1552              	.LVL258:
 1553              	.L98:
 1554 0032 38BD     		pop	{r3, r4, r5, pc}
 1555              	.L103:
 1556              		.align	2
 1557              	.L102:
 1558 0034 00000000 		.word	safety_override
 1559 0038 00000000 		.word	sensor_distances
 1560              		.cfi_endproc
 1561              	.LFE71:
 1562              		.size	failsafeSideSensors, .-failsafeSideSensors
 1563              		.section	.text.straightAdjustBack,"ax",%progbits
 1564              		.align	2
 1565              		.global	straightAdjustBack
 1566              		.thumb
 1567              		.thumb_func
 1568              		.type	straightAdjustBack, %function
 1569              	straightAdjustBack:
 1570              	.LFB73:
 736:navigation.c  **** 
 737:navigation.c  **** 
 738:navigation.c  **** void straightAdjustBack(void) {
 1571              		.loc 1 738 0
 1572              		.cfi_startproc
 1573              		@ args = 0, pretend = 0, frame = 0
 1574              		@ frame_needed = 0, uses_anonymous_args = 0
 1575 0000 70B5     		push	{r4, r5, r6, lr}
 1576              		.cfi_def_cfa_offset 16
 1577              		.cfi_offset 4, -16
 1578              		.cfi_offset 5, -12
 1579              		.cfi_offset 6, -8
 1580              		.cfi_offset 14, -4
 1581              	.LVL259:
 739:navigation.c  ****     // Move left, if number gets bigger, then move right
 740:navigation.c  ****     // keep moving left & right until a minimum distance is found 
 741:navigation.c  ****         // should we add another sensor to the back of the robot??? 
 742:navigation.c  ****         //  will adding another sensor affect anything? 
 743:navigation.c  ****     int distance_check;
 744:navigation.c  ****     int distance_previous = 0;  // ensures we will enter the while loop
 745:navigation.c  ****     int direction = LEFT;       // start off turning left first 
 746:navigation.c  ****     int minimum_distance;                           
 747:navigation.c  ****         
 748:navigation.c  ****     distanceSensor(BACK);
 1582              		.loc 1 748 0
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cc92bABD.s 			page 44


 1583 0002 0420     		movs	r0, #4
 1584 0004 FFF7FEFF 		bl	distanceSensor
 1585              	.LVL260:
 749:navigation.c  ****     CyDelay(DELAY);
 1586              		.loc 1 749 0
 1587 0008 3C20     		movs	r0, #60
 1588 000a FFF7FEFF 		bl	CyDelay
 1589              	.LVL261:
 750:navigation.c  ****     
 751:navigation.c  ****     Motor_Left_Driver_Wakeup();
 1590              		.loc 1 751 0
 1591 000e FFF7FEFF 		bl	Motor_Left_Driver_Wakeup
 1592              	.LVL262:
 752:navigation.c  ****     Motor_Right_Driver_Wakeup();
 1593              		.loc 1 752 0
 1594 0012 FFF7FEFF 		bl	Motor_Right_Driver_Wakeup
 1595              	.LVL263:
 753:navigation.c  ****     Motor_Left_Driver_WriteCompare(25);
 1596              		.loc 1 753 0
 1597 0016 1920     		movs	r0, #25
 1598 0018 FFF7FEFF 		bl	Motor_Left_Driver_WriteCompare
 1599              	.LVL264:
 754:navigation.c  ****     Motor_Right_Driver_WriteCompare(25);
 1600              		.loc 1 754 0
 1601 001c 1920     		movs	r0, #25
 1602 001e FFF7FEFF 		bl	Motor_Right_Driver_WriteCompare
 1603              	.LVL265:
 755:navigation.c  ****     
 756:navigation.c  ****     distance_check = sensor_distances[BACK];
 1604              		.loc 1 756 0
 1605 0022 124B     		ldr	r3, .L113
 1606 0024 1C69     		ldr	r4, [r3, #16]
 1607              	.LVL266:
 745:navigation.c  ****     int minimum_distance;                           
 1608              		.loc 1 745 0
 1609 0026 0226     		movs	r6, #2
 744:navigation.c  ****     int direction = LEFT;       // start off turning left first 
 1610              		.loc 1 744 0
 1611 0028 0025     		movs	r5, #0
 1612 002a 00E0     		b	.L105
 1613              	.LVL267:
 1614              	.L110:
 757:navigation.c  ****     minimum_distance = distance_check;
 758:navigation.c  ****     
 759:navigation.c  ****     while(1) {
 760:navigation.c  ****         if (direction == LEFT) { Motor_Left_Control_Write(0); Motor_Right_Control_Write(1); }
 761:navigation.c  ****         else {Motor_Left_Control_Write(1); Motor_Right_Control_Write(0); }
 762:navigation.c  ****         
 763:navigation.c  ****         while (distance_previous > distance_check) {
 764:navigation.c  ****             // this will run while:
 765:navigation.c  ****                 // new distance values are getting smaller           
 766:navigation.c  ****             
 767:navigation.c  ****             // Updating the distance values: 
 768:navigation.c  ****             distance_previous = distance_check;
 769:navigation.c  ****             distanceSensor(BACK);
 770:navigation.c  ****             CyDelay(DELAY);
 771:navigation.c  ****             distance_check = sensor_distances[BACK];
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cc92bABD.s 			page 45


 772:navigation.c  ****         }
 773:navigation.c  ****         if (direction == LEFT) {direction = RIGHT; }        // This changes the directions
 1615              		.loc 1 773 0
 1616 002c 0326     		movs	r6, #3
 1617              	.LVL268:
 1618              	.L105:
 760:navigation.c  ****         else {Motor_Left_Control_Write(1); Motor_Right_Control_Write(0); }
 1619              		.loc 1 760 0
 1620 002e 022E     		cmp	r6, #2
 1621 0030 06D1     		bne	.L106
 760:navigation.c  ****         else {Motor_Left_Control_Write(1); Motor_Right_Control_Write(0); }
 1622              		.loc 1 760 0 is_stmt 0 discriminator 1
 1623 0032 0020     		movs	r0, #0
 1624 0034 FFF7FEFF 		bl	Motor_Left_Control_Write
 1625              	.LVL269:
 1626 0038 0120     		movs	r0, #1
 1627 003a FFF7FEFF 		bl	Motor_Right_Control_Write
 1628              	.LVL270:
 1629 003e 0FE0     		b	.L107
 1630              	.L106:
 761:navigation.c  ****         
 1631              		.loc 1 761 0 is_stmt 1
 1632 0040 0120     		movs	r0, #1
 1633 0042 FFF7FEFF 		bl	Motor_Left_Control_Write
 1634              	.LVL271:
 1635 0046 0020     		movs	r0, #0
 1636 0048 FFF7FEFF 		bl	Motor_Right_Control_Write
 1637              	.LVL272:
 1638 004c 08E0     		b	.L107
 1639              	.L109:
 1640              	.LVL273:
 769:navigation.c  ****             CyDelay(DELAY);
 1641              		.loc 1 769 0
 1642 004e 0420     		movs	r0, #4
 1643 0050 FFF7FEFF 		bl	distanceSensor
 1644              	.LVL274:
 770:navigation.c  ****             distance_check = sensor_distances[BACK];
 1645              		.loc 1 770 0
 1646 0054 3C20     		movs	r0, #60
 1647 0056 FFF7FEFF 		bl	CyDelay
 1648              	.LVL275:
 768:navigation.c  ****             distanceSensor(BACK);
 1649              		.loc 1 768 0
 1650 005a 2546     		mov	r5, r4
 771:navigation.c  ****         }
 1651              		.loc 1 771 0
 1652 005c 034B     		ldr	r3, .L113
 1653 005e 1C69     		ldr	r4, [r3, #16]
 1654              	.LVL276:
 1655              	.L107:
 763:navigation.c  ****             // this will run while:
 1656              		.loc 1 763 0
 1657 0060 AC42     		cmp	r4, r5
 1658 0062 F4DB     		blt	.L109
 1659              		.loc 1 773 0
 1660 0064 022E     		cmp	r6, #2
 1661 0066 E1D0     		beq	.L110
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cc92bABD.s 			page 46


 774:navigation.c  ****         else {direction = LEFT; }
 1662              		.loc 1 774 0
 1663 0068 0226     		movs	r6, #2
 1664              	.LVL277:
 1665 006a E0E7     		b	.L105
 1666              	.L114:
 1667              		.align	2
 1668              	.L113:
 1669 006c 00000000 		.word	sensor_distances
 1670              		.cfi_endproc
 1671              	.LFE73:
 1672              		.size	straightAdjustBack, .-straightAdjustBack
 1673              		.section	.text.toleranceCheck,"ax",%progbits
 1674              		.align	2
 1675              		.global	toleranceCheck
 1676              		.thumb
 1677              		.thumb_func
 1678              		.type	toleranceCheck, %function
 1679              	toleranceCheck:
 1680              	.LFB74:
 775:navigation.c  ****         
 776:navigation.c  ****         // This may enter an infinite loop where it can't decide if it is correct 
 777:navigation.c  ****     }
 778:navigation.c  ****     
 779:navigation.c  ****     Motor_Left_Driver_Sleep();
 780:navigation.c  ****     Motor_Right_Driver_Sleep();   
 781:navigation.c  ****     
 782:navigation.c  **** }
 783:navigation.c  **** 
 784:navigation.c  **** 
 785:navigation.c  **** void toleranceCheck(void) {
 1681              		.loc 1 785 0
 1682              		.cfi_startproc
 1683              		@ args = 0, pretend = 0, frame = 0
 1684              		@ frame_needed = 0, uses_anonymous_args = 0
 1685 0000 08B5     		push	{r3, lr}
 1686              		.cfi_def_cfa_offset 8
 1687              		.cfi_offset 3, -8
 1688              		.cfi_offset 14, -4
 1689              	.LVL278:
 786:navigation.c  ****     
 787:navigation.c  ****     // This function needs work
 788:navigation.c  **** 
 789:navigation.c  ****     int tolerance = 100;
 790:navigation.c  ****     
 791:navigation.c  ****     distanceSensor(FRONT_LEFT);
 1690              		.loc 1 791 0
 1691 0002 0020     		movs	r0, #0
 1692 0004 FFF7FEFF 		bl	distanceSensor
 1693              	.LVL279:
 792:navigation.c  ****     CyDelay(60);
 1694              		.loc 1 792 0
 1695 0008 3C20     		movs	r0, #60
 1696 000a FFF7FEFF 		bl	CyDelay
 1697              	.LVL280:
 793:navigation.c  ****     distanceSensor(FRONT_LEFT);
 1698              		.loc 1 793 0
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cc92bABD.s 			page 47


 1699 000e 0020     		movs	r0, #0
 1700 0010 FFF7FEFF 		bl	distanceSensor
 1701              	.LVL281:
 794:navigation.c  ****     CyDelay(60);
 1702              		.loc 1 794 0
 1703 0014 3C20     		movs	r0, #60
 1704 0016 FFF7FEFF 		bl	CyDelay
 1705              	.LVL282:
 795:navigation.c  ****     distanceSensor(BACK);
 1706              		.loc 1 795 0
 1707 001a 0420     		movs	r0, #4
 1708 001c FFF7FEFF 		bl	distanceSensor
 1709              	.LVL283:
 796:navigation.c  ****     CyDelay(60);
 1710              		.loc 1 796 0
 1711 0020 3C20     		movs	r0, #60
 1712 0022 FFF7FEFF 		bl	CyDelay
 1713              	.LVL284:
 797:navigation.c  ****     
 798:navigation.c  ****     while (sensor_distances[FRONT_LEFT] + sensor_distances[BACK] + tolerance < ARENA_WIDTH 
 1714              		.loc 1 798 0
 1715 0026 11E0     		b	.L116
 1716              	.L117:
 799:navigation.c  ****             
 800:navigation.c  ****     
 801:navigation.c  ****     
 802:navigation.c  ****     
 803:navigation.c  ****     || sensor_distances[FRONT_LEFT] + sensor_distances[BACK] + tolerance < ARENA_WIDTH) { 
 804:navigation.c  ****             // this checks if the ultrasonic distances being recorded are accurate
 805:navigation.c  ****             // if it is not within this threshold, there must be something up.  
 806:navigation.c  ****                 
 807:navigation.c  ****     distanceSensor(FRONT_LEFT);
 1717              		.loc 1 807 0
 1718 0028 0020     		movs	r0, #0
 1719 002a FFF7FEFF 		bl	distanceSensor
 1720              	.LVL285:
 808:navigation.c  ****     CyDelay(60);
 1721              		.loc 1 808 0
 1722 002e 3C20     		movs	r0, #60
 1723 0030 FFF7FEFF 		bl	CyDelay
 1724              	.LVL286:
 809:navigation.c  ****     distanceSensor(FRONT_LEFT);
 1725              		.loc 1 809 0
 1726 0034 0020     		movs	r0, #0
 1727 0036 FFF7FEFF 		bl	distanceSensor
 1728              	.LVL287:
 810:navigation.c  ****     CyDelay(60);
 1729              		.loc 1 810 0
 1730 003a 3C20     		movs	r0, #60
 1731 003c FFF7FEFF 		bl	CyDelay
 1732              	.LVL288:
 811:navigation.c  ****     distanceSensor(BACK);
 1733              		.loc 1 811 0
 1734 0040 0420     		movs	r0, #4
 1735 0042 FFF7FEFF 		bl	distanceSensor
 1736              	.LVL289:
 812:navigation.c  ****     CyDelay(60);
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cc92bABD.s 			page 48


 1737              		.loc 1 812 0
 1738 0046 3C20     		movs	r0, #60
 1739 0048 FFF7FEFF 		bl	CyDelay
 1740              	.LVL290:
 1741              	.L116:
 798:navigation.c  ****             
 1742              		.loc 1 798 0
 1743 004c 044A     		ldr	r2, .L119
 1744 004e 1168     		ldr	r1, [r2]
 1745 0050 1369     		ldr	r3, [r2, #16]
 1746 0052 0B44     		add	r3, r3, r1
 1747 0054 6433     		adds	r3, r3, #100
 1748 0056 B3F5966F 		cmp	r3, #1200
 1749 005a E5DB     		blt	.L117
 813:navigation.c  ****         
 814:navigation.c  ****     }
 815:navigation.c  ****     
 816:navigation.c  **** }
 1750              		.loc 1 816 0
 1751 005c 08BD     		pop	{r3, pc}
 1752              	.L120:
 1753 005e 00BF     		.align	2
 1754              	.L119:
 1755 0060 00000000 		.word	sensor_distances
 1756              		.cfi_endproc
 1757              	.LFE74:
 1758              		.size	toleranceCheck, .-toleranceCheck
 1759              		.section	.text.locatePucks,"ax",%progbits
 1760              		.align	2
 1761              		.global	locatePucks
 1762              		.thumb
 1763              		.thumb_func
 1764              		.type	locatePucks, %function
 1765              	locatePucks:
 1766              	.LFB75:
 817:navigation.c  **** 
 818:navigation.c  **** void locatePucks(void)
 819:navigation.c  **** {
 1767              		.loc 1 819 0
 1768              		.cfi_startproc
 1769              		@ args = 0, pretend = 0, frame = 0
 1770              		@ frame_needed = 0, uses_anonymous_args = 0
 1771              		@ link register save eliminated.
 1772 0000 7047     		bx	lr
 1773              		.cfi_endproc
 1774              	.LFE75:
 1775              		.size	locatePucks, .-locatePucks
 1776 0002 00BF     		.section	.text.blockAndPuckZoneFinding,"ax",%progbits
 1777              		.align	2
 1778              		.global	blockAndPuckZoneFinding
 1779              		.thumb
 1780              		.thumb_func
 1781              		.type	blockAndPuckZoneFinding, %function
 1782              	blockAndPuckZoneFinding:
 1783              	.LFB76:
 820:navigation.c  ****     
 821:navigation.c  ****     
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cc92bABD.s 			page 49


 822:navigation.c  ****     
 823:navigation.c  ****     
 824:navigation.c  **** }
 825:navigation.c  **** 
 826:navigation.c  **** void blockAndPuckZoneFinding(void) {
 1784              		.loc 1 826 0
 1785              		.cfi_startproc
 1786              		@ args = 0, pretend = 0, frame = 0
 1787              		@ frame_needed = 0, uses_anonymous_args = 0
 1788              		.loc 1 826 0
 1789 0000 70B5     		push	{r4, r5, r6, lr}
 1790              		.cfi_def_cfa_offset 16
 1791              		.cfi_offset 4, -16
 1792              		.cfi_offset 5, -12
 1793              		.cfi_offset 6, -8
 1794              		.cfi_offset 14, -4
 827:navigation.c  ****     // this function will scan while moving across, and depending on different thresholds, whill tr
 828:navigation.c  ****     // either for a block or a  puck
 829:navigation.c  ****     
 830:navigation.c  ****     int block_threshold; // the block toloerance will be anything less than 700mm - width of robot 
 831:navigation.c  ****     
 832:navigation.c  ****     int puck_threshold;     // the puck zone will be between 1200 - width of robot - opposite senso
 833:navigation.c  ****                                                         //  & 1200 - grid_width - width of robot - 
 834:navigation.c  ****     
 835:navigation.c  ****     int distance_sensor;    // the value the ultrasonic sensors will give us
 836:navigation.c  ****     
 837:navigation.c  ****     // first check the south facing sensor's value, ensure that it is correct
 838:navigation.c  ****     
 839:navigation.c  ****     
 840:navigation.c  ****     // need to scan the front or back sensors
 841:navigation.c  ****     // This function can be generalised, but I'm going to first write it just assuming we are movin
 842:navigation.c  ****     // from the west wall towards the east wall
 843:navigation.c  ****     
 844:navigation.c  ****     // The following while loop will run while the sensor is above the puck threshold and inbetween
 845:navigation.c  ****     // the puck threshold and the block threshold 
 846:navigation.c  ****     // as soon as it moves outside of this threshold, it will trigger, and then we will determine w
 847:navigation.c  ****     // the puck or the block that triggere it
 848:navigation.c  ****     
 849:navigation.c  ****     // Then it will keep moving, looking to trigger only for the other object
 850:navigation.c  ****     
 851:navigation.c  ****     // Currently expecting to go from a west to east direction
 852:navigation.c  ****     
 853:navigation.c  ****     straightAdjust(FRONT_SENSORS);  // adjusts on front sensor
 1795              		.loc 1 853 0
 1796 0002 0720     		movs	r0, #7
 1797 0004 FFF7FEFF 		bl	straightAdjust
 1798              	.LVL291:
 854:navigation.c  ****     distanceSensor(SIDE_LEFT);
 1799              		.loc 1 854 0
 1800 0008 0220     		movs	r0, #2
 1801 000a FFF7FEFF 		bl	distanceSensor
 1802              	.LVL292:
 855:navigation.c  ****     CyDelay(50);
 1803              		.loc 1 855 0
 1804 000e 3220     		movs	r0, #50
 1805 0010 FFF7FEFF 		bl	CyDelay
 1806              	.LVL293:
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cc92bABD.s 			page 50


 856:navigation.c  ****     
 857:navigation.c  ****     // Calculate the block threshold:
 858:navigation.c  ****     block_threshold = BLOCK_ZONE_NORTH - sensor_distances[SIDE_LEFT] - WIDTH_SENSOR_TO_SENSOR + (BL
 1807              		.loc 1 858 0
 1808 0014 194B     		ldr	r3, .L133
 1809 0016 9D68     		ldr	r5, [r3, #8]
 1810 0018 C5F50376 		rsb	r6, r5, #524
 1811 001c 0136     		adds	r6, r6, #1
 1812              	.LVL294:
 859:navigation.c  ****     
 860:navigation.c  ****     // Calulcate the puck threshold: 
 861:navigation.c  ****     puck_threshold = ARENA_LENGTH - (PUCK_GRID_FROM_NORTH/2) - sensor_distances[SIDE_LEFT] - WIDTH_
 1813              		.loc 1 861 0
 1814 001e C5F55275 		rsb	r5, r5, #840
 1815 0022 0335     		adds	r5, r5, #3
 1816              	.LVL295:
 862:navigation.c  ****     
 863:navigation.c  ****     
 864:navigation.c  ****     // Hardcoded values for both, assuming location of robot: (failsafe if dynamic versions don't w
 865:navigation.c  ****     if (block_threshold < 155 || block_threshold > 435) { block_threshold = 295; }
 1817              		.loc 1 865 0
 1818 0024 A6F19B03 		sub	r3, r6, #155
 1819 0028 B3F58C7F 		cmp	r3, #280
 1820 002c 01D9     		bls	.L123
 1821 002e 40F22716 		movw	r6, #295
 1822              	.LVL296:
 1823              	.L123:
 866:navigation.c  ****     if (puck_threshold < 525 || puck_threshold > 805) { puck_threshold = 650; }
 1824              		.loc 1 866 0
 1825 0032 A5F20D23 		subw	r3, r5, #525
 1826 0036 B3F58C7F 		cmp	r3, #280
 1827 003a 01D9     		bls	.L124
 1828 003c 40F28A25 		movw	r5, #650
 1829              	.LVL297:
 1830              	.L124:
 867:navigation.c  ****     
 868:navigation.c  ****     distance_sensor = (puck_threshold + block_threshold)/2;     // Used to initialise the while loo
 1831              		.loc 1 868 0
 1832 0040 7419     		adds	r4, r6, r5
 1833 0042 04EBD474 		add	r4, r4, r4, lsr #31
 1834 0046 6410     		asrs	r4, r4, #1
 1835              	.LVL298:
 869:navigation.c  ****     
 870:navigation.c  ****     //Waking up the motors 
 871:navigation.c  ****     int speed_left = SPEED;
 872:navigation.c  ****     int speed_right = SPEED;
 873:navigation.c  ****     
 874:navigation.c  ****     Motor_Left_Driver_Wakeup();
 1836              		.loc 1 874 0
 1837 0048 FFF7FEFF 		bl	Motor_Left_Driver_Wakeup
 1838              	.LVL299:
 875:navigation.c  ****     Motor_Left_Driver_WriteCompare(speed_left);
 1839              		.loc 1 875 0
 1840 004c C820     		movs	r0, #200
 1841 004e FFF7FEFF 		bl	Motor_Left_Driver_WriteCompare
 1842              	.LVL300:
 876:navigation.c  ****     Motor_Right_Driver_Wakeup();
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cc92bABD.s 			page 51


 1843              		.loc 1 876 0
 1844 0052 FFF7FEFF 		bl	Motor_Right_Driver_Wakeup
 1845              	.LVL301:
 877:navigation.c  ****     Motor_Right_Driver_WriteCompare(speed_right);
 1846              		.loc 1 877 0
 1847 0056 C820     		movs	r0, #200
 1848 0058 FFF7FEFF 		bl	Motor_Right_Driver_WriteCompare
 1849              	.LVL302:
 1850              	.L125:
 878:navigation.c  ****     
 879:navigation.c  ****     
 880:navigation.c  ****     
 881:navigation.c  ****     while (distance_sensor > puck_threshold) {
 1851              		.loc 1 881 0 discriminator 1
 1852 005c A542     		cmp	r5, r4
 1853 005e FDDB     		blt	.L125
 882:navigation.c  ****         // This will be tripped as soon as it hits the pucks or a block
 883:navigation.c  ****         
 884:navigation.c  ****     
 885:navigation.c  ****     } 
 886:navigation.c  ****     if (distance_sensor < puck_threshold && distance_sensor > block_threshold) {
 1854              		.loc 1 886 0
 1855 0060 04DD     		ble	.L126
 1856              		.loc 1 886 0 is_stmt 0 discriminator 1
 1857 0062 A642     		cmp	r6, r4
 1858 0064 02DA     		bge	.L126
 1859              	.L127:
 887:navigation.c  ****         // The pucks tripped the sensor
 888:navigation.c  ****         
 889:navigation.c  ****         
 890:navigation.c  ****         
 891:navigation.c  ****         // Enter while loop to find block: 
 892:navigation.c  ****         while (distance_sensor > block_threshold) {
 1860              		.loc 1 892 0 is_stmt 1 discriminator 1
 1861 0066 A642     		cmp	r6, r4
 1862 0068 FDDB     		blt	.L127
 1863 006a 70BD     		pop	{r4, r5, r6, pc}
 1864              	.LVL303:
 1865              	.L126:
 893:navigation.c  ****             
 894:navigation.c  ****             
 895:navigation.c  ****             
 896:navigation.c  ****         }
 897:navigation.c  **** 
 898:navigation.c  ****     }
 899:navigation.c  ****     else if (distance_sensor < block_threshold) {
 1866              		.loc 1 899 0
 1867 006c A642     		cmp	r6, r4
 1868 006e 03DD     		ble	.L122
 1869              	.L129:
 900:navigation.c  ****         // The block tripped the sensor 
 901:navigation.c  ****         
 902:navigation.c  ****         
 903:navigation.c  ****         
 904:navigation.c  ****         // Enter while loop to find puck:         
 905:navigation.c  ****         while (distance_sensor > puck_threshold && distance_sensor < block_threshold) {
 1870              		.loc 1 905 0 discriminator 2
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cc92bABD.s 			page 52


 1871 0070 A542     		cmp	r5, r4
 1872 0072 01DA     		bge	.L122
 1873              		.loc 1 905 0 is_stmt 0 discriminator 1
 1874 0074 A642     		cmp	r6, r4
 1875 0076 FBDC     		bgt	.L129
 1876              	.L122:
 1877 0078 70BD     		pop	{r4, r5, r6, pc}
 1878              	.LVL304:
 1879              	.L134:
 1880 007a 00BF     		.align	2
 1881              	.L133:
 1882 007c 00000000 		.word	sensor_distances
 1883              		.cfi_endproc
 1884              	.LFE76:
 1885              		.size	blockAndPuckZoneFinding, .-blockAndPuckZoneFinding
 1886              		.section	.text.straightAdjustSensor,"ax",%progbits
 1887              		.align	2
 1888              		.global	straightAdjustSensor
 1889              		.thumb
 1890              		.thumb_func
 1891              		.type	straightAdjustSensor, %function
 1892              	straightAdjustSensor:
 1893              	.LFB77:
 906:navigation.c  ****             
 907:navigation.c  ****             
 908:navigation.c  ****         }
 909:navigation.c  ****         
 910:navigation.c  ****     }
 911:navigation.c  ****     
 912:navigation.c  **** 
 913:navigation.c  **** }
 914:navigation.c  **** 
 915:navigation.c  **** 
 916:navigation.c  **** 
 917:navigation.c  **** 
 918:navigation.c  **** 
 919:navigation.c  **** void straightAdjustSensor(int sensor){
 1894              		.loc 1 919 0 is_stmt 1
 1895              		.cfi_startproc
 1896              		@ args = 0, pretend = 0, frame = 0
 1897              		@ frame_needed = 0, uses_anonymous_args = 0
 1898              	.LVL305:
 1899 0000 70B5     		push	{r4, r5, r6, lr}
 1900              		.cfi_def_cfa_offset 16
 1901              		.cfi_offset 4, -16
 1902              		.cfi_offset 5, -12
 1903              		.cfi_offset 6, -8
 1904              		.cfi_offset 14, -4
 1905 0002 0546     		mov	r5, r0
 920:navigation.c  ****     //Start by rotating a definite direction away from the rough center point we have aligned in be
 921:navigation.c  ****     moveSwivel(OVER_ROTATION_ANGLE, SPEED_LOW, FALSE);
 1906              		.loc 1 921 0
 1907 0004 0022     		movs	r2, #0
 1908 0006 4621     		movs	r1, #70
 1909 0008 1420     		movs	r0, #20
 1910              	.LVL306:
 1911 000a FFF7FEFF 		bl	moveSwivel
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cc92bABD.s 			page 53


 1912              	.LVL307:
 922:navigation.c  ****     distanceSensor(sensor);
 1913              		.loc 1 922 0
 1914 000e 2846     		mov	r0, r5
 1915 0010 FFF7FEFF 		bl	distanceSensor
 1916              	.LVL308:
 923:navigation.c  ****     int minimum = sensor_distances[sensor];
 1917              		.loc 1 923 0
 1918 0014 104B     		ldr	r3, .L141
 1919 0016 53F82560 		ldr	r6, [r3, r5, lsl #2]
 1920              	.LVL309:
 924:navigation.c  ****     int above_minimum_count = 0;
 1921              		.loc 1 924 0
 1922 001a 0024     		movs	r4, #0
 1923              	.LVL310:
 1924              	.L138:
 925:navigation.c  ****     while(1){
 926:navigation.c  ****         distanceSensor(sensor);
 1925              		.loc 1 926 0
 1926 001c 2846     		mov	r0, r5
 1927 001e FFF7FEFF 		bl	distanceSensor
 1928              	.LVL311:
 927:navigation.c  ****         CyDelay(100);
 1929              		.loc 1 927 0
 1930 0022 6420     		movs	r0, #100
 1931 0024 FFF7FEFF 		bl	CyDelay
 1932              	.LVL312:
 928:navigation.c  ****         
 929:navigation.c  ****         if (sensor_distances[sensor] < minimum) { // Update minimum if smaller value is found
 1933              		.loc 1 929 0
 1934 0028 0B4B     		ldr	r3, .L141
 1935 002a 53F82530 		ldr	r3, [r3, r5, lsl #2]
 1936 002e 9E42     		cmp	r6, r3
 1937 0030 01DC     		bgt	.L139
 930:navigation.c  ****             minimum = sensor_distances[sensor];
 931:navigation.c  ****             above_minimum_count = 0;
 932:navigation.c  ****         } 
 933:navigation.c  ****         else {
 934:navigation.c  ****             above_minimum_count++;   
 1938              		.loc 1 934 0
 1939 0032 0134     		adds	r4, r4, #1
 1940              	.LVL313:
 1941 0034 01E0     		b	.L136
 1942              	.L139:
 930:navigation.c  ****             minimum = sensor_distances[sensor];
 1943              		.loc 1 930 0
 1944 0036 1E46     		mov	r6, r3
 1945              	.LVL314:
 931:navigation.c  ****         } 
 1946              		.loc 1 931 0
 1947 0038 0024     		movs	r4, #0
 1948              	.LVL315:
 1949              	.L136:
 935:navigation.c  ****         }
 936:navigation.c  ****         
 937:navigation.c  ****         if (above_minimum_count == ABOVE_MINIMUM_COUNT_THRESHOLD){
 1950              		.loc 1 937 0
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cc92bABD.s 			page 54


 1951 003a 032C     		cmp	r4, #3
 1952 003c 04D1     		bne	.L137
 938:navigation.c  ****             moveSwivel(ABOVE_MINIMUM_COUNT_THRESHOLD, SPEED_LOW_ROTATE, FALSE);   
 1953              		.loc 1 938 0
 1954 003e 0022     		movs	r2, #0
 1955 0040 1921     		movs	r1, #25
 1956 0042 0320     		movs	r0, #3
 1957 0044 FFF7FEFF 		bl	moveSwivel
 1958              	.LVL316:
 1959              	.L137:
 939:navigation.c  ****         }
 940:navigation.c  **** 
 941:navigation.c  ****         moveSwivel(-1, SPEED_LOW_ROTATE, FALSE);
 1960              		.loc 1 941 0
 1961 0048 0022     		movs	r2, #0
 1962 004a 1921     		movs	r1, #25
 1963 004c 4FF0FF30 		mov	r0, #-1
 1964 0050 FFF7FEFF 		bl	moveSwivel
 1965              	.LVL317:
 942:navigation.c  ****     }
 1966              		.loc 1 942 0
 1967 0054 E2E7     		b	.L138
 1968              	.L142:
 1969 0056 00BF     		.align	2
 1970              	.L141:
 1971 0058 00000000 		.word	sensor_distances
 1972              		.cfi_endproc
 1973              	.LFE77:
 1974              		.size	straightAdjustSensor, .-straightAdjustSensor
 1975              		.comm	ultrasonic_flag,4,4
 1976              		.comm	initialisation,4,4
 1977              		.comm	output,32,4
 1978              		.comm	block_edge_location,16,4
 1979              		.comm	puck_rack_west_offsets,20,4
 1980              		.comm	puck_rack_scans,20,4
 1981              		.comm	internal_orientation,4,4
 1982              		.section	.rodata.str1.4,"aMS",%progbits,1
 1983              		.align	2
 1984              	.LC0:
 1985 0000 25692009 		.ascii	"%i \011\000"
 1985      00
 1986 0005 000000   		.space	3
 1987              	.LC1:
 1988 0008 25642009 		.ascii	"%d \011\000"
 1988      00
 1989 000d 000000   		.space	3
 1990              	.LC2:
 1991 0010 656E7465 		.ascii	"entering greater than\012\000"
 1991      72696E67 
 1991      20677265 
 1991      61746572 
 1991      20746861 
 1992 0027 00       		.space	1
 1993              	.LC3:
 1994 0028 656E7465 		.ascii	"entering less than\012\000"
 1994      72696E67 
 1994      206C6573 
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cc92bABD.s 			page 55


 1994      73207468 
 1994      616E0A00 
 1995              	.LC4:
 1996 003c 65786974 		.ascii	"exited loop\000"
 1996      6564206C 
 1996      6F6F7000 
 1997              	.LC5:
 1998 0048 53414645 		.ascii	"SAFETY MARGIN ACTIVATED @ %d\012\000"
 1998      5459204D 
 1998      41524749 
 1998      4E204143 
 1998      54495641 
 1999 0066 0000     		.space	2
 2000              	.LC6:
 2001 0068 0A206669 		.ascii	"\012 fin: %d \012\000"
 2001      6E3A2025 
 2001      64200A00 
 2002              	.LC7:
 2003 0074 64696666 		.ascii	"difference = %d, \012\000"
 2003      6572656E 
 2003      6365203D 
 2003      2025642C 
 2003      200A00
 2004 0087 00       		.space	1
 2005              	.LC8:
 2006 0088 20256420 		.ascii	" %d , %d \011 dif: %d, \012\000"
 2006      2C202564 
 2006      20092064 
 2006      69663A20 
 2006      25642C20 
 2007 009e 0000     		.space	2
 2008              	.LC9:
 2009 00a0 25642C20 		.ascii	"%d, %d, \000"
 2009      25642C20 
 2009      00
 2010 00a9 000000   		.space	3
 2011              	.LC10:
 2012 00ac 6469663A 		.ascii	"dif: %d, \012\000"
 2012      2025642C 
 2012      200A00
 2013              		.text
 2014              	.Letext0:
 2015              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 2016              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 2017              		.file 4 "Generated_Source\\PSoC5/core_cm3.h"
 2018              		.file 5 "navigation.h"
 2019              		.file 6 "ultrasonic.h"
 2020              		.file 7 "main.h"
 2021              		.file 8 "servo.h"
 2022              		.file 9 "colour.h"
 2023              		.file 10 "Generated_Source\\PSoC5/Motor_Left_Control.h"
 2024              		.file 11 "Generated_Source\\PSoC5/Motor_Right_Control.h"
 2025              		.file 12 "Generated_Source\\PSoC5/Motor_Left_Driver.h"
 2026              		.file 13 "Generated_Source\\PSoC5/Motor_Right_Driver.h"
 2027              		.file 14 "Generated_Source\\PSoC5/control_photodiode.h"
 2028              		.file 15 "Generated_Source\\PSoC5/Motor_Right_Decoder.h"
 2029              		.file 16 "Generated_Source\\PSoC5/Motor_Left_Decoder.h"
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cc92bABD.s 			page 56


 2030              		.file 17 "Generated_Source\\PSoC5/CyLib.h"
 2031              		.file 18 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4
 2032              		.file 19 "Generated_Source\\PSoC5/UART_1.h"
 2033              		.file 20 "motor.h"
 2034              		.file 21 "Generated_Source\\PSoC5/Timer_straight_adjust.h"
 2035              		.section	.debug_info,"",%progbits
 2036              	.Ldebug_info0:
 2037 0000 64160000 		.4byte	0x1664
 2038 0004 0400     		.2byte	0x4
 2039 0006 00000000 		.4byte	.Ldebug_abbrev0
 2040 000a 04       		.byte	0x4
 2041 000b 01       		.uleb128 0x1
 2042 000c CD060000 		.4byte	.LASF111
 2043 0010 0C       		.byte	0xc
 2044 0011 C4000000 		.4byte	.LASF112
 2045 0015 0B060000 		.4byte	.LASF113
 2046 0019 00000000 		.4byte	.Ldebug_ranges0+0
 2047 001d 00000000 		.4byte	0
 2048 0021 00000000 		.4byte	.Ldebug_line0
 2049 0025 02       		.uleb128 0x2
 2050 0026 01       		.byte	0x1
 2051 0027 06       		.byte	0x6
 2052 0028 F7030000 		.4byte	.LASF0
 2053 002c 02       		.uleb128 0x2
 2054 002d 01       		.byte	0x1
 2055 002e 08       		.byte	0x8
 2056 002f AB030000 		.4byte	.LASF1
 2057 0033 02       		.uleb128 0x2
 2058 0034 02       		.byte	0x2
 2059 0035 05       		.byte	0x5
 2060 0036 81010000 		.4byte	.LASF2
 2061 003a 02       		.uleb128 0x2
 2062 003b 02       		.byte	0x2
 2063 003c 07       		.byte	0x7
 2064 003d 90040000 		.4byte	.LASF3
 2065 0041 03       		.uleb128 0x3
 2066 0042 01060000 		.4byte	.LASF9
 2067 0046 02       		.byte	0x2
 2068 0047 3F       		.byte	0x3f
 2069 0048 4C000000 		.4byte	0x4c
 2070 004c 02       		.uleb128 0x2
 2071 004d 04       		.byte	0x4
 2072 004e 05       		.byte	0x5
 2073 004f A8020000 		.4byte	.LASF4
 2074 0053 02       		.uleb128 0x2
 2075 0054 04       		.byte	0x4
 2076 0055 07       		.byte	0x7
 2077 0056 5F050000 		.4byte	.LASF5
 2078 005a 02       		.uleb128 0x2
 2079 005b 08       		.byte	0x8
 2080 005c 05       		.byte	0x5
 2081 005d 6A020000 		.4byte	.LASF6
 2082 0061 02       		.uleb128 0x2
 2083 0062 08       		.byte	0x8
 2084 0063 07       		.byte	0x7
 2085 0064 17040000 		.4byte	.LASF7
 2086 0068 04       		.uleb128 0x4
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cc92bABD.s 			page 57


 2087 0069 04       		.byte	0x4
 2088 006a 05       		.byte	0x5
 2089 006b 696E7400 		.ascii	"int\000"
 2090 006f 02       		.uleb128 0x2
 2091 0070 04       		.byte	0x4
 2092 0071 07       		.byte	0x7
 2093 0072 2E040000 		.4byte	.LASF8
 2094 0076 03       		.uleb128 0x3
 2095 0077 D1020000 		.4byte	.LASF10
 2096 007b 03       		.byte	0x3
 2097 007c 2C       		.byte	0x2c
 2098 007d 41000000 		.4byte	0x41
 2099 0081 02       		.uleb128 0x2
 2100 0082 04       		.byte	0x4
 2101 0083 04       		.byte	0x4
 2102 0084 45020000 		.4byte	.LASF11
 2103 0088 02       		.uleb128 0x2
 2104 0089 08       		.byte	0x8
 2105 008a 04       		.byte	0x4
 2106 008b 7D050000 		.4byte	.LASF12
 2107 008f 02       		.uleb128 0x2
 2108 0090 01       		.byte	0x1
 2109 0091 08       		.byte	0x8
 2110 0092 D5040000 		.4byte	.LASF13
 2111 0096 02       		.uleb128 0x2
 2112 0097 08       		.byte	0x8
 2113 0098 04       		.byte	0x4
 2114 0099 1A010000 		.4byte	.LASF14
 2115 009d 02       		.uleb128 0x2
 2116 009e 04       		.byte	0x4
 2117 009f 07       		.byte	0x7
 2118 00a0 7F060000 		.4byte	.LASF15
 2119 00a4 05       		.uleb128 0x5
 2120 00a5 ED030000 		.4byte	.LASF18
 2121 00a9 01       		.byte	0x1
 2122 00aa 20       		.byte	0x20
 2123 00ab 00000000 		.4byte	.LFB64
 2124 00af 48000000 		.4byte	.LFE64-.LFB64
 2125 00b3 01       		.uleb128 0x1
 2126 00b4 9C       		.byte	0x9c
 2127 00b5 25010000 		.4byte	0x125
 2128 00b9 06       		.uleb128 0x6
 2129 00ba 28020000 		.4byte	.LASF16
 2130 00be 01       		.byte	0x1
 2131 00bf 22       		.byte	0x22
 2132 00c0 68000000 		.4byte	0x68
 2133 00c4 00000000 		.4byte	.LLST0
 2134 00c8 06       		.uleb128 0x6
 2135 00c9 F7050000 		.4byte	.LASF17
 2136 00cd 01       		.byte	0x1
 2137 00ce 23       		.byte	0x23
 2138 00cf 68000000 		.4byte	0x68
 2139 00d3 1F000000 		.4byte	.LLST1
 2140 00d7 07       		.uleb128 0x7
 2141 00d8 10000000 		.4byte	.LVL1
 2142 00dc 54150000 		.4byte	0x1554
 2143 00e0 EF000000 		.4byte	0xef
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cc92bABD.s 			page 58


 2144 00e4 08       		.uleb128 0x8
 2145 00e5 01       		.uleb128 0x1
 2146 00e6 50       		.byte	0x50
 2147 00e7 01       		.uleb128 0x1
 2148 00e8 33       		.byte	0x33
 2149 00e9 08       		.uleb128 0x8
 2150 00ea 01       		.uleb128 0x1
 2151 00eb 51       		.byte	0x51
 2152 00ec 01       		.uleb128 0x1
 2153 00ed 32       		.byte	0x32
 2154 00ee 00       		.byte	0
 2155 00ef 07       		.uleb128 0x7
 2156 00f0 1C000000 		.4byte	.LVL3
 2157 00f4 54150000 		.4byte	0x1554
 2158 00f8 07010000 		.4byte	0x107
 2159 00fc 08       		.uleb128 0x8
 2160 00fd 01       		.uleb128 0x1
 2161 00fe 50       		.byte	0x50
 2162 00ff 01       		.uleb128 0x1
 2163 0100 31       		.byte	0x31
 2164 0101 08       		.uleb128 0x8
 2165 0102 01       		.uleb128 0x1
 2166 0103 51       		.byte	0x51
 2167 0104 01       		.uleb128 0x1
 2168 0105 32       		.byte	0x32
 2169 0106 00       		.byte	0
 2170 0107 09       		.uleb128 0x9
 2171 0108 20000000 		.4byte	.LVL4
 2172 010c 5F150000 		.4byte	0x155f
 2173 0110 0A       		.uleb128 0xa
 2174 0111 2A000000 		.4byte	.LVL7
 2175 0115 54150000 		.4byte	0x1554
 2176 0119 08       		.uleb128 0x8
 2177 011a 01       		.uleb128 0x1
 2178 011b 50       		.byte	0x50
 2179 011c 01       		.uleb128 0x1
 2180 011d 33       		.byte	0x33
 2181 011e 08       		.uleb128 0x8
 2182 011f 01       		.uleb128 0x1
 2183 0120 51       		.byte	0x51
 2184 0121 01       		.uleb128 0x1
 2185 0122 32       		.byte	0x32
 2186 0123 00       		.byte	0
 2187 0124 00       		.byte	0
 2188 0125 05       		.uleb128 0x5
 2189 0126 9D030000 		.4byte	.LASF19
 2190 012a 01       		.byte	0x1
 2191 012b 54       		.byte	0x54
 2192 012c 00000000 		.4byte	.LFB66
 2193 0130 D0000000 		.4byte	.LFE66-.LFB66
 2194 0134 01       		.uleb128 0x1
 2195 0135 9C       		.byte	0x9c
 2196 0136 FD020000 		.4byte	0x2fd
 2197 013a 0B       		.uleb128 0xb
 2198 013b D8050000 		.4byte	.LASF29
 2199 013f 01       		.byte	0x1
 2200 0140 54       		.byte	0x54
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cc92bABD.s 			page 59


 2201 0141 68000000 		.4byte	0x68
 2202 0145 3D000000 		.4byte	.LLST2
 2203 0149 06       		.uleb128 0x6
 2204 014a 31050000 		.4byte	.LASF20
 2205 014e 01       		.byte	0x1
 2206 014f 56       		.byte	0x56
 2207 0150 68000000 		.4byte	0x68
 2208 0154 69000000 		.4byte	.LLST3
 2209 0158 0C       		.uleb128 0xc
 2210 0159 48040000 		.4byte	.LASF21
 2211 015d 01       		.byte	0x1
 2212 015e 58       		.byte	0x58
 2213 015f 68000000 		.4byte	0x68
 2214 0163 46       		.byte	0x46
 2215 0164 06       		.uleb128 0x6
 2216 0165 63070000 		.4byte	.LASF22
 2217 0169 01       		.byte	0x1
 2218 016a 5A       		.byte	0x5a
 2219 016b 68000000 		.4byte	0x68
 2220 016f 9E000000 		.4byte	.LLST4
 2221 0173 06       		.uleb128 0x6
 2222 0174 C6020000 		.4byte	.LASF23
 2223 0178 01       		.byte	0x1
 2224 0179 5B       		.byte	0x5b
 2225 017a 68000000 		.4byte	0x68
 2226 017e BC000000 		.4byte	.LLST5
 2227 0182 06       		.uleb128 0x6
 2228 0183 78000000 		.4byte	.LASF24
 2229 0187 01       		.byte	0x1
 2230 0188 5C       		.byte	0x5c
 2231 0189 68000000 		.4byte	0x68
 2232 018d DA000000 		.4byte	.LLST6
 2233 0191 06       		.uleb128 0x6
 2234 0192 6F070000 		.4byte	.LASF25
 2235 0196 01       		.byte	0x1
 2236 0197 5D       		.byte	0x5d
 2237 0198 68000000 		.4byte	0x68
 2238 019c FA000000 		.4byte	.LLST7
 2239 01a0 07       		.uleb128 0x7
 2240 01a1 0C000000 		.4byte	.LVL13
 2241 01a5 6A150000 		.4byte	0x156a
 2242 01a9 B3010000 		.4byte	0x1b3
 2243 01ad 08       		.uleb128 0x8
 2244 01ae 01       		.uleb128 0x1
 2245 01af 50       		.byte	0x50
 2246 01b0 01       		.uleb128 0x1
 2247 01b1 30       		.byte	0x30
 2248 01b2 00       		.byte	0
 2249 01b3 07       		.uleb128 0x7
 2250 01b4 12000000 		.4byte	.LVL14
 2251 01b8 75150000 		.4byte	0x1575
 2252 01bc C6010000 		.4byte	0x1c6
 2253 01c0 08       		.uleb128 0x8
 2254 01c1 01       		.uleb128 0x1
 2255 01c2 50       		.byte	0x50
 2256 01c3 01       		.uleb128 0x1
 2257 01c4 30       		.byte	0x30
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cc92bABD.s 			page 60


 2258 01c5 00       		.byte	0
 2259 01c6 09       		.uleb128 0x9
 2260 01c7 16000000 		.4byte	.LVL15
 2261 01cb 80150000 		.4byte	0x1580
 2262 01cf 07       		.uleb128 0x7
 2263 01d0 1C000000 		.4byte	.LVL16
 2264 01d4 8B150000 		.4byte	0x158b
 2265 01d8 E3010000 		.4byte	0x1e3
 2266 01dc 08       		.uleb128 0x8
 2267 01dd 01       		.uleb128 0x1
 2268 01de 50       		.byte	0x50
 2269 01df 02       		.uleb128 0x2
 2270 01e0 08       		.byte	0x8
 2271 01e1 46       		.byte	0x46
 2272 01e2 00       		.byte	0
 2273 01e3 09       		.uleb128 0x9
 2274 01e4 20000000 		.4byte	.LVL17
 2275 01e8 96150000 		.4byte	0x1596
 2276 01ec 07       		.uleb128 0x7
 2277 01ed 26000000 		.4byte	.LVL18
 2278 01f1 A1150000 		.4byte	0x15a1
 2279 01f5 00020000 		.4byte	0x200
 2280 01f9 08       		.uleb128 0x8
 2281 01fa 01       		.uleb128 0x1
 2282 01fb 50       		.byte	0x50
 2283 01fc 02       		.uleb128 0x2
 2284 01fd 08       		.byte	0x8
 2285 01fe 46       		.byte	0x46
 2286 01ff 00       		.byte	0
 2287 0200 09       		.uleb128 0x9
 2288 0201 2A000000 		.4byte	.LVL19
 2289 0205 AC150000 		.4byte	0x15ac
 2290 0209 07       		.uleb128 0x7
 2291 020a 30000000 		.4byte	.LVL20
 2292 020e B7150000 		.4byte	0x15b7
 2293 0212 1C020000 		.4byte	0x21c
 2294 0216 08       		.uleb128 0x8
 2295 0217 01       		.uleb128 0x1
 2296 0218 50       		.byte	0x50
 2297 0219 01       		.uleb128 0x1
 2298 021a 31       		.byte	0x31
 2299 021b 00       		.byte	0
 2300 021c 09       		.uleb128 0x9
 2301 021d 42000000 		.4byte	.LVL22
 2302 0221 C2150000 		.4byte	0x15c2
 2303 0225 09       		.uleb128 0x9
 2304 0226 48000000 		.4byte	.LVL24
 2305 022a CD150000 		.4byte	0x15cd
 2306 022e 09       		.uleb128 0x9
 2307 022f 4E000000 		.4byte	.LVL26
 2308 0233 5F150000 		.4byte	0x155f
 2309 0237 07       		.uleb128 0x7
 2310 0238 56000000 		.4byte	.LVL29
 2311 023c D8150000 		.4byte	0x15d8
 2312 0240 4A020000 		.4byte	0x24a
 2313 0244 08       		.uleb128 0x8
 2314 0245 01       		.uleb128 0x1
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cc92bABD.s 			page 61


 2315 0246 50       		.byte	0x50
 2316 0247 01       		.uleb128 0x1
 2317 0248 3A       		.byte	0x3a
 2318 0249 00       		.byte	0
 2319 024a 07       		.uleb128 0x7
 2320 024b 62000000 		.4byte	.LVL30
 2321 024f E3150000 		.4byte	0x15e3
 2322 0253 6D020000 		.4byte	0x26d
 2323 0257 08       		.uleb128 0x8
 2324 0258 01       		.uleb128 0x1
 2325 0259 50       		.byte	0x50
 2326 025a 02       		.uleb128 0x2
 2327 025b 77       		.byte	0x77
 2328 025c 00       		.sleb128 0
 2329 025d 08       		.uleb128 0x8
 2330 025e 01       		.uleb128 0x1
 2331 025f 51       		.byte	0x51
 2332 0260 05       		.uleb128 0x5
 2333 0261 03       		.byte	0x3
 2334 0262 00000000 		.4byte	.LC0
 2335 0266 08       		.uleb128 0x8
 2336 0267 01       		.uleb128 0x1
 2337 0268 52       		.byte	0x52
 2338 0269 02       		.uleb128 0x2
 2339 026a 76       		.byte	0x76
 2340 026b 00       		.sleb128 0
 2341 026c 00       		.byte	0
 2342 026d 07       		.uleb128 0x7
 2343 026e 68000000 		.4byte	.LVL31
 2344 0272 EE150000 		.4byte	0x15ee
 2345 0276 81020000 		.4byte	0x281
 2346 027a 08       		.uleb128 0x8
 2347 027b 01       		.uleb128 0x1
 2348 027c 50       		.byte	0x50
 2349 027d 02       		.uleb128 0x2
 2350 027e 77       		.byte	0x77
 2351 027f 00       		.sleb128 0
 2352 0280 00       		.byte	0
 2353 0281 07       		.uleb128 0x7
 2354 0282 96000000 		.4byte	.LVL36
 2355 0286 8B150000 		.4byte	0x158b
 2356 028a 95020000 		.4byte	0x295
 2357 028e 08       		.uleb128 0x8
 2358 028f 01       		.uleb128 0x1
 2359 0290 50       		.byte	0x50
 2360 0291 02       		.uleb128 0x2
 2361 0292 79       		.byte	0x79
 2362 0293 00       		.sleb128 0
 2363 0294 00       		.byte	0
 2364 0295 07       		.uleb128 0x7
 2365 0296 9C000000 		.4byte	.LVL37
 2366 029a A1150000 		.4byte	0x15a1
 2367 029e A9020000 		.4byte	0x2a9
 2368 02a2 08       		.uleb128 0x8
 2369 02a3 01       		.uleb128 0x1
 2370 02a4 50       		.byte	0x50
 2371 02a5 02       		.uleb128 0x2
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cc92bABD.s 			page 62


 2372 02a6 78       		.byte	0x78
 2373 02a7 00       		.sleb128 0
 2374 02a8 00       		.byte	0
 2375 02a9 07       		.uleb128 0x7
 2376 02aa A6000000 		.4byte	.LVL38
 2377 02ae F9150000 		.4byte	0x15f9
 2378 02b2 BC020000 		.4byte	0x2bc
 2379 02b6 08       		.uleb128 0x8
 2380 02b7 01       		.uleb128 0x1
 2381 02b8 50       		.byte	0x50
 2382 02b9 01       		.uleb128 0x1
 2383 02ba 30       		.byte	0x30
 2384 02bb 00       		.byte	0
 2385 02bc 07       		.uleb128 0x7
 2386 02bd AC000000 		.4byte	.LVL39
 2387 02c1 04160000 		.4byte	0x1604
 2388 02c5 CF020000 		.4byte	0x2cf
 2389 02c9 08       		.uleb128 0x8
 2390 02ca 01       		.uleb128 0x1
 2391 02cb 50       		.byte	0x50
 2392 02cc 01       		.uleb128 0x1
 2393 02cd 30       		.byte	0x30
 2394 02ce 00       		.byte	0
 2395 02cf 09       		.uleb128 0x9
 2396 02d0 B0000000 		.4byte	.LVL40
 2397 02d4 0F160000 		.4byte	0x160f
 2398 02d8 09       		.uleb128 0x9
 2399 02d9 B4000000 		.4byte	.LVL41
 2400 02dd 1A160000 		.4byte	0x161a
 2401 02e1 0A       		.uleb128 0xa
 2402 02e2 BE000000 		.4byte	.LVL42
 2403 02e6 25160000 		.4byte	0x1625
 2404 02ea 08       		.uleb128 0x8
 2405 02eb 01       		.uleb128 0x1
 2406 02ec 50       		.byte	0x50
 2407 02ed 02       		.uleb128 0x2
 2408 02ee 08       		.byte	0x8
 2409 02ef 25       		.byte	0x25
 2410 02f0 08       		.uleb128 0x8
 2411 02f1 01       		.uleb128 0x1
 2412 02f2 51       		.byte	0x51
 2413 02f3 02       		.uleb128 0x2
 2414 02f4 08       		.byte	0x8
 2415 02f5 64       		.byte	0x64
 2416 02f6 08       		.uleb128 0x8
 2417 02f7 01       		.uleb128 0x1
 2418 02f8 52       		.byte	0x52
 2419 02f9 01       		.uleb128 0x1
 2420 02fa 30       		.byte	0x30
 2421 02fb 00       		.byte	0
 2422 02fc 00       		.byte	0
 2423 02fd 05       		.uleb128 0x5
 2424 02fe 26010000 		.4byte	.LASF26
 2425 0302 01       		.byte	0x1
 2426 0303 40       		.byte	0x40
 2427 0304 00000000 		.4byte	.LFB65
 2428 0308 10000000 		.4byte	.LFE65-.LFB65
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cc92bABD.s 			page 63


 2429 030c 01       		.uleb128 0x1
 2430 030d 9C       		.byte	0x9c
 2431 030e 3A030000 		.4byte	0x33a
 2432 0312 06       		.uleb128 0x6
 2433 0313 3B040000 		.4byte	.LASF27
 2434 0317 01       		.byte	0x1
 2435 0318 44       		.byte	0x44
 2436 0319 68000000 		.4byte	0x68
 2437 031d 30010000 		.4byte	.LLST8
 2438 0321 09       		.uleb128 0x9
 2439 0322 06000000 		.4byte	.LVL44
 2440 0326 5F150000 		.4byte	0x155f
 2441 032a 0A       		.uleb128 0xa
 2442 032b 0E000000 		.4byte	.LVL46
 2443 032f 25010000 		.4byte	0x125
 2444 0333 08       		.uleb128 0x8
 2445 0334 01       		.uleb128 0x1
 2446 0335 50       		.byte	0x50
 2447 0336 01       		.uleb128 0x1
 2448 0337 35       		.byte	0x35
 2449 0338 00       		.byte	0
 2450 0339 00       		.byte	0
 2451 033a 0D       		.uleb128 0xd
 2452 033b 1A000000 		.4byte	.LASF28
 2453 033f 01       		.byte	0x1
 2454 0340 6301     		.2byte	0x163
 2455 0342 00000000 		.4byte	.LFB68
 2456 0346 3C000000 		.4byte	.LFE68-.LFB68
 2457 034a 01       		.uleb128 0x1
 2458 034b 9C       		.byte	0x9c
 2459 034c A0030000 		.4byte	0x3a0
 2460 0350 0E       		.uleb128 0xe
 2461 0351 D1000000 		.4byte	.LASF30
 2462 0355 01       		.byte	0x1
 2463 0356 6301     		.2byte	0x163
 2464 0358 68000000 		.4byte	0x68
 2465 035c 43010000 		.4byte	.LLST9
 2466 0360 0E       		.uleb128 0xe
 2467 0361 48040000 		.4byte	.LASF21
 2468 0365 01       		.byte	0x1
 2469 0366 6301     		.2byte	0x163
 2470 0368 68000000 		.4byte	0x68
 2471 036c 70010000 		.4byte	.LLST10
 2472 0370 0F       		.uleb128 0xf
 2473 0371 B6000000 		.4byte	.LASF31
 2474 0375 01       		.byte	0x1
 2475 0376 6801     		.2byte	0x168
 2476 0378 68000000 		.4byte	0x68
 2477 037c 91010000 		.4byte	.LLST11
 2478 0380 0F       		.uleb128 0xf
 2479 0381 E2050000 		.4byte	.LASF32
 2480 0385 01       		.byte	0x1
 2481 0386 6D01     		.2byte	0x16d
 2482 0388 68000000 		.4byte	0x68
 2483 038c C1010000 		.4byte	.LLST12
 2484 0390 0A       		.uleb128 0xa
 2485 0391 2C000000 		.4byte	.LVL53
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cc92bABD.s 			page 64


 2486 0395 30160000 		.4byte	0x1630
 2487 0399 08       		.uleb128 0x8
 2488 039a 01       		.uleb128 0x1
 2489 039b 52       		.byte	0x52
 2490 039c 01       		.uleb128 0x1
 2491 039d 31       		.byte	0x31
 2492 039e 00       		.byte	0
 2493 039f 00       		.byte	0
 2494 03a0 0D       		.uleb128 0xd
 2495 03a1 B7040000 		.4byte	.LASF33
 2496 03a5 01       		.byte	0x1
 2497 03a6 7A01     		.2byte	0x17a
 2498 03a8 00000000 		.4byte	.LFB69
 2499 03ac 4C010000 		.4byte	.LFE69-.LFB69
 2500 03b0 01       		.uleb128 0x1
 2501 03b1 9C       		.byte	0x9c
 2502 03b2 99060000 		.4byte	0x699
 2503 03b6 0E       		.uleb128 0xe
 2504 03b7 08030000 		.4byte	.LASF34
 2505 03bb 01       		.byte	0x1
 2506 03bc 7A01     		.2byte	0x17a
 2507 03be 68000000 		.4byte	0x68
 2508 03c2 E8010000 		.4byte	.LLST13
 2509 03c6 0E       		.uleb128 0xe
 2510 03c7 10010000 		.4byte	.LASF35
 2511 03cb 01       		.byte	0x1
 2512 03cc 7A01     		.2byte	0x17a
 2513 03ce 68000000 		.4byte	0x68
 2514 03d2 14020000 		.4byte	.LLST14
 2515 03d6 0E       		.uleb128 0xe
 2516 03d7 4E040000 		.4byte	.LASF36
 2517 03db 01       		.byte	0x1
 2518 03dc 7A01     		.2byte	0x17a
 2519 03de 68000000 		.4byte	0x68
 2520 03e2 40020000 		.4byte	.LLST15
 2521 03e6 0E       		.uleb128 0xe
 2522 03e7 08000000 		.4byte	.LASF37
 2523 03eb 01       		.byte	0x1
 2524 03ec 7A01     		.2byte	0x17a
 2525 03ee 68000000 		.4byte	0x68
 2526 03f2 6C020000 		.4byte	.LLST16
 2527 03f6 0E       		.uleb128 0xe
 2528 03f7 48040000 		.4byte	.LASF21
 2529 03fb 01       		.byte	0x1
 2530 03fc 7A01     		.2byte	0x17a
 2531 03fe 68000000 		.4byte	0x68
 2532 0402 98020000 		.4byte	.LLST17
 2533 0406 10       		.uleb128 0x10
 2534 0407 C6020000 		.4byte	.LASF23
 2535 040b 01       		.byte	0x1
 2536 040c 8101     		.2byte	0x181
 2537 040e 68000000 		.4byte	0x68
 2538 0412 10       		.uleb128 0x10
 2539 0413 63070000 		.4byte	.LASF22
 2540 0417 01       		.byte	0x1
 2541 0418 8201     		.2byte	0x182
 2542 041a 68000000 		.4byte	0x68
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cc92bABD.s 			page 65


 2543 041e 11       		.uleb128 0x11
 2544 041f 78040000 		.4byte	.LASF38
 2545 0423 01       		.byte	0x1
 2546 0424 8301     		.2byte	0x183
 2547 0426 68000000 		.4byte	0x68
 2548 042a BF7C     		.sleb128 -449
 2549 042c 0F       		.uleb128 0xf
 2550 042d 78000000 		.4byte	.LASF24
 2551 0431 01       		.byte	0x1
 2552 0432 8501     		.2byte	0x185
 2553 0434 68000000 		.4byte	0x68
 2554 0438 B8020000 		.4byte	.LLST18
 2555 043c 0F       		.uleb128 0xf
 2556 043d 6F070000 		.4byte	.LASF25
 2557 0441 01       		.byte	0x1
 2558 0442 8601     		.2byte	0x186
 2559 0444 68000000 		.4byte	0x68
 2560 0448 B8020000 		.4byte	.LLST18
 2561 044c 0F       		.uleb128 0xf
 2562 044d 35020000 		.4byte	.LASF39
 2563 0451 01       		.byte	0x1
 2564 0452 8901     		.2byte	0x189
 2565 0454 68000000 		.4byte	0x68
 2566 0458 D8020000 		.4byte	.LLST20
 2567 045c 07       		.uleb128 0x7
 2568 045d 1E000000 		.4byte	.LVL60
 2569 0461 3B160000 		.4byte	0x163b
 2570 0465 70040000 		.4byte	0x470
 2571 0469 08       		.uleb128 0x8
 2572 046a 01       		.uleb128 0x1
 2573 046b 50       		.byte	0x50
 2574 046c 02       		.uleb128 0x2
 2575 046d 74       		.byte	0x74
 2576 046e 00       		.sleb128 0
 2577 046f 00       		.byte	0
 2578 0470 07       		.uleb128 0x7
 2579 0471 24000000 		.4byte	.LVL61
 2580 0475 D8150000 		.4byte	0x15d8
 2581 0479 84040000 		.4byte	0x484
 2582 047d 08       		.uleb128 0x8
 2583 047e 01       		.uleb128 0x1
 2584 047f 50       		.byte	0x50
 2585 0480 02       		.uleb128 0x2
 2586 0481 08       		.byte	0x8
 2587 0482 32       		.byte	0x32
 2588 0483 00       		.byte	0
 2589 0484 07       		.uleb128 0x7
 2590 0485 36000000 		.4byte	.LVL63
 2591 0489 E3150000 		.4byte	0x15e3
 2592 048d A7040000 		.4byte	0x4a7
 2593 0491 08       		.uleb128 0x8
 2594 0492 01       		.uleb128 0x1
 2595 0493 50       		.byte	0x50
 2596 0494 02       		.uleb128 0x2
 2597 0495 76       		.byte	0x76
 2598 0496 00       		.sleb128 0
 2599 0497 08       		.uleb128 0x8
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cc92bABD.s 			page 66


 2600 0498 01       		.uleb128 0x1
 2601 0499 51       		.byte	0x51
 2602 049a 05       		.uleb128 0x5
 2603 049b 03       		.byte	0x3
 2604 049c 08000000 		.4byte	.LC1
 2605 04a0 08       		.uleb128 0x8
 2606 04a1 01       		.uleb128 0x1
 2607 04a2 52       		.byte	0x52
 2608 04a3 02       		.uleb128 0x2
 2609 04a4 75       		.byte	0x75
 2610 04a5 00       		.sleb128 0
 2611 04a6 00       		.byte	0
 2612 04a7 07       		.uleb128 0x7
 2613 04a8 3C000000 		.4byte	.LVL64
 2614 04ac EE150000 		.4byte	0x15ee
 2615 04b0 BB040000 		.4byte	0x4bb
 2616 04b4 08       		.uleb128 0x8
 2617 04b5 01       		.uleb128 0x1
 2618 04b6 50       		.byte	0x50
 2619 04b7 02       		.uleb128 0x2
 2620 04b8 76       		.byte	0x76
 2621 04b9 00       		.sleb128 0
 2622 04ba 00       		.byte	0
 2623 04bb 07       		.uleb128 0x7
 2624 04bc 56000000 		.4byte	.LVL65
 2625 04c0 EE150000 		.4byte	0x15ee
 2626 04c4 D2040000 		.4byte	0x4d2
 2627 04c8 08       		.uleb128 0x8
 2628 04c9 01       		.uleb128 0x1
 2629 04ca 50       		.byte	0x50
 2630 04cb 05       		.uleb128 0x5
 2631 04cc 03       		.byte	0x3
 2632 04cd 10000000 		.4byte	.LC2
 2633 04d1 00       		.byte	0
 2634 04d2 09       		.uleb128 0x9
 2635 04d3 5A000000 		.4byte	.LVL66
 2636 04d7 CD150000 		.4byte	0x15cd
 2637 04db 09       		.uleb128 0x9
 2638 04dc 5E000000 		.4byte	.LVL67
 2639 04e0 C2150000 		.4byte	0x15c2
 2640 04e4 07       		.uleb128 0x7
 2641 04e5 70000000 		.4byte	.LVL68
 2642 04e9 46160000 		.4byte	0x1646
 2643 04ed 09050000 		.4byte	0x509
 2644 04f1 08       		.uleb128 0x8
 2645 04f2 01       		.uleb128 0x1
 2646 04f3 50       		.byte	0x50
 2647 04f4 02       		.uleb128 0x2
 2648 04f5 09       		.byte	0x9
 2649 04f6 FB       		.byte	0xfb
 2650 04f7 08       		.uleb128 0x8
 2651 04f8 01       		.uleb128 0x1
 2652 04f9 51       		.byte	0x51
 2653 04fa 01       		.uleb128 0x1
 2654 04fb 37       		.byte	0x37
 2655 04fc 08       		.uleb128 0x8
 2656 04fd 01       		.uleb128 0x1
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cc92bABD.s 			page 67


 2657 04fe 52       		.byte	0x52
 2658 04ff 03       		.uleb128 0x3
 2659 0500 91       		.byte	0x91
 2660 0501 00       		.sleb128 0
 2661 0502 06       		.byte	0x6
 2662 0503 08       		.uleb128 0x8
 2663 0504 01       		.uleb128 0x1
 2664 0505 53       		.byte	0x53
 2665 0506 01       		.uleb128 0x1
 2666 0507 30       		.byte	0x30
 2667 0508 00       		.byte	0
 2668 0509 07       		.uleb128 0x7
 2669 050a 82000000 		.4byte	.LVL69
 2670 050e 46160000 		.4byte	0x1646
 2671 0512 2E050000 		.4byte	0x52e
 2672 0516 08       		.uleb128 0x8
 2673 0517 01       		.uleb128 0x1
 2674 0518 50       		.byte	0x50
 2675 0519 01       		.uleb128 0x1
 2676 051a 35       		.byte	0x35
 2677 051b 08       		.uleb128 0x8
 2678 051c 01       		.uleb128 0x1
 2679 051d 51       		.byte	0x51
 2680 051e 02       		.uleb128 0x2
 2681 051f 09       		.byte	0x9
 2682 0520 F9       		.byte	0xf9
 2683 0521 08       		.uleb128 0x8
 2684 0522 01       		.uleb128 0x1
 2685 0523 52       		.byte	0x52
 2686 0524 03       		.uleb128 0x3
 2687 0525 91       		.byte	0x91
 2688 0526 00       		.sleb128 0
 2689 0527 06       		.byte	0x6
 2690 0528 08       		.uleb128 0x8
 2691 0529 01       		.uleb128 0x1
 2692 052a 53       		.byte	0x53
 2693 052b 01       		.uleb128 0x1
 2694 052c 30       		.byte	0x30
 2695 052d 00       		.byte	0
 2696 052e 07       		.uleb128 0x7
 2697 052f 88000000 		.4byte	.LVL70
 2698 0533 3B160000 		.4byte	0x163b
 2699 0537 42050000 		.4byte	0x542
 2700 053b 08       		.uleb128 0x8
 2701 053c 01       		.uleb128 0x1
 2702 053d 50       		.byte	0x50
 2703 053e 02       		.uleb128 0x2
 2704 053f 74       		.byte	0x74
 2705 0540 00       		.sleb128 0
 2706 0541 00       		.byte	0
 2707 0542 07       		.uleb128 0x7
 2708 0543 8E000000 		.4byte	.LVL71
 2709 0547 D8150000 		.4byte	0x15d8
 2710 054b 56050000 		.4byte	0x556
 2711 054f 08       		.uleb128 0x8
 2712 0550 01       		.uleb128 0x1
 2713 0551 50       		.byte	0x50
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cc92bABD.s 			page 68


 2714 0552 02       		.uleb128 0x2
 2715 0553 08       		.byte	0x8
 2716 0554 32       		.byte	0x32
 2717 0555 00       		.byte	0
 2718 0556 07       		.uleb128 0x7
 2719 0557 A0000000 		.4byte	.LVL73
 2720 055b E3150000 		.4byte	0x15e3
 2721 055f 79050000 		.4byte	0x579
 2722 0563 08       		.uleb128 0x8
 2723 0564 01       		.uleb128 0x1
 2724 0565 50       		.byte	0x50
 2725 0566 02       		.uleb128 0x2
 2726 0567 76       		.byte	0x76
 2727 0568 00       		.sleb128 0
 2728 0569 08       		.uleb128 0x8
 2729 056a 01       		.uleb128 0x1
 2730 056b 51       		.byte	0x51
 2731 056c 05       		.uleb128 0x5
 2732 056d 03       		.byte	0x3
 2733 056e 08000000 		.4byte	.LC1
 2734 0572 08       		.uleb128 0x8
 2735 0573 01       		.uleb128 0x1
 2736 0574 52       		.byte	0x52
 2737 0575 02       		.uleb128 0x2
 2738 0576 75       		.byte	0x75
 2739 0577 00       		.sleb128 0
 2740 0578 00       		.byte	0
 2741 0579 07       		.uleb128 0x7
 2742 057a A6000000 		.4byte	.LVL74
 2743 057e EE150000 		.4byte	0x15ee
 2744 0582 8D050000 		.4byte	0x58d
 2745 0586 08       		.uleb128 0x8
 2746 0587 01       		.uleb128 0x1
 2747 0588 50       		.byte	0x50
 2748 0589 02       		.uleb128 0x2
 2749 058a 76       		.byte	0x76
 2750 058b 00       		.sleb128 0
 2751 058c 00       		.byte	0
 2752 058d 09       		.uleb128 0x9
 2753 058e BE000000 		.4byte	.LVL75
 2754 0592 CD150000 		.4byte	0x15cd
 2755 0596 09       		.uleb128 0x9
 2756 0597 C2000000 		.4byte	.LVL76
 2757 059b C2150000 		.4byte	0x15c2
 2758 059f 07       		.uleb128 0x7
 2759 05a0 C8000000 		.4byte	.LVL77
 2760 05a4 EE150000 		.4byte	0x15ee
 2761 05a8 B6050000 		.4byte	0x5b6
 2762 05ac 08       		.uleb128 0x8
 2763 05ad 01       		.uleb128 0x1
 2764 05ae 50       		.byte	0x50
 2765 05af 05       		.uleb128 0x5
 2766 05b0 03       		.byte	0x3
 2767 05b1 28000000 		.4byte	.LC3
 2768 05b5 00       		.byte	0
 2769 05b6 07       		.uleb128 0x7
 2770 05b7 DA000000 		.4byte	.LVL78
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cc92bABD.s 			page 69


 2771 05bb 46160000 		.4byte	0x1646
 2772 05bf DB050000 		.4byte	0x5db
 2773 05c3 08       		.uleb128 0x8
 2774 05c4 01       		.uleb128 0x1
 2775 05c5 50       		.byte	0x50
 2776 05c6 02       		.uleb128 0x2
 2777 05c7 09       		.byte	0x9
 2778 05c8 FB       		.byte	0xfb
 2779 05c9 08       		.uleb128 0x8
 2780 05ca 01       		.uleb128 0x1
 2781 05cb 51       		.byte	0x51
 2782 05cc 01       		.uleb128 0x1
 2783 05cd 37       		.byte	0x37
 2784 05ce 08       		.uleb128 0x8
 2785 05cf 01       		.uleb128 0x1
 2786 05d0 52       		.byte	0x52
 2787 05d1 03       		.uleb128 0x3
 2788 05d2 91       		.byte	0x91
 2789 05d3 00       		.sleb128 0
 2790 05d4 06       		.byte	0x6
 2791 05d5 08       		.uleb128 0x8
 2792 05d6 01       		.uleb128 0x1
 2793 05d7 53       		.byte	0x53
 2794 05d8 01       		.uleb128 0x1
 2795 05d9 30       		.byte	0x30
 2796 05da 00       		.byte	0
 2797 05db 07       		.uleb128 0x7
 2798 05dc EC000000 		.4byte	.LVL79
 2799 05e0 46160000 		.4byte	0x1646
 2800 05e4 00060000 		.4byte	0x600
 2801 05e8 08       		.uleb128 0x8
 2802 05e9 01       		.uleb128 0x1
 2803 05ea 50       		.byte	0x50
 2804 05eb 01       		.uleb128 0x1
 2805 05ec 35       		.byte	0x35
 2806 05ed 08       		.uleb128 0x8
 2807 05ee 01       		.uleb128 0x1
 2808 05ef 51       		.byte	0x51
 2809 05f0 02       		.uleb128 0x2
 2810 05f1 09       		.byte	0x9
 2811 05f2 F9       		.byte	0xf9
 2812 05f3 08       		.uleb128 0x8
 2813 05f4 01       		.uleb128 0x1
 2814 05f5 52       		.byte	0x52
 2815 05f6 03       		.uleb128 0x3
 2816 05f7 91       		.byte	0x91
 2817 05f8 00       		.sleb128 0
 2818 05f9 06       		.byte	0x6
 2819 05fa 08       		.uleb128 0x8
 2820 05fb 01       		.uleb128 0x1
 2821 05fc 53       		.byte	0x53
 2822 05fd 01       		.uleb128 0x1
 2823 05fe 30       		.byte	0x30
 2824 05ff 00       		.byte	0
 2825 0600 07       		.uleb128 0x7
 2826 0601 F2000000 		.4byte	.LVL80
 2827 0605 3B160000 		.4byte	0x163b
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cc92bABD.s 			page 70


 2828 0609 14060000 		.4byte	0x614
 2829 060d 08       		.uleb128 0x8
 2830 060e 01       		.uleb128 0x1
 2831 060f 50       		.byte	0x50
 2832 0610 02       		.uleb128 0x2
 2833 0611 74       		.byte	0x74
 2834 0612 00       		.sleb128 0
 2835 0613 00       		.byte	0
 2836 0614 07       		.uleb128 0x7
 2837 0615 F8000000 		.4byte	.LVL81
 2838 0619 D8150000 		.4byte	0x15d8
 2839 061d 28060000 		.4byte	0x628
 2840 0621 08       		.uleb128 0x8
 2841 0622 01       		.uleb128 0x1
 2842 0623 50       		.byte	0x50
 2843 0624 02       		.uleb128 0x2
 2844 0625 08       		.byte	0x8
 2845 0626 32       		.byte	0x32
 2846 0627 00       		.byte	0
 2847 0628 07       		.uleb128 0x7
 2848 0629 0A010000 		.4byte	.LVL83
 2849 062d E3150000 		.4byte	0x15e3
 2850 0631 4B060000 		.4byte	0x64b
 2851 0635 08       		.uleb128 0x8
 2852 0636 01       		.uleb128 0x1
 2853 0637 50       		.byte	0x50
 2854 0638 02       		.uleb128 0x2
 2855 0639 76       		.byte	0x76
 2856 063a 00       		.sleb128 0
 2857 063b 08       		.uleb128 0x8
 2858 063c 01       		.uleb128 0x1
 2859 063d 51       		.byte	0x51
 2860 063e 05       		.uleb128 0x5
 2861 063f 03       		.byte	0x3
 2862 0640 08000000 		.4byte	.LC1
 2863 0644 08       		.uleb128 0x8
 2864 0645 01       		.uleb128 0x1
 2865 0646 52       		.byte	0x52
 2866 0647 02       		.uleb128 0x2
 2867 0648 75       		.byte	0x75
 2868 0649 00       		.sleb128 0
 2869 064a 00       		.byte	0
 2870 064b 07       		.uleb128 0x7
 2871 064c 10010000 		.4byte	.LVL84
 2872 0650 EE150000 		.4byte	0x15ee
 2873 0654 5F060000 		.4byte	0x65f
 2874 0658 08       		.uleb128 0x8
 2875 0659 01       		.uleb128 0x1
 2876 065a 50       		.byte	0x50
 2877 065b 02       		.uleb128 0x2
 2878 065c 76       		.byte	0x76
 2879 065d 00       		.sleb128 0
 2880 065e 00       		.byte	0
 2881 065f 07       		.uleb128 0x7
 2882 0660 22010000 		.4byte	.LVL85
 2883 0664 EE150000 		.4byte	0x15ee
 2884 0668 76060000 		.4byte	0x676
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cc92bABD.s 			page 71


 2885 066c 08       		.uleb128 0x8
 2886 066d 01       		.uleb128 0x1
 2887 066e 50       		.byte	0x50
 2888 066f 05       		.uleb128 0x5
 2889 0670 03       		.byte	0x3
 2890 0671 3C000000 		.4byte	.LC4
 2891 0675 00       		.byte	0
 2892 0676 07       		.uleb128 0x7
 2893 0677 28010000 		.4byte	.LVL86
 2894 067b F9150000 		.4byte	0x15f9
 2895 067f 89060000 		.4byte	0x689
 2896 0683 08       		.uleb128 0x8
 2897 0684 01       		.uleb128 0x1
 2898 0685 50       		.byte	0x50
 2899 0686 01       		.uleb128 0x1
 2900 0687 30       		.byte	0x30
 2901 0688 00       		.byte	0
 2902 0689 0A       		.uleb128 0xa
 2903 068a 2E010000 		.4byte	.LVL87
 2904 068e 04160000 		.4byte	0x1604
 2905 0692 08       		.uleb128 0x8
 2906 0693 01       		.uleb128 0x1
 2907 0694 50       		.byte	0x50
 2908 0695 01       		.uleb128 0x1
 2909 0696 30       		.byte	0x30
 2910 0697 00       		.byte	0
 2911 0698 00       		.byte	0
 2912 0699 12       		.uleb128 0x12
 2913 069a 4A050000 		.4byte	.LASF60
 2914 069e 01       		.byte	0x1
 2915 069f E401     		.2byte	0x1e4
 2916 06a1 68000000 		.4byte	0x68
 2917 06a5 00000000 		.4byte	.LFB70
 2918 06a9 84000000 		.4byte	.LFE70-.LFB70
 2919 06ad 01       		.uleb128 0x1
 2920 06ae 9C       		.byte	0x9c
 2921 06af 80070000 		.4byte	0x780
 2922 06b3 0E       		.uleb128 0xe
 2923 06b4 10010000 		.4byte	.LASF35
 2924 06b8 01       		.byte	0x1
 2925 06b9 E401     		.2byte	0x1e4
 2926 06bb 68000000 		.4byte	0x68
 2927 06bf EB020000 		.4byte	.LLST21
 2928 06c3 0F       		.uleb128 0xf
 2929 06c4 37010000 		.4byte	.LASF40
 2930 06c8 01       		.byte	0x1
 2931 06c9 E501     		.2byte	0x1e5
 2932 06cb 68000000 		.4byte	0x68
 2933 06cf 57030000 		.4byte	.LLST22
 2934 06d3 07       		.uleb128 0x7
 2935 06d4 12000000 		.4byte	.LVL91
 2936 06d8 3B160000 		.4byte	0x163b
 2937 06dc E6060000 		.4byte	0x6e6
 2938 06e0 08       		.uleb128 0x8
 2939 06e1 01       		.uleb128 0x1
 2940 06e2 50       		.byte	0x50
 2941 06e3 01       		.uleb128 0x1
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cc92bABD.s 			page 72


 2942 06e4 34       		.byte	0x34
 2943 06e5 00       		.byte	0
 2944 06e6 07       		.uleb128 0x7
 2945 06e7 18000000 		.4byte	.LVL92
 2946 06eb D8150000 		.4byte	0x15d8
 2947 06ef FA060000 		.4byte	0x6fa
 2948 06f3 08       		.uleb128 0x8
 2949 06f4 01       		.uleb128 0x1
 2950 06f5 50       		.byte	0x50
 2951 06f6 02       		.uleb128 0x2
 2952 06f7 08       		.byte	0x8
 2953 06f8 32       		.byte	0x32
 2954 06f9 00       		.byte	0
 2955 06fa 07       		.uleb128 0x7
 2956 06fb 2C000000 		.4byte	.LVL94
 2957 06ff E3150000 		.4byte	0x15e3
 2958 0703 17070000 		.4byte	0x717
 2959 0707 08       		.uleb128 0x8
 2960 0708 01       		.uleb128 0x1
 2961 0709 50       		.byte	0x50
 2962 070a 02       		.uleb128 0x2
 2963 070b 74       		.byte	0x74
 2964 070c 00       		.sleb128 0
 2965 070d 08       		.uleb128 0x8
 2966 070e 01       		.uleb128 0x1
 2967 070f 51       		.byte	0x51
 2968 0710 05       		.uleb128 0x5
 2969 0711 03       		.byte	0x3
 2970 0712 48000000 		.4byte	.LC5
 2971 0716 00       		.byte	0
 2972 0717 07       		.uleb128 0x7
 2973 0718 32000000 		.4byte	.LVL95
 2974 071c EE150000 		.4byte	0x15ee
 2975 0720 2B070000 		.4byte	0x72b
 2976 0724 08       		.uleb128 0x8
 2977 0725 01       		.uleb128 0x1
 2978 0726 50       		.byte	0x50
 2979 0727 02       		.uleb128 0x2
 2980 0728 74       		.byte	0x74
 2981 0729 00       		.sleb128 0
 2982 072a 00       		.byte	0
 2983 072b 07       		.uleb128 0x7
 2984 072c 40000000 		.4byte	.LVL98
 2985 0730 3B160000 		.4byte	0x163b
 2986 0734 3E070000 		.4byte	0x73e
 2987 0738 08       		.uleb128 0x8
 2988 0739 01       		.uleb128 0x1
 2989 073a 50       		.byte	0x50
 2990 073b 01       		.uleb128 0x1
 2991 073c 30       		.byte	0x30
 2992 073d 00       		.byte	0
 2993 073e 07       		.uleb128 0x7
 2994 073f 46000000 		.4byte	.LVL99
 2995 0743 D8150000 		.4byte	0x15d8
 2996 0747 52070000 		.4byte	0x752
 2997 074b 08       		.uleb128 0x8
 2998 074c 01       		.uleb128 0x1
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cc92bABD.s 			page 73


 2999 074d 50       		.byte	0x50
 3000 074e 02       		.uleb128 0x2
 3001 074f 08       		.byte	0x8
 3002 0750 32       		.byte	0x32
 3003 0751 00       		.byte	0
 3004 0752 07       		.uleb128 0x7
 3005 0753 5A000000 		.4byte	.LVL101
 3006 0757 E3150000 		.4byte	0x15e3
 3007 075b 6F070000 		.4byte	0x76f
 3008 075f 08       		.uleb128 0x8
 3009 0760 01       		.uleb128 0x1
 3010 0761 50       		.byte	0x50
 3011 0762 02       		.uleb128 0x2
 3012 0763 74       		.byte	0x74
 3013 0764 00       		.sleb128 0
 3014 0765 08       		.uleb128 0x8
 3015 0766 01       		.uleb128 0x1
 3016 0767 51       		.byte	0x51
 3017 0768 05       		.uleb128 0x5
 3018 0769 03       		.byte	0x3
 3019 076a 48000000 		.4byte	.LC5
 3020 076e 00       		.byte	0
 3021 076f 0A       		.uleb128 0xa
 3022 0770 60000000 		.4byte	.LVL102
 3023 0774 EE150000 		.4byte	0x15ee
 3024 0778 08       		.uleb128 0x8
 3025 0779 01       		.uleb128 0x1
 3026 077a 50       		.byte	0x50
 3027 077b 02       		.uleb128 0x2
 3028 077c 74       		.byte	0x74
 3029 077d 00       		.sleb128 0
 3030 077e 00       		.byte	0
 3031 077f 00       		.byte	0
 3032 0780 13       		.uleb128 0x13
 3033 0781 75060000 		.4byte	.LASF41
 3034 0785 01       		.byte	0x1
 3035 0786 8D       		.byte	0x8d
 3036 0787 00000000 		.4byte	.LFB67
 3037 078b CC020000 		.4byte	.LFE67-.LFB67
 3038 078f 01       		.uleb128 0x1
 3039 0790 9C       		.byte	0x9c
 3040 0791 C70B0000 		.4byte	0xbc7
 3041 0795 0B       		.uleb128 0xb
 3042 0796 08030000 		.4byte	.LASF34
 3043 079a 01       		.byte	0x1
 3044 079b 8D       		.byte	0x8d
 3045 079c 68000000 		.4byte	0x68
 3046 07a0 80030000 		.4byte	.LLST23
 3047 07a4 0B       		.uleb128 0xb
 3048 07a5 10010000 		.4byte	.LASF35
 3049 07a9 01       		.byte	0x1
 3050 07aa 8D       		.byte	0x8d
 3051 07ab 68000000 		.4byte	0x68
 3052 07af AC030000 		.4byte	.LLST24
 3053 07b3 0B       		.uleb128 0xb
 3054 07b4 4E040000 		.4byte	.LASF36
 3055 07b8 01       		.byte	0x1
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cc92bABD.s 			page 74


 3056 07b9 8D       		.byte	0x8d
 3057 07ba 68000000 		.4byte	0x68
 3058 07be D7030000 		.4byte	.LLST25
 3059 07c2 0B       		.uleb128 0xb
 3060 07c3 08000000 		.4byte	.LASF37
 3061 07c7 01       		.byte	0x1
 3062 07c8 8D       		.byte	0x8d
 3063 07c9 68000000 		.4byte	0x68
 3064 07cd 02040000 		.4byte	.LLST26
 3065 07d1 0B       		.uleb128 0xb
 3066 07d2 48040000 		.4byte	.LASF21
 3067 07d6 01       		.byte	0x1
 3068 07d7 8D       		.byte	0x8d
 3069 07d8 68000000 		.4byte	0x68
 3070 07dc 2E040000 		.4byte	.LLST27
 3071 07e0 0B       		.uleb128 0xb
 3072 07e1 2C000000 		.4byte	.LASF42
 3073 07e5 01       		.byte	0x1
 3074 07e6 8D       		.byte	0x8d
 3075 07e7 68000000 		.4byte	0x68
 3076 07eb 4E040000 		.4byte	.LLST28
 3077 07ef 06       		.uleb128 0x6
 3078 07f0 C6020000 		.4byte	.LASF23
 3079 07f4 01       		.byte	0x1
 3080 07f5 97       		.byte	0x97
 3081 07f6 68000000 		.4byte	0x68
 3082 07fa 6E040000 		.4byte	.LLST29
 3083 07fe 06       		.uleb128 0x6
 3084 07ff 63070000 		.4byte	.LASF22
 3085 0803 01       		.byte	0x1
 3086 0804 98       		.byte	0x98
 3087 0805 68000000 		.4byte	0x68
 3088 0809 BA040000 		.4byte	.LLST30
 3089 080d 06       		.uleb128 0x6
 3090 080e 78000000 		.4byte	.LASF24
 3091 0812 01       		.byte	0x1
 3092 0813 99       		.byte	0x99
 3093 0814 68000000 		.4byte	0x68
 3094 0818 D8040000 		.4byte	.LLST31
 3095 081c 06       		.uleb128 0x6
 3096 081d 6F070000 		.4byte	.LASF25
 3097 0821 01       		.byte	0x1
 3098 0822 9A       		.byte	0x9a
 3099 0823 68000000 		.4byte	0x68
 3100 0827 0C050000 		.4byte	.LLST32
 3101 082b 06       		.uleb128 0x6
 3102 082c C6050000 		.4byte	.LASF43
 3103 0830 01       		.byte	0x1
 3104 0831 9B       		.byte	0x9b
 3105 0832 68000000 		.4byte	0x68
 3106 0836 40050000 		.4byte	.LLST33
 3107 083a 06       		.uleb128 0x6
 3108 083b 35020000 		.4byte	.LASF39
 3109 083f 01       		.byte	0x1
 3110 0840 9D       		.byte	0x9d
 3111 0841 68000000 		.4byte	0x68
 3112 0845 A8050000 		.4byte	.LLST34
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cc92bABD.s 			page 75


 3113 0849 06       		.uleb128 0x6
 3114 084a 78040000 		.4byte	.LASF38
 3115 084e 01       		.byte	0x1
 3116 084f 9F       		.byte	0x9f
 3117 0850 68000000 		.4byte	0x68
 3118 0854 BB050000 		.4byte	.LLST35
 3119 0858 06       		.uleb128 0x6
 3120 0859 72010000 		.4byte	.LASF44
 3121 085d 01       		.byte	0x1
 3122 085e A1       		.byte	0xa1
 3123 085f 68000000 		.4byte	0x68
 3124 0863 2B060000 		.4byte	.LLST36
 3125 0867 14       		.uleb128 0x14
 3126 0868 98000000 		.4byte	.LBB2
 3127 086c E6000000 		.4byte	.LBE2-.LBB2
 3128 0870 82090000 		.4byte	0x982
 3129 0874 06       		.uleb128 0x6
 3130 0875 A3040000 		.4byte	.LASF45
 3131 0879 01       		.byte	0x1
 3132 087a FD       		.byte	0xfd
 3133 087b 68000000 		.4byte	0x68
 3134 087f 98060000 		.4byte	.LLST37
 3135 0883 09       		.uleb128 0x9
 3136 0884 9C000000 		.4byte	.LVL126
 3137 0888 CD150000 		.4byte	0x15cd
 3138 088c 09       		.uleb128 0x9
 3139 088d A4000000 		.4byte	.LVL128
 3140 0891 C2150000 		.4byte	0x15c2
 3141 0895 07       		.uleb128 0x7
 3142 0896 D0000000 		.4byte	.LVL135
 3143 089a 8B150000 		.4byte	0x158b
 3144 089e A9080000 		.4byte	0x8a9
 3145 08a2 08       		.uleb128 0x8
 3146 08a3 01       		.uleb128 0x1
 3147 08a4 50       		.byte	0x50
 3148 08a5 02       		.uleb128 0x2
 3149 08a6 79       		.byte	0x79
 3150 08a7 00       		.sleb128 0
 3151 08a8 00       		.byte	0
 3152 08a9 07       		.uleb128 0x7
 3153 08aa D8000000 		.4byte	.LVL136
 3154 08ae A1150000 		.4byte	0x15a1
 3155 08b2 BD080000 		.4byte	0x8bd
 3156 08b6 08       		.uleb128 0x8
 3157 08b7 01       		.uleb128 0x1
 3158 08b8 50       		.byte	0x50
 3159 08b9 02       		.uleb128 0x2
 3160 08ba 7A       		.byte	0x7a
 3161 08bb 00       		.sleb128 0
 3162 08bc 00       		.byte	0
 3163 08bd 07       		.uleb128 0x7
 3164 08be E6000000 		.4byte	.LVL137
 3165 08c2 3B160000 		.4byte	0x163b
 3166 08c6 D0080000 		.4byte	0x8d0
 3167 08ca 08       		.uleb128 0x8
 3168 08cb 01       		.uleb128 0x1
 3169 08cc 50       		.byte	0x50
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cc92bABD.s 			page 76


 3170 08cd 01       		.uleb128 0x1
 3171 08ce 30       		.byte	0x30
 3172 08cf 00       		.byte	0
 3173 08d0 07       		.uleb128 0x7
 3174 08d1 EC000000 		.4byte	.LVL138
 3175 08d5 D8150000 		.4byte	0x15d8
 3176 08d9 E4080000 		.4byte	0x8e4
 3177 08dd 08       		.uleb128 0x8
 3178 08de 01       		.uleb128 0x1
 3179 08df 50       		.byte	0x50
 3180 08e0 02       		.uleb128 0x2
 3181 08e1 08       		.byte	0x8
 3182 08e2 32       		.byte	0x32
 3183 08e3 00       		.byte	0
 3184 08e4 07       		.uleb128 0x7
 3185 08e5 06010000 		.4byte	.LVL141
 3186 08e9 3B160000 		.4byte	0x163b
 3187 08ed F7080000 		.4byte	0x8f7
 3188 08f1 08       		.uleb128 0x8
 3189 08f2 01       		.uleb128 0x1
 3190 08f3 50       		.byte	0x50
 3191 08f4 01       		.uleb128 0x1
 3192 08f5 31       		.byte	0x31
 3193 08f6 00       		.byte	0
 3194 08f7 07       		.uleb128 0x7
 3195 08f8 0C010000 		.4byte	.LVL142
 3196 08fc D8150000 		.4byte	0x15d8
 3197 0900 0B090000 		.4byte	0x90b
 3198 0904 08       		.uleb128 0x8
 3199 0905 01       		.uleb128 0x1
 3200 0906 50       		.byte	0x50
 3201 0907 02       		.uleb128 0x2
 3202 0908 08       		.byte	0x8
 3203 0909 32       		.byte	0x32
 3204 090a 00       		.byte	0
 3205 090b 07       		.uleb128 0x7
 3206 090c 1E010000 		.4byte	.LVL145
 3207 0910 3B160000 		.4byte	0x163b
 3208 0914 1F090000 		.4byte	0x91f
 3209 0918 08       		.uleb128 0x8
 3210 0919 01       		.uleb128 0x1
 3211 091a 50       		.byte	0x50
 3212 091b 02       		.uleb128 0x2
 3213 091c 74       		.byte	0x74
 3214 091d 00       		.sleb128 0
 3215 091e 00       		.byte	0
 3216 091f 07       		.uleb128 0x7
 3217 0920 24010000 		.4byte	.LVL146
 3218 0924 D8150000 		.4byte	0x15d8
 3219 0928 33090000 		.4byte	0x933
 3220 092c 08       		.uleb128 0x8
 3221 092d 01       		.uleb128 0x1
 3222 092e 50       		.byte	0x50
 3223 092f 02       		.uleb128 0x2
 3224 0930 08       		.byte	0x8
 3225 0931 32       		.byte	0x32
 3226 0932 00       		.byte	0
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cc92bABD.s 			page 77


 3227 0933 07       		.uleb128 0x7
 3228 0934 34010000 		.4byte	.LVL148
 3229 0938 E3150000 		.4byte	0x15e3
 3230 093c 59090000 		.4byte	0x959
 3231 0940 08       		.uleb128 0x8
 3232 0941 01       		.uleb128 0x1
 3233 0942 50       		.byte	0x50
 3234 0943 05       		.uleb128 0x5
 3235 0944 03       		.byte	0x3
 3236 0945 00000000 		.4byte	output
 3237 0949 08       		.uleb128 0x8
 3238 094a 01       		.uleb128 0x1
 3239 094b 51       		.byte	0x51
 3240 094c 05       		.uleb128 0x5
 3241 094d 03       		.byte	0x3
 3242 094e 08000000 		.4byte	.LC1
 3243 0952 08       		.uleb128 0x8
 3244 0953 01       		.uleb128 0x1
 3245 0954 52       		.byte	0x52
 3246 0955 02       		.uleb128 0x2
 3247 0956 75       		.byte	0x75
 3248 0957 00       		.sleb128 0
 3249 0958 00       		.byte	0
 3250 0959 07       		.uleb128 0x7
 3251 095a 3A010000 		.4byte	.LVL149
 3252 095e EE150000 		.4byte	0x15ee
 3253 0962 70090000 		.4byte	0x970
 3254 0966 08       		.uleb128 0x8
 3255 0967 01       		.uleb128 0x1
 3256 0968 50       		.byte	0x50
 3257 0969 05       		.uleb128 0x5
 3258 096a 03       		.byte	0x3
 3259 096b 00000000 		.4byte	output
 3260 096f 00       		.byte	0
 3261 0970 0A       		.uleb128 0xa
 3262 0971 76010000 		.4byte	.LVL155
 3263 0975 99060000 		.4byte	0x699
 3264 0979 08       		.uleb128 0x8
 3265 097a 01       		.uleb128 0x1
 3266 097b 50       		.byte	0x50
 3267 097c 03       		.uleb128 0x3
 3268 097d 91       		.byte	0x91
 3269 097e 54       		.sleb128 -44
 3270 097f 06       		.byte	0x6
 3271 0980 00       		.byte	0
 3272 0981 00       		.byte	0
 3273 0982 14       		.uleb128 0x14
 3274 0983 B2010000 		.4byte	.LBB3
 3275 0987 A4000000 		.4byte	.LBE3-.LBB3
 3276 098b 500A0000 		.4byte	0xa50
 3277 098f 0F       		.uleb128 0xf
 3278 0990 A3040000 		.4byte	.LASF45
 3279 0994 01       		.byte	0x1
 3280 0995 3501     		.2byte	0x135
 3281 0997 68000000 		.4byte	0x68
 3282 099b AC060000 		.4byte	.LLST38
 3283 099f 09       		.uleb128 0x9
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cc92bABD.s 			page 78


 3284 09a0 B6010000 		.4byte	.LVL161
 3285 09a4 CD150000 		.4byte	0x15cd
 3286 09a8 09       		.uleb128 0x9
 3287 09a9 BE010000 		.4byte	.LVL163
 3288 09ad C2150000 		.4byte	0x15c2
 3289 09b1 07       		.uleb128 0x7
 3290 09b2 EA010000 		.4byte	.LVL170
 3291 09b6 8B150000 		.4byte	0x158b
 3292 09ba C5090000 		.4byte	0x9c5
 3293 09be 08       		.uleb128 0x8
 3294 09bf 01       		.uleb128 0x1
 3295 09c0 50       		.byte	0x50
 3296 09c1 02       		.uleb128 0x2
 3297 09c2 79       		.byte	0x79
 3298 09c3 00       		.sleb128 0
 3299 09c4 00       		.byte	0
 3300 09c5 07       		.uleb128 0x7
 3301 09c6 F2010000 		.4byte	.LVL171
 3302 09ca A1150000 		.4byte	0x15a1
 3303 09ce D9090000 		.4byte	0x9d9
 3304 09d2 08       		.uleb128 0x8
 3305 09d3 01       		.uleb128 0x1
 3306 09d4 50       		.byte	0x50
 3307 09d5 02       		.uleb128 0x2
 3308 09d6 7A       		.byte	0x7a
 3309 09d7 00       		.sleb128 0
 3310 09d8 00       		.byte	0
 3311 09d9 07       		.uleb128 0x7
 3312 09da F8010000 		.4byte	.LVL172
 3313 09de 3B160000 		.4byte	0x163b
 3314 09e2 ED090000 		.4byte	0x9ed
 3315 09e6 08       		.uleb128 0x8
 3316 09e7 01       		.uleb128 0x1
 3317 09e8 50       		.byte	0x50
 3318 09e9 02       		.uleb128 0x2
 3319 09ea 74       		.byte	0x74
 3320 09eb 00       		.sleb128 0
 3321 09ec 00       		.byte	0
 3322 09ed 07       		.uleb128 0x7
 3323 09ee FE010000 		.4byte	.LVL173
 3324 09f2 D8150000 		.4byte	0x15d8
 3325 09f6 010A0000 		.4byte	0xa01
 3326 09fa 08       		.uleb128 0x8
 3327 09fb 01       		.uleb128 0x1
 3328 09fc 50       		.byte	0x50
 3329 09fd 02       		.uleb128 0x2
 3330 09fe 08       		.byte	0x8
 3331 09ff 32       		.byte	0x32
 3332 0a00 00       		.byte	0
 3333 0a01 07       		.uleb128 0x7
 3334 0a02 0E020000 		.4byte	.LVL175
 3335 0a06 E3150000 		.4byte	0x15e3
 3336 0a0a 270A0000 		.4byte	0xa27
 3337 0a0e 08       		.uleb128 0x8
 3338 0a0f 01       		.uleb128 0x1
 3339 0a10 50       		.byte	0x50
 3340 0a11 05       		.uleb128 0x5
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cc92bABD.s 			page 79


 3341 0a12 03       		.byte	0x3
 3342 0a13 00000000 		.4byte	output
 3343 0a17 08       		.uleb128 0x8
 3344 0a18 01       		.uleb128 0x1
 3345 0a19 51       		.byte	0x51
 3346 0a1a 05       		.uleb128 0x5
 3347 0a1b 03       		.byte	0x3
 3348 0a1c 08000000 		.4byte	.LC1
 3349 0a20 08       		.uleb128 0x8
 3350 0a21 01       		.uleb128 0x1
 3351 0a22 52       		.byte	0x52
 3352 0a23 02       		.uleb128 0x2
 3353 0a24 75       		.byte	0x75
 3354 0a25 00       		.sleb128 0
 3355 0a26 00       		.byte	0
 3356 0a27 07       		.uleb128 0x7
 3357 0a28 14020000 		.4byte	.LVL176
 3358 0a2c EE150000 		.4byte	0x15ee
 3359 0a30 3E0A0000 		.4byte	0xa3e
 3360 0a34 08       		.uleb128 0x8
 3361 0a35 01       		.uleb128 0x1
 3362 0a36 50       		.byte	0x50
 3363 0a37 05       		.uleb128 0x5
 3364 0a38 03       		.byte	0x3
 3365 0a39 00000000 		.4byte	output
 3366 0a3d 00       		.byte	0
 3367 0a3e 0A       		.uleb128 0xa
 3368 0a3f 50020000 		.4byte	.LVL182
 3369 0a43 99060000 		.4byte	0x699
 3370 0a47 08       		.uleb128 0x8
 3371 0a48 01       		.uleb128 0x1
 3372 0a49 50       		.byte	0x50
 3373 0a4a 03       		.uleb128 0x3
 3374 0a4b 91       		.byte	0x91
 3375 0a4c 54       		.sleb128 -44
 3376 0a4d 06       		.byte	0x6
 3377 0a4e 00       		.byte	0
 3378 0a4f 00       		.byte	0
 3379 0a50 07       		.uleb128 0x7
 3380 0a51 1A000000 		.4byte	.LVL111
 3381 0a55 6A150000 		.4byte	0x156a
 3382 0a59 630A0000 		.4byte	0xa63
 3383 0a5d 08       		.uleb128 0x8
 3384 0a5e 01       		.uleb128 0x1
 3385 0a5f 50       		.byte	0x50
 3386 0a60 01       		.uleb128 0x1
 3387 0a61 30       		.byte	0x30
 3388 0a62 00       		.byte	0
 3389 0a63 07       		.uleb128 0x7
 3390 0a64 20000000 		.4byte	.LVL112
 3391 0a68 75150000 		.4byte	0x1575
 3392 0a6c 760A0000 		.4byte	0xa76
 3393 0a70 08       		.uleb128 0x8
 3394 0a71 01       		.uleb128 0x1
 3395 0a72 50       		.byte	0x50
 3396 0a73 01       		.uleb128 0x1
 3397 0a74 30       		.byte	0x30
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cc92bABD.s 			page 80


 3398 0a75 00       		.byte	0
 3399 0a76 07       		.uleb128 0x7
 3400 0a77 2A000000 		.4byte	.LVL113
 3401 0a7b 6A150000 		.4byte	0x156a
 3402 0a7f 890A0000 		.4byte	0xa89
 3403 0a83 08       		.uleb128 0x8
 3404 0a84 01       		.uleb128 0x1
 3405 0a85 50       		.byte	0x50
 3406 0a86 01       		.uleb128 0x1
 3407 0a87 31       		.byte	0x31
 3408 0a88 00       		.byte	0
 3409 0a89 07       		.uleb128 0x7
 3410 0a8a 30000000 		.4byte	.LVL114
 3411 0a8e 75150000 		.4byte	0x1575
 3412 0a92 9C0A0000 		.4byte	0xa9c
 3413 0a96 08       		.uleb128 0x8
 3414 0a97 01       		.uleb128 0x1
 3415 0a98 50       		.byte	0x50
 3416 0a99 01       		.uleb128 0x1
 3417 0a9a 31       		.byte	0x31
 3418 0a9b 00       		.byte	0
 3419 0a9c 07       		.uleb128 0x7
 3420 0a9d 42000000 		.4byte	.LVL116
 3421 0aa1 3B160000 		.4byte	0x163b
 3422 0aa5 B00A0000 		.4byte	0xab0
 3423 0aa9 08       		.uleb128 0x8
 3424 0aaa 01       		.uleb128 0x1
 3425 0aab 50       		.byte	0x50
 3426 0aac 02       		.uleb128 0x2
 3427 0aad 74       		.byte	0x74
 3428 0aae 00       		.sleb128 0
 3429 0aaf 00       		.byte	0
 3430 0ab0 07       		.uleb128 0x7
 3431 0ab1 48000000 		.4byte	.LVL117
 3432 0ab5 D8150000 		.4byte	0x15d8
 3433 0ab9 C40A0000 		.4byte	0xac4
 3434 0abd 08       		.uleb128 0x8
 3435 0abe 01       		.uleb128 0x1
 3436 0abf 50       		.byte	0x50
 3437 0ac0 02       		.uleb128 0x2
 3438 0ac1 08       		.byte	0x8
 3439 0ac2 32       		.byte	0x32
 3440 0ac3 00       		.byte	0
 3441 0ac4 07       		.uleb128 0x7
 3442 0ac5 5A000000 		.4byte	.LVL119
 3443 0ac9 E3150000 		.4byte	0x15e3
 3444 0acd E70A0000 		.4byte	0xae7
 3445 0ad1 08       		.uleb128 0x8
 3446 0ad2 01       		.uleb128 0x1
 3447 0ad3 50       		.byte	0x50
 3448 0ad4 02       		.uleb128 0x2
 3449 0ad5 77       		.byte	0x77
 3450 0ad6 00       		.sleb128 0
 3451 0ad7 08       		.uleb128 0x8
 3452 0ad8 01       		.uleb128 0x1
 3453 0ad9 51       		.byte	0x51
 3454 0ada 05       		.uleb128 0x5
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cc92bABD.s 			page 81


 3455 0adb 03       		.byte	0x3
 3456 0adc 08000000 		.4byte	.LC1
 3457 0ae0 08       		.uleb128 0x8
 3458 0ae1 01       		.uleb128 0x1
 3459 0ae2 52       		.byte	0x52
 3460 0ae3 02       		.uleb128 0x2
 3461 0ae4 75       		.byte	0x75
 3462 0ae5 00       		.sleb128 0
 3463 0ae6 00       		.byte	0
 3464 0ae7 07       		.uleb128 0x7
 3465 0ae8 60000000 		.4byte	.LVL120
 3466 0aec EE150000 		.4byte	0x15ee
 3467 0af0 FB0A0000 		.4byte	0xafb
 3468 0af4 08       		.uleb128 0x8
 3469 0af5 01       		.uleb128 0x1
 3470 0af6 50       		.byte	0x50
 3471 0af7 02       		.uleb128 0x2
 3472 0af8 77       		.byte	0x77
 3473 0af9 00       		.sleb128 0
 3474 0afa 00       		.byte	0
 3475 0afb 09       		.uleb128 0x9
 3476 0afc 70000000 		.4byte	.LVL121
 3477 0b00 80150000 		.4byte	0x1580
 3478 0b04 07       		.uleb128 0x7
 3479 0b05 7A000000 		.4byte	.LVL122
 3480 0b09 8B150000 		.4byte	0x158b
 3481 0b0d 180B0000 		.4byte	0xb18
 3482 0b11 08       		.uleb128 0x8
 3483 0b12 01       		.uleb128 0x1
 3484 0b13 50       		.byte	0x50
 3485 0b14 02       		.uleb128 0x2
 3486 0b15 78       		.byte	0x78
 3487 0b16 00       		.sleb128 0
 3488 0b17 00       		.byte	0
 3489 0b18 09       		.uleb128 0x9
 3490 0b19 7E000000 		.4byte	.LVL123
 3491 0b1d 96150000 		.4byte	0x1596
 3492 0b21 07       		.uleb128 0x7
 3493 0b22 84000000 		.4byte	.LVL124
 3494 0b26 A1150000 		.4byte	0x15a1
 3495 0b2a 350B0000 		.4byte	0xb35
 3496 0b2e 08       		.uleb128 0x8
 3497 0b2f 01       		.uleb128 0x1
 3498 0b30 50       		.byte	0x50
 3499 0b31 02       		.uleb128 0x2
 3500 0b32 78       		.byte	0x78
 3501 0b33 00       		.sleb128 0
 3502 0b34 00       		.byte	0
 3503 0b35 07       		.uleb128 0x7
 3504 0b36 6E020000 		.4byte	.LVL186
 3505 0b3a 3B160000 		.4byte	0x163b
 3506 0b3e 490B0000 		.4byte	0xb49
 3507 0b42 08       		.uleb128 0x8
 3508 0b43 01       		.uleb128 0x1
 3509 0b44 50       		.byte	0x50
 3510 0b45 02       		.uleb128 0x2
 3511 0b46 74       		.byte	0x74
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cc92bABD.s 			page 82


 3512 0b47 00       		.sleb128 0
 3513 0b48 00       		.byte	0
 3514 0b49 07       		.uleb128 0x7
 3515 0b4a 74020000 		.4byte	.LVL187
 3516 0b4e D8150000 		.4byte	0x15d8
 3517 0b52 5D0B0000 		.4byte	0xb5d
 3518 0b56 08       		.uleb128 0x8
 3519 0b57 01       		.uleb128 0x1
 3520 0b58 50       		.byte	0x50
 3521 0b59 02       		.uleb128 0x2
 3522 0b5a 08       		.byte	0x8
 3523 0b5b 32       		.byte	0x32
 3524 0b5c 00       		.byte	0
 3525 0b5d 07       		.uleb128 0x7
 3526 0b5e 84020000 		.4byte	.LVL188
 3527 0b62 E3150000 		.4byte	0x15e3
 3528 0b66 7A0B0000 		.4byte	0xb7a
 3529 0b6a 08       		.uleb128 0x8
 3530 0b6b 01       		.uleb128 0x1
 3531 0b6c 50       		.byte	0x50
 3532 0b6d 02       		.uleb128 0x2
 3533 0b6e 75       		.byte	0x75
 3534 0b6f 00       		.sleb128 0
 3535 0b70 08       		.uleb128 0x8
 3536 0b71 01       		.uleb128 0x1
 3537 0b72 51       		.byte	0x51
 3538 0b73 05       		.uleb128 0x5
 3539 0b74 03       		.byte	0x3
 3540 0b75 68000000 		.4byte	.LC6
 3541 0b79 00       		.byte	0
 3542 0b7a 07       		.uleb128 0x7
 3543 0b7b 8A020000 		.4byte	.LVL189
 3544 0b7f EE150000 		.4byte	0x15ee
 3545 0b83 8E0B0000 		.4byte	0xb8e
 3546 0b87 08       		.uleb128 0x8
 3547 0b88 01       		.uleb128 0x1
 3548 0b89 50       		.byte	0x50
 3549 0b8a 02       		.uleb128 0x2
 3550 0b8b 75       		.byte	0x75
 3551 0b8c 00       		.sleb128 0
 3552 0b8d 00       		.byte	0
 3553 0b8e 07       		.uleb128 0x7
 3554 0b8f 90020000 		.4byte	.LVL190
 3555 0b93 F9150000 		.4byte	0x15f9
 3556 0b97 A10B0000 		.4byte	0xba1
 3557 0b9b 08       		.uleb128 0x8
 3558 0b9c 01       		.uleb128 0x1
 3559 0b9d 50       		.byte	0x50
 3560 0b9e 01       		.uleb128 0x1
 3561 0b9f 30       		.byte	0x30
 3562 0ba0 00       		.byte	0
 3563 0ba1 07       		.uleb128 0x7
 3564 0ba2 96020000 		.4byte	.LVL191
 3565 0ba6 04160000 		.4byte	0x1604
 3566 0baa B40B0000 		.4byte	0xbb4
 3567 0bae 08       		.uleb128 0x8
 3568 0baf 01       		.uleb128 0x1
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cc92bABD.s 			page 83


 3569 0bb0 50       		.byte	0x50
 3570 0bb1 01       		.uleb128 0x1
 3571 0bb2 30       		.byte	0x30
 3572 0bb3 00       		.byte	0
 3573 0bb4 09       		.uleb128 0x9
 3574 0bb5 9A020000 		.4byte	.LVL192
 3575 0bb9 0F160000 		.4byte	0x160f
 3576 0bbd 09       		.uleb128 0x9
 3577 0bbe 9E020000 		.4byte	.LVL193
 3578 0bc2 1A160000 		.4byte	0x161a
 3579 0bc6 00       		.byte	0
 3580 0bc7 0D       		.uleb128 0xd
 3581 0bc8 DA040000 		.4byte	.LASF46
 3582 0bcc 01       		.byte	0x1
 3583 0bcd 2C02     		.2byte	0x22c
 3584 0bcf 00000000 		.4byte	.LFB72
 3585 0bd3 C4010000 		.4byte	.LFE72-.LFB72
 3586 0bd7 01       		.uleb128 0x1
 3587 0bd8 9C       		.byte	0x9c
 3588 0bd9 D40F0000 		.4byte	0xfd4
 3589 0bdd 0E       		.uleb128 0xe
 3590 0bde 46010000 		.4byte	.LASF47
 3591 0be2 01       		.byte	0x1
 3592 0be3 2C02     		.2byte	0x22c
 3593 0be5 68000000 		.4byte	0x68
 3594 0be9 C0060000 		.4byte	.LLST39
 3595 0bed 15       		.uleb128 0x15
 3596 0bee 5E020000 		.4byte	.LASF48
 3597 0bf2 01       		.byte	0x1
 3598 0bf3 2E02     		.2byte	0x22e
 3599 0bf5 68000000 		.4byte	0x68
 3600 0bf9 00       		.byte	0
 3601 0bfa 15       		.uleb128 0x15
 3602 0bfb E4000000 		.4byte	.LASF49
 3603 0bff 01       		.byte	0x1
 3604 0c00 2F02     		.2byte	0x22f
 3605 0c02 68000000 		.4byte	0x68
 3606 0c06 01       		.byte	0x1
 3607 0c07 0F       		.uleb128 0xf
 3608 0c08 F1000000 		.4byte	.LASF50
 3609 0c0c 01       		.byte	0x1
 3610 0c0d 3002     		.2byte	0x230
 3611 0c0f 68000000 		.4byte	0x68
 3612 0c13 E1060000 		.4byte	.LLST40
 3613 0c17 15       		.uleb128 0x15
 3614 0c18 5C000000 		.4byte	.LASF51
 3615 0c1c 01       		.byte	0x1
 3616 0c1d 3102     		.2byte	0x231
 3617 0c1f 68000000 		.4byte	0x68
 3618 0c23 01       		.byte	0x1
 3619 0c24 16       		.uleb128 0x16
 3620 0c25 15030000 		.4byte	.LASF52
 3621 0c29 01       		.byte	0x1
 3622 0c2a 3202     		.2byte	0x232
 3623 0c2c 68000000 		.4byte	0x68
 3624 0c30 2003     		.2byte	0x320
 3625 0c32 15       		.uleb128 0x15
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cc92bABD.s 			page 84


 3626 0c33 FD040000 		.4byte	.LASF53
 3627 0c37 01       		.byte	0x1
 3628 0c38 3302     		.2byte	0x233
 3629 0c3a 68000000 		.4byte	0x68
 3630 0c3e 32       		.byte	0x32
 3631 0c3f 15       		.uleb128 0x15
 3632 0c40 48040000 		.4byte	.LASF21
 3633 0c44 01       		.byte	0x1
 3634 0c45 3402     		.2byte	0x234
 3635 0c47 68000000 		.4byte	0x68
 3636 0c4b 19       		.byte	0x19
 3637 0c4c 10       		.uleb128 0x10
 3638 0c4d CB010000 		.4byte	.LASF54
 3639 0c51 01       		.byte	0x1
 3640 0c52 3502     		.2byte	0x235
 3641 0c54 68000000 		.4byte	0x68
 3642 0c58 15       		.uleb128 0x15
 3643 0c59 78000000 		.4byte	.LASF24
 3644 0c5d 01       		.byte	0x1
 3645 0c5e 5502     		.2byte	0x255
 3646 0c60 68000000 		.4byte	0x68
 3647 0c64 19       		.byte	0x19
 3648 0c65 15       		.uleb128 0x15
 3649 0c66 6F070000 		.4byte	.LASF25
 3650 0c6a 01       		.byte	0x1
 3651 0c6b 5602     		.2byte	0x256
 3652 0c6d 68000000 		.4byte	0x68
 3653 0c71 19       		.byte	0x19
 3654 0c72 09       		.uleb128 0x9
 3655 0c73 08000000 		.4byte	.LVL197
 3656 0c77 51160000 		.4byte	0x1651
 3657 0c7b 07       		.uleb128 0x7
 3658 0c7c 14000000 		.4byte	.LVL199
 3659 0c80 3B160000 		.4byte	0x163b
 3660 0c84 8E0C0000 		.4byte	0xc8e
 3661 0c88 08       		.uleb128 0x8
 3662 0c89 01       		.uleb128 0x1
 3663 0c8a 50       		.byte	0x50
 3664 0c8b 01       		.uleb128 0x1
 3665 0c8c 30       		.byte	0x30
 3666 0c8d 00       		.byte	0
 3667 0c8e 07       		.uleb128 0x7
 3668 0c8f 1A000000 		.4byte	.LVL200
 3669 0c93 D8150000 		.4byte	0x15d8
 3670 0c97 A20C0000 		.4byte	0xca2
 3671 0c9b 08       		.uleb128 0x8
 3672 0c9c 01       		.uleb128 0x1
 3673 0c9d 50       		.byte	0x50
 3674 0c9e 02       		.uleb128 0x2
 3675 0c9f 08       		.byte	0x8
 3676 0ca0 32       		.byte	0x32
 3677 0ca1 00       		.byte	0
 3678 0ca2 07       		.uleb128 0x7
 3679 0ca3 2A000000 		.4byte	.LVL202
 3680 0ca7 E3150000 		.4byte	0x15e3
 3681 0cab BC0C0000 		.4byte	0xcbc
 3682 0caf 08       		.uleb128 0x8
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cc92bABD.s 			page 85


 3683 0cb0 01       		.uleb128 0x1
 3684 0cb1 50       		.byte	0x50
 3685 0cb2 02       		.uleb128 0x2
 3686 0cb3 75       		.byte	0x75
 3687 0cb4 00       		.sleb128 0
 3688 0cb5 08       		.uleb128 0x8
 3689 0cb6 01       		.uleb128 0x1
 3690 0cb7 51       		.byte	0x51
 3691 0cb8 02       		.uleb128 0x2
 3692 0cb9 76       		.byte	0x76
 3693 0cba 00       		.sleb128 0
 3694 0cbb 00       		.byte	0
 3695 0cbc 07       		.uleb128 0x7
 3696 0cbd 30000000 		.4byte	.LVL203
 3697 0cc1 EE150000 		.4byte	0x15ee
 3698 0cc5 D00C0000 		.4byte	0xcd0
 3699 0cc9 08       		.uleb128 0x8
 3700 0cca 01       		.uleb128 0x1
 3701 0ccb 50       		.byte	0x50
 3702 0ccc 02       		.uleb128 0x2
 3703 0ccd 75       		.byte	0x75
 3704 0cce 00       		.sleb128 0
 3705 0ccf 00       		.byte	0
 3706 0cd0 07       		.uleb128 0x7
 3707 0cd1 36000000 		.4byte	.LVL204
 3708 0cd5 3B160000 		.4byte	0x163b
 3709 0cd9 E30C0000 		.4byte	0xce3
 3710 0cdd 08       		.uleb128 0x8
 3711 0cde 01       		.uleb128 0x1
 3712 0cdf 50       		.byte	0x50
 3713 0ce0 01       		.uleb128 0x1
 3714 0ce1 31       		.byte	0x31
 3715 0ce2 00       		.byte	0
 3716 0ce3 07       		.uleb128 0x7
 3717 0ce4 3C000000 		.4byte	.LVL205
 3718 0ce8 D8150000 		.4byte	0x15d8
 3719 0cec F70C0000 		.4byte	0xcf7
 3720 0cf0 08       		.uleb128 0x8
 3721 0cf1 01       		.uleb128 0x1
 3722 0cf2 50       		.byte	0x50
 3723 0cf3 02       		.uleb128 0x2
 3724 0cf4 08       		.byte	0x8
 3725 0cf5 32       		.byte	0x32
 3726 0cf6 00       		.byte	0
 3727 0cf7 07       		.uleb128 0x7
 3728 0cf8 46000000 		.4byte	.LVL206
 3729 0cfc E3150000 		.4byte	0x15e3
 3730 0d00 110D0000 		.4byte	0xd11
 3731 0d04 08       		.uleb128 0x8
 3732 0d05 01       		.uleb128 0x1
 3733 0d06 50       		.byte	0x50
 3734 0d07 02       		.uleb128 0x2
 3735 0d08 75       		.byte	0x75
 3736 0d09 00       		.sleb128 0
 3737 0d0a 08       		.uleb128 0x8
 3738 0d0b 01       		.uleb128 0x1
 3739 0d0c 51       		.byte	0x51
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cc92bABD.s 			page 86


 3740 0d0d 02       		.uleb128 0x2
 3741 0d0e 76       		.byte	0x76
 3742 0d0f 00       		.sleb128 0
 3743 0d10 00       		.byte	0
 3744 0d11 07       		.uleb128 0x7
 3745 0d12 4C000000 		.4byte	.LVL207
 3746 0d16 EE150000 		.4byte	0x15ee
 3747 0d1a 250D0000 		.4byte	0xd25
 3748 0d1e 08       		.uleb128 0x8
 3749 0d1f 01       		.uleb128 0x1
 3750 0d20 50       		.byte	0x50
 3751 0d21 02       		.uleb128 0x2
 3752 0d22 75       		.byte	0x75
 3753 0d23 00       		.sleb128 0
 3754 0d24 00       		.byte	0
 3755 0d25 07       		.uleb128 0x7
 3756 0d26 5C000000 		.4byte	.LVL209
 3757 0d2a E3150000 		.4byte	0x15e3
 3758 0d2e 480D0000 		.4byte	0xd48
 3759 0d32 08       		.uleb128 0x8
 3760 0d33 01       		.uleb128 0x1
 3761 0d34 50       		.byte	0x50
 3762 0d35 02       		.uleb128 0x2
 3763 0d36 75       		.byte	0x75
 3764 0d37 00       		.sleb128 0
 3765 0d38 08       		.uleb128 0x8
 3766 0d39 01       		.uleb128 0x1
 3767 0d3a 51       		.byte	0x51
 3768 0d3b 05       		.uleb128 0x5
 3769 0d3c 03       		.byte	0x3
 3770 0d3d 74000000 		.4byte	.LC7
 3771 0d41 08       		.uleb128 0x8
 3772 0d42 01       		.uleb128 0x1
 3773 0d43 52       		.byte	0x52
 3774 0d44 02       		.uleb128 0x2
 3775 0d45 74       		.byte	0x74
 3776 0d46 00       		.sleb128 0
 3777 0d47 00       		.byte	0
 3778 0d48 07       		.uleb128 0x7
 3779 0d49 62000000 		.4byte	.LVL210
 3780 0d4d EE150000 		.4byte	0x15ee
 3781 0d51 5C0D0000 		.4byte	0xd5c
 3782 0d55 08       		.uleb128 0x8
 3783 0d56 01       		.uleb128 0x1
 3784 0d57 50       		.byte	0x50
 3785 0d58 02       		.uleb128 0x2
 3786 0d59 75       		.byte	0x75
 3787 0d5a 00       		.sleb128 0
 3788 0d5b 00       		.byte	0
 3789 0d5c 09       		.uleb128 0x9
 3790 0d5d 74000000 		.4byte	.LVL212
 3791 0d61 80150000 		.4byte	0x1580
 3792 0d65 07       		.uleb128 0x7
 3793 0d66 7A000000 		.4byte	.LVL213
 3794 0d6a 8B150000 		.4byte	0x158b
 3795 0d6e 780D0000 		.4byte	0xd78
 3796 0d72 08       		.uleb128 0x8
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cc92bABD.s 			page 87


 3797 0d73 01       		.uleb128 0x1
 3798 0d74 50       		.byte	0x50
 3799 0d75 01       		.uleb128 0x1
 3800 0d76 49       		.byte	0x49
 3801 0d77 00       		.byte	0
 3802 0d78 09       		.uleb128 0x9
 3803 0d79 7E000000 		.4byte	.LVL214
 3804 0d7d 96150000 		.4byte	0x1596
 3805 0d81 07       		.uleb128 0x7
 3806 0d82 84000000 		.4byte	.LVL215
 3807 0d86 A1150000 		.4byte	0x15a1
 3808 0d8a 940D0000 		.4byte	0xd94
 3809 0d8e 08       		.uleb128 0x8
 3810 0d8f 01       		.uleb128 0x1
 3811 0d90 50       		.byte	0x50
 3812 0d91 01       		.uleb128 0x1
 3813 0d92 49       		.byte	0x49
 3814 0d93 00       		.byte	0
 3815 0d94 07       		.uleb128 0x7
 3816 0d95 90000000 		.4byte	.LVL216
 3817 0d99 6A150000 		.4byte	0x156a
 3818 0d9d A70D0000 		.4byte	0xda7
 3819 0da1 08       		.uleb128 0x8
 3820 0da2 01       		.uleb128 0x1
 3821 0da3 50       		.byte	0x50
 3822 0da4 01       		.uleb128 0x1
 3823 0da5 30       		.byte	0x30
 3824 0da6 00       		.byte	0
 3825 0da7 07       		.uleb128 0x7
 3826 0da8 96000000 		.4byte	.LVL217
 3827 0dac 75150000 		.4byte	0x1575
 3828 0db0 BA0D0000 		.4byte	0xdba
 3829 0db4 08       		.uleb128 0x8
 3830 0db5 01       		.uleb128 0x1
 3831 0db6 50       		.byte	0x50
 3832 0db7 01       		.uleb128 0x1
 3833 0db8 31       		.byte	0x31
 3834 0db9 00       		.byte	0
 3835 0dba 07       		.uleb128 0x7
 3836 0dbb 9E000000 		.4byte	.LVL218
 3837 0dbf 3B160000 		.4byte	0x163b
 3838 0dc3 CD0D0000 		.4byte	0xdcd
 3839 0dc7 08       		.uleb128 0x8
 3840 0dc8 01       		.uleb128 0x1
 3841 0dc9 50       		.byte	0x50
 3842 0dca 01       		.uleb128 0x1
 3843 0dcb 30       		.byte	0x30
 3844 0dcc 00       		.byte	0
 3845 0dcd 07       		.uleb128 0x7
 3846 0dce A4000000 		.4byte	.LVL219
 3847 0dd2 D8150000 		.4byte	0x15d8
 3848 0dd6 E10D0000 		.4byte	0xde1
 3849 0dda 08       		.uleb128 0x8
 3850 0ddb 01       		.uleb128 0x1
 3851 0ddc 50       		.byte	0x50
 3852 0ddd 02       		.uleb128 0x2
 3853 0dde 08       		.byte	0x8
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cc92bABD.s 			page 88


 3854 0ddf 32       		.byte	0x32
 3855 0de0 00       		.byte	0
 3856 0de1 07       		.uleb128 0x7
 3857 0de2 AA000000 		.4byte	.LVL220
 3858 0de6 3B160000 		.4byte	0x163b
 3859 0dea F40D0000 		.4byte	0xdf4
 3860 0dee 08       		.uleb128 0x8
 3861 0def 01       		.uleb128 0x1
 3862 0df0 50       		.byte	0x50
 3863 0df1 01       		.uleb128 0x1
 3864 0df2 31       		.byte	0x31
 3865 0df3 00       		.byte	0
 3866 0df4 07       		.uleb128 0x7
 3867 0df5 B0000000 		.4byte	.LVL221
 3868 0df9 D8150000 		.4byte	0x15d8
 3869 0dfd 080E0000 		.4byte	0xe08
 3870 0e01 08       		.uleb128 0x8
 3871 0e02 01       		.uleb128 0x1
 3872 0e03 50       		.byte	0x50
 3873 0e04 02       		.uleb128 0x2
 3874 0e05 08       		.byte	0x8
 3875 0e06 32       		.byte	0x32
 3876 0e07 00       		.byte	0
 3877 0e08 07       		.uleb128 0x7
 3878 0e09 DA000000 		.4byte	.LVL224
 3879 0e0d 6A150000 		.4byte	0x156a
 3880 0e11 1B0E0000 		.4byte	0xe1b
 3881 0e15 08       		.uleb128 0x8
 3882 0e16 01       		.uleb128 0x1
 3883 0e17 50       		.byte	0x50
 3884 0e18 01       		.uleb128 0x1
 3885 0e19 31       		.byte	0x31
 3886 0e1a 00       		.byte	0
 3887 0e1b 07       		.uleb128 0x7
 3888 0e1c E0000000 		.4byte	.LVL225
 3889 0e20 75150000 		.4byte	0x1575
 3890 0e24 2E0E0000 		.4byte	0xe2e
 3891 0e28 08       		.uleb128 0x8
 3892 0e29 01       		.uleb128 0x1
 3893 0e2a 50       		.byte	0x50
 3894 0e2b 01       		.uleb128 0x1
 3895 0e2c 30       		.byte	0x30
 3896 0e2d 00       		.byte	0
 3897 0e2e 07       		.uleb128 0x7
 3898 0e2f E6000000 		.4byte	.LVL226
 3899 0e33 3B160000 		.4byte	0x163b
 3900 0e37 410E0000 		.4byte	0xe41
 3901 0e3b 08       		.uleb128 0x8
 3902 0e3c 01       		.uleb128 0x1
 3903 0e3d 50       		.byte	0x50
 3904 0e3e 01       		.uleb128 0x1
 3905 0e3f 30       		.byte	0x30
 3906 0e40 00       		.byte	0
 3907 0e41 07       		.uleb128 0x7
 3908 0e42 EC000000 		.4byte	.LVL227
 3909 0e46 D8150000 		.4byte	0x15d8
 3910 0e4a 550E0000 		.4byte	0xe55
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cc92bABD.s 			page 89


 3911 0e4e 08       		.uleb128 0x8
 3912 0e4f 01       		.uleb128 0x1
 3913 0e50 50       		.byte	0x50
 3914 0e51 02       		.uleb128 0x2
 3915 0e52 08       		.byte	0x8
 3916 0e53 32       		.byte	0x32
 3917 0e54 00       		.byte	0
 3918 0e55 07       		.uleb128 0x7
 3919 0e56 F2000000 		.4byte	.LVL228
 3920 0e5a 3B160000 		.4byte	0x163b
 3921 0e5e 680E0000 		.4byte	0xe68
 3922 0e62 08       		.uleb128 0x8
 3923 0e63 01       		.uleb128 0x1
 3924 0e64 50       		.byte	0x50
 3925 0e65 01       		.uleb128 0x1
 3926 0e66 31       		.byte	0x31
 3927 0e67 00       		.byte	0
 3928 0e68 07       		.uleb128 0x7
 3929 0e69 F8000000 		.4byte	.LVL229
 3930 0e6d D8150000 		.4byte	0x15d8
 3931 0e71 7C0E0000 		.4byte	0xe7c
 3932 0e75 08       		.uleb128 0x8
 3933 0e76 01       		.uleb128 0x1
 3934 0e77 50       		.byte	0x50
 3935 0e78 02       		.uleb128 0x2
 3936 0e79 08       		.byte	0x8
 3937 0e7a 32       		.byte	0x32
 3938 0e7b 00       		.byte	0
 3939 0e7c 07       		.uleb128 0x7
 3940 0e7d 08010000 		.4byte	.LVL232
 3941 0e81 3B160000 		.4byte	0x163b
 3942 0e85 8F0E0000 		.4byte	0xe8f
 3943 0e89 08       		.uleb128 0x8
 3944 0e8a 01       		.uleb128 0x1
 3945 0e8b 50       		.byte	0x50
 3946 0e8c 01       		.uleb128 0x1
 3947 0e8d 30       		.byte	0x30
 3948 0e8e 00       		.byte	0
 3949 0e8f 07       		.uleb128 0x7
 3950 0e90 0E010000 		.4byte	.LVL233
 3951 0e94 D8150000 		.4byte	0x15d8
 3952 0e98 A30E0000 		.4byte	0xea3
 3953 0e9c 08       		.uleb128 0x8
 3954 0e9d 01       		.uleb128 0x1
 3955 0e9e 50       		.byte	0x50
 3956 0e9f 02       		.uleb128 0x2
 3957 0ea0 08       		.byte	0x8
 3958 0ea1 32       		.byte	0x32
 3959 0ea2 00       		.byte	0
 3960 0ea3 07       		.uleb128 0x7
 3961 0ea4 14010000 		.4byte	.LVL234
 3962 0ea8 3B160000 		.4byte	0x163b
 3963 0eac B60E0000 		.4byte	0xeb6
 3964 0eb0 08       		.uleb128 0x8
 3965 0eb1 01       		.uleb128 0x1
 3966 0eb2 50       		.byte	0x50
 3967 0eb3 01       		.uleb128 0x1
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cc92bABD.s 			page 90


 3968 0eb4 31       		.byte	0x31
 3969 0eb5 00       		.byte	0
 3970 0eb6 07       		.uleb128 0x7
 3971 0eb7 1A010000 		.4byte	.LVL235
 3972 0ebb D8150000 		.4byte	0x15d8
 3973 0ebf CA0E0000 		.4byte	0xeca
 3974 0ec3 08       		.uleb128 0x8
 3975 0ec4 01       		.uleb128 0x1
 3976 0ec5 50       		.byte	0x50
 3977 0ec6 02       		.uleb128 0x2
 3978 0ec7 08       		.byte	0x8
 3979 0ec8 32       		.byte	0x32
 3980 0ec9 00       		.byte	0
 3981 0eca 07       		.uleb128 0x7
 3982 0ecb 2E010000 		.4byte	.LVL237
 3983 0ecf E3150000 		.4byte	0x15e3
 3984 0ed3 EE0E0000 		.4byte	0xeee
 3985 0ed7 08       		.uleb128 0x8
 3986 0ed8 01       		.uleb128 0x1
 3987 0ed9 50       		.byte	0x50
 3988 0eda 02       		.uleb128 0x2
 3989 0edb 75       		.byte	0x75
 3990 0edc 00       		.sleb128 0
 3991 0edd 08       		.uleb128 0x8
 3992 0ede 01       		.uleb128 0x1
 3993 0edf 51       		.byte	0x51
 3994 0ee0 05       		.uleb128 0x5
 3995 0ee1 03       		.byte	0x3
 3996 0ee2 88000000 		.4byte	.LC8
 3997 0ee6 08       		.uleb128 0x8
 3998 0ee7 02       		.uleb128 0x2
 3999 0ee8 7D       		.byte	0x7d
 4000 0ee9 00       		.sleb128 0
 4001 0eea 02       		.uleb128 0x2
 4002 0eeb 74       		.byte	0x74
 4003 0eec 00       		.sleb128 0
 4004 0eed 00       		.byte	0
 4005 0eee 07       		.uleb128 0x7
 4006 0eef 34010000 		.4byte	.LVL238
 4007 0ef3 EE150000 		.4byte	0x15ee
 4008 0ef7 020F0000 		.4byte	0xf02
 4009 0efb 08       		.uleb128 0x8
 4010 0efc 01       		.uleb128 0x1
 4011 0efd 50       		.byte	0x50
 4012 0efe 02       		.uleb128 0x2
 4013 0eff 75       		.byte	0x75
 4014 0f00 00       		.sleb128 0
 4015 0f01 00       		.byte	0
 4016 0f02 07       		.uleb128 0x7
 4017 0f03 50010000 		.4byte	.LVL239
 4018 0f07 3B160000 		.4byte	0x163b
 4019 0f0b 150F0000 		.4byte	0xf15
 4020 0f0f 08       		.uleb128 0x8
 4021 0f10 01       		.uleb128 0x1
 4022 0f11 50       		.byte	0x50
 4023 0f12 01       		.uleb128 0x1
 4024 0f13 30       		.byte	0x30
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cc92bABD.s 			page 91


 4025 0f14 00       		.byte	0
 4026 0f15 07       		.uleb128 0x7
 4027 0f16 56010000 		.4byte	.LVL240
 4028 0f1a D8150000 		.4byte	0x15d8
 4029 0f1e 290F0000 		.4byte	0xf29
 4030 0f22 08       		.uleb128 0x8
 4031 0f23 01       		.uleb128 0x1
 4032 0f24 50       		.byte	0x50
 4033 0f25 02       		.uleb128 0x2
 4034 0f26 08       		.byte	0x8
 4035 0f27 32       		.byte	0x32
 4036 0f28 00       		.byte	0
 4037 0f29 07       		.uleb128 0x7
 4038 0f2a 5C010000 		.4byte	.LVL241
 4039 0f2e 3B160000 		.4byte	0x163b
 4040 0f32 3C0F0000 		.4byte	0xf3c
 4041 0f36 08       		.uleb128 0x8
 4042 0f37 01       		.uleb128 0x1
 4043 0f38 50       		.byte	0x50
 4044 0f39 01       		.uleb128 0x1
 4045 0f3a 31       		.byte	0x31
 4046 0f3b 00       		.byte	0
 4047 0f3c 07       		.uleb128 0x7
 4048 0f3d 62010000 		.4byte	.LVL242
 4049 0f41 D8150000 		.4byte	0x15d8
 4050 0f45 500F0000 		.4byte	0xf50
 4051 0f49 08       		.uleb128 0x8
 4052 0f4a 01       		.uleb128 0x1
 4053 0f4b 50       		.byte	0x50
 4054 0f4c 02       		.uleb128 0x2
 4055 0f4d 08       		.byte	0x8
 4056 0f4e 32       		.byte	0x32
 4057 0f4f 00       		.byte	0
 4058 0f50 07       		.uleb128 0x7
 4059 0f51 74010000 		.4byte	.LVL244
 4060 0f55 E3150000 		.4byte	0x15e3
 4061 0f59 6D0F0000 		.4byte	0xf6d
 4062 0f5d 08       		.uleb128 0x8
 4063 0f5e 01       		.uleb128 0x1
 4064 0f5f 50       		.byte	0x50
 4065 0f60 02       		.uleb128 0x2
 4066 0f61 75       		.byte	0x75
 4067 0f62 00       		.sleb128 0
 4068 0f63 08       		.uleb128 0x8
 4069 0f64 01       		.uleb128 0x1
 4070 0f65 51       		.byte	0x51
 4071 0f66 05       		.uleb128 0x5
 4072 0f67 03       		.byte	0x3
 4073 0f68 A0000000 		.4byte	.LC9
 4074 0f6c 00       		.byte	0
 4075 0f6d 07       		.uleb128 0x7
 4076 0f6e 7A010000 		.4byte	.LVL245
 4077 0f72 EE150000 		.4byte	0x15ee
 4078 0f76 810F0000 		.4byte	0xf81
 4079 0f7a 08       		.uleb128 0x8
 4080 0f7b 01       		.uleb128 0x1
 4081 0f7c 50       		.byte	0x50
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cc92bABD.s 			page 92


 4082 0f7d 02       		.uleb128 0x2
 4083 0f7e 75       		.byte	0x75
 4084 0f7f 00       		.sleb128 0
 4085 0f80 00       		.byte	0
 4086 0f81 07       		.uleb128 0x7
 4087 0f82 84010000 		.4byte	.LVL246
 4088 0f86 E3150000 		.4byte	0x15e3
 4089 0f8a A40F0000 		.4byte	0xfa4
 4090 0f8e 08       		.uleb128 0x8
 4091 0f8f 01       		.uleb128 0x1
 4092 0f90 50       		.byte	0x50
 4093 0f91 02       		.uleb128 0x2
 4094 0f92 75       		.byte	0x75
 4095 0f93 00       		.sleb128 0
 4096 0f94 08       		.uleb128 0x8
 4097 0f95 01       		.uleb128 0x1
 4098 0f96 51       		.byte	0x51
 4099 0f97 05       		.uleb128 0x5
 4100 0f98 03       		.byte	0x3
 4101 0f99 AC000000 		.4byte	.LC10
 4102 0f9d 08       		.uleb128 0x8
 4103 0f9e 01       		.uleb128 0x1
 4104 0f9f 52       		.byte	0x52
 4105 0fa0 02       		.uleb128 0x2
 4106 0fa1 74       		.byte	0x74
 4107 0fa2 00       		.sleb128 0
 4108 0fa3 00       		.byte	0
 4109 0fa4 07       		.uleb128 0x7
 4110 0fa5 8A010000 		.4byte	.LVL247
 4111 0fa9 EE150000 		.4byte	0x15ee
 4112 0fad B80F0000 		.4byte	0xfb8
 4113 0fb1 08       		.uleb128 0x8
 4114 0fb2 01       		.uleb128 0x1
 4115 0fb3 50       		.byte	0x50
 4116 0fb4 02       		.uleb128 0x2
 4117 0fb5 75       		.byte	0x75
 4118 0fb6 00       		.sleb128 0
 4119 0fb7 00       		.byte	0
 4120 0fb8 09       		.uleb128 0x9
 4121 0fb9 9C010000 		.4byte	.LVL248
 4122 0fbd 0F160000 		.4byte	0x160f
 4123 0fc1 09       		.uleb128 0x9
 4124 0fc2 A0010000 		.4byte	.LVL249
 4125 0fc6 1A160000 		.4byte	0x161a
 4126 0fca 09       		.uleb128 0x9
 4127 0fcb A4010000 		.4byte	.LVL250
 4128 0fcf 5C160000 		.4byte	0x165c
 4129 0fd3 00       		.byte	0
 4130 0fd4 0D       		.uleb128 0xd
 4131 0fd5 E9040000 		.4byte	.LASF55
 4132 0fd9 01       		.byte	0x1
 4133 0fda 1102     		.2byte	0x211
 4134 0fdc 00000000 		.4byte	.LFB71
 4135 0fe0 3C000000 		.4byte	.LFE71-.LFB71
 4136 0fe4 01       		.uleb128 0x1
 4137 0fe5 9C       		.byte	0x9c
 4138 0fe6 5B100000 		.4byte	0x105b
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cc92bABD.s 			page 93


 4139 0fea 0E       		.uleb128 0xe
 4140 0feb 3D050000 		.4byte	.LASF56
 4141 0fef 01       		.byte	0x1
 4142 0ff0 1102     		.2byte	0x211
 4143 0ff2 68000000 		.4byte	0x68
 4144 0ff6 23070000 		.4byte	.LLST41
 4145 0ffa 0E       		.uleb128 0xe
 4146 0ffb E9050000 		.4byte	.LASF57
 4147 0fff 01       		.byte	0x1
 4148 1000 1102     		.2byte	0x211
 4149 1002 68000000 		.4byte	0x68
 4150 1006 4F070000 		.4byte	.LLST42
 4151 100a 15       		.uleb128 0x15
 4152 100b 65060000 		.4byte	.LASF58
 4153 100f 01       		.byte	0x1
 4154 1010 1302     		.2byte	0x213
 4155 1012 68000000 		.4byte	0x68
 4156 1016 0A       		.byte	0xa
 4157 1017 10       		.uleb128 0x10
 4158 1018 D1010000 		.4byte	.LASF59
 4159 101c 01       		.byte	0x1
 4160 101d 1402     		.2byte	0x214
 4161 101f 68000000 		.4byte	0x68
 4162 1023 07       		.uleb128 0x7
 4163 1024 12000000 		.4byte	.LVL254
 4164 1028 3B160000 		.4byte	0x163b
 4165 102c 37100000 		.4byte	0x1037
 4166 1030 08       		.uleb128 0x8
 4167 1031 01       		.uleb128 0x1
 4168 1032 50       		.byte	0x50
 4169 1033 02       		.uleb128 0x2
 4170 1034 75       		.byte	0x75
 4171 1035 00       		.sleb128 0
 4172 1036 00       		.byte	0
 4173 1037 07       		.uleb128 0x7
 4174 1038 18000000 		.4byte	.LVL255
 4175 103c D8150000 		.4byte	0x15d8
 4176 1040 4B100000 		.4byte	0x104b
 4177 1044 08       		.uleb128 0x8
 4178 1045 01       		.uleb128 0x1
 4179 1046 50       		.byte	0x50
 4180 1047 02       		.uleb128 0x2
 4181 1048 08       		.byte	0x8
 4182 1049 32       		.byte	0x32
 4183 104a 00       		.byte	0
 4184 104b 0A       		.uleb128 0xa
 4185 104c 32000000 		.4byte	.LVL258
 4186 1050 C70B0000 		.4byte	0xbc7
 4187 1054 08       		.uleb128 0x8
 4188 1055 01       		.uleb128 0x1
 4189 1056 50       		.byte	0x50
 4190 1057 01       		.uleb128 0x1
 4191 1058 37       		.byte	0x37
 4192 1059 00       		.byte	0
 4193 105a 00       		.byte	0
 4194 105b 17       		.uleb128 0x17
 4195 105c AD060000 		.4byte	.LASF61
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cc92bABD.s 			page 94


 4196 1060 01       		.byte	0x1
 4197 1061 E202     		.2byte	0x2e2
 4198 1063 00000000 		.4byte	.LFB73
 4199 1067 70000000 		.4byte	.LFE73-.LFB73
 4200 106b 01       		.uleb128 0x1
 4201 106c 9C       		.byte	0x9c
 4202 106d 80110000 		.4byte	0x1180
 4203 1071 0F       		.uleb128 0xf
 4204 1072 22050000 		.4byte	.LASF62
 4205 1076 01       		.byte	0x1
 4206 1077 E702     		.2byte	0x2e7
 4207 1079 68000000 		.4byte	0x68
 4208 107d 95070000 		.4byte	.LLST43
 4209 1081 0F       		.uleb128 0xf
 4210 1082 66000000 		.4byte	.LASF63
 4211 1086 01       		.byte	0x1
 4212 1087 E802     		.2byte	0x2e8
 4213 1089 68000000 		.4byte	0x68
 4214 108d B3070000 		.4byte	.LLST44
 4215 1091 0F       		.uleb128 0xf
 4216 1092 10010000 		.4byte	.LASF35
 4217 1096 01       		.byte	0x1
 4218 1097 E902     		.2byte	0x2e9
 4219 1099 68000000 		.4byte	0x68
 4220 109d E8070000 		.4byte	.LLST45
 4221 10a1 0F       		.uleb128 0xf
 4222 10a2 FF010000 		.4byte	.LASF64
 4223 10a6 01       		.byte	0x1
 4224 10a7 EA02     		.2byte	0x2ea
 4225 10a9 68000000 		.4byte	0x68
 4226 10ad 07080000 		.4byte	.LLST46
 4227 10b1 07       		.uleb128 0x7
 4228 10b2 08000000 		.4byte	.LVL260
 4229 10b6 3B160000 		.4byte	0x163b
 4230 10ba C4100000 		.4byte	0x10c4
 4231 10be 08       		.uleb128 0x8
 4232 10bf 01       		.uleb128 0x1
 4233 10c0 50       		.byte	0x50
 4234 10c1 01       		.uleb128 0x1
 4235 10c2 34       		.byte	0x34
 4236 10c3 00       		.byte	0
 4237 10c4 07       		.uleb128 0x7
 4238 10c5 0E000000 		.4byte	.LVL261
 4239 10c9 D8150000 		.4byte	0x15d8
 4240 10cd D8100000 		.4byte	0x10d8
 4241 10d1 08       		.uleb128 0x8
 4242 10d2 01       		.uleb128 0x1
 4243 10d3 50       		.byte	0x50
 4244 10d4 02       		.uleb128 0x2
 4245 10d5 08       		.byte	0x8
 4246 10d6 3C       		.byte	0x3c
 4247 10d7 00       		.byte	0
 4248 10d8 09       		.uleb128 0x9
 4249 10d9 12000000 		.4byte	.LVL262
 4250 10dd 80150000 		.4byte	0x1580
 4251 10e1 09       		.uleb128 0x9
 4252 10e2 16000000 		.4byte	.LVL263
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cc92bABD.s 			page 95


 4253 10e6 96150000 		.4byte	0x1596
 4254 10ea 07       		.uleb128 0x7
 4255 10eb 1C000000 		.4byte	.LVL264
 4256 10ef 8B150000 		.4byte	0x158b
 4257 10f3 FD100000 		.4byte	0x10fd
 4258 10f7 08       		.uleb128 0x8
 4259 10f8 01       		.uleb128 0x1
 4260 10f9 50       		.byte	0x50
 4261 10fa 01       		.uleb128 0x1
 4262 10fb 49       		.byte	0x49
 4263 10fc 00       		.byte	0
 4264 10fd 07       		.uleb128 0x7
 4265 10fe 22000000 		.4byte	.LVL265
 4266 1102 A1150000 		.4byte	0x15a1
 4267 1106 10110000 		.4byte	0x1110
 4268 110a 08       		.uleb128 0x8
 4269 110b 01       		.uleb128 0x1
 4270 110c 50       		.byte	0x50
 4271 110d 01       		.uleb128 0x1
 4272 110e 49       		.byte	0x49
 4273 110f 00       		.byte	0
 4274 1110 07       		.uleb128 0x7
 4275 1111 38000000 		.4byte	.LVL269
 4276 1115 6A150000 		.4byte	0x156a
 4277 1119 23110000 		.4byte	0x1123
 4278 111d 08       		.uleb128 0x8
 4279 111e 01       		.uleb128 0x1
 4280 111f 50       		.byte	0x50
 4281 1120 01       		.uleb128 0x1
 4282 1121 30       		.byte	0x30
 4283 1122 00       		.byte	0
 4284 1123 07       		.uleb128 0x7
 4285 1124 3E000000 		.4byte	.LVL270
 4286 1128 75150000 		.4byte	0x1575
 4287 112c 36110000 		.4byte	0x1136
 4288 1130 08       		.uleb128 0x8
 4289 1131 01       		.uleb128 0x1
 4290 1132 50       		.byte	0x50
 4291 1133 01       		.uleb128 0x1
 4292 1134 31       		.byte	0x31
 4293 1135 00       		.byte	0
 4294 1136 07       		.uleb128 0x7
 4295 1137 46000000 		.4byte	.LVL271
 4296 113b 6A150000 		.4byte	0x156a
 4297 113f 49110000 		.4byte	0x1149
 4298 1143 08       		.uleb128 0x8
 4299 1144 01       		.uleb128 0x1
 4300 1145 50       		.byte	0x50
 4301 1146 01       		.uleb128 0x1
 4302 1147 31       		.byte	0x31
 4303 1148 00       		.byte	0
 4304 1149 07       		.uleb128 0x7
 4305 114a 4C000000 		.4byte	.LVL272
 4306 114e 75150000 		.4byte	0x1575
 4307 1152 5C110000 		.4byte	0x115c
 4308 1156 08       		.uleb128 0x8
 4309 1157 01       		.uleb128 0x1
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cc92bABD.s 			page 96


 4310 1158 50       		.byte	0x50
 4311 1159 01       		.uleb128 0x1
 4312 115a 30       		.byte	0x30
 4313 115b 00       		.byte	0
 4314 115c 07       		.uleb128 0x7
 4315 115d 54000000 		.4byte	.LVL274
 4316 1161 3B160000 		.4byte	0x163b
 4317 1165 6F110000 		.4byte	0x116f
 4318 1169 08       		.uleb128 0x8
 4319 116a 01       		.uleb128 0x1
 4320 116b 50       		.byte	0x50
 4321 116c 01       		.uleb128 0x1
 4322 116d 34       		.byte	0x34
 4323 116e 00       		.byte	0
 4324 116f 0A       		.uleb128 0xa
 4325 1170 5A000000 		.4byte	.LVL275
 4326 1174 D8150000 		.4byte	0x15d8
 4327 1178 08       		.uleb128 0x8
 4328 1179 01       		.uleb128 0x1
 4329 117a 50       		.byte	0x50
 4330 117b 02       		.uleb128 0x2
 4331 117c 08       		.byte	0x8
 4332 117d 3C       		.byte	0x3c
 4333 117e 00       		.byte	0
 4334 117f 00       		.byte	0
 4335 1180 0D       		.uleb128 0xd
 4336 1181 66030000 		.4byte	.LASF65
 4337 1185 01       		.byte	0x1
 4338 1186 1103     		.2byte	0x311
 4339 1188 00000000 		.4byte	.LFB74
 4340 118c 64000000 		.4byte	.LFE74-.LFB74
 4341 1190 01       		.uleb128 0x1
 4342 1191 9C       		.byte	0x9c
 4343 1192 8A120000 		.4byte	0x128a
 4344 1196 15       		.uleb128 0x15
 4345 1197 5C000000 		.4byte	.LASF51
 4346 119b 01       		.byte	0x1
 4347 119c 1503     		.2byte	0x315
 4348 119e 68000000 		.4byte	0x68
 4349 11a2 64       		.byte	0x64
 4350 11a3 07       		.uleb128 0x7
 4351 11a4 08000000 		.4byte	.LVL279
 4352 11a8 3B160000 		.4byte	0x163b
 4353 11ac B6110000 		.4byte	0x11b6
 4354 11b0 08       		.uleb128 0x8
 4355 11b1 01       		.uleb128 0x1
 4356 11b2 50       		.byte	0x50
 4357 11b3 01       		.uleb128 0x1
 4358 11b4 30       		.byte	0x30
 4359 11b5 00       		.byte	0
 4360 11b6 07       		.uleb128 0x7
 4361 11b7 0E000000 		.4byte	.LVL280
 4362 11bb D8150000 		.4byte	0x15d8
 4363 11bf CA110000 		.4byte	0x11ca
 4364 11c3 08       		.uleb128 0x8
 4365 11c4 01       		.uleb128 0x1
 4366 11c5 50       		.byte	0x50
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cc92bABD.s 			page 97


 4367 11c6 02       		.uleb128 0x2
 4368 11c7 08       		.byte	0x8
 4369 11c8 3C       		.byte	0x3c
 4370 11c9 00       		.byte	0
 4371 11ca 07       		.uleb128 0x7
 4372 11cb 14000000 		.4byte	.LVL281
 4373 11cf 3B160000 		.4byte	0x163b
 4374 11d3 DD110000 		.4byte	0x11dd
 4375 11d7 08       		.uleb128 0x8
 4376 11d8 01       		.uleb128 0x1
 4377 11d9 50       		.byte	0x50
 4378 11da 01       		.uleb128 0x1
 4379 11db 30       		.byte	0x30
 4380 11dc 00       		.byte	0
 4381 11dd 07       		.uleb128 0x7
 4382 11de 1A000000 		.4byte	.LVL282
 4383 11e2 D8150000 		.4byte	0x15d8
 4384 11e6 F1110000 		.4byte	0x11f1
 4385 11ea 08       		.uleb128 0x8
 4386 11eb 01       		.uleb128 0x1
 4387 11ec 50       		.byte	0x50
 4388 11ed 02       		.uleb128 0x2
 4389 11ee 08       		.byte	0x8
 4390 11ef 3C       		.byte	0x3c
 4391 11f0 00       		.byte	0
 4392 11f1 07       		.uleb128 0x7
 4393 11f2 20000000 		.4byte	.LVL283
 4394 11f6 3B160000 		.4byte	0x163b
 4395 11fa 04120000 		.4byte	0x1204
 4396 11fe 08       		.uleb128 0x8
 4397 11ff 01       		.uleb128 0x1
 4398 1200 50       		.byte	0x50
 4399 1201 01       		.uleb128 0x1
 4400 1202 34       		.byte	0x34
 4401 1203 00       		.byte	0
 4402 1204 07       		.uleb128 0x7
 4403 1205 26000000 		.4byte	.LVL284
 4404 1209 D8150000 		.4byte	0x15d8
 4405 120d 18120000 		.4byte	0x1218
 4406 1211 08       		.uleb128 0x8
 4407 1212 01       		.uleb128 0x1
 4408 1213 50       		.byte	0x50
 4409 1214 02       		.uleb128 0x2
 4410 1215 08       		.byte	0x8
 4411 1216 3C       		.byte	0x3c
 4412 1217 00       		.byte	0
 4413 1218 07       		.uleb128 0x7
 4414 1219 2E000000 		.4byte	.LVL285
 4415 121d 3B160000 		.4byte	0x163b
 4416 1221 2B120000 		.4byte	0x122b
 4417 1225 08       		.uleb128 0x8
 4418 1226 01       		.uleb128 0x1
 4419 1227 50       		.byte	0x50
 4420 1228 01       		.uleb128 0x1
 4421 1229 30       		.byte	0x30
 4422 122a 00       		.byte	0
 4423 122b 07       		.uleb128 0x7
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cc92bABD.s 			page 98


 4424 122c 34000000 		.4byte	.LVL286
 4425 1230 D8150000 		.4byte	0x15d8
 4426 1234 3F120000 		.4byte	0x123f
 4427 1238 08       		.uleb128 0x8
 4428 1239 01       		.uleb128 0x1
 4429 123a 50       		.byte	0x50
 4430 123b 02       		.uleb128 0x2
 4431 123c 08       		.byte	0x8
 4432 123d 3C       		.byte	0x3c
 4433 123e 00       		.byte	0
 4434 123f 07       		.uleb128 0x7
 4435 1240 3A000000 		.4byte	.LVL287
 4436 1244 3B160000 		.4byte	0x163b
 4437 1248 52120000 		.4byte	0x1252
 4438 124c 08       		.uleb128 0x8
 4439 124d 01       		.uleb128 0x1
 4440 124e 50       		.byte	0x50
 4441 124f 01       		.uleb128 0x1
 4442 1250 30       		.byte	0x30
 4443 1251 00       		.byte	0
 4444 1252 07       		.uleb128 0x7
 4445 1253 40000000 		.4byte	.LVL288
 4446 1257 D8150000 		.4byte	0x15d8
 4447 125b 66120000 		.4byte	0x1266
 4448 125f 08       		.uleb128 0x8
 4449 1260 01       		.uleb128 0x1
 4450 1261 50       		.byte	0x50
 4451 1262 02       		.uleb128 0x2
 4452 1263 08       		.byte	0x8
 4453 1264 3C       		.byte	0x3c
 4454 1265 00       		.byte	0
 4455 1266 07       		.uleb128 0x7
 4456 1267 46000000 		.4byte	.LVL289
 4457 126b 3B160000 		.4byte	0x163b
 4458 126f 79120000 		.4byte	0x1279
 4459 1273 08       		.uleb128 0x8
 4460 1274 01       		.uleb128 0x1
 4461 1275 50       		.byte	0x50
 4462 1276 01       		.uleb128 0x1
 4463 1277 34       		.byte	0x34
 4464 1278 00       		.byte	0
 4465 1279 0A       		.uleb128 0xa
 4466 127a 4C000000 		.4byte	.LVL290
 4467 127e D8150000 		.4byte	0x15d8
 4468 1282 08       		.uleb128 0x8
 4469 1283 01       		.uleb128 0x1
 4470 1284 50       		.byte	0x50
 4471 1285 02       		.uleb128 0x2
 4472 1286 08       		.byte	0x8
 4473 1287 3C       		.byte	0x3c
 4474 1288 00       		.byte	0
 4475 1289 00       		.byte	0
 4476 128a 18       		.uleb128 0x18
 4477 128b 71050000 		.4byte	.LASF114
 4478 128f 01       		.byte	0x1
 4479 1290 3203     		.2byte	0x332
 4480 1292 00000000 		.4byte	.LFB75
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cc92bABD.s 			page 99


 4481 1296 02000000 		.4byte	.LFE75-.LFB75
 4482 129a 01       		.uleb128 0x1
 4483 129b 9C       		.byte	0x9c
 4484 129c 0D       		.uleb128 0xd
 4485 129d 10020000 		.4byte	.LASF66
 4486 12a1 01       		.byte	0x1
 4487 12a2 3A03     		.2byte	0x33a
 4488 12a4 00000000 		.4byte	.LFB76
 4489 12a8 80000000 		.4byte	.LFE76-.LFB76
 4490 12ac 01       		.uleb128 0x1
 4491 12ad 9C       		.byte	0x9c
 4492 12ae 6D130000 		.4byte	0x136d
 4493 12b2 0F       		.uleb128 0xf
 4494 12b3 9D050000 		.4byte	.LASF67
 4495 12b7 01       		.byte	0x1
 4496 12b8 3E03     		.2byte	0x33e
 4497 12ba 68000000 		.4byte	0x68
 4498 12be 1A080000 		.4byte	.LLST47
 4499 12c2 0F       		.uleb128 0xf
 4500 12c3 3D030000 		.4byte	.LASF68
 4501 12c7 01       		.byte	0x1
 4502 12c8 4003     		.2byte	0x340
 4503 12ca 68000000 		.4byte	0x68
 4504 12ce 2D080000 		.4byte	.LLST48
 4505 12d2 0F       		.uleb128 0xf
 4506 12d3 35020000 		.4byte	.LASF39
 4507 12d7 01       		.byte	0x1
 4508 12d8 4303     		.2byte	0x343
 4509 12da 68000000 		.4byte	0x68
 4510 12de 40080000 		.4byte	.LLST49
 4511 12e2 15       		.uleb128 0x15
 4512 12e3 78000000 		.4byte	.LASF24
 4513 12e7 01       		.byte	0x1
 4514 12e8 6703     		.2byte	0x367
 4515 12ea 68000000 		.4byte	0x68
 4516 12ee C8       		.byte	0xc8
 4517 12ef 15       		.uleb128 0x15
 4518 12f0 6F070000 		.4byte	.LASF25
 4519 12f4 01       		.byte	0x1
 4520 12f5 6803     		.2byte	0x368
 4521 12f7 68000000 		.4byte	0x68
 4522 12fb C8       		.byte	0xc8
 4523 12fc 07       		.uleb128 0x7
 4524 12fd 08000000 		.4byte	.LVL291
 4525 1301 C70B0000 		.4byte	0xbc7
 4526 1305 0F130000 		.4byte	0x130f
 4527 1309 08       		.uleb128 0x8
 4528 130a 01       		.uleb128 0x1
 4529 130b 50       		.byte	0x50
 4530 130c 01       		.uleb128 0x1
 4531 130d 37       		.byte	0x37
 4532 130e 00       		.byte	0
 4533 130f 07       		.uleb128 0x7
 4534 1310 0E000000 		.4byte	.LVL292
 4535 1314 3B160000 		.4byte	0x163b
 4536 1318 22130000 		.4byte	0x1322
 4537 131c 08       		.uleb128 0x8
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cc92bABD.s 			page 100


 4538 131d 01       		.uleb128 0x1
 4539 131e 50       		.byte	0x50
 4540 131f 01       		.uleb128 0x1
 4541 1320 32       		.byte	0x32
 4542 1321 00       		.byte	0
 4543 1322 07       		.uleb128 0x7
 4544 1323 14000000 		.4byte	.LVL293
 4545 1327 D8150000 		.4byte	0x15d8
 4546 132b 36130000 		.4byte	0x1336
 4547 132f 08       		.uleb128 0x8
 4548 1330 01       		.uleb128 0x1
 4549 1331 50       		.byte	0x50
 4550 1332 02       		.uleb128 0x2
 4551 1333 08       		.byte	0x8
 4552 1334 32       		.byte	0x32
 4553 1335 00       		.byte	0
 4554 1336 09       		.uleb128 0x9
 4555 1337 4C000000 		.4byte	.LVL299
 4556 133b 80150000 		.4byte	0x1580
 4557 133f 07       		.uleb128 0x7
 4558 1340 52000000 		.4byte	.LVL300
 4559 1344 8B150000 		.4byte	0x158b
 4560 1348 53130000 		.4byte	0x1353
 4561 134c 08       		.uleb128 0x8
 4562 134d 01       		.uleb128 0x1
 4563 134e 50       		.byte	0x50
 4564 134f 02       		.uleb128 0x2
 4565 1350 09       		.byte	0x9
 4566 1351 C8       		.byte	0xc8
 4567 1352 00       		.byte	0
 4568 1353 09       		.uleb128 0x9
 4569 1354 56000000 		.4byte	.LVL301
 4570 1358 96150000 		.4byte	0x1596
 4571 135c 0A       		.uleb128 0xa
 4572 135d 5C000000 		.4byte	.LVL302
 4573 1361 A1150000 		.4byte	0x15a1
 4574 1365 08       		.uleb128 0x8
 4575 1366 01       		.uleb128 0x1
 4576 1367 50       		.byte	0x50
 4577 1368 02       		.uleb128 0x2
 4578 1369 09       		.byte	0x9
 4579 136a C8       		.byte	0xc8
 4580 136b 00       		.byte	0
 4581 136c 00       		.byte	0
 4582 136d 17       		.uleb128 0x17
 4583 136e CD070000 		.4byte	.LASF69
 4584 1372 01       		.byte	0x1
 4585 1373 9703     		.2byte	0x397
 4586 1375 00000000 		.4byte	.LFB77
 4587 1379 5C000000 		.4byte	.LFE77-.LFB77
 4588 137d 01       		.uleb128 0x1
 4589 137e 9C       		.byte	0x9c
 4590 137f 45140000 		.4byte	0x1445
 4591 1383 0E       		.uleb128 0xe
 4592 1384 A9010000 		.4byte	.LASF70
 4593 1388 01       		.byte	0x1
 4594 1389 9703     		.2byte	0x397
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cc92bABD.s 			page 101


 4595 138b 68000000 		.4byte	0x68
 4596 138f 53080000 		.4byte	.LLST50
 4597 1393 0F       		.uleb128 0xf
 4598 1394 95050000 		.4byte	.LASF71
 4599 1398 01       		.byte	0x1
 4600 1399 9B03     		.2byte	0x39b
 4601 139b 68000000 		.4byte	0x68
 4602 139f 71080000 		.4byte	.LLST51
 4603 13a3 0F       		.uleb128 0xf
 4604 13a4 FC000000 		.4byte	.LASF72
 4605 13a8 01       		.byte	0x1
 4606 13a9 9C03     		.2byte	0x39c
 4607 13ab 68000000 		.4byte	0x68
 4608 13af 8F080000 		.4byte	.LLST52
 4609 13b3 07       		.uleb128 0x7
 4610 13b4 0E000000 		.4byte	.LVL307
 4611 13b8 30160000 		.4byte	0x1630
 4612 13bc D1130000 		.4byte	0x13d1
 4613 13c0 08       		.uleb128 0x8
 4614 13c1 01       		.uleb128 0x1
 4615 13c2 50       		.byte	0x50
 4616 13c3 01       		.uleb128 0x1
 4617 13c4 44       		.byte	0x44
 4618 13c5 08       		.uleb128 0x8
 4619 13c6 01       		.uleb128 0x1
 4620 13c7 51       		.byte	0x51
 4621 13c8 02       		.uleb128 0x2
 4622 13c9 08       		.byte	0x8
 4623 13ca 46       		.byte	0x46
 4624 13cb 08       		.uleb128 0x8
 4625 13cc 01       		.uleb128 0x1
 4626 13cd 52       		.byte	0x52
 4627 13ce 01       		.uleb128 0x1
 4628 13cf 30       		.byte	0x30
 4629 13d0 00       		.byte	0
 4630 13d1 07       		.uleb128 0x7
 4631 13d2 14000000 		.4byte	.LVL308
 4632 13d6 3B160000 		.4byte	0x163b
 4633 13da E5130000 		.4byte	0x13e5
 4634 13de 08       		.uleb128 0x8
 4635 13df 01       		.uleb128 0x1
 4636 13e0 50       		.byte	0x50
 4637 13e1 02       		.uleb128 0x2
 4638 13e2 75       		.byte	0x75
 4639 13e3 00       		.sleb128 0
 4640 13e4 00       		.byte	0
 4641 13e5 07       		.uleb128 0x7
 4642 13e6 22000000 		.4byte	.LVL311
 4643 13ea 3B160000 		.4byte	0x163b
 4644 13ee F9130000 		.4byte	0x13f9
 4645 13f2 08       		.uleb128 0x8
 4646 13f3 01       		.uleb128 0x1
 4647 13f4 50       		.byte	0x50
 4648 13f5 02       		.uleb128 0x2
 4649 13f6 75       		.byte	0x75
 4650 13f7 00       		.sleb128 0
 4651 13f8 00       		.byte	0
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cc92bABD.s 			page 102


 4652 13f9 07       		.uleb128 0x7
 4653 13fa 28000000 		.4byte	.LVL312
 4654 13fe D8150000 		.4byte	0x15d8
 4655 1402 0D140000 		.4byte	0x140d
 4656 1406 08       		.uleb128 0x8
 4657 1407 01       		.uleb128 0x1
 4658 1408 50       		.byte	0x50
 4659 1409 02       		.uleb128 0x2
 4660 140a 08       		.byte	0x8
 4661 140b 64       		.byte	0x64
 4662 140c 00       		.byte	0
 4663 140d 07       		.uleb128 0x7
 4664 140e 48000000 		.4byte	.LVL316
 4665 1412 30160000 		.4byte	0x1630
 4666 1416 2A140000 		.4byte	0x142a
 4667 141a 08       		.uleb128 0x8
 4668 141b 01       		.uleb128 0x1
 4669 141c 50       		.byte	0x50
 4670 141d 01       		.uleb128 0x1
 4671 141e 33       		.byte	0x33
 4672 141f 08       		.uleb128 0x8
 4673 1420 01       		.uleb128 0x1
 4674 1421 51       		.byte	0x51
 4675 1422 01       		.uleb128 0x1
 4676 1423 49       		.byte	0x49
 4677 1424 08       		.uleb128 0x8
 4678 1425 01       		.uleb128 0x1
 4679 1426 52       		.byte	0x52
 4680 1427 01       		.uleb128 0x1
 4681 1428 30       		.byte	0x30
 4682 1429 00       		.byte	0
 4683 142a 0A       		.uleb128 0xa
 4684 142b 54000000 		.4byte	.LVL317
 4685 142f 30160000 		.4byte	0x1630
 4686 1433 08       		.uleb128 0x8
 4687 1434 01       		.uleb128 0x1
 4688 1435 50       		.byte	0x50
 4689 1436 02       		.uleb128 0x2
 4690 1437 09       		.byte	0x9
 4691 1438 FF       		.byte	0xff
 4692 1439 08       		.uleb128 0x8
 4693 143a 01       		.uleb128 0x1
 4694 143b 51       		.byte	0x51
 4695 143c 01       		.uleb128 0x1
 4696 143d 49       		.byte	0x49
 4697 143e 08       		.uleb128 0x8
 4698 143f 01       		.uleb128 0x1
 4699 1440 52       		.byte	0x52
 4700 1441 01       		.uleb128 0x1
 4701 1442 30       		.byte	0x30
 4702 1443 00       		.byte	0
 4703 1444 00       		.byte	0
 4704 1445 19       		.uleb128 0x19
 4705 1446 C0060000 		.4byte	.LASF73
 4706 144a 04       		.byte	0x4
 4707 144b 1207     		.2byte	0x712
 4708 144d 51140000 		.4byte	0x1451
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cc92bABD.s 			page 103


 4709 1451 1A       		.uleb128 0x1a
 4710 1452 76000000 		.4byte	0x76
 4711 1456 1B       		.uleb128 0x1b
 4712 1457 B1020000 		.4byte	.LASF74
 4713 145b 05       		.byte	0x5
 4714 145c 22       		.byte	0x22
 4715 145d 68000000 		.4byte	0x68
 4716 1461 05       		.uleb128 0x5
 4717 1462 03       		.byte	0x3
 4718 1463 00000000 		.4byte	internal_orientation
 4719 1467 1C       		.uleb128 0x1c
 4720 1468 68000000 		.4byte	0x68
 4721 146c 77140000 		.4byte	0x1477
 4722 1470 1D       		.uleb128 0x1d
 4723 1471 9D000000 		.4byte	0x9d
 4724 1475 04       		.byte	0x4
 4725 1476 00       		.byte	0
 4726 1477 1B       		.uleb128 0x1b
 4727 1478 8D030000 		.4byte	.LASF75
 4728 147c 06       		.byte	0x6
 4729 147d 1C       		.byte	0x1c
 4730 147e 67140000 		.4byte	0x1467
 4731 1482 05       		.uleb128 0x5
 4732 1483 03       		.byte	0x3
 4733 1484 00000000 		.4byte	puck_rack_scans
 4734 1488 1B       		.uleb128 0x1b
 4735 1489 78020000 		.4byte	.LASF76
 4736 148d 06       		.byte	0x6
 4737 148e 1D       		.byte	0x1d
 4738 148f 67140000 		.4byte	0x1467
 4739 1493 05       		.uleb128 0x5
 4740 1494 03       		.byte	0x3
 4741 1495 00000000 		.4byte	puck_rack_west_offsets
 4742 1499 1C       		.uleb128 0x1c
 4743 149a 81000000 		.4byte	0x81
 4744 149e A9140000 		.4byte	0x14a9
 4745 14a2 1D       		.uleb128 0x1d
 4746 14a3 9D000000 		.4byte	0x9d
 4747 14a7 03       		.byte	0x3
 4748 14a8 00       		.byte	0
 4749 14a9 1B       		.uleb128 0x1b
 4750 14aa 03040000 		.4byte	.LASF77
 4751 14ae 06       		.byte	0x6
 4752 14af 1F       		.byte	0x1f
 4753 14b0 99140000 		.4byte	0x1499
 4754 14b4 05       		.uleb128 0x5
 4755 14b5 03       		.byte	0x3
 4756 14b6 00000000 		.4byte	block_edge_location
 4757 14ba 1B       		.uleb128 0x1b
 4758 14bb 86070000 		.4byte	.LASF78
 4759 14bf 06       		.byte	0x6
 4760 14c0 23       		.byte	0x23
 4761 14c1 68000000 		.4byte	0x68
 4762 14c5 05       		.uleb128 0x5
 4763 14c6 03       		.byte	0x3
 4764 14c7 00000000 		.4byte	initialisation
 4765 14cb 1C       		.uleb128 0x1c
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cc92bABD.s 			page 104


 4766 14cc 8F000000 		.4byte	0x8f
 4767 14d0 DB140000 		.4byte	0x14db
 4768 14d4 1D       		.uleb128 0x1d
 4769 14d5 9D000000 		.4byte	0x9d
 4770 14d9 1F       		.byte	0x1f
 4771 14da 00       		.byte	0
 4772 14db 1B       		.uleb128 0x1b
 4773 14dc 88060000 		.4byte	.LASF79
 4774 14e0 06       		.byte	0x6
 4775 14e1 21       		.byte	0x21
 4776 14e2 CB140000 		.4byte	0x14cb
 4777 14e6 05       		.uleb128 0x5
 4778 14e7 03       		.byte	0x3
 4779 14e8 00000000 		.4byte	output
 4780 14ec 1C       		.uleb128 0x1c
 4781 14ed 68000000 		.4byte	0x68
 4782 14f1 FC140000 		.4byte	0x14fc
 4783 14f5 1D       		.uleb128 0x1d
 4784 14f6 9D000000 		.4byte	0x9d
 4785 14fa 05       		.byte	0x5
 4786 14fb 00       		.byte	0
 4787 14fc 1E       		.uleb128 0x1e
 4788 14fd 51010000 		.4byte	.LASF80
 4789 1501 07       		.byte	0x7
 4790 1502 C4       		.byte	0xc4
 4791 1503 EC140000 		.4byte	0x14ec
 4792 1507 1B       		.uleb128 0x1b
 4793 1508 62010000 		.4byte	.LASF81
 4794 150c 06       		.byte	0x6
 4795 150d 25       		.byte	0x25
 4796 150e 68000000 		.4byte	0x68
 4797 1512 05       		.uleb128 0x5
 4798 1513 03       		.byte	0x3
 4799 1514 00000000 		.4byte	ultrasonic_flag
 4800 1518 1C       		.uleb128 0x1c
 4801 1519 68000000 		.4byte	0x68
 4802 151d 28150000 		.4byte	0x1528
 4803 1521 1D       		.uleb128 0x1d
 4804 1522 9D000000 		.4byte	0x9d
 4805 1526 02       		.byte	0x2
 4806 1527 00       		.byte	0
 4807 1528 1E       		.uleb128 0x1e
 4808 1529 D6030000 		.4byte	.LASF82
 4809 152d 05       		.byte	0x5
 4810 152e 1F       		.byte	0x1f
 4811 152f 18150000 		.4byte	0x1518
 4812 1533 1E       		.uleb128 0x1e
 4813 1534 82040000 		.4byte	.LASF83
 4814 1538 05       		.byte	0x5
 4815 1539 20       		.byte	0x20
 4816 153a 68000000 		.4byte	0x68
 4817 153e 1E       		.uleb128 0x1e
 4818 153f 09050000 		.4byte	.LASF84
 4819 1543 05       		.byte	0x5
 4820 1544 21       		.byte	0x21
 4821 1545 68000000 		.4byte	0x68
 4822 1549 1E       		.uleb128 0x1e
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cc92bABD.s 			page 105


 4823 154a D9020000 		.4byte	.LASF85
 4824 154e 05       		.byte	0x5
 4825 154f 23       		.byte	0x23
 4826 1550 68000000 		.4byte	0x68
 4827 1554 1F       		.uleb128 0x1f
 4828 1555 4B020000 		.4byte	.LASF86
 4829 1559 4B020000 		.4byte	.LASF86
 4830 155d 08       		.byte	0x8
 4831 155e 0F       		.byte	0xf
 4832 155f 1F       		.uleb128 0x1f
 4833 1560 83000000 		.4byte	.LASF87
 4834 1564 83000000 		.4byte	.LASF87
 4835 1568 09       		.byte	0x9
 4836 1569 1D       		.byte	0x1d
 4837 156a 1F       		.uleb128 0x1f
 4838 156b AD050000 		.4byte	.LASF88
 4839 156f AD050000 		.4byte	.LASF88
 4840 1573 0A       		.byte	0xa
 4841 1574 2F       		.byte	0x2f
 4842 1575 1F       		.uleb128 0x1f
 4843 1576 E5010000 		.4byte	.LASF89
 4844 157a E5010000 		.4byte	.LASF89
 4845 157e 0B       		.byte	0xb
 4846 157f 2F       		.byte	0x2f
 4847 1580 1F       		.uleb128 0x1f
 4848 1581 B4070000 		.4byte	.LASF90
 4849 1585 B4070000 		.4byte	.LASF90
 4850 1589 0C       		.byte	0xc
 4851 158a DD       		.byte	0xdd
 4852 158b 1F       		.uleb128 0x1f
 4853 158c 95070000 		.4byte	.LASF91
 4854 1590 95070000 		.4byte	.LASF91
 4855 1594 0C       		.byte	0xc
 4856 1595 C3       		.byte	0xc3
 4857 1596 1F       		.uleb128 0x1f
 4858 1597 4C030000 		.4byte	.LASF92
 4859 159b 4C030000 		.4byte	.LASF92
 4860 159f 0D       		.byte	0xd
 4861 15a0 DD       		.byte	0xdd
 4862 15a1 1F       		.uleb128 0x1f
 4863 15a2 3C000000 		.4byte	.LASF93
 4864 15a6 3C000000 		.4byte	.LASF93
 4865 15aa 0D       		.byte	0xd
 4866 15ab C3       		.byte	0xc3
 4867 15ac 1F       		.uleb128 0x1f
 4868 15ad 00000000 		.4byte	.LASF94
 4869 15b1 00000000 		.4byte	.LASF94
 4870 15b5 08       		.byte	0x8
 4871 15b6 10       		.byte	0x10
 4872 15b7 1F       		.uleb128 0x1f
 4873 15b8 24030000 		.4byte	.LASF95
 4874 15bc 24030000 		.4byte	.LASF95
 4875 15c0 0E       		.byte	0xe
 4876 15c1 2F       		.byte	0x2f
 4877 15c2 1F       		.uleb128 0x1f
 4878 15c3 97000000 		.4byte	.LASF96
 4879 15c7 97000000 		.4byte	.LASF96
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cc92bABD.s 			page 106


 4880 15cb 0F       		.byte	0xf
 4881 15cc 4E       		.byte	0x4e
 4882 15cd 1F       		.uleb128 0x1f
 4883 15ce 8F060000 		.4byte	.LASF97
 4884 15d2 8F060000 		.4byte	.LASF97
 4885 15d6 10       		.byte	0x10
 4886 15d7 4E       		.byte	0x4e
 4887 15d8 1F       		.uleb128 0x1f
 4888 15d9 5B070000 		.4byte	.LASF98
 4889 15dd 5B070000 		.4byte	.LASF98
 4890 15e1 11       		.byte	0x11
 4891 15e2 76       		.byte	0x76
 4892 15e3 1F       		.uleb128 0x1f
 4893 15e4 CE030000 		.4byte	.LASF99
 4894 15e8 CE030000 		.4byte	.LASF99
 4895 15ec 12       		.byte	0x12
 4896 15ed E7       		.byte	0xe7
 4897 15ee 1F       		.uleb128 0x1f
 4898 15ef 84050000 		.4byte	.LASF100
 4899 15f3 84050000 		.4byte	.LASF100
 4900 15f7 13       		.byte	0x13
 4901 15f8 8B       		.byte	0x8b
 4902 15f9 1F       		.uleb128 0x1f
 4903 15fa 8B010000 		.4byte	.LASF101
 4904 15fe 8B010000 		.4byte	.LASF101
 4905 1602 10       		.byte	0x10
 4906 1603 4F       		.byte	0x4f
 4907 1604 1F       		.uleb128 0x1f
 4908 1605 E9020000 		.4byte	.LASF102
 4909 1609 E9020000 		.4byte	.LASF102
 4910 160d 0F       		.byte	0xf
 4911 160e 4F       		.byte	0x4f
 4912 160f 1F       		.uleb128 0x1f
 4913 1610 75030000 		.4byte	.LASF103
 4914 1614 75030000 		.4byte	.LASF103
 4915 1618 0C       		.byte	0xc
 4916 1619 DC       		.byte	0xdc
 4917 161a 1F       		.uleb128 0x1f
 4918 161b 8F020000 		.4byte	.LASF104
 4919 161f 8F020000 		.4byte	.LASF104
 4920 1623 0D       		.byte	0xd
 4921 1624 DC       		.byte	0xdc
 4922 1625 1F       		.uleb128 0x1f
 4923 1626 53050000 		.4byte	.LASF105
 4924 162a 53050000 		.4byte	.LASF105
 4925 162e 14       		.byte	0x14
 4926 162f 0E       		.byte	0xe
 4927 1630 1F       		.uleb128 0x1f
 4928 1631 7B070000 		.4byte	.LASF106
 4929 1635 7B070000 		.4byte	.LASF106
 4930 1639 14       		.byte	0x14
 4931 163a 10       		.byte	0x10
 4932 163b 1F       		.uleb128 0x1f
 4933 163c C6040000 		.4byte	.LASF107
 4934 1640 C6040000 		.4byte	.LASF107
 4935 1644 06       		.byte	0x6
 4936 1645 16       		.byte	0x16
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cc92bABD.s 			page 107


 4937 1646 1F       		.uleb128 0x1f
 4938 1647 B9030000 		.4byte	.LASF108
 4939 164b B9030000 		.4byte	.LASF108
 4940 164f 14       		.byte	0x14
 4941 1650 0F       		.byte	0xf
 4942 1651 1F       		.uleb128 0x1f
 4943 1652 5C040000 		.4byte	.LASF109
 4944 1656 5C040000 		.4byte	.LASF109
 4945 165a 15       		.byte	0x15
 4946 165b 5A       		.byte	0x5a
 4947 165c 1F       		.uleb128 0x1f
 4948 165d B0010000 		.4byte	.LASF110
 4949 1661 B0010000 		.4byte	.LASF110
 4950 1665 15       		.byte	0x15
 4951 1666 5B       		.byte	0x5b
 4952 1667 00       		.byte	0
 4953              		.section	.debug_abbrev,"",%progbits
 4954              	.Ldebug_abbrev0:
 4955 0000 01       		.uleb128 0x1
 4956 0001 11       		.uleb128 0x11
 4957 0002 01       		.byte	0x1
 4958 0003 25       		.uleb128 0x25
 4959 0004 0E       		.uleb128 0xe
 4960 0005 13       		.uleb128 0x13
 4961 0006 0B       		.uleb128 0xb
 4962 0007 03       		.uleb128 0x3
 4963 0008 0E       		.uleb128 0xe
 4964 0009 1B       		.uleb128 0x1b
 4965 000a 0E       		.uleb128 0xe
 4966 000b 55       		.uleb128 0x55
 4967 000c 17       		.uleb128 0x17
 4968 000d 11       		.uleb128 0x11
 4969 000e 01       		.uleb128 0x1
 4970 000f 10       		.uleb128 0x10
 4971 0010 17       		.uleb128 0x17
 4972 0011 00       		.byte	0
 4973 0012 00       		.byte	0
 4974 0013 02       		.uleb128 0x2
 4975 0014 24       		.uleb128 0x24
 4976 0015 00       		.byte	0
 4977 0016 0B       		.uleb128 0xb
 4978 0017 0B       		.uleb128 0xb
 4979 0018 3E       		.uleb128 0x3e
 4980 0019 0B       		.uleb128 0xb
 4981 001a 03       		.uleb128 0x3
 4982 001b 0E       		.uleb128 0xe
 4983 001c 00       		.byte	0
 4984 001d 00       		.byte	0
 4985 001e 03       		.uleb128 0x3
 4986 001f 16       		.uleb128 0x16
 4987 0020 00       		.byte	0
 4988 0021 03       		.uleb128 0x3
 4989 0022 0E       		.uleb128 0xe
 4990 0023 3A       		.uleb128 0x3a
 4991 0024 0B       		.uleb128 0xb
 4992 0025 3B       		.uleb128 0x3b
 4993 0026 0B       		.uleb128 0xb
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cc92bABD.s 			page 108


 4994 0027 49       		.uleb128 0x49
 4995 0028 13       		.uleb128 0x13
 4996 0029 00       		.byte	0
 4997 002a 00       		.byte	0
 4998 002b 04       		.uleb128 0x4
 4999 002c 24       		.uleb128 0x24
 5000 002d 00       		.byte	0
 5001 002e 0B       		.uleb128 0xb
 5002 002f 0B       		.uleb128 0xb
 5003 0030 3E       		.uleb128 0x3e
 5004 0031 0B       		.uleb128 0xb
 5005 0032 03       		.uleb128 0x3
 5006 0033 08       		.uleb128 0x8
 5007 0034 00       		.byte	0
 5008 0035 00       		.byte	0
 5009 0036 05       		.uleb128 0x5
 5010 0037 2E       		.uleb128 0x2e
 5011 0038 01       		.byte	0x1
 5012 0039 3F       		.uleb128 0x3f
 5013 003a 19       		.uleb128 0x19
 5014 003b 03       		.uleb128 0x3
 5015 003c 0E       		.uleb128 0xe
 5016 003d 3A       		.uleb128 0x3a
 5017 003e 0B       		.uleb128 0xb
 5018 003f 3B       		.uleb128 0x3b
 5019 0040 0B       		.uleb128 0xb
 5020 0041 27       		.uleb128 0x27
 5021 0042 19       		.uleb128 0x19
 5022 0043 11       		.uleb128 0x11
 5023 0044 01       		.uleb128 0x1
 5024 0045 12       		.uleb128 0x12
 5025 0046 06       		.uleb128 0x6
 5026 0047 40       		.uleb128 0x40
 5027 0048 18       		.uleb128 0x18
 5028 0049 9742     		.uleb128 0x2117
 5029 004b 19       		.uleb128 0x19
 5030 004c 01       		.uleb128 0x1
 5031 004d 13       		.uleb128 0x13
 5032 004e 00       		.byte	0
 5033 004f 00       		.byte	0
 5034 0050 06       		.uleb128 0x6
 5035 0051 34       		.uleb128 0x34
 5036 0052 00       		.byte	0
 5037 0053 03       		.uleb128 0x3
 5038 0054 0E       		.uleb128 0xe
 5039 0055 3A       		.uleb128 0x3a
 5040 0056 0B       		.uleb128 0xb
 5041 0057 3B       		.uleb128 0x3b
 5042 0058 0B       		.uleb128 0xb
 5043 0059 49       		.uleb128 0x49
 5044 005a 13       		.uleb128 0x13
 5045 005b 02       		.uleb128 0x2
 5046 005c 17       		.uleb128 0x17
 5047 005d 00       		.byte	0
 5048 005e 00       		.byte	0
 5049 005f 07       		.uleb128 0x7
 5050 0060 898201   		.uleb128 0x4109
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cc92bABD.s 			page 109


 5051 0063 01       		.byte	0x1
 5052 0064 11       		.uleb128 0x11
 5053 0065 01       		.uleb128 0x1
 5054 0066 31       		.uleb128 0x31
 5055 0067 13       		.uleb128 0x13
 5056 0068 01       		.uleb128 0x1
 5057 0069 13       		.uleb128 0x13
 5058 006a 00       		.byte	0
 5059 006b 00       		.byte	0
 5060 006c 08       		.uleb128 0x8
 5061 006d 8A8201   		.uleb128 0x410a
 5062 0070 00       		.byte	0
 5063 0071 02       		.uleb128 0x2
 5064 0072 18       		.uleb128 0x18
 5065 0073 9142     		.uleb128 0x2111
 5066 0075 18       		.uleb128 0x18
 5067 0076 00       		.byte	0
 5068 0077 00       		.byte	0
 5069 0078 09       		.uleb128 0x9
 5070 0079 898201   		.uleb128 0x4109
 5071 007c 00       		.byte	0
 5072 007d 11       		.uleb128 0x11
 5073 007e 01       		.uleb128 0x1
 5074 007f 31       		.uleb128 0x31
 5075 0080 13       		.uleb128 0x13
 5076 0081 00       		.byte	0
 5077 0082 00       		.byte	0
 5078 0083 0A       		.uleb128 0xa
 5079 0084 898201   		.uleb128 0x4109
 5080 0087 01       		.byte	0x1
 5081 0088 11       		.uleb128 0x11
 5082 0089 01       		.uleb128 0x1
 5083 008a 31       		.uleb128 0x31
 5084 008b 13       		.uleb128 0x13
 5085 008c 00       		.byte	0
 5086 008d 00       		.byte	0
 5087 008e 0B       		.uleb128 0xb
 5088 008f 05       		.uleb128 0x5
 5089 0090 00       		.byte	0
 5090 0091 03       		.uleb128 0x3
 5091 0092 0E       		.uleb128 0xe
 5092 0093 3A       		.uleb128 0x3a
 5093 0094 0B       		.uleb128 0xb
 5094 0095 3B       		.uleb128 0x3b
 5095 0096 0B       		.uleb128 0xb
 5096 0097 49       		.uleb128 0x49
 5097 0098 13       		.uleb128 0x13
 5098 0099 02       		.uleb128 0x2
 5099 009a 17       		.uleb128 0x17
 5100 009b 00       		.byte	0
 5101 009c 00       		.byte	0
 5102 009d 0C       		.uleb128 0xc
 5103 009e 34       		.uleb128 0x34
 5104 009f 00       		.byte	0
 5105 00a0 03       		.uleb128 0x3
 5106 00a1 0E       		.uleb128 0xe
 5107 00a2 3A       		.uleb128 0x3a
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cc92bABD.s 			page 110


 5108 00a3 0B       		.uleb128 0xb
 5109 00a4 3B       		.uleb128 0x3b
 5110 00a5 0B       		.uleb128 0xb
 5111 00a6 49       		.uleb128 0x49
 5112 00a7 13       		.uleb128 0x13
 5113 00a8 1C       		.uleb128 0x1c
 5114 00a9 0B       		.uleb128 0xb
 5115 00aa 00       		.byte	0
 5116 00ab 00       		.byte	0
 5117 00ac 0D       		.uleb128 0xd
 5118 00ad 2E       		.uleb128 0x2e
 5119 00ae 01       		.byte	0x1
 5120 00af 3F       		.uleb128 0x3f
 5121 00b0 19       		.uleb128 0x19
 5122 00b1 03       		.uleb128 0x3
 5123 00b2 0E       		.uleb128 0xe
 5124 00b3 3A       		.uleb128 0x3a
 5125 00b4 0B       		.uleb128 0xb
 5126 00b5 3B       		.uleb128 0x3b
 5127 00b6 05       		.uleb128 0x5
 5128 00b7 27       		.uleb128 0x27
 5129 00b8 19       		.uleb128 0x19
 5130 00b9 11       		.uleb128 0x11
 5131 00ba 01       		.uleb128 0x1
 5132 00bb 12       		.uleb128 0x12
 5133 00bc 06       		.uleb128 0x6
 5134 00bd 40       		.uleb128 0x40
 5135 00be 18       		.uleb128 0x18
 5136 00bf 9742     		.uleb128 0x2117
 5137 00c1 19       		.uleb128 0x19
 5138 00c2 01       		.uleb128 0x1
 5139 00c3 13       		.uleb128 0x13
 5140 00c4 00       		.byte	0
 5141 00c5 00       		.byte	0
 5142 00c6 0E       		.uleb128 0xe
 5143 00c7 05       		.uleb128 0x5
 5144 00c8 00       		.byte	0
 5145 00c9 03       		.uleb128 0x3
 5146 00ca 0E       		.uleb128 0xe
 5147 00cb 3A       		.uleb128 0x3a
 5148 00cc 0B       		.uleb128 0xb
 5149 00cd 3B       		.uleb128 0x3b
 5150 00ce 05       		.uleb128 0x5
 5151 00cf 49       		.uleb128 0x49
 5152 00d0 13       		.uleb128 0x13
 5153 00d1 02       		.uleb128 0x2
 5154 00d2 17       		.uleb128 0x17
 5155 00d3 00       		.byte	0
 5156 00d4 00       		.byte	0
 5157 00d5 0F       		.uleb128 0xf
 5158 00d6 34       		.uleb128 0x34
 5159 00d7 00       		.byte	0
 5160 00d8 03       		.uleb128 0x3
 5161 00d9 0E       		.uleb128 0xe
 5162 00da 3A       		.uleb128 0x3a
 5163 00db 0B       		.uleb128 0xb
 5164 00dc 3B       		.uleb128 0x3b
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cc92bABD.s 			page 111


 5165 00dd 05       		.uleb128 0x5
 5166 00de 49       		.uleb128 0x49
 5167 00df 13       		.uleb128 0x13
 5168 00e0 02       		.uleb128 0x2
 5169 00e1 17       		.uleb128 0x17
 5170 00e2 00       		.byte	0
 5171 00e3 00       		.byte	0
 5172 00e4 10       		.uleb128 0x10
 5173 00e5 34       		.uleb128 0x34
 5174 00e6 00       		.byte	0
 5175 00e7 03       		.uleb128 0x3
 5176 00e8 0E       		.uleb128 0xe
 5177 00e9 3A       		.uleb128 0x3a
 5178 00ea 0B       		.uleb128 0xb
 5179 00eb 3B       		.uleb128 0x3b
 5180 00ec 05       		.uleb128 0x5
 5181 00ed 49       		.uleb128 0x49
 5182 00ee 13       		.uleb128 0x13
 5183 00ef 00       		.byte	0
 5184 00f0 00       		.byte	0
 5185 00f1 11       		.uleb128 0x11
 5186 00f2 34       		.uleb128 0x34
 5187 00f3 00       		.byte	0
 5188 00f4 03       		.uleb128 0x3
 5189 00f5 0E       		.uleb128 0xe
 5190 00f6 3A       		.uleb128 0x3a
 5191 00f7 0B       		.uleb128 0xb
 5192 00f8 3B       		.uleb128 0x3b
 5193 00f9 05       		.uleb128 0x5
 5194 00fa 49       		.uleb128 0x49
 5195 00fb 13       		.uleb128 0x13
 5196 00fc 1C       		.uleb128 0x1c
 5197 00fd 0D       		.uleb128 0xd
 5198 00fe 00       		.byte	0
 5199 00ff 00       		.byte	0
 5200 0100 12       		.uleb128 0x12
 5201 0101 2E       		.uleb128 0x2e
 5202 0102 01       		.byte	0x1
 5203 0103 3F       		.uleb128 0x3f
 5204 0104 19       		.uleb128 0x19
 5205 0105 03       		.uleb128 0x3
 5206 0106 0E       		.uleb128 0xe
 5207 0107 3A       		.uleb128 0x3a
 5208 0108 0B       		.uleb128 0xb
 5209 0109 3B       		.uleb128 0x3b
 5210 010a 05       		.uleb128 0x5
 5211 010b 27       		.uleb128 0x27
 5212 010c 19       		.uleb128 0x19
 5213 010d 49       		.uleb128 0x49
 5214 010e 13       		.uleb128 0x13
 5215 010f 11       		.uleb128 0x11
 5216 0110 01       		.uleb128 0x1
 5217 0111 12       		.uleb128 0x12
 5218 0112 06       		.uleb128 0x6
 5219 0113 40       		.uleb128 0x40
 5220 0114 18       		.uleb128 0x18
 5221 0115 9742     		.uleb128 0x2117
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cc92bABD.s 			page 112


 5222 0117 19       		.uleb128 0x19
 5223 0118 01       		.uleb128 0x1
 5224 0119 13       		.uleb128 0x13
 5225 011a 00       		.byte	0
 5226 011b 00       		.byte	0
 5227 011c 13       		.uleb128 0x13
 5228 011d 2E       		.uleb128 0x2e
 5229 011e 01       		.byte	0x1
 5230 011f 3F       		.uleb128 0x3f
 5231 0120 19       		.uleb128 0x19
 5232 0121 03       		.uleb128 0x3
 5233 0122 0E       		.uleb128 0xe
 5234 0123 3A       		.uleb128 0x3a
 5235 0124 0B       		.uleb128 0xb
 5236 0125 3B       		.uleb128 0x3b
 5237 0126 0B       		.uleb128 0xb
 5238 0127 27       		.uleb128 0x27
 5239 0128 19       		.uleb128 0x19
 5240 0129 11       		.uleb128 0x11
 5241 012a 01       		.uleb128 0x1
 5242 012b 12       		.uleb128 0x12
 5243 012c 06       		.uleb128 0x6
 5244 012d 40       		.uleb128 0x40
 5245 012e 18       		.uleb128 0x18
 5246 012f 9642     		.uleb128 0x2116
 5247 0131 19       		.uleb128 0x19
 5248 0132 01       		.uleb128 0x1
 5249 0133 13       		.uleb128 0x13
 5250 0134 00       		.byte	0
 5251 0135 00       		.byte	0
 5252 0136 14       		.uleb128 0x14
 5253 0137 0B       		.uleb128 0xb
 5254 0138 01       		.byte	0x1
 5255 0139 11       		.uleb128 0x11
 5256 013a 01       		.uleb128 0x1
 5257 013b 12       		.uleb128 0x12
 5258 013c 06       		.uleb128 0x6
 5259 013d 01       		.uleb128 0x1
 5260 013e 13       		.uleb128 0x13
 5261 013f 00       		.byte	0
 5262 0140 00       		.byte	0
 5263 0141 15       		.uleb128 0x15
 5264 0142 34       		.uleb128 0x34
 5265 0143 00       		.byte	0
 5266 0144 03       		.uleb128 0x3
 5267 0145 0E       		.uleb128 0xe
 5268 0146 3A       		.uleb128 0x3a
 5269 0147 0B       		.uleb128 0xb
 5270 0148 3B       		.uleb128 0x3b
 5271 0149 05       		.uleb128 0x5
 5272 014a 49       		.uleb128 0x49
 5273 014b 13       		.uleb128 0x13
 5274 014c 1C       		.uleb128 0x1c
 5275 014d 0B       		.uleb128 0xb
 5276 014e 00       		.byte	0
 5277 014f 00       		.byte	0
 5278 0150 16       		.uleb128 0x16
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cc92bABD.s 			page 113


 5279 0151 34       		.uleb128 0x34
 5280 0152 00       		.byte	0
 5281 0153 03       		.uleb128 0x3
 5282 0154 0E       		.uleb128 0xe
 5283 0155 3A       		.uleb128 0x3a
 5284 0156 0B       		.uleb128 0xb
 5285 0157 3B       		.uleb128 0x3b
 5286 0158 05       		.uleb128 0x5
 5287 0159 49       		.uleb128 0x49
 5288 015a 13       		.uleb128 0x13
 5289 015b 1C       		.uleb128 0x1c
 5290 015c 05       		.uleb128 0x5
 5291 015d 00       		.byte	0
 5292 015e 00       		.byte	0
 5293 015f 17       		.uleb128 0x17
 5294 0160 2E       		.uleb128 0x2e
 5295 0161 01       		.byte	0x1
 5296 0162 3F       		.uleb128 0x3f
 5297 0163 19       		.uleb128 0x19
 5298 0164 03       		.uleb128 0x3
 5299 0165 0E       		.uleb128 0xe
 5300 0166 3A       		.uleb128 0x3a
 5301 0167 0B       		.uleb128 0xb
 5302 0168 3B       		.uleb128 0x3b
 5303 0169 05       		.uleb128 0x5
 5304 016a 27       		.uleb128 0x27
 5305 016b 19       		.uleb128 0x19
 5306 016c 8701     		.uleb128 0x87
 5307 016e 19       		.uleb128 0x19
 5308 016f 11       		.uleb128 0x11
 5309 0170 01       		.uleb128 0x1
 5310 0171 12       		.uleb128 0x12
 5311 0172 06       		.uleb128 0x6
 5312 0173 40       		.uleb128 0x40
 5313 0174 18       		.uleb128 0x18
 5314 0175 9742     		.uleb128 0x2117
 5315 0177 19       		.uleb128 0x19
 5316 0178 01       		.uleb128 0x1
 5317 0179 13       		.uleb128 0x13
 5318 017a 00       		.byte	0
 5319 017b 00       		.byte	0
 5320 017c 18       		.uleb128 0x18
 5321 017d 2E       		.uleb128 0x2e
 5322 017e 00       		.byte	0
 5323 017f 3F       		.uleb128 0x3f
 5324 0180 19       		.uleb128 0x19
 5325 0181 03       		.uleb128 0x3
 5326 0182 0E       		.uleb128 0xe
 5327 0183 3A       		.uleb128 0x3a
 5328 0184 0B       		.uleb128 0xb
 5329 0185 3B       		.uleb128 0x3b
 5330 0186 05       		.uleb128 0x5
 5331 0187 27       		.uleb128 0x27
 5332 0188 19       		.uleb128 0x19
 5333 0189 11       		.uleb128 0x11
 5334 018a 01       		.uleb128 0x1
 5335 018b 12       		.uleb128 0x12
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cc92bABD.s 			page 114


 5336 018c 06       		.uleb128 0x6
 5337 018d 40       		.uleb128 0x40
 5338 018e 18       		.uleb128 0x18
 5339 018f 9742     		.uleb128 0x2117
 5340 0191 19       		.uleb128 0x19
 5341 0192 00       		.byte	0
 5342 0193 00       		.byte	0
 5343 0194 19       		.uleb128 0x19
 5344 0195 34       		.uleb128 0x34
 5345 0196 00       		.byte	0
 5346 0197 03       		.uleb128 0x3
 5347 0198 0E       		.uleb128 0xe
 5348 0199 3A       		.uleb128 0x3a
 5349 019a 0B       		.uleb128 0xb
 5350 019b 3B       		.uleb128 0x3b
 5351 019c 05       		.uleb128 0x5
 5352 019d 49       		.uleb128 0x49
 5353 019e 13       		.uleb128 0x13
 5354 019f 3F       		.uleb128 0x3f
 5355 01a0 19       		.uleb128 0x19
 5356 01a1 3C       		.uleb128 0x3c
 5357 01a2 19       		.uleb128 0x19
 5358 01a3 00       		.byte	0
 5359 01a4 00       		.byte	0
 5360 01a5 1A       		.uleb128 0x1a
 5361 01a6 35       		.uleb128 0x35
 5362 01a7 00       		.byte	0
 5363 01a8 49       		.uleb128 0x49
 5364 01a9 13       		.uleb128 0x13
 5365 01aa 00       		.byte	0
 5366 01ab 00       		.byte	0
 5367 01ac 1B       		.uleb128 0x1b
 5368 01ad 34       		.uleb128 0x34
 5369 01ae 00       		.byte	0
 5370 01af 03       		.uleb128 0x3
 5371 01b0 0E       		.uleb128 0xe
 5372 01b1 3A       		.uleb128 0x3a
 5373 01b2 0B       		.uleb128 0xb
 5374 01b3 3B       		.uleb128 0x3b
 5375 01b4 0B       		.uleb128 0xb
 5376 01b5 49       		.uleb128 0x49
 5377 01b6 13       		.uleb128 0x13
 5378 01b7 3F       		.uleb128 0x3f
 5379 01b8 19       		.uleb128 0x19
 5380 01b9 02       		.uleb128 0x2
 5381 01ba 18       		.uleb128 0x18
 5382 01bb 00       		.byte	0
 5383 01bc 00       		.byte	0
 5384 01bd 1C       		.uleb128 0x1c
 5385 01be 01       		.uleb128 0x1
 5386 01bf 01       		.byte	0x1
 5387 01c0 49       		.uleb128 0x49
 5388 01c1 13       		.uleb128 0x13
 5389 01c2 01       		.uleb128 0x1
 5390 01c3 13       		.uleb128 0x13
 5391 01c4 00       		.byte	0
 5392 01c5 00       		.byte	0
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cc92bABD.s 			page 115


 5393 01c6 1D       		.uleb128 0x1d
 5394 01c7 21       		.uleb128 0x21
 5395 01c8 00       		.byte	0
 5396 01c9 49       		.uleb128 0x49
 5397 01ca 13       		.uleb128 0x13
 5398 01cb 2F       		.uleb128 0x2f
 5399 01cc 0B       		.uleb128 0xb
 5400 01cd 00       		.byte	0
 5401 01ce 00       		.byte	0
 5402 01cf 1E       		.uleb128 0x1e
 5403 01d0 34       		.uleb128 0x34
 5404 01d1 00       		.byte	0
 5405 01d2 03       		.uleb128 0x3
 5406 01d3 0E       		.uleb128 0xe
 5407 01d4 3A       		.uleb128 0x3a
 5408 01d5 0B       		.uleb128 0xb
 5409 01d6 3B       		.uleb128 0x3b
 5410 01d7 0B       		.uleb128 0xb
 5411 01d8 49       		.uleb128 0x49
 5412 01d9 13       		.uleb128 0x13
 5413 01da 3F       		.uleb128 0x3f
 5414 01db 19       		.uleb128 0x19
 5415 01dc 3C       		.uleb128 0x3c
 5416 01dd 19       		.uleb128 0x19
 5417 01de 00       		.byte	0
 5418 01df 00       		.byte	0
 5419 01e0 1F       		.uleb128 0x1f
 5420 01e1 2E       		.uleb128 0x2e
 5421 01e2 00       		.byte	0
 5422 01e3 3F       		.uleb128 0x3f
 5423 01e4 19       		.uleb128 0x19
 5424 01e5 3C       		.uleb128 0x3c
 5425 01e6 19       		.uleb128 0x19
 5426 01e7 6E       		.uleb128 0x6e
 5427 01e8 0E       		.uleb128 0xe
 5428 01e9 03       		.uleb128 0x3
 5429 01ea 0E       		.uleb128 0xe
 5430 01eb 3A       		.uleb128 0x3a
 5431 01ec 0B       		.uleb128 0xb
 5432 01ed 3B       		.uleb128 0x3b
 5433 01ee 0B       		.uleb128 0xb
 5434 01ef 00       		.byte	0
 5435 01f0 00       		.byte	0
 5436 01f1 00       		.byte	0
 5437              		.section	.debug_loc,"",%progbits
 5438              	.Ldebug_loc0:
 5439              	.LLST0:
 5440 0000 02000000 		.4byte	.LVL0
 5441 0004 14000000 		.4byte	.LVL2
 5442 0008 0200     		.2byte	0x2
 5443 000a 30       		.byte	0x30
 5444 000b 9F       		.byte	0x9f
 5445 000c 14000000 		.4byte	.LVL2
 5446 0010 40000000 		.4byte	.LVL9
 5447 0014 0100     		.2byte	0x1
 5448 0016 55       		.byte	0x55
 5449 0017 00000000 		.4byte	0
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cc92bABD.s 			page 116


 5450 001b 00000000 		.4byte	0
 5451              	.LLST1:
 5452 001f 22000000 		.4byte	.LVL5
 5453 0023 26000000 		.4byte	.LVL6
 5454 0027 0100     		.2byte	0x1
 5455 0029 50       		.byte	0x50
 5456 002a 26000000 		.4byte	.LVL6
 5457 002e 3A000000 		.4byte	.LVL8
 5458 0032 0100     		.2byte	0x1
 5459 0034 54       		.byte	0x54
 5460 0035 00000000 		.4byte	0
 5461 0039 00000000 		.4byte	0
 5462              	.LLST2:
 5463 003d 00000000 		.4byte	.LVL10
 5464 0041 08000000 		.4byte	.LVL12
 5465 0045 0100     		.2byte	0x1
 5466 0047 50       		.byte	0x50
 5467 0048 08000000 		.4byte	.LVL12
 5468 004c 3E000000 		.4byte	.LVL21
 5469 0050 0100     		.2byte	0x1
 5470 0052 54       		.byte	0x54
 5471 0053 3E000000 		.4byte	.LVL21
 5472 0057 D0000000 		.4byte	.LFE66
 5473 005b 0400     		.2byte	0x4
 5474 005d F3       		.byte	0xf3
 5475 005e 01       		.uleb128 0x1
 5476 005f 50       		.byte	0x50
 5477 0060 9F       		.byte	0x9f
 5478 0061 00000000 		.4byte	0
 5479 0065 00000000 		.4byte	0
 5480              	.LLST3:
 5481 0069 06000000 		.4byte	.LVL11
 5482 006d 3E000000 		.4byte	.LVL21
 5483 0071 0200     		.2byte	0x2
 5484 0073 30       		.byte	0x30
 5485 0074 9F       		.byte	0x9f
 5486 0075 3E000000 		.4byte	.LVL21
 5487 0079 50000000 		.4byte	.LVL27
 5488 007d 0100     		.2byte	0x1
 5489 007f 56       		.byte	0x56
 5490 0080 50000000 		.4byte	.LVL27
 5491 0084 52000000 		.4byte	.LVL28
 5492 0088 0100     		.2byte	0x1
 5493 008a 50       		.byte	0x50
 5494 008b 52000000 		.4byte	.LVL28
 5495 008f C2000000 		.4byte	.LVL43
 5496 0093 0100     		.2byte	0x1
 5497 0095 56       		.byte	0x56
 5498 0096 00000000 		.4byte	0
 5499 009a 00000000 		.4byte	0
 5500              	.LLST4:
 5501 009e 44000000 		.4byte	.LVL23
 5502 00a2 47000000 		.4byte	.LVL24-1
 5503 00a6 0100     		.2byte	0x1
 5504 00a8 50       		.byte	0x50
 5505 00a9 47000000 		.4byte	.LVL24-1
 5506 00ad 9C000000 		.4byte	.LVL37
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cc92bABD.s 			page 117


 5507 00b1 0100     		.2byte	0x1
 5508 00b3 54       		.byte	0x54
 5509 00b4 00000000 		.4byte	0
 5510 00b8 00000000 		.4byte	0
 5511              	.LLST5:
 5512 00bc 4A000000 		.4byte	.LVL25
 5513 00c0 4D000000 		.4byte	.LVL26-1
 5514 00c4 0100     		.2byte	0x1
 5515 00c6 50       		.byte	0x50
 5516 00c7 4D000000 		.4byte	.LVL26-1
 5517 00cb 9C000000 		.4byte	.LVL37
 5518 00cf 0100     		.2byte	0x1
 5519 00d1 55       		.byte	0x55
 5520 00d2 00000000 		.4byte	0
 5521 00d6 00000000 		.4byte	0
 5522              	.LLST6:
 5523 00da 06000000 		.4byte	.LVL11
 5524 00de 3E000000 		.4byte	.LVL21
 5525 00e2 0300     		.2byte	0x3
 5526 00e4 08       		.byte	0x8
 5527 00e5 46       		.byte	0x46
 5528 00e6 9F       		.byte	0x9f
 5529 00e7 3E000000 		.4byte	.LVL21
 5530 00eb C2000000 		.4byte	.LVL43
 5531 00ef 0100     		.2byte	0x1
 5532 00f1 59       		.byte	0x59
 5533 00f2 00000000 		.4byte	0
 5534 00f6 00000000 		.4byte	0
 5535              	.LLST7:
 5536 00fa 06000000 		.4byte	.LVL11
 5537 00fe 3E000000 		.4byte	.LVL21
 5538 0102 0300     		.2byte	0x3
 5539 0104 08       		.byte	0x8
 5540 0105 46       		.byte	0x46
 5541 0106 9F       		.byte	0x9f
 5542 0107 3E000000 		.4byte	.LVL21
 5543 010b 80000000 		.4byte	.LVL32
 5544 010f 0100     		.2byte	0x1
 5545 0111 58       		.byte	0x58
 5546 0112 84000000 		.4byte	.LVL33
 5547 0116 8C000000 		.4byte	.LVL34
 5548 011a 0100     		.2byte	0x1
 5549 011c 58       		.byte	0x58
 5550 011d 90000000 		.4byte	.LVL35
 5551 0121 C2000000 		.4byte	.LVL43
 5552 0125 0100     		.2byte	0x1
 5553 0127 58       		.byte	0x58
 5554 0128 00000000 		.4byte	0
 5555 012c 00000000 		.4byte	0
 5556              	.LLST8:
 5557 0130 06000000 		.4byte	.LVL44
 5558 0134 0A000000 		.4byte	.LVL45
 5559 0138 0100     		.2byte	0x1
 5560 013a 50       		.byte	0x50
 5561 013b 00000000 		.4byte	0
 5562 013f 00000000 		.4byte	0
 5563              	.LLST9:
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cc92bABD.s 			page 118


 5564 0143 00000000 		.4byte	.LVL47
 5565 0147 08000000 		.4byte	.LVL48
 5566 014b 0100     		.2byte	0x1
 5567 014d 50       		.byte	0x50
 5568 014e 08000000 		.4byte	.LVL48
 5569 0152 32000000 		.4byte	.LVL54
 5570 0156 0100     		.2byte	0x1
 5571 0158 54       		.byte	0x54
 5572 0159 32000000 		.4byte	.LVL54
 5573 015d 3C000000 		.4byte	.LFE68
 5574 0161 0500     		.2byte	0x5
 5575 0163 03       		.byte	0x3
 5576 0164 00000000 		.4byte	internal_orientation
 5577 0168 00000000 		.4byte	0
 5578 016c 00000000 		.4byte	0
 5579              	.LLST10:
 5580 0170 00000000 		.4byte	.LVL47
 5581 0174 2B000000 		.4byte	.LVL53-1
 5582 0178 0100     		.2byte	0x1
 5583 017a 51       		.byte	0x51
 5584 017b 2B000000 		.4byte	.LVL53-1
 5585 017f 3C000000 		.4byte	.LFE68
 5586 0183 0400     		.2byte	0x4
 5587 0185 F3       		.byte	0xf3
 5588 0186 01       		.uleb128 0x1
 5589 0187 51       		.byte	0x51
 5590 0188 9F       		.byte	0x9f
 5591 0189 00000000 		.4byte	0
 5592 018d 00000000 		.4byte	0
 5593              	.LLST11:
 5594 0191 10000000 		.4byte	.LVL50
 5595 0195 22000000 		.4byte	.LVL51
 5596 0199 0100     		.2byte	0x1
 5597 019b 50       		.byte	0x50
 5598 019c 22000000 		.4byte	.LVL51
 5599 01a0 26000000 		.4byte	.LVL52
 5600 01a4 0800     		.2byte	0x8
 5601 01a6 73       		.byte	0x73
 5602 01a7 00       		.sleb128 0
 5603 01a8 70       		.byte	0x70
 5604 01a9 00       		.sleb128 0
 5605 01aa 4F       		.byte	0x4f
 5606 01ab 26       		.byte	0x26
 5607 01ac 1C       		.byte	0x1c
 5608 01ad 9F       		.byte	0x9f
 5609 01ae 26000000 		.4byte	.LVL52
 5610 01b2 2B000000 		.4byte	.LVL53-1
 5611 01b6 0100     		.2byte	0x1
 5612 01b8 50       		.byte	0x50
 5613 01b9 00000000 		.4byte	0
 5614 01bd 00000000 		.4byte	0
 5615              	.LLST12:
 5616 01c1 0A000000 		.4byte	.LVL49
 5617 01c5 10000000 		.4byte	.LVL50
 5618 01c9 0100     		.2byte	0x1
 5619 01cb 50       		.byte	0x50
 5620 01cc 10000000 		.4byte	.LVL50
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cc92bABD.s 			page 119


 5621 01d0 2B000000 		.4byte	.LVL53-1
 5622 01d4 0A00     		.2byte	0xa
 5623 01d6 74       		.byte	0x74
 5624 01d7 00       		.sleb128 0
 5625 01d8 03       		.byte	0x3
 5626 01d9 00000000 		.4byte	internal_orientation
 5627 01dd 06       		.byte	0x6
 5628 01de 1C       		.byte	0x1c
 5629 01df 9F       		.byte	0x9f
 5630 01e0 00000000 		.4byte	0
 5631 01e4 00000000 		.4byte	0
 5632              	.LLST13:
 5633 01e8 00000000 		.4byte	.LVL55
 5634 01ec 18000000 		.4byte	.LVL59
 5635 01f0 0100     		.2byte	0x1
 5636 01f2 50       		.byte	0x50
 5637 01f3 18000000 		.4byte	.LVL59
 5638 01f7 32010000 		.4byte	.LVL88
 5639 01fb 0100     		.2byte	0x1
 5640 01fd 58       		.byte	0x58
 5641 01fe 32010000 		.4byte	.LVL88
 5642 0202 4C010000 		.4byte	.LFE69
 5643 0206 0400     		.2byte	0x4
 5644 0208 F3       		.byte	0xf3
 5645 0209 01       		.uleb128 0x1
 5646 020a 50       		.byte	0x50
 5647 020b 9F       		.byte	0x9f
 5648 020c 00000000 		.4byte	0
 5649 0210 00000000 		.4byte	0
 5650              	.LLST14:
 5651 0214 00000000 		.4byte	.LVL55
 5652 0218 18000000 		.4byte	.LVL59
 5653 021c 0100     		.2byte	0x1
 5654 021e 51       		.byte	0x51
 5655 021f 18000000 		.4byte	.LVL59
 5656 0223 32010000 		.4byte	.LVL88
 5657 0227 0100     		.2byte	0x1
 5658 0229 57       		.byte	0x57
 5659 022a 32010000 		.4byte	.LVL88
 5660 022e 4C010000 		.4byte	.LFE69
 5661 0232 0400     		.2byte	0x4
 5662 0234 F3       		.byte	0xf3
 5663 0235 01       		.uleb128 0x1
 5664 0236 51       		.byte	0x51
 5665 0237 9F       		.byte	0x9f
 5666 0238 00000000 		.4byte	0
 5667 023c 00000000 		.4byte	0
 5668              	.LLST15:
 5669 0240 00000000 		.4byte	.LVL55
 5670 0244 10000000 		.4byte	.LVL57
 5671 0248 0100     		.2byte	0x1
 5672 024a 52       		.byte	0x52
 5673 024b 10000000 		.4byte	.LVL57
 5674 024f 32010000 		.4byte	.LVL88
 5675 0253 0100     		.2byte	0x1
 5676 0255 59       		.byte	0x59
 5677 0256 32010000 		.4byte	.LVL88
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cc92bABD.s 			page 120


 5678 025a 4C010000 		.4byte	.LFE69
 5679 025e 0400     		.2byte	0x4
 5680 0260 F3       		.byte	0xf3
 5681 0261 01       		.uleb128 0x1
 5682 0262 52       		.byte	0x52
 5683 0263 9F       		.byte	0x9f
 5684 0264 00000000 		.4byte	0
 5685 0268 00000000 		.4byte	0
 5686              	.LLST16:
 5687 026c 00000000 		.4byte	.LVL55
 5688 0270 12000000 		.4byte	.LVL58
 5689 0274 0100     		.2byte	0x1
 5690 0276 53       		.byte	0x53
 5691 0277 12000000 		.4byte	.LVL58
 5692 027b 32010000 		.4byte	.LVL88
 5693 027f 0100     		.2byte	0x1
 5694 0281 54       		.byte	0x54
 5695 0282 32010000 		.4byte	.LVL88
 5696 0286 4C010000 		.4byte	.LFE69
 5697 028a 0400     		.2byte	0x4
 5698 028c F3       		.byte	0xf3
 5699 028d 01       		.uleb128 0x1
 5700 028e 53       		.byte	0x53
 5701 028f 9F       		.byte	0x9f
 5702 0290 00000000 		.4byte	0
 5703 0294 00000000 		.4byte	0
 5704              	.LLST17:
 5705 0298 00000000 		.4byte	.LVL55
 5706 029c 32010000 		.4byte	.LVL88
 5707 02a0 0200     		.2byte	0x2
 5708 02a2 91       		.byte	0x91
 5709 02a3 00       		.sleb128 0
 5710 02a4 32010000 		.4byte	.LVL88
 5711 02a8 4C010000 		.4byte	.LFE69
 5712 02ac 0200     		.2byte	0x2
 5713 02ae 7D       		.byte	0x7d
 5714 02af 00       		.sleb128 0
 5715 02b0 00000000 		.4byte	0
 5716 02b4 00000000 		.4byte	0
 5717              	.LLST18:
 5718 02b8 0C000000 		.4byte	.LVL56
 5719 02bc 32010000 		.4byte	.LVL88
 5720 02c0 0200     		.2byte	0x2
 5721 02c2 91       		.byte	0x91
 5722 02c3 00       		.sleb128 0
 5723 02c4 32010000 		.4byte	.LVL88
 5724 02c8 4C010000 		.4byte	.LFE69
 5725 02cc 0200     		.2byte	0x2
 5726 02ce 7D       		.byte	0x7d
 5727 02cf 00       		.sleb128 0
 5728 02d0 00000000 		.4byte	0
 5729 02d4 00000000 		.4byte	0
 5730              	.LLST20:
 5731 02d8 18000000 		.4byte	.LVL59
 5732 02dc 32010000 		.4byte	.LVL88
 5733 02e0 0100     		.2byte	0x1
 5734 02e2 55       		.byte	0x55
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cc92bABD.s 			page 121


 5735 02e3 00000000 		.4byte	0
 5736 02e7 00000000 		.4byte	0
 5737              	.LLST21:
 5738 02eb 00000000 		.4byte	.LVL89
 5739 02ef 0E000000 		.4byte	.LVL90
 5740 02f3 0100     		.2byte	0x1
 5741 02f5 50       		.byte	0x50
 5742 02f6 0E000000 		.4byte	.LVL90
 5743 02fa 36000000 		.4byte	.LVL96
 5744 02fe 0400     		.2byte	0x4
 5745 0300 F3       		.byte	0xf3
 5746 0301 01       		.uleb128 0x1
 5747 0302 50       		.byte	0x50
 5748 0303 9F       		.byte	0x9f
 5749 0304 36000000 		.4byte	.LVL96
 5750 0308 3C000000 		.4byte	.LVL97
 5751 030c 0100     		.2byte	0x1
 5752 030e 50       		.byte	0x50
 5753 030f 3C000000 		.4byte	.LVL97
 5754 0313 64000000 		.4byte	.LVL103
 5755 0317 0400     		.2byte	0x4
 5756 0319 F3       		.byte	0xf3
 5757 031a 01       		.uleb128 0x1
 5758 031b 50       		.byte	0x50
 5759 031c 9F       		.byte	0x9f
 5760 031d 64000000 		.4byte	.LVL103
 5761 0321 64000000 		.4byte	.LVL104
 5762 0325 0100     		.2byte	0x1
 5763 0327 50       		.byte	0x50
 5764 0328 64000000 		.4byte	.LVL104
 5765 032c 66000000 		.4byte	.LVL105
 5766 0330 0400     		.2byte	0x4
 5767 0332 F3       		.byte	0xf3
 5768 0333 01       		.uleb128 0x1
 5769 0334 50       		.byte	0x50
 5770 0335 9F       		.byte	0x9f
 5771 0336 66000000 		.4byte	.LVL105
 5772 033a 68000000 		.4byte	.LVL106
 5773 033e 0100     		.2byte	0x1
 5774 0340 50       		.byte	0x50
 5775 0341 68000000 		.4byte	.LVL106
 5776 0345 84000000 		.4byte	.LFE70
 5777 0349 0400     		.2byte	0x4
 5778 034b F3       		.byte	0xf3
 5779 034c 01       		.uleb128 0x1
 5780 034d 50       		.byte	0x50
 5781 034e 9F       		.byte	0x9f
 5782 034f 00000000 		.4byte	0
 5783 0353 00000000 		.4byte	0
 5784              	.LLST22:
 5785 0357 1C000000 		.4byte	.LVL93
 5786 035b 2B000000 		.4byte	.LVL94-1
 5787 035f 0100     		.2byte	0x1
 5788 0361 52       		.byte	0x52
 5789 0362 4A000000 		.4byte	.LVL100
 5790 0366 59000000 		.4byte	.LVL101-1
 5791 036a 0100     		.2byte	0x1
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cc92bABD.s 			page 122


 5792 036c 52       		.byte	0x52
 5793 036d 6A000000 		.4byte	.LVL107
 5794 0371 84000000 		.4byte	.LFE70
 5795 0375 0100     		.2byte	0x1
 5796 0377 52       		.byte	0x52
 5797 0378 00000000 		.4byte	0
 5798 037c 00000000 		.4byte	0
 5799              	.LLST23:
 5800 0380 00000000 		.4byte	.LVL108
 5801 0384 16000000 		.4byte	.LVL110
 5802 0388 0100     		.2byte	0x1
 5803 038a 50       		.byte	0x50
 5804 038b 16000000 		.4byte	.LVL110
 5805 038f A4020000 		.4byte	.LVL194
 5806 0393 0100     		.2byte	0x1
 5807 0395 5B       		.byte	0x5b
 5808 0396 A4020000 		.4byte	.LVL194
 5809 039a CC020000 		.4byte	.LFE67
 5810 039e 0400     		.2byte	0x4
 5811 03a0 F3       		.byte	0xf3
 5812 03a1 01       		.uleb128 0x1
 5813 03a2 50       		.byte	0x50
 5814 03a3 9F       		.byte	0x9f
 5815 03a4 00000000 		.4byte	0
 5816 03a8 00000000 		.4byte	0
 5817              	.LLST24:
 5818 03ac 00000000 		.4byte	.LVL108
 5819 03b0 19000000 		.4byte	.LVL111-1
 5820 03b4 0100     		.2byte	0x1
 5821 03b6 51       		.byte	0x51
 5822 03b7 19000000 		.4byte	.LVL111-1
 5823 03bb A4020000 		.4byte	.LVL194
 5824 03bf 0200     		.2byte	0x2
 5825 03c1 91       		.byte	0x91
 5826 03c2 54       		.sleb128 -44
 5827 03c3 A4020000 		.4byte	.LVL194
 5828 03c7 CC020000 		.4byte	.LFE67
 5829 03cb 0200     		.2byte	0x2
 5830 03cd 7D       		.byte	0x7d
 5831 03ce 54       		.sleb128 -44
 5832 03cf 00000000 		.4byte	0
 5833 03d3 00000000 		.4byte	0
 5834              	.LLST25:
 5835 03d7 00000000 		.4byte	.LVL108
 5836 03db 19000000 		.4byte	.LVL111-1
 5837 03df 0100     		.2byte	0x1
 5838 03e1 52       		.byte	0x52
 5839 03e2 19000000 		.4byte	.LVL111-1
 5840 03e6 A4020000 		.4byte	.LVL194
 5841 03ea 0200     		.2byte	0x2
 5842 03ec 91       		.byte	0x91
 5843 03ed 4C       		.sleb128 -52
 5844 03ee A4020000 		.4byte	.LVL194
 5845 03f2 CC020000 		.4byte	.LFE67
 5846 03f6 0200     		.2byte	0x2
 5847 03f8 7D       		.byte	0x7d
 5848 03f9 4C       		.sleb128 -52
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cc92bABD.s 			page 123


 5849 03fa 00000000 		.4byte	0
 5850 03fe 00000000 		.4byte	0
 5851              	.LLST26:
 5852 0402 00000000 		.4byte	.LVL108
 5853 0406 19000000 		.4byte	.LVL111-1
 5854 040a 0100     		.2byte	0x1
 5855 040c 53       		.byte	0x53
 5856 040d 19000000 		.4byte	.LVL111-1
 5857 0411 A4020000 		.4byte	.LVL194
 5858 0415 0100     		.2byte	0x1
 5859 0417 54       		.byte	0x54
 5860 0418 A4020000 		.4byte	.LVL194
 5861 041c CC020000 		.4byte	.LFE67
 5862 0420 0400     		.2byte	0x4
 5863 0422 F3       		.byte	0xf3
 5864 0423 01       		.uleb128 0x1
 5865 0424 53       		.byte	0x53
 5866 0425 9F       		.byte	0x9f
 5867 0426 00000000 		.4byte	0
 5868 042a 00000000 		.4byte	0
 5869              	.LLST27:
 5870 042e 00000000 		.4byte	.LVL108
 5871 0432 A4020000 		.4byte	.LVL194
 5872 0436 0200     		.2byte	0x2
 5873 0438 91       		.byte	0x91
 5874 0439 00       		.sleb128 0
 5875 043a A4020000 		.4byte	.LVL194
 5876 043e CC020000 		.4byte	.LFE67
 5877 0442 0200     		.2byte	0x2
 5878 0444 7D       		.byte	0x7d
 5879 0445 00       		.sleb128 0
 5880 0446 00000000 		.4byte	0
 5881 044a 00000000 		.4byte	0
 5882              	.LLST28:
 5883 044e 00000000 		.4byte	.LVL108
 5884 0452 A4020000 		.4byte	.LVL194
 5885 0456 0200     		.2byte	0x2
 5886 0458 91       		.byte	0x91
 5887 0459 04       		.sleb128 4
 5888 045a A4020000 		.4byte	.LVL194
 5889 045e CC020000 		.4byte	.LFE67
 5890 0462 0200     		.2byte	0x2
 5891 0464 7D       		.byte	0x7d
 5892 0465 04       		.sleb128 4
 5893 0466 00000000 		.4byte	0
 5894 046a 00000000 		.4byte	0
 5895              	.LLST29:
 5896 046e A0000000 		.4byte	.LVL127
 5897 0472 A3000000 		.4byte	.LVL128-1
 5898 0476 0100     		.2byte	0x1
 5899 0478 50       		.byte	0x50
 5900 0479 A3000000 		.4byte	.LVL128-1
 5901 047d AA000000 		.4byte	.LVL129
 5902 0481 0100     		.2byte	0x1
 5903 0483 57       		.byte	0x57
 5904 0484 AA000000 		.4byte	.LVL129
 5905 0488 7E010000 		.4byte	.LVL157
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cc92bABD.s 			page 124


 5906 048c 0200     		.2byte	0x2
 5907 048e 91       		.byte	0x91
 5908 048f 48       		.sleb128 -56
 5909 0490 BA010000 		.4byte	.LVL162
 5910 0494 BD010000 		.4byte	.LVL163-1
 5911 0498 0100     		.2byte	0x1
 5912 049a 50       		.byte	0x50
 5913 049b BD010000 		.4byte	.LVL163-1
 5914 049f C4010000 		.4byte	.LVL164
 5915 04a3 0100     		.2byte	0x1
 5916 04a5 57       		.byte	0x57
 5917 04a6 C4010000 		.4byte	.LVL164
 5918 04aa 56020000 		.4byte	.LVL184
 5919 04ae 0200     		.2byte	0x2
 5920 04b0 91       		.byte	0x91
 5921 04b1 48       		.sleb128 -56
 5922 04b2 00000000 		.4byte	0
 5923 04b6 00000000 		.4byte	0
 5924              	.LLST30:
 5925 04ba A4000000 		.4byte	.LVL128
 5926 04be B0000000 		.4byte	.LVL130
 5927 04c2 0100     		.2byte	0x1
 5928 04c4 50       		.byte	0x50
 5929 04c5 BE010000 		.4byte	.LVL163
 5930 04c9 CA010000 		.4byte	.LVL165
 5931 04cd 0100     		.2byte	0x1
 5932 04cf 50       		.byte	0x50
 5933 04d0 00000000 		.4byte	0
 5934 04d4 00000000 		.4byte	0
 5935              	.LLST31:
 5936 04d8 10000000 		.4byte	.LVL109
 5937 04dc 98000000 		.4byte	.LVL125
 5938 04e0 0100     		.2byte	0x1
 5939 04e2 56       		.byte	0x56
 5940 04e3 98000000 		.4byte	.LVL125
 5941 04e7 7E010000 		.4byte	.LVL157
 5942 04eb 0100     		.2byte	0x1
 5943 04ed 59       		.byte	0x59
 5944 04ee 7E010000 		.4byte	.LVL157
 5945 04f2 8E010000 		.4byte	.LVL158
 5946 04f6 0100     		.2byte	0x1
 5947 04f8 56       		.byte	0x56
 5948 04f9 8E010000 		.4byte	.LVL158
 5949 04fd A4020000 		.4byte	.LVL194
 5950 0501 0100     		.2byte	0x1
 5951 0503 59       		.byte	0x59
 5952 0504 00000000 		.4byte	0
 5953 0508 00000000 		.4byte	0
 5954              	.LLST32:
 5955 050c 10000000 		.4byte	.LVL109
 5956 0510 98000000 		.4byte	.LVL125
 5957 0514 0100     		.2byte	0x1
 5958 0516 56       		.byte	0x56
 5959 0517 98000000 		.4byte	.LVL125
 5960 051b 7E010000 		.4byte	.LVL157
 5961 051f 0100     		.2byte	0x1
 5962 0521 5A       		.byte	0x5a
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cc92bABD.s 			page 125


 5963 0522 7E010000 		.4byte	.LVL157
 5964 0526 8E010000 		.4byte	.LVL158
 5965 052a 0100     		.2byte	0x1
 5966 052c 56       		.byte	0x56
 5967 052d 8E010000 		.4byte	.LVL158
 5968 0531 A4020000 		.4byte	.LVL194
 5969 0535 0100     		.2byte	0x1
 5970 0537 5A       		.byte	0x5a
 5971 0538 00000000 		.4byte	0
 5972 053c 00000000 		.4byte	0
 5973              	.LLST33:
 5974 0540 10000000 		.4byte	.LVL109
 5975 0544 98000000 		.4byte	.LVL125
 5976 0548 0200     		.2byte	0x2
 5977 054a 30       		.byte	0x30
 5978 054b 9F       		.byte	0x9f
 5979 054c 98000000 		.4byte	.LVL125
 5980 0550 F2000000 		.4byte	.LVL139
 5981 0554 0200     		.2byte	0x2
 5982 0556 91       		.byte	0x91
 5983 0557 50       		.sleb128 -48
 5984 0558 F2000000 		.4byte	.LVL139
 5985 055c F8000000 		.4byte	.LVL140
 5986 0560 0200     		.2byte	0x2
 5987 0562 30       		.byte	0x30
 5988 0563 9F       		.byte	0x9f
 5989 0564 F8000000 		.4byte	.LVL140
 5990 0568 12010000 		.4byte	.LVL143
 5991 056c 0200     		.2byte	0x2
 5992 056e 91       		.byte	0x91
 5993 056f 50       		.sleb128 -48
 5994 0570 12010000 		.4byte	.LVL143
 5995 0574 18010000 		.4byte	.LVL144
 5996 0578 0200     		.2byte	0x2
 5997 057a 31       		.byte	0x31
 5998 057b 9F       		.byte	0x9f
 5999 057c 18010000 		.4byte	.LVL144
 6000 0580 7E010000 		.4byte	.LVL157
 6001 0584 0200     		.2byte	0x2
 6002 0586 91       		.byte	0x91
 6003 0587 50       		.sleb128 -48
 6004 0588 7E010000 		.4byte	.LVL157
 6005 058c 8E010000 		.4byte	.LVL158
 6006 0590 0200     		.2byte	0x2
 6007 0592 30       		.byte	0x30
 6008 0593 9F       		.byte	0x9f
 6009 0594 8E010000 		.4byte	.LVL158
 6010 0598 A8010000 		.4byte	.LVL159
 6011 059c 0200     		.2byte	0x2
 6012 059e 91       		.byte	0x91
 6013 059f 50       		.sleb128 -48
 6014 05a0 00000000 		.4byte	0
 6015 05a4 00000000 		.4byte	0
 6016              	.LLST34:
 6017 05a8 3C000000 		.4byte	.LVL115
 6018 05ac 74020000 		.4byte	.LVL187
 6019 05b0 0100     		.2byte	0x1
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cc92bABD.s 			page 126


 6020 05b2 55       		.byte	0x55
 6021 05b3 00000000 		.4byte	0
 6022 05b7 00000000 		.4byte	0
 6023              	.LLST35:
 6024 05bb 10000000 		.4byte	.LVL109
 6025 05bf 98000000 		.4byte	.LVL125
 6026 05c3 0400     		.2byte	0x4
 6027 05c5 0B       		.byte	0xb
 6028 05c6 C7FA     		.2byte	0xfac7
 6029 05c8 9F       		.byte	0x9f
 6030 05c9 98000000 		.4byte	.LVL125
 6031 05cd 78010000 		.4byte	.LVL156
 6032 05d1 0300     		.2byte	0x3
 6033 05d3 91       		.byte	0x91
 6034 05d4 BC7F     		.sleb128 -68
 6035 05d6 78010000 		.4byte	.LVL156
 6036 05da 7E010000 		.4byte	.LVL157
 6037 05de 0200     		.2byte	0x2
 6038 05e0 91       		.byte	0x91
 6039 05e1 48       		.sleb128 -56
 6040 05e2 7E010000 		.4byte	.LVL157
 6041 05e6 8E010000 		.4byte	.LVL158
 6042 05ea 0400     		.2byte	0x4
 6043 05ec 0B       		.byte	0xb
 6044 05ed C7FA     		.2byte	0xfac7
 6045 05ef 9F       		.byte	0x9f
 6046 05f0 8E010000 		.4byte	.LVL158
 6047 05f4 52020000 		.4byte	.LVL183
 6048 05f8 0300     		.2byte	0x3
 6049 05fa 91       		.byte	0x91
 6050 05fb BC7F     		.sleb128 -68
 6051 05fd 52020000 		.4byte	.LVL183
 6052 0601 56020000 		.4byte	.LVL184
 6053 0605 0200     		.2byte	0x2
 6054 0607 91       		.byte	0x91
 6055 0608 48       		.sleb128 -56
 6056 0609 56020000 		.4byte	.LVL184
 6057 060d A4020000 		.4byte	.LVL194
 6058 0611 0300     		.2byte	0x3
 6059 0613 91       		.byte	0x91
 6060 0614 BC7F     		.sleb128 -68
 6061 0616 A4020000 		.4byte	.LVL194
 6062 061a CC020000 		.4byte	.LFE67
 6063 061e 0300     		.2byte	0x3
 6064 0620 7D       		.byte	0x7d
 6065 0621 BC7F     		.sleb128 -68
 6066 0623 00000000 		.4byte	0
 6067 0627 00000000 		.4byte	0
 6068              	.LLST36:
 6069 062b 10000000 		.4byte	.LVL109
 6070 062f 98000000 		.4byte	.LVL125
 6071 0633 0200     		.2byte	0x2
 6072 0635 30       		.byte	0x30
 6073 0636 9F       		.byte	0x9f
 6074 0637 98000000 		.4byte	.LVL125
 6075 063b 78010000 		.4byte	.LVL156
 6076 063f 0100     		.2byte	0x1
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cc92bABD.s 			page 127


 6077 0641 58       		.byte	0x58
 6078 0642 78010000 		.4byte	.LVL156
 6079 0646 7E010000 		.4byte	.LVL157
 6080 064a 0100     		.2byte	0x1
 6081 064c 50       		.byte	0x50
 6082 064d 7E010000 		.4byte	.LVL157
 6083 0651 8E010000 		.4byte	.LVL158
 6084 0655 0200     		.2byte	0x2
 6085 0657 30       		.byte	0x30
 6086 0658 9F       		.byte	0x9f
 6087 0659 8E010000 		.4byte	.LVL158
 6088 065d A8010000 		.4byte	.LVL159
 6089 0661 0100     		.2byte	0x1
 6090 0663 58       		.byte	0x58
 6091 0664 A8010000 		.4byte	.LVL159
 6092 0668 B2010000 		.4byte	.LVL160
 6093 066c 0100     		.2byte	0x1
 6094 066e 57       		.byte	0x57
 6095 066f B2010000 		.4byte	.LVL160
 6096 0673 52020000 		.4byte	.LVL183
 6097 0677 0100     		.2byte	0x1
 6098 0679 58       		.byte	0x58
 6099 067a 52020000 		.4byte	.LVL183
 6100 067e 56020000 		.4byte	.LVL184
 6101 0682 0100     		.2byte	0x1
 6102 0684 50       		.byte	0x50
 6103 0685 56020000 		.4byte	.LVL184
 6104 0689 68020000 		.4byte	.LVL185
 6105 068d 0100     		.2byte	0x1
 6106 068f 58       		.byte	0x58
 6107 0690 00000000 		.4byte	0
 6108 0694 00000000 		.4byte	0
 6109              	.LLST37:
 6110 0698 3A010000 		.4byte	.LVL149
 6111 069c 7E010000 		.4byte	.LVL157
 6112 06a0 0200     		.2byte	0x2
 6113 06a2 31       		.byte	0x31
 6114 06a3 9F       		.byte	0x9f
 6115 06a4 00000000 		.4byte	0
 6116 06a8 00000000 		.4byte	0
 6117              	.LLST38:
 6118 06ac 14020000 		.4byte	.LVL176
 6119 06b0 56020000 		.4byte	.LVL184
 6120 06b4 0200     		.2byte	0x2
 6121 06b6 31       		.byte	0x31
 6122 06b7 9F       		.byte	0x9f
 6123 06b8 00000000 		.4byte	0
 6124 06bc 00000000 		.4byte	0
 6125              	.LLST39:
 6126 06c0 00000000 		.4byte	.LVL195
 6127 06c4 07000000 		.4byte	.LVL197-1
 6128 06c8 0100     		.2byte	0x1
 6129 06ca 50       		.byte	0x50
 6130 06cb 07000000 		.4byte	.LVL197-1
 6131 06cf C4010000 		.4byte	.LFE72
 6132 06d3 0400     		.2byte	0x4
 6133 06d5 F3       		.byte	0xf3
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cc92bABD.s 			page 128


 6134 06d6 01       		.uleb128 0x1
 6135 06d7 50       		.byte	0x50
 6136 06d8 9F       		.byte	0x9f
 6137 06d9 00000000 		.4byte	0
 6138 06dd 00000000 		.4byte	0
 6139              	.LLST40:
 6140 06e1 04000000 		.4byte	.LVL196
 6141 06e5 0E000000 		.4byte	.LVL198
 6142 06e9 0400     		.2byte	0x4
 6143 06eb 0A       		.byte	0xa
 6144 06ec 2C01     		.2byte	0x12c
 6145 06ee 9F       		.byte	0x9f
 6146 06ef 0E000000 		.4byte	.LVL198
 6147 06f3 1C000000 		.4byte	.LVL201
 6148 06f7 0100     		.2byte	0x1
 6149 06f9 54       		.byte	0x54
 6150 06fa 52000000 		.4byte	.LVL208
 6151 06fe B6000000 		.4byte	.LVL222
 6152 0702 0100     		.2byte	0x1
 6153 0704 54       		.byte	0x54
 6154 0705 B8000000 		.4byte	.LVL223
 6155 0709 FE000000 		.4byte	.LVL230
 6156 070d 0100     		.2byte	0x1
 6157 070f 54       		.byte	0x54
 6158 0710 00010000 		.4byte	.LVL231
 6159 0714 A8010000 		.4byte	.LVL251
 6160 0718 0100     		.2byte	0x1
 6161 071a 54       		.byte	0x54
 6162 071b 00000000 		.4byte	0
 6163 071f 00000000 		.4byte	0
 6164              	.LLST41:
 6165 0723 00000000 		.4byte	.LVL252
 6166 0727 11000000 		.4byte	.LVL254-1
 6167 072b 0100     		.2byte	0x1
 6168 072d 50       		.byte	0x50
 6169 072e 11000000 		.4byte	.LVL254-1
 6170 0732 32000000 		.4byte	.LVL258
 6171 0736 0100     		.2byte	0x1
 6172 0738 55       		.byte	0x55
 6173 0739 32000000 		.4byte	.LVL258
 6174 073d 3C000000 		.4byte	.LFE71
 6175 0741 0400     		.2byte	0x4
 6176 0743 F3       		.byte	0xf3
 6177 0744 01       		.uleb128 0x1
 6178 0745 50       		.byte	0x50
 6179 0746 9F       		.byte	0x9f
 6180 0747 00000000 		.4byte	0
 6181 074b 00000000 		.4byte	0
 6182              	.LLST42:
 6183 074f 00000000 		.4byte	.LVL252
 6184 0753 11000000 		.4byte	.LVL254-1
 6185 0757 0100     		.2byte	0x1
 6186 0759 51       		.byte	0x51
 6187 075a 11000000 		.4byte	.LVL254-1
 6188 075e 28000000 		.4byte	.LVL256
 6189 0762 0100     		.2byte	0x1
 6190 0764 54       		.byte	0x54
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cc92bABD.s 			page 129


 6191 0765 28000000 		.4byte	.LVL256
 6192 0769 2C000000 		.4byte	.LVL257
 6193 076d 0300     		.2byte	0x3
 6194 076f 74       		.byte	0x74
 6195 0770 0A       		.sleb128 10
 6196 0771 9F       		.byte	0x9f
 6197 0772 2C000000 		.4byte	.LVL257
 6198 0776 31000000 		.4byte	.LVL258-1
 6199 077a 0300     		.2byte	0x3
 6200 077c 72       		.byte	0x72
 6201 077d 76       		.sleb128 -10
 6202 077e 9F       		.byte	0x9f
 6203 077f 31000000 		.4byte	.LVL258-1
 6204 0783 3C000000 		.4byte	.LFE71
 6205 0787 0400     		.2byte	0x4
 6206 0789 F3       		.byte	0xf3
 6207 078a 01       		.uleb128 0x1
 6208 078b 51       		.byte	0x51
 6209 078c 9F       		.byte	0x9f
 6210 078d 00000000 		.4byte	0
 6211 0791 00000000 		.4byte	0
 6212              	.LLST43:
 6213 0795 26000000 		.4byte	.LVL266
 6214 0799 5A000000 		.4byte	.LVL275
 6215 079d 0100     		.2byte	0x1
 6216 079f 54       		.byte	0x54
 6217 07a0 60000000 		.4byte	.LVL276
 6218 07a4 70000000 		.4byte	.LFE73
 6219 07a8 0100     		.2byte	0x1
 6220 07aa 54       		.byte	0x54
 6221 07ab 00000000 		.4byte	0
 6222 07af 00000000 		.4byte	0
 6223              	.LLST44:
 6224 07b3 02000000 		.4byte	.LVL259
 6225 07b7 2C000000 		.4byte	.LVL267
 6226 07bb 0200     		.2byte	0x2
 6227 07bd 30       		.byte	0x30
 6228 07be 9F       		.byte	0x9f
 6229 07bf 2C000000 		.4byte	.LVL267
 6230 07c3 4E000000 		.4byte	.LVL273
 6231 07c7 0100     		.2byte	0x1
 6232 07c9 55       		.byte	0x55
 6233 07ca 4E000000 		.4byte	.LVL273
 6234 07ce 60000000 		.4byte	.LVL276
 6235 07d2 0100     		.2byte	0x1
 6236 07d4 54       		.byte	0x54
 6237 07d5 60000000 		.4byte	.LVL276
 6238 07d9 70000000 		.4byte	.LFE73
 6239 07dd 0100     		.2byte	0x1
 6240 07df 55       		.byte	0x55
 6241 07e0 00000000 		.4byte	0
 6242 07e4 00000000 		.4byte	0
 6243              	.LLST45:
 6244 07e8 02000000 		.4byte	.LVL259
 6245 07ec 2C000000 		.4byte	.LVL267
 6246 07f0 0200     		.2byte	0x2
 6247 07f2 32       		.byte	0x32
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cc92bABD.s 			page 130


 6248 07f3 9F       		.byte	0x9f
 6249 07f4 2C000000 		.4byte	.LVL267
 6250 07f8 6A000000 		.4byte	.LVL277
 6251 07fc 0100     		.2byte	0x1
 6252 07fe 56       		.byte	0x56
 6253 07ff 00000000 		.4byte	0
 6254 0803 00000000 		.4byte	0
 6255              	.LLST46:
 6256 0807 26000000 		.4byte	.LVL266
 6257 080b 2C000000 		.4byte	.LVL267
 6258 080f 0100     		.2byte	0x1
 6259 0811 54       		.byte	0x54
 6260 0812 00000000 		.4byte	0
 6261 0816 00000000 		.4byte	0
 6262              	.LLST47:
 6263 081a 1E000000 		.4byte	.LVL294
 6264 081e 7A000000 		.4byte	.LVL304
 6265 0822 0100     		.2byte	0x1
 6266 0824 56       		.byte	0x56
 6267 0825 00000000 		.4byte	0
 6268 0829 00000000 		.4byte	0
 6269              	.LLST48:
 6270 082d 24000000 		.4byte	.LVL295
 6271 0831 7A000000 		.4byte	.LVL304
 6272 0835 0100     		.2byte	0x1
 6273 0837 55       		.byte	0x55
 6274 0838 00000000 		.4byte	0
 6275 083c 00000000 		.4byte	0
 6276              	.LLST49:
 6277 0840 48000000 		.4byte	.LVL298
 6278 0844 7A000000 		.4byte	.LVL304
 6279 0848 0100     		.2byte	0x1
 6280 084a 54       		.byte	0x54
 6281 084b 00000000 		.4byte	0
 6282 084f 00000000 		.4byte	0
 6283              	.LLST50:
 6284 0853 00000000 		.4byte	.LVL305
 6285 0857 0A000000 		.4byte	.LVL306
 6286 085b 0100     		.2byte	0x1
 6287 085d 50       		.byte	0x50
 6288 085e 0A000000 		.4byte	.LVL306
 6289 0862 5C000000 		.4byte	.LFE77
 6290 0866 0100     		.2byte	0x1
 6291 0868 55       		.byte	0x55
 6292 0869 00000000 		.4byte	0
 6293 086d 00000000 		.4byte	0
 6294              	.LLST51:
 6295 0871 1A000000 		.4byte	.LVL309
 6296 0875 38000000 		.4byte	.LVL314
 6297 0879 0100     		.2byte	0x1
 6298 087b 56       		.byte	0x56
 6299 087c 3A000000 		.4byte	.LVL315
 6300 0880 5C000000 		.4byte	.LFE77
 6301 0884 0100     		.2byte	0x1
 6302 0886 56       		.byte	0x56
 6303 0887 00000000 		.4byte	0
 6304 088b 00000000 		.4byte	0
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cc92bABD.s 			page 131


 6305              	.LLST52:
 6306 088f 1A000000 		.4byte	.LVL309
 6307 0893 1C000000 		.4byte	.LVL310
 6308 0897 0200     		.2byte	0x2
 6309 0899 30       		.byte	0x30
 6310 089a 9F       		.byte	0x9f
 6311 089b 1C000000 		.4byte	.LVL310
 6312 089f 5C000000 		.4byte	.LFE77
 6313 08a3 0100     		.2byte	0x1
 6314 08a5 54       		.byte	0x54
 6315 08a6 00000000 		.4byte	0
 6316 08aa 00000000 		.4byte	0
 6317              		.section	.debug_aranges,"",%progbits
 6318 0000 84000000 		.4byte	0x84
 6319 0004 0200     		.2byte	0x2
 6320 0006 00000000 		.4byte	.Ldebug_info0
 6321 000a 04       		.byte	0x4
 6322 000b 00       		.byte	0
 6323 000c 0000     		.2byte	0
 6324 000e 0000     		.2byte	0
 6325 0010 00000000 		.4byte	.LFB64
 6326 0014 48000000 		.4byte	.LFE64-.LFB64
 6327 0018 00000000 		.4byte	.LFB66
 6328 001c D0000000 		.4byte	.LFE66-.LFB66
 6329 0020 00000000 		.4byte	.LFB65
 6330 0024 10000000 		.4byte	.LFE65-.LFB65
 6331 0028 00000000 		.4byte	.LFB68
 6332 002c 3C000000 		.4byte	.LFE68-.LFB68
 6333 0030 00000000 		.4byte	.LFB69
 6334 0034 4C010000 		.4byte	.LFE69-.LFB69
 6335 0038 00000000 		.4byte	.LFB70
 6336 003c 84000000 		.4byte	.LFE70-.LFB70
 6337 0040 00000000 		.4byte	.LFB67
 6338 0044 CC020000 		.4byte	.LFE67-.LFB67
 6339 0048 00000000 		.4byte	.LFB72
 6340 004c C4010000 		.4byte	.LFE72-.LFB72
 6341 0050 00000000 		.4byte	.LFB71
 6342 0054 3C000000 		.4byte	.LFE71-.LFB71
 6343 0058 00000000 		.4byte	.LFB73
 6344 005c 70000000 		.4byte	.LFE73-.LFB73
 6345 0060 00000000 		.4byte	.LFB74
 6346 0064 64000000 		.4byte	.LFE74-.LFB74
 6347 0068 00000000 		.4byte	.LFB75
 6348 006c 02000000 		.4byte	.LFE75-.LFB75
 6349 0070 00000000 		.4byte	.LFB76
 6350 0074 80000000 		.4byte	.LFE76-.LFB76
 6351 0078 00000000 		.4byte	.LFB77
 6352 007c 5C000000 		.4byte	.LFE77-.LFB77
 6353 0080 00000000 		.4byte	0
 6354 0084 00000000 		.4byte	0
 6355              		.section	.debug_ranges,"",%progbits
 6356              	.Ldebug_ranges0:
 6357 0000 00000000 		.4byte	.LFB64
 6358 0004 48000000 		.4byte	.LFE64
 6359 0008 00000000 		.4byte	.LFB66
 6360 000c D0000000 		.4byte	.LFE66
 6361 0010 00000000 		.4byte	.LFB65
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cc92bABD.s 			page 132


 6362 0014 10000000 		.4byte	.LFE65
 6363 0018 00000000 		.4byte	.LFB68
 6364 001c 3C000000 		.4byte	.LFE68
 6365 0020 00000000 		.4byte	.LFB69
 6366 0024 4C010000 		.4byte	.LFE69
 6367 0028 00000000 		.4byte	.LFB70
 6368 002c 84000000 		.4byte	.LFE70
 6369 0030 00000000 		.4byte	.LFB67
 6370 0034 CC020000 		.4byte	.LFE67
 6371 0038 00000000 		.4byte	.LFB72
 6372 003c C4010000 		.4byte	.LFE72
 6373 0040 00000000 		.4byte	.LFB71
 6374 0044 3C000000 		.4byte	.LFE71
 6375 0048 00000000 		.4byte	.LFB73
 6376 004c 70000000 		.4byte	.LFE73
 6377 0050 00000000 		.4byte	.LFB74
 6378 0054 64000000 		.4byte	.LFE74
 6379 0058 00000000 		.4byte	.LFB75
 6380 005c 02000000 		.4byte	.LFE75
 6381 0060 00000000 		.4byte	.LFB76
 6382 0064 80000000 		.4byte	.LFE76
 6383 0068 00000000 		.4byte	.LFB77
 6384 006c 5C000000 		.4byte	.LFE77
 6385 0070 00000000 		.4byte	0
 6386 0074 00000000 		.4byte	0
 6387              		.section	.debug_line,"",%progbits
 6388              	.Ldebug_line0:
 6389 0000 C0050000 		.section	.debug_str,"MS",%progbits,1
 6389      0200DF02 
 6389      00000201 
 6389      FB0E0D00 
 6389      01010101 
 6390              	.LASF94:
 6391 0000 61726D4F 		.ascii	"armOpen\000"
 6391      70656E00 
 6392              	.LASF37:
 6393 0008 756C7472 		.ascii	"ultrasonic_sensor\000"
 6393      61736F6E 
 6393      69635F73 
 6393      656E736F 
 6393      7200
 6394              	.LASF28:
 6395 001a 6368616E 		.ascii	"changeOrientation\000"
 6395      67654F72 
 6395      69656E74 
 6395      6174696F 
 6395      6E00
 6396              	.LASF42:
 6397 002c 61637469 		.ascii	"activate_safety\000"
 6397      76617465 
 6397      5F736166 
 6397      65747900 
 6398              	.LASF93:
 6399 003c 4D6F746F 		.ascii	"Motor_Right_Driver_WriteCompare\000"
 6399      725F5269 
 6399      6768745F 
 6399      44726976 
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cc92bABD.s 			page 133


 6399      65725F57 
 6400              	.LASF51:
 6401 005c 746F6C65 		.ascii	"tolerance\000"
 6401      72616E63 
 6401      6500
 6402              	.LASF63:
 6403 0066 64697374 		.ascii	"distance_previous\000"
 6403      616E6365 
 6403      5F707265 
 6403      76696F75 
 6403      7300
 6404              	.LASF24:
 6405 0078 73706565 		.ascii	"speed_left\000"
 6405      645F6C65 
 6405      667400
 6406              	.LASF87:
 6407 0083 636F6C6F 		.ascii	"colourSensingOutput\000"
 6407      75725365 
 6407      6E73696E 
 6407      674F7574 
 6407      70757400 
 6408              	.LASF96:
 6409 0097 4D6F746F 		.ascii	"Motor_Right_Decoder_GetCounter\000"
 6409      725F5269 
 6409      6768745F 
 6409      4465636F 
 6409      6465725F 
 6410              	.LASF31:
 6411 00b6 64656772 		.ascii	"degree_change\000"
 6411      65655F63 
 6411      68616E67 
 6411      6500
 6412              	.LASF112:
 6413 00c4 6E617669 		.ascii	"navigation.c\000"
 6413      67617469 
 6413      6F6E2E63 
 6413      00
 6414              	.LASF30:
 6415 00d1 6F726965 		.ascii	"orientation_change\000"
 6415      6E746174 
 6415      696F6E5F 
 6415      6368616E 
 6415      676500
 6416              	.LASF49:
 6417 00e4 73656E73 		.ascii	"sensor_right\000"
 6417      6F725F72 
 6417      69676874 
 6417      00
 6418              	.LASF50:
 6419 00f1 64696666 		.ascii	"difference\000"
 6419      6572656E 
 6419      636500
 6420              	.LASF72:
 6421 00fc 61626F76 		.ascii	"above_minimum_count\000"
 6421      655F6D69 
 6421      6E696D75 
 6421      6D5F636F 
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cc92bABD.s 			page 134


 6421      756E7400 
 6422              	.LASF35:
 6423 0110 64697265 		.ascii	"direction\000"
 6423      6374696F 
 6423      6E00
 6424              	.LASF14:
 6425 011a 6C6F6E67 		.ascii	"long double\000"
 6425      20646F75 
 6425      626C6500 
 6426              	.LASF26:
 6427 0126 63686563 		.ascii	"checkHoldingPuck\000"
 6427      6B486F6C 
 6427      64696E67 
 6427      5075636B 
 6427      00
 6428              	.LASF40:
 6429 0137 63686563 		.ascii	"check_distance\000"
 6429      6B5F6469 
 6429      7374616E 
 6429      636500
 6430              	.LASF47:
 6431 0146 66726F6E 		.ascii	"front_back\000"
 6431      745F6261 
 6431      636B00
 6432              	.LASF80:
 6433 0151 73656E73 		.ascii	"sensor_distances\000"
 6433      6F725F64 
 6433      69737461 
 6433      6E636573 
 6433      00
 6434              	.LASF81:
 6435 0162 756C7472 		.ascii	"ultrasonic_flag\000"
 6435      61736F6E 
 6435      69635F66 
 6435      6C616700 
 6436              	.LASF44:
 6437 0172 656D6572 		.ascii	"emergency_exit\000"
 6437      67656E63 
 6437      795F6578 
 6437      697400
 6438              	.LASF2:
 6439 0181 73686F72 		.ascii	"short int\000"
 6439      7420696E 
 6439      7400
 6440              	.LASF101:
 6441 018b 4D6F746F 		.ascii	"Motor_Left_Decoder_SetCounter\000"
 6441      725F4C65 
 6441      66745F44 
 6441      65636F64 
 6441      65725F53 
 6442              	.LASF70:
 6443 01a9 73656E73 		.ascii	"sensor\000"
 6443      6F7200
 6444              	.LASF110:
 6445 01b0 54696D65 		.ascii	"Timer_straight_adjust_Stop\000"
 6445      725F7374 
 6445      72616967 
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cc92bABD.s 			page 135


 6445      68745F61 
 6445      646A7573 
 6446              	.LASF54:
 6447 01cb 74696D65 		.ascii	"timer\000"
 6447      7200
 6448              	.LASF59:
 6449 01d1 7472616E 		.ascii	"translate_direction\000"
 6449      736C6174 
 6449      655F6469 
 6449      72656374 
 6449      696F6E00 
 6450              	.LASF89:
 6451 01e5 4D6F746F 		.ascii	"Motor_Right_Control_Write\000"
 6451      725F5269 
 6451      6768745F 
 6451      436F6E74 
 6451      726F6C5F 
 6452              	.LASF64:
 6453 01ff 6D696E69 		.ascii	"minimum_distance\000"
 6453      6D756D5F 
 6453      64697374 
 6453      616E6365 
 6453      00
 6454              	.LASF66:
 6455 0210 626C6F63 		.ascii	"blockAndPuckZoneFinding\000"
 6455      6B416E64 
 6455      5075636B 
 6455      5A6F6E65 
 6455      46696E64 
 6456              	.LASF16:
 6457 0228 7075636B 		.ascii	"puck_correct\000"
 6457      5F636F72 
 6457      72656374 
 6457      00
 6458              	.LASF39:
 6459 0235 64697374 		.ascii	"distance_sensor\000"
 6459      616E6365 
 6459      5F73656E 
 6459      736F7200 
 6460              	.LASF11:
 6461 0245 666C6F61 		.ascii	"float\000"
 6461      7400
 6462              	.LASF86:
 6463 024b 6368616E 		.ascii	"changeHeightToPuck\000"
 6463      67654865 
 6463      69676874 
 6463      546F5075 
 6463      636B00
 6464              	.LASF48:
 6465 025e 73656E73 		.ascii	"sensor_left\000"
 6465      6F725F6C 
 6465      65667400 
 6466              	.LASF6:
 6467 026a 6C6F6E67 		.ascii	"long long int\000"
 6467      206C6F6E 
 6467      6720696E 
 6467      7400
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cc92bABD.s 			page 136


 6468              	.LASF76:
 6469 0278 7075636B 		.ascii	"puck_rack_west_offsets\000"
 6469      5F726163 
 6469      6B5F7765 
 6469      73745F6F 
 6469      66667365 
 6470              	.LASF104:
 6471 028f 4D6F746F 		.ascii	"Motor_Right_Driver_Sleep\000"
 6471      725F5269 
 6471      6768745F 
 6471      44726976 
 6471      65725F53 
 6472              	.LASF4:
 6473 02a8 6C6F6E67 		.ascii	"long int\000"
 6473      20696E74 
 6473      00
 6474              	.LASF74:
 6475 02b1 696E7465 		.ascii	"internal_orientation\000"
 6475      726E616C 
 6475      5F6F7269 
 6475      656E7461 
 6475      74696F6E 
 6476              	.LASF23:
 6477 02c6 636F756E 		.ascii	"count_left\000"
 6477      745F6C65 
 6477      667400
 6478              	.LASF10:
 6479 02d1 696E7433 		.ascii	"int32_t\000"
 6479      325F7400 
 6480              	.LASF85:
 6481 02d9 73616665 		.ascii	"safety_override\000"
 6481      74795F6F 
 6481      76657272 
 6481      69646500 
 6482              	.LASF102:
 6483 02e9 4D6F746F 		.ascii	"Motor_Right_Decoder_SetCounter\000"
 6483      725F5269 
 6483      6768745F 
 6483      4465636F 
 6483      6465725F 
 6484              	.LASF34:
 6485 0308 64697374 		.ascii	"distance_set\000"
 6485      616E6365 
 6485      5F736574 
 6485      00
 6486              	.LASF52:
 6487 0315 6D61785F 		.ascii	"max_difference\000"
 6487      64696666 
 6487      6572656E 
 6487      636500
 6488              	.LASF95:
 6489 0324 636F6E74 		.ascii	"control_photodiode_Write\000"
 6489      726F6C5F 
 6489      70686F74 
 6489      6F64696F 
 6489      64655F57 
 6490              	.LASF68:
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cc92bABD.s 			page 137


 6491 033d 7075636B 		.ascii	"puck_threshold\000"
 6491      5F746872 
 6491      6573686F 
 6491      6C6400
 6492              	.LASF92:
 6493 034c 4D6F746F 		.ascii	"Motor_Right_Driver_Wakeup\000"
 6493      725F5269 
 6493      6768745F 
 6493      44726976 
 6493      65725F57 
 6494              	.LASF65:
 6495 0366 746F6C65 		.ascii	"toleranceCheck\000"
 6495      72616E63 
 6495      65436865 
 6495      636B00
 6496              	.LASF103:
 6497 0375 4D6F746F 		.ascii	"Motor_Left_Driver_Sleep\000"
 6497      725F4C65 
 6497      66745F44 
 6497      72697665 
 6497      725F536C 
 6498              	.LASF75:
 6499 038d 7075636B 		.ascii	"puck_rack_scans\000"
 6499      5F726163 
 6499      6B5F7363 
 6499      616E7300 
 6500              	.LASF19:
 6501 039d 6D6F7665 		.ascii	"moveUntilPuck\000"
 6501      556E7469 
 6501      6C507563 
 6501      6B00
 6502              	.LASF1:
 6503 03ab 756E7369 		.ascii	"unsigned char\000"
 6503      676E6564 
 6503      20636861 
 6503      7200
 6504              	.LASF108:
 6505 03b9 7472616E 		.ascii	"translateMoveDynamic\000"
 6505      736C6174 
 6505      654D6F76 
 6505      6544796E 
 6505      616D6963 
 6506              	.LASF99:
 6507 03ce 73707269 		.ascii	"sprintf\000"
 6507      6E746600 
 6508              	.LASF82:
 6509 03d6 7075636B 		.ascii	"puck_construction_plan\000"
 6509      5F636F6E 
 6509      73747275 
 6509      6374696F 
 6509      6E5F706C 
 6510              	.LASF18:
 6511 03ed 61726D4D 		.ascii	"armMoving\000"
 6511      6F76696E 
 6511      6700
 6512              	.LASF0:
 6513 03f7 7369676E 		.ascii	"signed char\000"
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cc92bABD.s 			page 138


 6513      65642063 
 6513      68617200 
 6514              	.LASF77:
 6515 0403 626C6F63 		.ascii	"block_edge_location\000"
 6515      6B5F6564 
 6515      67655F6C 
 6515      6F636174 
 6515      696F6E00 
 6516              	.LASF7:
 6517 0417 6C6F6E67 		.ascii	"long long unsigned int\000"
 6517      206C6F6E 
 6517      6720756E 
 6517      7369676E 
 6517      65642069 
 6518              	.LASF8:
 6519 042e 756E7369 		.ascii	"unsigned int\000"
 6519      676E6564 
 6519      20696E74 
 6519      00
 6520              	.LASF27:
 6521 043b 636F6C6F 		.ascii	"colour_check\000"
 6521      75725F63 
 6521      6865636B 
 6521      00
 6522              	.LASF21:
 6523 0448 73706565 		.ascii	"speed\000"
 6523      6400
 6524              	.LASF36:
 6525 044e 6C657373 		.ascii	"less_or_great\000"
 6525      5F6F725F 
 6525      67726561 
 6525      7400
 6526              	.LASF109:
 6527 045c 54696D65 		.ascii	"Timer_straight_adjust_Start\000"
 6527      725F7374 
 6527      72616967 
 6527      68745F61 
 6527      646A7573 
 6528              	.LASF38:
 6529 0478 6F6C645F 		.ascii	"old_count\000"
 6529      636F756E 
 6529      7400
 6530              	.LASF83:
 6531 0482 63757272 		.ascii	"current_stage\000"
 6531      656E745F 
 6531      73746167 
 6531      6500
 6532              	.LASF3:
 6533 0490 73686F72 		.ascii	"short unsigned int\000"
 6533      7420756E 
 6533      7369676E 
 6533      65642069 
 6533      6E7400
 6534              	.LASF45:
 6535 04a3 6661696C 		.ascii	"failsafe_alternator\000"
 6535      73616665 
 6535      5F616C74 
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cc92bABD.s 			page 139


 6535      65726E61 
 6535      746F7200 
 6536              	.LASF33:
 6537 04b7 7472616E 		.ascii	"translateUntil\000"
 6537      736C6174 
 6537      65556E74 
 6537      696C00
 6538              	.LASF107:
 6539 04c6 64697374 		.ascii	"distanceSensor\000"
 6539      616E6365 
 6539      53656E73 
 6539      6F7200
 6540              	.LASF13:
 6541 04d5 63686172 		.ascii	"char\000"
 6541      00
 6542              	.LASF46:
 6543 04da 73747261 		.ascii	"straightAdjust\000"
 6543      69676874 
 6543      41646A75 
 6543      737400
 6544              	.LASF55:
 6545 04e9 6661696C 		.ascii	"failsafeSideSensors\000"
 6545      73616665 
 6545      53696465 
 6545      53656E73 
 6545      6F727300 
 6546              	.LASF53:
 6547 04fd 756C7472 		.ascii	"ultra_delay\000"
 6547      615F6465 
 6547      6C617900 
 6548              	.LASF84:
 6549 0509 636F6C6F 		.ascii	"colour_sensing_algorithm\000"
 6549      75725F73 
 6549      656E7369 
 6549      6E675F61 
 6549      6C676F72 
 6550              	.LASF62:
 6551 0522 64697374 		.ascii	"distance_check\000"
 6551      616E6365 
 6551      5F636865 
 6551      636B00
 6552              	.LASF20:
 6553 0531 7075636B 		.ascii	"puck_detect\000"
 6553      5F646574 
 6553      65637400 
 6554              	.LASF56:
 6555 053d 73696465 		.ascii	"side_sensing\000"
 6555      5F73656E 
 6555      73696E67 
 6555      00
 6556              	.LASF60:
 6557 054a 6661696C 		.ascii	"failsafe\000"
 6557      73616665 
 6557      00
 6558              	.LASF105:
 6559 0553 6D6F7665 		.ascii	"moveDynamic\000"
 6559      44796E61 
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cc92bABD.s 			page 140


 6559      6D696300 
 6560              	.LASF5:
 6561 055f 6C6F6E67 		.ascii	"long unsigned int\000"
 6561      20756E73 
 6561      69676E65 
 6561      6420696E 
 6561      7400
 6562              	.LASF114:
 6563 0571 6C6F6361 		.ascii	"locatePucks\000"
 6563      74655075 
 6563      636B7300 
 6564              	.LASF12:
 6565 057d 646F7562 		.ascii	"double\000"
 6565      6C6500
 6566              	.LASF100:
 6567 0584 55415254 		.ascii	"UART_1_PutString\000"
 6567      5F315F50 
 6567      75745374 
 6567      72696E67 
 6567      00
 6568              	.LASF71:
 6569 0595 6D696E69 		.ascii	"minimum\000"
 6569      6D756D00 
 6570              	.LASF67:
 6571 059d 626C6F63 		.ascii	"block_threshold\000"
 6571      6B5F7468 
 6571      72657368 
 6571      6F6C6400 
 6572              	.LASF88:
 6573 05ad 4D6F746F 		.ascii	"Motor_Left_Control_Write\000"
 6573      725F4C65 
 6573      66745F43 
 6573      6F6E7472 
 6573      6F6C5F57 
 6574              	.LASF43:
 6575 05c6 66726F6E 		.ascii	"front_sensor_flag\000"
 6575      745F7365 
 6575      6E736F72 
 6575      5F666C61 
 6575      6700
 6576              	.LASF29:
 6577 05d8 616C676F 		.ascii	"algorithm\000"
 6577      72697468 
 6577      6D00
 6578              	.LASF32:
 6579 05e2 6368616E 		.ascii	"change\000"
 6579      676500
 6580              	.LASF57:
 6581 05e9 696E6974 		.ascii	"initial_value\000"
 6581      69616C5F 
 6581      76616C75 
 6581      6500
 6582              	.LASF17:
 6583 05f7 7075636B 		.ascii	"puck_scan\000"
 6583      5F736361 
 6583      6E00
 6584              	.LASF9:
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cc92bABD.s 			page 141


 6585 0601 5F5F696E 		.ascii	"__int32_t\000"
 6585      7433325F 
 6585      7400
 6586              	.LASF113:
 6587 060b 433A5C55 		.ascii	"C:\\Users\\Misha\\Documents\\PSoC Creator\\ECE3091_"
 6587      73657273 
 6587      5C4D6973 
 6587      68615C44 
 6587      6F63756D 
 6588 0639 47726F75 		.ascii	"Group17\\Group17RobotReal\\Group17Robot.cydsn\000"
 6588      7031375C 
 6588      47726F75 
 6588      70313752 
 6588      6F626F74 
 6589              	.LASF58:
 6590 0665 64726966 		.ascii	"drift_tolerance\000"
 6590      745F746F 
 6590      6C657261 
 6590      6E636500 
 6591              	.LASF41:
 6592 0675 6D6F7665 		.ascii	"moveUntil\000"
 6592      556E7469 
 6592      6C00
 6593              	.LASF15:
 6594 067f 73697A65 		.ascii	"sizetype\000"
 6594      74797065 
 6594      00
 6595              	.LASF79:
 6596 0688 6F757470 		.ascii	"output\000"
 6596      757400
 6597              	.LASF97:
 6598 068f 4D6F746F 		.ascii	"Motor_Left_Decoder_GetCounter\000"
 6598      725F4C65 
 6598      66745F44 
 6598      65636F64 
 6598      65725F47 
 6599              	.LASF61:
 6600 06ad 73747261 		.ascii	"straightAdjustBack\000"
 6600      69676874 
 6600      41646A75 
 6600      73744261 
 6600      636B00
 6601              	.LASF73:
 6602 06c0 49544D5F 		.ascii	"ITM_RxBuffer\000"
 6602      52784275 
 6602      66666572 
 6602      00
 6603              	.LASF111:
 6604 06cd 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 6604      43313120 
 6604      352E342E 
 6604      31203230 
 6604      31363036 
 6605 0700 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 6605      20726576 
 6605      6973696F 
 6605      6E203233 
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cc92bABD.s 			page 142


 6605      37373135 
 6606 0733 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 6606      66756E63 
 6606      74696F6E 
 6606      2D736563 
 6606      74696F6E 
 6607              	.LASF98:
 6608 075b 43794465 		.ascii	"CyDelay\000"
 6608      6C617900 
 6609              	.LASF22:
 6610 0763 636F756E 		.ascii	"count_right\000"
 6610      745F7269 
 6610      67687400 
 6611              	.LASF25:
 6612 076f 73706565 		.ascii	"speed_right\000"
 6612      645F7269 
 6612      67687400 
 6613              	.LASF106:
 6614 077b 6D6F7665 		.ascii	"moveSwivel\000"
 6614      53776976 
 6614      656C00
 6615              	.LASF78:
 6616 0786 696E6974 		.ascii	"initialisation\000"
 6616      69616C69 
 6616      73617469 
 6616      6F6E00
 6617              	.LASF91:
 6618 0795 4D6F746F 		.ascii	"Motor_Left_Driver_WriteCompare\000"
 6618      725F4C65 
 6618      66745F44 
 6618      72697665 
 6618      725F5772 
 6619              	.LASF90:
 6620 07b4 4D6F746F 		.ascii	"Motor_Left_Driver_Wakeup\000"
 6620      725F4C65 
 6620      66745F44 
 6620      72697665 
 6620      725F5761 
 6621              	.LASF69:
 6622 07cd 73747261 		.ascii	"straightAdjustSensor\000"
 6622      69676874 
 6622      41646A75 
 6622      73745365 
 6622      6E736F72 
 6623              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
