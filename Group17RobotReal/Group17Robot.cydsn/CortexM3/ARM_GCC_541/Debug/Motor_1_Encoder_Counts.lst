ARM GAS  C:\Users\Blayke\AppData\Local\Temp\ccwq0WqJ.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"Motor_1_Encoder_Counts.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.Motor_1_Encoder_Counts_Enable,"ax",%progbits
  20              		.align	2
  21              		.global	Motor_1_Encoder_Counts_Enable
  22              		.thumb
  23              		.thumb_func
  24              		.type	Motor_1_Encoder_Counts_Enable, %function
  25              	Motor_1_Encoder_Counts_Enable:
  26              	.LFB1:
  27              		.file 1 "Generated_Source\\PSoC5\\Motor_1_Encoder_Counts.c"
   1:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** /*******************************************************************************
   2:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** * File Name: Motor_1_Encoder_Counts.c  
   3:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** * Version 3.0
   4:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** *
   5:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** *  Description:
   6:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** *     The Counter component consists of a 8, 16, 24 or 32-bit counter with
   7:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** *     a selectable period between 2 and 2^Width - 1.  
   8:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** *
   9:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** *   Note:
  10:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** *     None
  11:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** *
  12:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** ********************************************************************************
  13:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** * Copyright 2008-2012, Cypress Semiconductor Corporation.  All rights reserved.
  14:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** * You may use this file only in accordance with the license, terms, conditions, 
  15:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** * disclaimers, and limitations in the end user license agreement accompanying 
  16:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** * the software package with which this file was provided.
  17:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** *******************************************************************************/
  18:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** 
  19:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** #include "Motor_1_Encoder_Counts.h"
  20:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** 
  21:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** uint8 Motor_1_Encoder_Counts_initVar = 0u;
  22:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** 
  23:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** 
  24:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** /*******************************************************************************
  25:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** * Function Name: Motor_1_Encoder_Counts_Init
  26:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** ********************************************************************************
  27:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** * Summary:
  28:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** *     Initialize to the schematic state
  29:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** * 
  30:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** * Parameters:  
ARM GAS  C:\Users\Blayke\AppData\Local\Temp\ccwq0WqJ.s 			page 2


  31:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** *  void  
  32:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** *
  33:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** * Return: 
  34:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** *  void
  35:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** *
  36:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** *******************************************************************************/
  37:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** void Motor_1_Encoder_Counts_Init(void) 
  38:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** {
  39:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c ****         #if (!Motor_1_Encoder_Counts_UsingFixedFunction && !Motor_1_Encoder_Counts_ControlRegRemove
  40:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c ****             uint8 ctrl;
  41:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c ****         #endif /* (!Motor_1_Encoder_Counts_UsingFixedFunction && !Motor_1_Encoder_Counts_ControlReg
  42:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c ****         
  43:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c ****         #if(!Motor_1_Encoder_Counts_UsingFixedFunction) 
  44:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c ****             /* Interrupt State Backup for Critical Region*/
  45:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c ****             uint8 Motor_1_Encoder_Counts_interruptState;
  46:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c ****         #endif /* (!Motor_1_Encoder_Counts_UsingFixedFunction) */
  47:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c ****         
  48:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c ****         #if (Motor_1_Encoder_Counts_UsingFixedFunction)
  49:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c ****             /* Clear all bits but the enable bit (if it's already set for Timer operation */
  50:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c ****             Motor_1_Encoder_Counts_CONTROL &= Motor_1_Encoder_Counts_CTRL_ENABLE;
  51:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c ****             
  52:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c ****             /* Clear the mode bits for continuous run mode */
  53:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c ****             #if (CY_PSOC5A)
  54:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c ****                 Motor_1_Encoder_Counts_CONTROL2 &= ((uint8)(~Motor_1_Encoder_Counts_CTRL_MODE_MASK)
  55:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c ****             #endif /* (CY_PSOC5A) */
  56:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c ****             #if (CY_PSOC3 || CY_PSOC5LP)
  57:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c ****                 Motor_1_Encoder_Counts_CONTROL3 &= ((uint8)(~Motor_1_Encoder_Counts_CTRL_MODE_MASK)
  58:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c ****             #endif /* (CY_PSOC3 || CY_PSOC5LP) */
  59:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c ****             /* Check if One Shot mode is enabled i.e. RunMode !=0*/
  60:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c ****             #if (Motor_1_Encoder_Counts_RunModeUsed != 0x0u)
  61:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c ****                 /* Set 3rd bit of Control register to enable one shot mode */
  62:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c ****                 Motor_1_Encoder_Counts_CONTROL |= Motor_1_Encoder_Counts_ONESHOT;
  63:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c ****             #endif /* (Motor_1_Encoder_Counts_RunModeUsed != 0x0u) */
  64:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c ****             
  65:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c ****             /* Set the IRQ to use the status register interrupts */
  66:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c ****             Motor_1_Encoder_Counts_CONTROL2 |= Motor_1_Encoder_Counts_CTRL2_IRQ_SEL;
  67:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c ****             
  68:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c ****             /* Clear and Set SYNCTC and SYNCCMP bits of RT1 register */
  69:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c ****             Motor_1_Encoder_Counts_RT1 &= ((uint8)(~Motor_1_Encoder_Counts_RT1_MASK));
  70:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c ****             Motor_1_Encoder_Counts_RT1 |= Motor_1_Encoder_Counts_SYNC;     
  71:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c ****                     
  72:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c ****             /*Enable DSI Sync all all inputs of the Timer*/
  73:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c ****             Motor_1_Encoder_Counts_RT1 &= ((uint8)(~Motor_1_Encoder_Counts_SYNCDSI_MASK));
  74:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c ****             Motor_1_Encoder_Counts_RT1 |= Motor_1_Encoder_Counts_SYNCDSI_EN;
  75:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** 
  76:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c ****         #else
  77:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c ****             #if(!Motor_1_Encoder_Counts_ControlRegRemoved)
  78:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c ****             /* Set the default compare mode defined in the parameter */
  79:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c ****             ctrl = Motor_1_Encoder_Counts_CONTROL & ((uint8)(~Motor_1_Encoder_Counts_CTRL_CMPMODE_M
  80:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c ****             Motor_1_Encoder_Counts_CONTROL = ctrl | Motor_1_Encoder_Counts_DEFAULT_COMPARE_MODE;
  81:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c ****             
  82:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c ****             /* Set the default capture mode defined in the parameter */
  83:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c ****             ctrl = Motor_1_Encoder_Counts_CONTROL & ((uint8)(~Motor_1_Encoder_Counts_CTRL_CAPMODE_M
  84:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c ****             
  85:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c ****             #if( 0 != Motor_1_Encoder_Counts_CAPTURE_MODE_CONF)
  86:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c ****                 Motor_1_Encoder_Counts_CONTROL = ctrl | Motor_1_Encoder_Counts_DEFAULT_CAPTURE_MODE
  87:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c ****             #else
ARM GAS  C:\Users\Blayke\AppData\Local\Temp\ccwq0WqJ.s 			page 3


  88:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c ****                 Motor_1_Encoder_Counts_CONTROL = ctrl;
  89:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c ****             #endif /* 0 != Motor_1_Encoder_Counts_CAPTURE_MODE */ 
  90:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c ****             
  91:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c ****             #endif /* (!Motor_1_Encoder_Counts_ControlRegRemoved) */
  92:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c ****         #endif /* (Motor_1_Encoder_Counts_UsingFixedFunction) */
  93:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c ****         
  94:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c ****         /* Clear all data in the FIFO's */
  95:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c ****         #if (!Motor_1_Encoder_Counts_UsingFixedFunction)
  96:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c ****             Motor_1_Encoder_Counts_ClearFIFO();
  97:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c ****         #endif /* (!Motor_1_Encoder_Counts_UsingFixedFunction) */
  98:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c ****         
  99:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c ****         /* Set Initial values from Configuration */
 100:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c ****         Motor_1_Encoder_Counts_WritePeriod(Motor_1_Encoder_Counts_INIT_PERIOD_VALUE);
 101:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c ****         #if (!(Motor_1_Encoder_Counts_UsingFixedFunction && (CY_PSOC5A)))
 102:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c ****             Motor_1_Encoder_Counts_WriteCounter(Motor_1_Encoder_Counts_INIT_COUNTER_VALUE);
 103:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c ****         #endif /* (!(Motor_1_Encoder_Counts_UsingFixedFunction && (CY_PSOC5A))) */
 104:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c ****         Motor_1_Encoder_Counts_SetInterruptMode(Motor_1_Encoder_Counts_INIT_INTERRUPTS_MASK);
 105:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c ****         
 106:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c ****         #if (!Motor_1_Encoder_Counts_UsingFixedFunction)
 107:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c ****             /* Read the status register to clear the unwanted interrupts */
 108:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c ****             (void)Motor_1_Encoder_Counts_ReadStatusRegister();
 109:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c ****             /* Set the compare value (only available to non-fixed function implementation */
 110:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c ****             Motor_1_Encoder_Counts_WriteCompare(Motor_1_Encoder_Counts_INIT_COMPARE_VALUE);
 111:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c ****             /* Use the interrupt output of the status register for IRQ output */
 112:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c ****             
 113:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c ****             /* CyEnterCriticalRegion and CyExitCriticalRegion are used to mark following region cri
 114:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c ****             /* Enter Critical Region*/
 115:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c ****             Motor_1_Encoder_Counts_interruptState = CyEnterCriticalSection();
 116:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c ****             
 117:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c ****             Motor_1_Encoder_Counts_STATUS_AUX_CTRL |= Motor_1_Encoder_Counts_STATUS_ACTL_INT_EN_MAS
 118:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c ****             
 119:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c ****             /* Exit Critical Region*/
 120:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c ****             CyExitCriticalSection(Motor_1_Encoder_Counts_interruptState);
 121:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c ****             
 122:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c ****         #endif /* (!Motor_1_Encoder_Counts_UsingFixedFunction) */
 123:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** }
 124:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** 
 125:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** 
 126:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** /*******************************************************************************
 127:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** * Function Name: Motor_1_Encoder_Counts_Enable
 128:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** ********************************************************************************
 129:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** * Summary:
 130:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** *     Enable the Counter
 131:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** * 
 132:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** * Parameters:  
 133:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** *  void  
 134:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** *
 135:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** * Return: 
 136:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** *  void
 137:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** *
 138:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** * Side Effects: 
 139:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** *   If the Enable mode is set to Hardware only then this function has no effect 
 140:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** *   on the operation of the counter.
 141:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** *
 142:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** *******************************************************************************/
 143:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** void Motor_1_Encoder_Counts_Enable(void) 
 144:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** {
ARM GAS  C:\Users\Blayke\AppData\Local\Temp\ccwq0WqJ.s 			page 4


  28              		.loc 1 144 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
 145:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c ****     /* Globally Enable the Fixed Function Block chosen */
 146:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c ****     #if (Motor_1_Encoder_Counts_UsingFixedFunction)
 147:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c ****         Motor_1_Encoder_Counts_GLOBAL_ENABLE |= Motor_1_Encoder_Counts_BLOCK_EN_MASK;
 148:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c ****         Motor_1_Encoder_Counts_GLOBAL_STBY_ENABLE |= Motor_1_Encoder_Counts_BLOCK_STBY_EN_MASK;
 149:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c ****     #endif /* (Motor_1_Encoder_Counts_UsingFixedFunction) */  
 150:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c ****         
 151:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c ****     /* Enable the counter from the control register  */
 152:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c ****     /* If Fixed Function then make sure Mode is set correctly */
 153:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c ****     /* else make sure reset is clear */
 154:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c ****     #if(!Motor_1_Encoder_Counts_ControlRegRemoved || Motor_1_Encoder_Counts_UsingFixedFunction)
 155:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c ****         Motor_1_Encoder_Counts_CONTROL |= Motor_1_Encoder_Counts_CTRL_ENABLE;                
  33              		.loc 1 155 0
  34 0000 024A     		ldr	r2, .L2
  35 0002 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  36 0004 43F08003 		orr	r3, r3, #128
  37 0008 1370     		strb	r3, [r2]
  38 000a 7047     		bx	lr
  39              	.L3:
  40              		.align	2
  41              	.L2:
  42 000c 77650040 		.word	1073767799
  43              		.cfi_endproc
  44              	.LFE1:
  45              		.size	Motor_1_Encoder_Counts_Enable, .-Motor_1_Encoder_Counts_Enable
  46              		.section	.text.Motor_1_Encoder_Counts_Stop,"ax",%progbits
  47              		.align	2
  48              		.global	Motor_1_Encoder_Counts_Stop
  49              		.thumb
  50              		.thumb_func
  51              		.type	Motor_1_Encoder_Counts_Stop, %function
  52              	Motor_1_Encoder_Counts_Stop:
  53              	.LFB3:
 156:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c ****     #endif /* (!Motor_1_Encoder_Counts_ControlRegRemoved || Motor_1_Encoder_Counts_UsingFixedFuncti
 157:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c ****     
 158:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** }
 159:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** 
 160:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** 
 161:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** /*******************************************************************************
 162:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** * Function Name: Motor_1_Encoder_Counts_Start
 163:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** ********************************************************************************
 164:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** * Summary:
 165:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** *  Enables the counter for operation 
 166:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** *
 167:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** * Parameters:  
 168:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** *  void  
 169:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** *
 170:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** * Return: 
 171:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** *  void
 172:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** *
 173:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** * Global variables:
 174:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** *  Motor_1_Encoder_Counts_initVar: Is modified when this function is called for the  
 175:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** *   first time. Is used to ensure that initialization happens only once.
ARM GAS  C:\Users\Blayke\AppData\Local\Temp\ccwq0WqJ.s 			page 5


 176:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** *
 177:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** *******************************************************************************/
 178:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** void Motor_1_Encoder_Counts_Start(void) 
 179:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** {
 180:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c ****     if(Motor_1_Encoder_Counts_initVar == 0u)
 181:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c ****     {
 182:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c ****         Motor_1_Encoder_Counts_Init();
 183:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c ****         
 184:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c ****         Motor_1_Encoder_Counts_initVar = 1u; /* Clear this bit for Initialization */        
 185:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c ****     }
 186:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c ****     
 187:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c ****     /* Enable the Counter */
 188:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c ****     Motor_1_Encoder_Counts_Enable();        
 189:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** }
 190:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** 
 191:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** 
 192:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** /*******************************************************************************
 193:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** * Function Name: Motor_1_Encoder_Counts_Stop
 194:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** ********************************************************************************
 195:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** * Summary:
 196:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** * Halts the counter, but does not change any modes or disable interrupts.
 197:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** *
 198:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** * Parameters:  
 199:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** *  void  
 200:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** *
 201:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** * Return: 
 202:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** *  void
 203:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** *
 204:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** * Side Effects: If the Enable mode is set to Hardware only then this function
 205:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** *               has no effect on the operation of the counter.
 206:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** *
 207:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** *******************************************************************************/
 208:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** void Motor_1_Encoder_Counts_Stop(void) 
 209:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** {
  54              		.loc 1 209 0
  55              		.cfi_startproc
  56              		@ args = 0, pretend = 0, frame = 0
  57              		@ frame_needed = 0, uses_anonymous_args = 0
  58              		@ link register save eliminated.
 210:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c ****     /* Disable Counter */
 211:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c ****     #if(!Motor_1_Encoder_Counts_ControlRegRemoved || Motor_1_Encoder_Counts_UsingFixedFunction)
 212:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c ****         Motor_1_Encoder_Counts_CONTROL &= ((uint8)(~Motor_1_Encoder_Counts_CTRL_ENABLE));        
  59              		.loc 1 212 0
  60 0000 024A     		ldr	r2, .L5
  61 0002 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  62 0004 03F07F03 		and	r3, r3, #127
  63 0008 1370     		strb	r3, [r2]
  64 000a 7047     		bx	lr
  65              	.L6:
  66              		.align	2
  67              	.L5:
  68 000c 77650040 		.word	1073767799
  69              		.cfi_endproc
  70              	.LFE3:
  71              		.size	Motor_1_Encoder_Counts_Stop, .-Motor_1_Encoder_Counts_Stop
  72              		.section	.text.Motor_1_Encoder_Counts_SetInterruptMode,"ax",%progbits
  73              		.align	2
ARM GAS  C:\Users\Blayke\AppData\Local\Temp\ccwq0WqJ.s 			page 6


  74              		.global	Motor_1_Encoder_Counts_SetInterruptMode
  75              		.thumb
  76              		.thumb_func
  77              		.type	Motor_1_Encoder_Counts_SetInterruptMode, %function
  78              	Motor_1_Encoder_Counts_SetInterruptMode:
  79              	.LFB4:
 213:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c ****     #endif /* (!Motor_1_Encoder_Counts_ControlRegRemoved || Motor_1_Encoder_Counts_UsingFixedFuncti
 214:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c ****     
 215:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c ****     /* Globally disable the Fixed Function Block chosen */
 216:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c ****     #if (Motor_1_Encoder_Counts_UsingFixedFunction)
 217:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c ****         Motor_1_Encoder_Counts_GLOBAL_ENABLE &= ((uint8)(~Motor_1_Encoder_Counts_BLOCK_EN_MASK));
 218:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c ****         Motor_1_Encoder_Counts_GLOBAL_STBY_ENABLE &= ((uint8)(~Motor_1_Encoder_Counts_BLOCK_STBY_EN
 219:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c ****     #endif /* (Motor_1_Encoder_Counts_UsingFixedFunction) */
 220:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** }
 221:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** 
 222:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** 
 223:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** /*******************************************************************************
 224:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** * Function Name: Motor_1_Encoder_Counts_SetInterruptMode
 225:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** ********************************************************************************
 226:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** * Summary:
 227:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** * Configures which interrupt sources are enabled to generate the final interrupt
 228:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** *
 229:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** * Parameters:  
 230:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** *  InterruptsMask: This parameter is an or'd collection of the status bits
 231:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** *                   which will be allowed to generate the counters interrupt.   
 232:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** *
 233:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** * Return: 
 234:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** *  void
 235:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** *
 236:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** *******************************************************************************/
 237:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** void Motor_1_Encoder_Counts_SetInterruptMode(uint8 interruptsMask) 
 238:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** {
  80              		.loc 1 238 0
  81              		.cfi_startproc
  82              		@ args = 0, pretend = 0, frame = 0
  83              		@ frame_needed = 0, uses_anonymous_args = 0
  84              		@ link register save eliminated.
  85              	.LVL0:
 239:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c ****     Motor_1_Encoder_Counts_STATUS_MASK = interruptsMask;
  86              		.loc 1 239 0
  87 0000 014B     		ldr	r3, .L8
  88 0002 1870     		strb	r0, [r3]
  89 0004 7047     		bx	lr
  90              	.L9:
  91 0006 00BF     		.align	2
  92              	.L8:
  93 0008 85650040 		.word	1073767813
  94              		.cfi_endproc
  95              	.LFE4:
  96              		.size	Motor_1_Encoder_Counts_SetInterruptMode, .-Motor_1_Encoder_Counts_SetInterruptMode
  97              		.section	.text.Motor_1_Encoder_Counts_ReadStatusRegister,"ax",%progbits
  98              		.align	2
  99              		.global	Motor_1_Encoder_Counts_ReadStatusRegister
 100              		.thumb
 101              		.thumb_func
 102              		.type	Motor_1_Encoder_Counts_ReadStatusRegister, %function
 103              	Motor_1_Encoder_Counts_ReadStatusRegister:
ARM GAS  C:\Users\Blayke\AppData\Local\Temp\ccwq0WqJ.s 			page 7


 104              	.LFB5:
 240:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** }
 241:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** 
 242:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** 
 243:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** /*******************************************************************************
 244:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** * Function Name: Motor_1_Encoder_Counts_ReadStatusRegister
 245:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** ********************************************************************************
 246:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** * Summary:
 247:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** *   Reads the status register and returns it's state. This function should use
 248:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** *       defined types for the bit-field information as the bits in this
 249:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** *       register may be permuteable.
 250:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** *
 251:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** * Parameters:  
 252:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** *  void
 253:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** *
 254:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** * Return: 
 255:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** *  (uint8) The contents of the status register
 256:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** *
 257:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** * Side Effects:
 258:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** *   Status register bits may be clear on read. 
 259:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** *
 260:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** *******************************************************************************/
 261:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** uint8   Motor_1_Encoder_Counts_ReadStatusRegister(void) 
 262:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** {
 105              		.loc 1 262 0
 106              		.cfi_startproc
 107              		@ args = 0, pretend = 0, frame = 0
 108              		@ frame_needed = 0, uses_anonymous_args = 0
 109              		@ link register save eliminated.
 263:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c ****     return Motor_1_Encoder_Counts_STATUS;
 110              		.loc 1 263 0
 111 0000 014B     		ldr	r3, .L11
 112 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 264:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** }
 113              		.loc 1 264 0
 114 0004 7047     		bx	lr
 115              	.L12:
 116 0006 00BF     		.align	2
 117              	.L11:
 118 0008 65650040 		.word	1073767781
 119              		.cfi_endproc
 120              	.LFE5:
 121              		.size	Motor_1_Encoder_Counts_ReadStatusRegister, .-Motor_1_Encoder_Counts_ReadStatusRegister
 122              		.section	.text.Motor_1_Encoder_Counts_ReadControlRegister,"ax",%progbits
 123              		.align	2
 124              		.global	Motor_1_Encoder_Counts_ReadControlRegister
 125              		.thumb
 126              		.thumb_func
 127              		.type	Motor_1_Encoder_Counts_ReadControlRegister, %function
 128              	Motor_1_Encoder_Counts_ReadControlRegister:
 129              	.LFB6:
 265:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** 
 266:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** 
 267:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** #if(!Motor_1_Encoder_Counts_ControlRegRemoved)
 268:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** /*******************************************************************************
 269:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** * Function Name: Motor_1_Encoder_Counts_ReadControlRegister
 270:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** ********************************************************************************
ARM GAS  C:\Users\Blayke\AppData\Local\Temp\ccwq0WqJ.s 			page 8


 271:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** * Summary:
 272:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** *   Reads the control register and returns it's state. This function should use
 273:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** *       defined types for the bit-field information as the bits in this
 274:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** *       register may be permuteable.
 275:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** *
 276:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** * Parameters:  
 277:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** *  void
 278:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** *
 279:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** * Return: 
 280:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** *  (uint8) The contents of the control register
 281:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** *
 282:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** *******************************************************************************/
 283:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** uint8   Motor_1_Encoder_Counts_ReadControlRegister(void) 
 284:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** {
 130              		.loc 1 284 0
 131              		.cfi_startproc
 132              		@ args = 0, pretend = 0, frame = 0
 133              		@ frame_needed = 0, uses_anonymous_args = 0
 134              		@ link register save eliminated.
 285:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c ****     return Motor_1_Encoder_Counts_CONTROL;
 135              		.loc 1 285 0
 136 0000 014B     		ldr	r3, .L14
 137 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 286:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** }
 138              		.loc 1 286 0
 139 0004 7047     		bx	lr
 140              	.L15:
 141 0006 00BF     		.align	2
 142              	.L14:
 143 0008 77650040 		.word	1073767799
 144              		.cfi_endproc
 145              	.LFE6:
 146              		.size	Motor_1_Encoder_Counts_ReadControlRegister, .-Motor_1_Encoder_Counts_ReadControlRegister
 147              		.section	.text.Motor_1_Encoder_Counts_WriteControlRegister,"ax",%progbits
 148              		.align	2
 149              		.global	Motor_1_Encoder_Counts_WriteControlRegister
 150              		.thumb
 151              		.thumb_func
 152              		.type	Motor_1_Encoder_Counts_WriteControlRegister, %function
 153              	Motor_1_Encoder_Counts_WriteControlRegister:
 154              	.LFB7:
 287:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** 
 288:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** 
 289:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** /*******************************************************************************
 290:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** * Function Name: Motor_1_Encoder_Counts_WriteControlRegister
 291:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** ********************************************************************************
 292:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** * Summary:
 293:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** *   Sets the bit-field of the control register.  This function should use
 294:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** *       defined types for the bit-field information as the bits in this
 295:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** *       register may be permuteable.
 296:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** *
 297:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** * Parameters:  
 298:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** *  void
 299:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** *
 300:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** * Return: 
 301:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** *  (uint8) The contents of the control register
 302:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** *
ARM GAS  C:\Users\Blayke\AppData\Local\Temp\ccwq0WqJ.s 			page 9


 303:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** *******************************************************************************/
 304:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** void    Motor_1_Encoder_Counts_WriteControlRegister(uint8 control) 
 305:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** {
 155              		.loc 1 305 0
 156              		.cfi_startproc
 157              		@ args = 0, pretend = 0, frame = 0
 158              		@ frame_needed = 0, uses_anonymous_args = 0
 159              		@ link register save eliminated.
 160              	.LVL1:
 306:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c ****     Motor_1_Encoder_Counts_CONTROL = control;
 161              		.loc 1 306 0
 162 0000 014B     		ldr	r3, .L17
 163 0002 1870     		strb	r0, [r3]
 164 0004 7047     		bx	lr
 165              	.L18:
 166 0006 00BF     		.align	2
 167              	.L17:
 168 0008 77650040 		.word	1073767799
 169              		.cfi_endproc
 170              	.LFE7:
 171              		.size	Motor_1_Encoder_Counts_WriteControlRegister, .-Motor_1_Encoder_Counts_WriteControlRegister
 172              		.section	.text.Motor_1_Encoder_Counts_WriteCounter,"ax",%progbits
 173              		.align	2
 174              		.global	Motor_1_Encoder_Counts_WriteCounter
 175              		.thumb
 176              		.thumb_func
 177              		.type	Motor_1_Encoder_Counts_WriteCounter, %function
 178              	Motor_1_Encoder_Counts_WriteCounter:
 179              	.LFB8:
 307:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** }
 308:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** 
 309:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** #endif  /* (!Motor_1_Encoder_Counts_ControlRegRemoved) */
 310:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** 
 311:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** 
 312:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** #if (!(Motor_1_Encoder_Counts_UsingFixedFunction && (CY_PSOC5A)))
 313:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** /*******************************************************************************
 314:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** * Function Name: Motor_1_Encoder_Counts_WriteCounter
 315:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** ********************************************************************************
 316:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** * Summary:
 317:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** *   This funtion is used to set the counter to a specific value
 318:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** *
 319:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** * Parameters:  
 320:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** *  counter:  New counter value. 
 321:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** *
 322:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** * Return: 
 323:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** *  void 
 324:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** *
 325:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** *******************************************************************************/
 326:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** void Motor_1_Encoder_Counts_WriteCounter(uint16 counter) \
 327:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c ****                                    
 328:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** {
 180              		.loc 1 328 0
 181              		.cfi_startproc
 182              		@ args = 0, pretend = 0, frame = 0
 183              		@ frame_needed = 0, uses_anonymous_args = 0
 184              		@ link register save eliminated.
 185              	.LVL2:
ARM GAS  C:\Users\Blayke\AppData\Local\Temp\ccwq0WqJ.s 			page 10


 329:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c ****     #if(Motor_1_Encoder_Counts_UsingFixedFunction)
 330:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c ****         /* assert if block is already enabled */
 331:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c ****         CYASSERT (0u == (Motor_1_Encoder_Counts_GLOBAL_ENABLE & Motor_1_Encoder_Counts_BLOCK_EN_MAS
 332:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c ****         /* If block is disabled, enable it and then write the counter */
 333:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c ****         Motor_1_Encoder_Counts_GLOBAL_ENABLE |= Motor_1_Encoder_Counts_BLOCK_EN_MASK;
 334:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c ****         CY_SET_REG16(Motor_1_Encoder_Counts_COUNTER_LSB_PTR, (uint16)counter);
 335:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c ****         Motor_1_Encoder_Counts_GLOBAL_ENABLE &= ((uint8)(~Motor_1_Encoder_Counts_BLOCK_EN_MASK));
 336:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c ****     #else
 337:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c ****         CY_SET_REG16(Motor_1_Encoder_Counts_COUNTER_LSB_PTR, counter);
 186              		.loc 1 337 0
 187 0000 014B     		ldr	r3, .L20
 188 0002 1880     		strh	r0, [r3]	@ movhi
 189 0004 7047     		bx	lr
 190              	.L21:
 191 0006 00BF     		.align	2
 192              	.L20:
 193 0008 086A0040 		.word	1073768968
 194              		.cfi_endproc
 195              	.LFE8:
 196              		.size	Motor_1_Encoder_Counts_WriteCounter, .-Motor_1_Encoder_Counts_WriteCounter
 197              		.section	.text.Motor_1_Encoder_Counts_ReadCounter,"ax",%progbits
 198              		.align	2
 199              		.global	Motor_1_Encoder_Counts_ReadCounter
 200              		.thumb
 201              		.thumb_func
 202              		.type	Motor_1_Encoder_Counts_ReadCounter, %function
 203              	Motor_1_Encoder_Counts_ReadCounter:
 204              	.LFB9:
 338:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c ****     #endif /* (Motor_1_Encoder_Counts_UsingFixedFunction) */
 339:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** }
 340:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** #endif /* (!(Motor_1_Encoder_Counts_UsingFixedFunction && (CY_PSOC5A))) */
 341:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** 
 342:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** 
 343:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** /*******************************************************************************
 344:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** * Function Name: Motor_1_Encoder_Counts_ReadCounter
 345:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** ********************************************************************************
 346:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** * Summary:
 347:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** * Returns the current value of the counter.  It doesn't matter
 348:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** * if the counter is enabled or running.
 349:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** *
 350:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** * Parameters:  
 351:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** *  void:  
 352:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** *
 353:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** * Return: 
 354:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** *  (uint16) The present value of the counter.
 355:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** *
 356:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** *******************************************************************************/
 357:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** uint16 Motor_1_Encoder_Counts_ReadCounter(void) 
 358:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** {
 205              		.loc 1 358 0
 206              		.cfi_startproc
 207              		@ args = 0, pretend = 0, frame = 0
 208              		@ frame_needed = 0, uses_anonymous_args = 0
 209              		@ link register save eliminated.
 359:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c ****     /* Force capture by reading Accumulator */
 360:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c ****     /* Must first do a software capture to be able to read the counter */
 361:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c ****     /* It is up to the user code to make sure there isn't already captured data in the FIFO */
ARM GAS  C:\Users\Blayke\AppData\Local\Temp\ccwq0WqJ.s 			page 11


 362:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c ****     #if(Motor_1_Encoder_Counts_UsingFixedFunction)
 363:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** 		(void)CY_GET_REG16(Motor_1_Encoder_Counts_COUNTER_LSB_PTR);
 364:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** 	#else
 365:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** 		(void)CY_GET_REG8(Motor_1_Encoder_Counts_COUNTER_LSB_PTR_8BIT);
 210              		.loc 1 365 0
 211 0000 024B     		ldr	r3, .L23
 212 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 366:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** 	#endif/* (Motor_1_Encoder_Counts_UsingFixedFunction) */
 367:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c ****     
 368:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c ****     /* Read the data from the FIFO (or capture register for Fixed Function)*/
 369:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c ****     #if(Motor_1_Encoder_Counts_UsingFixedFunction)
 370:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c ****         return ((uint16)CY_GET_REG16(Motor_1_Encoder_Counts_STATICCOUNT_LSB_PTR));
 371:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c ****     #else
 372:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c ****         return (CY_GET_REG16(Motor_1_Encoder_Counts_STATICCOUNT_LSB_PTR));
 213              		.loc 1 372 0
 214 0004 024B     		ldr	r3, .L23+4
 215 0006 1888     		ldrh	r0, [r3]
 373:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c ****     #endif /* (Motor_1_Encoder_Counts_UsingFixedFunction) */
 374:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** }
 216              		.loc 1 374 0
 217 0008 80B2     		uxth	r0, r0
 218 000a 7047     		bx	lr
 219              	.L24:
 220              		.align	2
 221              	.L23:
 222 000c 04650040 		.word	1073767684
 223 0010 886A0040 		.word	1073769096
 224              		.cfi_endproc
 225              	.LFE9:
 226              		.size	Motor_1_Encoder_Counts_ReadCounter, .-Motor_1_Encoder_Counts_ReadCounter
 227              		.section	.text.Motor_1_Encoder_Counts_ReadCapture,"ax",%progbits
 228              		.align	2
 229              		.global	Motor_1_Encoder_Counts_ReadCapture
 230              		.thumb
 231              		.thumb_func
 232              		.type	Motor_1_Encoder_Counts_ReadCapture, %function
 233              	Motor_1_Encoder_Counts_ReadCapture:
 234              	.LFB10:
 375:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** 
 376:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** 
 377:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** /*******************************************************************************
 378:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** * Function Name: Motor_1_Encoder_Counts_ReadCapture
 379:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** ********************************************************************************
 380:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** * Summary:
 381:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** *   This function returns the last value captured.
 382:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** *
 383:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** * Parameters:  
 384:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** *  void
 385:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** *
 386:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** * Return: 
 387:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** *  (uint16) Present Capture value.
 388:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** *
 389:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** *******************************************************************************/
 390:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** uint16 Motor_1_Encoder_Counts_ReadCapture(void) 
 391:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** {
 235              		.loc 1 391 0
 236              		.cfi_startproc
ARM GAS  C:\Users\Blayke\AppData\Local\Temp\ccwq0WqJ.s 			page 12


 237              		@ args = 0, pretend = 0, frame = 0
 238              		@ frame_needed = 0, uses_anonymous_args = 0
 239              		@ link register save eliminated.
 392:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c ****     #if(Motor_1_Encoder_Counts_UsingFixedFunction)
 393:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c ****         return ((uint16)CY_GET_REG16(Motor_1_Encoder_Counts_STATICCOUNT_LSB_PTR));
 394:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c ****     #else
 395:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c ****         return (CY_GET_REG16(Motor_1_Encoder_Counts_STATICCOUNT_LSB_PTR));
 240              		.loc 1 395 0
 241 0000 014B     		ldr	r3, .L26
 242 0002 1888     		ldrh	r0, [r3]
 396:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c ****     #endif /* (Motor_1_Encoder_Counts_UsingFixedFunction) */
 397:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** }
 243              		.loc 1 397 0
 244 0004 80B2     		uxth	r0, r0
 245 0006 7047     		bx	lr
 246              	.L27:
 247              		.align	2
 248              	.L26:
 249 0008 886A0040 		.word	1073769096
 250              		.cfi_endproc
 251              	.LFE10:
 252              		.size	Motor_1_Encoder_Counts_ReadCapture, .-Motor_1_Encoder_Counts_ReadCapture
 253              		.section	.text.Motor_1_Encoder_Counts_WritePeriod,"ax",%progbits
 254              		.align	2
 255              		.global	Motor_1_Encoder_Counts_WritePeriod
 256              		.thumb
 257              		.thumb_func
 258              		.type	Motor_1_Encoder_Counts_WritePeriod, %function
 259              	Motor_1_Encoder_Counts_WritePeriod:
 260              	.LFB11:
 398:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** 
 399:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** 
 400:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** /*******************************************************************************
 401:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** * Function Name: Motor_1_Encoder_Counts_WritePeriod
 402:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** ********************************************************************************
 403:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** * Summary:
 404:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** * Changes the period of the counter.  The new period 
 405:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** * will be loaded the next time terminal count is detected.
 406:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** *
 407:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** * Parameters:  
 408:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** *  period: (uint16) A value of 0 will result in
 409:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** *         the counter remaining at zero.  
 410:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** *
 411:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** * Return: 
 412:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** *  void
 413:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** *
 414:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** *******************************************************************************/
 415:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** void Motor_1_Encoder_Counts_WritePeriod(uint16 period) 
 416:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** {
 261              		.loc 1 416 0
 262              		.cfi_startproc
 263              		@ args = 0, pretend = 0, frame = 0
 264              		@ frame_needed = 0, uses_anonymous_args = 0
 265              		@ link register save eliminated.
 266              	.LVL3:
 417:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c ****     #if(Motor_1_Encoder_Counts_UsingFixedFunction)
 418:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c ****         CY_SET_REG16(Motor_1_Encoder_Counts_PERIOD_LSB_PTR,(uint16)period);
ARM GAS  C:\Users\Blayke\AppData\Local\Temp\ccwq0WqJ.s 			page 13


 419:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c ****     #else
 420:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c ****         CY_SET_REG16(Motor_1_Encoder_Counts_PERIOD_LSB_PTR, period);
 267              		.loc 1 420 0
 268 0000 014B     		ldr	r3, .L29
 269 0002 1880     		strh	r0, [r3]	@ movhi
 270 0004 7047     		bx	lr
 271              	.L30:
 272 0006 00BF     		.align	2
 273              	.L29:
 274 0008 486A0040 		.word	1073769032
 275              		.cfi_endproc
 276              	.LFE11:
 277              		.size	Motor_1_Encoder_Counts_WritePeriod, .-Motor_1_Encoder_Counts_WritePeriod
 278              		.section	.text.Motor_1_Encoder_Counts_ReadPeriod,"ax",%progbits
 279              		.align	2
 280              		.global	Motor_1_Encoder_Counts_ReadPeriod
 281              		.thumb
 282              		.thumb_func
 283              		.type	Motor_1_Encoder_Counts_ReadPeriod, %function
 284              	Motor_1_Encoder_Counts_ReadPeriod:
 285              	.LFB12:
 421:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c ****     #endif /* (Motor_1_Encoder_Counts_UsingFixedFunction) */
 422:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** }
 423:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** 
 424:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** 
 425:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** /*******************************************************************************
 426:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** * Function Name: Motor_1_Encoder_Counts_ReadPeriod
 427:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** ********************************************************************************
 428:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** * Summary:
 429:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** * Reads the current period value without affecting counter operation.
 430:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** *
 431:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** * Parameters:  
 432:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** *  void:  
 433:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** *
 434:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** * Return: 
 435:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** *  (uint16) Present period value.
 436:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** *
 437:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** *******************************************************************************/
 438:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** uint16 Motor_1_Encoder_Counts_ReadPeriod(void) 
 439:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** {
 286              		.loc 1 439 0
 287              		.cfi_startproc
 288              		@ args = 0, pretend = 0, frame = 0
 289              		@ frame_needed = 0, uses_anonymous_args = 0
 290              		@ link register save eliminated.
 440:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c ****     #if(Motor_1_Encoder_Counts_UsingFixedFunction)
 441:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c ****         return ((uint16)CY_GET_REG16(Motor_1_Encoder_Counts_PERIOD_LSB_PTR));
 442:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c ****     #else
 443:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c ****         return (CY_GET_REG16(Motor_1_Encoder_Counts_PERIOD_LSB_PTR));
 291              		.loc 1 443 0
 292 0000 014B     		ldr	r3, .L32
 293 0002 1888     		ldrh	r0, [r3]
 444:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c ****     #endif /* (Motor_1_Encoder_Counts_UsingFixedFunction) */
 445:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** }
 294              		.loc 1 445 0
 295 0004 80B2     		uxth	r0, r0
 296 0006 7047     		bx	lr
ARM GAS  C:\Users\Blayke\AppData\Local\Temp\ccwq0WqJ.s 			page 14


 297              	.L33:
 298              		.align	2
 299              	.L32:
 300 0008 486A0040 		.word	1073769032
 301              		.cfi_endproc
 302              	.LFE12:
 303              		.size	Motor_1_Encoder_Counts_ReadPeriod, .-Motor_1_Encoder_Counts_ReadPeriod
 304              		.section	.text.Motor_1_Encoder_Counts_WriteCompare,"ax",%progbits
 305              		.align	2
 306              		.global	Motor_1_Encoder_Counts_WriteCompare
 307              		.thumb
 308              		.thumb_func
 309              		.type	Motor_1_Encoder_Counts_WriteCompare, %function
 310              	Motor_1_Encoder_Counts_WriteCompare:
 311              	.LFB13:
 446:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** 
 447:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** 
 448:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** #if (!Motor_1_Encoder_Counts_UsingFixedFunction)
 449:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** /*******************************************************************************
 450:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** * Function Name: Motor_1_Encoder_Counts_WriteCompare
 451:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** ********************************************************************************
 452:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** * Summary:
 453:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** * Changes the compare value.  The compare output will 
 454:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** * reflect the new value on the next UDB clock.  The compare output will be 
 455:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** * driven high when the present counter value compares true based on the 
 456:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** * configured compare mode setting. 
 457:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** *
 458:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** * Parameters:  
 459:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** *  Compare:  New compare value. 
 460:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** *
 461:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** * Return: 
 462:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** *  void
 463:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** *
 464:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** *******************************************************************************/
 465:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** void Motor_1_Encoder_Counts_WriteCompare(uint16 compare) \
 466:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c ****                                    
 467:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** {
 312              		.loc 1 467 0
 313              		.cfi_startproc
 314              		@ args = 0, pretend = 0, frame = 0
 315              		@ frame_needed = 0, uses_anonymous_args = 0
 316              		@ link register save eliminated.
 317              	.LVL4:
 468:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c ****     #if(Motor_1_Encoder_Counts_UsingFixedFunction)
 469:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c ****         CY_SET_REG16(Motor_1_Encoder_Counts_COMPARE_LSB_PTR, (uint16)compare);
 470:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c ****     #else
 471:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c ****         CY_SET_REG16(Motor_1_Encoder_Counts_COMPARE_LSB_PTR, compare);
 318              		.loc 1 471 0
 319 0000 014B     		ldr	r3, .L35
 320 0002 1880     		strh	r0, [r3]	@ movhi
 321 0004 7047     		bx	lr
 322              	.L36:
 323 0006 00BF     		.align	2
 324              	.L35:
 325 0008 686A0040 		.word	1073769064
 326              		.cfi_endproc
 327              	.LFE13:
ARM GAS  C:\Users\Blayke\AppData\Local\Temp\ccwq0WqJ.s 			page 15


 328              		.size	Motor_1_Encoder_Counts_WriteCompare, .-Motor_1_Encoder_Counts_WriteCompare
 329              		.section	.text.Motor_1_Encoder_Counts_ReadCompare,"ax",%progbits
 330              		.align	2
 331              		.global	Motor_1_Encoder_Counts_ReadCompare
 332              		.thumb
 333              		.thumb_func
 334              		.type	Motor_1_Encoder_Counts_ReadCompare, %function
 335              	Motor_1_Encoder_Counts_ReadCompare:
 336              	.LFB14:
 472:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c ****     #endif /* (Motor_1_Encoder_Counts_UsingFixedFunction) */
 473:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** }
 474:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** 
 475:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** 
 476:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** /*******************************************************************************
 477:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** * Function Name: Motor_1_Encoder_Counts_ReadCompare
 478:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** ********************************************************************************
 479:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** * Summary:
 480:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** * Returns the compare value.
 481:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** *
 482:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** * Parameters:  
 483:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** *  void:
 484:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** *
 485:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** * Return: 
 486:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** *  (uint16) Present compare value.
 487:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** *
 488:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** *******************************************************************************/
 489:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** uint16 Motor_1_Encoder_Counts_ReadCompare(void) 
 490:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** {
 337              		.loc 1 490 0
 338              		.cfi_startproc
 339              		@ args = 0, pretend = 0, frame = 0
 340              		@ frame_needed = 0, uses_anonymous_args = 0
 341              		@ link register save eliminated.
 491:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c ****     return (CY_GET_REG16(Motor_1_Encoder_Counts_COMPARE_LSB_PTR));
 342              		.loc 1 491 0
 343 0000 014B     		ldr	r3, .L38
 344 0002 1888     		ldrh	r0, [r3]
 492:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** }
 345              		.loc 1 492 0
 346 0004 80B2     		uxth	r0, r0
 347 0006 7047     		bx	lr
 348              	.L39:
 349              		.align	2
 350              	.L38:
 351 0008 686A0040 		.word	1073769064
 352              		.cfi_endproc
 353              	.LFE14:
 354              		.size	Motor_1_Encoder_Counts_ReadCompare, .-Motor_1_Encoder_Counts_ReadCompare
 355              		.section	.text.Motor_1_Encoder_Counts_ClearFIFO,"ax",%progbits
 356              		.align	2
 357              		.global	Motor_1_Encoder_Counts_ClearFIFO
 358              		.thumb
 359              		.thumb_func
 360              		.type	Motor_1_Encoder_Counts_ClearFIFO, %function
 361              	Motor_1_Encoder_Counts_ClearFIFO:
 362              	.LFB15:
 493:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** 
ARM GAS  C:\Users\Blayke\AppData\Local\Temp\ccwq0WqJ.s 			page 16


 494:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** 
 495:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** #if (Motor_1_Encoder_Counts_COMPARE_MODE_SOFTWARE)
 496:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** /*******************************************************************************
 497:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** * Function Name: Motor_1_Encoder_Counts_SetCompareMode
 498:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** ********************************************************************************
 499:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** * Summary:
 500:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** *  Sets the software controlled Compare Mode.
 501:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** *
 502:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** * Parameters:
 503:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** *  compareMode:  Compare Mode Enumerated Type.
 504:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** *
 505:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** * Return:
 506:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** *  void
 507:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** *
 508:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** *******************************************************************************/
 509:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** void Motor_1_Encoder_Counts_SetCompareMode(uint8 compareMode) 
 510:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** {
 511:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c ****     /* Clear the compare mode bits in the control register */
 512:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c ****     Motor_1_Encoder_Counts_CONTROL &= ((uint8)(~Motor_1_Encoder_Counts_CTRL_CMPMODE_MASK));
 513:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c ****     
 514:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c ****     /* Write the new setting */
 515:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c ****     Motor_1_Encoder_Counts_CONTROL |= compareMode;
 516:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** }
 517:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** #endif  /* (Motor_1_Encoder_Counts_COMPARE_MODE_SOFTWARE) */
 518:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** 
 519:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** 
 520:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** #if (Motor_1_Encoder_Counts_CAPTURE_MODE_SOFTWARE)
 521:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** /*******************************************************************************
 522:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** * Function Name: Motor_1_Encoder_Counts_SetCaptureMode
 523:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** ********************************************************************************
 524:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** * Summary:
 525:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** *  Sets the software controlled Capture Mode.
 526:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** *
 527:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** * Parameters:
 528:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** *  captureMode:  Capture Mode Enumerated Type.
 529:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** *
 530:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** * Return:
 531:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** *  void
 532:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** *
 533:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** *******************************************************************************/
 534:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** void Motor_1_Encoder_Counts_SetCaptureMode(uint8 captureMode) 
 535:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** {
 536:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c ****     /* Clear the capture mode bits in the control register */
 537:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c ****     Motor_1_Encoder_Counts_CONTROL &= ((uint8)(~Motor_1_Encoder_Counts_CTRL_CAPMODE_MASK));
 538:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c ****     
 539:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c ****     /* Write the new setting */
 540:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c ****     Motor_1_Encoder_Counts_CONTROL |= ((uint8)((uint8)captureMode << Motor_1_Encoder_Counts_CTRL_CA
 541:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** }
 542:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** #endif  /* (Motor_1_Encoder_Counts_CAPTURE_MODE_SOFTWARE) */
 543:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** 
 544:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** 
 545:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** /*******************************************************************************
 546:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** * Function Name: Motor_1_Encoder_Counts_ClearFIFO
 547:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** ********************************************************************************
 548:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** * Summary:
 549:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** *   This function clears all capture data from the capture FIFO
 550:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** *
ARM GAS  C:\Users\Blayke\AppData\Local\Temp\ccwq0WqJ.s 			page 17


 551:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** * Parameters:  
 552:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** *  void:
 553:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** *
 554:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** * Return: 
 555:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** *  None
 556:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** *
 557:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** *******************************************************************************/
 558:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** void Motor_1_Encoder_Counts_ClearFIFO(void) 
 559:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** {
 363              		.loc 1 559 0
 364              		.cfi_startproc
 365              		@ args = 0, pretend = 0, frame = 0
 366              		@ frame_needed = 0, uses_anonymous_args = 0
 367 0000 08B5     		push	{r3, lr}
 368              		.cfi_def_cfa_offset 8
 369              		.cfi_offset 3, -8
 370              		.cfi_offset 14, -4
 560:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** 
 561:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c ****     while(0u != (Motor_1_Encoder_Counts_ReadStatusRegister() & Motor_1_Encoder_Counts_STATUS_FIFONE
 371              		.loc 1 561 0
 372 0002 01E0     		b	.L41
 373              	.L42:
 562:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c ****     {
 563:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c ****         (void)Motor_1_Encoder_Counts_ReadCapture();
 374              		.loc 1 563 0
 375 0004 FFF7FEFF 		bl	Motor_1_Encoder_Counts_ReadCapture
 376              	.LVL5:
 377              	.L41:
 561:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c ****     {
 378              		.loc 1 561 0
 379 0008 FFF7FEFF 		bl	Motor_1_Encoder_Counts_ReadStatusRegister
 380              	.LVL6:
 381 000c 10F0400F 		tst	r0, #64
 382 0010 F8D1     		bne	.L42
 564:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c ****     }
 565:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** 
 566:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** }
 383              		.loc 1 566 0
 384 0012 08BD     		pop	{r3, pc}
 385              		.cfi_endproc
 386              	.LFE15:
 387              		.size	Motor_1_Encoder_Counts_ClearFIFO, .-Motor_1_Encoder_Counts_ClearFIFO
 388              		.section	.text.Motor_1_Encoder_Counts_Init,"ax",%progbits
 389              		.align	2
 390              		.global	Motor_1_Encoder_Counts_Init
 391              		.thumb
 392              		.thumb_func
 393              		.type	Motor_1_Encoder_Counts_Init, %function
 394              	Motor_1_Encoder_Counts_Init:
 395              	.LFB0:
  38:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c ****         #if (!Motor_1_Encoder_Counts_UsingFixedFunction && !Motor_1_Encoder_Counts_ControlRegRemove
 396              		.loc 1 38 0
 397              		.cfi_startproc
 398              		@ args = 0, pretend = 0, frame = 0
 399              		@ frame_needed = 0, uses_anonymous_args = 0
 400 0000 08B5     		push	{r3, lr}
 401              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\Blayke\AppData\Local\Temp\ccwq0WqJ.s 			page 18


 402              		.cfi_offset 3, -8
 403              		.cfi_offset 14, -4
  79:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c ****             Motor_1_Encoder_Counts_CONTROL = ctrl | Motor_1_Encoder_Counts_DEFAULT_COMPARE_MODE;
 404              		.loc 1 79 0
 405 0002 124B     		ldr	r3, .L46
 406 0004 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 407 0006 02F0F802 		and	r2, r2, #248
 408              	.LVL7:
  80:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c ****             
 409              		.loc 1 80 0
 410 000a 1A70     		strb	r2, [r3]
  83:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c ****             
 411              		.loc 1 83 0
 412 000c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 413              	.LVL8:
 414 000e 02F0FC02 		and	r2, r2, #252
 415              	.LVL9:
  88:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c ****             #endif /* 0 != Motor_1_Encoder_Counts_CAPTURE_MODE */ 
 416              		.loc 1 88 0
 417 0012 1A70     		strb	r2, [r3]
  96:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c ****         #endif /* (!Motor_1_Encoder_Counts_UsingFixedFunction) */
 418              		.loc 1 96 0
 419 0014 FFF7FEFF 		bl	Motor_1_Encoder_Counts_ClearFIFO
 420              	.LVL10:
 100:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c ****         #if (!(Motor_1_Encoder_Counts_UsingFixedFunction && (CY_PSOC5A)))
 421              		.loc 1 100 0
 422 0018 4FF47A70 		mov	r0, #1000
 423 001c FFF7FEFF 		bl	Motor_1_Encoder_Counts_WritePeriod
 424              	.LVL11:
 102:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c ****         #endif /* (!(Motor_1_Encoder_Counts_UsingFixedFunction && (CY_PSOC5A))) */
 425              		.loc 1 102 0
 426 0020 0020     		movs	r0, #0
 427 0022 FFF7FEFF 		bl	Motor_1_Encoder_Counts_WriteCounter
 428              	.LVL12:
 104:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c ****         
 429              		.loc 1 104 0
 430 0026 0C20     		movs	r0, #12
 431 0028 FFF7FEFF 		bl	Motor_1_Encoder_Counts_SetInterruptMode
 432              	.LVL13:
 108:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c ****             /* Set the compare value (only available to non-fixed function implementation */
 433              		.loc 1 108 0
 434 002c FFF7FEFF 		bl	Motor_1_Encoder_Counts_ReadStatusRegister
 435              	.LVL14:
 110:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c ****             /* Use the interrupt output of the status register for IRQ output */
 436              		.loc 1 110 0
 437 0030 0020     		movs	r0, #0
 438 0032 FFF7FEFF 		bl	Motor_1_Encoder_Counts_WriteCompare
 439              	.LVL15:
 115:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c ****             
 440              		.loc 1 115 0
 441 0036 FFF7FEFF 		bl	CyEnterCriticalSection
 442              	.LVL16:
 117:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c ****             
 443              		.loc 1 117 0
 444 003a 054A     		ldr	r2, .L46+4
 445 003c 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 446 003e 43F01003 		orr	r3, r3, #16
ARM GAS  C:\Users\Blayke\AppData\Local\Temp\ccwq0WqJ.s 			page 19


 447 0042 1370     		strb	r3, [r2]
 120:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c ****             
 448              		.loc 1 120 0
 449 0044 FFF7FEFF 		bl	CyExitCriticalSection
 450              	.LVL17:
 451 0048 08BD     		pop	{r3, pc}
 452              	.L47:
 453 004a 00BF     		.align	2
 454              	.L46:
 455 004c 77650040 		.word	1073767799
 456 0050 95650040 		.word	1073767829
 457              		.cfi_endproc
 458              	.LFE0:
 459              		.size	Motor_1_Encoder_Counts_Init, .-Motor_1_Encoder_Counts_Init
 460              		.section	.text.Motor_1_Encoder_Counts_Start,"ax",%progbits
 461              		.align	2
 462              		.global	Motor_1_Encoder_Counts_Start
 463              		.thumb
 464              		.thumb_func
 465              		.type	Motor_1_Encoder_Counts_Start, %function
 466              	Motor_1_Encoder_Counts_Start:
 467              	.LFB2:
 179:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c ****     if(Motor_1_Encoder_Counts_initVar == 0u)
 468              		.loc 1 179 0
 469              		.cfi_startproc
 470              		@ args = 0, pretend = 0, frame = 0
 471              		@ frame_needed = 0, uses_anonymous_args = 0
 472 0000 08B5     		push	{r3, lr}
 473              		.cfi_def_cfa_offset 8
 474              		.cfi_offset 3, -8
 475              		.cfi_offset 14, -4
 180:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c ****     {
 476              		.loc 1 180 0
 477 0002 054B     		ldr	r3, .L51
 478 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 479 0006 23B9     		cbnz	r3, .L49
 182:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c ****         
 480              		.loc 1 182 0
 481 0008 FFF7FEFF 		bl	Motor_1_Encoder_Counts_Init
 482              	.LVL18:
 184:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c ****     }
 483              		.loc 1 184 0
 484 000c 0122     		movs	r2, #1
 485 000e 024B     		ldr	r3, .L51
 486 0010 1A70     		strb	r2, [r3]
 487              	.L49:
 188:Generated_Source\PSoC5/Motor_1_Encoder_Counts.c **** }
 488              		.loc 1 188 0
 489 0012 FFF7FEFF 		bl	Motor_1_Encoder_Counts_Enable
 490              	.LVL19:
 491 0016 08BD     		pop	{r3, pc}
 492              	.L52:
 493              		.align	2
 494              	.L51:
 495 0018 00000000 		.word	.LANCHOR0
 496              		.cfi_endproc
 497              	.LFE2:
ARM GAS  C:\Users\Blayke\AppData\Local\Temp\ccwq0WqJ.s 			page 20


 498              		.size	Motor_1_Encoder_Counts_Start, .-Motor_1_Encoder_Counts_Start
 499              		.global	Motor_1_Encoder_Counts_initVar
 500              		.bss
 501              		.set	.LANCHOR0,. + 0
 502              		.type	Motor_1_Encoder_Counts_initVar, %object
 503              		.size	Motor_1_Encoder_Counts_initVar, 1
 504              	Motor_1_Encoder_Counts_initVar:
 505 0000 00       		.space	1
 506              		.text
 507              	.Letext0:
 508              		.file 2 "Generated_Source\\PSoC5\\cytypes.h"
 509              		.file 3 "Generated_Source\\PSoC5\\CyLib.h"
 510              		.section	.debug_info,"",%progbits
 511              	.Ldebug_info0:
 512 0000 40030000 		.4byte	0x340
 513 0004 0400     		.2byte	0x4
 514 0006 00000000 		.4byte	.Ldebug_abbrev0
 515 000a 04       		.byte	0x4
 516 000b 01       		.uleb128 0x1
 517 000c 94010000 		.4byte	.LASF43
 518 0010 0C       		.byte	0xc
 519 0011 45030000 		.4byte	.LASF44
 520 0015 B2000000 		.4byte	.LASF45
 521 0019 00000000 		.4byte	.Ldebug_ranges0+0
 522 001d 00000000 		.4byte	0
 523 0021 00000000 		.4byte	.Ldebug_line0
 524 0025 02       		.uleb128 0x2
 525 0026 01       		.byte	0x1
 526 0027 06       		.byte	0x6
 527 0028 AA040000 		.4byte	.LASF0
 528 002c 02       		.uleb128 0x2
 529 002d 01       		.byte	0x1
 530 002e 08       		.byte	0x8
 531 002f 86010000 		.4byte	.LASF1
 532 0033 02       		.uleb128 0x2
 533 0034 02       		.byte	0x2
 534 0035 05       		.byte	0x5
 535 0036 F9030000 		.4byte	.LASF2
 536 003a 02       		.uleb128 0x2
 537 003b 02       		.byte	0x2
 538 003c 07       		.byte	0x7
 539 003d 2F000000 		.4byte	.LASF3
 540 0041 02       		.uleb128 0x2
 541 0042 04       		.byte	0x4
 542 0043 05       		.byte	0x5
 543 0044 72040000 		.4byte	.LASF4
 544 0048 02       		.uleb128 0x2
 545 0049 04       		.byte	0x4
 546 004a 07       		.byte	0x7
 547 004b 27020000 		.4byte	.LASF5
 548 004f 02       		.uleb128 0x2
 549 0050 08       		.byte	0x8
 550 0051 05       		.byte	0x5
 551 0052 A9030000 		.4byte	.LASF6
 552 0056 02       		.uleb128 0x2
 553 0057 08       		.byte	0x8
 554 0058 07       		.byte	0x7
ARM GAS  C:\Users\Blayke\AppData\Local\Temp\ccwq0WqJ.s 			page 21


 555 0059 1F010000 		.4byte	.LASF7
 556 005d 03       		.uleb128 0x3
 557 005e 04       		.byte	0x4
 558 005f 05       		.byte	0x5
 559 0060 696E7400 		.ascii	"int\000"
 560 0064 02       		.uleb128 0x2
 561 0065 04       		.byte	0x4
 562 0066 07       		.byte	0x7
 563 0067 22030000 		.4byte	.LASF8
 564 006b 04       		.uleb128 0x4
 565 006c 39020000 		.4byte	.LASF9
 566 0070 02       		.byte	0x2
 567 0071 E401     		.2byte	0x1e4
 568 0073 2C000000 		.4byte	0x2c
 569 0077 04       		.uleb128 0x4
 570 0078 B6020000 		.4byte	.LASF10
 571 007c 02       		.byte	0x2
 572 007d E501     		.2byte	0x1e5
 573 007f 3A000000 		.4byte	0x3a
 574 0083 02       		.uleb128 0x2
 575 0084 04       		.byte	0x4
 576 0085 04       		.byte	0x4
 577 0086 22000000 		.4byte	.LASF11
 578 008a 02       		.uleb128 0x2
 579 008b 08       		.byte	0x8
 580 008c 04       		.byte	0x4
 581 008d 87020000 		.4byte	.LASF12
 582 0091 02       		.uleb128 0x2
 583 0092 01       		.byte	0x1
 584 0093 08       		.byte	0x8
 585 0094 B7030000 		.4byte	.LASF13
 586 0098 04       		.uleb128 0x4
 587 0099 22020000 		.4byte	.LASF14
 588 009d 02       		.byte	0x2
 589 009e 8E02     		.2byte	0x28e
 590 00a0 A4000000 		.4byte	0xa4
 591 00a4 05       		.uleb128 0x5
 592 00a5 6B000000 		.4byte	0x6b
 593 00a9 04       		.uleb128 0x4
 594 00aa 00000000 		.4byte	.LASF15
 595 00ae 02       		.byte	0x2
 596 00af 8F02     		.2byte	0x28f
 597 00b1 B5000000 		.4byte	0xb5
 598 00b5 05       		.uleb128 0x5
 599 00b6 77000000 		.4byte	0x77
 600 00ba 02       		.uleb128 0x2
 601 00bb 08       		.byte	0x8
 602 00bc 04       		.byte	0x4
 603 00bd 9E040000 		.4byte	.LASF16
 604 00c1 02       		.uleb128 0x2
 605 00c2 04       		.byte	0x4
 606 00c3 07       		.byte	0x7
 607 00c4 7A030000 		.4byte	.LASF17
 608 00c8 06       		.uleb128 0x6
 609 00c9 BC030000 		.4byte	.LASF18
 610 00cd 01       		.byte	0x1
 611 00ce 8F       		.byte	0x8f
ARM GAS  C:\Users\Blayke\AppData\Local\Temp\ccwq0WqJ.s 			page 22


 612 00cf 00000000 		.4byte	.LFB1
 613 00d3 10000000 		.4byte	.LFE1-.LFB1
 614 00d7 01       		.uleb128 0x1
 615 00d8 9C       		.byte	0x9c
 616 00d9 06       		.uleb128 0x6
 617 00da 6B020000 		.4byte	.LASF19
 618 00de 01       		.byte	0x1
 619 00df D0       		.byte	0xd0
 620 00e0 00000000 		.4byte	.LFB3
 621 00e4 10000000 		.4byte	.LFE3-.LFB3
 622 00e8 01       		.uleb128 0x1
 623 00e9 9C       		.byte	0x9c
 624 00ea 07       		.uleb128 0x7
 625 00eb 8E020000 		.4byte	.LASF22
 626 00ef 01       		.byte	0x1
 627 00f0 ED       		.byte	0xed
 628 00f1 00000000 		.4byte	.LFB4
 629 00f5 0C000000 		.4byte	.LFE4-.LFB4
 630 00f9 01       		.uleb128 0x1
 631 00fa 9C       		.byte	0x9c
 632 00fb 0D010000 		.4byte	0x10d
 633 00ff 08       		.uleb128 0x8
 634 0100 5C020000 		.4byte	.LASF24
 635 0104 01       		.byte	0x1
 636 0105 ED       		.byte	0xed
 637 0106 6B000000 		.4byte	0x6b
 638 010a 01       		.uleb128 0x1
 639 010b 50       		.byte	0x50
 640 010c 00       		.byte	0
 641 010d 09       		.uleb128 0x9
 642 010e E1020000 		.4byte	.LASF20
 643 0112 01       		.byte	0x1
 644 0113 0501     		.2byte	0x105
 645 0115 6B000000 		.4byte	0x6b
 646 0119 00000000 		.4byte	.LFB5
 647 011d 0C000000 		.4byte	.LFE5-.LFB5
 648 0121 01       		.uleb128 0x1
 649 0122 9C       		.byte	0x9c
 650 0123 09       		.uleb128 0x9
 651 0124 65000000 		.4byte	.LASF21
 652 0128 01       		.byte	0x1
 653 0129 1B01     		.2byte	0x11b
 654 012b 6B000000 		.4byte	0x6b
 655 012f 00000000 		.4byte	.LFB6
 656 0133 0C000000 		.4byte	.LFE6-.LFB6
 657 0137 01       		.uleb128 0x1
 658 0138 9C       		.byte	0x9c
 659 0139 0A       		.uleb128 0xa
 660 013a 5A010000 		.4byte	.LASF23
 661 013e 01       		.byte	0x1
 662 013f 3001     		.2byte	0x130
 663 0141 00000000 		.4byte	.LFB7
 664 0145 0C000000 		.4byte	.LFE7-.LFB7
 665 0149 01       		.uleb128 0x1
 666 014a 9C       		.byte	0x9c
 667 014b 5E010000 		.4byte	0x15e
 668 014f 0B       		.uleb128 0xb
ARM GAS  C:\Users\Blayke\AppData\Local\Temp\ccwq0WqJ.s 			page 23


 669 0150 6A040000 		.4byte	.LASF25
 670 0154 01       		.byte	0x1
 671 0155 3001     		.2byte	0x130
 672 0157 6B000000 		.4byte	0x6b
 673 015b 01       		.uleb128 0x1
 674 015c 50       		.byte	0x50
 675 015d 00       		.byte	0
 676 015e 0A       		.uleb128 0xa
 677 015f BD020000 		.4byte	.LASF26
 678 0163 01       		.byte	0x1
 679 0164 4601     		.2byte	0x146
 680 0166 00000000 		.4byte	.LFB8
 681 016a 0C000000 		.4byte	.LFE8-.LFB8
 682 016e 01       		.uleb128 0x1
 683 016f 9C       		.byte	0x9c
 684 0170 83010000 		.4byte	0x183
 685 0174 0B       		.uleb128 0xb
 686 0175 17010000 		.4byte	.LASF27
 687 0179 01       		.byte	0x1
 688 017a 4601     		.2byte	0x146
 689 017c 77000000 		.4byte	0x77
 690 0180 01       		.uleb128 0x1
 691 0181 50       		.byte	0x50
 692 0182 00       		.byte	0
 693 0183 09       		.uleb128 0x9
 694 0184 42000000 		.4byte	.LASF28
 695 0188 01       		.byte	0x1
 696 0189 6501     		.2byte	0x165
 697 018b 77000000 		.4byte	0x77
 698 018f 00000000 		.4byte	.LFB9
 699 0193 14000000 		.4byte	.LFE9-.LFB9
 700 0197 01       		.uleb128 0x1
 701 0198 9C       		.byte	0x9c
 702 0199 09       		.uleb128 0x9
 703 019a 7B040000 		.4byte	.LASF29
 704 019e 01       		.byte	0x1
 705 019f 8601     		.2byte	0x186
 706 01a1 77000000 		.4byte	0x77
 707 01a5 00000000 		.4byte	.LFB10
 708 01a9 0C000000 		.4byte	.LFE10-.LFB10
 709 01ad 01       		.uleb128 0x1
 710 01ae 9C       		.byte	0x9c
 711 01af 0A       		.uleb128 0xa
 712 01b0 03040000 		.4byte	.LASF30
 713 01b4 01       		.byte	0x1
 714 01b5 9F01     		.2byte	0x19f
 715 01b7 00000000 		.4byte	.LFB11
 716 01bb 0C000000 		.4byte	.LFE11-.LFB11
 717 01bf 01       		.uleb128 0x1
 718 01c0 9C       		.byte	0x9c
 719 01c1 D4010000 		.4byte	0x1d4
 720 01c5 0B       		.uleb128 0xb
 721 01c6 28000000 		.4byte	.LASF31
 722 01ca 01       		.byte	0x1
 723 01cb 9F01     		.2byte	0x19f
 724 01cd 77000000 		.4byte	0x77
 725 01d1 01       		.uleb128 0x1
ARM GAS  C:\Users\Blayke\AppData\Local\Temp\ccwq0WqJ.s 			page 24


 726 01d2 50       		.byte	0x50
 727 01d3 00       		.byte	0
 728 01d4 09       		.uleb128 0x9
 729 01d5 90000000 		.4byte	.LASF32
 730 01d9 01       		.byte	0x1
 731 01da B601     		.2byte	0x1b6
 732 01dc 77000000 		.4byte	0x77
 733 01e0 00000000 		.4byte	.LFB12
 734 01e4 0C000000 		.4byte	.LFE12-.LFB12
 735 01e8 01       		.uleb128 0x1
 736 01e9 9C       		.byte	0x9c
 737 01ea 0A       		.uleb128 0xa
 738 01eb 36010000 		.4byte	.LASF33
 739 01ef 01       		.byte	0x1
 740 01f0 D101     		.2byte	0x1d1
 741 01f2 00000000 		.4byte	.LFB13
 742 01f6 0C000000 		.4byte	.LFE13-.LFB13
 743 01fa 01       		.uleb128 0x1
 744 01fb 9C       		.byte	0x9c
 745 01fc 0F020000 		.4byte	0x20f
 746 0200 0B       		.uleb128 0xb
 747 0201 B6040000 		.4byte	.LASF34
 748 0205 01       		.byte	0x1
 749 0206 D101     		.2byte	0x1d1
 750 0208 77000000 		.4byte	0x77
 751 020c 01       		.uleb128 0x1
 752 020d 50       		.byte	0x50
 753 020e 00       		.byte	0
 754 020f 09       		.uleb128 0x9
 755 0210 47040000 		.4byte	.LASF35
 756 0214 01       		.byte	0x1
 757 0215 E901     		.2byte	0x1e9
 758 0217 77000000 		.4byte	0x77
 759 021b 00000000 		.4byte	.LFB14
 760 021f 0C000000 		.4byte	.LFE14-.LFB14
 761 0223 01       		.uleb128 0x1
 762 0224 9C       		.byte	0x9c
 763 0225 0A       		.uleb128 0xa
 764 0226 26040000 		.4byte	.LASF36
 765 022a 01       		.byte	0x1
 766 022b 2E02     		.2byte	0x22e
 767 022d 00000000 		.4byte	.LFB15
 768 0231 14000000 		.4byte	.LFE15-.LFB15
 769 0235 01       		.uleb128 0x1
 770 0236 9C       		.byte	0x9c
 771 0237 4E020000 		.4byte	0x24e
 772 023b 0C       		.uleb128 0xc
 773 023c 08000000 		.4byte	.LVL5
 774 0240 99010000 		.4byte	0x199
 775 0244 0C       		.uleb128 0xc
 776 0245 0C000000 		.4byte	.LVL6
 777 0249 0D010000 		.4byte	0x10d
 778 024d 00       		.byte	0
 779 024e 07       		.uleb128 0x7
 780 024f 06000000 		.4byte	.LASF37
 781 0253 01       		.byte	0x1
 782 0254 25       		.byte	0x25
ARM GAS  C:\Users\Blayke\AppData\Local\Temp\ccwq0WqJ.s 			page 25


 783 0255 00000000 		.4byte	.LFB0
 784 0259 54000000 		.4byte	.LFE0-.LFB0
 785 025d 01       		.uleb128 0x1
 786 025e 9C       		.byte	0x9c
 787 025f F4020000 		.4byte	0x2f4
 788 0263 0D       		.uleb128 0xd
 789 0264 75030000 		.4byte	.LASF38
 790 0268 01       		.byte	0x1
 791 0269 28       		.byte	0x28
 792 026a 6B000000 		.4byte	0x6b
 793 026e 00000000 		.4byte	.LLST0
 794 0272 0D       		.uleb128 0xd
 795 0273 83030000 		.4byte	.LASF39
 796 0277 01       		.byte	0x1
 797 0278 2D       		.byte	0x2d
 798 0279 6B000000 		.4byte	0x6b
 799 027d 2A000000 		.4byte	.LLST1
 800 0281 0C       		.uleb128 0xc
 801 0282 18000000 		.4byte	.LVL10
 802 0286 25020000 		.4byte	0x225
 803 028a 0E       		.uleb128 0xe
 804 028b 20000000 		.4byte	.LVL11
 805 028f AF010000 		.4byte	0x1af
 806 0293 9F020000 		.4byte	0x29f
 807 0297 0F       		.uleb128 0xf
 808 0298 01       		.uleb128 0x1
 809 0299 50       		.byte	0x50
 810 029a 03       		.uleb128 0x3
 811 029b 0A       		.byte	0xa
 812 029c E803     		.2byte	0x3e8
 813 029e 00       		.byte	0
 814 029f 0E       		.uleb128 0xe
 815 02a0 26000000 		.4byte	.LVL12
 816 02a4 5E010000 		.4byte	0x15e
 817 02a8 B2020000 		.4byte	0x2b2
 818 02ac 0F       		.uleb128 0xf
 819 02ad 01       		.uleb128 0x1
 820 02ae 50       		.byte	0x50
 821 02af 01       		.uleb128 0x1
 822 02b0 30       		.byte	0x30
 823 02b1 00       		.byte	0
 824 02b2 0E       		.uleb128 0xe
 825 02b3 2C000000 		.4byte	.LVL13
 826 02b7 EA000000 		.4byte	0xea
 827 02bb C5020000 		.4byte	0x2c5
 828 02bf 0F       		.uleb128 0xf
 829 02c0 01       		.uleb128 0x1
 830 02c1 50       		.byte	0x50
 831 02c2 01       		.uleb128 0x1
 832 02c3 3C       		.byte	0x3c
 833 02c4 00       		.byte	0
 834 02c5 0C       		.uleb128 0xc
 835 02c6 30000000 		.4byte	.LVL14
 836 02ca 0D010000 		.4byte	0x10d
 837 02ce 0E       		.uleb128 0xe
 838 02cf 36000000 		.4byte	.LVL15
 839 02d3 EA010000 		.4byte	0x1ea
ARM GAS  C:\Users\Blayke\AppData\Local\Temp\ccwq0WqJ.s 			page 26


 840 02d7 E1020000 		.4byte	0x2e1
 841 02db 0F       		.uleb128 0xf
 842 02dc 01       		.uleb128 0x1
 843 02dd 50       		.byte	0x50
 844 02de 01       		.uleb128 0x1
 845 02df 30       		.byte	0x30
 846 02e0 00       		.byte	0
 847 02e1 0C       		.uleb128 0xc
 848 02e2 3A000000 		.4byte	.LVL16
 849 02e6 2D030000 		.4byte	0x32d
 850 02ea 0C       		.uleb128 0xc
 851 02eb 48000000 		.4byte	.LVL17
 852 02ef 38030000 		.4byte	0x338
 853 02f3 00       		.byte	0
 854 02f4 07       		.uleb128 0x7
 855 02f5 3F020000 		.4byte	.LASF40
 856 02f9 01       		.byte	0x1
 857 02fa B2       		.byte	0xb2
 858 02fb 00000000 		.4byte	.LFB2
 859 02ff 1C000000 		.4byte	.LFE2-.LFB2
 860 0303 01       		.uleb128 0x1
 861 0304 9C       		.byte	0x9c
 862 0305 1C030000 		.4byte	0x31c
 863 0309 0C       		.uleb128 0xc
 864 030a 0C000000 		.4byte	.LVL18
 865 030e 4E020000 		.4byte	0x24e
 866 0312 0C       		.uleb128 0xc
 867 0313 16000000 		.4byte	.LVL19
 868 0317 C8000000 		.4byte	0xc8
 869 031b 00       		.byte	0
 870 031c 10       		.uleb128 0x10
 871 031d DA030000 		.4byte	.LASF46
 872 0321 01       		.byte	0x1
 873 0322 15       		.byte	0x15
 874 0323 6B000000 		.4byte	0x6b
 875 0327 05       		.uleb128 0x5
 876 0328 03       		.byte	0x3
 877 0329 00000000 		.4byte	Motor_1_Encoder_Counts_initVar
 878 032d 11       		.uleb128 0x11
 879 032e 0B030000 		.4byte	.LASF41
 880 0332 0B030000 		.4byte	.LASF41
 881 0336 03       		.byte	0x3
 882 0337 7D       		.byte	0x7d
 883 0338 11       		.uleb128 0x11
 884 0339 2F030000 		.4byte	.LASF42
 885 033d 2F030000 		.4byte	.LASF42
 886 0341 03       		.byte	0x3
 887 0342 7E       		.byte	0x7e
 888 0343 00       		.byte	0
 889              		.section	.debug_abbrev,"",%progbits
 890              	.Ldebug_abbrev0:
 891 0000 01       		.uleb128 0x1
 892 0001 11       		.uleb128 0x11
 893 0002 01       		.byte	0x1
 894 0003 25       		.uleb128 0x25
 895 0004 0E       		.uleb128 0xe
 896 0005 13       		.uleb128 0x13
ARM GAS  C:\Users\Blayke\AppData\Local\Temp\ccwq0WqJ.s 			page 27


 897 0006 0B       		.uleb128 0xb
 898 0007 03       		.uleb128 0x3
 899 0008 0E       		.uleb128 0xe
 900 0009 1B       		.uleb128 0x1b
 901 000a 0E       		.uleb128 0xe
 902 000b 55       		.uleb128 0x55
 903 000c 17       		.uleb128 0x17
 904 000d 11       		.uleb128 0x11
 905 000e 01       		.uleb128 0x1
 906 000f 10       		.uleb128 0x10
 907 0010 17       		.uleb128 0x17
 908 0011 00       		.byte	0
 909 0012 00       		.byte	0
 910 0013 02       		.uleb128 0x2
 911 0014 24       		.uleb128 0x24
 912 0015 00       		.byte	0
 913 0016 0B       		.uleb128 0xb
 914 0017 0B       		.uleb128 0xb
 915 0018 3E       		.uleb128 0x3e
 916 0019 0B       		.uleb128 0xb
 917 001a 03       		.uleb128 0x3
 918 001b 0E       		.uleb128 0xe
 919 001c 00       		.byte	0
 920 001d 00       		.byte	0
 921 001e 03       		.uleb128 0x3
 922 001f 24       		.uleb128 0x24
 923 0020 00       		.byte	0
 924 0021 0B       		.uleb128 0xb
 925 0022 0B       		.uleb128 0xb
 926 0023 3E       		.uleb128 0x3e
 927 0024 0B       		.uleb128 0xb
 928 0025 03       		.uleb128 0x3
 929 0026 08       		.uleb128 0x8
 930 0027 00       		.byte	0
 931 0028 00       		.byte	0
 932 0029 04       		.uleb128 0x4
 933 002a 16       		.uleb128 0x16
 934 002b 00       		.byte	0
 935 002c 03       		.uleb128 0x3
 936 002d 0E       		.uleb128 0xe
 937 002e 3A       		.uleb128 0x3a
 938 002f 0B       		.uleb128 0xb
 939 0030 3B       		.uleb128 0x3b
 940 0031 05       		.uleb128 0x5
 941 0032 49       		.uleb128 0x49
 942 0033 13       		.uleb128 0x13
 943 0034 00       		.byte	0
 944 0035 00       		.byte	0
 945 0036 05       		.uleb128 0x5
 946 0037 35       		.uleb128 0x35
 947 0038 00       		.byte	0
 948 0039 49       		.uleb128 0x49
 949 003a 13       		.uleb128 0x13
 950 003b 00       		.byte	0
 951 003c 00       		.byte	0
 952 003d 06       		.uleb128 0x6
 953 003e 2E       		.uleb128 0x2e
ARM GAS  C:\Users\Blayke\AppData\Local\Temp\ccwq0WqJ.s 			page 28


 954 003f 00       		.byte	0
 955 0040 3F       		.uleb128 0x3f
 956 0041 19       		.uleb128 0x19
 957 0042 03       		.uleb128 0x3
 958 0043 0E       		.uleb128 0xe
 959 0044 3A       		.uleb128 0x3a
 960 0045 0B       		.uleb128 0xb
 961 0046 3B       		.uleb128 0x3b
 962 0047 0B       		.uleb128 0xb
 963 0048 27       		.uleb128 0x27
 964 0049 19       		.uleb128 0x19
 965 004a 11       		.uleb128 0x11
 966 004b 01       		.uleb128 0x1
 967 004c 12       		.uleb128 0x12
 968 004d 06       		.uleb128 0x6
 969 004e 40       		.uleb128 0x40
 970 004f 18       		.uleb128 0x18
 971 0050 9742     		.uleb128 0x2117
 972 0052 19       		.uleb128 0x19
 973 0053 00       		.byte	0
 974 0054 00       		.byte	0
 975 0055 07       		.uleb128 0x7
 976 0056 2E       		.uleb128 0x2e
 977 0057 01       		.byte	0x1
 978 0058 3F       		.uleb128 0x3f
 979 0059 19       		.uleb128 0x19
 980 005a 03       		.uleb128 0x3
 981 005b 0E       		.uleb128 0xe
 982 005c 3A       		.uleb128 0x3a
 983 005d 0B       		.uleb128 0xb
 984 005e 3B       		.uleb128 0x3b
 985 005f 0B       		.uleb128 0xb
 986 0060 27       		.uleb128 0x27
 987 0061 19       		.uleb128 0x19
 988 0062 11       		.uleb128 0x11
 989 0063 01       		.uleb128 0x1
 990 0064 12       		.uleb128 0x12
 991 0065 06       		.uleb128 0x6
 992 0066 40       		.uleb128 0x40
 993 0067 18       		.uleb128 0x18
 994 0068 9742     		.uleb128 0x2117
 995 006a 19       		.uleb128 0x19
 996 006b 01       		.uleb128 0x1
 997 006c 13       		.uleb128 0x13
 998 006d 00       		.byte	0
 999 006e 00       		.byte	0
 1000 006f 08       		.uleb128 0x8
 1001 0070 05       		.uleb128 0x5
 1002 0071 00       		.byte	0
 1003 0072 03       		.uleb128 0x3
 1004 0073 0E       		.uleb128 0xe
 1005 0074 3A       		.uleb128 0x3a
 1006 0075 0B       		.uleb128 0xb
 1007 0076 3B       		.uleb128 0x3b
 1008 0077 0B       		.uleb128 0xb
 1009 0078 49       		.uleb128 0x49
 1010 0079 13       		.uleb128 0x13
ARM GAS  C:\Users\Blayke\AppData\Local\Temp\ccwq0WqJ.s 			page 29


 1011 007a 02       		.uleb128 0x2
 1012 007b 18       		.uleb128 0x18
 1013 007c 00       		.byte	0
 1014 007d 00       		.byte	0
 1015 007e 09       		.uleb128 0x9
 1016 007f 2E       		.uleb128 0x2e
 1017 0080 00       		.byte	0
 1018 0081 3F       		.uleb128 0x3f
 1019 0082 19       		.uleb128 0x19
 1020 0083 03       		.uleb128 0x3
 1021 0084 0E       		.uleb128 0xe
 1022 0085 3A       		.uleb128 0x3a
 1023 0086 0B       		.uleb128 0xb
 1024 0087 3B       		.uleb128 0x3b
 1025 0088 05       		.uleb128 0x5
 1026 0089 27       		.uleb128 0x27
 1027 008a 19       		.uleb128 0x19
 1028 008b 49       		.uleb128 0x49
 1029 008c 13       		.uleb128 0x13
 1030 008d 11       		.uleb128 0x11
 1031 008e 01       		.uleb128 0x1
 1032 008f 12       		.uleb128 0x12
 1033 0090 06       		.uleb128 0x6
 1034 0091 40       		.uleb128 0x40
 1035 0092 18       		.uleb128 0x18
 1036 0093 9742     		.uleb128 0x2117
 1037 0095 19       		.uleb128 0x19
 1038 0096 00       		.byte	0
 1039 0097 00       		.byte	0
 1040 0098 0A       		.uleb128 0xa
 1041 0099 2E       		.uleb128 0x2e
 1042 009a 01       		.byte	0x1
 1043 009b 3F       		.uleb128 0x3f
 1044 009c 19       		.uleb128 0x19
 1045 009d 03       		.uleb128 0x3
 1046 009e 0E       		.uleb128 0xe
 1047 009f 3A       		.uleb128 0x3a
 1048 00a0 0B       		.uleb128 0xb
 1049 00a1 3B       		.uleb128 0x3b
 1050 00a2 05       		.uleb128 0x5
 1051 00a3 27       		.uleb128 0x27
 1052 00a4 19       		.uleb128 0x19
 1053 00a5 11       		.uleb128 0x11
 1054 00a6 01       		.uleb128 0x1
 1055 00a7 12       		.uleb128 0x12
 1056 00a8 06       		.uleb128 0x6
 1057 00a9 40       		.uleb128 0x40
 1058 00aa 18       		.uleb128 0x18
 1059 00ab 9742     		.uleb128 0x2117
 1060 00ad 19       		.uleb128 0x19
 1061 00ae 01       		.uleb128 0x1
 1062 00af 13       		.uleb128 0x13
 1063 00b0 00       		.byte	0
 1064 00b1 00       		.byte	0
 1065 00b2 0B       		.uleb128 0xb
 1066 00b3 05       		.uleb128 0x5
 1067 00b4 00       		.byte	0
ARM GAS  C:\Users\Blayke\AppData\Local\Temp\ccwq0WqJ.s 			page 30


 1068 00b5 03       		.uleb128 0x3
 1069 00b6 0E       		.uleb128 0xe
 1070 00b7 3A       		.uleb128 0x3a
 1071 00b8 0B       		.uleb128 0xb
 1072 00b9 3B       		.uleb128 0x3b
 1073 00ba 05       		.uleb128 0x5
 1074 00bb 49       		.uleb128 0x49
 1075 00bc 13       		.uleb128 0x13
 1076 00bd 02       		.uleb128 0x2
 1077 00be 18       		.uleb128 0x18
 1078 00bf 00       		.byte	0
 1079 00c0 00       		.byte	0
 1080 00c1 0C       		.uleb128 0xc
 1081 00c2 898201   		.uleb128 0x4109
 1082 00c5 00       		.byte	0
 1083 00c6 11       		.uleb128 0x11
 1084 00c7 01       		.uleb128 0x1
 1085 00c8 31       		.uleb128 0x31
 1086 00c9 13       		.uleb128 0x13
 1087 00ca 00       		.byte	0
 1088 00cb 00       		.byte	0
 1089 00cc 0D       		.uleb128 0xd
 1090 00cd 34       		.uleb128 0x34
 1091 00ce 00       		.byte	0
 1092 00cf 03       		.uleb128 0x3
 1093 00d0 0E       		.uleb128 0xe
 1094 00d1 3A       		.uleb128 0x3a
 1095 00d2 0B       		.uleb128 0xb
 1096 00d3 3B       		.uleb128 0x3b
 1097 00d4 0B       		.uleb128 0xb
 1098 00d5 49       		.uleb128 0x49
 1099 00d6 13       		.uleb128 0x13
 1100 00d7 02       		.uleb128 0x2
 1101 00d8 17       		.uleb128 0x17
 1102 00d9 00       		.byte	0
 1103 00da 00       		.byte	0
 1104 00db 0E       		.uleb128 0xe
 1105 00dc 898201   		.uleb128 0x4109
 1106 00df 01       		.byte	0x1
 1107 00e0 11       		.uleb128 0x11
 1108 00e1 01       		.uleb128 0x1
 1109 00e2 31       		.uleb128 0x31
 1110 00e3 13       		.uleb128 0x13
 1111 00e4 01       		.uleb128 0x1
 1112 00e5 13       		.uleb128 0x13
 1113 00e6 00       		.byte	0
 1114 00e7 00       		.byte	0
 1115 00e8 0F       		.uleb128 0xf
 1116 00e9 8A8201   		.uleb128 0x410a
 1117 00ec 00       		.byte	0
 1118 00ed 02       		.uleb128 0x2
 1119 00ee 18       		.uleb128 0x18
 1120 00ef 9142     		.uleb128 0x2111
 1121 00f1 18       		.uleb128 0x18
 1122 00f2 00       		.byte	0
 1123 00f3 00       		.byte	0
 1124 00f4 10       		.uleb128 0x10
ARM GAS  C:\Users\Blayke\AppData\Local\Temp\ccwq0WqJ.s 			page 31


 1125 00f5 34       		.uleb128 0x34
 1126 00f6 00       		.byte	0
 1127 00f7 03       		.uleb128 0x3
 1128 00f8 0E       		.uleb128 0xe
 1129 00f9 3A       		.uleb128 0x3a
 1130 00fa 0B       		.uleb128 0xb
 1131 00fb 3B       		.uleb128 0x3b
 1132 00fc 0B       		.uleb128 0xb
 1133 00fd 49       		.uleb128 0x49
 1134 00fe 13       		.uleb128 0x13
 1135 00ff 3F       		.uleb128 0x3f
 1136 0100 19       		.uleb128 0x19
 1137 0101 02       		.uleb128 0x2
 1138 0102 18       		.uleb128 0x18
 1139 0103 00       		.byte	0
 1140 0104 00       		.byte	0
 1141 0105 11       		.uleb128 0x11
 1142 0106 2E       		.uleb128 0x2e
 1143 0107 00       		.byte	0
 1144 0108 3F       		.uleb128 0x3f
 1145 0109 19       		.uleb128 0x19
 1146 010a 3C       		.uleb128 0x3c
 1147 010b 19       		.uleb128 0x19
 1148 010c 6E       		.uleb128 0x6e
 1149 010d 0E       		.uleb128 0xe
 1150 010e 03       		.uleb128 0x3
 1151 010f 0E       		.uleb128 0xe
 1152 0110 3A       		.uleb128 0x3a
 1153 0111 0B       		.uleb128 0xb
 1154 0112 3B       		.uleb128 0x3b
 1155 0113 0B       		.uleb128 0xb
 1156 0114 00       		.byte	0
 1157 0115 00       		.byte	0
 1158 0116 00       		.byte	0
 1159              		.section	.debug_loc,"",%progbits
 1160              	.Ldebug_loc0:
 1161              	.LLST0:
 1162 0000 0A000000 		.4byte	.LVL7
 1163 0004 0E000000 		.4byte	.LVL8
 1164 0008 0100     		.2byte	0x1
 1165 000a 52       		.byte	0x52
 1166 000b 0E000000 		.4byte	.LVL8
 1167 000f 12000000 		.4byte	.LVL9
 1168 0013 0200     		.2byte	0x2
 1169 0015 73       		.byte	0x73
 1170 0016 00       		.sleb128 0
 1171 0017 12000000 		.4byte	.LVL9
 1172 001b 17000000 		.4byte	.LVL10-1
 1173 001f 0100     		.2byte	0x1
 1174 0021 52       		.byte	0x52
 1175 0022 00000000 		.4byte	0
 1176 0026 00000000 		.4byte	0
 1177              	.LLST1:
 1178 002a 3A000000 		.4byte	.LVL16
 1179 002e 47000000 		.4byte	.LVL17-1
 1180 0032 0100     		.2byte	0x1
 1181 0034 50       		.byte	0x50
ARM GAS  C:\Users\Blayke\AppData\Local\Temp\ccwq0WqJ.s 			page 32


 1182 0035 00000000 		.4byte	0
 1183 0039 00000000 		.4byte	0
 1184              		.section	.debug_aranges,"",%progbits
 1185 0000 94000000 		.4byte	0x94
 1186 0004 0200     		.2byte	0x2
 1187 0006 00000000 		.4byte	.Ldebug_info0
 1188 000a 04       		.byte	0x4
 1189 000b 00       		.byte	0
 1190 000c 0000     		.2byte	0
 1191 000e 0000     		.2byte	0
 1192 0010 00000000 		.4byte	.LFB1
 1193 0014 10000000 		.4byte	.LFE1-.LFB1
 1194 0018 00000000 		.4byte	.LFB3
 1195 001c 10000000 		.4byte	.LFE3-.LFB3
 1196 0020 00000000 		.4byte	.LFB4
 1197 0024 0C000000 		.4byte	.LFE4-.LFB4
 1198 0028 00000000 		.4byte	.LFB5
 1199 002c 0C000000 		.4byte	.LFE5-.LFB5
 1200 0030 00000000 		.4byte	.LFB6
 1201 0034 0C000000 		.4byte	.LFE6-.LFB6
 1202 0038 00000000 		.4byte	.LFB7
 1203 003c 0C000000 		.4byte	.LFE7-.LFB7
 1204 0040 00000000 		.4byte	.LFB8
 1205 0044 0C000000 		.4byte	.LFE8-.LFB8
 1206 0048 00000000 		.4byte	.LFB9
 1207 004c 14000000 		.4byte	.LFE9-.LFB9
 1208 0050 00000000 		.4byte	.LFB10
 1209 0054 0C000000 		.4byte	.LFE10-.LFB10
 1210 0058 00000000 		.4byte	.LFB11
 1211 005c 0C000000 		.4byte	.LFE11-.LFB11
 1212 0060 00000000 		.4byte	.LFB12
 1213 0064 0C000000 		.4byte	.LFE12-.LFB12
 1214 0068 00000000 		.4byte	.LFB13
 1215 006c 0C000000 		.4byte	.LFE13-.LFB13
 1216 0070 00000000 		.4byte	.LFB14
 1217 0074 0C000000 		.4byte	.LFE14-.LFB14
 1218 0078 00000000 		.4byte	.LFB15
 1219 007c 14000000 		.4byte	.LFE15-.LFB15
 1220 0080 00000000 		.4byte	.LFB0
 1221 0084 54000000 		.4byte	.LFE0-.LFB0
 1222 0088 00000000 		.4byte	.LFB2
 1223 008c 1C000000 		.4byte	.LFE2-.LFB2
 1224 0090 00000000 		.4byte	0
 1225 0094 00000000 		.4byte	0
 1226              		.section	.debug_ranges,"",%progbits
 1227              	.Ldebug_ranges0:
 1228 0000 00000000 		.4byte	.LFB1
 1229 0004 10000000 		.4byte	.LFE1
 1230 0008 00000000 		.4byte	.LFB3
 1231 000c 10000000 		.4byte	.LFE3
 1232 0010 00000000 		.4byte	.LFB4
 1233 0014 0C000000 		.4byte	.LFE4
 1234 0018 00000000 		.4byte	.LFB5
 1235 001c 0C000000 		.4byte	.LFE5
 1236 0020 00000000 		.4byte	.LFB6
 1237 0024 0C000000 		.4byte	.LFE6
 1238 0028 00000000 		.4byte	.LFB7
ARM GAS  C:\Users\Blayke\AppData\Local\Temp\ccwq0WqJ.s 			page 33


 1239 002c 0C000000 		.4byte	.LFE7
 1240 0030 00000000 		.4byte	.LFB8
 1241 0034 0C000000 		.4byte	.LFE8
 1242 0038 00000000 		.4byte	.LFB9
 1243 003c 14000000 		.4byte	.LFE9
 1244 0040 00000000 		.4byte	.LFB10
 1245 0044 0C000000 		.4byte	.LFE10
 1246 0048 00000000 		.4byte	.LFB11
 1247 004c 0C000000 		.4byte	.LFE11
 1248 0050 00000000 		.4byte	.LFB12
 1249 0054 0C000000 		.4byte	.LFE12
 1250 0058 00000000 		.4byte	.LFB13
 1251 005c 0C000000 		.4byte	.LFE13
 1252 0060 00000000 		.4byte	.LFB14
 1253 0064 0C000000 		.4byte	.LFE14
 1254 0068 00000000 		.4byte	.LFB15
 1255 006c 14000000 		.4byte	.LFE15
 1256 0070 00000000 		.4byte	.LFB0
 1257 0074 54000000 		.4byte	.LFE0
 1258 0078 00000000 		.4byte	.LFB2
 1259 007c 1C000000 		.4byte	.LFE2
 1260 0080 00000000 		.4byte	0
 1261 0084 00000000 		.4byte	0
 1262              		.section	.debug_line,"",%progbits
 1263              	.Ldebug_line0:
 1264 0000 92010000 		.section	.debug_str,"MS",%progbits,1
 1264      02005E00 
 1264      00000201 
 1264      FB0E0D00 
 1264      01010101 
 1265              	.LASF15:
 1266 0000 72656731 		.ascii	"reg16\000"
 1266      3600
 1267              	.LASF37:
 1268 0006 4D6F746F 		.ascii	"Motor_1_Encoder_Counts_Init\000"
 1268      725F315F 
 1268      456E636F 
 1268      6465725F 
 1268      436F756E 
 1269              	.LASF11:
 1270 0022 666C6F61 		.ascii	"float\000"
 1270      7400
 1271              	.LASF31:
 1272 0028 70657269 		.ascii	"period\000"
 1272      6F6400
 1273              	.LASF3:
 1274 002f 73686F72 		.ascii	"short unsigned int\000"
 1274      7420756E 
 1274      7369676E 
 1274      65642069 
 1274      6E7400
 1275              	.LASF28:
 1276 0042 4D6F746F 		.ascii	"Motor_1_Encoder_Counts_ReadCounter\000"
 1276      725F315F 
 1276      456E636F 
 1276      6465725F 
 1276      436F756E 
ARM GAS  C:\Users\Blayke\AppData\Local\Temp\ccwq0WqJ.s 			page 34


 1277              	.LASF21:
 1278 0065 4D6F746F 		.ascii	"Motor_1_Encoder_Counts_ReadControlRegister\000"
 1278      725F315F 
 1278      456E636F 
 1278      6465725F 
 1278      436F756E 
 1279              	.LASF32:
 1280 0090 4D6F746F 		.ascii	"Motor_1_Encoder_Counts_ReadPeriod\000"
 1280      725F315F 
 1280      456E636F 
 1280      6465725F 
 1280      436F756E 
 1281              	.LASF45:
 1282 00b2 453A5C44 		.ascii	"E:\\Documents\\Uni S12019 Notes\\ECE3091\\Temp Clon"
 1282      6F63756D 
 1282      656E7473 
 1282      5C556E69 
 1282      20533132 
 1283 00e1 655C4543 		.ascii	"e\\ECE3091_Group17\\Group17RobotReal\\Group17Robot."
 1283      45333039 
 1283      315F4772 
 1283      6F757031 
 1283      375C4772 
 1284 0111 63796473 		.ascii	"cydsn\000"
 1284      6E00
 1285              	.LASF27:
 1286 0117 636F756E 		.ascii	"counter\000"
 1286      74657200 
 1287              	.LASF7:
 1288 011f 6C6F6E67 		.ascii	"long long unsigned int\000"
 1288      206C6F6E 
 1288      6720756E 
 1288      7369676E 
 1288      65642069 
 1289              	.LASF33:
 1290 0136 4D6F746F 		.ascii	"Motor_1_Encoder_Counts_WriteCompare\000"
 1290      725F315F 
 1290      456E636F 
 1290      6465725F 
 1290      436F756E 
 1291              	.LASF23:
 1292 015a 4D6F746F 		.ascii	"Motor_1_Encoder_Counts_WriteControlRegister\000"
 1292      725F315F 
 1292      456E636F 
 1292      6465725F 
 1292      436F756E 
 1293              	.LASF1:
 1294 0186 756E7369 		.ascii	"unsigned char\000"
 1294      676E6564 
 1294      20636861 
 1294      7200
 1295              	.LASF43:
 1296 0194 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 1296      43313120 
 1296      352E342E 
 1296      31203230 
 1296      31363036 
ARM GAS  C:\Users\Blayke\AppData\Local\Temp\ccwq0WqJ.s 			page 35


 1297 01c7 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 1297      20726576 
 1297      6973696F 
 1297      6E203233 
 1297      37373135 
 1298 01fa 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 1298      66756E63 
 1298      74696F6E 
 1298      2D736563 
 1298      74696F6E 
 1299              	.LASF14:
 1300 0222 72656738 		.ascii	"reg8\000"
 1300      00
 1301              	.LASF5:
 1302 0227 6C6F6E67 		.ascii	"long unsigned int\000"
 1302      20756E73 
 1302      69676E65 
 1302      6420696E 
 1302      7400
 1303              	.LASF9:
 1304 0239 75696E74 		.ascii	"uint8\000"
 1304      3800
 1305              	.LASF40:
 1306 023f 4D6F746F 		.ascii	"Motor_1_Encoder_Counts_Start\000"
 1306      725F315F 
 1306      456E636F 
 1306      6465725F 
 1306      436F756E 
 1307              	.LASF24:
 1308 025c 696E7465 		.ascii	"interruptsMask\000"
 1308      72727570 
 1308      74734D61 
 1308      736B00
 1309              	.LASF19:
 1310 026b 4D6F746F 		.ascii	"Motor_1_Encoder_Counts_Stop\000"
 1310      725F315F 
 1310      456E636F 
 1310      6465725F 
 1310      436F756E 
 1311              	.LASF12:
 1312 0287 646F7562 		.ascii	"double\000"
 1312      6C6500
 1313              	.LASF22:
 1314 028e 4D6F746F 		.ascii	"Motor_1_Encoder_Counts_SetInterruptMode\000"
 1314      725F315F 
 1314      456E636F 
 1314      6465725F 
 1314      436F756E 
 1315              	.LASF10:
 1316 02b6 75696E74 		.ascii	"uint16\000"
 1316      313600
 1317              	.LASF26:
 1318 02bd 4D6F746F 		.ascii	"Motor_1_Encoder_Counts_WriteCounter\000"
 1318      725F315F 
 1318      456E636F 
 1318      6465725F 
 1318      436F756E 
ARM GAS  C:\Users\Blayke\AppData\Local\Temp\ccwq0WqJ.s 			page 36


 1319              	.LASF20:
 1320 02e1 4D6F746F 		.ascii	"Motor_1_Encoder_Counts_ReadStatusRegister\000"
 1320      725F315F 
 1320      456E636F 
 1320      6465725F 
 1320      436F756E 
 1321              	.LASF41:
 1322 030b 4379456E 		.ascii	"CyEnterCriticalSection\000"
 1322      74657243 
 1322      72697469 
 1322      63616C53 
 1322      65637469 
 1323              	.LASF8:
 1324 0322 756E7369 		.ascii	"unsigned int\000"
 1324      676E6564 
 1324      20696E74 
 1324      00
 1325              	.LASF42:
 1326 032f 43794578 		.ascii	"CyExitCriticalSection\000"
 1326      69744372 
 1326      69746963 
 1326      616C5365 
 1326      6374696F 
 1327              	.LASF44:
 1328 0345 47656E65 		.ascii	"Generated_Source\\PSoC5\\Motor_1_Encoder_Counts.c\000"
 1328      72617465 
 1328      645F536F 
 1328      75726365 
 1328      5C50536F 
 1329              	.LASF38:
 1330 0375 6374726C 		.ascii	"ctrl\000"
 1330      00
 1331              	.LASF17:
 1332 037a 73697A65 		.ascii	"sizetype\000"
 1332      74797065 
 1332      00
 1333              	.LASF39:
 1334 0383 4D6F746F 		.ascii	"Motor_1_Encoder_Counts_interruptState\000"
 1334      725F315F 
 1334      456E636F 
 1334      6465725F 
 1334      436F756E 
 1335              	.LASF6:
 1336 03a9 6C6F6E67 		.ascii	"long long int\000"
 1336      206C6F6E 
 1336      6720696E 
 1336      7400
 1337              	.LASF13:
 1338 03b7 63686172 		.ascii	"char\000"
 1338      00
 1339              	.LASF18:
 1340 03bc 4D6F746F 		.ascii	"Motor_1_Encoder_Counts_Enable\000"
 1340      725F315F 
 1340      456E636F 
 1340      6465725F 
 1340      436F756E 
 1341              	.LASF46:
ARM GAS  C:\Users\Blayke\AppData\Local\Temp\ccwq0WqJ.s 			page 37


 1342 03da 4D6F746F 		.ascii	"Motor_1_Encoder_Counts_initVar\000"
 1342      725F315F 
 1342      456E636F 
 1342      6465725F 
 1342      436F756E 
 1343              	.LASF2:
 1344 03f9 73686F72 		.ascii	"short int\000"
 1344      7420696E 
 1344      7400
 1345              	.LASF30:
 1346 0403 4D6F746F 		.ascii	"Motor_1_Encoder_Counts_WritePeriod\000"
 1346      725F315F 
 1346      456E636F 
 1346      6465725F 
 1346      436F756E 
 1347              	.LASF36:
 1348 0426 4D6F746F 		.ascii	"Motor_1_Encoder_Counts_ClearFIFO\000"
 1348      725F315F 
 1348      456E636F 
 1348      6465725F 
 1348      436F756E 
 1349              	.LASF35:
 1350 0447 4D6F746F 		.ascii	"Motor_1_Encoder_Counts_ReadCompare\000"
 1350      725F315F 
 1350      456E636F 
 1350      6465725F 
 1350      436F756E 
 1351              	.LASF25:
 1352 046a 636F6E74 		.ascii	"control\000"
 1352      726F6C00 
 1353              	.LASF4:
 1354 0472 6C6F6E67 		.ascii	"long int\000"
 1354      20696E74 
 1354      00
 1355              	.LASF29:
 1356 047b 4D6F746F 		.ascii	"Motor_1_Encoder_Counts_ReadCapture\000"
 1356      725F315F 
 1356      456E636F 
 1356      6465725F 
 1356      436F756E 
 1357              	.LASF16:
 1358 049e 6C6F6E67 		.ascii	"long double\000"
 1358      20646F75 
 1358      626C6500 
 1359              	.LASF0:
 1360 04aa 7369676E 		.ascii	"signed char\000"
 1360      65642063 
 1360      68617200 
 1361              	.LASF34:
 1362 04b6 636F6D70 		.ascii	"compare\000"
 1362      61726500 
 1363              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
