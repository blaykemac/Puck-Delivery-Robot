ARM GAS  C:\Users\Misha\AppData\Local\Temp\cckoGjaV.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.TIH,"ax",%progbits
  20              		.align	2
  21              		.global	TIH
  22              		.thumb
  23              		.thumb_func
  24              		.type	TIH, %function
  25              	TIH:
  26              	.LFB64:
  27              		.file 1 "main.c"
   1:main.c        ****  
   2:main.c        **** /* ========================================
   3:main.c        ****  *
   4:main.c        ****  * Copyright Group 17, 2019
   5:main.c        ****  * All Rights Reserved
   6:main.c        ****  * UNPUBLISHED, LICENSED SOFTWARE.
   7:main.c        ****  *
   8:main.c        ****  * CONFIDENTIAL AND PROPRIETARY INFORMATION
   9:main.c        ****  * WHICH IS THE PROPERTY OF Blayke, Misha, Nidhin.
  10:main.c        ****  *
  11:main.c        ****  * ========================================
  12:main.c        **** */
  13:main.c        **** 
  14:main.c        **** // * PSOC LIBRARY * //
  15:main.c        **** #include "project.h"
  16:main.c        **** 
  17:main.c        **** // * C LIBRARIES * // 
  18:main.c        **** #include <stdlib.h>
  19:main.c        **** #include <stdio.h>
  20:main.c        **** #include <math.h>
  21:main.c        **** 
  22:main.c        **** // * OUR LIBRARIES * //
  23:main.c        **** #include "main.h"
  24:main.c        **** #include "colour.h"
  25:main.c        **** #include "ultrasonic.h" 
  26:main.c        **** #include "servo.h"
  27:main.c        **** #include "motor.h"
  28:main.c        **** #include "customMath.h"
  29:main.c        **** #include "navigation.h"
  30:main.c        **** #include "debugging.h"
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cckoGjaV.s 			page 2


  31:main.c        **** 
  32:main.c        **** 
  33:main.c        **** extern char output[32];   
  34:main.c        **** 
  35:main.c        **** // * STATE VARIABLES * //
  36:main.c        **** int state = STATE_PRE_RUN;
  37:main.c        **** float block_edge_location[4] = {0,0,0,0}; // N E S W edge positions respectively
  38:main.c        **** 
  39:main.c        **** // * PUCK CONSTRUCTION VARIABLES * //
  40:main.c        **** int current_puck_stack_size = 0; // How many pucks are currently on the construction plate
  41:main.c        **** int puck_rack_scans[5] = {BLANK,BLANK,BLANK,BLANK,BLANK}; // 5 slots in puck rack.
  42:main.c        **** int puck_construction_plan[3] = {BLANK,BLANK,BLANK};
  43:main.c        **** int puck_rack_west_offsets[5] = {PUCK_RACK_0_WEST_DISTANCE,
  44:main.c        ****                                 PUCK_RACK_1_WEST_DISTANCE,
  45:main.c        ****                                 PUCK_RACK_2_WEST_DISTANCE,
  46:main.c        ****                                 PUCK_RACK_3_WEST_DISTANCE,
  47:main.c        ****                                 PUCK_RACK_4_WEST_DISTANCE };
  48:main.c        **** 
  49:main.c        **** int puck_temp_pile[2] = {BLANK,BLANK}; // Index 0 refers to east home base edge, 1 refers to west h
  50:main.c        **** 
  51:main.c        **** // * NAVIGATION AND POSITION VARIABLES * //
  52:main.c        **** 
  53:main.c        **** int begin_navigation = 0; // Allow us to break out of the intial phase when powered up
  54:main.c        **** int block_location[4] = {0,0,0,0};      // The block location values
  55:main.c        ****                                         //#define NORTH 0
  56:main.c        ****                                         //#define EAST 1
  57:main.c        ****                                         //#define SOUTH 2
  58:main.c        ****                                         //#define WEST 3
  59:main.c        **** int puck_location[4] = {0,0,0,0};       // The block location values
  60:main.c        ****                                         //#define NORTH 0
  61:main.c        ****                                         //#define EAST 1
  62:main.c        ****                                         //#define SOUTH 2
  63:main.c        ****                                         //#define WEST 3
  64:main.c        **** 
  65:main.c        **** int safety_override = FALSE;            
  66:main.c        **** 
  67:main.c        **** // These block clearance variables are only true if we have enough room either side of the block to
  68:main.c        **** // And only true for the puck clearance variables if there is enough room to be able to turn at the
  69:main.c        **** short int block_east_clearance = 0;
  70:main.c        **** short int block_west_clearance = 0;
  71:main.c        **** short int puck_east_clearance = 0;
  72:main.c        **** short int puck_west_clearance = 0;
  73:main.c        **** 
  74:main.c        **** // * COLOUR VARIABLES * //
  75:main.c        **** 
  76:main.c        **** int idac_value = 0;  
  77:main.c        **** int colour_flag = 1;                    // sets which photodiode to use 
  78:main.c        **** int colour_sensing_algorithm = 0;      // Determines which colour sensing algorithm to use:
  79:main.c        ****                                                 // 0: Wall algorithm
  80:main.c        ****                                             // 1: Claw algorithm
  81:main.c        ****                                                 // 2: old algorithm
  82:main.c        **** 
  83:main.c        **** int moving = 0; // Temp to stop while loop from repeated runs of scanning plan code
  84:main.c        **** 
  85:main.c        **** const int PLAN_SCAN_VERTICAL = 10; // Set to ultrasonic distance at the home base 
  86:main.c        **** 
  87:main.c        **** int current_stage = 1;      // There are 3 stages, we start at 1
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cckoGjaV.s 			page 3


  88:main.c        **** 
  89:main.c        **** 
  90:main.c        **** // GLOBAL VARIABLE
  91:main.c        **** int distance_returned_global;
  92:main.c        **** 
  93:main.c        **** 
  94:main.c        **** // * INTERRUPT HANDLING * // 
  95:main.c        **** CY_ISR(TIH)                             // Ultrasonic ISR Definition
  96:main.c        **** {
  28              		.loc 1 96 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 08B5     		push	{r3, lr}
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 3, -8
  35              		.cfi_offset 14, -4
  97:main.c        ****     ultrasonicInterruptHandler();
  36              		.loc 1 97 0
  37 0002 FFF7FEFF 		bl	ultrasonicInterruptHandler
  38              	.LVL0:
  39 0006 08BD     		pop	{r3, pc}
  40              		.cfi_endproc
  41              	.LFE64:
  42              		.size	TIH, .-TIH
  43              		.section	.text.StartIH,"ax",%progbits
  44              		.align	2
  45              		.global	StartIH
  46              		.thumb
  47              		.thumb_func
  48              		.type	StartIH, %function
  49              	StartIH:
  50              	.LFB65:
  98:main.c        **** }
  99:main.c        **** 
 100:main.c        **** CY_ISR(StartIH)                             // Ultrasonic ISR Definition
 101:main.c        **** {
  51              		.loc 1 101 0
  52              		.cfi_startproc
  53              		@ args = 0, pretend = 0, frame = 0
  54              		@ frame_needed = 0, uses_anonymous_args = 0
  55 0000 08B5     		push	{r3, lr}
  56              		.cfi_def_cfa_offset 8
  57              		.cfi_offset 3, -8
  58              		.cfi_offset 14, -4
 102:main.c        ****     CyDelay(100);
  59              		.loc 1 102 0
  60 0002 6420     		movs	r0, #100
  61 0004 FFF7FEFF 		bl	CyDelay
  62              	.LVL1:
 103:main.c        ****     if (begin_navigation){
  63              		.loc 1 103 0
  64 0008 044B     		ldr	r3, .L6
  65 000a 1B68     		ldr	r3, [r3]
  66 000c 2BB1     		cbz	r3, .L3
 104:main.c        ****         UART_1_PutString("Beginning Navigation \n");
  67              		.loc 1 104 0
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cckoGjaV.s 			page 4


  68 000e 0448     		ldr	r0, .L6+4
  69 0010 FFF7FEFF 		bl	UART_1_PutString
  70              	.LVL2:
 105:main.c        ****         //state = STATE_SCAN_PLAN; // Put to this for competition
 106:main.c        ****         state = STATE_LOCATE_BLOCK_AND_PUCKS;
  71              		.loc 1 106 0
  72 0014 0222     		movs	r2, #2
  73 0016 014B     		ldr	r3, .L6
  74 0018 5A60     		str	r2, [r3, #4]
  75              	.L3:
  76 001a 08BD     		pop	{r3, pc}
  77              	.L7:
  78              		.align	2
  79              	.L6:
  80 001c 00000000 		.word	.LANCHOR0
  81 0020 00000000 		.word	.LC0
  82              		.cfi_endproc
  83              	.LFE65:
  84              		.size	StartIH, .-StartIH
  85              		.section	.text.SAIH,"ax",%progbits
  86              		.align	2
  87              		.global	SAIH
  88              		.thumb
  89              		.thumb_func
  90              		.type	SAIH, %function
  91              	SAIH:
  92              	.LFB66:
 107:main.c        ****     }
 108:main.c        **** }
 109:main.c        **** 
 110:main.c        **** CY_ISR(SAIH)                             // 
 111:main.c        **** {
  93              		.loc 1 111 0
  94              		.cfi_startproc
  95              		@ args = 0, pretend = 0, frame = 0
  96              		@ frame_needed = 0, uses_anonymous_args = 0
  97 0000 08B5     		push	{r3, lr}
  98              		.cfi_def_cfa_offset 8
  99              		.cfi_offset 3, -8
 100              		.cfi_offset 14, -4
 112:main.c        ****     // Set a global variable 
 113:main.c        ****     Motor_Left_Driver_Sleep();                  // puts it back to sleep
 101              		.loc 1 113 0
 102 0002 FFF7FEFF 		bl	Motor_Left_Driver_Sleep
 103              	.LVL3:
 114:main.c        ****     Motor_Right_Driver_Sleep();
 104              		.loc 1 114 0
 105 0006 FFF7FEFF 		bl	Motor_Right_Driver_Sleep
 106              	.LVL4:
 115:main.c        ****     moveDynamic(-20,SPEED,TRUE);                // calls movedynamic
 107              		.loc 1 115 0
 108 000a 0122     		movs	r2, #1
 109 000c C821     		movs	r1, #200
 110 000e 6FF01300 		mvn	r0, #19
 111 0012 FFF7FEFF 		bl	moveDynamic
 112              	.LVL5:
 116:main.c        ****     moveDynamic(20, SPEED,TRUE);      
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cckoGjaV.s 			page 5


 113              		.loc 1 116 0
 114 0016 0122     		movs	r2, #1
 115 0018 C821     		movs	r1, #200
 116 001a 1420     		movs	r0, #20
 117 001c FFF7FEFF 		bl	moveDynamic
 118              	.LVL6:
 117:main.c        ****     Motor_Left_Driver_Wakeup();
 119              		.loc 1 117 0
 120 0020 FFF7FEFF 		bl	Motor_Left_Driver_Wakeup
 121              	.LVL7:
 118:main.c        ****     Motor_Left_Driver_WriteCompare(SPEED); // brings it back to continue the while loop
 122              		.loc 1 118 0
 123 0024 C820     		movs	r0, #200
 124 0026 FFF7FEFF 		bl	Motor_Left_Driver_WriteCompare
 125              	.LVL8:
 119:main.c        ****     Motor_Right_Driver_Wakeup();
 126              		.loc 1 119 0
 127 002a FFF7FEFF 		bl	Motor_Right_Driver_Wakeup
 128              	.LVL9:
 120:main.c        ****     Motor_Right_Driver_WriteCompare(SPEED);
 129              		.loc 1 120 0
 130 002e C820     		movs	r0, #200
 131 0030 FFF7FEFF 		bl	Motor_Right_Driver_WriteCompare
 132              	.LVL10:
 133 0034 08BD     		pop	{r3, pc}
 134              		.cfi_endproc
 135              	.LFE66:
 136              		.size	SAIH, .-SAIH
 137 0036 00BF     		.section	.text.main,"ax",%progbits
 138              		.align	2
 139              		.global	main
 140              		.thumb
 141              		.thumb_func
 142              		.type	main, %function
 143              	main:
 144              	.LFB67:
 121:main.c        **** }
 122:main.c        ****  
 123:main.c        **** 
 124:main.c        **** int main(void)
 125:main.c        **** {
 145              		.loc 1 125 0
 146              		.cfi_startproc
 147              		@ args = 0, pretend = 0, frame = 0
 148              		@ frame_needed = 0, uses_anonymous_args = 0
 149 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 150              		.cfi_def_cfa_offset 24
 151              		.cfi_offset 4, -24
 152              		.cfi_offset 5, -20
 153              		.cfi_offset 6, -16
 154              		.cfi_offset 7, -12
 155              		.cfi_offset 8, -8
 156              		.cfi_offset 14, -4
 157 0004 82B0     		sub	sp, sp, #8
 158              		.cfi_def_cfa_offset 32
 126:main.c        ****     CyGlobalIntEnable; /* Enable global interrupts. */
 159              		.loc 1 126 0
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cckoGjaV.s 			page 6


 160              		.syntax unified
 161              	@ 126 "main.c" 1
 162 0006 62B6     		CPSIE   i
 163              	@ 0 "" 2
 127:main.c        **** 
 128:main.c        ****     
 129:main.c        ****     TIA_1_Start();
 164              		.loc 1 129 0
 165              		.thumb
 166              		.syntax unified
 167 0008 FFF7FEFF 		bl	TIA_1_Start
 168              	.LVL11:
 130:main.c        ****     UART_1_Start();
 169              		.loc 1 130 0
 170 000c FFF7FEFF 		bl	UART_1_Start
 171              	.LVL12:
 131:main.c        ****     UART_1_PutString("UART commencing... \n");
 172              		.loc 1 131 0
 173 0010 BC48     		ldr	r0, .L56
 174 0012 FFF7FEFF 		bl	UART_1_PutString
 175              	.LVL13:
 132:main.c        ****     ADC_Start();
 176              		.loc 1 132 0
 177 0016 FFF7FEFF 		bl	ADC_Start
 178              	.LVL14:
 133:main.c        ****     IDAC8_1_Start();
 179              		.loc 1 133 0
 180 001a FFF7FEFF 		bl	IDAC8_1_Start
 181              	.LVL15:
 134:main.c        ****     
 135:main.c        ****     // DEBUGGING:
 136:main.c        ****         // Moved to debugging.c file, set it there
 137:main.c        ****     
 138:main.c        ****     
 139:main.c        ****     // IDAC initialisation: 
 140:main.c        ****     IDAC8_1_SetRange(IDAC8_1_RANGE_32uA);       // Sets the range between 0 and 32uA
 182              		.loc 1 140 0
 183 001e 0020     		movs	r0, #0
 184 0020 FFF7FEFF 		bl	IDAC8_1_SetRange
 185              	.LVL16:
 141:main.c        ****     IDAC8_1_SetValue(idac_value);               // set a value between 0 and 255
 186              		.loc 1 141 0
 187 0024 B84C     		ldr	r4, .L56+4
 188 0026 207A     		ldrb	r0, [r4, #8]	@ zero_extendqisi2
 189 0028 FFF7FEFF 		bl	IDAC8_1_SetValue
 190              	.LVL17:
 142:main.c        ****     
 143:main.c        ****     // Colour Sensing Initialisation & Debugging:
 144:main.c        ****     colour_sensing_algorithm = 0;
 191              		.loc 1 144 0
 192 002c 0025     		movs	r5, #0
 193 002e E560     		str	r5, [r4, #12]
 145:main.c        ****     control_photodiode_Write(colour_sensing_algorithm);            // controls which photodiode is 
 194              		.loc 1 145 0
 195 0030 2846     		mov	r0, r5
 196 0032 FFF7FEFF 		bl	control_photodiode_Write
 197              	.LVL18:
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cckoGjaV.s 			page 7


 146:main.c        ****                                                 // 0: wall
 147:main.c        ****                                                 // 1: claw
 148:main.c        ****     control_led_Write(1);   CyDelay(500);  // Ensures all the RGBs are working
 198              		.loc 1 148 0
 199 0036 0120     		movs	r0, #1
 200 0038 FFF7FEFF 		bl	control_led_Write
 201              	.LVL19:
 202 003c 4FF4FA70 		mov	r0, #500
 203 0040 FFF7FEFF 		bl	CyDelay
 204              	.LVL20:
 149:main.c        ****     control_led_Write(2);   CyDelay(500);
 205              		.loc 1 149 0
 206 0044 0220     		movs	r0, #2
 207 0046 FFF7FEFF 		bl	control_led_Write
 208              	.LVL21:
 209 004a 4FF4FA70 		mov	r0, #500
 210 004e FFF7FEFF 		bl	CyDelay
 211              	.LVL22:
 150:main.c        ****     control_led_Write(3);   CyDelay(500);
 212              		.loc 1 150 0
 213 0052 0320     		movs	r0, #3
 214 0054 FFF7FEFF 		bl	control_led_Write
 215              	.LVL23:
 216 0058 4FF4FA70 		mov	r0, #500
 217 005c FFF7FEFF 		bl	CyDelay
 218              	.LVL24:
 151:main.c        ****     control_led_Write(0);   CyDelay(500);
 219              		.loc 1 151 0
 220 0060 2846     		mov	r0, r5
 221 0062 FFF7FEFF 		bl	control_led_Write
 222              	.LVL25:
 223 0066 4FF4FA70 		mov	r0, #500
 224 006a FFF7FEFF 		bl	CyDelay
 225              	.LVL26:
 152:main.c        ****     colourSensingInitialise();                  // Initialises the colour sensor
 226              		.loc 1 152 0
 227 006e FFF7FEFF 		bl	colourSensingInitialise
 228              	.LVL27:
 153:main.c        ****     
 154:main.c        **** 
 155:main.c        ****     //Servos for the arm instatination
 156:main.c        ****     Rack_Servo_PWM_Start();
 229              		.loc 1 156 0
 230 0072 FFF7FEFF 		bl	Rack_Servo_PWM_Start
 231              	.LVL28:
 157:main.c        ****     Rack_Servo_PWM_WriteCompare(1000);          // BRINGs rack to highest position, so not to mess 
 232              		.loc 1 157 0
 233 0076 4FF47A70 		mov	r0, #1000
 234 007a FFF7FEFF 		bl	Rack_Servo_PWM_WriteCompare
 235              	.LVL29:
 158:main.c        ****     CyDelay(500);
 236              		.loc 1 158 0
 237 007e 4FF4FA70 		mov	r0, #500
 238 0082 FFF7FEFF 		bl	CyDelay
 239              	.LVL30:
 159:main.c        ****     Rack_Servo_PWM_Sleep();
 240              		.loc 1 159 0
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cckoGjaV.s 			page 8


 241 0086 FFF7FEFF 		bl	Rack_Servo_PWM_Sleep
 242              	.LVL31:
 160:main.c        ****     
 161:main.c        ****     Gripper_Servo_PWM_Start();
 243              		.loc 1 161 0
 244 008a FFF7FEFF 		bl	Gripper_Servo_PWM_Start
 245              	.LVL32:
 162:main.c        ****     Gripper_Servo_PWM_WriteCompare(1120);       //This is the open gripper position
 246              		.loc 1 162 0
 247 008e 4FF48C60 		mov	r0, #1120
 248 0092 FFF7FEFF 		bl	Gripper_Servo_PWM_WriteCompare
 249              	.LVL33:
 163:main.c        ****     CyDelay(500);
 250              		.loc 1 163 0
 251 0096 4FF4FA70 		mov	r0, #500
 252 009a FFF7FEFF 		bl	CyDelay
 253              	.LVL34:
 164:main.c        ****     Gripper_Servo_PWM_Sleep();
 254              		.loc 1 164 0
 255 009e FFF7FEFF 		bl	Gripper_Servo_PWM_Sleep
 256              	.LVL35:
 165:main.c        ****     
 166:main.c        ****     // Motors Initialisation:
 167:main.c        ****     Motor_Left_Driver_Start();
 257              		.loc 1 167 0
 258 00a2 FFF7FEFF 		bl	Motor_Left_Driver_Start
 259              	.LVL36:
 168:main.c        ****     Motor_Right_Driver_Start();
 260              		.loc 1 168 0
 261 00a6 FFF7FEFF 		bl	Motor_Right_Driver_Start
 262              	.LVL37:
 169:main.c        ****     Motor_Left_Driver_WriteCompare(0);          // sets the motors to 0 so it will be smooth next t
 263              		.loc 1 169 0
 264 00aa 2846     		mov	r0, r5
 265 00ac FFF7FEFF 		bl	Motor_Left_Driver_WriteCompare
 266              	.LVL38:
 170:main.c        ****     Motor_Right_Driver_WriteCompare(0);
 267              		.loc 1 170 0
 268 00b0 2846     		mov	r0, r5
 269 00b2 FFF7FEFF 		bl	Motor_Right_Driver_WriteCompare
 270              	.LVL39:
 171:main.c        ****     Motor_Left_Driver_Sleep();                  // Puts motor to sleep
 271              		.loc 1 171 0
 272 00b6 FFF7FEFF 		bl	Motor_Left_Driver_Sleep
 273              	.LVL40:
 172:main.c        ****     Motor_Right_Driver_Sleep();                 // Puts motor to sleep
 274              		.loc 1 172 0
 275 00ba FFF7FEFF 		bl	Motor_Right_Driver_Sleep
 276              	.LVL41:
 173:main.c        ****     
 174:main.c        ****     Motor_Left_Decoder_Start();
 277              		.loc 1 174 0
 278 00be FFF7FEFF 		bl	Motor_Left_Decoder_Start
 279              	.LVL42:
 175:main.c        ****     Motor_Right_Decoder_Start();
 280              		.loc 1 175 0
 281 00c2 FFF7FEFF 		bl	Motor_Right_Decoder_Start
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cckoGjaV.s 			page 9


 282              	.LVL43:
 176:main.c        ****     
 177:main.c        ****     internal_orientation = WEST;                // robot initial starts in the West direction
 283              		.loc 1 177 0
 284 00c6 0326     		movs	r6, #3
 285 00c8 904B     		ldr	r3, .L56+8
 286 00ca 1E60     		str	r6, [r3]
 178:main.c        ****     
 179:main.c        ****     // Timer and ISR instantiation
 180:main.c        ****     Timer_1_Start();                
 287              		.loc 1 180 0
 288 00cc FFF7FEFF 		bl	Timer_1_Start
 289              	.LVL44:
 181:main.c        ****     Timer_1_ReadStatusRegister();
 290              		.loc 1 181 0
 291 00d0 FFF7FEFF 		bl	Timer_1_ReadStatusRegister
 292              	.LVL45:
 182:main.c        ****     Sonic_StartEx(TIH);
 293              		.loc 1 182 0
 294 00d4 8E48     		ldr	r0, .L56+12
 295 00d6 FFF7FEFF 		bl	Sonic_StartEx
 296              	.LVL46:
 183:main.c        ****     Start_StartEx(StartIH);
 297              		.loc 1 183 0
 298 00da 8E48     		ldr	r0, .L56+16
 299 00dc FFF7FEFF 		bl	Start_StartEx
 300              	.LVL47:
 184:main.c        ****     Straight_StartEx(SAIH);
 301              		.loc 1 184 0
 302 00e0 8D48     		ldr	r0, .L56+20
 303 00e2 FFF7FEFF 		bl	Straight_StartEx
 304              	.LVL48:
 185:main.c        ****     begin_navigation = 1; // Set to true after it has run ISR at least once
 305              		.loc 1 185 0
 306 00e6 0127     		movs	r7, #1
 307 00e8 2760     		str	r7, [r4]
 186:main.c        ****     
 187:main.c        ****     // Ultrasonic Initialisation & Calibration:
 188:main.c        ****     // The ultrasonics take several test measurements to ensure they are working
 189:main.c        ****         
 190:main.c        ****     UART_1_PutString("Ultrasonic Calibration tests: \n");
 308              		.loc 1 190 0
 309 00ea 8C48     		ldr	r0, .L56+24
 310 00ec FFF7FEFF 		bl	UART_1_PutString
 311              	.LVL49:
 191:main.c        ****     safetyDistanceCheck();
 312              		.loc 1 191 0
 313 00f0 FFF7FEFF 		bl	safetyDistanceCheck
 314              	.LVL50:
 192:main.c        ****     safetyDistanceCheck();
 315              		.loc 1 192 0
 316 00f4 FFF7FEFF 		bl	safetyDistanceCheck
 317              	.LVL51:
 193:main.c        ****     safetyDistanceCheck();
 318              		.loc 1 193 0
 319 00f8 FFF7FEFF 		bl	safetyDistanceCheck
 320              	.LVL52:
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cckoGjaV.s 			page 10


 194:main.c        ****     
 195:main.c        ****     // Straight adjust timer: 
 196:main.c        ****     Timer_straight_adjust_Start();              
 321              		.loc 1 196 0
 322 00fc FFF7FEFF 		bl	Timer_straight_adjust_Start
 323              	.LVL53:
 197:main.c        ****     Timer_straight_adjust_ReadStatusRegister();
 324              		.loc 1 197 0
 325 0100 FFF7FEFF 		bl	Timer_straight_adjust_ReadStatusRegister
 326              	.LVL54:
 198:main.c        ****     //Control_Reset_Straight_Write(0);
 199:main.c        ****     
 200:main.c        ****     // FORCING STATE:
 201:main.c        ****     // Manual state set for testing
 202:main.c        ****     state = STATE_PRE_RUN;
 327              		.loc 1 202 0
 328 0104 6560     		str	r5, [r4, #4]
 203:main.c        ****     puck_construction_plan[0] = RED;
 329              		.loc 1 203 0
 330 0106 2761     		str	r7, [r4, #16]
 204:main.c        ****     puck_construction_plan[1] = GREEN;
 331              		.loc 1 204 0
 332 0108 0223     		movs	r3, #2
 333 010a 6361     		str	r3, [r4, #20]
 205:main.c        ****     puck_construction_plan[2] = BLUE;
 334              		.loc 1 205 0
 335 010c A661     		str	r6, [r4, #24]
 336              	.LVL55:
 337              	.L53:
 206:main.c        ****     int block_and_puck_edge_midpoint = 0;
 207:main.c        ****     
 208:main.c        **** 
 209:main.c        ****     // Main Loop for States
 210:main.c        ****     
 211:main.c        ****     //while(1){}
 212:main.c        ****     
 213:main.c        ****     for(;;)
 214:main.c        ****     {
 215:main.c        **** 
 216:main.c        ****         if (state == STATE_PRE_RUN){
 217:main.c        ****         
 218:main.c        ****         }
 219:main.c        **** 
 220:main.c        ****         while(0){
 221:main.c        ****             distanceSensor(SIDE_LEFT);
 222:main.c        ****             CyDelay(60);
 223:main.c        ****             sprintf(output, "%d \t", sensor_distances[SIDE_LEFT]);
 224:main.c        ****             UART_1_PutString(output);
 225:main.c        ****         }
 226:main.c        **** 
 227:main.c        **** // *** 1. STATE SCAN PLAN: *** // 
 228:main.c        **** //
 229:main.c        ****         
 230:main.c        ****       
 231:main.c        ****         if (state == STATE_SCAN_PLAN) {              // colour sensing, while switch has not been p
 338              		.loc 1 231 0
 339 010e 7E4B     		ldr	r3, .L56+4
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cckoGjaV.s 			page 11


 340 0110 5B68     		ldr	r3, [r3, #4]
 341 0112 012B     		cmp	r3, #1
 342 0114 78D1     		bne	.L11
 343              	.LBB2:
 232:main.c        **** 
 233:main.c        **** 
 234:main.c        ****             // Debugging: 
 235:main.c        **** 
 236:main.c        ****             ultimateDebugging();        // If any of the debugging flags are activated, this will b
 344              		.loc 1 236 0
 345 0116 FFF7FEFF 		bl	ultimateDebugging
 346              	.LVL56:
 237:main.c        ****             
 238:main.c        **** 
 239:main.c        ****             straightAdjust(FRONT_SENSORS);
 347              		.loc 1 239 0
 348 011a 0720     		movs	r0, #7
 349 011c FFF7FEFF 		bl	straightAdjust
 350              	.LVL57:
 240:main.c        ****             moveUntil(-100, BACKWARD, LESS_THAN, BACK_RIGHT, SPEED, TRUE);
 351              		.loc 1 240 0
 352 0120 0124     		movs	r4, #1
 353 0122 0194     		str	r4, [sp, #4]
 354 0124 C825     		movs	r5, #200
 355 0126 0095     		str	r5, [sp]
 356 0128 0423     		movs	r3, #4
 357 012a 2246     		mov	r2, r4
 358 012c 0021     		movs	r1, #0
 359 012e 6FF06300 		mvn	r0, #99
 360 0132 FFF7FEFF 		bl	moveUntil
 361              	.LVL58:
 241:main.c        ****             moveUntil(400, FORWARD, LESS_THAN, FRONT_LEFT, SPEED, TRUE);
 362              		.loc 1 241 0
 363 0136 0194     		str	r4, [sp, #4]
 364 0138 0095     		str	r5, [sp]
 365 013a 0023     		movs	r3, #0
 366 013c 2246     		mov	r2, r4
 367 013e 2146     		mov	r1, r4
 368 0140 4FF4C870 		mov	r0, #400
 369 0144 FFF7FEFF 		bl	moveUntil
 370              	.LVL59:
 242:main.c        ****             moveDynamic(-450, SPEED, TRUE);
 371              		.loc 1 242 0
 372 0148 2246     		mov	r2, r4
 373 014a 2946     		mov	r1, r5
 374 014c 7448     		ldr	r0, .L56+28
 375 014e FFF7FEFF 		bl	moveDynamic
 376              	.LVL60:
 243:main.c        ****             CyDelay(500);   
 377              		.loc 1 243 0
 378 0152 4FF4FA70 		mov	r0, #500
 379 0156 FFF7FEFF 		bl	CyDelay
 380              	.LVL61:
 244:main.c        ****             colourSensingInitialise();      // Initialises wall colour sensor against the black wal
 381              		.loc 1 244 0
 382 015a FFF7FEFF 		bl	colourSensingInitialise
 383              	.LVL62:
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cckoGjaV.s 			page 12


 245:main.c        ****             CyDelay(500);
 384              		.loc 1 245 0
 385 015e 4FF4FA70 		mov	r0, #500
 386 0162 FFF7FEFF 		bl	CyDelay
 387              	.LVL63:
 246:main.c        ****             moveDynamic(170, SPEED, TRUE);
 388              		.loc 1 246 0
 389 0166 2246     		mov	r2, r4
 390 0168 2946     		mov	r1, r5
 391 016a AA20     		movs	r0, #170
 392 016c FFF7FEFF 		bl	moveDynamic
 393              	.LVL64:
 247:main.c        ****             CyDelay(500);
 394              		.loc 1 247 0
 395 0170 4FF4FA70 		mov	r0, #500
 396 0174 FFF7FEFF 		bl	CyDelay
 397              	.LVL65:
 398              	.LBB3:
 248:main.c        **** 
 249:main.c        ****             for (int i = 0; i < 5; i++) {                       // scan each of the pucks 
 399              		.loc 1 249 0
 400 0178 0024     		movs	r4, #0
 401 017a 14E0     		b	.L12
 402              	.LVL66:
 403              	.L13:
 250:main.c        ****                 puck_rack_scans[i] = colourSensingOutput();
 404              		.loc 1 250 0 discriminator 3
 405 017c FFF7FEFF 		bl	colourSensingOutput
 406              	.LVL67:
 407 0180 614D     		ldr	r5, .L56+4
 408 0182 05EB8405 		add	r5, r5, r4, lsl #2
 409 0186 E861     		str	r0, [r5, #28]
 251:main.c        ****                 CyDelay(500);
 410              		.loc 1 251 0 discriminator 3
 411 0188 4FF4FA70 		mov	r0, #500
 412 018c FFF7FEFF 		bl	CyDelay
 413              	.LVL68:
 252:main.c        ****                 moveDynamic(61, SPEED, TRUE);
 414              		.loc 1 252 0 discriminator 3
 415 0190 0122     		movs	r2, #1
 416 0192 C821     		movs	r1, #200
 417 0194 3D20     		movs	r0, #61
 418 0196 FFF7FEFF 		bl	moveDynamic
 419              	.LVL69:
 253:main.c        ****                 blinkLED(puck_rack_scans[i],500);   // Will show us which coloured puck it thinks i
 420              		.loc 1 253 0 discriminator 3
 421 019a 4FF4FA71 		mov	r1, #500
 422 019e E869     		ldr	r0, [r5, #28]
 423 01a0 FFF7FEFF 		bl	blinkLED
 424              	.LVL70:
 249:main.c        ****                 puck_rack_scans[i] = colourSensingOutput();
 425              		.loc 1 249 0 discriminator 3
 426 01a4 0134     		adds	r4, r4, #1
 427              	.LVL71:
 428              	.L12:
 249:main.c        ****                 puck_rack_scans[i] = colourSensingOutput();
 429              		.loc 1 249 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cckoGjaV.s 			page 13


 430 01a6 042C     		cmp	r4, #4
 431 01a8 E8DD     		ble	.L13
 432              	.LBE3:
 254:main.c        ****             }
 255:main.c        ****             
 256:main.c        ****             //straightAdjust(FRONT_SENSORS);
 257:main.c        ****             //moveUntil(-100, BACKWARD, LESS_THAN, BACK, SPEED, TRUE);
 258:main.c        ****             //colourSensingInitialise();      // Initialises wall colour sensor against the black w
 259:main.c        ****                           
 260:main.c        ****             UART_1_PutString("Found Colours: \n");
 433              		.loc 1 260 0 is_stmt 1
 434 01aa 5E48     		ldr	r0, .L56+32
 435 01ac FFF7FEFF 		bl	UART_1_PutString
 436              	.LVL72:
 437              	.LBB4:
 261:main.c        ****             for (int i = 0; i < 5; i++) 
 438              		.loc 1 261 0
 439 01b0 0024     		movs	r4, #0
 440              	.LVL73:
 441 01b2 0CE0     		b	.L14
 442              	.LVL74:
 443              	.L15:
 262:main.c        ****             {
 263:main.c        ****                 sprintf(output, "%i \n", puck_rack_scans[i]);    // updates UART showing values of 
 444              		.loc 1 263 0 discriminator 3
 445 01b4 544B     		ldr	r3, .L56+4
 446 01b6 03EB8403 		add	r3, r3, r4, lsl #2
 447 01ba 5B4D     		ldr	r5, .L56+36
 448 01bc DA69     		ldr	r2, [r3, #28]
 449 01be 5B49     		ldr	r1, .L56+40
 450 01c0 2846     		mov	r0, r5
 451 01c2 FFF7FEFF 		bl	sprintf
 452              	.LVL75:
 264:main.c        ****                 UART_1_PutString(output);
 453              		.loc 1 264 0 discriminator 3
 454 01c6 2846     		mov	r0, r5
 455 01c8 FFF7FEFF 		bl	UART_1_PutString
 456              	.LVL76:
 261:main.c        ****             for (int i = 0; i < 5; i++) 
 457              		.loc 1 261 0 discriminator 3
 458 01cc 0134     		adds	r4, r4, #1
 459              	.LVL77:
 460              	.L14:
 261:main.c        ****             for (int i = 0; i < 5; i++) 
 461              		.loc 1 261 0 is_stmt 0 discriminator 1
 462 01ce 042C     		cmp	r4, #4
 463 01d0 F0DD     		ble	.L15
 464              	.LBE4:
 265:main.c        ****             }
 266:main.c        ****             
 267:main.c        ****             
 268:main.c        ****             control_photodiode_Write(CLAW_SENSING);    // changes to claw photodiode
 465              		.loc 1 268 0 is_stmt 1
 466 01d2 0120     		movs	r0, #1
 467 01d4 FFF7FEFF 		bl	control_photodiode_Write
 468              	.LVL78:
 269:main.c        ****             colour_sensing_algorithm = CLAW_1_ALGORITHM;   // changes it to claw algorithm
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cckoGjaV.s 			page 14


 469              		.loc 1 269 0
 470 01d8 0122     		movs	r2, #1
 471 01da 4B4B     		ldr	r3, .L56+4
 472 01dc DA60     		str	r2, [r3, #12]
 473              	.LVL79:
 474              	.LBB5:
 270:main.c        ****                                  
 271:main.c        ****             // THEN WE FILTER THE NO PUCK VALUES:
 272:main.c        ****             int puck_construction_plan_index = 0; // Will be used to iterate through the 3 puck col
 273:main.c        ****             
 274:main.c        ****             // Iterate over all 5 rack slots and place the 3 colours into puck_construction_plan.
 275:main.c        ****             for (int puck_rack_index = 0; puck_rack_index < 5; puck_rack_index++){
 475              		.loc 1 275 0
 476 01de 0023     		movs	r3, #0
 477              	.LBE5:
 272:main.c        ****             
 478              		.loc 1 272 0
 479 01e0 1A46     		mov	r2, r3
 480              	.LBB6:
 481              		.loc 1 275 0
 482 01e2 0CE0     		b	.L16
 483              	.LVL80:
 484              	.L18:
 276:main.c        ****                 if (puck_rack_scans[puck_rack_index] != BLANK && puck_construction_plan_index != 3)
 485              		.loc 1 276 0
 486 01e4 4849     		ldr	r1, .L56+4
 487 01e6 01EB8301 		add	r1, r1, r3, lsl #2
 488 01ea C869     		ldr	r0, [r1, #28]
 489 01ec 30B1     		cbz	r0, .L17
 490              		.loc 1 276 0 is_stmt 0 discriminator 1
 491 01ee 032A     		cmp	r2, #3
 492 01f0 04D0     		beq	.L17
 277:main.c        ****                     puck_construction_plan[puck_construction_plan_index] = puck_rack_scans[puck_rac
 493              		.loc 1 277 0 is_stmt 1
 494 01f2 4549     		ldr	r1, .L56+4
 495 01f4 01EB8201 		add	r1, r1, r2, lsl #2
 496 01f8 0861     		str	r0, [r1, #16]
 278:main.c        ****                     puck_construction_plan_index++;
 497              		.loc 1 278 0
 498 01fa 0132     		adds	r2, r2, #1
 499              	.LVL81:
 500              	.L17:
 275:main.c        ****                 if (puck_rack_scans[puck_rack_index] != BLANK && puck_construction_plan_index != 3)
 501              		.loc 1 275 0 discriminator 2
 502 01fc 0133     		adds	r3, r3, #1
 503              	.LVL82:
 504              	.L16:
 275:main.c        ****                 if (puck_rack_scans[puck_rack_index] != BLANK && puck_construction_plan_index != 3)
 505              		.loc 1 275 0 is_stmt 0 discriminator 1
 506 01fe 042B     		cmp	r3, #4
 507 0200 F0DD     		ble	.L18
 508              	.LBE6:
 279:main.c        ****                 }
 280:main.c        ****             }
 281:main.c        ****                     
 282:main.c        ****             // MOVE into the next state: 
 283:main.c        ****             state = STATE_LOCATE_BLOCK_AND_PUCKS;
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cckoGjaV.s 			page 15


 509              		.loc 1 283 0 is_stmt 1
 510 0202 0222     		movs	r2, #2
 511              	.LVL83:
 512 0204 404B     		ldr	r3, .L56+4
 513              	.LVL84:
 514 0206 5A60     		str	r2, [r3, #4]
 515              	.LVL85:
 516              	.L11:
 517              	.LBE2:
 284:main.c        **** 
 285:main.c        ****         }
 286:main.c        **** 
 287:main.c        **** //
 288:main.c        **** // *** 2. STATE LOCATE BLOCKS AND PUCKS: *** // 
 289:main.c        **** //
 290:main.c        ****         
 291:main.c        ****     	if (state == STATE_LOCATE_BLOCK_AND_PUCKS){
 518              		.loc 1 291 0
 519 0208 3F4B     		ldr	r3, .L56+4
 520 020a 5B68     		ldr	r3, [r3, #4]
 521 020c 022B     		cmp	r3, #2
 522 020e 40F0F980 		bne	.L19
 523              	.LBB7:
 292:main.c        ****             
 293:main.c        ****             ultimateDebugging();   
 524              		.loc 1 293 0
 525 0212 FFF7FEFF 		bl	ultimateDebugging
 526              	.LVL86:
 294:main.c        **** 
 295:main.c        ****             // move away from home base:
 296:main.c        ****             
 297:main.c        ****             translateMoveDynamic(45, -35, 100, FALSE);
 527              		.loc 1 297 0
 528 0216 0023     		movs	r3, #0
 529 0218 6422     		movs	r2, #100
 530 021a 6FF02201 		mvn	r1, #34
 531 021e 4448     		ldr	r0, .L56+44
 532 0220 FFF7FEFF 		bl	translateMoveDynamic
 533              	.LVL87:
 298:main.c        ****             //straightAdjust(FRONT_SENSORS);
 299:main.c        ****     
 300:main.c        ****             // Move until construction zone            
 301:main.c        ****             moveUntil(130, FORWARD, LESS_THAN, FRONT_LEFT, SPEED, TRUE);  // Move to west wall
 534              		.loc 1 301 0
 535 0224 0121     		movs	r1, #1
 536 0226 0191     		str	r1, [sp, #4]
 537 0228 C823     		movs	r3, #200
 538 022a 0093     		str	r3, [sp]
 539 022c 0023     		movs	r3, #0
 540 022e 0A46     		mov	r2, r1
 541 0230 8220     		movs	r0, #130
 542 0232 FFF7FEFF 		bl	moveUntil
 543              	.LVL88:
 302:main.c        ****             straightAdjust(FRONT_SENSORS);                                      // straighten again
 544              		.loc 1 302 0
 545 0236 0720     		movs	r0, #7
 546 0238 FFF7FEFF 		bl	straightAdjust
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cckoGjaV.s 			page 16


 547              	.LVL89:
 303:main.c        ****             
 304:main.c        ****             
 305:main.c        ****             distanceSensor(SIDE_LEFT);  // takes how far we are away from home base wall
 548              		.loc 1 305 0
 549 023c 0220     		movs	r0, #2
 550 023e FFF7FEFF 		bl	distanceSensor
 551              	.LVL90:
 306:main.c        ****             CyDelay(50);
 552              		.loc 1 306 0
 553 0242 3220     		movs	r0, #50
 554 0244 FFF7FEFF 		bl	CyDelay
 555              	.LVL91:
 307:main.c        ****             while (sensor_distances[SIDE_LEFT] > (BLOCK_ZONE_SOUTH - WIDTH_SENSOR_TO_SENSOR)) {
 556              		.loc 1 307 0
 557 0248 05E0     		b	.L20
 558              	.L21:
 308:main.c        ****                 // stays in while loop until side left value taken is appropriate
 309:main.c        ****                 // E.g. the side left value should be less than BLOCK_ZONE_SOUTH - WIDTH_SENSOR_TO_
 310:main.c        ****                 // So, it should be less than 500mm - 220mm = 280mm
 311:main.c        ****                 distanceSensor(SIDE_LEFT);
 559              		.loc 1 311 0
 560 024a 0220     		movs	r0, #2
 561 024c FFF7FEFF 		bl	distanceSensor
 562              	.LVL92:
 312:main.c        ****                 CyDelay(50);
 563              		.loc 1 312 0
 564 0250 3220     		movs	r0, #50
 565 0252 FFF7FEFF 		bl	CyDelay
 566              	.LVL93:
 567              	.L20:
 307:main.c        ****             while (sensor_distances[SIDE_LEFT] > (BLOCK_ZONE_SOUTH - WIDTH_SENSOR_TO_SENSOR)) {
 568              		.loc 1 307 0
 569 0256 374B     		ldr	r3, .L56+48
 570 0258 9C68     		ldr	r4, [r3, #8]
 571 025a B4F58C7F 		cmp	r4, #280
 572 025e F4DC     		bgt	.L21
 313:main.c        ****                 } 
 314:main.c        ****             
 315:main.c        ****             int block_threshold = BLOCK_ZONE_NORTH - sensor_distances[SIDE_LEFT] - WIDTH_SENSOR_TO_
 573              		.loc 1 315 0
 574 0260 C4F50374 		rsb	r4, r4, #524
 575 0264 0134     		adds	r4, r4, #1
 576              	.LVL94:
 316:main.c        ****             
 317:main.c        ****             
 318:main.c        ****             // Check if we FIND the block: 
 319:main.c        ****             
 320:main.c        ****             moveUntil(block_threshold, BACKWARD, LESS_THAN, SIDE_RIGHT, SPEED, TRUE);  
 577              		.loc 1 320 0
 578 0266 0125     		movs	r5, #1
 579 0268 0195     		str	r5, [sp, #4]
 580 026a C826     		movs	r6, #200
 581 026c 0096     		str	r6, [sp]
 582 026e 0323     		movs	r3, #3
 583 0270 2A46     		mov	r2, r5
 584 0272 0021     		movs	r1, #0
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cckoGjaV.s 			page 17


 585 0274 2046     		mov	r0, r4
 586 0276 FFF7FEFF 		bl	moveUntil
 587              	.LVL95:
 321:main.c        ****                 // We have hit the west side of the block
 322:main.c        ****                 //UART_1_PutString("BLOCK FIRST");
 323:main.c        ****                 
 324:main.c        ****                 blinkLED(GREEN,1000);   
 588              		.loc 1 324 0
 589 027a 4FF47A71 		mov	r1, #1000
 590 027e 0220     		movs	r0, #2
 591 0280 FFF7FEFF 		bl	blinkLED
 592              	.LVL96:
 325:main.c        ****                 
 326:main.c        ****                 // Find the WEST clearance of the block with ultrasonics: 
 327:main.c        ****                 distanceSensor(FRONT_LEFT); 
 593              		.loc 1 327 0
 594 0284 0020     		movs	r0, #0
 595 0286 FFF7FEFF 		bl	distanceSensor
 596              	.LVL97:
 328:main.c        ****                 CyDelay(DELAY);
 597              		.loc 1 328 0
 598 028a 3C20     		movs	r0, #60
 599 028c FFF7FEFF 		bl	CyDelay
 600              	.LVL98:
 329:main.c        ****                 
 330:main.c        ****                 block_location[WEST] = sensor_distances[FRONT_LEFT] + DISTANCE_FRONT_SENSOR_TO_SIDE
 601              		.loc 1 330 0
 602 0290 284B     		ldr	r3, .L56+48
 603 0292 1A68     		ldr	r2, [r3]
 604 0294 02F19603 		add	r3, r2, #150
 605 0298 DFF86C80 		ldr	r8, .L56+4
 606 029c C8F83C30 		str	r3, [r8, #60]
 331:main.c        ****                 sprintf(output, "west block front sensor: %d, \n", sensor_distances[FRONT_LEFT] ); 
 607              		.loc 1 331 0
 608 02a0 214F     		ldr	r7, .L56+36
 609 02a2 2549     		ldr	r1, .L56+52
 610 02a4 3846     		mov	r0, r7
 611 02a6 FFF7FEFF 		bl	sprintf
 612              	.LVL99:
 332:main.c        ****                 UART_1_PutString(output);
 613              		.loc 1 332 0
 614 02aa 3846     		mov	r0, r7
 615 02ac FFF7FEFF 		bl	UART_1_PutString
 616              	.LVL100:
 333:main.c        ****                 
 334:main.c        ****                 // OR find the west clearance of the block with encoders: 
 335:main.c        ****                 block_location[WEST] = 130 + global_distance + DISTANCE_WHEEL_TO_SENSOR;    //130 w
 617              		.loc 1 335 0
 618 02b0 224F     		ldr	r7, .L56+56
 619 02b2 3B68     		ldr	r3, [r7]
 620 02b4 AA33     		adds	r3, r3, #170
 621 02b6 C8F83C30 		str	r3, [r8, #60]
 336:main.c        ****                 
 337:main.c        ****                 // Stopping at the East side of the block:
 338:main.c        ****                 moveDynamic(-BLOCK_WIDTH/2,SPEED,TRUE);
 622              		.loc 1 338 0
 623 02ba 2A46     		mov	r2, r5
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cckoGjaV.s 			page 18


 624 02bc 3146     		mov	r1, r6
 625 02be 6FF02C00 		mvn	r0, #44
 626 02c2 FFF7FEFF 		bl	moveDynamic
 627              	.LVL101:
 339:main.c        ****                 moveUntil(block_threshold, BACKWARD, GREATER_THAN, SIDE_RIGHT, SPEED, TRUE);    // 
 628              		.loc 1 339 0
 629 02c6 0195     		str	r5, [sp, #4]
 630 02c8 0096     		str	r6, [sp]
 631 02ca 0323     		movs	r3, #3
 632 02cc 4FF0FF32 		mov	r2, #-1
 633 02d0 0021     		movs	r1, #0
 634 02d2 2046     		mov	r0, r4
 635 02d4 FFF7FEFF 		bl	moveUntil
 636              	.LVL102:
 340:main.c        ****                 blinkLED(GREEN,1000);                                                           // 
 637              		.loc 1 340 0
 638 02d8 4FF47A71 		mov	r1, #1000
 639 02dc 0220     		movs	r0, #2
 640 02de FFF7FEFF 		bl	blinkLED
 641              	.LVL103:
 341:main.c        ****                 
 342:main.c        ****                 distanceSensor(BACK_RIGHT);
 642              		.loc 1 342 0
 643 02e2 0420     		movs	r0, #4
 644 02e4 FFF7FEFF 		bl	distanceSensor
 645              	.LVL104:
 343:main.c        ****                 CyDelay(50);
 646              		.loc 1 343 0
 647 02e8 3220     		movs	r0, #50
 648 02ea FFF7FEFF 		bl	CyDelay
 649              	.LVL105:
 344:main.c        ****                 block_location[EAST] = sensor_distances[BACK_RIGHT] + DISTANCE_BACK_SENSOR_TO_SIDE_
 345:main.c        ****                 
 346:main.c        **** 
 347:main.c        ****                 // determining if the block is facing east or west and then offsetting that value: 
 348:main.c        ****                 if (global_distance < (BLOCK_LENGTH/2)) {
 650              		.loc 1 348 0
 651 02ee 3B68     		ldr	r3, [r7]
 652 02f0 7C2B     		cmp	r3, #124
 653 02f2 25DC     		bgt	.L22
 349:main.c        ****                     // block is facing this way "|"
 350:main.c        ****                     block_location[EAST] = ARENA_WIDTH - block_location[WEST] - BLOCK_WIDTH;
 654              		.loc 1 350 0
 655 02f4 D8F83C30 		ldr	r3, [r8, #60]
 656 02f8 C3F58A63 		rsb	r3, r3, #1104
 657 02fc 0633     		adds	r3, r3, #6
 658 02fe C8F83430 		str	r3, [r8, #52]
 659 0302 23E0     		b	.L23
 660              	.L57:
 661              		.align	2
 662              	.L56:
 663 0304 18000000 		.word	.LC1
 664 0308 00000000 		.word	.LANCHOR0
 665 030c 00000000 		.word	internal_orientation
 666 0310 00000000 		.word	TIH
 667 0314 00000000 		.word	StartIH
 668 0318 00000000 		.word	SAIH
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cckoGjaV.s 			page 19


 669 031c 30000000 		.word	.LC2
 670 0320 3EFEFFFF 		.word	-450
 671 0324 50000000 		.word	.LC3
 672 0328 00000000 		.word	output
 673 032c 64000000 		.word	.LC4
 674 0330 00003442 		.word	1110704128
 675 0334 00000000 		.word	sensor_distances
 676 0338 6C000000 		.word	.LC5
 677 033c 00000000 		.word	global_distance
 678              	.L22:
 351:main.c        ****                 }
 352:main.c        ****                 else {
 353:main.c        ****                     // block is facing this way "---"
 354:main.c        ****                     block_location[EAST] = ARENA_WIDTH - block_location[WEST] - BLOCK_LENGTH;
 679              		.loc 1 354 0
 680 0340 914A     		ldr	r2, .L58
 681 0342 D36B     		ldr	r3, [r2, #60]
 682 0344 C3F56D73 		rsb	r3, r3, #948
 683 0348 0233     		adds	r3, r3, #2
 684 034a 5363     		str	r3, [r2, #52]
 685              	.L23:
 355:main.c        ****                     
 356:main.c        ****                 }
 357:main.c        **** 
 358:main.c        ****                 
 359:main.c        ****                 
 360:main.c        ****                 
 361:main.c        ****                 
 362:main.c        ****                 sprintf(output, "east block front sensor: %d, \n", sensor_distances[FRONT_LEFT] ); 
 686              		.loc 1 362 0
 687 034c 8F4C     		ldr	r4, .L58+4
 688              	.LVL106:
 689 034e 904B     		ldr	r3, .L58+8
 690 0350 1A68     		ldr	r2, [r3]
 691 0352 9049     		ldr	r1, .L58+12
 692 0354 2046     		mov	r0, r4
 693 0356 FFF7FEFF 		bl	sprintf
 694              	.LVL107:
 363:main.c        ****                 UART_1_PutString(output);
 695              		.loc 1 363 0
 696 035a 2046     		mov	r0, r4
 697 035c FFF7FEFF 		bl	UART_1_PutString
 698              	.LVL108:
 364:main.c        **** 
 365:main.c        **** /*                
 366:main.c        ****                 // Find where the pucks are: 
 367:main.c        ****                 moveDynamic(-BLOCK_WIDTH/2,SPEED,TRUE);
 368:main.c        ****                 moveUntil(puck_threshold, BACKWARD, LESS_THAN, SIDE_RIGHT, SPEED, TRUE);  
 369:main.c        ****                 
 370:main.c        ****                 distanceSensor(FRONT_LEFT);
 371:main.c        ****                 CyDelay(50);
 372:main.c        ****                 
 373:main.c        ****                 int offset = sensor_distances[SIDE_RIGHT]*sin(18*M_PI/180);
 374:main.c        ****                 if (sensor_distances[FRONT_LEFT] < 300) { offset = 0; }      // set the offset to 0
 375:main.c        ****                 // puck detected
 376:main.c        ****                 // puck detectedDISTANCE_FRONT_SENSOR_TO_SIDE_SENSOR\\\\
 377:main.c        ****                 
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cckoGjaV.s 			page 20


 378:main.c        ****                 sprintf(output, "offset: %d, \n", offset);       
 379:main.c        ****                 UART_1_PutString(output);
 380:main.c        ****                 
 381:main.c        ****                 puck_location[WEST] = sensor_distances[FRONT_LEFT] + DISTANCE_FRONT_SENSOR_TO_SIDE_
 382:main.c        ****                 puck_location[EAST] = ARENA_WIDTH - puck_location[WEST] - PUCK_GRID_WIDTH;
 383:main.c        ****                 
 384:main.c        ****                 sprintf(output, "west puck front sensor: %d, \n", sensor_distances[FRONT_LEFT] );  
 385:main.c        ****                 UART_1_PutString(output);
 386:main.c        ****                 
 387:main.c        ****                 blinkLED(BLUE,1000);   // puck location was succesfully found    
 388:main.c        ****                 
 389:main.c        ****                 
 390:main.c        ****                 // New stuff (HOPEFULLY BETTER):
 391:main.c        ****                 moveUntil(puck_threshold, BACKWARD, GREATER_THAN, SIDE_RIGHT, SPEED, TRUE);  
 392:main.c        ****                 blinkLED(BLUE,1000);   // puck location was succesfully found    
 393:main.c        ****                 
 394:main.c        ****                 distanceSensor(BACK_LEFT);  // changing this to front sensor might work better
 395:main.c        ****                 CyDelay(50);
 396:main.c        ****                 
 397:main.c        ****                 offset = sensor_distances[SIDE_RIGHT]*sin(18*M_PI/180); 
 398:main.c        ****                 
 399:main.c        ****                 puck_location[EAST] = sensor_distances[BACK_LEFT] + DISTANCE_BACK_SENSOR_TO_SIDE_SE
 400:main.c        ****                 puck_location[WEST] = ARENA_WIDTH - puck_location[EAST] - PUCK_GRID_WIDTH;  
 401:main.c        **** 
 402:main.c        ****                     
 403:main.c        ****                 // if we reach the end of the wall without tripping the pucks, 
 404:main.c        ****                 // assume pucks are located relatively above block
 405:main.c        ****                 
 406:main.c        ****                 distanceSensor(BACK_LEFT);
 407:main.c        ****                 CyDelay(50);
 408:main.c        ****                 
 409:main.c        ****                 if (sensor_distances[BACK_LEFT] < 150) { 
 410:main.c        ****                     UART_1_PutString("thinks pucks are behind block\n");
 411:main.c        ****                     puck_location[EAST] = block_location[EAST];
 412:main.c        ****                     puck_location[WEST] = ARENA_WIDTH - puck_location[EAST] - PUCK_GRID_WIDTH;
 413:main.c        ****                 }
 414:main.c        ****                 
 415:main.c        ****                 
 416:main.c        ****             }
 417:main.c        ****     // HIT THE PUCK FIRST  
 418:main.c        ****             else{ 
 419:main.c        ****                 
 420:main.c        ****                 // puck location was succesfully found   
 421:main.c        ****                 //UART_1_PutString("BLOCK FIRST");
 422:main.c        ****                 
 423:main.c        ****                 blinkLED(BLUE,1000); 
 424:main.c        ****                 
 425:main.c        ****                 distanceSensor(FRONT_LEFT);
 426:main.c        ****                 CyDelay(50);
 427:main.c        ****                 
 428:main.c        ****                 int offset = sensor_distances[SIDE_RIGHT]*sin(18*M_PI/180);
 429:main.c        ****                 if (sensor_distances[FRONT_LEFT] < 300) { offset = 0; }      // set the offset to 0
 430:main.c        ****                 
 431:main.c        ****                 sprintf(output, "puck distance: %d, \n", sensor_distances[FRONT_LEFT]);       
 432:main.c        ****                 UART_1_PutString(output);
 433:main.c        ****                 sprintf(output, "offset: %d, \n", offset);       
 434:main.c        ****                 UART_1_PutString(output);
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cckoGjaV.s 			page 21


 435:main.c        ****                 
 436:main.c        ****                 puck_location[WEST] = sensor_distances[FRONT_LEFT] + DISTANCE_FRONT_SENSOR_TO_SIDE_
 437:main.c        ****                 puck_location[EAST] = ARENA_WIDTH - puck_location[WEST] - PUCK_GRID_WIDTH;
 438:main.c        ****                 
 439:main.c        ****                 
 440:main.c        ****                 // New stuff (HOPEFULLY BETTER):
 441:main.c        ****                 moveUntil(puck_threshold, BACKWARD, GREATER_THAN, SIDE_RIGHT, SPEED, TRUE);  
 442:main.c        ****                 blinkLED(BLUE,1000);   // puck location was succesfully found    
 443:main.c        ****                 
 444:main.c        ****                 distanceSensor(BACK_LEFT);  // changing this to front sensor might work better
 445:main.c        ****                 CyDelay(50);
 446:main.c        ****                 
 447:main.c        ****                 offset = sensor_distances[SIDE_RIGHT]*sin(18*M_PI/180); 
 448:main.c        ****                 
 449:main.c        ****                 puck_location[EAST] = sensor_distances[BACK_LEFT] + DISTANCE_BACK_SENSOR_TO_SIDE_SE
 450:main.c        ****                 puck_location[WEST] = ARENA_WIDTH - puck_location[EAST] - PUCK_GRID_WIDTH;  
 451:main.c        ****                 
 452:main.c        ****                 
 453:main.c        ****                 
 454:main.c        ****                 
 455:main.c        ****                 // Finding the block location:
 456:main.c        ****                 moveUntil(block_threshold, BACKWARD, LESS_THAN, SIDE_RIGHT, SPEED, TRUE);  
 457:main.c        ****                 blinkLED(GREEN,1000);   
 458:main.c        ****                 
 459:main.c        ****                 // Find the WEST clearance of the block: 
 460:main.c        ****                 distanceSensor(FRONT_LEFT); // Use front_right instead? 
 461:main.c        ****                 CyDelay(DELAY);
 462:main.c        ****                 
 463:main.c        ****                 block_location[WEST] = sensor_distances[FRONT_LEFT] + DISTANCE_FRONT_SENSOR_TO_SIDE
 464:main.c        ****                 
 465:main.c        ****                 // Stopping at the East side of the block: 
 466:main.c        ****                 moveDynamic(-BLOCK_WIDTH/2,SPEED,TRUE);
 467:main.c        ****                 moveUntil(block_threshold, BACKWARD, GREATER_THAN, SIDE_RIGHT, SPEED, TRUE);  
 468:main.c        ****                                     // this will move backwards until no longer hitting the block, 
 469:main.c        ****                 blinkLED(GREEN,1000);      // To show it ended at the correct spot
 470:main.c        ****                 
 471:main.c        ****                 // Updating the East Clearance:
 472:main.c        ****                 //distanceSensor(FRONT_LEFT);     // checks how far we have travelled
 473:main.c        ****                 //CyDelay(50);
 474:main.c        ****                 
 475:main.c        ****                 //block_location[EAST] = ARENA_WIDTH - sensor_distances[FRONT_LEFT] - DISTANCE_FRON
 476:main.c        ****                                                             // double check the distance back senso
 477:main.c        ****             
 478:main.c        ****                 distanceSensor(BACK_RIGHT);
 479:main.c        ****                 CyDelay(50);
 480:main.c        ****                 block_location[EAST] = sensor_distances[BACK_RIGHT] + DISTANCE_BACK_SENSOR_TO_SIDE_
 481:main.c        **** >>>>>>> 46d80350303a0caac89f9e1b47d05a20e237c383
 482:main.c        ****             
 483:main.c        ****             
 484:main.c        ****             sprintf(output, "west puck: %d, \n", puck_location[WEST]);       
 485:main.c        ****             UART_1_PutString(output);
 486:main.c        ****             sprintf(output, "east puck: %d, \n\n", puck_location[EAST]);       
 487:main.c        ****             UART_1_PutString(output);
 488:main.c        ****             
 489:main.c        ****             sprintf(output, "west block: %d, \n", block_location[WEST]);       
 490:main.c        ****             UART_1_PutString(output);
 491:main.c        ****             sprintf(output, "east block: %d, \n", block_location[EAST]);       
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cckoGjaV.s 			page 22


 492:main.c        ****             UART_1_PutString(output);
 493:main.c        **** 
 494:main.c        ****             
 495:main.c        ****             // END OF CODE FOR BLOCK AND PUCK CHECKING 
 496:main.c        ****             
 497:main.c        ****                 */
 498:main.c        ****             //while(1) {}
 499:main.c        ****           
 500:main.c        ****             changeOrientation(EAST,SPEED);
 699              		.loc 1 500 0
 700 0360 C821     		movs	r1, #200
 701 0362 0120     		movs	r0, #1
 702 0364 FFF7FEFF 		bl	changeOrientation
 703              	.LVL109:
 501:main.c        ****             moveUntil(CLEARANCE_RADIUS_CENTER_TO_FRONT + SAFETY_MARGIN/2, FORWARD, LESS_THAN, FRONT
 704              		.loc 1 501 0
 705 0368 0121     		movs	r1, #1
 706 036a 0191     		str	r1, [sp, #4]
 707 036c C823     		movs	r3, #200
 708 036e 0093     		str	r3, [sp]
 709 0370 0023     		movs	r3, #0
 710 0372 0A46     		mov	r2, r1
 711 0374 AC20     		movs	r0, #172
 712 0376 FFF7FEFF 		bl	moveUntil
 713              	.LVL110:
 502:main.c        ****             //translateUntil(CLEARANCE_RADIUS_CENTER_TO_BACK + SAFETY_MARGIN, 200, LEFT, GREATER_TH
 503:main.c        ****             straightAdjust(FRONT_MIDDLE);
 714              		.loc 1 503 0
 715 037a 0520     		movs	r0, #5
 716 037c FFF7FEFF 		bl	straightAdjust
 717              	.LVL111:
 504:main.c        ****             
 505:main.c        ****             
 506:main.c        ****             //while(1) {}
 507:main.c        ****             
 508:main.c        **** 
 509:main.c        ****             
 510:main.c        ****             // Finding the different block & puck clearances: 
 511:main.c        ****             
 512:main.c        ****                     // there should be a threshold that allows the robot to travel through a cleara
 513:main.c        ****                     // E.g. robot width + 100mm
 514:main.c        ****             
 515:main.c        ****                     // the robot will travel to the chosen (block_clearance/2) and travel down ther
 516:main.c        ****                     // so it is in the middle of the block clearance and the wall 
 517:main.c        ****             
 518:main.c        ****                     // check if between the edge of the block and the puck zone gives enough cleara
 519:main.c        ****                     
 520:main.c        ****             
 521:main.c        ****             
 522:main.c        ****             // DETERMINES THE CLEARANCES AVAILABLE FOR OUR ROBOT
 523:main.c        ****             if (block_location[EAST] > WIDTH_WHEEL_TO_WHEEL + BLOCK_TOLERANCE) {
 718              		.loc 1 523 0
 719 0380 814B     		ldr	r3, .L58
 720 0382 5A6B     		ldr	r2, [r3, #52]
 721 0384 B2F5847F 		cmp	r2, #264
 722 0388 02DD     		ble	.L24
 524:main.c        ****                 // the east clearance of block check
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cckoGjaV.s 			page 23


 525:main.c        ****               block_east_clearance = 1;  
 723              		.loc 1 525 0
 724 038a 0121     		movs	r1, #1
 725 038c A3F84010 		strh	r1, [r3, #64]	@ movhi
 726              	.L24:
 526:main.c        ****             }
 527:main.c        ****             if (block_location[WEST] > WIDTH_WHEEL_TO_WHEEL + BLOCK_TOLERANCE) {
 727              		.loc 1 527 0
 728 0390 7D4B     		ldr	r3, .L58
 729 0392 DB6B     		ldr	r3, [r3, #60]
 730 0394 B3F5847F 		cmp	r3, #264
 731 0398 03DD     		ble	.L25
 528:main.c        ****                 // the east clearance of block check
 529:main.c        ****               block_west_clearance = 1;  
 732              		.loc 1 529 0
 733 039a 0120     		movs	r0, #1
 734 039c 7A49     		ldr	r1, .L58
 735 039e A1F84200 		strh	r0, [r1, #66]	@ movhi
 736              	.L25:
 530:main.c        ****             }
 531:main.c        **** 
 532:main.c        ****             
 533:main.c        ****             // DETERMINES WHICH PATH TO TAKE: 
 534:main.c        ****             if (block_location[EAST] > block_location[WEST]) {
 737              		.loc 1 534 0
 738 03a2 9A42     		cmp	r2, r3
 739 03a4 03DD     		ble	.L26
 535:main.c        ****                 preferential_route = EAST;
 740              		.loc 1 535 0
 741 03a6 0122     		movs	r2, #1
 742 03a8 7B4B     		ldr	r3, .L58+16
 743 03aa 1A60     		str	r2, [r3]
 744 03ac 02E0     		b	.L27
 745              	.L26:
 536:main.c        ****             }
 537:main.c        ****             else {
 538:main.c        ****                 preferential_route = WEST;
 746              		.loc 1 538 0
 747 03ae 0322     		movs	r2, #3
 748 03b0 794B     		ldr	r3, .L58+16
 749 03b2 1A60     		str	r2, [r3]
 750              	.L27:
 539:main.c        ****             }
 540:main.c        ****             // Middle route:
 541:main.c        ****                 // preferential_route = centre; 
 542:main.c        ****             
 543:main.c        ****             
 544:main.c        ****             
 545:main.c        ****             
 546:main.c        ****             
 547:main.c        ****             
 548:main.c        ****             
 549:main.c        ****             
 550:main.c        ****             sprintf(output, "west puck clearance: %d, \n", puck_west_clearance);       
 751              		.loc 1 550 0
 752 03b4 744D     		ldr	r5, .L58
 753 03b6 754C     		ldr	r4, .L58+4
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cckoGjaV.s 			page 24


 754 03b8 B5F94420 		ldrsh	r2, [r5, #68]
 755 03bc 7749     		ldr	r1, .L58+20
 756 03be 2046     		mov	r0, r4
 757 03c0 FFF7FEFF 		bl	sprintf
 758              	.LVL112:
 551:main.c        ****             UART_1_PutString(output);
 759              		.loc 1 551 0
 760 03c4 2046     		mov	r0, r4
 761 03c6 FFF7FEFF 		bl	UART_1_PutString
 762              	.LVL113:
 552:main.c        ****             sprintf(output, "east puck clearance: %d, \n\n", puck_east_clearance);       
 763              		.loc 1 552 0
 764 03ca B5F94620 		ldrsh	r2, [r5, #70]
 765 03ce 7449     		ldr	r1, .L58+24
 766 03d0 2046     		mov	r0, r4
 767 03d2 FFF7FEFF 		bl	sprintf
 768              	.LVL114:
 553:main.c        ****             UART_1_PutString(output);
 769              		.loc 1 553 0
 770 03d6 2046     		mov	r0, r4
 771 03d8 FFF7FEFF 		bl	UART_1_PutString
 772              	.LVL115:
 554:main.c        ****             
 555:main.c        ****             sprintf(output, "west block clearance: %d, \n", block_west_clearance);       
 773              		.loc 1 555 0
 774 03dc B5F94220 		ldrsh	r2, [r5, #66]
 775 03e0 7049     		ldr	r1, .L58+28
 776 03e2 2046     		mov	r0, r4
 777 03e4 FFF7FEFF 		bl	sprintf
 778              	.LVL116:
 556:main.c        ****             UART_1_PutString(output);
 779              		.loc 1 556 0
 780 03e8 2046     		mov	r0, r4
 781 03ea FFF7FEFF 		bl	UART_1_PutString
 782              	.LVL117:
 557:main.c        ****             sprintf(output, "east block clearance: %d, \n", block_east_clearance);       
 783              		.loc 1 557 0
 784 03ee B5F94020 		ldrsh	r2, [r5, #64]
 785 03f2 6D49     		ldr	r1, .L58+32
 786 03f4 2046     		mov	r0, r4
 787 03f6 FFF7FEFF 		bl	sprintf
 788              	.LVL118:
 558:main.c        ****             UART_1_PutString(output);
 789              		.loc 1 558 0
 790 03fa 2046     		mov	r0, r4
 791 03fc FFF7FEFF 		bl	UART_1_PutString
 792              	.LVL119:
 559:main.c        ****             
 560:main.c        ****             
 561:main.c        ****             
 562:main.c        ****             
 563:main.c        ****             
 564:main.c        ****             
 565:main.c        ****             
 566:main.c        ****            // while(1) {} // just want to do the block and puck finding
 567:main.c        ****             
 568:main.c        ****             //changeOrientation(WEST,SPEED);
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cckoGjaV.s 			page 25


 569:main.c        ****             //moveDynamic(-600, SPEED, TRUE);
 570:main.c        ****             //moveUntil((puck_location[EAST]/2),FORWARD, LESS_THAN, FRONT_LEFT, SPEED, TRUE);
 571:main.c        ****             //straightAdjust();
 572:main.c        ****             //changeOrientation(WEST,SPEED);
 573:main.c        ****             //moveUntil((PUCK_GRID_FROM_NORTH/2), FORWARD, LESS_THAN, FRONT_LEFT, SPEED,TRUE);
 574:main.c        ****             //straightAdjust();
 575:main.c        ****             //changeOrientation(EAST, SPEED);
 576:main.c        ****             ///oveDynamic(1200, SPEED, TRUE);
 577:main.c        ****             
 578:main.c        **** 
 579:main.c        ****             
 580:main.c        ****             /*
 581:main.c        ****             moveUntil(200, BACKWARD, GREATER_THAN, FRONT_LEFT, SPEED, TRUE);
 582:main.c        ****             changeOrientation(SOUTH,SPEED);
 583:main.c        ****             changeOrientation(EAST, SPEED);
 584:main.c        ****             straightAdjust(FRONT_SENSORS);
 585:main.c        ****             moveUntil(CLEARANCE_RADIUS_CENTER_TO_FRONT + SAFETY_MARGIN/2, FORWARD, LESS_THAN, FRONT
 586:main.c        ****             translateUntil(CLEARANCE_RADIUS_CENTER_TO_BACK - SAFETY_MARGIN, 200, LEFT, GREATER_THAN
 587:main.c        ****             straightAdjust(FRONT_SENSORS);
 588:main.c        ****             */
 589:main.c        ****             
 590:main.c        ****             // PUCK has now been found, enter the IF statements to locate and pick up pucks 
 591:main.c        ****             state = STATE_GO_TO_PUCKS;
 793              		.loc 1 591 0
 794 0400 0323     		movs	r3, #3
 795 0402 6B60     		str	r3, [r5, #4]
 796              	.L19:
 797              	.LBE7:
 592:main.c        **** 	    }     
 593:main.c        **** 
 594:main.c        **** //
 595:main.c        **** // *** 3. STATE GO TO PUCKS: *** // 
 596:main.c        **** //
 597:main.c        **** 
 598:main.c        ****         // Ensure that we are @ east wall facing east at a minimum verticaldistance so we can turn 
 599:main.c        ****         
 600:main.c        ****         if (state == STATE_GO_TO_PUCKS){
 798              		.loc 1 600 0
 799 0404 604B     		ldr	r3, .L58
 800 0406 5B68     		ldr	r3, [r3, #4]
 801 0408 032B     		cmp	r3, #3
 802 040a 40F05D82 		bne	.L29
 803 040e B4E0     		b	.L28
 804              	.L35:
 601:main.c        ****             
 602:main.c        ****             // The different route finding Algorithms for the different combinations: 
 603:main.c        ****             
 604:main.c        ****     // EAST ROUTE: 
 605:main.c        ****             while (preferential_route == EAST) {
 606:main.c        ****                 UART_1_PutString("Taking east route");
 805              		.loc 1 606 0
 806 0410 6648     		ldr	r0, .L58+36
 807 0412 FFF7FEFF 		bl	UART_1_PutString
 808              	.LVL120:
 607:main.c        ****                 moveUntil(WALL_CLEARANCE_FRONT, BACKWARD, GREATER_THAN, FRONT_MIDDLE, SPEED, TRUE);
 809              		.loc 1 607 0
 810 0416 0124     		movs	r4, #1
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cckoGjaV.s 			page 26


 811 0418 0194     		str	r4, [sp, #4]
 812 041a C825     		movs	r5, #200
 813 041c 0095     		str	r5, [sp]
 814 041e 0523     		movs	r3, #5
 815 0420 4FF0FF32 		mov	r2, #-1
 816 0424 0021     		movs	r1, #0
 817 0426 2846     		mov	r0, r5
 818 0428 FFF7FEFF 		bl	moveUntil
 819              	.LVL121:
 608:main.c        ****                 straightAdjust(FRONT_SENSORS);
 820              		.loc 1 608 0
 821 042c 0720     		movs	r0, #7
 822 042e FFF7FEFF 		bl	straightAdjust
 823              	.LVL122:
 609:main.c        ****                 changeOrientation(NORTH, SPEED);    // gets it ready for going aslong the wall 
 824              		.loc 1 609 0
 825 0432 2946     		mov	r1, r5
 826 0434 0020     		movs	r0, #0
 827 0436 FFF7FEFF 		bl	changeOrientation
 828              	.LVL123:
 610:main.c        ****                 
 611:main.c        ****                 distanceSensor(BACK_LEFT);          // checking initial distance from the wall
 829              		.loc 1 611 0
 830 043a 0620     		movs	r0, #6
 831 043c FFF7FEFF 		bl	distanceSensor
 832              	.LVL124:
 612:main.c        ****                 CyDelay(50);
 833              		.loc 1 612 0
 834 0440 3220     		movs	r0, #50
 835 0442 FFF7FEFF 		bl	CyDelay
 836              	.LVL125:
 613:main.c        ****                 initial_tolerance = sensor_distances[BACK_LEFT];
 837              		.loc 1 613 0
 838 0446 524B     		ldr	r3, .L58+8
 839 0448 9B69     		ldr	r3, [r3, #24]
 840 044a 594E     		ldr	r6, .L58+40
 841 044c 3360     		str	r3, [r6]
 614:main.c        ****                 
 615:main.c        ****                 moveUntil(PUCK_GRID_FROM_NORTH + DISTANCE_FRONT_SENSOR_FROM_CENTER - PUCK_GRID_DIST
 842              		.loc 1 615 0
 843 044e 4E4B     		ldr	r3, .L58
 844 0450 986C     		ldr	r0, [r3, #72]
 845 0452 6FF03603 		mvn	r3, #54
 846 0456 03FB00F0 		mul	r0, r3, r0
 847 045a 0194     		str	r4, [sp, #4]
 848 045c 0095     		str	r5, [sp]
 849 045e 0023     		movs	r3, #0
 850 0460 2246     		mov	r2, r4
 851 0462 2146     		mov	r1, r4
 852 0464 00F24510 		addw	r0, r0, #325
 853 0468 FFF7FEFF 		bl	moveUntil
 854              	.LVL126:
 616:main.c        ****                         // move until corner wall
 617:main.c        ****                 
 618:main.c        ****                 sprintf(output, "initial tolerance: %d\n", initial_tolerance);      
 855              		.loc 1 618 0
 856 046c 474C     		ldr	r4, .L58+4
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cckoGjaV.s 			page 27


 857 046e 3268     		ldr	r2, [r6]
 858 0470 5049     		ldr	r1, .L58+44
 859 0472 2046     		mov	r0, r4
 860 0474 FFF7FEFF 		bl	sprintf
 861              	.LVL127:
 619:main.c        ****                 UART_1_PutString(output); 
 862              		.loc 1 619 0
 863 0478 2046     		mov	r0, r4
 864 047a FFF7FEFF 		bl	UART_1_PutString
 865              	.LVL128:
 620:main.c        ****                 
 621:main.c        ****                 sprintf(output, "global distance: %d\n", global_distance);      
 866              		.loc 1 621 0
 867 047e 4E4D     		ldr	r5, .L58+48
 868 0480 2A68     		ldr	r2, [r5]
 869 0482 4E49     		ldr	r1, .L58+52
 870 0484 2046     		mov	r0, r4
 871 0486 FFF7FEFF 		bl	sprintf
 872              	.LVL129:
 622:main.c        ****                 UART_1_PutString(output); 
 873              		.loc 1 622 0
 874 048a 2046     		mov	r0, r4
 875 048c FFF7FEFF 		bl	UART_1_PutString
 876              	.LVL130:
 623:main.c        ****                 
 624:main.c        ****                 if (global_distance < ARENA_WIDTH - PUCK_GRID_FROM_NORTH - DISTANCE_BACK_SENSOR_FRO
 877              		.loc 1 624 0
 878 0490 3068     		ldr	r0, [r6]
 879 0492 C0F51473 		rsb	r3, r0, #592
 880 0496 0333     		adds	r3, r3, #3
 881 0498 2A68     		ldr	r2, [r5]
 882 049a 9342     		cmp	r3, r2
 883 049c 19DD     		ble	.L30
 625:main.c        ****                     // Has hit the pucks and must try the west route
 626:main.c        ****                     // move until backwards to original starting position 
 627:main.c        ****                     
 628:main.c        ****                     moveUntil(initial_tolerance, BACKWARD, LESS_THAN, BACK_LEFT, SPEED, TRUE);  // 
 884              		.loc 1 628 0
 885 049e 0124     		movs	r4, #1
 886 04a0 0194     		str	r4, [sp, #4]
 887 04a2 C825     		movs	r5, #200
 888 04a4 0095     		str	r5, [sp]
 889 04a6 0623     		movs	r3, #6
 890 04a8 2246     		mov	r2, r4
 891 04aa 0021     		movs	r1, #0
 892 04ac FFF7FEFF 		bl	moveUntil
 893              	.LVL131:
 629:main.c        ****                     changeOrientation(EAST, SPEED);
 894              		.loc 1 629 0
 895 04b0 2946     		mov	r1, r5
 896 04b2 2046     		mov	r0, r4
 897 04b4 FFF7FEFF 		bl	changeOrientation
 898              	.LVL132:
 630:main.c        ****                     if (block_west_clearance == 1) { preferential_route = WEST; } else {preferentia
 899              		.loc 1 630 0
 900 04b8 334B     		ldr	r3, .L58
 901 04ba B3F94230 		ldrsh	r3, [r3, #66]
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cckoGjaV.s 			page 28


 902 04be A342     		cmp	r3, r4
 903 04c0 03D1     		bne	.L31
 904              		.loc 1 630 0 is_stmt 0 discriminator 1
 905 04c2 0322     		movs	r2, #3
 906 04c4 344B     		ldr	r3, .L58+16
 907 04c6 1A60     		str	r2, [r3]
 908 04c8 40E1     		b	.L32
 909              	.L31:
 910              		.loc 1 630 0 discriminator 2
 911 04ca 0222     		movs	r2, #2
 912 04cc 324B     		ldr	r3, .L58+16
 913 04ce 1A60     		str	r2, [r3]
 914 04d0 3CE1     		b	.L32
 915              	.L30:
 631:main.c        ****                     break;  // breaks out of the route to change routes 
 632:main.c        ****                 }
 633:main.c        ****                 else {
 634:main.c        ****                     // have moved into the corner, checking if enough tolerance in corner 
 635:main.c        ****                     distanceSensor(SIDE_LEFT); 
 916              		.loc 1 635 0 is_stmt 1
 917 04d2 0220     		movs	r0, #2
 918 04d4 FFF7FEFF 		bl	distanceSensor
 919              	.LVL133:
 636:main.c        ****                     CyDelay(50);
 920              		.loc 1 636 0
 921 04d8 3220     		movs	r0, #50
 922 04da FFF7FEFF 		bl	CyDelay
 923              	.LVL134:
 637:main.c        ****                     
 638:main.c        ****                     if (sensor_distances[SIDE_LEFT] > CLEARANCE_RADIUS_CENTER_TO_BACK - (SIDE_SENSO
 924              		.loc 1 638 0
 925 04de 2C4B     		ldr	r3, .L58+8
 926 04e0 9B68     		ldr	r3, [r3, #8]
 927 04e2 732B     		cmp	r3, #115
 928 04e4 2DDD     		ble	.L33
 639:main.c        ****     // continue with the route MAIN CODE FOR ROUTE
 640:main.c        ****                         straightAdjust(FRONT_SENSORS);
 929              		.loc 1 640 0
 930 04e6 0720     		movs	r0, #7
 931 04e8 FFF7FEFF 		bl	straightAdjust
 932              	.LVL135:
 641:main.c        ****                         changeOrientation(WEST, SPEED);
 933              		.loc 1 641 0
 934 04ec C821     		movs	r1, #200
 935 04ee 0320     		movs	r0, #3
 936 04f0 FFF7FEFF 		bl	changeOrientation
 937              	.LVL136:
 642:main.c        ****                         straightAdjust(BACK_SENSORS);
 938              		.loc 1 642 0
 939 04f4 0820     		movs	r0, #8
 940 04f6 FFF7FEFF 		bl	straightAdjust
 941              	.LVL137:
 643:main.c        ****         
 644:main.c        ****                                         
 645:main.c        ****                         moveUntil(DISTANCE_MIDDLE_STOPPED_FROM_PUCK, FORWARD, LESS_THAN, FRONT_MIDD
 942              		.loc 1 645 0
 943 04fa 0124     		movs	r4, #1
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cckoGjaV.s 			page 29


 944 04fc 0194     		str	r4, [sp, #4]
 945 04fe C820     		movs	r0, #200
 946 0500 0090     		str	r0, [sp]
 947 0502 0523     		movs	r3, #5
 948 0504 2246     		mov	r2, r4
 949 0506 2146     		mov	r1, r4
 950 0508 FFF7FEFF 		bl	moveUntil
 951              	.LVL138:
 646:main.c        ****                         changeOrientation(NORTH, SPEED_LOW);
 952              		.loc 1 646 0
 953 050c 4621     		movs	r1, #70
 954 050e 0020     		movs	r0, #0
 955 0510 FFF7FEFF 		bl	changeOrientation
 956              	.LVL139:
 647:main.c        ****                         moveForwardThenBackward(PUCK_GRID_FROM_NORTH - DISTANCE_FRONT_SENSOR_FROM_C
 957              		.loc 1 647 0
 958 0514 1C4D     		ldr	r5, .L58
 959 0516 A86C     		ldr	r0, [r5, #72]
 960 0518 6FF03603 		mvn	r3, #54
 961 051c 03FB00F0 		mul	r0, r3, r0
 962 0520 0094     		str	r4, [sp]
 963 0522 4623     		movs	r3, #70
 964 0524 0522     		movs	r2, #5
 965 0526 2146     		mov	r1, r4
 966 0528 E130     		adds	r0, r0, #225
 967 052a FFF7FEFF 		bl	moveForwardThenBackward
 968              	.LVL140:
 648:main.c        ****                         straightAdjust(FRONT_SENSORS);
 969              		.loc 1 648 0
 970 052e 0720     		movs	r0, #7
 971 0530 FFF7FEFF 		bl	straightAdjust
 972              	.LVL141:
 649:main.c        ****                         changeOrientation(WEST, SPEED_LOW);
 973              		.loc 1 649 0
 974 0534 4621     		movs	r1, #70
 975 0536 0320     		movs	r0, #3
 976 0538 FFF7FEFF 		bl	changeOrientation
 977              	.LVL142:
 650:main.c        ****                         
 651:main.c        ****                         state = STATE_FIND_REQUIRED_PUCK;       // CHANGE STATE
 978              		.loc 1 651 0
 979 053c 0423     		movs	r3, #4
 980 053e 6B60     		str	r3, [r5, #4]
 652:main.c        ****                         
 653:main.c        ****                         break;
 981              		.loc 1 653 0
 982 0540 04E1     		b	.L32
 983              	.L33:
 654:main.c        ****                     }   
 655:main.c        ****                     else {
 656:main.c        ****                         // Not enough distance to continue this route
 657:main.c        ****                         moveUntil(initial_tolerance, BACKWARD, LESS_THAN, BACK_LEFT, SPEED, TRUE); 
 984              		.loc 1 657 0
 985 0542 1B4B     		ldr	r3, .L58+40
 986 0544 1868     		ldr	r0, [r3]
 987 0546 0124     		movs	r4, #1
 988 0548 0194     		str	r4, [sp, #4]
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cckoGjaV.s 			page 30


 989 054a C825     		movs	r5, #200
 990 054c 0095     		str	r5, [sp]
 991 054e 0623     		movs	r3, #6
 992 0550 2246     		mov	r2, r4
 993 0552 0021     		movs	r1, #0
 994 0554 FFF7FEFF 		bl	moveUntil
 995              	.LVL143:
 658:main.c        ****                         changeOrientation(EAST, SPEED);
 996              		.loc 1 658 0
 997 0558 2946     		mov	r1, r5
 998 055a 2046     		mov	r0, r4
 999 055c FFF7FEFF 		bl	changeOrientation
 1000              	.LVL144:
 659:main.c        ****                         if (block_west_clearance == 1) { preferential_route = WEST; } else {prefere
 1001              		.loc 1 659 0
 1002 0560 094B     		ldr	r3, .L58
 1003 0562 B3F94230 		ldrsh	r3, [r3, #66]
 1004 0566 A342     		cmp	r3, r4
 1005 0568 03D1     		bne	.L34
 1006              		.loc 1 659 0 is_stmt 0 discriminator 1
 1007 056a 0322     		movs	r2, #3
 1008 056c 0A4B     		ldr	r3, .L58+16
 1009 056e 1A60     		str	r2, [r3]
 1010 0570 ECE0     		b	.L32
 1011              	.L34:
 1012              		.loc 1 659 0 discriminator 2
 1013 0572 0222     		movs	r2, #2
 1014 0574 084B     		ldr	r3, .L58+16
 1015 0576 1A60     		str	r2, [r3]
 1016 0578 E8E0     		b	.L32
 1017              	.L28:
 605:main.c        ****                 UART_1_PutString("Taking east route");
 1018              		.loc 1 605 0 is_stmt 1
 1019 057a 074B     		ldr	r3, .L58+16
 1020 057c 1B68     		ldr	r3, [r3]
 1021 057e 012B     		cmp	r3, #1
 1022 0580 40F0E480 		bne	.L32
 1023 0584 44E7     		b	.L35
 1024              	.L59:
 1025 0586 00BF     		.align	2
 1026              	.L58:
 1027 0588 00000000 		.word	.LANCHOR0
 1028 058c 00000000 		.word	output
 1029 0590 00000000 		.word	sensor_distances
 1030 0594 8C000000 		.word	.LC6
 1031 0598 00000000 		.word	preferential_route
 1032 059c AC000000 		.word	.LC7
 1033 05a0 C8000000 		.word	.LC8
 1034 05a4 E4000000 		.word	.LC9
 1035 05a8 00010000 		.word	.LC10
 1036 05ac 1C010000 		.word	.LC11
 1037 05b0 00000000 		.word	initial_tolerance
 1038 05b4 30010000 		.word	.LC12
 1039 05b8 00000000 		.word	global_distance
 1040 05bc 48010000 		.word	.LC13
 1041              	.L41:
 660:main.c        ****                         break;  
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cckoGjaV.s 			page 31


 661:main.c        ****                     }
 662:main.c        ****                 }
 663:main.c        ****             }
 664:main.c        ****             
 665:main.c        ****     // WEST ROUTE: 
 666:main.c        ****             while (preferential_route == WEST) {
 667:main.c        ****                 UART_1_PutString("Taking west route");
 1042              		.loc 1 667 0
 1043 05c0 9148     		ldr	r0, .L60
 1044 05c2 FFF7FEFF 		bl	UART_1_PutString
 1045              	.LVL145:
 668:main.c        ****                 moveUntil(CLEARANCE_RADIUS_CENTER_TO_BACK + DISTANCE_FRONT_SENSOR_FROM_CENTER, BACK
 1046              		.loc 1 668 0
 1047 05c6 0124     		movs	r4, #1
 1048 05c8 0194     		str	r4, [sp, #4]
 1049 05ca C826     		movs	r6, #200
 1050 05cc 0096     		str	r6, [sp]
 1051 05ce 0423     		movs	r3, #4
 1052 05d0 2246     		mov	r2, r4
 1053 05d2 0021     		movs	r1, #0
 1054 05d4 4FF49170 		mov	r0, #290
 1055 05d8 FFF7FEFF 		bl	moveUntil
 1056              	.LVL146:
 669:main.c        ****                 straightAdjust(BACK_SENSORS); //? Remove if it fucks things up
 1057              		.loc 1 669 0
 1058 05dc 0820     		movs	r0, #8
 1059 05de FFF7FEFF 		bl	straightAdjust
 1060              	.LVL147:
 670:main.c        ****                 changeOrientation(NORTH, SPEED);
 1061              		.loc 1 670 0
 1062 05e2 3146     		mov	r1, r6
 1063 05e4 0020     		movs	r0, #0
 1064 05e6 FFF7FEFF 		bl	changeOrientation
 1065              	.LVL148:
 671:main.c        ****                 
 672:main.c        ****                 distanceSensor(BACK_LEFT);          // checking initial distance from the wall
 1066              		.loc 1 672 0
 1067 05ea 0620     		movs	r0, #6
 1068 05ec FFF7FEFF 		bl	distanceSensor
 1069              	.LVL149:
 673:main.c        ****                 CyDelay(50);
 1070              		.loc 1 673 0
 1071 05f0 3220     		movs	r0, #50
 1072 05f2 FFF7FEFF 		bl	CyDelay
 1073              	.LVL150:
 674:main.c        ****                 initial_tolerance = sensor_distances[BACK_LEFT];
 1074              		.loc 1 674 0
 1075 05f6 854B     		ldr	r3, .L60+4
 1076 05f8 9B69     		ldr	r3, [r3, #24]
 1077 05fa 854D     		ldr	r5, .L60+8
 1078 05fc 2B60     		str	r3, [r5]
 675:main.c        ****                 
 676:main.c        ****                 straightAdjust(BACK_SENSORS); //? Remove if it fucks things up
 1079              		.loc 1 676 0
 1080 05fe 0820     		movs	r0, #8
 1081 0600 FFF7FEFF 		bl	straightAdjust
 1082              	.LVL151:
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cckoGjaV.s 			page 32


 677:main.c        ****                 moveUntil(PUCK_GRID_FROM_NORTH + DISTANCE_FRONT_SENSOR_FROM_CENTER - PUCK_GRID_DIST
 1083              		.loc 1 677 0
 1084 0604 834B     		ldr	r3, .L60+12
 1085 0606 986C     		ldr	r0, [r3, #72]
 1086 0608 6FF03603 		mvn	r3, #54
 1087 060c 03FB00F0 		mul	r0, r3, r0
 1088 0610 0194     		str	r4, [sp, #4]
 1089 0612 0096     		str	r6, [sp]
 1090 0614 2346     		mov	r3, r4
 1091 0616 2246     		mov	r2, r4
 1092 0618 2146     		mov	r1, r4
 1093 061a 00F24510 		addw	r0, r0, #325
 1094 061e FFF7FEFF 		bl	moveUntil
 1095              	.LVL152:
 678:main.c        ****                 
 679:main.c        ****                 sprintf(output, "initial tolerance: %d\n", initial_tolerance);      
 1096              		.loc 1 679 0
 1097 0622 7D4C     		ldr	r4, .L60+16
 1098 0624 2A68     		ldr	r2, [r5]
 1099 0626 7D49     		ldr	r1, .L60+20
 1100 0628 2046     		mov	r0, r4
 1101 062a FFF7FEFF 		bl	sprintf
 1102              	.LVL153:
 680:main.c        ****                 UART_1_PutString(output); 
 1103              		.loc 1 680 0
 1104 062e 2046     		mov	r0, r4
 1105 0630 FFF7FEFF 		bl	UART_1_PutString
 1106              	.LVL154:
 681:main.c        ****                 
 682:main.c        ****                 sprintf(output, "global distance: %d\n", global_distance);      
 1107              		.loc 1 682 0
 1108 0634 7A4E     		ldr	r6, .L60+24
 1109 0636 3268     		ldr	r2, [r6]
 1110 0638 7A49     		ldr	r1, .L60+28
 1111 063a 2046     		mov	r0, r4
 1112 063c FFF7FEFF 		bl	sprintf
 1113              	.LVL155:
 683:main.c        ****                 UART_1_PutString(output); 
 1114              		.loc 1 683 0
 1115 0640 2046     		mov	r0, r4
 1116 0642 FFF7FEFF 		bl	UART_1_PutString
 1117              	.LVL156:
 684:main.c        ****                 
 685:main.c        ****                 
 686:main.c        ****                 // move until corner wall
 687:main.c        ****                 if (global_distance < ARENA_WIDTH - PUCK_GRID_FROM_NORTH - DISTANCE_BACK_SENSOR_FRO
 1118              		.loc 1 687 0
 1119 0646 2868     		ldr	r0, [r5]
 1120 0648 C0F51473 		rsb	r3, r0, #592
 1121 064c 0333     		adds	r3, r3, #3
 1122 064e 3268     		ldr	r2, [r6]
 1123 0650 9342     		cmp	r3, r2
 1124 0652 20DD     		ble	.L36
 688:main.c        ****                     // Has hit the pucks and must try the west route
 689:main.c        ****                     moveUntil(initial_tolerance, BACKWARD, LESS_THAN, BACK_LEFT, SPEED, TRUE);  // 
 1125              		.loc 1 689 0
 1126 0654 0124     		movs	r4, #1
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cckoGjaV.s 			page 33


 1127 0656 0194     		str	r4, [sp, #4]
 1128 0658 C825     		movs	r5, #200
 1129 065a 0095     		str	r5, [sp]
 1130 065c 0623     		movs	r3, #6
 1131 065e 2246     		mov	r2, r4
 1132 0660 0021     		movs	r1, #0
 1133 0662 FFF7FEFF 		bl	moveUntil
 1134              	.LVL157:
 690:main.c        ****                     changeOrientation(EAST, SPEED);
 1135              		.loc 1 690 0
 1136 0666 2946     		mov	r1, r5
 1137 0668 2046     		mov	r0, r4
 1138 066a FFF7FEFF 		bl	changeOrientation
 1139              	.LVL158:
 691:main.c        ****                     moveUntil(150,FORWARD,LESS_THAN,FRONT_MIDDLE,SPEED,TRUE);   // bring us back to
 1140              		.loc 1 691 0
 1141 066e 0194     		str	r4, [sp, #4]
 1142 0670 0095     		str	r5, [sp]
 1143 0672 0523     		movs	r3, #5
 1144 0674 2246     		mov	r2, r4
 1145 0676 2146     		mov	r1, r4
 1146 0678 9620     		movs	r0, #150
 1147 067a FFF7FEFF 		bl	moveUntil
 1148              	.LVL159:
 692:main.c        ****                     if (block_east_clearance == 1) { preferential_route = EAST; } else {preferentia
 1149              		.loc 1 692 0
 1150 067e 654B     		ldr	r3, .L60+12
 1151 0680 B3F94030 		ldrsh	r3, [r3, #64]
 1152 0684 A342     		cmp	r3, r4
 1153 0686 02D1     		bne	.L37
 1154              		.loc 1 692 0 is_stmt 0 discriminator 1
 1155 0688 674B     		ldr	r3, .L60+32
 1156 068a 1C60     		str	r4, [r3]
 1157 068c 63E0     		b	.L38
 1158              	.L37:
 1159              		.loc 1 692 0 discriminator 2
 1160 068e 0222     		movs	r2, #2
 1161 0690 654B     		ldr	r3, .L60+32
 1162 0692 1A60     		str	r2, [r3]
 1163 0694 5FE0     		b	.L38
 1164              	.L36:
 693:main.c        ****                     break;  // breaks out of the route to change routes 
 694:main.c        ****                 }
 695:main.c        ****                 else {
 696:main.c        ****                     // have moved into the corner, checking if enough tolerance in corner 
 697:main.c        ****                     distanceSensor(SIDE_RIGHT); 
 1165              		.loc 1 697 0 is_stmt 1
 1166 0696 0320     		movs	r0, #3
 1167 0698 FFF7FEFF 		bl	distanceSensor
 1168              	.LVL160:
 698:main.c        ****                     CyDelay(50);
 1169              		.loc 1 698 0
 1170 069c 3220     		movs	r0, #50
 1171 069e FFF7FEFF 		bl	CyDelay
 1172              	.LVL161:
 699:main.c        ****                     if (sensor_distances[SIDE_RIGHT] > CLEARANCE_RADIUS_CENTER_TO_BACK - (SIDE_SENS
 1173              		.loc 1 699 0
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cckoGjaV.s 			page 34


 1174 06a2 5A4B     		ldr	r3, .L60+4
 1175 06a4 DB68     		ldr	r3, [r3, #12]
 1176 06a6 732B     		cmp	r3, #115
 1177 06a8 2DDD     		ble	.L39
 700:main.c        ****     // continue with the route MAIN CODE FOR ROUTE
 701:main.c        ****                         straightAdjust(FRONT_SENSORS);
 1178              		.loc 1 701 0
 1179 06aa 0720     		movs	r0, #7
 1180 06ac FFF7FEFF 		bl	straightAdjust
 1181              	.LVL162:
 702:main.c        ****                         changeOrientation(EAST, SPEED);
 1182              		.loc 1 702 0
 1183 06b0 C821     		movs	r1, #200
 1184 06b2 0120     		movs	r0, #1
 1185 06b4 FFF7FEFF 		bl	changeOrientation
 1186              	.LVL163:
 703:main.c        ****                         straightAdjust(BACK_SENSORS);
 1187              		.loc 1 703 0
 1188 06b8 0820     		movs	r0, #8
 1189 06ba FFF7FEFF 		bl	straightAdjust
 1190              	.LVL164:
 704:main.c        **** 
 705:main.c        ****                         moveUntil(DISTANCE_MIDDLE_STOPPED_FROM_PUCK, FORWARD, LESS_THAN, FRONT_MIDD
 1191              		.loc 1 705 0
 1192 06be 0124     		movs	r4, #1
 1193 06c0 0194     		str	r4, [sp, #4]
 1194 06c2 C820     		movs	r0, #200
 1195 06c4 0090     		str	r0, [sp]
 1196 06c6 0523     		movs	r3, #5
 1197 06c8 2246     		mov	r2, r4
 1198 06ca 2146     		mov	r1, r4
 1199 06cc FFF7FEFF 		bl	moveUntil
 1200              	.LVL165:
 706:main.c        ****                         changeOrientation(NORTH, SPEED_LOW);
 1201              		.loc 1 706 0
 1202 06d0 4621     		movs	r1, #70
 1203 06d2 0020     		movs	r0, #0
 1204 06d4 FFF7FEFF 		bl	changeOrientation
 1205              	.LVL166:
 707:main.c        ****                         moveForwardThenBackward(PUCK_GRID_FROM_NORTH - DISTANCE_FRONT_SENSOR_FROM_C
 1206              		.loc 1 707 0
 1207 06d8 4E4D     		ldr	r5, .L60+12
 1208 06da A86C     		ldr	r0, [r5, #72]
 1209 06dc 6FF03603 		mvn	r3, #54
 1210 06e0 03FB00F0 		mul	r0, r3, r0
 1211 06e4 0094     		str	r4, [sp]
 1212 06e6 4623     		movs	r3, #70
 1213 06e8 0522     		movs	r2, #5
 1214 06ea 2146     		mov	r1, r4
 1215 06ec E130     		adds	r0, r0, #225
 1216 06ee FFF7FEFF 		bl	moveForwardThenBackward
 1217              	.LVL167:
 708:main.c        ****                         straightAdjust(FRONT_SENSORS);
 1218              		.loc 1 708 0
 1219 06f2 0720     		movs	r0, #7
 1220 06f4 FFF7FEFF 		bl	straightAdjust
 1221              	.LVL168:
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cckoGjaV.s 			page 35


 709:main.c        ****                         changeOrientation(EAST, SPEED_LOW);    
 1222              		.loc 1 709 0
 1223 06f8 4621     		movs	r1, #70
 1224 06fa 2046     		mov	r0, r4
 1225 06fc FFF7FEFF 		bl	changeOrientation
 1226              	.LVL169:
 710:main.c        ****                         
 711:main.c        ****                         state = STATE_FIND_REQUIRED_PUCK;       // CHANGE STATE
 1227              		.loc 1 711 0
 1228 0700 0423     		movs	r3, #4
 1229 0702 6B60     		str	r3, [r5, #4]
 712:main.c        ****                         
 713:main.c        ****                         break;
 1230              		.loc 1 713 0
 1231 0704 27E0     		b	.L38
 1232              	.L39:
 714:main.c        ****                     }   
 715:main.c        ****                     else {
 716:main.c        ****                         // Not enough distance to continue this route
 717:main.c        ****                         
 718:main.c        ****                         moveUntil(initial_tolerance, BACKWARD, LESS_THAN, BACK_LEFT, SPEED, TRUE); 
 1233              		.loc 1 718 0
 1234 0706 424B     		ldr	r3, .L60+8
 1235 0708 1868     		ldr	r0, [r3]
 1236 070a 0124     		movs	r4, #1
 1237 070c 0194     		str	r4, [sp, #4]
 1238 070e C825     		movs	r5, #200
 1239 0710 0095     		str	r5, [sp]
 1240 0712 0623     		movs	r3, #6
 1241 0714 2246     		mov	r2, r4
 1242 0716 0021     		movs	r1, #0
 1243 0718 FFF7FEFF 		bl	moveUntil
 1244              	.LVL170:
 719:main.c        ****                         changeOrientation(EAST, SPEED);
 1245              		.loc 1 719 0
 1246 071c 2946     		mov	r1, r5
 1247 071e 2046     		mov	r0, r4
 1248 0720 FFF7FEFF 		bl	changeOrientation
 1249              	.LVL171:
 720:main.c        ****                         moveUntil(150,FORWARD,LESS_THAN,FRONT_MIDDLE,SPEED,TRUE);   // bring us bac
 1250              		.loc 1 720 0
 1251 0724 0194     		str	r4, [sp, #4]
 1252 0726 0095     		str	r5, [sp]
 1253 0728 0523     		movs	r3, #5
 1254 072a 2246     		mov	r2, r4
 1255 072c 2146     		mov	r1, r4
 1256 072e 9620     		movs	r0, #150
 1257 0730 FFF7FEFF 		bl	moveUntil
 1258              	.LVL172:
 721:main.c        **** 
 722:main.c        ****                         if (block_east_clearance == 1) { preferential_route = EAST; } else {prefere
 1259              		.loc 1 722 0
 1260 0734 374B     		ldr	r3, .L60+12
 1261 0736 B3F94030 		ldrsh	r3, [r3, #64]
 1262 073a A342     		cmp	r3, r4
 1263 073c 02D1     		bne	.L40
 1264              		.loc 1 722 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cckoGjaV.s 			page 36


 1265 073e 3A4B     		ldr	r3, .L60+32
 1266 0740 1C60     		str	r4, [r3]
 1267 0742 08E0     		b	.L38
 1268              	.L40:
 1269              		.loc 1 722 0 discriminator 2
 1270 0744 0222     		movs	r2, #2
 1271 0746 384B     		ldr	r3, .L60+32
 1272 0748 1A60     		str	r2, [r3]
 1273 074a 04E0     		b	.L38
 1274              	.L32:
 666:main.c        ****                 UART_1_PutString("Taking west route");
 1275              		.loc 1 666 0 is_stmt 1
 1276 074c 364B     		ldr	r3, .L60+32
 1277 074e 1B68     		ldr	r3, [r3]
 1278 0750 032B     		cmp	r3, #3
 1279 0752 3FF435AF 		beq	.L41
 1280              	.L38:
 723:main.c        ****                         break;
 724:main.c        ****                     }
 725:main.c        ****                 }
 726:main.c        ****                 
 727:main.c        ****                 
 728:main.c        ****             }
 729:main.c        ****             
 730:main.c        ****             
 731:main.c        ****     // MIDDLE ROUTE:         
 732:main.c        ****             if (preferential_route == MIDDLE) {
 1281              		.loc 1 732 0
 1282 0756 344B     		ldr	r3, .L60+32
 1283 0758 1B68     		ldr	r3, [r3]
 1284 075a 022B     		cmp	r3, #2
 1285 075c 40F0B480 		bne	.L29
 733:main.c        ****                 // check whether east or west clearence is clear, if thats the case, hug the side o
 734:main.c        ****                     // if EAST clearance is clear, we hug east side of block, and move towards east
 735:main.c        ****                     // if WEST clearance is clear, we hug the west side of the block, and move towa
 736:main.c        ****                 if (block_east_clearance == 1) {
 1286              		.loc 1 736 0
 1287 0760 2C4B     		ldr	r3, .L60+12
 1288 0762 B3F94030 		ldrsh	r3, [r3, #64]
 1289 0766 012B     		cmp	r3, #1
 1290 0768 60D1     		bne	.L42
 737:main.c        ****                     moveUntil(ARENA_LENGTH - block_location[EAST] - 100, BACKWARD, LESS_THAN, BACK_
 1291              		.loc 1 737 0
 1292 076a 2A4F     		ldr	r7, .L60+12
 1293 076c 786B     		ldr	r0, [r7, #52]
 1294 076e 0124     		movs	r4, #1
 1295 0770 0194     		str	r4, [sp, #4]
 1296 0772 C825     		movs	r5, #200
 1297 0774 0095     		str	r5, [sp]
 1298 0776 0423     		movs	r3, #4
 1299 0778 2246     		mov	r2, r4
 1300 077a 0021     		movs	r1, #0
 1301 077c C0F58960 		rsb	r0, r0, #1096
 1302 0780 1844     		add	r0, r0, r3
 1303 0782 FFF7FEFF 		bl	moveUntil
 1304              	.LVL173:
 738:main.c        ****                     straightAdjust(BACK_SENSORS); //? Remove if it fucks things up
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cckoGjaV.s 			page 37


 1305              		.loc 1 738 0
 1306 0786 0820     		movs	r0, #8
 1307 0788 FFF7FEFF 		bl	straightAdjust
 1308              	.LVL174:
 739:main.c        ****                     changeOrientation(NORTH, SPEED);
 1309              		.loc 1 739 0
 1310 078c 2946     		mov	r1, r5
 1311 078e 0020     		movs	r0, #0
 1312 0790 FFF7FEFF 		bl	changeOrientation
 1313              	.LVL175:
 740:main.c        ****                     straightAdjust(BACK_SENSORS); //? Remove if it fucks things up
 1314              		.loc 1 740 0
 1315 0794 0820     		movs	r0, #8
 1316 0796 FFF7FEFF 		bl	straightAdjust
 1317              	.LVL176:
 741:main.c        ****                     moveUntil(PUCK_GRID_FROM_NORTH + DISTANCE_MIDDLE_SENSOR_TO_CENTER - PUCK_GRID_D
 1318              		.loc 1 741 0
 1319 079a BB6C     		ldr	r3, [r7, #72]
 1320 079c 6FF03606 		mvn	r6, #54
 1321 07a0 06FB03F0 		mul	r0, r6, r3
 1322 07a4 0194     		str	r4, [sp, #4]
 1323 07a6 0095     		str	r5, [sp]
 1324 07a8 0523     		movs	r3, #5
 1325 07aa 2246     		mov	r2, r4
 1326 07ac 2146     		mov	r1, r4
 1327 07ae 00F59170 		add	r0, r0, #290
 1328 07b2 FFF7FEFF 		bl	moveUntil
 1329              	.LVL177:
 742:main.c        ****                     //translateMoveDynamic(CLEARANCE_RADIUS_CENTER_TO_BACK, 10, SPEED, FALSE); // C
 743:main.c        ****                     straightAdjust(FRONT_SENSORS);
 1330              		.loc 1 743 0
 1331 07b6 0720     		movs	r0, #7
 1332 07b8 FFF7FEFF 		bl	straightAdjust
 1333              	.LVL178:
 744:main.c        ****                     changeOrientation(EAST, SPEED);
 1334              		.loc 1 744 0
 1335 07bc 2946     		mov	r1, r5
 1336 07be 2046     		mov	r0, r4
 1337 07c0 FFF7FEFF 		bl	changeOrientation
 1338              	.LVL179:
 745:main.c        ****                     straightAdjust(BACK_SENSORS);
 1339              		.loc 1 745 0
 1340 07c4 0820     		movs	r0, #8
 1341 07c6 FFF7FEFF 		bl	straightAdjust
 1342              	.LVL180:
 746:main.c        **** 
 747:main.c        ****                     moveUntil(DISTANCE_MIDDLE_STOPPED_FROM_PUCK, FORWARD, LESS_THAN, FRONT_MIDDLE, 
 1343              		.loc 1 747 0
 1344 07ca 0194     		str	r4, [sp, #4]
 1345 07cc 0095     		str	r5, [sp]
 1346 07ce 0523     		movs	r3, #5
 1347 07d0 2246     		mov	r2, r4
 1348 07d2 2146     		mov	r1, r4
 1349 07d4 2846     		mov	r0, r5
 1350 07d6 FFF7FEFF 		bl	moveUntil
 1351              	.LVL181:
 748:main.c        ****                     changeOrientation(NORTH, SPEED_LOW);
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cckoGjaV.s 			page 38


 1352              		.loc 1 748 0
 1353 07da 4621     		movs	r1, #70
 1354 07dc 0020     		movs	r0, #0
 1355 07de FFF7FEFF 		bl	changeOrientation
 1356              	.LVL182:
 749:main.c        ****                     moveForwardThenBackward(PUCK_GRID_FROM_NORTH - DISTANCE_FRONT_SENSOR_FROM_CENTE
 1357              		.loc 1 749 0
 1358 07e2 B86C     		ldr	r0, [r7, #72]
 1359 07e4 06FB00F0 		mul	r0, r6, r0
 1360 07e8 0094     		str	r4, [sp]
 1361 07ea 4623     		movs	r3, #70
 1362 07ec 0522     		movs	r2, #5
 1363 07ee 2146     		mov	r1, r4
 1364 07f0 E130     		adds	r0, r0, #225
 1365 07f2 FFF7FEFF 		bl	moveForwardThenBackward
 1366              	.LVL183:
 750:main.c        ****                     straightAdjust(FRONT_SENSORS);
 1367              		.loc 1 750 0
 1368 07f6 0720     		movs	r0, #7
 1369 07f8 FFF7FEFF 		bl	straightAdjust
 1370              	.LVL184:
 751:main.c        ****                     changeOrientation(EAST, SPEED_LOW);
 1371              		.loc 1 751 0
 1372 07fc 4621     		movs	r1, #70
 1373 07fe 2046     		mov	r0, r4
 1374 0800 FFF7FEFF 		bl	changeOrientation
 1375              	.LVL185:
 1376 0804 5DE0     		b	.L43
 1377              	.L61:
 1378 0806 00BF     		.align	2
 1379              	.L60:
 1380 0808 60010000 		.word	.LC14
 1381 080c 00000000 		.word	sensor_distances
 1382 0810 00000000 		.word	initial_tolerance
 1383 0814 00000000 		.word	.LANCHOR0
 1384 0818 00000000 		.word	output
 1385 081c 30010000 		.word	.LC12
 1386 0820 00000000 		.word	global_distance
 1387 0824 48010000 		.word	.LC13
 1388 0828 00000000 		.word	preferential_route
 1389              	.L42:
 752:main.c        ****                     
 753:main.c        ****                 }
 754:main.c        ****                 
 755:main.c        ****                 
 756:main.c        ****                 else {
 757:main.c        ****                     moveUntil(ARENA_WIDTH - block_location[WEST] - 100, BACKWARD, GREATER_THAN, FRO
 1390              		.loc 1 757 0
 1391 082c A24F     		ldr	r7, .L62
 1392 082e F86B     		ldr	r0, [r7, #60]
 1393 0830 0124     		movs	r4, #1
 1394 0832 0194     		str	r4, [sp, #4]
 1395 0834 C825     		movs	r5, #200
 1396 0836 0095     		str	r5, [sp]
 1397 0838 0523     		movs	r3, #5
 1398 083a 4FF0FF32 		mov	r2, #-1
 1399 083e 0021     		movs	r1, #0
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cckoGjaV.s 			page 39


 1400 0840 C0F58960 		rsb	r0, r0, #1096
 1401 0844 0430     		adds	r0, r0, #4
 1402 0846 FFF7FEFF 		bl	moveUntil
 1403              	.LVL186:
 758:main.c        ****                     straightAdjust(FRONT_SENSORS);
 1404              		.loc 1 758 0
 1405 084a 0720     		movs	r0, #7
 1406 084c FFF7FEFF 		bl	straightAdjust
 1407              	.LVL187:
 759:main.c        ****                     changeOrientation(NORTH, SPEED);    // gets it ready for going aslong the wall 
 1408              		.loc 1 759 0
 1409 0850 2946     		mov	r1, r5
 1410 0852 0020     		movs	r0, #0
 1411 0854 FFF7FEFF 		bl	changeOrientation
 1412              	.LVL188:
 760:main.c        ****                     //straightAdjust();
 761:main.c        ****                     moveUntil(PUCK_GRID_FROM_NORTH + DISTANCE_MIDDLE_SENSOR_TO_CENTER - PUCK_GRID_D
 1413              		.loc 1 761 0
 1414 0858 BB6C     		ldr	r3, [r7, #72]
 1415 085a 6FF03606 		mvn	r6, #54
 1416 085e 06FB03F0 		mul	r0, r6, r3
 1417 0862 0194     		str	r4, [sp, #4]
 1418 0864 0095     		str	r5, [sp]
 1419 0866 0523     		movs	r3, #5
 1420 0868 2246     		mov	r2, r4
 1421 086a 2146     		mov	r1, r4
 1422 086c 00F59170 		add	r0, r0, #290
 1423 0870 FFF7FEFF 		bl	moveUntil
 1424              	.LVL189:
 762:main.c        ****                     straightAdjust(FRONT_SENSORS);
 1425              		.loc 1 762 0
 1426 0874 0720     		movs	r0, #7
 1427 0876 FFF7FEFF 		bl	straightAdjust
 1428              	.LVL190:
 763:main.c        ****                     changeOrientation(WEST, SPEED);
 1429              		.loc 1 763 0
 1430 087a 2946     		mov	r1, r5
 1431 087c 0320     		movs	r0, #3
 1432 087e FFF7FEFF 		bl	changeOrientation
 1433              	.LVL191:
 764:main.c        ****                     straightAdjust(BACK_SENSORS);
 1434              		.loc 1 764 0
 1435 0882 0820     		movs	r0, #8
 1436 0884 FFF7FEFF 		bl	straightAdjust
 1437              	.LVL192:
 765:main.c        **** 
 766:main.c        ****                     
 767:main.c        ****                     moveUntil(DISTANCE_MIDDLE_STOPPED_FROM_PUCK, FORWARD, LESS_THAN, FRONT_MIDDLE, 
 1438              		.loc 1 767 0
 1439 0888 0194     		str	r4, [sp, #4]
 1440 088a 0095     		str	r5, [sp]
 1441 088c 0523     		movs	r3, #5
 1442 088e 2246     		mov	r2, r4
 1443 0890 2146     		mov	r1, r4
 1444 0892 2846     		mov	r0, r5
 1445 0894 FFF7FEFF 		bl	moveUntil
 1446              	.LVL193:
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cckoGjaV.s 			page 40


 768:main.c        ****                     changeOrientation(NORTH, SPEED_LOW);
 1447              		.loc 1 768 0
 1448 0898 4621     		movs	r1, #70
 1449 089a 0020     		movs	r0, #0
 1450 089c FFF7FEFF 		bl	changeOrientation
 1451              	.LVL194:
 769:main.c        ****                     moveForwardThenBackward(PUCK_GRID_FROM_NORTH - DISTANCE_FRONT_SENSOR_FROM_CENTE
 1452              		.loc 1 769 0
 1453 08a0 B86C     		ldr	r0, [r7, #72]
 1454 08a2 06FB00F0 		mul	r0, r6, r0
 1455 08a6 0094     		str	r4, [sp]
 1456 08a8 4623     		movs	r3, #70
 1457 08aa 0522     		movs	r2, #5
 1458 08ac 2146     		mov	r1, r4
 1459 08ae E130     		adds	r0, r0, #225
 1460 08b0 FFF7FEFF 		bl	moveForwardThenBackward
 1461              	.LVL195:
 770:main.c        ****                     straightAdjust(FRONT_SENSORS);
 1462              		.loc 1 770 0
 1463 08b4 0720     		movs	r0, #7
 1464 08b6 FFF7FEFF 		bl	straightAdjust
 1465              	.LVL196:
 771:main.c        ****                     changeOrientation(WEST, SPEED_LOW);
 1466              		.loc 1 771 0
 1467 08ba 4621     		movs	r1, #70
 1468 08bc 0320     		movs	r0, #3
 1469 08be FFF7FEFF 		bl	changeOrientation
 1470              	.LVL197:
 1471              	.L43:
 772:main.c        **** 
 773:main.c        ****                 }
 774:main.c        ****                 
 775:main.c        ****                 state = STATE_FIND_REQUIRED_PUCK;       // CHANGE STATE
 1472              		.loc 1 775 0
 1473 08c2 0422     		movs	r2, #4
 1474 08c4 7C4B     		ldr	r3, .L62
 1475 08c6 5A60     		str	r2, [r3, #4]
 1476              	.L29:
 776:main.c        ****                 
 777:main.c        ****             }
 778:main.c        ****             
 779:main.c        ****             
 780:main.c        ****             
 781:main.c        ****     // OLD CODE: 
 782:main.c        ****             /*
 783:main.c        ****             if (block_east_clearance && puck_east_clearance){
 784:main.c        ****                 
 785:main.c        ****                 moveUntil(WALL_CLEARANCE_FRONT, BACKWARD, GREATER_THAN, FRONT_MIDDLE, SPEED, TRUE);
 786:main.c        ****                 straightAdjust(FRONT_SENSORS);
 787:main.c        **** <<<<<<< HEAD
 788:main.c        ****                 changeOrientation(NORTH, SPEED);    // gets it ready for going aslong the wall 
 789:main.c        ****                 //straightAdjust();
 790:main.c        ****                 moveUntil(PUCK_GRID_FROM_NORTH - DISTANCE_FRONT_SENSOR_FROM_CENTER - PUCK_GRID_DIST
 791:main.c        **** =======
 792:main.c        ****                 changeOrientation(NORTH, SPEED);
 793:main.c        ****                 straightAdjust(BACK_SENSORS);
 794:main.c        ****                 moveUntil(PUCK_GRID_FROM_NORTH - DISTANCE_MIDDLE_SENSOR_TO_CENTER - PUCK_GRID_DISTA
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cckoGjaV.s 			page 41


 795:main.c        **** >>>>>>> 46d80350303a0caac89f9e1b47d05a20e237c383
 796:main.c        ****                 straightAdjust(FRONT_SENSORS);
 797:main.c        ****                 changeOrientation(WEST, SPEED);
 798:main.c        ****                 straightAdjust(BACK_SENSORS); /////////////////////////////////////
 799:main.c        **** 
 800:main.c        ****                 
 801:main.c        ****                 moveUntil(DISTANCE_MIDDLE_STOPPED_FROM_PUCK, FORWARD, LESS_THAN, FRONT_MIDDLE, SPEE
 802:main.c        ****                 changeOrientation(NORTH, SPEED_LOW);
 803:main.c        ****                 straightAdjust(FRONT_SENSORS); /////////////////////////////////////
 804:main.c        ****                 moveForwardThenBackward(PUCK_GRID_FROM_NORTH - DISTANCE_MIDDLE_SENSOR_TO_CENTER - P
 805:main.c        ****                 straightAdjust(FRONT_SENSORS);
 806:main.c        ****                 changeOrientation(WEST, SPEED_LOW);
 807:main.c        ****                 
 808:main.c        ****             }
 809:main.c        ****             
 810:main.c        ****             else if (block_west_clearance && puck_west_clearance){
 811:main.c        ****             
 812:main.c        ****                 //moveUntil(CLEARANCE_RADIUS_CENTER_TO_FRONT, BACKWARD, GREATER_THAN, FRONT_LEFT, S
 813:main.c        ****                 moveUntil(CLEARANCE_RADIUS_CENTER_TO_BACK - DISTANCE_BACK_SENSOR_FROM_CENTER, BACKW
 814:main.c        **** <<<<<<< HEAD
 815:main.c        ****                 straightAdjust(BACK_SENSORS); //? Remove if it fucks things up
 816:main.c        **** =======
 817:main.c        ****                 straightAdjust(FRONT_SENSORS); //? Remove if it fucks things up
 818:main.c        **** >>>>>>> 46d80350303a0caac89f9e1b47d05a20e237c383
 819:main.c        ****                 changeOrientation(NORTH, SPEED);
 820:main.c        ****                 straightAdjust(BACK_SENSORS); //? Remove if it fucks things up
 821:main.c        ****                 moveUntil(PUCK_GRID_FROM_NORTH - DISTANCE_FRONT_SENSOR_FROM_CENTER - PUCK_GRID_DIST
 822:main.c        ****                 //translateMoveDynamic(CLEARANCE_RADIUS_CENTER_TO_BACK, 10, SPEED, FALSE); // Chang
 823:main.c        ****                 straightAdjust(FRONT_SENSORS);
 824:main.c        ****                 changeOrientation(EAST, SPEED);
 825:main.c        ****                 straightAdjust(BACK_SENSORS);
 826:main.c        **** 
 827:main.c        ****                 moveUntil(DISTANCE_MIDDLE_STOPPED_FROM_PUCK, FORWARD, LESS_THAN, FRONT_MIDDLE, SPEE
 828:main.c        ****                 changeOrientation(NORTH, SPEED_LOW);
 829:main.c        ****                 moveForwardThenBackward(PUCK_GRID_FROM_NORTH - DISTANCE_FRONT_SENSOR_FROM_CENTER - 
 830:main.c        ****                 straightAdjust(FRONT_SENSORS);
 831:main.c        ****                 changeOrientation(EAST, SPEED_LOW);
 832:main.c        ****             }
 833:main.c        ****             
 834:main.c        ****             
 835:main.c        ****             else if (block_east_clearance && puck_west_clearance){
 836:main.c        **** 
 837:main.c        ****                 //moveUntil(block_and_puck_edge_midpoint - DISTANCE_BACK_SENSOR_FROM_CENTER, BACKWA
 838:main.c        ****                 moveUntil(block_location[EAST] - DISTANCE_FRONT_SENSOR_FROM_CENTER - WIDTH_WHEEL_TO
 839:main.c        ****                 straightAdjust(FRONT_SENSORS);
 840:main.c        ****                 changeOrientation(NORTH, SPEED);
 841:main.c        ****                 //straightAdjust();
 842:main.c        ****                 moveUntil(PUCK_GRID_FROM_NORTH - DISTANCE_FRONT_SENSOR_FROM_CENTER - PUCK_GRID_DIST
 843:main.c        ****                 straightAdjust(FRONT_SENSORS);
 844:main.c        ****                 changeOrientation(EAST, SPEED);
 845:main.c        ****                 straightAdjust(BACK_SENSORS);
 846:main.c        ****                 
 847:main.c        ****                 moveUntil(DISTANCE_MIDDLE_STOPPED_FROM_PUCK, FORWARD, LESS_THAN, FRONT_MIDDLE, SPEE
 848:main.c        ****                 changeOrientation(NORTH, SPEED_LOW);
 849:main.c        ****                 moveForwardThenBackward(PUCK_GRID_FROM_NORTH - DISTANCE_FRONT_SENSOR_FROM_CENTER - 
 850:main.c        ****                 straightAdjust(FRONT_SENSORS);
 851:main.c        ****                 changeOrientation(EAST, SPEED_LOW);
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cckoGjaV.s 			page 42


 852:main.c        ****             }
 853:main.c        ****             
 854:main.c        ****             else if (block_west_clearance && puck_east_clearance){
 855:main.c        ****                 
 856:main.c        ****                 moveUntil(block_location[WEST] - DISTANCE_FRONT_SENSOR_FROM_CENTER + WIDTH_WHEEL_TO
 857:main.c        ****                 straightAdjust(FRONT_SENSORS);
 858:main.c        ****                 changeOrientation(NORTH, SPEED);
 859:main.c        ****                 moveUntil(PUCK_GRID_FROM_NORTH - DISTANCE_FRONT_SENSOR_FROM_CENTER - PUCK_GRID_DIST
 860:main.c        ****                 straightAdjust(FRONT_SENSORS);
 861:main.c        ****                 changeOrientation(WEST, SPEED);
 862:main.c        ****                 straightAdjust(BACK_SENSORS);
 863:main.c        ****                 
 864:main.c        ****                 moveUntil(DISTANCE_MIDDLE_STOPPED_FROM_PUCK, FORWARD, LESS_THAN, FRONT_MIDDLE, SPEE
 865:main.c        ****                 changeOrientation(NORTH, SPEED_LOW);
 866:main.c        ****                 moveForwardThenBackward(PUCK_GRID_FROM_NORTH - DISTANCE_FRONT_SENSOR_FROM_CENTER - 
 867:main.c        ****                 straightAdjust(FRONT_SENSORS);
 868:main.c        ****                 changeOrientation(WEST, SPEED_LOW);
 869:main.c        ****             }
 870:main.c        ****             */
 871:main.c        ****             
 872:main.c        ****             
 873:main.c        **** 
 874:main.c        ****         }
 875:main.c        ****  
 876:main.c        **** //        
 877:main.c        **** // *** 4. STATE FIND REQUIRED PUCK: *** // 
 878:main.c        **** //
 879:main.c        ****         
 880:main.c        ****         
 881:main.c        ****         if (state == STATE_FIND_REQUIRED_PUCK){
 1477              		.loc 1 881 0
 1478 08c8 7B4B     		ldr	r3, .L62
 1479 08ca 5B68     		ldr	r3, [r3, #4]
 1480 08cc 042B     		cmp	r3, #4
 1481 08ce 19D1     		bne	.L44
 1482              	.LVL198:
 1483              	.LBB8:
 882:main.c        ****         
 883:main.c        ****         int puck_correct = FALSE;   // A flag to determine if the correct puck has been picked up
 884:main.c        ****         int puck_scan;
 885:main.c        ****         
 886:main.c        ****     
 887:main.c        ****         //Temp delete after teesting!!!!!!!!!!!!!!!!!!!!!
 888:main.c        ****         puck_correct = TRUE;
 889:main.c        ****         
 890:main.c        ****             
 891:main.c        ****         // Scanning puck:
 892:main.c        ****             
 893:main.c        ****         safety_override = TRUE;     // DEACTIVATES the safety override so pucks don't interfere  
 1484              		.loc 1 893 0
 1485 08d0 794C     		ldr	r4, .L62
 1486 08d2 0125     		movs	r5, #1
 1487 08d4 E564     		str	r5, [r4, #76]
 894:main.c        **** 
 895:main.c        ****         while (puck_correct == FALSE) 
 896:main.c        ****         {
 897:main.c        ****             moveDynamic(50, SPEED_LOW, TRUE);  // robot moves forward towards puck
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cckoGjaV.s 			page 43


 898:main.c        ****                                     // could replace this with the distance gathered from the ultra
 899:main.c        ****             changeHeightToPuck(ABOVE_1_PUCK, NEITHER);  // arm lowers onto robot
 900:main.c        ****             puck_scan = colourSensingOutput();  // colour sensor takes a scan
 901:main.c        ****             changeHeightToPuck(ABOVE_3_PUCK, NEITHER);  // arm returns to high position
 902:main.c        ****             moveDynamic(-50, SPEED, TRUE);   // robot moves backwards
 903:main.c        ****             if (puck_scan == puck_construction_plan[current_stage-1]) {puck_correct = TRUE;}       
 904:main.c        ****             else 
 905:main.c        ****             {
 906:main.c        ****                 /*
 907:main.c        ****                 // Bring us to the next puck along: 
 908:main.c        ****                 moveSwivel(45, SPEED, TRUE);
 909:main.c        ****                 moveDynamic(-30,SPEED, TRUE);
 910:main.c        ****                 moveSwivel(-30, SPEED, TRUE);
 911:main.c        ****                 */
 912:main.c        ****             }
 913:main.c        ****         }
 914:main.c        **** 
 915:main.c        ****         changeHeightToPuck(GROUND, NEITHER);      // arm lowers to ground
 1488              		.loc 1 915 0
 1489 08d6 0221     		movs	r1, #2
 1490 08d8 0020     		movs	r0, #0
 1491 08da FFF7FEFF 		bl	changeHeightToPuck
 1492              	.LVL199:
 916:main.c        ****         //armClose();
 917:main.c        ****         //changeHeightToPuck(1);
 918:main.c        ****         moveUntilPuck(CLAW_GROUND_ALGORITHM);
 1493              		.loc 1 918 0
 1494 08de 0520     		movs	r0, #5
 1495 08e0 FFF7FEFF 		bl	moveUntilPuck
 1496              	.LVL200:
 919:main.c        ****         //moveDynamic(60);       // robot moves forward
 920:main.c        ****         armClose();                 // claw closes on puck
 1497              		.loc 1 920 0
 1498 08e4 FFF7FEFF 		bl	armClose
 1499              	.LVL201:
 921:main.c        ****         changeHeightToPuck(ABOVE_3_PUCK, CLOSE);      // arm lifts up to highest position
 1500              		.loc 1 921 0
 1501 08e8 2946     		mov	r1, r5
 1502 08ea 0320     		movs	r0, #3
 1503 08ec FFF7FEFF 		bl	changeHeightToPuck
 1504              	.LVL202:
 922:main.c        ****         moveDynamic(-60, SPEED, TRUE);       // robot moves back away from puck area 
 1505              		.loc 1 922 0
 1506 08f0 2A46     		mov	r2, r5
 1507 08f2 C821     		movs	r1, #200
 1508 08f4 6FF03B00 		mvn	r0, #59
 1509 08f8 FFF7FEFF 		bl	moveDynamic
 1510              	.LVL203:
 923:main.c        ****         
 924:main.c        ****         
 925:main.c        ****         safety_override = FALSE;        // reactivate safety override
 1511              		.loc 1 925 0
 1512 08fc 0023     		movs	r3, #0
 1513 08fe E364     		str	r3, [r4, #76]
 926:main.c        ****     
 927:main.c        ****         state = STATE_RETURN_TO_SOUTH;
 1514              		.loc 1 927 0
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cckoGjaV.s 			page 44


 1515 0900 0523     		movs	r3, #5
 1516 0902 6360     		str	r3, [r4, #4]
 1517              	.LVL204:
 1518              	.L44:
 1519              	.LBE8:
 928:main.c        ****    
 929:main.c        ****         }
 930:main.c        ****  
 931:main.c        ****         
 932:main.c        **** //
 933:main.c        **** // *** 5. STATE RETURN TO SOUTH: *** // 
 934:main.c        **** //      
 935:main.c        ****         
 936:main.c        ****         // Assume that we are currently in the north side of the arena facing the pucks.
 937:main.c        ****         // This state will return us to the south side of the block and face east at the east wall.
 938:main.c        ****         if (state == STATE_RETURN_TO_SOUTH){
 1520              		.loc 1 938 0
 1521 0904 6C4B     		ldr	r3, .L62
 1522 0906 5B68     		ldr	r3, [r3, #4]
 1523 0908 052B     		cmp	r3, #5
 1524 090a 65D1     		bne	.L45
 939:main.c        ****             if (preferential_route == EAST){
 1525              		.loc 1 939 0
 1526 090c 6B4B     		ldr	r3, .L62+4
 1527 090e 1B68     		ldr	r3, [r3]
 1528 0910 012B     		cmp	r3, #1
 1529 0912 31D1     		bne	.L46
 940:main.c        ****                 
 941:main.c        ****                 straightAdjust(BACK_SENSORS); /////////////////////////
 1530              		.loc 1 941 0
 1531 0914 0820     		movs	r0, #8
 1532 0916 FFF7FEFF 		bl	straightAdjust
 1533              	.LVL205:
 942:main.c        ****                 moveUntil(CLEARANCE_RADIUS_CENTER_TO_BACK - 190, BACKWARD, LESS_THAN, BACK_RIGHT, S
 1534              		.loc 1 942 0
 1535 091a 0124     		movs	r4, #1
 1536 091c 0194     		str	r4, [sp, #4]
 1537 091e C825     		movs	r5, #200
 1538 0920 0095     		str	r5, [sp]
 1539 0922 0423     		movs	r3, #4
 1540 0924 2246     		mov	r2, r4
 1541 0926 0021     		movs	r1, #0
 1542 0928 3220     		movs	r0, #50
 1543 092a FFF7FEFF 		bl	moveUntil
 1544              	.LVL206:
 943:main.c        ****                 // straightAdjust() using back sensor?
 944:main.c        ****                 changeOrientation(NORTH,SPEED);
 1545              		.loc 1 944 0
 1546 092e 2946     		mov	r1, r5
 1547 0930 0020     		movs	r0, #0
 1548 0932 FFF7FEFF 		bl	changeOrientation
 1549              	.LVL207:
 945:main.c        ****                 straightAdjust(FRONT_SENSORS);
 1550              		.loc 1 945 0
 1551 0936 0720     		movs	r0, #7
 1552 0938 FFF7FEFF 		bl	straightAdjust
 1553              	.LVL208:
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cckoGjaV.s 			page 45


 946:main.c        ****                 moveUntil(CLEARANCE_RADIUS_CENTER_TO_BACK - 140, BACKWARD, LESS_THAN, BACK_RIGHT, S
 1554              		.loc 1 946 0
 1555 093c 0194     		str	r4, [sp, #4]
 1556 093e 0095     		str	r5, [sp]
 1557 0940 0423     		movs	r3, #4
 1558 0942 2246     		mov	r2, r4
 1559 0944 0021     		movs	r1, #0
 1560 0946 6420     		movs	r0, #100
 1561 0948 FFF7FEFF 		bl	moveUntil
 1562              	.LVL209:
 947:main.c        ****                 straightAdjust(BACK_SENSORS);
 1563              		.loc 1 947 0
 1564 094c 0820     		movs	r0, #8
 1565 094e FFF7FEFF 		bl	straightAdjust
 1566              	.LVL210:
 948:main.c        ****                 changeOrientation(EAST,SPEED);
 1567              		.loc 1 948 0
 1568 0952 2946     		mov	r1, r5
 1569 0954 2046     		mov	r0, r4
 1570 0956 FFF7FEFF 		bl	changeOrientation
 1571              	.LVL211:
 949:main.c        ****                 straightAdjust(FRONT_SENSORS);
 1572              		.loc 1 949 0
 1573 095a 0720     		movs	r0, #7
 1574 095c FFF7FEFF 		bl	straightAdjust
 1575              	.LVL212:
 950:main.c        ****                 moveUntil(WALL_CLEARANCE_FRONT, FORWARD, LESS_THAN, FRONT_MIDDLE, SPEED, TRUE);
 1576              		.loc 1 950 0
 1577 0960 0194     		str	r4, [sp, #4]
 1578 0962 0095     		str	r5, [sp]
 1579 0964 0523     		movs	r3, #5
 1580 0966 2246     		mov	r2, r4
 1581 0968 2146     		mov	r1, r4
 1582 096a 2846     		mov	r0, r5
 1583 096c FFF7FEFF 		bl	moveUntil
 1584              	.LVL213:
 951:main.c        ****                 straightAdjust(FRONT_SENSORS);
 1585              		.loc 1 951 0
 1586 0970 0720     		movs	r0, #7
 1587 0972 FFF7FEFF 		bl	straightAdjust
 1588              	.LVL214:
 1589 0976 2CE0     		b	.L47
 1590              	.L46:
 952:main.c        ****                 
 953:main.c        ****             }
 954:main.c        ****             
 955:main.c        ****             else if (preferential_route == WEST){
 1591              		.loc 1 955 0
 1592 0978 032B     		cmp	r3, #3
 1593 097a 2AD1     		bne	.L47
 956:main.c        ****             
 957:main.c        ****                 moveUntil(CLEARANCE_RADIUS_CENTER_TO_BACK - DISTANCE_BACK_SENSOR_FROM_CENTER, BACKW
 1594              		.loc 1 957 0
 1595 097c 0124     		movs	r4, #1
 1596 097e 0194     		str	r4, [sp, #4]
 1597 0980 C825     		movs	r5, #200
 1598 0982 0095     		str	r5, [sp]
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cckoGjaV.s 			page 46


 1599 0984 0423     		movs	r3, #4
 1600 0986 2246     		mov	r2, r4
 1601 0988 0021     		movs	r1, #0
 1602 098a 0A20     		movs	r0, #10
 1603 098c FFF7FEFF 		bl	moveUntil
 1604              	.LVL215:
 958:main.c        ****                 // straightAdjust() using back sensor?
 959:main.c        ****                 changeOrientation(NORTH,SPEED);
 1605              		.loc 1 959 0
 1606 0990 2946     		mov	r1, r5
 1607 0992 0020     		movs	r0, #0
 1608 0994 FFF7FEFF 		bl	changeOrientation
 1609              	.LVL216:
 960:main.c        ****                 straightAdjust(FRONT_SENSORS);
 1610              		.loc 1 960 0
 1611 0998 0720     		movs	r0, #7
 1612 099a FFF7FEFF 		bl	straightAdjust
 1613              	.LVL217:
 961:main.c        ****                 moveUntil(CLEARANCE_RADIUS_CENTER_TO_BACK - 140, BACKWARD, LESS_THAN, BACK_RIGHT, S
 1614              		.loc 1 961 0
 1615 099e 0194     		str	r4, [sp, #4]
 1616 09a0 0095     		str	r5, [sp]
 1617 09a2 0423     		movs	r3, #4
 1618 09a4 2246     		mov	r2, r4
 1619 09a6 0021     		movs	r1, #0
 1620 09a8 6420     		movs	r0, #100
 1621 09aa FFF7FEFF 		bl	moveUntil
 1622              	.LVL218:
 962:main.c        ****                 //straightAdjust();
 963:main.c        ****                 changeOrientation(EAST,SPEED);
 1623              		.loc 1 963 0
 1624 09ae 2946     		mov	r1, r5
 1625 09b0 2046     		mov	r0, r4
 1626 09b2 FFF7FEFF 		bl	changeOrientation
 1627              	.LVL219:
 964:main.c        ****                 straightAdjust(FRONT_SENSORS);
 1628              		.loc 1 964 0
 1629 09b6 0720     		movs	r0, #7
 1630 09b8 FFF7FEFF 		bl	straightAdjust
 1631              	.LVL220:
 965:main.c        ****                 moveUntil(WALL_CLEARANCE_FRONT, FORWARD, LESS_THAN, FRONT_MIDDLE, SPEED, TRUE);
 1632              		.loc 1 965 0
 1633 09bc 0194     		str	r4, [sp, #4]
 1634 09be 0095     		str	r5, [sp]
 1635 09c0 0523     		movs	r3, #5
 1636 09c2 2246     		mov	r2, r4
 1637 09c4 2146     		mov	r1, r4
 1638 09c6 2846     		mov	r0, r5
 1639 09c8 FFF7FEFF 		bl	moveUntil
 1640              	.LVL221:
 966:main.c        ****                 straightAdjust(FRONT_SENSORS);
 1641              		.loc 1 966 0
 1642 09cc 0720     		movs	r0, #7
 1643 09ce FFF7FEFF 		bl	straightAdjust
 1644              	.LVL222:
 1645              	.L47:
 967:main.c        ****               
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cckoGjaV.s 			page 47


 968:main.c        ****             }
 969:main.c        ****             
 970:main.c        ****             else if (preferential_route == MIDDLE) {
 971:main.c        ****                 
 972:main.c        ****             }
 973:main.c        ****             
 974:main.c        ****             
 975:main.c        ****             
 976:main.c        ****     // Old code         
 977:main.c        ****             /*
 978:main.c        ****             else if (block_east_clearance && puck_west_clearance){
 979:main.c        **** 
 980:main.c        ****                 moveUntil(ARENA_WIDTH - (block_location[EAST] - DISTANCE_FRONT_SENSOR_FROM_CENTER -
 981:main.c        ****                 //straightAdjust();
 982:main.c        ****                 changeOrientation(NORTH, SPEED);
 983:main.c        ****                 straightAdjust(FRONT_SENSORS);
 984:main.c        ****                 moveUntil(CLEARANCE_RADIUS_CENTER_TO_BACK - 140, BACKWARD, LESS_THAN, BACK_RIGHT, S
 985:main.c        ****                 //displaceLeft(); Repeatedly call this if below function not implemented
 986:main.c        ****                 //displaceLeftUntil(CLEARANCE_RADIUS_CENTER_TO_BACK,RIGHT);
 987:main.c        ****                 changeOrientation(EAST, SPEED);
 988:main.c        ****                 //displaceLeft();
 989:main.c        ****                 //displaceLeftUntil(DISTANCE_PUCKS_FROM_NORTH + WIDTH_SENSOR_TO_CENTER ,RIGHT);
 990:main.c        ****                 moveUntil(WALL_CLEARANCE_FRONT, FORWARD, LESS_THAN, FRONT_MIDDLE, SPEED, TRUE);
 991:main.c        ****                 
 992:main.c        ****             }
 993:main.c        ****             
 994:main.c        ****             else if (block_west_clearance && puck_east_clearance){
 995:main.c        ****                 
 996:main.c        ****                 moveUntil(ARENA_WIDTH - (block_location[WEST] - DISTANCE_FRONT_SENSOR_FROM_CENTER +
 997:main.c        ****                 changeOrientation(NORTH, SPEED);
 998:main.c        ****                 straightAdjust(FRONT_SENSORS);
 999:main.c        ****                 moveUntil(CLEARANCE_RADIUS_CENTER_TO_BACK - 140, BACKWARD, LESS_THAN, BACK_RIGHT, S
1000:main.c        ****                 //displaceLeft(); Repeatedly call this if below function not implemented
1001:main.c        ****                 //displaceLeftUntil(CLEARANCE_RADIUS_CENTER_TO_BACK,RIGHT);
1002:main.c        ****                 changeOrientation(EAST, SPEED);
1003:main.c        ****                 //displaceLeft();
1004:main.c        ****                 //displaceLeftUntil(DISTANCE_PUCKS_FROM_NORTH + WIDTH_SENSOR_TO_CENTER ,RIGHT);
1005:main.c        ****                 moveUntil(WALL_CLEARANCE_FRONT, FORWARD, LESS_THAN, FRONT_LEFT, SPEED, TRUE);
1006:main.c        ****                 
1007:main.c        ****             }   
1008:main.c        ****             */
1009:main.c        ****             
1010:main.c        ****             
1011:main.c        ****             state = STATE_DEPOSIT_PUCK;
 1646              		.loc 1 1011 0
 1647 09d2 0622     		movs	r2, #6
 1648 09d4 384B     		ldr	r3, .L62
 1649 09d6 5A60     		str	r2, [r3, #4]
 1650              	.L45:
1012:main.c        ****         }
1013:main.c        ****         
1014:main.c        **** //        
1015:main.c        **** // *** 6. STATE DEPOSIT PUCK: *** // 
1016:main.c        **** //
1017:main.c        ****         
1018:main.c        ****         // We choose where we put the puck. Depending if its needed now, later or never.
1019:main.c        ****         if (state == STATE_DEPOSIT_PUCK){
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cckoGjaV.s 			page 48


 1651              		.loc 1 1019 0
 1652 09d8 374B     		ldr	r3, .L62
 1653 09da 5B68     		ldr	r3, [r3, #4]
 1654 09dc 062B     		cmp	r3, #6
 1655 09de 40F0A980 		bne	.L48
 1656              	.LBB9:
1020:main.c        ****                 
1021:main.c        ****             
1022:main.c        ****             // Temp grab puck
1023:main.c        ****             control_photodiode_Write(CLAW_SENSING);    // changes to claw photodiode
 1657              		.loc 1 1023 0
 1658 09e2 0120     		movs	r0, #1
 1659 09e4 FFF7FEFF 		bl	control_photodiode_Write
 1660              	.LVL223:
1024:main.c        ****             colour_sensing_algorithm = CLAW_GROUND_ALGORITHM;   // changes it to claw algorithm
 1661              		.loc 1 1024 0
 1662 09e8 334C     		ldr	r4, .L62
 1663 09ea 0523     		movs	r3, #5
 1664 09ec E360     		str	r3, [r4, #12]
1025:main.c        ****             
1026:main.c        ****             /*
1027:main.c        ****             armOpen();
1028:main.c        ****             colourSensingInitialise();
1029:main.c        ****             CyDelay(2000);
1030:main.c        ****             armClose();
1031:main.c        ****             */
1032:main.c        ****             
1033:main.c        ****             
1034:main.c        ****             
1035:main.c        ****             int heldColour = colourSensingOutput();
 1665              		.loc 1 1035 0
 1666 09ee FFF7FEFF 		bl	colourSensingOutput
 1667              	.LVL224:
1036:main.c        ****             //blinkLED(heldColour,500);
1037:main.c        ****             
1038:main.c        ****             
1039:main.c        ****             // TO DELETE
1040:main.c        ****             heldColour = current_stage; // temp checking it can stack with a fixed rgb order for si
 1668              		.loc 1 1040 0
 1669 09f2 334B     		ldr	r3, .L62+8
 1670 09f4 1A68     		ldr	r2, [r3]
 1671              	.LVL225:
1041:main.c        ****             //armOpen();
1042:main.c        ****             //CyDelay(1000);
1043:main.c        ****             //armClose();
1044:main.c        ****             
1045:main.c        ****             
1046:main.c        ****             if (heldColour == puck_construction_plan[current_puck_stack_size] ) { // The currently 
 1672              		.loc 1 1046 0
 1673 09f6 A36C     		ldr	r3, [r4, #72]
 1674 09f8 04EB8304 		add	r4, r4, r3, lsl #2
 1675 09fc 2369     		ldr	r3, [r4, #16]
 1676 09fe 9A42     		cmp	r2, r3
 1677 0a00 25D1     		bne	.L49
1047:main.c        ****                 moveUntil(HOME_MIDPOINT - DISTANCE_FRONT_SENSOR_FROM_CENTER, BACKWARD, GREATER_THAN
 1678              		.loc 1 1047 0
 1679 0a02 0124     		movs	r4, #1
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cckoGjaV.s 			page 49


 1680 0a04 0194     		str	r4, [sp, #4]
 1681 0a06 C825     		movs	r5, #200
 1682 0a08 0095     		str	r5, [sp]
 1683 0a0a 0523     		movs	r3, #5
 1684 0a0c 4FF0FF32 		mov	r2, #-1
 1685              	.LVL226:
 1686 0a10 0021     		movs	r1, #0
 1687 0a12 40F22620 		movw	r0, #550
 1688 0a16 FFF7FEFF 		bl	moveUntil
 1689              	.LVL227:
1048:main.c        ****                 changeOrientation(NORTH,SPEED);
 1690              		.loc 1 1048 0
 1691 0a1a 2946     		mov	r1, r5
 1692 0a1c 0020     		movs	r0, #0
 1693 0a1e FFF7FEFF 		bl	changeOrientation
 1694              	.LVL228:
1049:main.c        ****                 changeOrientation(WEST,SPEED);
 1695              		.loc 1 1049 0
 1696 0a22 2946     		mov	r1, r5
 1697 0a24 0320     		movs	r0, #3
 1698 0a26 FFF7FEFF 		bl	changeOrientation
 1699              	.LVL229:
1050:main.c        ****                 moveUntil(CONSTRUCTION_MIDPOINT - DISTANCE_FRONT_SENSOR_FROM_CENTER - 30, FORWARD, 
 1700              		.loc 1 1050 0
 1701 0a2a 0194     		str	r4, [sp, #4]
 1702 0a2c 0095     		str	r5, [sp]
 1703 0a2e 0523     		movs	r3, #5
 1704 0a30 2246     		mov	r2, r4
 1705 0a32 2146     		mov	r1, r4
 1706 0a34 AA20     		movs	r0, #170
 1707 0a36 FFF7FEFF 		bl	moveUntil
 1708              	.LVL230:
1051:main.c        ****                 moveForwardThenBackward(CONSTRUCTION_MIDPOINT - DISTANCE_FRONT_SENSOR_FROM_CENTER -
 1709              		.loc 1 1051 0
 1710 0a3a 0094     		str	r4, [sp]
 1711 0a3c 4623     		movs	r3, #70
 1712 0a3e 0522     		movs	r2, #5
 1713 0a40 2146     		mov	r1, r4
 1714 0a42 AA20     		movs	r0, #170
 1715 0a44 FFF7FEFF 		bl	moveForwardThenBackward
 1716              	.LVL231:
1052:main.c        ****                 straightAdjust(FRONT_SENSORS);
 1717              		.loc 1 1052 0
 1718 0a48 0720     		movs	r0, #7
 1719 0a4a FFF7FEFF 		bl	straightAdjust
 1720              	.LVL232:
 1721              	.L49:
1053:main.c        ****                 
1054:main.c        ****                 //changeOrientation(SOUTH, SPEED);
1055:main.c        ****                 //moveUntil(CONSTRUCTION_MIDPOINT - DISTANCE_FRONT_SENSOR_FROM_CENTER, FORWARD, LES
1056:main.c        ****                 
1057:main.c        ****                 
1058:main.c        ****                 
1059:main.c        ****             }
1060:main.c        ****             /*
1061:main.c        ****             else if ( heldColour == puck_construction_plan[1] || heldColour == puck_construction_pl
1062:main.c        ****                 moveUntil(ARENA_WIDTH - FIRST_TEMP_DROPOFF + DISTANCE_FRONT_SENSOR_FROM_CENTER, BAC
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cckoGjaV.s 			page 50


1063:main.c        ****                 straightAdjust();
1064:main.c        ****             }
1065:main.c        ****             
1066:main.c        ****             else {
1067:main.c        ****                 moveUntil(ARENA_WIDTH-FIRST_DISCARD_ZONE + DISTANCE_FRONT_SENSOR_FROM_CENTER, BACKW
1068:main.c        ****             } // Discard the puck so drop it in rubbish pile
1069:main.c        ****             
1070:main.c        ****             */
1071:main.c        **** 
1072:main.c        ****             changeOrientation(SOUTH,SPEED);    
 1722              		.loc 1 1072 0
 1723 0a4e C821     		movs	r1, #200
 1724 0a50 0220     		movs	r0, #2
 1725 0a52 FFF7FEFF 		bl	changeOrientation
 1726              	.LVL233:
1073:main.c        ****             changeHeightToPuck(ABOVE_3_PUCK, CLOSE); // Lift claw above stack to avoid hitting the 
 1727              		.loc 1 1073 0
 1728 0a56 0121     		movs	r1, #1
 1729 0a58 0320     		movs	r0, #3
 1730 0a5a FFF7FEFF 		bl	changeHeightToPuck
 1731              	.LVL234:
1074:main.c        ****             
1075:main.c        ****             if (current_puck_stack_size == 0){
 1732              		.loc 1 1075 0
 1733 0a5e 164B     		ldr	r3, .L62
 1734 0a60 9B6C     		ldr	r3, [r3, #72]
 1735 0a62 63B9     		cbnz	r3, .L50
1076:main.c        ****                 straightAdjust(FRONT_SENSORS);
 1736              		.loc 1 1076 0
 1737 0a64 0720     		movs	r0, #7
 1738 0a66 FFF7FEFF 		bl	straightAdjust
 1739              	.LVL235:
1077:main.c        ****                 moveUntil(CONSTRUCTION_DISTANCE_FROM_WALL, FORWARD, LESS_THAN, FRONT_LEFT, SPEED,TR
 1740              		.loc 1 1077 0
 1741 0a6a 0121     		movs	r1, #1
 1742 0a6c 0191     		str	r1, [sp, #4]
 1743 0a6e C823     		movs	r3, #200
 1744 0a70 0093     		str	r3, [sp]
 1745 0a72 0023     		movs	r3, #0
 1746 0a74 0A46     		mov	r2, r1
 1747 0a76 8220     		movs	r0, #130
 1748 0a78 FFF7FEFF 		bl	moveUntil
 1749              	.LVL236:
 1750 0a7c 09E0     		b	.L51
 1751              	.L50:
1078:main.c        ****                
1079:main.c        ****             }
1080:main.c        ****             else {
1081:main.c        ****                 moveUntil(DISTANCE_BEFORE_STACK_MIDDLE_SENSOR, FORWARD, LESS_THAN, FRONT_MIDDLE, SP
 1752              		.loc 1 1081 0
 1753 0a7e 0023     		movs	r3, #0
 1754 0a80 0193     		str	r3, [sp, #4]
 1755 0a82 4623     		movs	r3, #70
 1756 0a84 0093     		str	r3, [sp]
 1757 0a86 0523     		movs	r3, #5
 1758 0a88 0122     		movs	r2, #1
 1759 0a8a 1146     		mov	r1, r2
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cckoGjaV.s 			page 51


 1760 0a8c 5F20     		movs	r0, #95
 1761 0a8e FFF7FEFF 		bl	moveUntil
 1762              	.LVL237:
 1763              	.L51:
1082:main.c        ****                 //moveDynamic(140, SPEED, FALSE);            
1083:main.c        ****             }
1084:main.c        ****             
1085:main.c        ****             //moveDynamic(CONSTRUCTION_DISTANCE_CLEAR_FROM_STACK - CONSTRUCTION_DISTANCE_FROM_WALL,
1086:main.c        ****             
1087:main.c        ****             changeHeightToPuck(current_puck_stack_size, CLOSE);
 1764              		.loc 1 1087 0
 1765 0a92 0121     		movs	r1, #1
 1766 0a94 084B     		ldr	r3, .L62
 1767 0a96 986C     		ldr	r0, [r3, #72]
 1768 0a98 FFF7FEFF 		bl	changeHeightToPuck
 1769              	.LVL238:
1088:main.c        ****             armOpen();
 1770              		.loc 1 1088 0
 1771 0a9c FFF7FEFF 		bl	armOpen
 1772              	.LVL239:
1089:main.c        ****             changeHeightToPuck(ABOVE_3_PUCK, OPEN); // Move higher than stack to avoid hitting it.
 1773              		.loc 1 1089 0
 1774 0aa0 0021     		movs	r1, #0
 1775 0aa2 0320     		movs	r0, #3
 1776 0aa4 FFF7FEFF 		bl	changeHeightToPuck
 1777              	.LVL240:
1090:main.c        ****             
1091:main.c        **** 
1092:main.c        ****             if (current_stage >= 3){state = STATE_PARK_HOME;}        // Returns to home 
 1778              		.loc 1 1092 0
 1779 0aa8 054B     		ldr	r3, .L62+8
 1780 0aaa 1B68     		ldr	r3, [r3]
 1781 0aac 022B     		cmp	r3, #2
 1782 0aae 09DD     		ble	.L52
 1783              		.loc 1 1092 0 is_stmt 0 discriminator 1
 1784 0ab0 0722     		movs	r2, #7
 1785 0ab2 014B     		ldr	r3, .L62
 1786 0ab4 5A60     		str	r2, [r3, #4]
 1787 0ab6 3DE0     		b	.L48
 1788              	.L63:
 1789              		.align	2
 1790              	.L62:
 1791 0ab8 00000000 		.word	.LANCHOR0
 1792 0abc 00000000 		.word	preferential_route
 1793 0ac0 00000000 		.word	.LANCHOR1
 1794              	.L52:
1093:main.c        ****             else {current_stage++; current_puck_stack_size++;
 1795              		.loc 1 1093 0 is_stmt 1
 1796 0ac4 0133     		adds	r3, r3, #1
 1797 0ac6 354A     		ldr	r2, .L64
 1798 0ac8 1360     		str	r3, [r2]
 1799 0aca 354E     		ldr	r6, .L64+4
 1800 0acc B36C     		ldr	r3, [r6, #72]
 1801 0ace 0133     		adds	r3, r3, #1
 1802 0ad0 B364     		str	r3, [r6, #72]
1094:main.c        ****             // Need to go back to the east wall facing east.
1095:main.c        ****                 //moveUntil(CONSTRUCTION_DISTANCE_CLEAR_FROM_STACK, BACKWARD, GREATER_THAN, FRONT_L
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cckoGjaV.s 			page 52


1096:main.c        ****                 moveDynamic(-130,SPEED,TRUE);
 1803              		.loc 1 1096 0
 1804 0ad2 0122     		movs	r2, #1
 1805 0ad4 C821     		movs	r1, #200
 1806 0ad6 6FF08100 		mvn	r0, #129
 1807 0ada FFF7FEFF 		bl	moveDynamic
 1808              	.LVL241:
1097:main.c        ****                 changeOrientation(WEST,SPEED);
 1809              		.loc 1 1097 0
 1810 0ade C821     		movs	r1, #200
 1811 0ae0 0320     		movs	r0, #3
 1812 0ae2 FFF7FEFF 		bl	changeOrientation
 1813              	.LVL242:
1098:main.c        ****                 straightAdjust(FRONT_SENSORS);
 1814              		.loc 1 1098 0
 1815 0ae6 0720     		movs	r0, #7
 1816 0ae8 FFF7FEFF 		bl	straightAdjust
 1817              	.LVL243:
1099:main.c        ****                 moveUntil(HOME_MIDPOINT - DISTANCE_FRONT_SENSOR_FROM_CENTER, BACKWARD, GREATER_THAN
 1818              		.loc 1 1099 0
 1819 0aec 0124     		movs	r4, #1
 1820 0aee 0194     		str	r4, [sp, #4]
 1821 0af0 C825     		movs	r5, #200
 1822 0af2 0095     		str	r5, [sp]
 1823 0af4 0523     		movs	r3, #5
 1824 0af6 4FF0FF32 		mov	r2, #-1
 1825 0afa 0021     		movs	r1, #0
 1826 0afc 40F22620 		movw	r0, #550
 1827 0b00 FFF7FEFF 		bl	moveUntil
 1828              	.LVL244:
1100:main.c        ****                 straightAdjust(FRONT_SENSORS);
 1829              		.loc 1 1100 0
 1830 0b04 0720     		movs	r0, #7
 1831 0b06 FFF7FEFF 		bl	straightAdjust
 1832              	.LVL245:
1101:main.c        ****                 changeOrientation(NORTH,SPEED);
 1833              		.loc 1 1101 0
 1834 0b0a 2946     		mov	r1, r5
 1835 0b0c 0020     		movs	r0, #0
 1836 0b0e FFF7FEFF 		bl	changeOrientation
 1837              	.LVL246:
1102:main.c        ****                 changeOrientation(EAST,SPEED);
 1838              		.loc 1 1102 0
 1839 0b12 2946     		mov	r1, r5
 1840 0b14 2046     		mov	r0, r4
 1841 0b16 FFF7FEFF 		bl	changeOrientation
 1842              	.LVL247:
1103:main.c        ****                 moveUntil(DISTANCE_FRONT_SENSOR_FROM_CENTER + SAFETY_MARGIN + 50, FORWARD, LESS_THA
 1843              		.loc 1 1103 0
 1844 0b1a 0194     		str	r4, [sp, #4]
 1845 0b1c 0095     		str	r5, [sp]
 1846 0b1e 0523     		movs	r3, #5
 1847 0b20 2246     		mov	r2, r4
 1848 0b22 2146     		mov	r1, r4
 1849 0b24 B920     		movs	r0, #185
 1850 0b26 FFF7FEFF 		bl	moveUntil
 1851              	.LVL248:
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cckoGjaV.s 			page 53


1104:main.c        ****                 straightAdjust(FRONT_SENSORS);
 1852              		.loc 1 1104 0
 1853 0b2a 0720     		movs	r0, #7
 1854 0b2c FFF7FEFF 		bl	straightAdjust
 1855              	.LVL249:
1105:main.c        ****                 
1106:main.c        ****                 
1107:main.c        ****                 //Usually we will check if the next colour we need is in home base already
1108:main.c        ****                 //
1109:main.c        ****                 // If in east edge of home base
1110:main.c        ****                 if ( puck_construction_plan[current_puck_stack_size] == puck_temp_pile[0]){
1111:main.c        ****                     
1112:main.c        ****                 }
1113:main.c        ****                 //If in west edge of home base
1114:main.c        ****                 else if(puck_construction_plan[current_puck_stack_size] == puck_temp_pile[1]){
1115:main.c        ****                          
1116:main.c        ****                 }
1117:main.c        ****                 
1118:main.c        ****                 state = STATE_GO_TO_PUCKS; // Go grab the next puck from the pile since it isn't in
 1856              		.loc 1 1118 0
 1857 0b30 0323     		movs	r3, #3
 1858 0b32 7360     		str	r3, [r6, #4]
 1859              	.L48:
 1860              	.LBE9:
1119:main.c        ****             }
1120:main.c        ****             
1121:main.c        ****             
1122:main.c        **** 
1123:main.c        ****         }
1124:main.c        ****  
1125:main.c        **** //        
1126:main.c        **** // *** 7. STATE PARK HOME: *** // 
1127:main.c        **** //        
1128:main.c        ****         
1129:main.c        ****         if (state == STATE_PARK_HOME){
 1861              		.loc 1 1129 0
 1862 0b34 1A4B     		ldr	r3, .L64+4
 1863 0b36 5B68     		ldr	r3, [r3, #4]
 1864 0b38 072B     		cmp	r3, #7
 1865 0b3a 7FF4E8AA 		bne	.L53
1130:main.c        ****             
1131:main.c        ****             // When we enter this state we can assume that we have just deposited the final puck on
1132:main.c        ****             // Thus we are facing the stack.
1133:main.c        ****             
1134:main.c        ****             
1135:main.c        ****             moveUntil(CONSTRUCTION_DISTANCE_CLEAR_FROM_STACK, BACKWARD, GREATER_THAN, FRONT_MIDDLE,
 1866              		.loc 1 1135 0
 1867 0b3e 0024     		movs	r4, #0
 1868 0b40 0194     		str	r4, [sp, #4]
 1869 0b42 C825     		movs	r5, #200
 1870 0b44 0095     		str	r5, [sp]
 1871 0b46 0523     		movs	r3, #5
 1872 0b48 4FF0FF32 		mov	r2, #-1
 1873 0b4c 2146     		mov	r1, r4
 1874 0b4e D220     		movs	r0, #210
 1875 0b50 FFF7FEFF 		bl	moveUntil
 1876              	.LVL250:
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cckoGjaV.s 			page 54


1136:main.c        ****             changeOrientation(WEST,SPEED);
 1877              		.loc 1 1136 0
 1878 0b54 2946     		mov	r1, r5
 1879 0b56 0320     		movs	r0, #3
 1880 0b58 FFF7FEFF 		bl	changeOrientation
 1881              	.LVL251:
1137:main.c        ****             straightAdjust(FRONT_SENSORS);
 1882              		.loc 1 1137 0
 1883 0b5c 0720     		movs	r0, #7
 1884 0b5e FFF7FEFF 		bl	straightAdjust
 1885              	.LVL252:
1138:main.c        ****             moveUntil(HOME_MIDPOINT - DISTANCE_FRONT_SENSOR_FROM_CENTER - 45 , BACKWARD, GREATER_TH
 1886              		.loc 1 1138 0
 1887 0b62 0126     		movs	r6, #1
 1888 0b64 0196     		str	r6, [sp, #4]
 1889 0b66 0095     		str	r5, [sp]
 1890 0b68 0523     		movs	r3, #5
 1891 0b6a 4FF0FF32 		mov	r2, #-1
 1892 0b6e 2146     		mov	r1, r4
 1893 0b70 40F2F910 		movw	r0, #505
 1894 0b74 FFF7FEFF 		bl	moveUntil
 1895              	.LVL253:
1139:main.c        ****             changeOrientation(NORTH,SPEED);
 1896              		.loc 1 1139 0
 1897 0b78 2946     		mov	r1, r5
 1898 0b7a 2046     		mov	r0, r4
 1899 0b7c FFF7FEFF 		bl	changeOrientation
 1900              	.LVL254:
1140:main.c        ****             moveUntil(HOME_PARKING_DISTANCE , BACKWARD, LESS_THAN, BACK_RIGHT, SPEED, TRUE);
 1901              		.loc 1 1140 0
 1902 0b80 0196     		str	r6, [sp, #4]
 1903 0b82 0095     		str	r5, [sp]
 1904 0b84 0423     		movs	r3, #4
 1905 0b86 3246     		mov	r2, r6
 1906 0b88 2146     		mov	r1, r4
 1907 0b8a 2820     		movs	r0, #40
 1908 0b8c FFF7FEFF 		bl	moveUntil
 1909              	.LVL255:
1141:main.c        **** 
1142:main.c        ****             // END Congratulations:
1143:main.c        ****             changeHeightToPuck(GROUND, NEITHER);
 1910              		.loc 1 1143 0
 1911 0b90 0221     		movs	r1, #2
 1912 0b92 2046     		mov	r0, r4
 1913 0b94 FFF7FEFF 		bl	changeHeightToPuck
 1914              	.LVL256:
 1915              	.L54:
 1916 0b98 FEE7     		b	.L54
 1917              	.L65:
 1918 0b9a 00BF     		.align	2
 1919              	.L64:
 1920 0b9c 00000000 		.word	.LANCHOR1
 1921 0ba0 00000000 		.word	.LANCHOR0
 1922              		.cfi_endproc
 1923              	.LFE67:
 1924              		.size	main, .-main
 1925              		.comm	distance_returned_global,4,4
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cckoGjaV.s 			page 55


 1926              		.global	current_stage
 1927              		.global	PLAN_SCAN_VERTICAL
 1928              		.global	moving
 1929              		.global	colour_sensing_algorithm
 1930              		.global	colour_flag
 1931              		.global	idac_value
 1932              		.global	puck_west_clearance
 1933              		.global	puck_east_clearance
 1934              		.global	block_west_clearance
 1935              		.global	block_east_clearance
 1936              		.global	safety_override
 1937              		.global	puck_location
 1938              		.global	block_location
 1939              		.global	begin_navigation
 1940              		.global	puck_temp_pile
 1941              		.global	puck_construction_plan
 1942              		.global	current_puck_stack_size
 1943              		.global	state
 1944              		.comm	ultrasonic_flag,4,4
 1945              		.comm	initialisation,4,4
 1946              		.comm	set_path,4,4
 1947              		.comm	initial_tolerance,4,4
 1948              		.comm	preferential_route,4,4
 1949              		.comm	global_distance,4,4
 1950              		.comm	global_encoder,4,4
 1951              		.comm	output,32,4
 1952              		.global	block_edge_location
 1953              		.global	puck_rack_west_offsets
 1954              		.global	puck_rack_scans
 1955              		.comm	internal_orientation,4,4
 1956              		.section	.rodata
 1957              		.align	2
 1958              		.type	PLAN_SCAN_VERTICAL, %object
 1959              		.size	PLAN_SCAN_VERTICAL, 4
 1960              	PLAN_SCAN_VERTICAL:
 1961 0000 0A000000 		.word	10
 1962              		.data
 1963              		.align	2
 1964              		.set	.LANCHOR1,. + 0
 1965              		.type	current_stage, %object
 1966              		.size	current_stage, 4
 1967              	current_stage:
 1968 0000 01000000 		.word	1
 1969              		.type	colour_flag, %object
 1970              		.size	colour_flag, 4
 1971              	colour_flag:
 1972 0004 01000000 		.word	1
 1973              		.type	puck_rack_west_offsets, %object
 1974              		.size	puck_rack_west_offsets, 20
 1975              	puck_rack_west_offsets:
 1976 0008 D0020000 		.word	720
 1977 000c 94020000 		.word	660
 1978 0010 58020000 		.word	600
 1979 0014 1C020000 		.word	540
 1980 0018 E0010000 		.word	480
 1981              		.section	.rodata.str1.4,"aMS",%progbits,1
 1982              		.align	2
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cckoGjaV.s 			page 56


 1983              	.LC0:
 1984 0000 42656769 		.ascii	"Beginning Navigation \012\000"
 1984      6E6E696E 
 1984      67204E61 
 1984      76696761 
 1984      74696F6E 
 1985 0017 00       		.space	1
 1986              	.LC1:
 1987 0018 55415254 		.ascii	"UART commencing... \012\000"
 1987      20636F6D 
 1987      6D656E63 
 1987      696E672E 
 1987      2E2E200A 
 1988 002d 000000   		.space	3
 1989              	.LC2:
 1990 0030 556C7472 		.ascii	"Ultrasonic Calibration tests: \012\000"
 1990      61736F6E 
 1990      69632043 
 1990      616C6962 
 1990      72617469 
 1991              	.LC3:
 1992 0050 466F756E 		.ascii	"Found Colours: \012\000"
 1992      6420436F 
 1992      6C6F7572 
 1992      733A200A 
 1992      00
 1993 0061 000000   		.space	3
 1994              	.LC4:
 1995 0064 2569200A 		.ascii	"%i \012\000"
 1995      00
 1996 0069 000000   		.space	3
 1997              	.LC5:
 1998 006c 77657374 		.ascii	"west block front sensor: %d, \012\000"
 1998      20626C6F 
 1998      636B2066 
 1998      726F6E74 
 1998      2073656E 
 1999 008b 00       		.space	1
 2000              	.LC6:
 2001 008c 65617374 		.ascii	"east block front sensor: %d, \012\000"
 2001      20626C6F 
 2001      636B2066 
 2001      726F6E74 
 2001      2073656E 
 2002 00ab 00       		.space	1
 2003              	.LC7:
 2004 00ac 77657374 		.ascii	"west puck clearance: %d, \012\000"
 2004      20707563 
 2004      6B20636C 
 2004      65617261 
 2004      6E63653A 
 2005 00c7 00       		.space	1
 2006              	.LC8:
 2007 00c8 65617374 		.ascii	"east puck clearance: %d, \012\012\000"
 2007      20707563 
 2007      6B20636C 
 2007      65617261 
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cckoGjaV.s 			page 57


 2007      6E63653A 
 2008              	.LC9:
 2009 00e4 77657374 		.ascii	"west block clearance: %d, \012\000"
 2009      20626C6F 
 2009      636B2063 
 2009      6C656172 
 2009      616E6365 
 2010              	.LC10:
 2011 0100 65617374 		.ascii	"east block clearance: %d, \012\000"
 2011      20626C6F 
 2011      636B2063 
 2011      6C656172 
 2011      616E6365 
 2012              	.LC11:
 2013 011c 54616B69 		.ascii	"Taking east route\000"
 2013      6E672065 
 2013      61737420 
 2013      726F7574 
 2013      6500
 2014 012e 0000     		.space	2
 2015              	.LC12:
 2016 0130 696E6974 		.ascii	"initial tolerance: %d\012\000"
 2016      69616C20 
 2016      746F6C65 
 2016      72616E63 
 2016      653A2025 
 2017 0147 00       		.space	1
 2018              	.LC13:
 2019 0148 676C6F62 		.ascii	"global distance: %d\012\000"
 2019      616C2064 
 2019      69737461 
 2019      6E63653A 
 2019      2025640A 
 2020 015d 000000   		.space	3
 2021              	.LC14:
 2022 0160 54616B69 		.ascii	"Taking west route\000"
 2022      6E672077 
 2022      65737420 
 2022      726F7574 
 2022      6500
 2023              		.bss
 2024              		.align	2
 2025              		.set	.LANCHOR0,. + 0
 2026              		.type	begin_navigation, %object
 2027              		.size	begin_navigation, 4
 2028              	begin_navigation:
 2029 0000 00000000 		.space	4
 2030              		.type	state, %object
 2031              		.size	state, 4
 2032              	state:
 2033 0004 00000000 		.space	4
 2034              		.type	idac_value, %object
 2035              		.size	idac_value, 4
 2036              	idac_value:
 2037 0008 00000000 		.space	4
 2038              		.type	colour_sensing_algorithm, %object
 2039              		.size	colour_sensing_algorithm, 4
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cckoGjaV.s 			page 58


 2040              	colour_sensing_algorithm:
 2041 000c 00000000 		.space	4
 2042              		.type	puck_construction_plan, %object
 2043              		.size	puck_construction_plan, 12
 2044              	puck_construction_plan:
 2045 0010 00000000 		.space	12
 2045      00000000 
 2045      00000000 
 2046              		.type	puck_rack_scans, %object
 2047              		.size	puck_rack_scans, 20
 2048              	puck_rack_scans:
 2049 001c 00000000 		.space	20
 2049      00000000 
 2049      00000000 
 2049      00000000 
 2049      00000000 
 2050              		.type	block_location, %object
 2051              		.size	block_location, 16
 2052              	block_location:
 2053 0030 00000000 		.space	16
 2053      00000000 
 2053      00000000 
 2053      00000000 
 2054              		.type	block_east_clearance, %object
 2055              		.size	block_east_clearance, 2
 2056              	block_east_clearance:
 2057 0040 0000     		.space	2
 2058              		.type	block_west_clearance, %object
 2059              		.size	block_west_clearance, 2
 2060              	block_west_clearance:
 2061 0042 0000     		.space	2
 2062              		.type	puck_west_clearance, %object
 2063              		.size	puck_west_clearance, 2
 2064              	puck_west_clearance:
 2065 0044 0000     		.space	2
 2066              		.type	puck_east_clearance, %object
 2067              		.size	puck_east_clearance, 2
 2068              	puck_east_clearance:
 2069 0046 0000     		.space	2
 2070              		.type	current_puck_stack_size, %object
 2071              		.size	current_puck_stack_size, 4
 2072              	current_puck_stack_size:
 2073 0048 00000000 		.space	4
 2074              		.type	safety_override, %object
 2075              		.size	safety_override, 4
 2076              	safety_override:
 2077 004c 00000000 		.space	4
 2078              		.type	moving, %object
 2079              		.size	moving, 4
 2080              	moving:
 2081 0050 00000000 		.space	4
 2082              		.type	puck_location, %object
 2083              		.size	puck_location, 16
 2084              	puck_location:
 2085 0054 00000000 		.space	16
 2085      00000000 
 2085      00000000 
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cckoGjaV.s 			page 59


 2085      00000000 
 2086              		.type	puck_temp_pile, %object
 2087              		.size	puck_temp_pile, 8
 2088              	puck_temp_pile:
 2089 0064 00000000 		.space	8
 2089      00000000 
 2090              		.type	block_edge_location, %object
 2091              		.size	block_edge_location, 16
 2092              	block_edge_location:
 2093 006c 00000000 		.space	16
 2093      00000000 
 2093      00000000 
 2093      00000000 
 2094              		.text
 2095              	.Letext0:
 2096              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 2097              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 2098              		.file 4 "Generated_Source\\PSoC5/core_cm3.h"
 2099              		.file 5 "navigation.h"
 2100              		.file 6 "ultrasonic.h"
 2101              		.file 7 "main.h"
 2102              		.file 8 "Generated_Source\\PSoC5/CyLib.h"
 2103              		.file 9 "Generated_Source\\PSoC5/UART_1.h"
 2104              		.file 10 "Generated_Source\\PSoC5/Motor_Left_Driver.h"
 2105              		.file 11 "Generated_Source\\PSoC5/Motor_Right_Driver.h"
 2106              		.file 12 "motor.h"
 2107              		.file 13 "colour.h"
 2108              		.file 14 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4
 2109              		.file 15 "debugging.h"
 2110              		.file 16 "Generated_Source\\PSoC5/control_photodiode.h"
 2111              		.file 17 "servo.h"
 2112              		.file 18 "Generated_Source\\PSoC5/TIA_1.h"
 2113              		.file 19 "Generated_Source\\PSoC5/ADC.h"
 2114              		.file 20 "Generated_Source\\PSoC5/IDAC8_1.h"
 2115              		.file 21 "Generated_Source\\PSoC5/control_led.h"
 2116              		.file 22 "Generated_Source\\PSoC5/Rack_Servo_PWM.h"
 2117              		.file 23 "Generated_Source\\PSoC5/Gripper_Servo_PWM.h"
 2118              		.file 24 "Generated_Source\\PSoC5/Motor_Left_Decoder.h"
 2119              		.file 25 "Generated_Source\\PSoC5/Motor_Right_Decoder.h"
 2120              		.file 26 "Generated_Source\\PSoC5/Timer_1.h"
 2121              		.file 27 "Generated_Source\\PSoC5/Sonic.h"
 2122              		.file 28 "Generated_Source\\PSoC5/Start.h"
 2123              		.file 29 "Generated_Source\\PSoC5/Straight.h"
 2124              		.file 30 "Generated_Source\\PSoC5/Timer_straight_adjust.h"
 2125              		.section	.debug_info,"",%progbits
 2126              	.Ldebug_info0:
 2127 0000 FD1D0000 		.4byte	0x1dfd
 2128 0004 0400     		.2byte	0x4
 2129 0006 00000000 		.4byte	.Ldebug_abbrev0
 2130 000a 04       		.byte	0x4
 2131 000b 01       		.uleb128 0x1
 2132 000c 5C070000 		.4byte	.LASF108
 2133 0010 0C       		.byte	0xc
 2134 0011 0A060000 		.4byte	.LASF109
 2135 0015 A7060000 		.4byte	.LASF110
 2136 0019 18000000 		.4byte	.Ldebug_ranges0+0x18
 2137 001d 00000000 		.4byte	0
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cckoGjaV.s 			page 60


 2138 0021 00000000 		.4byte	.Ldebug_line0
 2139 0025 02       		.uleb128 0x2
 2140 0026 01       		.byte	0x1
 2141 0027 06       		.byte	0x6
 2142 0028 8C040000 		.4byte	.LASF0
 2143 002c 02       		.uleb128 0x2
 2144 002d 01       		.byte	0x1
 2145 002e 08       		.byte	0x8
 2146 002f D1030000 		.4byte	.LASF1
 2147 0033 02       		.uleb128 0x2
 2148 0034 02       		.byte	0x2
 2149 0035 05       		.byte	0x5
 2150 0036 C6000000 		.4byte	.LASF2
 2151 003a 02       		.uleb128 0x2
 2152 003b 02       		.byte	0x2
 2153 003c 07       		.byte	0x7
 2154 003d 62060000 		.4byte	.LASF3
 2155 0041 03       		.uleb128 0x3
 2156 0042 9D060000 		.4byte	.LASF9
 2157 0046 02       		.byte	0x2
 2158 0047 3F       		.byte	0x3f
 2159 0048 4C000000 		.4byte	0x4c
 2160 004c 02       		.uleb128 0x2
 2161 004d 04       		.byte	0x4
 2162 004e 05       		.byte	0x5
 2163 004f 05030000 		.4byte	.LASF4
 2164 0053 02       		.uleb128 0x2
 2165 0054 04       		.byte	0x4
 2166 0055 07       		.byte	0x7
 2167 0056 ED040000 		.4byte	.LASF5
 2168 005a 02       		.uleb128 0x2
 2169 005b 08       		.byte	0x8
 2170 005c 05       		.byte	0x5
 2171 005d 9D020000 		.4byte	.LASF6
 2172 0061 02       		.uleb128 0x2
 2173 0062 08       		.byte	0x8
 2174 0063 07       		.byte	0x7
 2175 0064 AC040000 		.4byte	.LASF7
 2176 0068 04       		.uleb128 0x4
 2177 0069 04       		.byte	0x4
 2178 006a 05       		.byte	0x5
 2179 006b 696E7400 		.ascii	"int\000"
 2180 006f 02       		.uleb128 0x2
 2181 0070 04       		.byte	0x4
 2182 0071 07       		.byte	0x7
 2183 0072 D5040000 		.4byte	.LASF8
 2184 0076 03       		.uleb128 0x3
 2185 0077 78050000 		.4byte	.LASF10
 2186 007b 03       		.byte	0x3
 2187 007c 2C       		.byte	0x2c
 2188 007d 41000000 		.4byte	0x41
 2189 0081 02       		.uleb128 0x2
 2190 0082 04       		.byte	0x4
 2191 0083 04       		.byte	0x4
 2192 0084 84020000 		.4byte	.LASF11
 2193 0088 02       		.uleb128 0x2
 2194 0089 08       		.byte	0x8
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cckoGjaV.s 			page 61


 2195 008a 04       		.byte	0x4
 2196 008b 2F070000 		.4byte	.LASF12
 2197 008f 02       		.uleb128 0x2
 2198 0090 01       		.byte	0x1
 2199 0091 08       		.byte	0x8
 2200 0092 6E050000 		.4byte	.LASF13
 2201 0096 02       		.uleb128 0x2
 2202 0097 08       		.byte	0x8
 2203 0098 04       		.byte	0x4
 2204 0099 4F010000 		.4byte	.LASF14
 2205 009d 02       		.uleb128 0x2
 2206 009e 04       		.byte	0x4
 2207 009f 07       		.byte	0x7
 2208 00a0 1F070000 		.4byte	.LASF15
 2209 00a4 05       		.uleb128 0x5
 2210 00a5 54494800 		.ascii	"TIH\000"
 2211 00a9 01       		.byte	0x1
 2212 00aa 5F       		.byte	0x5f
 2213 00ab 00000000 		.4byte	.LFB64
 2214 00af 08000000 		.4byte	.LFE64-.LFB64
 2215 00b3 01       		.uleb128 0x1
 2216 00b4 9C       		.byte	0x9c
 2217 00b5 C3000000 		.4byte	0xc3
 2218 00b9 06       		.uleb128 0x6
 2219 00ba 06000000 		.4byte	.LVL0
 2220 00be CF1B0000 		.4byte	0x1bcf
 2221 00c2 00       		.byte	0
 2222 00c3 07       		.uleb128 0x7
 2223 00c4 7E010000 		.4byte	.LASF16
 2224 00c8 01       		.byte	0x1
 2225 00c9 64       		.byte	0x64
 2226 00ca 00000000 		.4byte	.LFB65
 2227 00ce 24000000 		.4byte	.LFE65-.LFB65
 2228 00d2 01       		.uleb128 0x1
 2229 00d3 9C       		.byte	0x9c
 2230 00d4 00010000 		.4byte	0x100
 2231 00d8 08       		.uleb128 0x8
 2232 00d9 08000000 		.4byte	.LVL1
 2233 00dd DA1B0000 		.4byte	0x1bda
 2234 00e1 EC000000 		.4byte	0xec
 2235 00e5 09       		.uleb128 0x9
 2236 00e6 01       		.uleb128 0x1
 2237 00e7 50       		.byte	0x50
 2238 00e8 02       		.uleb128 0x2
 2239 00e9 08       		.byte	0x8
 2240 00ea 64       		.byte	0x64
 2241 00eb 00       		.byte	0
 2242 00ec 0A       		.uleb128 0xa
 2243 00ed 14000000 		.4byte	.LVL2
 2244 00f1 E51B0000 		.4byte	0x1be5
 2245 00f5 09       		.uleb128 0x9
 2246 00f6 01       		.uleb128 0x1
 2247 00f7 50       		.byte	0x50
 2248 00f8 05       		.uleb128 0x5
 2249 00f9 03       		.byte	0x3
 2250 00fa 00000000 		.4byte	.LC0
 2251 00fe 00       		.byte	0
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cckoGjaV.s 			page 62


 2252 00ff 00       		.byte	0
 2253 0100 07       		.uleb128 0x7
 2254 0101 98030000 		.4byte	.LASF17
 2255 0105 01       		.byte	0x1
 2256 0106 6E       		.byte	0x6e
 2257 0107 00000000 		.4byte	.LFB66
 2258 010b 36000000 		.4byte	.LFE66-.LFB66
 2259 010f 01       		.uleb128 0x1
 2260 0110 9C       		.byte	0x9c
 2261 0111 9B010000 		.4byte	0x19b
 2262 0115 06       		.uleb128 0x6
 2263 0116 06000000 		.4byte	.LVL3
 2264 011a F01B0000 		.4byte	0x1bf0
 2265 011e 06       		.uleb128 0x6
 2266 011f 0A000000 		.4byte	.LVL4
 2267 0123 FB1B0000 		.4byte	0x1bfb
 2268 0127 08       		.uleb128 0x8
 2269 0128 16000000 		.4byte	.LVL5
 2270 012c 061C0000 		.4byte	0x1c06
 2271 0130 46010000 		.4byte	0x146
 2272 0134 09       		.uleb128 0x9
 2273 0135 01       		.uleb128 0x1
 2274 0136 50       		.byte	0x50
 2275 0137 02       		.uleb128 0x2
 2276 0138 09       		.byte	0x9
 2277 0139 EC       		.byte	0xec
 2278 013a 09       		.uleb128 0x9
 2279 013b 01       		.uleb128 0x1
 2280 013c 51       		.byte	0x51
 2281 013d 02       		.uleb128 0x2
 2282 013e 08       		.byte	0x8
 2283 013f C8       		.byte	0xc8
 2284 0140 09       		.uleb128 0x9
 2285 0141 01       		.uleb128 0x1
 2286 0142 52       		.byte	0x52
 2287 0143 01       		.uleb128 0x1
 2288 0144 31       		.byte	0x31
 2289 0145 00       		.byte	0
 2290 0146 08       		.uleb128 0x8
 2291 0147 20000000 		.4byte	.LVL6
 2292 014b 061C0000 		.4byte	0x1c06
 2293 014f 64010000 		.4byte	0x164
 2294 0153 09       		.uleb128 0x9
 2295 0154 01       		.uleb128 0x1
 2296 0155 50       		.byte	0x50
 2297 0156 01       		.uleb128 0x1
 2298 0157 44       		.byte	0x44
 2299 0158 09       		.uleb128 0x9
 2300 0159 01       		.uleb128 0x1
 2301 015a 51       		.byte	0x51
 2302 015b 02       		.uleb128 0x2
 2303 015c 08       		.byte	0x8
 2304 015d C8       		.byte	0xc8
 2305 015e 09       		.uleb128 0x9
 2306 015f 01       		.uleb128 0x1
 2307 0160 52       		.byte	0x52
 2308 0161 01       		.uleb128 0x1
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cckoGjaV.s 			page 63


 2309 0162 31       		.byte	0x31
 2310 0163 00       		.byte	0
 2311 0164 06       		.uleb128 0x6
 2312 0165 24000000 		.4byte	.LVL7
 2313 0169 111C0000 		.4byte	0x1c11
 2314 016d 08       		.uleb128 0x8
 2315 016e 2A000000 		.4byte	.LVL8
 2316 0172 1C1C0000 		.4byte	0x1c1c
 2317 0176 81010000 		.4byte	0x181
 2318 017a 09       		.uleb128 0x9
 2319 017b 01       		.uleb128 0x1
 2320 017c 50       		.byte	0x50
 2321 017d 02       		.uleb128 0x2
 2322 017e 09       		.byte	0x9
 2323 017f C8       		.byte	0xc8
 2324 0180 00       		.byte	0
 2325 0181 06       		.uleb128 0x6
 2326 0182 2E000000 		.4byte	.LVL9
 2327 0186 271C0000 		.4byte	0x1c27
 2328 018a 0A       		.uleb128 0xa
 2329 018b 34000000 		.4byte	.LVL10
 2330 018f 321C0000 		.4byte	0x1c32
 2331 0193 09       		.uleb128 0x9
 2332 0194 01       		.uleb128 0x1
 2333 0195 50       		.byte	0x50
 2334 0196 02       		.uleb128 0x2
 2335 0197 09       		.byte	0x9
 2336 0198 C8       		.byte	0xc8
 2337 0199 00       		.byte	0
 2338 019a 00       		.byte	0
 2339 019b 0B       		.uleb128 0xb
 2340 019c 73050000 		.4byte	.LASF111
 2341 01a0 01       		.byte	0x1
 2342 01a1 7C       		.byte	0x7c
 2343 01a2 68000000 		.4byte	0x68
 2344 01a6 00000000 		.4byte	.LFB67
 2345 01aa A40B0000 		.4byte	.LFE67-.LFB67
 2346 01ae 01       		.uleb128 0x1
 2347 01af 9C       		.byte	0x9c
 2348 01b0 2F190000 		.4byte	0x192f
 2349 01b4 0C       		.uleb128 0xc
 2350 01b5 C5020000 		.4byte	.LASF18
 2351 01b9 01       		.byte	0x1
 2352 01ba CE       		.byte	0xce
 2353 01bb 68000000 		.4byte	0x68
 2354 01bf 00       		.byte	0
 2355 01c0 0D       		.uleb128 0xd
 2356 01c1 16010000 		.4byte	.LBB2
 2357 01c5 F2000000 		.4byte	.LBE2-.LBB2
 2358 01c9 DB030000 		.4byte	0x3db
 2359 01cd 0E       		.uleb128 0xe
 2360 01ce 3C030000 		.4byte	.LASF19
 2361 01d2 01       		.byte	0x1
 2362 01d3 1001     		.2byte	0x110
 2363 01d5 68000000 		.4byte	0x68
 2364 01d9 00000000 		.4byte	.LLST0
 2365 01dd 0D       		.uleb128 0xd
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cckoGjaV.s 			page 64


 2366 01de 78010000 		.4byte	.LBB3
 2367 01e2 32000000 		.4byte	.LBE3-.LBB3
 2368 01e6 46020000 		.4byte	0x246
 2369 01ea 0F       		.uleb128 0xf
 2370 01eb 6900     		.ascii	"i\000"
 2371 01ed 01       		.byte	0x1
 2372 01ee F9       		.byte	0xf9
 2373 01ef 68000000 		.4byte	0x68
 2374 01f3 1F000000 		.4byte	.LLST1
 2375 01f7 06       		.uleb128 0x6
 2376 01f8 80010000 		.4byte	.LVL67
 2377 01fc 3D1C0000 		.4byte	0x1c3d
 2378 0200 08       		.uleb128 0x8
 2379 0201 90010000 		.4byte	.LVL68
 2380 0205 DA1B0000 		.4byte	0x1bda
 2381 0209 15020000 		.4byte	0x215
 2382 020d 09       		.uleb128 0x9
 2383 020e 01       		.uleb128 0x1
 2384 020f 50       		.byte	0x50
 2385 0210 03       		.uleb128 0x3
 2386 0211 0A       		.byte	0xa
 2387 0212 F401     		.2byte	0x1f4
 2388 0214 00       		.byte	0
 2389 0215 08       		.uleb128 0x8
 2390 0216 9A010000 		.4byte	.LVL69
 2391 021a 061C0000 		.4byte	0x1c06
 2392 021e 34020000 		.4byte	0x234
 2393 0222 09       		.uleb128 0x9
 2394 0223 01       		.uleb128 0x1
 2395 0224 50       		.byte	0x50
 2396 0225 02       		.uleb128 0x2
 2397 0226 08       		.byte	0x8
 2398 0227 3D       		.byte	0x3d
 2399 0228 09       		.uleb128 0x9
 2400 0229 01       		.uleb128 0x1
 2401 022a 51       		.byte	0x51
 2402 022b 02       		.uleb128 0x2
 2403 022c 08       		.byte	0x8
 2404 022d C8       		.byte	0xc8
 2405 022e 09       		.uleb128 0x9
 2406 022f 01       		.uleb128 0x1
 2407 0230 52       		.byte	0x52
 2408 0231 01       		.uleb128 0x1
 2409 0232 31       		.byte	0x31
 2410 0233 00       		.byte	0
 2411 0234 0A       		.uleb128 0xa
 2412 0235 A4010000 		.4byte	.LVL70
 2413 0239 481C0000 		.4byte	0x1c48
 2414 023d 09       		.uleb128 0x9
 2415 023e 01       		.uleb128 0x1
 2416 023f 51       		.byte	0x51
 2417 0240 03       		.uleb128 0x3
 2418 0241 0A       		.byte	0xa
 2419 0242 F401     		.2byte	0x1f4
 2420 0244 00       		.byte	0
 2421 0245 00       		.byte	0
 2422 0246 0D       		.uleb128 0xd
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cckoGjaV.s 			page 65


 2423 0247 B0010000 		.4byte	.LBB4
 2424 024b 22000000 		.4byte	.LBE4-.LBB4
 2425 024f 8F020000 		.4byte	0x28f
 2426 0253 10       		.uleb128 0x10
 2427 0254 6900     		.ascii	"i\000"
 2428 0256 01       		.byte	0x1
 2429 0257 0501     		.2byte	0x105
 2430 0259 68000000 		.4byte	0x68
 2431 025d 3E000000 		.4byte	.LLST2
 2432 0261 08       		.uleb128 0x8
 2433 0262 C6010000 		.4byte	.LVL75
 2434 0266 531C0000 		.4byte	0x1c53
 2435 026a 7E020000 		.4byte	0x27e
 2436 026e 09       		.uleb128 0x9
 2437 026f 01       		.uleb128 0x1
 2438 0270 50       		.byte	0x50
 2439 0271 02       		.uleb128 0x2
 2440 0272 75       		.byte	0x75
 2441 0273 00       		.sleb128 0
 2442 0274 09       		.uleb128 0x9
 2443 0275 01       		.uleb128 0x1
 2444 0276 51       		.byte	0x51
 2445 0277 05       		.uleb128 0x5
 2446 0278 03       		.byte	0x3
 2447 0279 64000000 		.4byte	.LC4
 2448 027d 00       		.byte	0
 2449 027e 0A       		.uleb128 0xa
 2450 027f CC010000 		.4byte	.LVL76
 2451 0283 E51B0000 		.4byte	0x1be5
 2452 0287 09       		.uleb128 0x9
 2453 0288 01       		.uleb128 0x1
 2454 0289 50       		.byte	0x50
 2455 028a 02       		.uleb128 0x2
 2456 028b 75       		.byte	0x75
 2457 028c 00       		.sleb128 0
 2458 028d 00       		.byte	0
 2459 028e 00       		.byte	0
 2460 028f 11       		.uleb128 0x11
 2461 0290 00000000 		.4byte	.Ldebug_ranges0+0
 2462 0294 A9020000 		.4byte	0x2a9
 2463 0298 0E       		.uleb128 0xe
 2464 0299 30060000 		.4byte	.LASF20
 2465 029d 01       		.byte	0x1
 2466 029e 1301     		.2byte	0x113
 2467 02a0 68000000 		.4byte	0x68
 2468 02a4 5D000000 		.4byte	.LLST3
 2469 02a8 00       		.byte	0
 2470 02a9 06       		.uleb128 0x6
 2471 02aa 1A010000 		.4byte	.LVL56
 2472 02ae 5E1C0000 		.4byte	0x1c5e
 2473 02b2 08       		.uleb128 0x8
 2474 02b3 20010000 		.4byte	.LVL57
 2475 02b7 691C0000 		.4byte	0x1c69
 2476 02bb C5020000 		.4byte	0x2c5
 2477 02bf 09       		.uleb128 0x9
 2478 02c0 01       		.uleb128 0x1
 2479 02c1 50       		.byte	0x50
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cckoGjaV.s 			page 66


 2480 02c2 01       		.uleb128 0x1
 2481 02c3 37       		.byte	0x37
 2482 02c4 00       		.byte	0
 2483 02c5 08       		.uleb128 0x8
 2484 02c6 36010000 		.4byte	.LVL58
 2485 02ca 741C0000 		.4byte	0x1c74
 2486 02ce F7020000 		.4byte	0x2f7
 2487 02d2 09       		.uleb128 0x9
 2488 02d3 01       		.uleb128 0x1
 2489 02d4 50       		.byte	0x50
 2490 02d5 02       		.uleb128 0x2
 2491 02d6 09       		.byte	0x9
 2492 02d7 9C       		.byte	0x9c
 2493 02d8 09       		.uleb128 0x9
 2494 02d9 01       		.uleb128 0x1
 2495 02da 51       		.byte	0x51
 2496 02db 01       		.uleb128 0x1
 2497 02dc 30       		.byte	0x30
 2498 02dd 09       		.uleb128 0x9
 2499 02de 01       		.uleb128 0x1
 2500 02df 52       		.byte	0x52
 2501 02e0 02       		.uleb128 0x2
 2502 02e1 74       		.byte	0x74
 2503 02e2 00       		.sleb128 0
 2504 02e3 09       		.uleb128 0x9
 2505 02e4 01       		.uleb128 0x1
 2506 02e5 53       		.byte	0x53
 2507 02e6 01       		.uleb128 0x1
 2508 02e7 34       		.byte	0x34
 2509 02e8 09       		.uleb128 0x9
 2510 02e9 02       		.uleb128 0x2
 2511 02ea 7D       		.byte	0x7d
 2512 02eb 00       		.sleb128 0
 2513 02ec 02       		.uleb128 0x2
 2514 02ed 75       		.byte	0x75
 2515 02ee 00       		.sleb128 0
 2516 02ef 09       		.uleb128 0x9
 2517 02f0 02       		.uleb128 0x2
 2518 02f1 7D       		.byte	0x7d
 2519 02f2 04       		.sleb128 4
 2520 02f3 02       		.uleb128 0x2
 2521 02f4 74       		.byte	0x74
 2522 02f5 00       		.sleb128 0
 2523 02f6 00       		.byte	0
 2524 02f7 08       		.uleb128 0x8
 2525 02f8 48010000 		.4byte	.LVL59
 2526 02fc 741C0000 		.4byte	0x1c74
 2527 0300 2B030000 		.4byte	0x32b
 2528 0304 09       		.uleb128 0x9
 2529 0305 01       		.uleb128 0x1
 2530 0306 50       		.byte	0x50
 2531 0307 03       		.uleb128 0x3
 2532 0308 0A       		.byte	0xa
 2533 0309 9001     		.2byte	0x190
 2534 030b 09       		.uleb128 0x9
 2535 030c 01       		.uleb128 0x1
 2536 030d 51       		.byte	0x51
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cckoGjaV.s 			page 67


 2537 030e 02       		.uleb128 0x2
 2538 030f 74       		.byte	0x74
 2539 0310 00       		.sleb128 0
 2540 0311 09       		.uleb128 0x9
 2541 0312 01       		.uleb128 0x1
 2542 0313 52       		.byte	0x52
 2543 0314 02       		.uleb128 0x2
 2544 0315 74       		.byte	0x74
 2545 0316 00       		.sleb128 0
 2546 0317 09       		.uleb128 0x9
 2547 0318 01       		.uleb128 0x1
 2548 0319 53       		.byte	0x53
 2549 031a 01       		.uleb128 0x1
 2550 031b 30       		.byte	0x30
 2551 031c 09       		.uleb128 0x9
 2552 031d 02       		.uleb128 0x2
 2553 031e 7D       		.byte	0x7d
 2554 031f 00       		.sleb128 0
 2555 0320 02       		.uleb128 0x2
 2556 0321 75       		.byte	0x75
 2557 0322 00       		.sleb128 0
 2558 0323 09       		.uleb128 0x9
 2559 0324 02       		.uleb128 0x2
 2560 0325 7D       		.byte	0x7d
 2561 0326 04       		.sleb128 4
 2562 0327 02       		.uleb128 0x2
 2563 0328 74       		.byte	0x74
 2564 0329 00       		.sleb128 0
 2565 032a 00       		.byte	0
 2566 032b 08       		.uleb128 0x8
 2567 032c 52010000 		.4byte	.LVL60
 2568 0330 061C0000 		.4byte	0x1c06
 2569 0334 4C030000 		.4byte	0x34c
 2570 0338 09       		.uleb128 0x9
 2571 0339 01       		.uleb128 0x1
 2572 033a 50       		.byte	0x50
 2573 033b 03       		.uleb128 0x3
 2574 033c 0B       		.byte	0xb
 2575 033d 3EFE     		.2byte	0xfe3e
 2576 033f 09       		.uleb128 0x9
 2577 0340 01       		.uleb128 0x1
 2578 0341 51       		.byte	0x51
 2579 0342 02       		.uleb128 0x2
 2580 0343 75       		.byte	0x75
 2581 0344 00       		.sleb128 0
 2582 0345 09       		.uleb128 0x9
 2583 0346 01       		.uleb128 0x1
 2584 0347 52       		.byte	0x52
 2585 0348 02       		.uleb128 0x2
 2586 0349 74       		.byte	0x74
 2587 034a 00       		.sleb128 0
 2588 034b 00       		.byte	0
 2589 034c 08       		.uleb128 0x8
 2590 034d 5A010000 		.4byte	.LVL61
 2591 0351 DA1B0000 		.4byte	0x1bda
 2592 0355 61030000 		.4byte	0x361
 2593 0359 09       		.uleb128 0x9
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cckoGjaV.s 			page 68


 2594 035a 01       		.uleb128 0x1
 2595 035b 50       		.byte	0x50
 2596 035c 03       		.uleb128 0x3
 2597 035d 0A       		.byte	0xa
 2598 035e F401     		.2byte	0x1f4
 2599 0360 00       		.byte	0
 2600 0361 06       		.uleb128 0x6
 2601 0362 5E010000 		.4byte	.LVL62
 2602 0366 7F1C0000 		.4byte	0x1c7f
 2603 036a 08       		.uleb128 0x8
 2604 036b 66010000 		.4byte	.LVL63
 2605 036f DA1B0000 		.4byte	0x1bda
 2606 0373 7F030000 		.4byte	0x37f
 2607 0377 09       		.uleb128 0x9
 2608 0378 01       		.uleb128 0x1
 2609 0379 50       		.byte	0x50
 2610 037a 03       		.uleb128 0x3
 2611 037b 0A       		.byte	0xa
 2612 037c F401     		.2byte	0x1f4
 2613 037e 00       		.byte	0
 2614 037f 08       		.uleb128 0x8
 2615 0380 70010000 		.4byte	.LVL64
 2616 0384 061C0000 		.4byte	0x1c06
 2617 0388 9F030000 		.4byte	0x39f
 2618 038c 09       		.uleb128 0x9
 2619 038d 01       		.uleb128 0x1
 2620 038e 50       		.byte	0x50
 2621 038f 02       		.uleb128 0x2
 2622 0390 08       		.byte	0x8
 2623 0391 AA       		.byte	0xaa
 2624 0392 09       		.uleb128 0x9
 2625 0393 01       		.uleb128 0x1
 2626 0394 51       		.byte	0x51
 2627 0395 02       		.uleb128 0x2
 2628 0396 75       		.byte	0x75
 2629 0397 00       		.sleb128 0
 2630 0398 09       		.uleb128 0x9
 2631 0399 01       		.uleb128 0x1
 2632 039a 52       		.byte	0x52
 2633 039b 02       		.uleb128 0x2
 2634 039c 74       		.byte	0x74
 2635 039d 00       		.sleb128 0
 2636 039e 00       		.byte	0
 2637 039f 08       		.uleb128 0x8
 2638 03a0 78010000 		.4byte	.LVL65
 2639 03a4 DA1B0000 		.4byte	0x1bda
 2640 03a8 B4030000 		.4byte	0x3b4
 2641 03ac 09       		.uleb128 0x9
 2642 03ad 01       		.uleb128 0x1
 2643 03ae 50       		.byte	0x50
 2644 03af 03       		.uleb128 0x3
 2645 03b0 0A       		.byte	0xa
 2646 03b1 F401     		.2byte	0x1f4
 2647 03b3 00       		.byte	0
 2648 03b4 08       		.uleb128 0x8
 2649 03b5 B0010000 		.4byte	.LVL72
 2650 03b9 E51B0000 		.4byte	0x1be5
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cckoGjaV.s 			page 69


 2651 03bd CB030000 		.4byte	0x3cb
 2652 03c1 09       		.uleb128 0x9
 2653 03c2 01       		.uleb128 0x1
 2654 03c3 50       		.byte	0x50
 2655 03c4 05       		.uleb128 0x5
 2656 03c5 03       		.byte	0x3
 2657 03c6 50000000 		.4byte	.LC3
 2658 03ca 00       		.byte	0
 2659 03cb 0A       		.uleb128 0xa
 2660 03cc D8010000 		.4byte	.LVL78
 2661 03d0 8A1C0000 		.4byte	0x1c8a
 2662 03d4 09       		.uleb128 0x9
 2663 03d5 01       		.uleb128 0x1
 2664 03d6 50       		.byte	0x50
 2665 03d7 01       		.uleb128 0x1
 2666 03d8 31       		.byte	0x31
 2667 03d9 00       		.byte	0
 2668 03da 00       		.byte	0
 2669 03db 0D       		.uleb128 0xd
 2670 03dc 12020000 		.4byte	.LBB7
 2671 03e0 F2010000 		.4byte	.LBE7-.LBB7
 2672 03e4 3A070000 		.4byte	0x73a
 2673 03e8 0E       		.uleb128 0xe
 2674 03e9 0D050000 		.4byte	.LASF21
 2675 03ed 01       		.byte	0x1
 2676 03ee 3B01     		.2byte	0x13b
 2677 03f0 68000000 		.4byte	0x68
 2678 03f4 7C000000 		.4byte	.LLST4
 2679 03f8 06       		.uleb128 0x6
 2680 03f9 16020000 		.4byte	.LVL86
 2681 03fd 5E1C0000 		.4byte	0x1c5e
 2682 0401 08       		.uleb128 0x8
 2683 0402 24020000 		.4byte	.LVL87
 2684 0406 951C0000 		.4byte	0x1c95
 2685 040a 20040000 		.4byte	0x420
 2686 040e 09       		.uleb128 0x9
 2687 040f 01       		.uleb128 0x1
 2688 0410 51       		.byte	0x51
 2689 0411 02       		.uleb128 0x2
 2690 0412 09       		.byte	0x9
 2691 0413 DD       		.byte	0xdd
 2692 0414 09       		.uleb128 0x9
 2693 0415 01       		.uleb128 0x1
 2694 0416 52       		.byte	0x52
 2695 0417 02       		.uleb128 0x2
 2696 0418 08       		.byte	0x8
 2697 0419 64       		.byte	0x64
 2698 041a 09       		.uleb128 0x9
 2699 041b 01       		.uleb128 0x1
 2700 041c 53       		.byte	0x53
 2701 041d 01       		.uleb128 0x1
 2702 041e 30       		.byte	0x30
 2703 041f 00       		.byte	0
 2704 0420 08       		.uleb128 0x8
 2705 0421 36020000 		.4byte	.LVL88
 2706 0425 741C0000 		.4byte	0x1c74
 2707 0429 50040000 		.4byte	0x450
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cckoGjaV.s 			page 70


 2708 042d 09       		.uleb128 0x9
 2709 042e 01       		.uleb128 0x1
 2710 042f 50       		.byte	0x50
 2711 0430 02       		.uleb128 0x2
 2712 0431 08       		.byte	0x8
 2713 0432 82       		.byte	0x82
 2714 0433 09       		.uleb128 0x9
 2715 0434 01       		.uleb128 0x1
 2716 0435 51       		.byte	0x51
 2717 0436 01       		.uleb128 0x1
 2718 0437 31       		.byte	0x31
 2719 0438 09       		.uleb128 0x9
 2720 0439 01       		.uleb128 0x1
 2721 043a 52       		.byte	0x52
 2722 043b 01       		.uleb128 0x1
 2723 043c 31       		.byte	0x31
 2724 043d 09       		.uleb128 0x9
 2725 043e 01       		.uleb128 0x1
 2726 043f 53       		.byte	0x53
 2727 0440 01       		.uleb128 0x1
 2728 0441 30       		.byte	0x30
 2729 0442 09       		.uleb128 0x9
 2730 0443 02       		.uleb128 0x2
 2731 0444 7D       		.byte	0x7d
 2732 0445 00       		.sleb128 0
 2733 0446 02       		.uleb128 0x2
 2734 0447 08       		.byte	0x8
 2735 0448 C8       		.byte	0xc8
 2736 0449 09       		.uleb128 0x9
 2737 044a 02       		.uleb128 0x2
 2738 044b 7D       		.byte	0x7d
 2739 044c 04       		.sleb128 4
 2740 044d 01       		.uleb128 0x1
 2741 044e 31       		.byte	0x31
 2742 044f 00       		.byte	0
 2743 0450 08       		.uleb128 0x8
 2744 0451 3C020000 		.4byte	.LVL89
 2745 0455 691C0000 		.4byte	0x1c69
 2746 0459 63040000 		.4byte	0x463
 2747 045d 09       		.uleb128 0x9
 2748 045e 01       		.uleb128 0x1
 2749 045f 50       		.byte	0x50
 2750 0460 01       		.uleb128 0x1
 2751 0461 37       		.byte	0x37
 2752 0462 00       		.byte	0
 2753 0463 08       		.uleb128 0x8
 2754 0464 42020000 		.4byte	.LVL90
 2755 0468 A01C0000 		.4byte	0x1ca0
 2756 046c 76040000 		.4byte	0x476
 2757 0470 09       		.uleb128 0x9
 2758 0471 01       		.uleb128 0x1
 2759 0472 50       		.byte	0x50
 2760 0473 01       		.uleb128 0x1
 2761 0474 32       		.byte	0x32
 2762 0475 00       		.byte	0
 2763 0476 08       		.uleb128 0x8
 2764 0477 48020000 		.4byte	.LVL91
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cckoGjaV.s 			page 71


 2765 047b DA1B0000 		.4byte	0x1bda
 2766 047f 8A040000 		.4byte	0x48a
 2767 0483 09       		.uleb128 0x9
 2768 0484 01       		.uleb128 0x1
 2769 0485 50       		.byte	0x50
 2770 0486 02       		.uleb128 0x2
 2771 0487 08       		.byte	0x8
 2772 0488 32       		.byte	0x32
 2773 0489 00       		.byte	0
 2774 048a 08       		.uleb128 0x8
 2775 048b 50020000 		.4byte	.LVL92
 2776 048f A01C0000 		.4byte	0x1ca0
 2777 0493 9D040000 		.4byte	0x49d
 2778 0497 09       		.uleb128 0x9
 2779 0498 01       		.uleb128 0x1
 2780 0499 50       		.byte	0x50
 2781 049a 01       		.uleb128 0x1
 2782 049b 32       		.byte	0x32
 2783 049c 00       		.byte	0
 2784 049d 08       		.uleb128 0x8
 2785 049e 56020000 		.4byte	.LVL93
 2786 04a2 DA1B0000 		.4byte	0x1bda
 2787 04a6 B1040000 		.4byte	0x4b1
 2788 04aa 09       		.uleb128 0x9
 2789 04ab 01       		.uleb128 0x1
 2790 04ac 50       		.byte	0x50
 2791 04ad 02       		.uleb128 0x2
 2792 04ae 08       		.byte	0x8
 2793 04af 32       		.byte	0x32
 2794 04b0 00       		.byte	0
 2795 04b1 08       		.uleb128 0x8
 2796 04b2 7A020000 		.4byte	.LVL95
 2797 04b6 741C0000 		.4byte	0x1c74
 2798 04ba E3040000 		.4byte	0x4e3
 2799 04be 09       		.uleb128 0x9
 2800 04bf 01       		.uleb128 0x1
 2801 04c0 50       		.byte	0x50
 2802 04c1 02       		.uleb128 0x2
 2803 04c2 74       		.byte	0x74
 2804 04c3 00       		.sleb128 0
 2805 04c4 09       		.uleb128 0x9
 2806 04c5 01       		.uleb128 0x1
 2807 04c6 51       		.byte	0x51
 2808 04c7 01       		.uleb128 0x1
 2809 04c8 30       		.byte	0x30
 2810 04c9 09       		.uleb128 0x9
 2811 04ca 01       		.uleb128 0x1
 2812 04cb 52       		.byte	0x52
 2813 04cc 02       		.uleb128 0x2
 2814 04cd 75       		.byte	0x75
 2815 04ce 00       		.sleb128 0
 2816 04cf 09       		.uleb128 0x9
 2817 04d0 01       		.uleb128 0x1
 2818 04d1 53       		.byte	0x53
 2819 04d2 01       		.uleb128 0x1
 2820 04d3 33       		.byte	0x33
 2821 04d4 09       		.uleb128 0x9
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cckoGjaV.s 			page 72


 2822 04d5 02       		.uleb128 0x2
 2823 04d6 7D       		.byte	0x7d
 2824 04d7 00       		.sleb128 0
 2825 04d8 02       		.uleb128 0x2
 2826 04d9 76       		.byte	0x76
 2827 04da 00       		.sleb128 0
 2828 04db 09       		.uleb128 0x9
 2829 04dc 02       		.uleb128 0x2
 2830 04dd 7D       		.byte	0x7d
 2831 04de 04       		.sleb128 4
 2832 04df 02       		.uleb128 0x2
 2833 04e0 75       		.byte	0x75
 2834 04e1 00       		.sleb128 0
 2835 04e2 00       		.byte	0
 2836 04e3 08       		.uleb128 0x8
 2837 04e4 84020000 		.4byte	.LVL96
 2838 04e8 481C0000 		.4byte	0x1c48
 2839 04ec FD040000 		.4byte	0x4fd
 2840 04f0 09       		.uleb128 0x9
 2841 04f1 01       		.uleb128 0x1
 2842 04f2 50       		.byte	0x50
 2843 04f3 01       		.uleb128 0x1
 2844 04f4 32       		.byte	0x32
 2845 04f5 09       		.uleb128 0x9
 2846 04f6 01       		.uleb128 0x1
 2847 04f7 51       		.byte	0x51
 2848 04f8 03       		.uleb128 0x3
 2849 04f9 0A       		.byte	0xa
 2850 04fa E803     		.2byte	0x3e8
 2851 04fc 00       		.byte	0
 2852 04fd 08       		.uleb128 0x8
 2853 04fe 8A020000 		.4byte	.LVL97
 2854 0502 A01C0000 		.4byte	0x1ca0
 2855 0506 10050000 		.4byte	0x510
 2856 050a 09       		.uleb128 0x9
 2857 050b 01       		.uleb128 0x1
 2858 050c 50       		.byte	0x50
 2859 050d 01       		.uleb128 0x1
 2860 050e 30       		.byte	0x30
 2861 050f 00       		.byte	0
 2862 0510 08       		.uleb128 0x8
 2863 0511 90020000 		.4byte	.LVL98
 2864 0515 DA1B0000 		.4byte	0x1bda
 2865 0519 24050000 		.4byte	0x524
 2866 051d 09       		.uleb128 0x9
 2867 051e 01       		.uleb128 0x1
 2868 051f 50       		.byte	0x50
 2869 0520 02       		.uleb128 0x2
 2870 0521 08       		.byte	0x8
 2871 0522 3C       		.byte	0x3c
 2872 0523 00       		.byte	0
 2873 0524 08       		.uleb128 0x8
 2874 0525 AA020000 		.4byte	.LVL99
 2875 0529 531C0000 		.4byte	0x1c53
 2876 052d 41050000 		.4byte	0x541
 2877 0531 09       		.uleb128 0x9
 2878 0532 01       		.uleb128 0x1
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cckoGjaV.s 			page 73


 2879 0533 50       		.byte	0x50
 2880 0534 02       		.uleb128 0x2
 2881 0535 77       		.byte	0x77
 2882 0536 00       		.sleb128 0
 2883 0537 09       		.uleb128 0x9
 2884 0538 01       		.uleb128 0x1
 2885 0539 51       		.byte	0x51
 2886 053a 05       		.uleb128 0x5
 2887 053b 03       		.byte	0x3
 2888 053c 6C000000 		.4byte	.LC5
 2889 0540 00       		.byte	0
 2890 0541 08       		.uleb128 0x8
 2891 0542 B0020000 		.4byte	.LVL100
 2892 0546 E51B0000 		.4byte	0x1be5
 2893 054a 55050000 		.4byte	0x555
 2894 054e 09       		.uleb128 0x9
 2895 054f 01       		.uleb128 0x1
 2896 0550 50       		.byte	0x50
 2897 0551 02       		.uleb128 0x2
 2898 0552 77       		.byte	0x77
 2899 0553 00       		.sleb128 0
 2900 0554 00       		.byte	0
 2901 0555 08       		.uleb128 0x8
 2902 0556 C6020000 		.4byte	.LVL101
 2903 055a 061C0000 		.4byte	0x1c06
 2904 055e 75050000 		.4byte	0x575
 2905 0562 09       		.uleb128 0x9
 2906 0563 01       		.uleb128 0x1
 2907 0564 50       		.byte	0x50
 2908 0565 02       		.uleb128 0x2
 2909 0566 09       		.byte	0x9
 2910 0567 D3       		.byte	0xd3
 2911 0568 09       		.uleb128 0x9
 2912 0569 01       		.uleb128 0x1
 2913 056a 51       		.byte	0x51
 2914 056b 02       		.uleb128 0x2
 2915 056c 76       		.byte	0x76
 2916 056d 00       		.sleb128 0
 2917 056e 09       		.uleb128 0x9
 2918 056f 01       		.uleb128 0x1
 2919 0570 52       		.byte	0x52
 2920 0571 02       		.uleb128 0x2
 2921 0572 75       		.byte	0x75
 2922 0573 00       		.sleb128 0
 2923 0574 00       		.byte	0
 2924 0575 08       		.uleb128 0x8
 2925 0576 D8020000 		.4byte	.LVL102
 2926 057a 741C0000 		.4byte	0x1c74
 2927 057e A7050000 		.4byte	0x5a7
 2928 0582 09       		.uleb128 0x9
 2929 0583 01       		.uleb128 0x1
 2930 0584 50       		.byte	0x50
 2931 0585 02       		.uleb128 0x2
 2932 0586 74       		.byte	0x74
 2933 0587 00       		.sleb128 0
 2934 0588 09       		.uleb128 0x9
 2935 0589 01       		.uleb128 0x1
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cckoGjaV.s 			page 74


 2936 058a 51       		.byte	0x51
 2937 058b 01       		.uleb128 0x1
 2938 058c 30       		.byte	0x30
 2939 058d 09       		.uleb128 0x9
 2940 058e 01       		.uleb128 0x1
 2941 058f 52       		.byte	0x52
 2942 0590 02       		.uleb128 0x2
 2943 0591 09       		.byte	0x9
 2944 0592 FF       		.byte	0xff
 2945 0593 09       		.uleb128 0x9
 2946 0594 01       		.uleb128 0x1
 2947 0595 53       		.byte	0x53
 2948 0596 01       		.uleb128 0x1
 2949 0597 33       		.byte	0x33
 2950 0598 09       		.uleb128 0x9
 2951 0599 02       		.uleb128 0x2
 2952 059a 7D       		.byte	0x7d
 2953 059b 00       		.sleb128 0
 2954 059c 02       		.uleb128 0x2
 2955 059d 76       		.byte	0x76
 2956 059e 00       		.sleb128 0
 2957 059f 09       		.uleb128 0x9
 2958 05a0 02       		.uleb128 0x2
 2959 05a1 7D       		.byte	0x7d
 2960 05a2 04       		.sleb128 4
 2961 05a3 02       		.uleb128 0x2
 2962 05a4 75       		.byte	0x75
 2963 05a5 00       		.sleb128 0
 2964 05a6 00       		.byte	0
 2965 05a7 08       		.uleb128 0x8
 2966 05a8 E2020000 		.4byte	.LVL103
 2967 05ac 481C0000 		.4byte	0x1c48
 2968 05b0 C1050000 		.4byte	0x5c1
 2969 05b4 09       		.uleb128 0x9
 2970 05b5 01       		.uleb128 0x1
 2971 05b6 50       		.byte	0x50
 2972 05b7 01       		.uleb128 0x1
 2973 05b8 32       		.byte	0x32
 2974 05b9 09       		.uleb128 0x9
 2975 05ba 01       		.uleb128 0x1
 2976 05bb 51       		.byte	0x51
 2977 05bc 03       		.uleb128 0x3
 2978 05bd 0A       		.byte	0xa
 2979 05be E803     		.2byte	0x3e8
 2980 05c0 00       		.byte	0
 2981 05c1 08       		.uleb128 0x8
 2982 05c2 E8020000 		.4byte	.LVL104
 2983 05c6 A01C0000 		.4byte	0x1ca0
 2984 05ca D4050000 		.4byte	0x5d4
 2985 05ce 09       		.uleb128 0x9
 2986 05cf 01       		.uleb128 0x1
 2987 05d0 50       		.byte	0x50
 2988 05d1 01       		.uleb128 0x1
 2989 05d2 34       		.byte	0x34
 2990 05d3 00       		.byte	0
 2991 05d4 08       		.uleb128 0x8
 2992 05d5 EE020000 		.4byte	.LVL105
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cckoGjaV.s 			page 75


 2993 05d9 DA1B0000 		.4byte	0x1bda
 2994 05dd E8050000 		.4byte	0x5e8
 2995 05e1 09       		.uleb128 0x9
 2996 05e2 01       		.uleb128 0x1
 2997 05e3 50       		.byte	0x50
 2998 05e4 02       		.uleb128 0x2
 2999 05e5 08       		.byte	0x8
 3000 05e6 32       		.byte	0x32
 3001 05e7 00       		.byte	0
 3002 05e8 08       		.uleb128 0x8
 3003 05e9 5A030000 		.4byte	.LVL107
 3004 05ed 531C0000 		.4byte	0x1c53
 3005 05f1 05060000 		.4byte	0x605
 3006 05f5 09       		.uleb128 0x9
 3007 05f6 01       		.uleb128 0x1
 3008 05f7 50       		.byte	0x50
 3009 05f8 02       		.uleb128 0x2
 3010 05f9 74       		.byte	0x74
 3011 05fa 00       		.sleb128 0
 3012 05fb 09       		.uleb128 0x9
 3013 05fc 01       		.uleb128 0x1
 3014 05fd 51       		.byte	0x51
 3015 05fe 05       		.uleb128 0x5
 3016 05ff 03       		.byte	0x3
 3017 0600 8C000000 		.4byte	.LC6
 3018 0604 00       		.byte	0
 3019 0605 08       		.uleb128 0x8
 3020 0606 60030000 		.4byte	.LVL108
 3021 060a E51B0000 		.4byte	0x1be5
 3022 060e 19060000 		.4byte	0x619
 3023 0612 09       		.uleb128 0x9
 3024 0613 01       		.uleb128 0x1
 3025 0614 50       		.byte	0x50
 3026 0615 02       		.uleb128 0x2
 3027 0616 74       		.byte	0x74
 3028 0617 00       		.sleb128 0
 3029 0618 00       		.byte	0
 3030 0619 08       		.uleb128 0x8
 3031 061a 68030000 		.4byte	.LVL109
 3032 061e AB1C0000 		.4byte	0x1cab
 3033 0622 33060000 		.4byte	0x633
 3034 0626 09       		.uleb128 0x9
 3035 0627 01       		.uleb128 0x1
 3036 0628 50       		.byte	0x50
 3037 0629 02       		.uleb128 0x2
 3038 062a 75       		.byte	0x75
 3039 062b 00       		.sleb128 0
 3040 062c 09       		.uleb128 0x9
 3041 062d 01       		.uleb128 0x1
 3042 062e 51       		.byte	0x51
 3043 062f 02       		.uleb128 0x2
 3044 0630 76       		.byte	0x76
 3045 0631 00       		.sleb128 0
 3046 0632 00       		.byte	0
 3047 0633 08       		.uleb128 0x8
 3048 0634 7A030000 		.4byte	.LVL110
 3049 0638 741C0000 		.4byte	0x1c74
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cckoGjaV.s 			page 76


 3050 063c 66060000 		.4byte	0x666
 3051 0640 09       		.uleb128 0x9
 3052 0641 01       		.uleb128 0x1
 3053 0642 50       		.byte	0x50
 3054 0643 02       		.uleb128 0x2
 3055 0644 08       		.byte	0x8
 3056 0645 AC       		.byte	0xac
 3057 0646 09       		.uleb128 0x9
 3058 0647 01       		.uleb128 0x1
 3059 0648 51       		.byte	0x51
 3060 0649 02       		.uleb128 0x2
 3061 064a 75       		.byte	0x75
 3062 064b 00       		.sleb128 0
 3063 064c 09       		.uleb128 0x9
 3064 064d 01       		.uleb128 0x1
 3065 064e 52       		.byte	0x52
 3066 064f 02       		.uleb128 0x2
 3067 0650 75       		.byte	0x75
 3068 0651 00       		.sleb128 0
 3069 0652 09       		.uleb128 0x9
 3070 0653 01       		.uleb128 0x1
 3071 0654 53       		.byte	0x53
 3072 0655 01       		.uleb128 0x1
 3073 0656 30       		.byte	0x30
 3074 0657 09       		.uleb128 0x9
 3075 0658 02       		.uleb128 0x2
 3076 0659 7D       		.byte	0x7d
 3077 065a 00       		.sleb128 0
 3078 065b 02       		.uleb128 0x2
 3079 065c 76       		.byte	0x76
 3080 065d 00       		.sleb128 0
 3081 065e 09       		.uleb128 0x9
 3082 065f 02       		.uleb128 0x2
 3083 0660 7D       		.byte	0x7d
 3084 0661 04       		.sleb128 4
 3085 0662 02       		.uleb128 0x2
 3086 0663 75       		.byte	0x75
 3087 0664 00       		.sleb128 0
 3088 0665 00       		.byte	0
 3089 0666 08       		.uleb128 0x8
 3090 0667 80030000 		.4byte	.LVL111
 3091 066b 691C0000 		.4byte	0x1c69
 3092 066f 79060000 		.4byte	0x679
 3093 0673 09       		.uleb128 0x9
 3094 0674 01       		.uleb128 0x1
 3095 0675 50       		.byte	0x50
 3096 0676 01       		.uleb128 0x1
 3097 0677 35       		.byte	0x35
 3098 0678 00       		.byte	0
 3099 0679 08       		.uleb128 0x8
 3100 067a C4030000 		.4byte	.LVL112
 3101 067e 531C0000 		.4byte	0x1c53
 3102 0682 96060000 		.4byte	0x696
 3103 0686 09       		.uleb128 0x9
 3104 0687 01       		.uleb128 0x1
 3105 0688 50       		.byte	0x50
 3106 0689 02       		.uleb128 0x2
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cckoGjaV.s 			page 77


 3107 068a 74       		.byte	0x74
 3108 068b 00       		.sleb128 0
 3109 068c 09       		.uleb128 0x9
 3110 068d 01       		.uleb128 0x1
 3111 068e 51       		.byte	0x51
 3112 068f 05       		.uleb128 0x5
 3113 0690 03       		.byte	0x3
 3114 0691 AC000000 		.4byte	.LC7
 3115 0695 00       		.byte	0
 3116 0696 08       		.uleb128 0x8
 3117 0697 CA030000 		.4byte	.LVL113
 3118 069b E51B0000 		.4byte	0x1be5
 3119 069f AA060000 		.4byte	0x6aa
 3120 06a3 09       		.uleb128 0x9
 3121 06a4 01       		.uleb128 0x1
 3122 06a5 50       		.byte	0x50
 3123 06a6 02       		.uleb128 0x2
 3124 06a7 74       		.byte	0x74
 3125 06a8 00       		.sleb128 0
 3126 06a9 00       		.byte	0
 3127 06aa 08       		.uleb128 0x8
 3128 06ab D6030000 		.4byte	.LVL114
 3129 06af 531C0000 		.4byte	0x1c53
 3130 06b3 C7060000 		.4byte	0x6c7
 3131 06b7 09       		.uleb128 0x9
 3132 06b8 01       		.uleb128 0x1
 3133 06b9 50       		.byte	0x50
 3134 06ba 02       		.uleb128 0x2
 3135 06bb 74       		.byte	0x74
 3136 06bc 00       		.sleb128 0
 3137 06bd 09       		.uleb128 0x9
 3138 06be 01       		.uleb128 0x1
 3139 06bf 51       		.byte	0x51
 3140 06c0 05       		.uleb128 0x5
 3141 06c1 03       		.byte	0x3
 3142 06c2 C8000000 		.4byte	.LC8
 3143 06c6 00       		.byte	0
 3144 06c7 08       		.uleb128 0x8
 3145 06c8 DC030000 		.4byte	.LVL115
 3146 06cc E51B0000 		.4byte	0x1be5
 3147 06d0 DB060000 		.4byte	0x6db
 3148 06d4 09       		.uleb128 0x9
 3149 06d5 01       		.uleb128 0x1
 3150 06d6 50       		.byte	0x50
 3151 06d7 02       		.uleb128 0x2
 3152 06d8 74       		.byte	0x74
 3153 06d9 00       		.sleb128 0
 3154 06da 00       		.byte	0
 3155 06db 08       		.uleb128 0x8
 3156 06dc E8030000 		.4byte	.LVL116
 3157 06e0 531C0000 		.4byte	0x1c53
 3158 06e4 F8060000 		.4byte	0x6f8
 3159 06e8 09       		.uleb128 0x9
 3160 06e9 01       		.uleb128 0x1
 3161 06ea 50       		.byte	0x50
 3162 06eb 02       		.uleb128 0x2
 3163 06ec 74       		.byte	0x74
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cckoGjaV.s 			page 78


 3164 06ed 00       		.sleb128 0
 3165 06ee 09       		.uleb128 0x9
 3166 06ef 01       		.uleb128 0x1
 3167 06f0 51       		.byte	0x51
 3168 06f1 05       		.uleb128 0x5
 3169 06f2 03       		.byte	0x3
 3170 06f3 E4000000 		.4byte	.LC9
 3171 06f7 00       		.byte	0
 3172 06f8 08       		.uleb128 0x8
 3173 06f9 EE030000 		.4byte	.LVL117
 3174 06fd E51B0000 		.4byte	0x1be5
 3175 0701 0C070000 		.4byte	0x70c
 3176 0705 09       		.uleb128 0x9
 3177 0706 01       		.uleb128 0x1
 3178 0707 50       		.byte	0x50
 3179 0708 02       		.uleb128 0x2
 3180 0709 74       		.byte	0x74
 3181 070a 00       		.sleb128 0
 3182 070b 00       		.byte	0
 3183 070c 08       		.uleb128 0x8
 3184 070d FA030000 		.4byte	.LVL118
 3185 0711 531C0000 		.4byte	0x1c53
 3186 0715 29070000 		.4byte	0x729
 3187 0719 09       		.uleb128 0x9
 3188 071a 01       		.uleb128 0x1
 3189 071b 50       		.byte	0x50
 3190 071c 02       		.uleb128 0x2
 3191 071d 74       		.byte	0x74
 3192 071e 00       		.sleb128 0
 3193 071f 09       		.uleb128 0x9
 3194 0720 01       		.uleb128 0x1
 3195 0721 51       		.byte	0x51
 3196 0722 05       		.uleb128 0x5
 3197 0723 03       		.byte	0x3
 3198 0724 00010000 		.4byte	.LC10
 3199 0728 00       		.byte	0
 3200 0729 0A       		.uleb128 0xa
 3201 072a 00040000 		.4byte	.LVL119
 3202 072e E51B0000 		.4byte	0x1be5
 3203 0732 09       		.uleb128 0x9
 3204 0733 01       		.uleb128 0x1
 3205 0734 50       		.byte	0x50
 3206 0735 02       		.uleb128 0x2
 3207 0736 74       		.byte	0x74
 3208 0737 00       		.sleb128 0
 3209 0738 00       		.byte	0
 3210 0739 00       		.byte	0
 3211 073a 0D       		.uleb128 0xd
 3212 073b D0080000 		.4byte	.LBB8
 3213 073f 34000000 		.4byte	.LBE8-.LBB8
 3214 0743 CD070000 		.4byte	0x7cd
 3215 0747 0E       		.uleb128 0xe
 3216 0748 4E020000 		.4byte	.LASF22
 3217 074c 01       		.byte	0x1
 3218 074d 7303     		.2byte	0x373
 3219 074f 68000000 		.4byte	0x68
 3220 0753 8F000000 		.4byte	.LLST5
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cckoGjaV.s 			page 79


 3221 0757 12       		.uleb128 0x12
 3222 0758 93060000 		.4byte	.LASF112
 3223 075c 01       		.byte	0x1
 3224 075d 7403     		.2byte	0x374
 3225 075f 68000000 		.4byte	0x68
 3226 0763 08       		.uleb128 0x8
 3227 0764 DE080000 		.4byte	.LVL199
 3228 0768 B61C0000 		.4byte	0x1cb6
 3229 076c 7B070000 		.4byte	0x77b
 3230 0770 09       		.uleb128 0x9
 3231 0771 01       		.uleb128 0x1
 3232 0772 50       		.byte	0x50
 3233 0773 01       		.uleb128 0x1
 3234 0774 30       		.byte	0x30
 3235 0775 09       		.uleb128 0x9
 3236 0776 01       		.uleb128 0x1
 3237 0777 51       		.byte	0x51
 3238 0778 01       		.uleb128 0x1
 3239 0779 32       		.byte	0x32
 3240 077a 00       		.byte	0
 3241 077b 08       		.uleb128 0x8
 3242 077c E4080000 		.4byte	.LVL200
 3243 0780 C11C0000 		.4byte	0x1cc1
 3244 0784 8E070000 		.4byte	0x78e
 3245 0788 09       		.uleb128 0x9
 3246 0789 01       		.uleb128 0x1
 3247 078a 50       		.byte	0x50
 3248 078b 01       		.uleb128 0x1
 3249 078c 35       		.byte	0x35
 3250 078d 00       		.byte	0
 3251 078e 06       		.uleb128 0x6
 3252 078f E8080000 		.4byte	.LVL201
 3253 0793 CC1C0000 		.4byte	0x1ccc
 3254 0797 08       		.uleb128 0x8
 3255 0798 F0080000 		.4byte	.LVL202
 3256 079c B61C0000 		.4byte	0x1cb6
 3257 07a0 B0070000 		.4byte	0x7b0
 3258 07a4 09       		.uleb128 0x9
 3259 07a5 01       		.uleb128 0x1
 3260 07a6 50       		.byte	0x50
 3261 07a7 01       		.uleb128 0x1
 3262 07a8 33       		.byte	0x33
 3263 07a9 09       		.uleb128 0x9
 3264 07aa 01       		.uleb128 0x1
 3265 07ab 51       		.byte	0x51
 3266 07ac 02       		.uleb128 0x2
 3267 07ad 75       		.byte	0x75
 3268 07ae 00       		.sleb128 0
 3269 07af 00       		.byte	0
 3270 07b0 0A       		.uleb128 0xa
 3271 07b1 FC080000 		.4byte	.LVL203
 3272 07b5 061C0000 		.4byte	0x1c06
 3273 07b9 09       		.uleb128 0x9
 3274 07ba 01       		.uleb128 0x1
 3275 07bb 50       		.byte	0x50
 3276 07bc 02       		.uleb128 0x2
 3277 07bd 09       		.byte	0x9
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cckoGjaV.s 			page 80


 3278 07be C4       		.byte	0xc4
 3279 07bf 09       		.uleb128 0x9
 3280 07c0 01       		.uleb128 0x1
 3281 07c1 51       		.byte	0x51
 3282 07c2 02       		.uleb128 0x2
 3283 07c3 08       		.byte	0x8
 3284 07c4 C8       		.byte	0xc8
 3285 07c5 09       		.uleb128 0x9
 3286 07c6 01       		.uleb128 0x1
 3287 07c7 52       		.byte	0x52
 3288 07c8 02       		.uleb128 0x2
 3289 07c9 75       		.byte	0x75
 3290 07ca 00       		.sleb128 0
 3291 07cb 00       		.byte	0
 3292 07cc 00       		.byte	0
 3293 07cd 0D       		.uleb128 0xd
 3294 07ce E2090000 		.4byte	.LBB9
 3295 07d2 52010000 		.4byte	.LBE9-.LBB9
 3296 07d6 BD0A0000 		.4byte	0xabd
 3297 07da 0E       		.uleb128 0xe
 3298 07db 75060000 		.4byte	.LASF23
 3299 07df 01       		.byte	0x1
 3300 07e0 0B04     		.2byte	0x40b
 3301 07e2 68000000 		.4byte	0x68
 3302 07e6 A3000000 		.4byte	.LLST6
 3303 07ea 08       		.uleb128 0x8
 3304 07eb E8090000 		.4byte	.LVL223
 3305 07ef 8A1C0000 		.4byte	0x1c8a
 3306 07f3 FD070000 		.4byte	0x7fd
 3307 07f7 09       		.uleb128 0x9
 3308 07f8 01       		.uleb128 0x1
 3309 07f9 50       		.byte	0x50
 3310 07fa 01       		.uleb128 0x1
 3311 07fb 31       		.byte	0x31
 3312 07fc 00       		.byte	0
 3313 07fd 06       		.uleb128 0x6
 3314 07fe F2090000 		.4byte	.LVL224
 3315 0802 3D1C0000 		.4byte	0x1c3d
 3316 0806 08       		.uleb128 0x8
 3317 0807 1A0A0000 		.4byte	.LVL227
 3318 080b 741C0000 		.4byte	0x1c74
 3319 080f 39080000 		.4byte	0x839
 3320 0813 09       		.uleb128 0x9
 3321 0814 01       		.uleb128 0x1
 3322 0815 50       		.byte	0x50
 3323 0816 03       		.uleb128 0x3
 3324 0817 0A       		.byte	0xa
 3325 0818 2602     		.2byte	0x226
 3326 081a 09       		.uleb128 0x9
 3327 081b 01       		.uleb128 0x1
 3328 081c 51       		.byte	0x51
 3329 081d 01       		.uleb128 0x1
 3330 081e 30       		.byte	0x30
 3331 081f 09       		.uleb128 0x9
 3332 0820 01       		.uleb128 0x1
 3333 0821 52       		.byte	0x52
 3334 0822 02       		.uleb128 0x2
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cckoGjaV.s 			page 81


 3335 0823 09       		.byte	0x9
 3336 0824 FF       		.byte	0xff
 3337 0825 09       		.uleb128 0x9
 3338 0826 01       		.uleb128 0x1
 3339 0827 53       		.byte	0x53
 3340 0828 01       		.uleb128 0x1
 3341 0829 35       		.byte	0x35
 3342 082a 09       		.uleb128 0x9
 3343 082b 02       		.uleb128 0x2
 3344 082c 7D       		.byte	0x7d
 3345 082d 00       		.sleb128 0
 3346 082e 02       		.uleb128 0x2
 3347 082f 75       		.byte	0x75
 3348 0830 00       		.sleb128 0
 3349 0831 09       		.uleb128 0x9
 3350 0832 02       		.uleb128 0x2
 3351 0833 7D       		.byte	0x7d
 3352 0834 04       		.sleb128 4
 3353 0835 02       		.uleb128 0x2
 3354 0836 74       		.byte	0x74
 3355 0837 00       		.sleb128 0
 3356 0838 00       		.byte	0
 3357 0839 08       		.uleb128 0x8
 3358 083a 220A0000 		.4byte	.LVL228
 3359 083e AB1C0000 		.4byte	0x1cab
 3360 0842 52080000 		.4byte	0x852
 3361 0846 09       		.uleb128 0x9
 3362 0847 01       		.uleb128 0x1
 3363 0848 50       		.byte	0x50
 3364 0849 01       		.uleb128 0x1
 3365 084a 30       		.byte	0x30
 3366 084b 09       		.uleb128 0x9
 3367 084c 01       		.uleb128 0x1
 3368 084d 51       		.byte	0x51
 3369 084e 02       		.uleb128 0x2
 3370 084f 75       		.byte	0x75
 3371 0850 00       		.sleb128 0
 3372 0851 00       		.byte	0
 3373 0852 08       		.uleb128 0x8
 3374 0853 2A0A0000 		.4byte	.LVL229
 3375 0857 AB1C0000 		.4byte	0x1cab
 3376 085b 6B080000 		.4byte	0x86b
 3377 085f 09       		.uleb128 0x9
 3378 0860 01       		.uleb128 0x1
 3379 0861 50       		.byte	0x50
 3380 0862 01       		.uleb128 0x1
 3381 0863 33       		.byte	0x33
 3382 0864 09       		.uleb128 0x9
 3383 0865 01       		.uleb128 0x1
 3384 0866 51       		.byte	0x51
 3385 0867 02       		.uleb128 0x2
 3386 0868 75       		.byte	0x75
 3387 0869 00       		.sleb128 0
 3388 086a 00       		.byte	0
 3389 086b 08       		.uleb128 0x8
 3390 086c 3A0A0000 		.4byte	.LVL230
 3391 0870 741C0000 		.4byte	0x1c74
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cckoGjaV.s 			page 82


 3392 0874 9E080000 		.4byte	0x89e
 3393 0878 09       		.uleb128 0x9
 3394 0879 01       		.uleb128 0x1
 3395 087a 50       		.byte	0x50
 3396 087b 02       		.uleb128 0x2
 3397 087c 08       		.byte	0x8
 3398 087d AA       		.byte	0xaa
 3399 087e 09       		.uleb128 0x9
 3400 087f 01       		.uleb128 0x1
 3401 0880 51       		.byte	0x51
 3402 0881 02       		.uleb128 0x2
 3403 0882 74       		.byte	0x74
 3404 0883 00       		.sleb128 0
 3405 0884 09       		.uleb128 0x9
 3406 0885 01       		.uleb128 0x1
 3407 0886 52       		.byte	0x52
 3408 0887 02       		.uleb128 0x2
 3409 0888 74       		.byte	0x74
 3410 0889 00       		.sleb128 0
 3411 088a 09       		.uleb128 0x9
 3412 088b 01       		.uleb128 0x1
 3413 088c 53       		.byte	0x53
 3414 088d 01       		.uleb128 0x1
 3415 088e 35       		.byte	0x35
 3416 088f 09       		.uleb128 0x9
 3417 0890 02       		.uleb128 0x2
 3418 0891 7D       		.byte	0x7d
 3419 0892 00       		.sleb128 0
 3420 0893 02       		.uleb128 0x2
 3421 0894 75       		.byte	0x75
 3422 0895 00       		.sleb128 0
 3423 0896 09       		.uleb128 0x9
 3424 0897 02       		.uleb128 0x2
 3425 0898 7D       		.byte	0x7d
 3426 0899 04       		.sleb128 4
 3427 089a 02       		.uleb128 0x2
 3428 089b 74       		.byte	0x74
 3429 089c 00       		.sleb128 0
 3430 089d 00       		.byte	0
 3431 089e 08       		.uleb128 0x8
 3432 089f 480A0000 		.4byte	.LVL231
 3433 08a3 D71C0000 		.4byte	0x1cd7
 3434 08a7 CA080000 		.4byte	0x8ca
 3435 08ab 09       		.uleb128 0x9
 3436 08ac 01       		.uleb128 0x1
 3437 08ad 50       		.byte	0x50
 3438 08ae 02       		.uleb128 0x2
 3439 08af 08       		.byte	0x8
 3440 08b0 AA       		.byte	0xaa
 3441 08b1 09       		.uleb128 0x9
 3442 08b2 01       		.uleb128 0x1
 3443 08b3 51       		.byte	0x51
 3444 08b4 02       		.uleb128 0x2
 3445 08b5 74       		.byte	0x74
 3446 08b6 00       		.sleb128 0
 3447 08b7 09       		.uleb128 0x9
 3448 08b8 01       		.uleb128 0x1
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cckoGjaV.s 			page 83


 3449 08b9 52       		.byte	0x52
 3450 08ba 01       		.uleb128 0x1
 3451 08bb 35       		.byte	0x35
 3452 08bc 09       		.uleb128 0x9
 3453 08bd 01       		.uleb128 0x1
 3454 08be 53       		.byte	0x53
 3455 08bf 02       		.uleb128 0x2
 3456 08c0 08       		.byte	0x8
 3457 08c1 46       		.byte	0x46
 3458 08c2 09       		.uleb128 0x9
 3459 08c3 02       		.uleb128 0x2
 3460 08c4 7D       		.byte	0x7d
 3461 08c5 00       		.sleb128 0
 3462 08c6 02       		.uleb128 0x2
 3463 08c7 74       		.byte	0x74
 3464 08c8 00       		.sleb128 0
 3465 08c9 00       		.byte	0
 3466 08ca 08       		.uleb128 0x8
 3467 08cb 4E0A0000 		.4byte	.LVL232
 3468 08cf 691C0000 		.4byte	0x1c69
 3469 08d3 DD080000 		.4byte	0x8dd
 3470 08d7 09       		.uleb128 0x9
 3471 08d8 01       		.uleb128 0x1
 3472 08d9 50       		.byte	0x50
 3473 08da 01       		.uleb128 0x1
 3474 08db 37       		.byte	0x37
 3475 08dc 00       		.byte	0
 3476 08dd 08       		.uleb128 0x8
 3477 08de 560A0000 		.4byte	.LVL233
 3478 08e2 AB1C0000 		.4byte	0x1cab
 3479 08e6 F6080000 		.4byte	0x8f6
 3480 08ea 09       		.uleb128 0x9
 3481 08eb 01       		.uleb128 0x1
 3482 08ec 50       		.byte	0x50
 3483 08ed 01       		.uleb128 0x1
 3484 08ee 32       		.byte	0x32
 3485 08ef 09       		.uleb128 0x9
 3486 08f0 01       		.uleb128 0x1
 3487 08f1 51       		.byte	0x51
 3488 08f2 02       		.uleb128 0x2
 3489 08f3 08       		.byte	0x8
 3490 08f4 C8       		.byte	0xc8
 3491 08f5 00       		.byte	0
 3492 08f6 08       		.uleb128 0x8
 3493 08f7 5E0A0000 		.4byte	.LVL234
 3494 08fb B61C0000 		.4byte	0x1cb6
 3495 08ff 0E090000 		.4byte	0x90e
 3496 0903 09       		.uleb128 0x9
 3497 0904 01       		.uleb128 0x1
 3498 0905 50       		.byte	0x50
 3499 0906 01       		.uleb128 0x1
 3500 0907 33       		.byte	0x33
 3501 0908 09       		.uleb128 0x9
 3502 0909 01       		.uleb128 0x1
 3503 090a 51       		.byte	0x51
 3504 090b 01       		.uleb128 0x1
 3505 090c 31       		.byte	0x31
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cckoGjaV.s 			page 84


 3506 090d 00       		.byte	0
 3507 090e 08       		.uleb128 0x8
 3508 090f 6A0A0000 		.4byte	.LVL235
 3509 0913 691C0000 		.4byte	0x1c69
 3510 0917 21090000 		.4byte	0x921
 3511 091b 09       		.uleb128 0x9
 3512 091c 01       		.uleb128 0x1
 3513 091d 50       		.byte	0x50
 3514 091e 01       		.uleb128 0x1
 3515 091f 37       		.byte	0x37
 3516 0920 00       		.byte	0
 3517 0921 08       		.uleb128 0x8
 3518 0922 7C0A0000 		.4byte	.LVL236
 3519 0926 741C0000 		.4byte	0x1c74
 3520 092a 51090000 		.4byte	0x951
 3521 092e 09       		.uleb128 0x9
 3522 092f 01       		.uleb128 0x1
 3523 0930 50       		.byte	0x50
 3524 0931 02       		.uleb128 0x2
 3525 0932 08       		.byte	0x8
 3526 0933 82       		.byte	0x82
 3527 0934 09       		.uleb128 0x9
 3528 0935 01       		.uleb128 0x1
 3529 0936 51       		.byte	0x51
 3530 0937 01       		.uleb128 0x1
 3531 0938 31       		.byte	0x31
 3532 0939 09       		.uleb128 0x9
 3533 093a 01       		.uleb128 0x1
 3534 093b 52       		.byte	0x52
 3535 093c 01       		.uleb128 0x1
 3536 093d 31       		.byte	0x31
 3537 093e 09       		.uleb128 0x9
 3538 093f 01       		.uleb128 0x1
 3539 0940 53       		.byte	0x53
 3540 0941 01       		.uleb128 0x1
 3541 0942 30       		.byte	0x30
 3542 0943 09       		.uleb128 0x9
 3543 0944 02       		.uleb128 0x2
 3544 0945 7D       		.byte	0x7d
 3545 0946 00       		.sleb128 0
 3546 0947 02       		.uleb128 0x2
 3547 0948 08       		.byte	0x8
 3548 0949 C8       		.byte	0xc8
 3549 094a 09       		.uleb128 0x9
 3550 094b 02       		.uleb128 0x2
 3551 094c 7D       		.byte	0x7d
 3552 094d 04       		.sleb128 4
 3553 094e 01       		.uleb128 0x1
 3554 094f 31       		.byte	0x31
 3555 0950 00       		.byte	0
 3556 0951 08       		.uleb128 0x8
 3557 0952 920A0000 		.4byte	.LVL237
 3558 0956 741C0000 		.4byte	0x1c74
 3559 095a 81090000 		.4byte	0x981
 3560 095e 09       		.uleb128 0x9
 3561 095f 01       		.uleb128 0x1
 3562 0960 50       		.byte	0x50
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cckoGjaV.s 			page 85


 3563 0961 02       		.uleb128 0x2
 3564 0962 08       		.byte	0x8
 3565 0963 5F       		.byte	0x5f
 3566 0964 09       		.uleb128 0x9
 3567 0965 01       		.uleb128 0x1
 3568 0966 51       		.byte	0x51
 3569 0967 01       		.uleb128 0x1
 3570 0968 31       		.byte	0x31
 3571 0969 09       		.uleb128 0x9
 3572 096a 01       		.uleb128 0x1
 3573 096b 52       		.byte	0x52
 3574 096c 01       		.uleb128 0x1
 3575 096d 31       		.byte	0x31
 3576 096e 09       		.uleb128 0x9
 3577 096f 01       		.uleb128 0x1
 3578 0970 53       		.byte	0x53
 3579 0971 01       		.uleb128 0x1
 3580 0972 35       		.byte	0x35
 3581 0973 09       		.uleb128 0x9
 3582 0974 02       		.uleb128 0x2
 3583 0975 7D       		.byte	0x7d
 3584 0976 00       		.sleb128 0
 3585 0977 02       		.uleb128 0x2
 3586 0978 08       		.byte	0x8
 3587 0979 46       		.byte	0x46
 3588 097a 09       		.uleb128 0x9
 3589 097b 02       		.uleb128 0x2
 3590 097c 7D       		.byte	0x7d
 3591 097d 04       		.sleb128 4
 3592 097e 01       		.uleb128 0x1
 3593 097f 30       		.byte	0x30
 3594 0980 00       		.byte	0
 3595 0981 08       		.uleb128 0x8
 3596 0982 9C0A0000 		.4byte	.LVL238
 3597 0986 B61C0000 		.4byte	0x1cb6
 3598 098a 94090000 		.4byte	0x994
 3599 098e 09       		.uleb128 0x9
 3600 098f 01       		.uleb128 0x1
 3601 0990 51       		.byte	0x51
 3602 0991 01       		.uleb128 0x1
 3603 0992 31       		.byte	0x31
 3604 0993 00       		.byte	0
 3605 0994 06       		.uleb128 0x6
 3606 0995 A00A0000 		.4byte	.LVL239
 3607 0999 E21C0000 		.4byte	0x1ce2
 3608 099d 08       		.uleb128 0x8
 3609 099e A80A0000 		.4byte	.LVL240
 3610 09a2 B61C0000 		.4byte	0x1cb6
 3611 09a6 B5090000 		.4byte	0x9b5
 3612 09aa 09       		.uleb128 0x9
 3613 09ab 01       		.uleb128 0x1
 3614 09ac 50       		.byte	0x50
 3615 09ad 01       		.uleb128 0x1
 3616 09ae 33       		.byte	0x33
 3617 09af 09       		.uleb128 0x9
 3618 09b0 01       		.uleb128 0x1
 3619 09b1 51       		.byte	0x51
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cckoGjaV.s 			page 86


 3620 09b2 01       		.uleb128 0x1
 3621 09b3 30       		.byte	0x30
 3622 09b4 00       		.byte	0
 3623 09b5 08       		.uleb128 0x8
 3624 09b6 DE0A0000 		.4byte	.LVL241
 3625 09ba 061C0000 		.4byte	0x1c06
 3626 09be D5090000 		.4byte	0x9d5
 3627 09c2 09       		.uleb128 0x9
 3628 09c3 01       		.uleb128 0x1
 3629 09c4 50       		.byte	0x50
 3630 09c5 03       		.uleb128 0x3
 3631 09c6 0B       		.byte	0xb
 3632 09c7 7EFF     		.2byte	0xff7e
 3633 09c9 09       		.uleb128 0x9
 3634 09ca 01       		.uleb128 0x1
 3635 09cb 51       		.byte	0x51
 3636 09cc 02       		.uleb128 0x2
 3637 09cd 08       		.byte	0x8
 3638 09ce C8       		.byte	0xc8
 3639 09cf 09       		.uleb128 0x9
 3640 09d0 01       		.uleb128 0x1
 3641 09d1 52       		.byte	0x52
 3642 09d2 01       		.uleb128 0x1
 3643 09d3 31       		.byte	0x31
 3644 09d4 00       		.byte	0
 3645 09d5 08       		.uleb128 0x8
 3646 09d6 E60A0000 		.4byte	.LVL242
 3647 09da AB1C0000 		.4byte	0x1cab
 3648 09de EE090000 		.4byte	0x9ee
 3649 09e2 09       		.uleb128 0x9
 3650 09e3 01       		.uleb128 0x1
 3651 09e4 50       		.byte	0x50
 3652 09e5 01       		.uleb128 0x1
 3653 09e6 33       		.byte	0x33
 3654 09e7 09       		.uleb128 0x9
 3655 09e8 01       		.uleb128 0x1
 3656 09e9 51       		.byte	0x51
 3657 09ea 02       		.uleb128 0x2
 3658 09eb 08       		.byte	0x8
 3659 09ec C8       		.byte	0xc8
 3660 09ed 00       		.byte	0
 3661 09ee 08       		.uleb128 0x8
 3662 09ef EC0A0000 		.4byte	.LVL243
 3663 09f3 691C0000 		.4byte	0x1c69
 3664 09f7 010A0000 		.4byte	0xa01
 3665 09fb 09       		.uleb128 0x9
 3666 09fc 01       		.uleb128 0x1
 3667 09fd 50       		.byte	0x50
 3668 09fe 01       		.uleb128 0x1
 3669 09ff 37       		.byte	0x37
 3670 0a00 00       		.byte	0
 3671 0a01 08       		.uleb128 0x8
 3672 0a02 040B0000 		.4byte	.LVL244
 3673 0a06 741C0000 		.4byte	0x1c74
 3674 0a0a 340A0000 		.4byte	0xa34
 3675 0a0e 09       		.uleb128 0x9
 3676 0a0f 01       		.uleb128 0x1
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cckoGjaV.s 			page 87


 3677 0a10 50       		.byte	0x50
 3678 0a11 03       		.uleb128 0x3
 3679 0a12 0A       		.byte	0xa
 3680 0a13 2602     		.2byte	0x226
 3681 0a15 09       		.uleb128 0x9
 3682 0a16 01       		.uleb128 0x1
 3683 0a17 51       		.byte	0x51
 3684 0a18 01       		.uleb128 0x1
 3685 0a19 30       		.byte	0x30
 3686 0a1a 09       		.uleb128 0x9
 3687 0a1b 01       		.uleb128 0x1
 3688 0a1c 52       		.byte	0x52
 3689 0a1d 02       		.uleb128 0x2
 3690 0a1e 09       		.byte	0x9
 3691 0a1f FF       		.byte	0xff
 3692 0a20 09       		.uleb128 0x9
 3693 0a21 01       		.uleb128 0x1
 3694 0a22 53       		.byte	0x53
 3695 0a23 01       		.uleb128 0x1
 3696 0a24 35       		.byte	0x35
 3697 0a25 09       		.uleb128 0x9
 3698 0a26 02       		.uleb128 0x2
 3699 0a27 7D       		.byte	0x7d
 3700 0a28 00       		.sleb128 0
 3701 0a29 02       		.uleb128 0x2
 3702 0a2a 75       		.byte	0x75
 3703 0a2b 00       		.sleb128 0
 3704 0a2c 09       		.uleb128 0x9
 3705 0a2d 02       		.uleb128 0x2
 3706 0a2e 7D       		.byte	0x7d
 3707 0a2f 04       		.sleb128 4
 3708 0a30 02       		.uleb128 0x2
 3709 0a31 74       		.byte	0x74
 3710 0a32 00       		.sleb128 0
 3711 0a33 00       		.byte	0
 3712 0a34 08       		.uleb128 0x8
 3713 0a35 0A0B0000 		.4byte	.LVL245
 3714 0a39 691C0000 		.4byte	0x1c69
 3715 0a3d 470A0000 		.4byte	0xa47
 3716 0a41 09       		.uleb128 0x9
 3717 0a42 01       		.uleb128 0x1
 3718 0a43 50       		.byte	0x50
 3719 0a44 01       		.uleb128 0x1
 3720 0a45 37       		.byte	0x37
 3721 0a46 00       		.byte	0
 3722 0a47 08       		.uleb128 0x8
 3723 0a48 120B0000 		.4byte	.LVL246
 3724 0a4c AB1C0000 		.4byte	0x1cab
 3725 0a50 600A0000 		.4byte	0xa60
 3726 0a54 09       		.uleb128 0x9
 3727 0a55 01       		.uleb128 0x1
 3728 0a56 50       		.byte	0x50
 3729 0a57 01       		.uleb128 0x1
 3730 0a58 30       		.byte	0x30
 3731 0a59 09       		.uleb128 0x9
 3732 0a5a 01       		.uleb128 0x1
 3733 0a5b 51       		.byte	0x51
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cckoGjaV.s 			page 88


 3734 0a5c 02       		.uleb128 0x2
 3735 0a5d 75       		.byte	0x75
 3736 0a5e 00       		.sleb128 0
 3737 0a5f 00       		.byte	0
 3738 0a60 08       		.uleb128 0x8
 3739 0a61 1A0B0000 		.4byte	.LVL247
 3740 0a65 AB1C0000 		.4byte	0x1cab
 3741 0a69 7A0A0000 		.4byte	0xa7a
 3742 0a6d 09       		.uleb128 0x9
 3743 0a6e 01       		.uleb128 0x1
 3744 0a6f 50       		.byte	0x50
 3745 0a70 02       		.uleb128 0x2
 3746 0a71 74       		.byte	0x74
 3747 0a72 00       		.sleb128 0
 3748 0a73 09       		.uleb128 0x9
 3749 0a74 01       		.uleb128 0x1
 3750 0a75 51       		.byte	0x51
 3751 0a76 02       		.uleb128 0x2
 3752 0a77 75       		.byte	0x75
 3753 0a78 00       		.sleb128 0
 3754 0a79 00       		.byte	0
 3755 0a7a 08       		.uleb128 0x8
 3756 0a7b 2A0B0000 		.4byte	.LVL248
 3757 0a7f 741C0000 		.4byte	0x1c74
 3758 0a83 AD0A0000 		.4byte	0xaad
 3759 0a87 09       		.uleb128 0x9
 3760 0a88 01       		.uleb128 0x1
 3761 0a89 50       		.byte	0x50
 3762 0a8a 02       		.uleb128 0x2
 3763 0a8b 08       		.byte	0x8
 3764 0a8c B9       		.byte	0xb9
 3765 0a8d 09       		.uleb128 0x9
 3766 0a8e 01       		.uleb128 0x1
 3767 0a8f 51       		.byte	0x51
 3768 0a90 02       		.uleb128 0x2
 3769 0a91 74       		.byte	0x74
 3770 0a92 00       		.sleb128 0
 3771 0a93 09       		.uleb128 0x9
 3772 0a94 01       		.uleb128 0x1
 3773 0a95 52       		.byte	0x52
 3774 0a96 02       		.uleb128 0x2
 3775 0a97 74       		.byte	0x74
 3776 0a98 00       		.sleb128 0
 3777 0a99 09       		.uleb128 0x9
 3778 0a9a 01       		.uleb128 0x1
 3779 0a9b 53       		.byte	0x53
 3780 0a9c 01       		.uleb128 0x1
 3781 0a9d 35       		.byte	0x35
 3782 0a9e 09       		.uleb128 0x9
 3783 0a9f 02       		.uleb128 0x2
 3784 0aa0 7D       		.byte	0x7d
 3785 0aa1 00       		.sleb128 0
 3786 0aa2 02       		.uleb128 0x2
 3787 0aa3 75       		.byte	0x75
 3788 0aa4 00       		.sleb128 0
 3789 0aa5 09       		.uleb128 0x9
 3790 0aa6 02       		.uleb128 0x2
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cckoGjaV.s 			page 89


 3791 0aa7 7D       		.byte	0x7d
 3792 0aa8 04       		.sleb128 4
 3793 0aa9 02       		.uleb128 0x2
 3794 0aaa 74       		.byte	0x74
 3795 0aab 00       		.sleb128 0
 3796 0aac 00       		.byte	0
 3797 0aad 0A       		.uleb128 0xa
 3798 0aae 300B0000 		.4byte	.LVL249
 3799 0ab2 691C0000 		.4byte	0x1c69
 3800 0ab6 09       		.uleb128 0x9
 3801 0ab7 01       		.uleb128 0x1
 3802 0ab8 50       		.byte	0x50
 3803 0ab9 01       		.uleb128 0x1
 3804 0aba 37       		.byte	0x37
 3805 0abb 00       		.byte	0
 3806 0abc 00       		.byte	0
 3807 0abd 06       		.uleb128 0x6
 3808 0abe 0C000000 		.4byte	.LVL11
 3809 0ac2 ED1C0000 		.4byte	0x1ced
 3810 0ac6 06       		.uleb128 0x6
 3811 0ac7 10000000 		.4byte	.LVL12
 3812 0acb F81C0000 		.4byte	0x1cf8
 3813 0acf 08       		.uleb128 0x8
 3814 0ad0 16000000 		.4byte	.LVL13
 3815 0ad4 E51B0000 		.4byte	0x1be5
 3816 0ad8 E60A0000 		.4byte	0xae6
 3817 0adc 09       		.uleb128 0x9
 3818 0add 01       		.uleb128 0x1
 3819 0ade 50       		.byte	0x50
 3820 0adf 05       		.uleb128 0x5
 3821 0ae0 03       		.byte	0x3
 3822 0ae1 18000000 		.4byte	.LC1
 3823 0ae5 00       		.byte	0
 3824 0ae6 06       		.uleb128 0x6
 3825 0ae7 1A000000 		.4byte	.LVL14
 3826 0aeb 031D0000 		.4byte	0x1d03
 3827 0aef 06       		.uleb128 0x6
 3828 0af0 1E000000 		.4byte	.LVL15
 3829 0af4 0E1D0000 		.4byte	0x1d0e
 3830 0af8 08       		.uleb128 0x8
 3831 0af9 24000000 		.4byte	.LVL16
 3832 0afd 191D0000 		.4byte	0x1d19
 3833 0b01 0B0B0000 		.4byte	0xb0b
 3834 0b05 09       		.uleb128 0x9
 3835 0b06 01       		.uleb128 0x1
 3836 0b07 50       		.byte	0x50
 3837 0b08 01       		.uleb128 0x1
 3838 0b09 30       		.byte	0x30
 3839 0b0a 00       		.byte	0
 3840 0b0b 06       		.uleb128 0x6
 3841 0b0c 2C000000 		.4byte	.LVL17
 3842 0b10 241D0000 		.4byte	0x1d24
 3843 0b14 08       		.uleb128 0x8
 3844 0b15 36000000 		.4byte	.LVL18
 3845 0b19 8A1C0000 		.4byte	0x1c8a
 3846 0b1d 280B0000 		.4byte	0xb28
 3847 0b21 09       		.uleb128 0x9
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cckoGjaV.s 			page 90


 3848 0b22 01       		.uleb128 0x1
 3849 0b23 50       		.byte	0x50
 3850 0b24 02       		.uleb128 0x2
 3851 0b25 75       		.byte	0x75
 3852 0b26 00       		.sleb128 0
 3853 0b27 00       		.byte	0
 3854 0b28 08       		.uleb128 0x8
 3855 0b29 3C000000 		.4byte	.LVL19
 3856 0b2d 2F1D0000 		.4byte	0x1d2f
 3857 0b31 3B0B0000 		.4byte	0xb3b
 3858 0b35 09       		.uleb128 0x9
 3859 0b36 01       		.uleb128 0x1
 3860 0b37 50       		.byte	0x50
 3861 0b38 01       		.uleb128 0x1
 3862 0b39 31       		.byte	0x31
 3863 0b3a 00       		.byte	0
 3864 0b3b 08       		.uleb128 0x8
 3865 0b3c 44000000 		.4byte	.LVL20
 3866 0b40 DA1B0000 		.4byte	0x1bda
 3867 0b44 500B0000 		.4byte	0xb50
 3868 0b48 09       		.uleb128 0x9
 3869 0b49 01       		.uleb128 0x1
 3870 0b4a 50       		.byte	0x50
 3871 0b4b 03       		.uleb128 0x3
 3872 0b4c 0A       		.byte	0xa
 3873 0b4d F401     		.2byte	0x1f4
 3874 0b4f 00       		.byte	0
 3875 0b50 08       		.uleb128 0x8
 3876 0b51 4A000000 		.4byte	.LVL21
 3877 0b55 2F1D0000 		.4byte	0x1d2f
 3878 0b59 630B0000 		.4byte	0xb63
 3879 0b5d 09       		.uleb128 0x9
 3880 0b5e 01       		.uleb128 0x1
 3881 0b5f 50       		.byte	0x50
 3882 0b60 01       		.uleb128 0x1
 3883 0b61 32       		.byte	0x32
 3884 0b62 00       		.byte	0
 3885 0b63 08       		.uleb128 0x8
 3886 0b64 52000000 		.4byte	.LVL22
 3887 0b68 DA1B0000 		.4byte	0x1bda
 3888 0b6c 780B0000 		.4byte	0xb78
 3889 0b70 09       		.uleb128 0x9
 3890 0b71 01       		.uleb128 0x1
 3891 0b72 50       		.byte	0x50
 3892 0b73 03       		.uleb128 0x3
 3893 0b74 0A       		.byte	0xa
 3894 0b75 F401     		.2byte	0x1f4
 3895 0b77 00       		.byte	0
 3896 0b78 08       		.uleb128 0x8
 3897 0b79 58000000 		.4byte	.LVL23
 3898 0b7d 2F1D0000 		.4byte	0x1d2f
 3899 0b81 8B0B0000 		.4byte	0xb8b
 3900 0b85 09       		.uleb128 0x9
 3901 0b86 01       		.uleb128 0x1
 3902 0b87 50       		.byte	0x50
 3903 0b88 01       		.uleb128 0x1
 3904 0b89 33       		.byte	0x33
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cckoGjaV.s 			page 91


 3905 0b8a 00       		.byte	0
 3906 0b8b 08       		.uleb128 0x8
 3907 0b8c 60000000 		.4byte	.LVL24
 3908 0b90 DA1B0000 		.4byte	0x1bda
 3909 0b94 A00B0000 		.4byte	0xba0
 3910 0b98 09       		.uleb128 0x9
 3911 0b99 01       		.uleb128 0x1
 3912 0b9a 50       		.byte	0x50
 3913 0b9b 03       		.uleb128 0x3
 3914 0b9c 0A       		.byte	0xa
 3915 0b9d F401     		.2byte	0x1f4
 3916 0b9f 00       		.byte	0
 3917 0ba0 08       		.uleb128 0x8
 3918 0ba1 66000000 		.4byte	.LVL25
 3919 0ba5 2F1D0000 		.4byte	0x1d2f
 3920 0ba9 B40B0000 		.4byte	0xbb4
 3921 0bad 09       		.uleb128 0x9
 3922 0bae 01       		.uleb128 0x1
 3923 0baf 50       		.byte	0x50
 3924 0bb0 02       		.uleb128 0x2
 3925 0bb1 75       		.byte	0x75
 3926 0bb2 00       		.sleb128 0
 3927 0bb3 00       		.byte	0
 3928 0bb4 08       		.uleb128 0x8
 3929 0bb5 6E000000 		.4byte	.LVL26
 3930 0bb9 DA1B0000 		.4byte	0x1bda
 3931 0bbd C90B0000 		.4byte	0xbc9
 3932 0bc1 09       		.uleb128 0x9
 3933 0bc2 01       		.uleb128 0x1
 3934 0bc3 50       		.byte	0x50
 3935 0bc4 03       		.uleb128 0x3
 3936 0bc5 0A       		.byte	0xa
 3937 0bc6 F401     		.2byte	0x1f4
 3938 0bc8 00       		.byte	0
 3939 0bc9 06       		.uleb128 0x6
 3940 0bca 72000000 		.4byte	.LVL27
 3941 0bce 7F1C0000 		.4byte	0x1c7f
 3942 0bd2 06       		.uleb128 0x6
 3943 0bd3 76000000 		.4byte	.LVL28
 3944 0bd7 3A1D0000 		.4byte	0x1d3a
 3945 0bdb 08       		.uleb128 0x8
 3946 0bdc 7E000000 		.4byte	.LVL29
 3947 0be0 451D0000 		.4byte	0x1d45
 3948 0be4 F00B0000 		.4byte	0xbf0
 3949 0be8 09       		.uleb128 0x9
 3950 0be9 01       		.uleb128 0x1
 3951 0bea 50       		.byte	0x50
 3952 0beb 03       		.uleb128 0x3
 3953 0bec 0A       		.byte	0xa
 3954 0bed E803     		.2byte	0x3e8
 3955 0bef 00       		.byte	0
 3956 0bf0 08       		.uleb128 0x8
 3957 0bf1 86000000 		.4byte	.LVL30
 3958 0bf5 DA1B0000 		.4byte	0x1bda
 3959 0bf9 050C0000 		.4byte	0xc05
 3960 0bfd 09       		.uleb128 0x9
 3961 0bfe 01       		.uleb128 0x1
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cckoGjaV.s 			page 92


 3962 0bff 50       		.byte	0x50
 3963 0c00 03       		.uleb128 0x3
 3964 0c01 0A       		.byte	0xa
 3965 0c02 F401     		.2byte	0x1f4
 3966 0c04 00       		.byte	0
 3967 0c05 06       		.uleb128 0x6
 3968 0c06 8A000000 		.4byte	.LVL31
 3969 0c0a 501D0000 		.4byte	0x1d50
 3970 0c0e 06       		.uleb128 0x6
 3971 0c0f 8E000000 		.4byte	.LVL32
 3972 0c13 5B1D0000 		.4byte	0x1d5b
 3973 0c17 08       		.uleb128 0x8
 3974 0c18 96000000 		.4byte	.LVL33
 3975 0c1c 661D0000 		.4byte	0x1d66
 3976 0c20 2C0C0000 		.4byte	0xc2c
 3977 0c24 09       		.uleb128 0x9
 3978 0c25 01       		.uleb128 0x1
 3979 0c26 50       		.byte	0x50
 3980 0c27 03       		.uleb128 0x3
 3981 0c28 0A       		.byte	0xa
 3982 0c29 6004     		.2byte	0x460
 3983 0c2b 00       		.byte	0
 3984 0c2c 08       		.uleb128 0x8
 3985 0c2d 9E000000 		.4byte	.LVL34
 3986 0c31 DA1B0000 		.4byte	0x1bda
 3987 0c35 410C0000 		.4byte	0xc41
 3988 0c39 09       		.uleb128 0x9
 3989 0c3a 01       		.uleb128 0x1
 3990 0c3b 50       		.byte	0x50
 3991 0c3c 03       		.uleb128 0x3
 3992 0c3d 0A       		.byte	0xa
 3993 0c3e F401     		.2byte	0x1f4
 3994 0c40 00       		.byte	0
 3995 0c41 06       		.uleb128 0x6
 3996 0c42 A2000000 		.4byte	.LVL35
 3997 0c46 711D0000 		.4byte	0x1d71
 3998 0c4a 06       		.uleb128 0x6
 3999 0c4b A6000000 		.4byte	.LVL36
 4000 0c4f 7C1D0000 		.4byte	0x1d7c
 4001 0c53 06       		.uleb128 0x6
 4002 0c54 AA000000 		.4byte	.LVL37
 4003 0c58 871D0000 		.4byte	0x1d87
 4004 0c5c 08       		.uleb128 0x8
 4005 0c5d B0000000 		.4byte	.LVL38
 4006 0c61 1C1C0000 		.4byte	0x1c1c
 4007 0c65 700C0000 		.4byte	0xc70
 4008 0c69 09       		.uleb128 0x9
 4009 0c6a 01       		.uleb128 0x1
 4010 0c6b 50       		.byte	0x50
 4011 0c6c 02       		.uleb128 0x2
 4012 0c6d 75       		.byte	0x75
 4013 0c6e 00       		.sleb128 0
 4014 0c6f 00       		.byte	0
 4015 0c70 08       		.uleb128 0x8
 4016 0c71 B6000000 		.4byte	.LVL39
 4017 0c75 321C0000 		.4byte	0x1c32
 4018 0c79 840C0000 		.4byte	0xc84
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cckoGjaV.s 			page 93


 4019 0c7d 09       		.uleb128 0x9
 4020 0c7e 01       		.uleb128 0x1
 4021 0c7f 50       		.byte	0x50
 4022 0c80 02       		.uleb128 0x2
 4023 0c81 75       		.byte	0x75
 4024 0c82 00       		.sleb128 0
 4025 0c83 00       		.byte	0
 4026 0c84 06       		.uleb128 0x6
 4027 0c85 BA000000 		.4byte	.LVL40
 4028 0c89 F01B0000 		.4byte	0x1bf0
 4029 0c8d 06       		.uleb128 0x6
 4030 0c8e BE000000 		.4byte	.LVL41
 4031 0c92 FB1B0000 		.4byte	0x1bfb
 4032 0c96 06       		.uleb128 0x6
 4033 0c97 C2000000 		.4byte	.LVL42
 4034 0c9b 921D0000 		.4byte	0x1d92
 4035 0c9f 06       		.uleb128 0x6
 4036 0ca0 C6000000 		.4byte	.LVL43
 4037 0ca4 9D1D0000 		.4byte	0x1d9d
 4038 0ca8 06       		.uleb128 0x6
 4039 0ca9 D0000000 		.4byte	.LVL44
 4040 0cad A81D0000 		.4byte	0x1da8
 4041 0cb1 06       		.uleb128 0x6
 4042 0cb2 D4000000 		.4byte	.LVL45
 4043 0cb6 B31D0000 		.4byte	0x1db3
 4044 0cba 08       		.uleb128 0x8
 4045 0cbb DA000000 		.4byte	.LVL46
 4046 0cbf BE1D0000 		.4byte	0x1dbe
 4047 0cc3 D10C0000 		.4byte	0xcd1
 4048 0cc7 09       		.uleb128 0x9
 4049 0cc8 01       		.uleb128 0x1
 4050 0cc9 50       		.byte	0x50
 4051 0cca 05       		.uleb128 0x5
 4052 0ccb 03       		.byte	0x3
 4053 0ccc 00000000 		.4byte	TIH
 4054 0cd0 00       		.byte	0
 4055 0cd1 08       		.uleb128 0x8
 4056 0cd2 E0000000 		.4byte	.LVL47
 4057 0cd6 C91D0000 		.4byte	0x1dc9
 4058 0cda E80C0000 		.4byte	0xce8
 4059 0cde 09       		.uleb128 0x9
 4060 0cdf 01       		.uleb128 0x1
 4061 0ce0 50       		.byte	0x50
 4062 0ce1 05       		.uleb128 0x5
 4063 0ce2 03       		.byte	0x3
 4064 0ce3 00000000 		.4byte	StartIH
 4065 0ce7 00       		.byte	0
 4066 0ce8 08       		.uleb128 0x8
 4067 0ce9 E6000000 		.4byte	.LVL48
 4068 0ced D41D0000 		.4byte	0x1dd4
 4069 0cf1 FF0C0000 		.4byte	0xcff
 4070 0cf5 09       		.uleb128 0x9
 4071 0cf6 01       		.uleb128 0x1
 4072 0cf7 50       		.byte	0x50
 4073 0cf8 05       		.uleb128 0x5
 4074 0cf9 03       		.byte	0x3
 4075 0cfa 00000000 		.4byte	SAIH
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cckoGjaV.s 			page 94


 4076 0cfe 00       		.byte	0
 4077 0cff 08       		.uleb128 0x8
 4078 0d00 F0000000 		.4byte	.LVL49
 4079 0d04 E51B0000 		.4byte	0x1be5
 4080 0d08 160D0000 		.4byte	0xd16
 4081 0d0c 09       		.uleb128 0x9
 4082 0d0d 01       		.uleb128 0x1
 4083 0d0e 50       		.byte	0x50
 4084 0d0f 05       		.uleb128 0x5
 4085 0d10 03       		.byte	0x3
 4086 0d11 30000000 		.4byte	.LC2
 4087 0d15 00       		.byte	0
 4088 0d16 06       		.uleb128 0x6
 4089 0d17 F4000000 		.4byte	.LVL50
 4090 0d1b DF1D0000 		.4byte	0x1ddf
 4091 0d1f 06       		.uleb128 0x6
 4092 0d20 F8000000 		.4byte	.LVL51
 4093 0d24 DF1D0000 		.4byte	0x1ddf
 4094 0d28 06       		.uleb128 0x6
 4095 0d29 FC000000 		.4byte	.LVL52
 4096 0d2d DF1D0000 		.4byte	0x1ddf
 4097 0d31 06       		.uleb128 0x6
 4098 0d32 00010000 		.4byte	.LVL53
 4099 0d36 EA1D0000 		.4byte	0x1dea
 4100 0d3a 06       		.uleb128 0x6
 4101 0d3b 04010000 		.4byte	.LVL54
 4102 0d3f F51D0000 		.4byte	0x1df5
 4103 0d43 08       		.uleb128 0x8
 4104 0d44 16040000 		.4byte	.LVL120
 4105 0d48 E51B0000 		.4byte	0x1be5
 4106 0d4c 5A0D0000 		.4byte	0xd5a
 4107 0d50 09       		.uleb128 0x9
 4108 0d51 01       		.uleb128 0x1
 4109 0d52 50       		.byte	0x50
 4110 0d53 05       		.uleb128 0x5
 4111 0d54 03       		.byte	0x3
 4112 0d55 1C010000 		.4byte	.LC11
 4113 0d59 00       		.byte	0
 4114 0d5a 08       		.uleb128 0x8
 4115 0d5b 2C040000 		.4byte	.LVL121
 4116 0d5f 741C0000 		.4byte	0x1c74
 4117 0d63 8C0D0000 		.4byte	0xd8c
 4118 0d67 09       		.uleb128 0x9
 4119 0d68 01       		.uleb128 0x1
 4120 0d69 50       		.byte	0x50
 4121 0d6a 02       		.uleb128 0x2
 4122 0d6b 75       		.byte	0x75
 4123 0d6c 00       		.sleb128 0
 4124 0d6d 09       		.uleb128 0x9
 4125 0d6e 01       		.uleb128 0x1
 4126 0d6f 51       		.byte	0x51
 4127 0d70 01       		.uleb128 0x1
 4128 0d71 30       		.byte	0x30
 4129 0d72 09       		.uleb128 0x9
 4130 0d73 01       		.uleb128 0x1
 4131 0d74 52       		.byte	0x52
 4132 0d75 02       		.uleb128 0x2
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cckoGjaV.s 			page 95


 4133 0d76 09       		.byte	0x9
 4134 0d77 FF       		.byte	0xff
 4135 0d78 09       		.uleb128 0x9
 4136 0d79 01       		.uleb128 0x1
 4137 0d7a 53       		.byte	0x53
 4138 0d7b 01       		.uleb128 0x1
 4139 0d7c 35       		.byte	0x35
 4140 0d7d 09       		.uleb128 0x9
 4141 0d7e 02       		.uleb128 0x2
 4142 0d7f 7D       		.byte	0x7d
 4143 0d80 00       		.sleb128 0
 4144 0d81 02       		.uleb128 0x2
 4145 0d82 75       		.byte	0x75
 4146 0d83 00       		.sleb128 0
 4147 0d84 09       		.uleb128 0x9
 4148 0d85 02       		.uleb128 0x2
 4149 0d86 7D       		.byte	0x7d
 4150 0d87 04       		.sleb128 4
 4151 0d88 02       		.uleb128 0x2
 4152 0d89 74       		.byte	0x74
 4153 0d8a 00       		.sleb128 0
 4154 0d8b 00       		.byte	0
 4155 0d8c 08       		.uleb128 0x8
 4156 0d8d 32040000 		.4byte	.LVL122
 4157 0d91 691C0000 		.4byte	0x1c69
 4158 0d95 9F0D0000 		.4byte	0xd9f
 4159 0d99 09       		.uleb128 0x9
 4160 0d9a 01       		.uleb128 0x1
 4161 0d9b 50       		.byte	0x50
 4162 0d9c 01       		.uleb128 0x1
 4163 0d9d 37       		.byte	0x37
 4164 0d9e 00       		.byte	0
 4165 0d9f 08       		.uleb128 0x8
 4166 0da0 3A040000 		.4byte	.LVL123
 4167 0da4 AB1C0000 		.4byte	0x1cab
 4168 0da8 B80D0000 		.4byte	0xdb8
 4169 0dac 09       		.uleb128 0x9
 4170 0dad 01       		.uleb128 0x1
 4171 0dae 50       		.byte	0x50
 4172 0daf 01       		.uleb128 0x1
 4173 0db0 30       		.byte	0x30
 4174 0db1 09       		.uleb128 0x9
 4175 0db2 01       		.uleb128 0x1
 4176 0db3 51       		.byte	0x51
 4177 0db4 02       		.uleb128 0x2
 4178 0db5 75       		.byte	0x75
 4179 0db6 00       		.sleb128 0
 4180 0db7 00       		.byte	0
 4181 0db8 08       		.uleb128 0x8
 4182 0db9 40040000 		.4byte	.LVL124
 4183 0dbd A01C0000 		.4byte	0x1ca0
 4184 0dc1 CB0D0000 		.4byte	0xdcb
 4185 0dc5 09       		.uleb128 0x9
 4186 0dc6 01       		.uleb128 0x1
 4187 0dc7 50       		.byte	0x50
 4188 0dc8 01       		.uleb128 0x1
 4189 0dc9 36       		.byte	0x36
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cckoGjaV.s 			page 96


 4190 0dca 00       		.byte	0
 4191 0dcb 08       		.uleb128 0x8
 4192 0dcc 46040000 		.4byte	.LVL125
 4193 0dd0 DA1B0000 		.4byte	0x1bda
 4194 0dd4 DF0D0000 		.4byte	0xddf
 4195 0dd8 09       		.uleb128 0x9
 4196 0dd9 01       		.uleb128 0x1
 4197 0dda 50       		.byte	0x50
 4198 0ddb 02       		.uleb128 0x2
 4199 0ddc 08       		.byte	0x8
 4200 0ddd 32       		.byte	0x32
 4201 0dde 00       		.byte	0
 4202 0ddf 08       		.uleb128 0x8
 4203 0de0 6C040000 		.4byte	.LVL126
 4204 0de4 741C0000 		.4byte	0x1c74
 4205 0de8 0C0E0000 		.4byte	0xe0c
 4206 0dec 09       		.uleb128 0x9
 4207 0ded 01       		.uleb128 0x1
 4208 0dee 51       		.byte	0x51
 4209 0def 02       		.uleb128 0x2
 4210 0df0 74       		.byte	0x74
 4211 0df1 00       		.sleb128 0
 4212 0df2 09       		.uleb128 0x9
 4213 0df3 01       		.uleb128 0x1
 4214 0df4 52       		.byte	0x52
 4215 0df5 02       		.uleb128 0x2
 4216 0df6 74       		.byte	0x74
 4217 0df7 00       		.sleb128 0
 4218 0df8 09       		.uleb128 0x9
 4219 0df9 01       		.uleb128 0x1
 4220 0dfa 53       		.byte	0x53
 4221 0dfb 01       		.uleb128 0x1
 4222 0dfc 30       		.byte	0x30
 4223 0dfd 09       		.uleb128 0x9
 4224 0dfe 02       		.uleb128 0x2
 4225 0dff 7D       		.byte	0x7d
 4226 0e00 00       		.sleb128 0
 4227 0e01 02       		.uleb128 0x2
 4228 0e02 75       		.byte	0x75
 4229 0e03 00       		.sleb128 0
 4230 0e04 09       		.uleb128 0x9
 4231 0e05 02       		.uleb128 0x2
 4232 0e06 7D       		.byte	0x7d
 4233 0e07 04       		.sleb128 4
 4234 0e08 02       		.uleb128 0x2
 4235 0e09 74       		.byte	0x74
 4236 0e0a 00       		.sleb128 0
 4237 0e0b 00       		.byte	0
 4238 0e0c 08       		.uleb128 0x8
 4239 0e0d 78040000 		.4byte	.LVL127
 4240 0e11 531C0000 		.4byte	0x1c53
 4241 0e15 290E0000 		.4byte	0xe29
 4242 0e19 09       		.uleb128 0x9
 4243 0e1a 01       		.uleb128 0x1
 4244 0e1b 50       		.byte	0x50
 4245 0e1c 02       		.uleb128 0x2
 4246 0e1d 74       		.byte	0x74
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cckoGjaV.s 			page 97


 4247 0e1e 00       		.sleb128 0
 4248 0e1f 09       		.uleb128 0x9
 4249 0e20 01       		.uleb128 0x1
 4250 0e21 51       		.byte	0x51
 4251 0e22 05       		.uleb128 0x5
 4252 0e23 03       		.byte	0x3
 4253 0e24 30010000 		.4byte	.LC12
 4254 0e28 00       		.byte	0
 4255 0e29 08       		.uleb128 0x8
 4256 0e2a 7E040000 		.4byte	.LVL128
 4257 0e2e E51B0000 		.4byte	0x1be5
 4258 0e32 3D0E0000 		.4byte	0xe3d
 4259 0e36 09       		.uleb128 0x9
 4260 0e37 01       		.uleb128 0x1
 4261 0e38 50       		.byte	0x50
 4262 0e39 02       		.uleb128 0x2
 4263 0e3a 74       		.byte	0x74
 4264 0e3b 00       		.sleb128 0
 4265 0e3c 00       		.byte	0
 4266 0e3d 08       		.uleb128 0x8
 4267 0e3e 8A040000 		.4byte	.LVL129
 4268 0e42 531C0000 		.4byte	0x1c53
 4269 0e46 5A0E0000 		.4byte	0xe5a
 4270 0e4a 09       		.uleb128 0x9
 4271 0e4b 01       		.uleb128 0x1
 4272 0e4c 50       		.byte	0x50
 4273 0e4d 02       		.uleb128 0x2
 4274 0e4e 74       		.byte	0x74
 4275 0e4f 00       		.sleb128 0
 4276 0e50 09       		.uleb128 0x9
 4277 0e51 01       		.uleb128 0x1
 4278 0e52 51       		.byte	0x51
 4279 0e53 05       		.uleb128 0x5
 4280 0e54 03       		.byte	0x3
 4281 0e55 48010000 		.4byte	.LC13
 4282 0e59 00       		.byte	0
 4283 0e5a 08       		.uleb128 0x8
 4284 0e5b 90040000 		.4byte	.LVL130
 4285 0e5f E51B0000 		.4byte	0x1be5
 4286 0e63 6E0E0000 		.4byte	0xe6e
 4287 0e67 09       		.uleb128 0x9
 4288 0e68 01       		.uleb128 0x1
 4289 0e69 50       		.byte	0x50
 4290 0e6a 02       		.uleb128 0x2
 4291 0e6b 74       		.byte	0x74
 4292 0e6c 00       		.sleb128 0
 4293 0e6d 00       		.byte	0
 4294 0e6e 08       		.uleb128 0x8
 4295 0e6f B0040000 		.4byte	.LVL131
 4296 0e73 741C0000 		.4byte	0x1c74
 4297 0e77 9A0E0000 		.4byte	0xe9a
 4298 0e7b 09       		.uleb128 0x9
 4299 0e7c 01       		.uleb128 0x1
 4300 0e7d 51       		.byte	0x51
 4301 0e7e 01       		.uleb128 0x1
 4302 0e7f 30       		.byte	0x30
 4303 0e80 09       		.uleb128 0x9
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cckoGjaV.s 			page 98


 4304 0e81 01       		.uleb128 0x1
 4305 0e82 52       		.byte	0x52
 4306 0e83 02       		.uleb128 0x2
 4307 0e84 74       		.byte	0x74
 4308 0e85 00       		.sleb128 0
 4309 0e86 09       		.uleb128 0x9
 4310 0e87 01       		.uleb128 0x1
 4311 0e88 53       		.byte	0x53
 4312 0e89 01       		.uleb128 0x1
 4313 0e8a 36       		.byte	0x36
 4314 0e8b 09       		.uleb128 0x9
 4315 0e8c 02       		.uleb128 0x2
 4316 0e8d 7D       		.byte	0x7d
 4317 0e8e 00       		.sleb128 0
 4318 0e8f 02       		.uleb128 0x2
 4319 0e90 75       		.byte	0x75
 4320 0e91 00       		.sleb128 0
 4321 0e92 09       		.uleb128 0x9
 4322 0e93 02       		.uleb128 0x2
 4323 0e94 7D       		.byte	0x7d
 4324 0e95 04       		.sleb128 4
 4325 0e96 02       		.uleb128 0x2
 4326 0e97 74       		.byte	0x74
 4327 0e98 00       		.sleb128 0
 4328 0e99 00       		.byte	0
 4329 0e9a 08       		.uleb128 0x8
 4330 0e9b B8040000 		.4byte	.LVL132
 4331 0e9f AB1C0000 		.4byte	0x1cab
 4332 0ea3 B40E0000 		.4byte	0xeb4
 4333 0ea7 09       		.uleb128 0x9
 4334 0ea8 01       		.uleb128 0x1
 4335 0ea9 50       		.byte	0x50
 4336 0eaa 02       		.uleb128 0x2
 4337 0eab 74       		.byte	0x74
 4338 0eac 00       		.sleb128 0
 4339 0ead 09       		.uleb128 0x9
 4340 0eae 01       		.uleb128 0x1
 4341 0eaf 51       		.byte	0x51
 4342 0eb0 02       		.uleb128 0x2
 4343 0eb1 75       		.byte	0x75
 4344 0eb2 00       		.sleb128 0
 4345 0eb3 00       		.byte	0
 4346 0eb4 08       		.uleb128 0x8
 4347 0eb5 D8040000 		.4byte	.LVL133
 4348 0eb9 A01C0000 		.4byte	0x1ca0
 4349 0ebd C70E0000 		.4byte	0xec7
 4350 0ec1 09       		.uleb128 0x9
 4351 0ec2 01       		.uleb128 0x1
 4352 0ec3 50       		.byte	0x50
 4353 0ec4 01       		.uleb128 0x1
 4354 0ec5 32       		.byte	0x32
 4355 0ec6 00       		.byte	0
 4356 0ec7 08       		.uleb128 0x8
 4357 0ec8 DE040000 		.4byte	.LVL134
 4358 0ecc DA1B0000 		.4byte	0x1bda
 4359 0ed0 DB0E0000 		.4byte	0xedb
 4360 0ed4 09       		.uleb128 0x9
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cckoGjaV.s 			page 99


 4361 0ed5 01       		.uleb128 0x1
 4362 0ed6 50       		.byte	0x50
 4363 0ed7 02       		.uleb128 0x2
 4364 0ed8 08       		.byte	0x8
 4365 0ed9 32       		.byte	0x32
 4366 0eda 00       		.byte	0
 4367 0edb 08       		.uleb128 0x8
 4368 0edc EC040000 		.4byte	.LVL135
 4369 0ee0 691C0000 		.4byte	0x1c69
 4370 0ee4 EE0E0000 		.4byte	0xeee
 4371 0ee8 09       		.uleb128 0x9
 4372 0ee9 01       		.uleb128 0x1
 4373 0eea 50       		.byte	0x50
 4374 0eeb 01       		.uleb128 0x1
 4375 0eec 37       		.byte	0x37
 4376 0eed 00       		.byte	0
 4377 0eee 08       		.uleb128 0x8
 4378 0eef F4040000 		.4byte	.LVL136
 4379 0ef3 AB1C0000 		.4byte	0x1cab
 4380 0ef7 070F0000 		.4byte	0xf07
 4381 0efb 09       		.uleb128 0x9
 4382 0efc 01       		.uleb128 0x1
 4383 0efd 50       		.byte	0x50
 4384 0efe 01       		.uleb128 0x1
 4385 0eff 33       		.byte	0x33
 4386 0f00 09       		.uleb128 0x9
 4387 0f01 01       		.uleb128 0x1
 4388 0f02 51       		.byte	0x51
 4389 0f03 02       		.uleb128 0x2
 4390 0f04 08       		.byte	0x8
 4391 0f05 C8       		.byte	0xc8
 4392 0f06 00       		.byte	0
 4393 0f07 08       		.uleb128 0x8
 4394 0f08 FA040000 		.4byte	.LVL137
 4395 0f0c 691C0000 		.4byte	0x1c69
 4396 0f10 1A0F0000 		.4byte	0xf1a
 4397 0f14 09       		.uleb128 0x9
 4398 0f15 01       		.uleb128 0x1
 4399 0f16 50       		.byte	0x50
 4400 0f17 01       		.uleb128 0x1
 4401 0f18 38       		.byte	0x38
 4402 0f19 00       		.byte	0
 4403 0f1a 08       		.uleb128 0x8
 4404 0f1b 0C050000 		.4byte	.LVL138
 4405 0f1f 741C0000 		.4byte	0x1c74
 4406 0f23 4D0F0000 		.4byte	0xf4d
 4407 0f27 09       		.uleb128 0x9
 4408 0f28 01       		.uleb128 0x1
 4409 0f29 50       		.byte	0x50
 4410 0f2a 02       		.uleb128 0x2
 4411 0f2b 08       		.byte	0x8
 4412 0f2c C8       		.byte	0xc8
 4413 0f2d 09       		.uleb128 0x9
 4414 0f2e 01       		.uleb128 0x1
 4415 0f2f 51       		.byte	0x51
 4416 0f30 02       		.uleb128 0x2
 4417 0f31 74       		.byte	0x74
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cckoGjaV.s 			page 100


 4418 0f32 00       		.sleb128 0
 4419 0f33 09       		.uleb128 0x9
 4420 0f34 01       		.uleb128 0x1
 4421 0f35 52       		.byte	0x52
 4422 0f36 02       		.uleb128 0x2
 4423 0f37 74       		.byte	0x74
 4424 0f38 00       		.sleb128 0
 4425 0f39 09       		.uleb128 0x9
 4426 0f3a 01       		.uleb128 0x1
 4427 0f3b 53       		.byte	0x53
 4428 0f3c 01       		.uleb128 0x1
 4429 0f3d 35       		.byte	0x35
 4430 0f3e 09       		.uleb128 0x9
 4431 0f3f 02       		.uleb128 0x2
 4432 0f40 7D       		.byte	0x7d
 4433 0f41 00       		.sleb128 0
 4434 0f42 02       		.uleb128 0x2
 4435 0f43 08       		.byte	0x8
 4436 0f44 C8       		.byte	0xc8
 4437 0f45 09       		.uleb128 0x9
 4438 0f46 02       		.uleb128 0x2
 4439 0f47 7D       		.byte	0x7d
 4440 0f48 04       		.sleb128 4
 4441 0f49 02       		.uleb128 0x2
 4442 0f4a 74       		.byte	0x74
 4443 0f4b 00       		.sleb128 0
 4444 0f4c 00       		.byte	0
 4445 0f4d 08       		.uleb128 0x8
 4446 0f4e 14050000 		.4byte	.LVL139
 4447 0f52 AB1C0000 		.4byte	0x1cab
 4448 0f56 660F0000 		.4byte	0xf66
 4449 0f5a 09       		.uleb128 0x9
 4450 0f5b 01       		.uleb128 0x1
 4451 0f5c 50       		.byte	0x50
 4452 0f5d 01       		.uleb128 0x1
 4453 0f5e 30       		.byte	0x30
 4454 0f5f 09       		.uleb128 0x9
 4455 0f60 01       		.uleb128 0x1
 4456 0f61 51       		.byte	0x51
 4457 0f62 02       		.uleb128 0x2
 4458 0f63 08       		.byte	0x8
 4459 0f64 46       		.byte	0x46
 4460 0f65 00       		.byte	0
 4461 0f66 08       		.uleb128 0x8
 4462 0f67 2E050000 		.4byte	.LVL140
 4463 0f6b D71C0000 		.4byte	0x1cd7
 4464 0f6f 8C0F0000 		.4byte	0xf8c
 4465 0f73 09       		.uleb128 0x9
 4466 0f74 01       		.uleb128 0x1
 4467 0f75 51       		.byte	0x51
 4468 0f76 02       		.uleb128 0x2
 4469 0f77 74       		.byte	0x74
 4470 0f78 00       		.sleb128 0
 4471 0f79 09       		.uleb128 0x9
 4472 0f7a 01       		.uleb128 0x1
 4473 0f7b 52       		.byte	0x52
 4474 0f7c 01       		.uleb128 0x1
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cckoGjaV.s 			page 101


 4475 0f7d 35       		.byte	0x35
 4476 0f7e 09       		.uleb128 0x9
 4477 0f7f 01       		.uleb128 0x1
 4478 0f80 53       		.byte	0x53
 4479 0f81 02       		.uleb128 0x2
 4480 0f82 08       		.byte	0x8
 4481 0f83 46       		.byte	0x46
 4482 0f84 09       		.uleb128 0x9
 4483 0f85 02       		.uleb128 0x2
 4484 0f86 7D       		.byte	0x7d
 4485 0f87 00       		.sleb128 0
 4486 0f88 02       		.uleb128 0x2
 4487 0f89 74       		.byte	0x74
 4488 0f8a 00       		.sleb128 0
 4489 0f8b 00       		.byte	0
 4490 0f8c 08       		.uleb128 0x8
 4491 0f8d 34050000 		.4byte	.LVL141
 4492 0f91 691C0000 		.4byte	0x1c69
 4493 0f95 9F0F0000 		.4byte	0xf9f
 4494 0f99 09       		.uleb128 0x9
 4495 0f9a 01       		.uleb128 0x1
 4496 0f9b 50       		.byte	0x50
 4497 0f9c 01       		.uleb128 0x1
 4498 0f9d 37       		.byte	0x37
 4499 0f9e 00       		.byte	0
 4500 0f9f 08       		.uleb128 0x8
 4501 0fa0 3C050000 		.4byte	.LVL142
 4502 0fa4 AB1C0000 		.4byte	0x1cab
 4503 0fa8 B80F0000 		.4byte	0xfb8
 4504 0fac 09       		.uleb128 0x9
 4505 0fad 01       		.uleb128 0x1
 4506 0fae 50       		.byte	0x50
 4507 0faf 01       		.uleb128 0x1
 4508 0fb0 33       		.byte	0x33
 4509 0fb1 09       		.uleb128 0x9
 4510 0fb2 01       		.uleb128 0x1
 4511 0fb3 51       		.byte	0x51
 4512 0fb4 02       		.uleb128 0x2
 4513 0fb5 08       		.byte	0x8
 4514 0fb6 46       		.byte	0x46
 4515 0fb7 00       		.byte	0
 4516 0fb8 08       		.uleb128 0x8
 4517 0fb9 58050000 		.4byte	.LVL143
 4518 0fbd 741C0000 		.4byte	0x1c74
 4519 0fc1 E40F0000 		.4byte	0xfe4
 4520 0fc5 09       		.uleb128 0x9
 4521 0fc6 01       		.uleb128 0x1
 4522 0fc7 51       		.byte	0x51
 4523 0fc8 01       		.uleb128 0x1
 4524 0fc9 30       		.byte	0x30
 4525 0fca 09       		.uleb128 0x9
 4526 0fcb 01       		.uleb128 0x1
 4527 0fcc 52       		.byte	0x52
 4528 0fcd 02       		.uleb128 0x2
 4529 0fce 74       		.byte	0x74
 4530 0fcf 00       		.sleb128 0
 4531 0fd0 09       		.uleb128 0x9
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cckoGjaV.s 			page 102


 4532 0fd1 01       		.uleb128 0x1
 4533 0fd2 53       		.byte	0x53
 4534 0fd3 01       		.uleb128 0x1
 4535 0fd4 36       		.byte	0x36
 4536 0fd5 09       		.uleb128 0x9
 4537 0fd6 02       		.uleb128 0x2
 4538 0fd7 7D       		.byte	0x7d
 4539 0fd8 00       		.sleb128 0
 4540 0fd9 02       		.uleb128 0x2
 4541 0fda 75       		.byte	0x75
 4542 0fdb 00       		.sleb128 0
 4543 0fdc 09       		.uleb128 0x9
 4544 0fdd 02       		.uleb128 0x2
 4545 0fde 7D       		.byte	0x7d
 4546 0fdf 04       		.sleb128 4
 4547 0fe0 02       		.uleb128 0x2
 4548 0fe1 74       		.byte	0x74
 4549 0fe2 00       		.sleb128 0
 4550 0fe3 00       		.byte	0
 4551 0fe4 08       		.uleb128 0x8
 4552 0fe5 60050000 		.4byte	.LVL144
 4553 0fe9 AB1C0000 		.4byte	0x1cab
 4554 0fed FE0F0000 		.4byte	0xffe
 4555 0ff1 09       		.uleb128 0x9
 4556 0ff2 01       		.uleb128 0x1
 4557 0ff3 50       		.byte	0x50
 4558 0ff4 02       		.uleb128 0x2
 4559 0ff5 74       		.byte	0x74
 4560 0ff6 00       		.sleb128 0
 4561 0ff7 09       		.uleb128 0x9
 4562 0ff8 01       		.uleb128 0x1
 4563 0ff9 51       		.byte	0x51
 4564 0ffa 02       		.uleb128 0x2
 4565 0ffb 75       		.byte	0x75
 4566 0ffc 00       		.sleb128 0
 4567 0ffd 00       		.byte	0
 4568 0ffe 08       		.uleb128 0x8
 4569 0fff C6050000 		.4byte	.LVL145
 4570 1003 E51B0000 		.4byte	0x1be5
 4571 1007 15100000 		.4byte	0x1015
 4572 100b 09       		.uleb128 0x9
 4573 100c 01       		.uleb128 0x1
 4574 100d 50       		.byte	0x50
 4575 100e 05       		.uleb128 0x5
 4576 100f 03       		.byte	0x3
 4577 1010 60010000 		.4byte	.LC14
 4578 1014 00       		.byte	0
 4579 1015 08       		.uleb128 0x8
 4580 1016 DC050000 		.4byte	.LVL146
 4581 101a 741C0000 		.4byte	0x1c74
 4582 101e 48100000 		.4byte	0x1048
 4583 1022 09       		.uleb128 0x9
 4584 1023 01       		.uleb128 0x1
 4585 1024 50       		.byte	0x50
 4586 1025 03       		.uleb128 0x3
 4587 1026 0A       		.byte	0xa
 4588 1027 2201     		.2byte	0x122
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cckoGjaV.s 			page 103


 4589 1029 09       		.uleb128 0x9
 4590 102a 01       		.uleb128 0x1
 4591 102b 51       		.byte	0x51
 4592 102c 01       		.uleb128 0x1
 4593 102d 30       		.byte	0x30
 4594 102e 09       		.uleb128 0x9
 4595 102f 01       		.uleb128 0x1
 4596 1030 52       		.byte	0x52
 4597 1031 02       		.uleb128 0x2
 4598 1032 74       		.byte	0x74
 4599 1033 00       		.sleb128 0
 4600 1034 09       		.uleb128 0x9
 4601 1035 01       		.uleb128 0x1
 4602 1036 53       		.byte	0x53
 4603 1037 01       		.uleb128 0x1
 4604 1038 34       		.byte	0x34
 4605 1039 09       		.uleb128 0x9
 4606 103a 02       		.uleb128 0x2
 4607 103b 7D       		.byte	0x7d
 4608 103c 00       		.sleb128 0
 4609 103d 02       		.uleb128 0x2
 4610 103e 76       		.byte	0x76
 4611 103f 00       		.sleb128 0
 4612 1040 09       		.uleb128 0x9
 4613 1041 02       		.uleb128 0x2
 4614 1042 7D       		.byte	0x7d
 4615 1043 04       		.sleb128 4
 4616 1044 02       		.uleb128 0x2
 4617 1045 74       		.byte	0x74
 4618 1046 00       		.sleb128 0
 4619 1047 00       		.byte	0
 4620 1048 08       		.uleb128 0x8
 4621 1049 E2050000 		.4byte	.LVL147
 4622 104d 691C0000 		.4byte	0x1c69
 4623 1051 5B100000 		.4byte	0x105b
 4624 1055 09       		.uleb128 0x9
 4625 1056 01       		.uleb128 0x1
 4626 1057 50       		.byte	0x50
 4627 1058 01       		.uleb128 0x1
 4628 1059 38       		.byte	0x38
 4629 105a 00       		.byte	0
 4630 105b 08       		.uleb128 0x8
 4631 105c EA050000 		.4byte	.LVL148
 4632 1060 AB1C0000 		.4byte	0x1cab
 4633 1064 74100000 		.4byte	0x1074
 4634 1068 09       		.uleb128 0x9
 4635 1069 01       		.uleb128 0x1
 4636 106a 50       		.byte	0x50
 4637 106b 01       		.uleb128 0x1
 4638 106c 30       		.byte	0x30
 4639 106d 09       		.uleb128 0x9
 4640 106e 01       		.uleb128 0x1
 4641 106f 51       		.byte	0x51
 4642 1070 02       		.uleb128 0x2
 4643 1071 76       		.byte	0x76
 4644 1072 00       		.sleb128 0
 4645 1073 00       		.byte	0
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cckoGjaV.s 			page 104


 4646 1074 08       		.uleb128 0x8
 4647 1075 F0050000 		.4byte	.LVL149
 4648 1079 A01C0000 		.4byte	0x1ca0
 4649 107d 87100000 		.4byte	0x1087
 4650 1081 09       		.uleb128 0x9
 4651 1082 01       		.uleb128 0x1
 4652 1083 50       		.byte	0x50
 4653 1084 01       		.uleb128 0x1
 4654 1085 36       		.byte	0x36
 4655 1086 00       		.byte	0
 4656 1087 08       		.uleb128 0x8
 4657 1088 F6050000 		.4byte	.LVL150
 4658 108c DA1B0000 		.4byte	0x1bda
 4659 1090 9B100000 		.4byte	0x109b
 4660 1094 09       		.uleb128 0x9
 4661 1095 01       		.uleb128 0x1
 4662 1096 50       		.byte	0x50
 4663 1097 02       		.uleb128 0x2
 4664 1098 08       		.byte	0x8
 4665 1099 32       		.byte	0x32
 4666 109a 00       		.byte	0
 4667 109b 08       		.uleb128 0x8
 4668 109c 04060000 		.4byte	.LVL151
 4669 10a0 691C0000 		.4byte	0x1c69
 4670 10a4 AE100000 		.4byte	0x10ae
 4671 10a8 09       		.uleb128 0x9
 4672 10a9 01       		.uleb128 0x1
 4673 10aa 50       		.byte	0x50
 4674 10ab 01       		.uleb128 0x1
 4675 10ac 38       		.byte	0x38
 4676 10ad 00       		.byte	0
 4677 10ae 08       		.uleb128 0x8
 4678 10af 22060000 		.4byte	.LVL152
 4679 10b3 741C0000 		.4byte	0x1c74
 4680 10b7 DC100000 		.4byte	0x10dc
 4681 10bb 09       		.uleb128 0x9
 4682 10bc 01       		.uleb128 0x1
 4683 10bd 51       		.byte	0x51
 4684 10be 02       		.uleb128 0x2
 4685 10bf 74       		.byte	0x74
 4686 10c0 00       		.sleb128 0
 4687 10c1 09       		.uleb128 0x9
 4688 10c2 01       		.uleb128 0x1
 4689 10c3 52       		.byte	0x52
 4690 10c4 02       		.uleb128 0x2
 4691 10c5 74       		.byte	0x74
 4692 10c6 00       		.sleb128 0
 4693 10c7 09       		.uleb128 0x9
 4694 10c8 01       		.uleb128 0x1
 4695 10c9 53       		.byte	0x53
 4696 10ca 02       		.uleb128 0x2
 4697 10cb 74       		.byte	0x74
 4698 10cc 00       		.sleb128 0
 4699 10cd 09       		.uleb128 0x9
 4700 10ce 02       		.uleb128 0x2
 4701 10cf 7D       		.byte	0x7d
 4702 10d0 00       		.sleb128 0
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cckoGjaV.s 			page 105


 4703 10d1 02       		.uleb128 0x2
 4704 10d2 76       		.byte	0x76
 4705 10d3 00       		.sleb128 0
 4706 10d4 09       		.uleb128 0x9
 4707 10d5 02       		.uleb128 0x2
 4708 10d6 7D       		.byte	0x7d
 4709 10d7 04       		.sleb128 4
 4710 10d8 02       		.uleb128 0x2
 4711 10d9 74       		.byte	0x74
 4712 10da 00       		.sleb128 0
 4713 10db 00       		.byte	0
 4714 10dc 08       		.uleb128 0x8
 4715 10dd 2E060000 		.4byte	.LVL153
 4716 10e1 531C0000 		.4byte	0x1c53
 4717 10e5 F9100000 		.4byte	0x10f9
 4718 10e9 09       		.uleb128 0x9
 4719 10ea 01       		.uleb128 0x1
 4720 10eb 50       		.byte	0x50
 4721 10ec 02       		.uleb128 0x2
 4722 10ed 74       		.byte	0x74
 4723 10ee 00       		.sleb128 0
 4724 10ef 09       		.uleb128 0x9
 4725 10f0 01       		.uleb128 0x1
 4726 10f1 51       		.byte	0x51
 4727 10f2 05       		.uleb128 0x5
 4728 10f3 03       		.byte	0x3
 4729 10f4 30010000 		.4byte	.LC12
 4730 10f8 00       		.byte	0
 4731 10f9 08       		.uleb128 0x8
 4732 10fa 34060000 		.4byte	.LVL154
 4733 10fe E51B0000 		.4byte	0x1be5
 4734 1102 0D110000 		.4byte	0x110d
 4735 1106 09       		.uleb128 0x9
 4736 1107 01       		.uleb128 0x1
 4737 1108 50       		.byte	0x50
 4738 1109 02       		.uleb128 0x2
 4739 110a 74       		.byte	0x74
 4740 110b 00       		.sleb128 0
 4741 110c 00       		.byte	0
 4742 110d 08       		.uleb128 0x8
 4743 110e 40060000 		.4byte	.LVL155
 4744 1112 531C0000 		.4byte	0x1c53
 4745 1116 2A110000 		.4byte	0x112a
 4746 111a 09       		.uleb128 0x9
 4747 111b 01       		.uleb128 0x1
 4748 111c 50       		.byte	0x50
 4749 111d 02       		.uleb128 0x2
 4750 111e 74       		.byte	0x74
 4751 111f 00       		.sleb128 0
 4752 1120 09       		.uleb128 0x9
 4753 1121 01       		.uleb128 0x1
 4754 1122 51       		.byte	0x51
 4755 1123 05       		.uleb128 0x5
 4756 1124 03       		.byte	0x3
 4757 1125 48010000 		.4byte	.LC13
 4758 1129 00       		.byte	0
 4759 112a 08       		.uleb128 0x8
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cckoGjaV.s 			page 106


 4760 112b 46060000 		.4byte	.LVL156
 4761 112f E51B0000 		.4byte	0x1be5
 4762 1133 3E110000 		.4byte	0x113e
 4763 1137 09       		.uleb128 0x9
 4764 1138 01       		.uleb128 0x1
 4765 1139 50       		.byte	0x50
 4766 113a 02       		.uleb128 0x2
 4767 113b 74       		.byte	0x74
 4768 113c 00       		.sleb128 0
 4769 113d 00       		.byte	0
 4770 113e 08       		.uleb128 0x8
 4771 113f 66060000 		.4byte	.LVL157
 4772 1143 741C0000 		.4byte	0x1c74
 4773 1147 6A110000 		.4byte	0x116a
 4774 114b 09       		.uleb128 0x9
 4775 114c 01       		.uleb128 0x1
 4776 114d 51       		.byte	0x51
 4777 114e 01       		.uleb128 0x1
 4778 114f 30       		.byte	0x30
 4779 1150 09       		.uleb128 0x9
 4780 1151 01       		.uleb128 0x1
 4781 1152 52       		.byte	0x52
 4782 1153 02       		.uleb128 0x2
 4783 1154 74       		.byte	0x74
 4784 1155 00       		.sleb128 0
 4785 1156 09       		.uleb128 0x9
 4786 1157 01       		.uleb128 0x1
 4787 1158 53       		.byte	0x53
 4788 1159 01       		.uleb128 0x1
 4789 115a 36       		.byte	0x36
 4790 115b 09       		.uleb128 0x9
 4791 115c 02       		.uleb128 0x2
 4792 115d 7D       		.byte	0x7d
 4793 115e 00       		.sleb128 0
 4794 115f 02       		.uleb128 0x2
 4795 1160 75       		.byte	0x75
 4796 1161 00       		.sleb128 0
 4797 1162 09       		.uleb128 0x9
 4798 1163 02       		.uleb128 0x2
 4799 1164 7D       		.byte	0x7d
 4800 1165 04       		.sleb128 4
 4801 1166 02       		.uleb128 0x2
 4802 1167 74       		.byte	0x74
 4803 1168 00       		.sleb128 0
 4804 1169 00       		.byte	0
 4805 116a 08       		.uleb128 0x8
 4806 116b 6E060000 		.4byte	.LVL158
 4807 116f AB1C0000 		.4byte	0x1cab
 4808 1173 84110000 		.4byte	0x1184
 4809 1177 09       		.uleb128 0x9
 4810 1178 01       		.uleb128 0x1
 4811 1179 50       		.byte	0x50
 4812 117a 02       		.uleb128 0x2
 4813 117b 74       		.byte	0x74
 4814 117c 00       		.sleb128 0
 4815 117d 09       		.uleb128 0x9
 4816 117e 01       		.uleb128 0x1
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cckoGjaV.s 			page 107


 4817 117f 51       		.byte	0x51
 4818 1180 02       		.uleb128 0x2
 4819 1181 75       		.byte	0x75
 4820 1182 00       		.sleb128 0
 4821 1183 00       		.byte	0
 4822 1184 08       		.uleb128 0x8
 4823 1185 7E060000 		.4byte	.LVL159
 4824 1189 741C0000 		.4byte	0x1c74
 4825 118d B7110000 		.4byte	0x11b7
 4826 1191 09       		.uleb128 0x9
 4827 1192 01       		.uleb128 0x1
 4828 1193 50       		.byte	0x50
 4829 1194 02       		.uleb128 0x2
 4830 1195 08       		.byte	0x8
 4831 1196 96       		.byte	0x96
 4832 1197 09       		.uleb128 0x9
 4833 1198 01       		.uleb128 0x1
 4834 1199 51       		.byte	0x51
 4835 119a 02       		.uleb128 0x2
 4836 119b 74       		.byte	0x74
 4837 119c 00       		.sleb128 0
 4838 119d 09       		.uleb128 0x9
 4839 119e 01       		.uleb128 0x1
 4840 119f 52       		.byte	0x52
 4841 11a0 02       		.uleb128 0x2
 4842 11a1 74       		.byte	0x74
 4843 11a2 00       		.sleb128 0
 4844 11a3 09       		.uleb128 0x9
 4845 11a4 01       		.uleb128 0x1
 4846 11a5 53       		.byte	0x53
 4847 11a6 01       		.uleb128 0x1
 4848 11a7 35       		.byte	0x35
 4849 11a8 09       		.uleb128 0x9
 4850 11a9 02       		.uleb128 0x2
 4851 11aa 7D       		.byte	0x7d
 4852 11ab 00       		.sleb128 0
 4853 11ac 02       		.uleb128 0x2
 4854 11ad 75       		.byte	0x75
 4855 11ae 00       		.sleb128 0
 4856 11af 09       		.uleb128 0x9
 4857 11b0 02       		.uleb128 0x2
 4858 11b1 7D       		.byte	0x7d
 4859 11b2 04       		.sleb128 4
 4860 11b3 02       		.uleb128 0x2
 4861 11b4 74       		.byte	0x74
 4862 11b5 00       		.sleb128 0
 4863 11b6 00       		.byte	0
 4864 11b7 08       		.uleb128 0x8
 4865 11b8 9C060000 		.4byte	.LVL160
 4866 11bc A01C0000 		.4byte	0x1ca0
 4867 11c0 CA110000 		.4byte	0x11ca
 4868 11c4 09       		.uleb128 0x9
 4869 11c5 01       		.uleb128 0x1
 4870 11c6 50       		.byte	0x50
 4871 11c7 01       		.uleb128 0x1
 4872 11c8 33       		.byte	0x33
 4873 11c9 00       		.byte	0
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cckoGjaV.s 			page 108


 4874 11ca 08       		.uleb128 0x8
 4875 11cb A2060000 		.4byte	.LVL161
 4876 11cf DA1B0000 		.4byte	0x1bda
 4877 11d3 DE110000 		.4byte	0x11de
 4878 11d7 09       		.uleb128 0x9
 4879 11d8 01       		.uleb128 0x1
 4880 11d9 50       		.byte	0x50
 4881 11da 02       		.uleb128 0x2
 4882 11db 08       		.byte	0x8
 4883 11dc 32       		.byte	0x32
 4884 11dd 00       		.byte	0
 4885 11de 08       		.uleb128 0x8
 4886 11df B0060000 		.4byte	.LVL162
 4887 11e3 691C0000 		.4byte	0x1c69
 4888 11e7 F1110000 		.4byte	0x11f1
 4889 11eb 09       		.uleb128 0x9
 4890 11ec 01       		.uleb128 0x1
 4891 11ed 50       		.byte	0x50
 4892 11ee 01       		.uleb128 0x1
 4893 11ef 37       		.byte	0x37
 4894 11f0 00       		.byte	0
 4895 11f1 08       		.uleb128 0x8
 4896 11f2 B8060000 		.4byte	.LVL163
 4897 11f6 AB1C0000 		.4byte	0x1cab
 4898 11fa 0A120000 		.4byte	0x120a
 4899 11fe 09       		.uleb128 0x9
 4900 11ff 01       		.uleb128 0x1
 4901 1200 50       		.byte	0x50
 4902 1201 01       		.uleb128 0x1
 4903 1202 31       		.byte	0x31
 4904 1203 09       		.uleb128 0x9
 4905 1204 01       		.uleb128 0x1
 4906 1205 51       		.byte	0x51
 4907 1206 02       		.uleb128 0x2
 4908 1207 08       		.byte	0x8
 4909 1208 C8       		.byte	0xc8
 4910 1209 00       		.byte	0
 4911 120a 08       		.uleb128 0x8
 4912 120b BE060000 		.4byte	.LVL164
 4913 120f 691C0000 		.4byte	0x1c69
 4914 1213 1D120000 		.4byte	0x121d
 4915 1217 09       		.uleb128 0x9
 4916 1218 01       		.uleb128 0x1
 4917 1219 50       		.byte	0x50
 4918 121a 01       		.uleb128 0x1
 4919 121b 38       		.byte	0x38
 4920 121c 00       		.byte	0
 4921 121d 08       		.uleb128 0x8
 4922 121e D0060000 		.4byte	.LVL165
 4923 1222 741C0000 		.4byte	0x1c74
 4924 1226 50120000 		.4byte	0x1250
 4925 122a 09       		.uleb128 0x9
 4926 122b 01       		.uleb128 0x1
 4927 122c 50       		.byte	0x50
 4928 122d 02       		.uleb128 0x2
 4929 122e 08       		.byte	0x8
 4930 122f C8       		.byte	0xc8
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cckoGjaV.s 			page 109


 4931 1230 09       		.uleb128 0x9
 4932 1231 01       		.uleb128 0x1
 4933 1232 51       		.byte	0x51
 4934 1233 02       		.uleb128 0x2
 4935 1234 74       		.byte	0x74
 4936 1235 00       		.sleb128 0
 4937 1236 09       		.uleb128 0x9
 4938 1237 01       		.uleb128 0x1
 4939 1238 52       		.byte	0x52
 4940 1239 02       		.uleb128 0x2
 4941 123a 74       		.byte	0x74
 4942 123b 00       		.sleb128 0
 4943 123c 09       		.uleb128 0x9
 4944 123d 01       		.uleb128 0x1
 4945 123e 53       		.byte	0x53
 4946 123f 01       		.uleb128 0x1
 4947 1240 35       		.byte	0x35
 4948 1241 09       		.uleb128 0x9
 4949 1242 02       		.uleb128 0x2
 4950 1243 7D       		.byte	0x7d
 4951 1244 00       		.sleb128 0
 4952 1245 02       		.uleb128 0x2
 4953 1246 08       		.byte	0x8
 4954 1247 C8       		.byte	0xc8
 4955 1248 09       		.uleb128 0x9
 4956 1249 02       		.uleb128 0x2
 4957 124a 7D       		.byte	0x7d
 4958 124b 04       		.sleb128 4
 4959 124c 02       		.uleb128 0x2
 4960 124d 74       		.byte	0x74
 4961 124e 00       		.sleb128 0
 4962 124f 00       		.byte	0
 4963 1250 08       		.uleb128 0x8
 4964 1251 D8060000 		.4byte	.LVL166
 4965 1255 AB1C0000 		.4byte	0x1cab
 4966 1259 69120000 		.4byte	0x1269
 4967 125d 09       		.uleb128 0x9
 4968 125e 01       		.uleb128 0x1
 4969 125f 50       		.byte	0x50
 4970 1260 01       		.uleb128 0x1
 4971 1261 30       		.byte	0x30
 4972 1262 09       		.uleb128 0x9
 4973 1263 01       		.uleb128 0x1
 4974 1264 51       		.byte	0x51
 4975 1265 02       		.uleb128 0x2
 4976 1266 08       		.byte	0x8
 4977 1267 46       		.byte	0x46
 4978 1268 00       		.byte	0
 4979 1269 08       		.uleb128 0x8
 4980 126a F2060000 		.4byte	.LVL167
 4981 126e D71C0000 		.4byte	0x1cd7
 4982 1272 8F120000 		.4byte	0x128f
 4983 1276 09       		.uleb128 0x9
 4984 1277 01       		.uleb128 0x1
 4985 1278 51       		.byte	0x51
 4986 1279 02       		.uleb128 0x2
 4987 127a 74       		.byte	0x74
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cckoGjaV.s 			page 110


 4988 127b 00       		.sleb128 0
 4989 127c 09       		.uleb128 0x9
 4990 127d 01       		.uleb128 0x1
 4991 127e 52       		.byte	0x52
 4992 127f 01       		.uleb128 0x1
 4993 1280 35       		.byte	0x35
 4994 1281 09       		.uleb128 0x9
 4995 1282 01       		.uleb128 0x1
 4996 1283 53       		.byte	0x53
 4997 1284 02       		.uleb128 0x2
 4998 1285 08       		.byte	0x8
 4999 1286 46       		.byte	0x46
 5000 1287 09       		.uleb128 0x9
 5001 1288 02       		.uleb128 0x2
 5002 1289 7D       		.byte	0x7d
 5003 128a 00       		.sleb128 0
 5004 128b 02       		.uleb128 0x2
 5005 128c 74       		.byte	0x74
 5006 128d 00       		.sleb128 0
 5007 128e 00       		.byte	0
 5008 128f 08       		.uleb128 0x8
 5009 1290 F8060000 		.4byte	.LVL168
 5010 1294 691C0000 		.4byte	0x1c69
 5011 1298 A2120000 		.4byte	0x12a2
 5012 129c 09       		.uleb128 0x9
 5013 129d 01       		.uleb128 0x1
 5014 129e 50       		.byte	0x50
 5015 129f 01       		.uleb128 0x1
 5016 12a0 37       		.byte	0x37
 5017 12a1 00       		.byte	0
 5018 12a2 08       		.uleb128 0x8
 5019 12a3 00070000 		.4byte	.LVL169
 5020 12a7 AB1C0000 		.4byte	0x1cab
 5021 12ab BC120000 		.4byte	0x12bc
 5022 12af 09       		.uleb128 0x9
 5023 12b0 01       		.uleb128 0x1
 5024 12b1 50       		.byte	0x50
 5025 12b2 02       		.uleb128 0x2
 5026 12b3 74       		.byte	0x74
 5027 12b4 00       		.sleb128 0
 5028 12b5 09       		.uleb128 0x9
 5029 12b6 01       		.uleb128 0x1
 5030 12b7 51       		.byte	0x51
 5031 12b8 02       		.uleb128 0x2
 5032 12b9 08       		.byte	0x8
 5033 12ba 46       		.byte	0x46
 5034 12bb 00       		.byte	0
 5035 12bc 08       		.uleb128 0x8
 5036 12bd 1C070000 		.4byte	.LVL170
 5037 12c1 741C0000 		.4byte	0x1c74
 5038 12c5 E8120000 		.4byte	0x12e8
 5039 12c9 09       		.uleb128 0x9
 5040 12ca 01       		.uleb128 0x1
 5041 12cb 51       		.byte	0x51
 5042 12cc 01       		.uleb128 0x1
 5043 12cd 30       		.byte	0x30
 5044 12ce 09       		.uleb128 0x9
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cckoGjaV.s 			page 111


 5045 12cf 01       		.uleb128 0x1
 5046 12d0 52       		.byte	0x52
 5047 12d1 02       		.uleb128 0x2
 5048 12d2 74       		.byte	0x74
 5049 12d3 00       		.sleb128 0
 5050 12d4 09       		.uleb128 0x9
 5051 12d5 01       		.uleb128 0x1
 5052 12d6 53       		.byte	0x53
 5053 12d7 01       		.uleb128 0x1
 5054 12d8 36       		.byte	0x36
 5055 12d9 09       		.uleb128 0x9
 5056 12da 02       		.uleb128 0x2
 5057 12db 7D       		.byte	0x7d
 5058 12dc 00       		.sleb128 0
 5059 12dd 02       		.uleb128 0x2
 5060 12de 75       		.byte	0x75
 5061 12df 00       		.sleb128 0
 5062 12e0 09       		.uleb128 0x9
 5063 12e1 02       		.uleb128 0x2
 5064 12e2 7D       		.byte	0x7d
 5065 12e3 04       		.sleb128 4
 5066 12e4 02       		.uleb128 0x2
 5067 12e5 74       		.byte	0x74
 5068 12e6 00       		.sleb128 0
 5069 12e7 00       		.byte	0
 5070 12e8 08       		.uleb128 0x8
 5071 12e9 24070000 		.4byte	.LVL171
 5072 12ed AB1C0000 		.4byte	0x1cab
 5073 12f1 02130000 		.4byte	0x1302
 5074 12f5 09       		.uleb128 0x9
 5075 12f6 01       		.uleb128 0x1
 5076 12f7 50       		.byte	0x50
 5077 12f8 02       		.uleb128 0x2
 5078 12f9 74       		.byte	0x74
 5079 12fa 00       		.sleb128 0
 5080 12fb 09       		.uleb128 0x9
 5081 12fc 01       		.uleb128 0x1
 5082 12fd 51       		.byte	0x51
 5083 12fe 02       		.uleb128 0x2
 5084 12ff 75       		.byte	0x75
 5085 1300 00       		.sleb128 0
 5086 1301 00       		.byte	0
 5087 1302 08       		.uleb128 0x8
 5088 1303 34070000 		.4byte	.LVL172
 5089 1307 741C0000 		.4byte	0x1c74
 5090 130b 35130000 		.4byte	0x1335
 5091 130f 09       		.uleb128 0x9
 5092 1310 01       		.uleb128 0x1
 5093 1311 50       		.byte	0x50
 5094 1312 02       		.uleb128 0x2
 5095 1313 08       		.byte	0x8
 5096 1314 96       		.byte	0x96
 5097 1315 09       		.uleb128 0x9
 5098 1316 01       		.uleb128 0x1
 5099 1317 51       		.byte	0x51
 5100 1318 02       		.uleb128 0x2
 5101 1319 74       		.byte	0x74
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cckoGjaV.s 			page 112


 5102 131a 00       		.sleb128 0
 5103 131b 09       		.uleb128 0x9
 5104 131c 01       		.uleb128 0x1
 5105 131d 52       		.byte	0x52
 5106 131e 02       		.uleb128 0x2
 5107 131f 74       		.byte	0x74
 5108 1320 00       		.sleb128 0
 5109 1321 09       		.uleb128 0x9
 5110 1322 01       		.uleb128 0x1
 5111 1323 53       		.byte	0x53
 5112 1324 01       		.uleb128 0x1
 5113 1325 35       		.byte	0x35
 5114 1326 09       		.uleb128 0x9
 5115 1327 02       		.uleb128 0x2
 5116 1328 7D       		.byte	0x7d
 5117 1329 00       		.sleb128 0
 5118 132a 02       		.uleb128 0x2
 5119 132b 75       		.byte	0x75
 5120 132c 00       		.sleb128 0
 5121 132d 09       		.uleb128 0x9
 5122 132e 02       		.uleb128 0x2
 5123 132f 7D       		.byte	0x7d
 5124 1330 04       		.sleb128 4
 5125 1331 02       		.uleb128 0x2
 5126 1332 74       		.byte	0x74
 5127 1333 00       		.sleb128 0
 5128 1334 00       		.byte	0
 5129 1335 08       		.uleb128 0x8
 5130 1336 86070000 		.4byte	.LVL173
 5131 133a 741C0000 		.4byte	0x1c74
 5132 133e 61130000 		.4byte	0x1361
 5133 1342 09       		.uleb128 0x9
 5134 1343 01       		.uleb128 0x1
 5135 1344 51       		.byte	0x51
 5136 1345 01       		.uleb128 0x1
 5137 1346 30       		.byte	0x30
 5138 1347 09       		.uleb128 0x9
 5139 1348 01       		.uleb128 0x1
 5140 1349 52       		.byte	0x52
 5141 134a 02       		.uleb128 0x2
 5142 134b 74       		.byte	0x74
 5143 134c 00       		.sleb128 0
 5144 134d 09       		.uleb128 0x9
 5145 134e 01       		.uleb128 0x1
 5146 134f 53       		.byte	0x53
 5147 1350 01       		.uleb128 0x1
 5148 1351 34       		.byte	0x34
 5149 1352 09       		.uleb128 0x9
 5150 1353 02       		.uleb128 0x2
 5151 1354 7D       		.byte	0x7d
 5152 1355 00       		.sleb128 0
 5153 1356 02       		.uleb128 0x2
 5154 1357 75       		.byte	0x75
 5155 1358 00       		.sleb128 0
 5156 1359 09       		.uleb128 0x9
 5157 135a 02       		.uleb128 0x2
 5158 135b 7D       		.byte	0x7d
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cckoGjaV.s 			page 113


 5159 135c 04       		.sleb128 4
 5160 135d 02       		.uleb128 0x2
 5161 135e 74       		.byte	0x74
 5162 135f 00       		.sleb128 0
 5163 1360 00       		.byte	0
 5164 1361 08       		.uleb128 0x8
 5165 1362 8C070000 		.4byte	.LVL174
 5166 1366 691C0000 		.4byte	0x1c69
 5167 136a 74130000 		.4byte	0x1374
 5168 136e 09       		.uleb128 0x9
 5169 136f 01       		.uleb128 0x1
 5170 1370 50       		.byte	0x50
 5171 1371 01       		.uleb128 0x1
 5172 1372 38       		.byte	0x38
 5173 1373 00       		.byte	0
 5174 1374 08       		.uleb128 0x8
 5175 1375 94070000 		.4byte	.LVL175
 5176 1379 AB1C0000 		.4byte	0x1cab
 5177 137d 8D130000 		.4byte	0x138d
 5178 1381 09       		.uleb128 0x9
 5179 1382 01       		.uleb128 0x1
 5180 1383 50       		.byte	0x50
 5181 1384 01       		.uleb128 0x1
 5182 1385 30       		.byte	0x30
 5183 1386 09       		.uleb128 0x9
 5184 1387 01       		.uleb128 0x1
 5185 1388 51       		.byte	0x51
 5186 1389 02       		.uleb128 0x2
 5187 138a 75       		.byte	0x75
 5188 138b 00       		.sleb128 0
 5189 138c 00       		.byte	0
 5190 138d 08       		.uleb128 0x8
 5191 138e 9A070000 		.4byte	.LVL176
 5192 1392 691C0000 		.4byte	0x1c69
 5193 1396 A0130000 		.4byte	0x13a0
 5194 139a 09       		.uleb128 0x9
 5195 139b 01       		.uleb128 0x1
 5196 139c 50       		.byte	0x50
 5197 139d 01       		.uleb128 0x1
 5198 139e 38       		.byte	0x38
 5199 139f 00       		.byte	0
 5200 13a0 08       		.uleb128 0x8
 5201 13a1 B6070000 		.4byte	.LVL177
 5202 13a5 741C0000 		.4byte	0x1c74
 5203 13a9 CD130000 		.4byte	0x13cd
 5204 13ad 09       		.uleb128 0x9
 5205 13ae 01       		.uleb128 0x1
 5206 13af 51       		.byte	0x51
 5207 13b0 02       		.uleb128 0x2
 5208 13b1 74       		.byte	0x74
 5209 13b2 00       		.sleb128 0
 5210 13b3 09       		.uleb128 0x9
 5211 13b4 01       		.uleb128 0x1
 5212 13b5 52       		.byte	0x52
 5213 13b6 02       		.uleb128 0x2
 5214 13b7 74       		.byte	0x74
 5215 13b8 00       		.sleb128 0
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cckoGjaV.s 			page 114


 5216 13b9 09       		.uleb128 0x9
 5217 13ba 01       		.uleb128 0x1
 5218 13bb 53       		.byte	0x53
 5219 13bc 01       		.uleb128 0x1
 5220 13bd 35       		.byte	0x35
 5221 13be 09       		.uleb128 0x9
 5222 13bf 02       		.uleb128 0x2
 5223 13c0 7D       		.byte	0x7d
 5224 13c1 00       		.sleb128 0
 5225 13c2 02       		.uleb128 0x2
 5226 13c3 75       		.byte	0x75
 5227 13c4 00       		.sleb128 0
 5228 13c5 09       		.uleb128 0x9
 5229 13c6 02       		.uleb128 0x2
 5230 13c7 7D       		.byte	0x7d
 5231 13c8 04       		.sleb128 4
 5232 13c9 02       		.uleb128 0x2
 5233 13ca 74       		.byte	0x74
 5234 13cb 00       		.sleb128 0
 5235 13cc 00       		.byte	0
 5236 13cd 08       		.uleb128 0x8
 5237 13ce BC070000 		.4byte	.LVL178
 5238 13d2 691C0000 		.4byte	0x1c69
 5239 13d6 E0130000 		.4byte	0x13e0
 5240 13da 09       		.uleb128 0x9
 5241 13db 01       		.uleb128 0x1
 5242 13dc 50       		.byte	0x50
 5243 13dd 01       		.uleb128 0x1
 5244 13de 37       		.byte	0x37
 5245 13df 00       		.byte	0
 5246 13e0 08       		.uleb128 0x8
 5247 13e1 C4070000 		.4byte	.LVL179
 5248 13e5 AB1C0000 		.4byte	0x1cab
 5249 13e9 FA130000 		.4byte	0x13fa
 5250 13ed 09       		.uleb128 0x9
 5251 13ee 01       		.uleb128 0x1
 5252 13ef 50       		.byte	0x50
 5253 13f0 02       		.uleb128 0x2
 5254 13f1 74       		.byte	0x74
 5255 13f2 00       		.sleb128 0
 5256 13f3 09       		.uleb128 0x9
 5257 13f4 01       		.uleb128 0x1
 5258 13f5 51       		.byte	0x51
 5259 13f6 02       		.uleb128 0x2
 5260 13f7 75       		.byte	0x75
 5261 13f8 00       		.sleb128 0
 5262 13f9 00       		.byte	0
 5263 13fa 08       		.uleb128 0x8
 5264 13fb CA070000 		.4byte	.LVL180
 5265 13ff 691C0000 		.4byte	0x1c69
 5266 1403 0D140000 		.4byte	0x140d
 5267 1407 09       		.uleb128 0x9
 5268 1408 01       		.uleb128 0x1
 5269 1409 50       		.byte	0x50
 5270 140a 01       		.uleb128 0x1
 5271 140b 38       		.byte	0x38
 5272 140c 00       		.byte	0
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cckoGjaV.s 			page 115


 5273 140d 08       		.uleb128 0x8
 5274 140e DA070000 		.4byte	.LVL181
 5275 1412 741C0000 		.4byte	0x1c74
 5276 1416 40140000 		.4byte	0x1440
 5277 141a 09       		.uleb128 0x9
 5278 141b 01       		.uleb128 0x1
 5279 141c 50       		.byte	0x50
 5280 141d 02       		.uleb128 0x2
 5281 141e 75       		.byte	0x75
 5282 141f 00       		.sleb128 0
 5283 1420 09       		.uleb128 0x9
 5284 1421 01       		.uleb128 0x1
 5285 1422 51       		.byte	0x51
 5286 1423 02       		.uleb128 0x2
 5287 1424 74       		.byte	0x74
 5288 1425 00       		.sleb128 0
 5289 1426 09       		.uleb128 0x9
 5290 1427 01       		.uleb128 0x1
 5291 1428 52       		.byte	0x52
 5292 1429 02       		.uleb128 0x2
 5293 142a 74       		.byte	0x74
 5294 142b 00       		.sleb128 0
 5295 142c 09       		.uleb128 0x9
 5296 142d 01       		.uleb128 0x1
 5297 142e 53       		.byte	0x53
 5298 142f 01       		.uleb128 0x1
 5299 1430 35       		.byte	0x35
 5300 1431 09       		.uleb128 0x9
 5301 1432 02       		.uleb128 0x2
 5302 1433 7D       		.byte	0x7d
 5303 1434 00       		.sleb128 0
 5304 1435 02       		.uleb128 0x2
 5305 1436 75       		.byte	0x75
 5306 1437 00       		.sleb128 0
 5307 1438 09       		.uleb128 0x9
 5308 1439 02       		.uleb128 0x2
 5309 143a 7D       		.byte	0x7d
 5310 143b 04       		.sleb128 4
 5311 143c 02       		.uleb128 0x2
 5312 143d 74       		.byte	0x74
 5313 143e 00       		.sleb128 0
 5314 143f 00       		.byte	0
 5315 1440 08       		.uleb128 0x8
 5316 1441 E2070000 		.4byte	.LVL182
 5317 1445 AB1C0000 		.4byte	0x1cab
 5318 1449 59140000 		.4byte	0x1459
 5319 144d 09       		.uleb128 0x9
 5320 144e 01       		.uleb128 0x1
 5321 144f 50       		.byte	0x50
 5322 1450 01       		.uleb128 0x1
 5323 1451 30       		.byte	0x30
 5324 1452 09       		.uleb128 0x9
 5325 1453 01       		.uleb128 0x1
 5326 1454 51       		.byte	0x51
 5327 1455 02       		.uleb128 0x2
 5328 1456 08       		.byte	0x8
 5329 1457 46       		.byte	0x46
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cckoGjaV.s 			page 116


 5330 1458 00       		.byte	0
 5331 1459 08       		.uleb128 0x8
 5332 145a F6070000 		.4byte	.LVL183
 5333 145e D71C0000 		.4byte	0x1cd7
 5334 1462 7F140000 		.4byte	0x147f
 5335 1466 09       		.uleb128 0x9
 5336 1467 01       		.uleb128 0x1
 5337 1468 51       		.byte	0x51
 5338 1469 02       		.uleb128 0x2
 5339 146a 74       		.byte	0x74
 5340 146b 00       		.sleb128 0
 5341 146c 09       		.uleb128 0x9
 5342 146d 01       		.uleb128 0x1
 5343 146e 52       		.byte	0x52
 5344 146f 01       		.uleb128 0x1
 5345 1470 35       		.byte	0x35
 5346 1471 09       		.uleb128 0x9
 5347 1472 01       		.uleb128 0x1
 5348 1473 53       		.byte	0x53
 5349 1474 02       		.uleb128 0x2
 5350 1475 08       		.byte	0x8
 5351 1476 46       		.byte	0x46
 5352 1477 09       		.uleb128 0x9
 5353 1478 02       		.uleb128 0x2
 5354 1479 7D       		.byte	0x7d
 5355 147a 00       		.sleb128 0
 5356 147b 02       		.uleb128 0x2
 5357 147c 74       		.byte	0x74
 5358 147d 00       		.sleb128 0
 5359 147e 00       		.byte	0
 5360 147f 08       		.uleb128 0x8
 5361 1480 FC070000 		.4byte	.LVL184
 5362 1484 691C0000 		.4byte	0x1c69
 5363 1488 92140000 		.4byte	0x1492
 5364 148c 09       		.uleb128 0x9
 5365 148d 01       		.uleb128 0x1
 5366 148e 50       		.byte	0x50
 5367 148f 01       		.uleb128 0x1
 5368 1490 37       		.byte	0x37
 5369 1491 00       		.byte	0
 5370 1492 08       		.uleb128 0x8
 5371 1493 04080000 		.4byte	.LVL185
 5372 1497 AB1C0000 		.4byte	0x1cab
 5373 149b AC140000 		.4byte	0x14ac
 5374 149f 09       		.uleb128 0x9
 5375 14a0 01       		.uleb128 0x1
 5376 14a1 50       		.byte	0x50
 5377 14a2 02       		.uleb128 0x2
 5378 14a3 74       		.byte	0x74
 5379 14a4 00       		.sleb128 0
 5380 14a5 09       		.uleb128 0x9
 5381 14a6 01       		.uleb128 0x1
 5382 14a7 51       		.byte	0x51
 5383 14a8 02       		.uleb128 0x2
 5384 14a9 08       		.byte	0x8
 5385 14aa 46       		.byte	0x46
 5386 14ab 00       		.byte	0
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cckoGjaV.s 			page 117


 5387 14ac 08       		.uleb128 0x8
 5388 14ad 4A080000 		.4byte	.LVL186
 5389 14b1 741C0000 		.4byte	0x1c74
 5390 14b5 D8140000 		.4byte	0x14d8
 5391 14b9 09       		.uleb128 0x9
 5392 14ba 01       		.uleb128 0x1
 5393 14bb 51       		.byte	0x51
 5394 14bc 01       		.uleb128 0x1
 5395 14bd 30       		.byte	0x30
 5396 14be 09       		.uleb128 0x9
 5397 14bf 01       		.uleb128 0x1
 5398 14c0 52       		.byte	0x52
 5399 14c1 02       		.uleb128 0x2
 5400 14c2 09       		.byte	0x9
 5401 14c3 FF       		.byte	0xff
 5402 14c4 09       		.uleb128 0x9
 5403 14c5 01       		.uleb128 0x1
 5404 14c6 53       		.byte	0x53
 5405 14c7 01       		.uleb128 0x1
 5406 14c8 35       		.byte	0x35
 5407 14c9 09       		.uleb128 0x9
 5408 14ca 02       		.uleb128 0x2
 5409 14cb 7D       		.byte	0x7d
 5410 14cc 00       		.sleb128 0
 5411 14cd 02       		.uleb128 0x2
 5412 14ce 75       		.byte	0x75
 5413 14cf 00       		.sleb128 0
 5414 14d0 09       		.uleb128 0x9
 5415 14d1 02       		.uleb128 0x2
 5416 14d2 7D       		.byte	0x7d
 5417 14d3 04       		.sleb128 4
 5418 14d4 02       		.uleb128 0x2
 5419 14d5 74       		.byte	0x74
 5420 14d6 00       		.sleb128 0
 5421 14d7 00       		.byte	0
 5422 14d8 08       		.uleb128 0x8
 5423 14d9 50080000 		.4byte	.LVL187
 5424 14dd 691C0000 		.4byte	0x1c69
 5425 14e1 EB140000 		.4byte	0x14eb
 5426 14e5 09       		.uleb128 0x9
 5427 14e6 01       		.uleb128 0x1
 5428 14e7 50       		.byte	0x50
 5429 14e8 01       		.uleb128 0x1
 5430 14e9 37       		.byte	0x37
 5431 14ea 00       		.byte	0
 5432 14eb 08       		.uleb128 0x8
 5433 14ec 58080000 		.4byte	.LVL188
 5434 14f0 AB1C0000 		.4byte	0x1cab
 5435 14f4 04150000 		.4byte	0x1504
 5436 14f8 09       		.uleb128 0x9
 5437 14f9 01       		.uleb128 0x1
 5438 14fa 50       		.byte	0x50
 5439 14fb 01       		.uleb128 0x1
 5440 14fc 30       		.byte	0x30
 5441 14fd 09       		.uleb128 0x9
 5442 14fe 01       		.uleb128 0x1
 5443 14ff 51       		.byte	0x51
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cckoGjaV.s 			page 118


 5444 1500 02       		.uleb128 0x2
 5445 1501 75       		.byte	0x75
 5446 1502 00       		.sleb128 0
 5447 1503 00       		.byte	0
 5448 1504 08       		.uleb128 0x8
 5449 1505 74080000 		.4byte	.LVL189
 5450 1509 741C0000 		.4byte	0x1c74
 5451 150d 31150000 		.4byte	0x1531
 5452 1511 09       		.uleb128 0x9
 5453 1512 01       		.uleb128 0x1
 5454 1513 51       		.byte	0x51
 5455 1514 02       		.uleb128 0x2
 5456 1515 74       		.byte	0x74
 5457 1516 00       		.sleb128 0
 5458 1517 09       		.uleb128 0x9
 5459 1518 01       		.uleb128 0x1
 5460 1519 52       		.byte	0x52
 5461 151a 02       		.uleb128 0x2
 5462 151b 74       		.byte	0x74
 5463 151c 00       		.sleb128 0
 5464 151d 09       		.uleb128 0x9
 5465 151e 01       		.uleb128 0x1
 5466 151f 53       		.byte	0x53
 5467 1520 01       		.uleb128 0x1
 5468 1521 35       		.byte	0x35
 5469 1522 09       		.uleb128 0x9
 5470 1523 02       		.uleb128 0x2
 5471 1524 7D       		.byte	0x7d
 5472 1525 00       		.sleb128 0
 5473 1526 02       		.uleb128 0x2
 5474 1527 75       		.byte	0x75
 5475 1528 00       		.sleb128 0
 5476 1529 09       		.uleb128 0x9
 5477 152a 02       		.uleb128 0x2
 5478 152b 7D       		.byte	0x7d
 5479 152c 04       		.sleb128 4
 5480 152d 02       		.uleb128 0x2
 5481 152e 74       		.byte	0x74
 5482 152f 00       		.sleb128 0
 5483 1530 00       		.byte	0
 5484 1531 08       		.uleb128 0x8
 5485 1532 7A080000 		.4byte	.LVL190
 5486 1536 691C0000 		.4byte	0x1c69
 5487 153a 44150000 		.4byte	0x1544
 5488 153e 09       		.uleb128 0x9
 5489 153f 01       		.uleb128 0x1
 5490 1540 50       		.byte	0x50
 5491 1541 01       		.uleb128 0x1
 5492 1542 37       		.byte	0x37
 5493 1543 00       		.byte	0
 5494 1544 08       		.uleb128 0x8
 5495 1545 82080000 		.4byte	.LVL191
 5496 1549 AB1C0000 		.4byte	0x1cab
 5497 154d 5D150000 		.4byte	0x155d
 5498 1551 09       		.uleb128 0x9
 5499 1552 01       		.uleb128 0x1
 5500 1553 50       		.byte	0x50
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cckoGjaV.s 			page 119


 5501 1554 01       		.uleb128 0x1
 5502 1555 33       		.byte	0x33
 5503 1556 09       		.uleb128 0x9
 5504 1557 01       		.uleb128 0x1
 5505 1558 51       		.byte	0x51
 5506 1559 02       		.uleb128 0x2
 5507 155a 75       		.byte	0x75
 5508 155b 00       		.sleb128 0
 5509 155c 00       		.byte	0
 5510 155d 08       		.uleb128 0x8
 5511 155e 88080000 		.4byte	.LVL192
 5512 1562 691C0000 		.4byte	0x1c69
 5513 1566 70150000 		.4byte	0x1570
 5514 156a 09       		.uleb128 0x9
 5515 156b 01       		.uleb128 0x1
 5516 156c 50       		.byte	0x50
 5517 156d 01       		.uleb128 0x1
 5518 156e 38       		.byte	0x38
 5519 156f 00       		.byte	0
 5520 1570 08       		.uleb128 0x8
 5521 1571 98080000 		.4byte	.LVL193
 5522 1575 741C0000 		.4byte	0x1c74
 5523 1579 A3150000 		.4byte	0x15a3
 5524 157d 09       		.uleb128 0x9
 5525 157e 01       		.uleb128 0x1
 5526 157f 50       		.byte	0x50
 5527 1580 02       		.uleb128 0x2
 5528 1581 75       		.byte	0x75
 5529 1582 00       		.sleb128 0
 5530 1583 09       		.uleb128 0x9
 5531 1584 01       		.uleb128 0x1
 5532 1585 51       		.byte	0x51
 5533 1586 02       		.uleb128 0x2
 5534 1587 74       		.byte	0x74
 5535 1588 00       		.sleb128 0
 5536 1589 09       		.uleb128 0x9
 5537 158a 01       		.uleb128 0x1
 5538 158b 52       		.byte	0x52
 5539 158c 02       		.uleb128 0x2
 5540 158d 74       		.byte	0x74
 5541 158e 00       		.sleb128 0
 5542 158f 09       		.uleb128 0x9
 5543 1590 01       		.uleb128 0x1
 5544 1591 53       		.byte	0x53
 5545 1592 01       		.uleb128 0x1
 5546 1593 35       		.byte	0x35
 5547 1594 09       		.uleb128 0x9
 5548 1595 02       		.uleb128 0x2
 5549 1596 7D       		.byte	0x7d
 5550 1597 00       		.sleb128 0
 5551 1598 02       		.uleb128 0x2
 5552 1599 75       		.byte	0x75
 5553 159a 00       		.sleb128 0
 5554 159b 09       		.uleb128 0x9
 5555 159c 02       		.uleb128 0x2
 5556 159d 7D       		.byte	0x7d
 5557 159e 04       		.sleb128 4
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cckoGjaV.s 			page 120


 5558 159f 02       		.uleb128 0x2
 5559 15a0 74       		.byte	0x74
 5560 15a1 00       		.sleb128 0
 5561 15a2 00       		.byte	0
 5562 15a3 08       		.uleb128 0x8
 5563 15a4 A0080000 		.4byte	.LVL194
 5564 15a8 AB1C0000 		.4byte	0x1cab
 5565 15ac BC150000 		.4byte	0x15bc
 5566 15b0 09       		.uleb128 0x9
 5567 15b1 01       		.uleb128 0x1
 5568 15b2 50       		.byte	0x50
 5569 15b3 01       		.uleb128 0x1
 5570 15b4 30       		.byte	0x30
 5571 15b5 09       		.uleb128 0x9
 5572 15b6 01       		.uleb128 0x1
 5573 15b7 51       		.byte	0x51
 5574 15b8 02       		.uleb128 0x2
 5575 15b9 08       		.byte	0x8
 5576 15ba 46       		.byte	0x46
 5577 15bb 00       		.byte	0
 5578 15bc 08       		.uleb128 0x8
 5579 15bd B4080000 		.4byte	.LVL195
 5580 15c1 D71C0000 		.4byte	0x1cd7
 5581 15c5 E2150000 		.4byte	0x15e2
 5582 15c9 09       		.uleb128 0x9
 5583 15ca 01       		.uleb128 0x1
 5584 15cb 51       		.byte	0x51
 5585 15cc 02       		.uleb128 0x2
 5586 15cd 74       		.byte	0x74
 5587 15ce 00       		.sleb128 0
 5588 15cf 09       		.uleb128 0x9
 5589 15d0 01       		.uleb128 0x1
 5590 15d1 52       		.byte	0x52
 5591 15d2 01       		.uleb128 0x1
 5592 15d3 35       		.byte	0x35
 5593 15d4 09       		.uleb128 0x9
 5594 15d5 01       		.uleb128 0x1
 5595 15d6 53       		.byte	0x53
 5596 15d7 02       		.uleb128 0x2
 5597 15d8 08       		.byte	0x8
 5598 15d9 46       		.byte	0x46
 5599 15da 09       		.uleb128 0x9
 5600 15db 02       		.uleb128 0x2
 5601 15dc 7D       		.byte	0x7d
 5602 15dd 00       		.sleb128 0
 5603 15de 02       		.uleb128 0x2
 5604 15df 74       		.byte	0x74
 5605 15e0 00       		.sleb128 0
 5606 15e1 00       		.byte	0
 5607 15e2 08       		.uleb128 0x8
 5608 15e3 BA080000 		.4byte	.LVL196
 5609 15e7 691C0000 		.4byte	0x1c69
 5610 15eb F5150000 		.4byte	0x15f5
 5611 15ef 09       		.uleb128 0x9
 5612 15f0 01       		.uleb128 0x1
 5613 15f1 50       		.byte	0x50
 5614 15f2 01       		.uleb128 0x1
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cckoGjaV.s 			page 121


 5615 15f3 37       		.byte	0x37
 5616 15f4 00       		.byte	0
 5617 15f5 08       		.uleb128 0x8
 5618 15f6 C2080000 		.4byte	.LVL197
 5619 15fa AB1C0000 		.4byte	0x1cab
 5620 15fe 0E160000 		.4byte	0x160e
 5621 1602 09       		.uleb128 0x9
 5622 1603 01       		.uleb128 0x1
 5623 1604 50       		.byte	0x50
 5624 1605 01       		.uleb128 0x1
 5625 1606 33       		.byte	0x33
 5626 1607 09       		.uleb128 0x9
 5627 1608 01       		.uleb128 0x1
 5628 1609 51       		.byte	0x51
 5629 160a 02       		.uleb128 0x2
 5630 160b 08       		.byte	0x8
 5631 160c 46       		.byte	0x46
 5632 160d 00       		.byte	0
 5633 160e 08       		.uleb128 0x8
 5634 160f 1A090000 		.4byte	.LVL205
 5635 1613 691C0000 		.4byte	0x1c69
 5636 1617 21160000 		.4byte	0x1621
 5637 161b 09       		.uleb128 0x9
 5638 161c 01       		.uleb128 0x1
 5639 161d 50       		.byte	0x50
 5640 161e 01       		.uleb128 0x1
 5641 161f 38       		.byte	0x38
 5642 1620 00       		.byte	0
 5643 1621 08       		.uleb128 0x8
 5644 1622 2E090000 		.4byte	.LVL206
 5645 1626 741C0000 		.4byte	0x1c74
 5646 162a 53160000 		.4byte	0x1653
 5647 162e 09       		.uleb128 0x9
 5648 162f 01       		.uleb128 0x1
 5649 1630 50       		.byte	0x50
 5650 1631 02       		.uleb128 0x2
 5651 1632 08       		.byte	0x8
 5652 1633 32       		.byte	0x32
 5653 1634 09       		.uleb128 0x9
 5654 1635 01       		.uleb128 0x1
 5655 1636 51       		.byte	0x51
 5656 1637 01       		.uleb128 0x1
 5657 1638 30       		.byte	0x30
 5658 1639 09       		.uleb128 0x9
 5659 163a 01       		.uleb128 0x1
 5660 163b 52       		.byte	0x52
 5661 163c 02       		.uleb128 0x2
 5662 163d 74       		.byte	0x74
 5663 163e 00       		.sleb128 0
 5664 163f 09       		.uleb128 0x9
 5665 1640 01       		.uleb128 0x1
 5666 1641 53       		.byte	0x53
 5667 1642 01       		.uleb128 0x1
 5668 1643 34       		.byte	0x34
 5669 1644 09       		.uleb128 0x9
 5670 1645 02       		.uleb128 0x2
 5671 1646 7D       		.byte	0x7d
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cckoGjaV.s 			page 122


 5672 1647 00       		.sleb128 0
 5673 1648 02       		.uleb128 0x2
 5674 1649 75       		.byte	0x75
 5675 164a 00       		.sleb128 0
 5676 164b 09       		.uleb128 0x9
 5677 164c 02       		.uleb128 0x2
 5678 164d 7D       		.byte	0x7d
 5679 164e 04       		.sleb128 4
 5680 164f 02       		.uleb128 0x2
 5681 1650 74       		.byte	0x74
 5682 1651 00       		.sleb128 0
 5683 1652 00       		.byte	0
 5684 1653 08       		.uleb128 0x8
 5685 1654 36090000 		.4byte	.LVL207
 5686 1658 AB1C0000 		.4byte	0x1cab
 5687 165c 6C160000 		.4byte	0x166c
 5688 1660 09       		.uleb128 0x9
 5689 1661 01       		.uleb128 0x1
 5690 1662 50       		.byte	0x50
 5691 1663 01       		.uleb128 0x1
 5692 1664 30       		.byte	0x30
 5693 1665 09       		.uleb128 0x9
 5694 1666 01       		.uleb128 0x1
 5695 1667 51       		.byte	0x51
 5696 1668 02       		.uleb128 0x2
 5697 1669 75       		.byte	0x75
 5698 166a 00       		.sleb128 0
 5699 166b 00       		.byte	0
 5700 166c 08       		.uleb128 0x8
 5701 166d 3C090000 		.4byte	.LVL208
 5702 1671 691C0000 		.4byte	0x1c69
 5703 1675 7F160000 		.4byte	0x167f
 5704 1679 09       		.uleb128 0x9
 5705 167a 01       		.uleb128 0x1
 5706 167b 50       		.byte	0x50
 5707 167c 01       		.uleb128 0x1
 5708 167d 37       		.byte	0x37
 5709 167e 00       		.byte	0
 5710 167f 08       		.uleb128 0x8
 5711 1680 4C090000 		.4byte	.LVL209
 5712 1684 741C0000 		.4byte	0x1c74
 5713 1688 B1160000 		.4byte	0x16b1
 5714 168c 09       		.uleb128 0x9
 5715 168d 01       		.uleb128 0x1
 5716 168e 50       		.byte	0x50
 5717 168f 02       		.uleb128 0x2
 5718 1690 08       		.byte	0x8
 5719 1691 64       		.byte	0x64
 5720 1692 09       		.uleb128 0x9
 5721 1693 01       		.uleb128 0x1
 5722 1694 51       		.byte	0x51
 5723 1695 01       		.uleb128 0x1
 5724 1696 30       		.byte	0x30
 5725 1697 09       		.uleb128 0x9
 5726 1698 01       		.uleb128 0x1
 5727 1699 52       		.byte	0x52
 5728 169a 02       		.uleb128 0x2
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cckoGjaV.s 			page 123


 5729 169b 74       		.byte	0x74
 5730 169c 00       		.sleb128 0
 5731 169d 09       		.uleb128 0x9
 5732 169e 01       		.uleb128 0x1
 5733 169f 53       		.byte	0x53
 5734 16a0 01       		.uleb128 0x1
 5735 16a1 34       		.byte	0x34
 5736 16a2 09       		.uleb128 0x9
 5737 16a3 02       		.uleb128 0x2
 5738 16a4 7D       		.byte	0x7d
 5739 16a5 00       		.sleb128 0
 5740 16a6 02       		.uleb128 0x2
 5741 16a7 75       		.byte	0x75
 5742 16a8 00       		.sleb128 0
 5743 16a9 09       		.uleb128 0x9
 5744 16aa 02       		.uleb128 0x2
 5745 16ab 7D       		.byte	0x7d
 5746 16ac 04       		.sleb128 4
 5747 16ad 02       		.uleb128 0x2
 5748 16ae 74       		.byte	0x74
 5749 16af 00       		.sleb128 0
 5750 16b0 00       		.byte	0
 5751 16b1 08       		.uleb128 0x8
 5752 16b2 52090000 		.4byte	.LVL210
 5753 16b6 691C0000 		.4byte	0x1c69
 5754 16ba C4160000 		.4byte	0x16c4
 5755 16be 09       		.uleb128 0x9
 5756 16bf 01       		.uleb128 0x1
 5757 16c0 50       		.byte	0x50
 5758 16c1 01       		.uleb128 0x1
 5759 16c2 38       		.byte	0x38
 5760 16c3 00       		.byte	0
 5761 16c4 08       		.uleb128 0x8
 5762 16c5 5A090000 		.4byte	.LVL211
 5763 16c9 AB1C0000 		.4byte	0x1cab
 5764 16cd DE160000 		.4byte	0x16de
 5765 16d1 09       		.uleb128 0x9
 5766 16d2 01       		.uleb128 0x1
 5767 16d3 50       		.byte	0x50
 5768 16d4 02       		.uleb128 0x2
 5769 16d5 74       		.byte	0x74
 5770 16d6 00       		.sleb128 0
 5771 16d7 09       		.uleb128 0x9
 5772 16d8 01       		.uleb128 0x1
 5773 16d9 51       		.byte	0x51
 5774 16da 02       		.uleb128 0x2
 5775 16db 75       		.byte	0x75
 5776 16dc 00       		.sleb128 0
 5777 16dd 00       		.byte	0
 5778 16de 08       		.uleb128 0x8
 5779 16df 60090000 		.4byte	.LVL212
 5780 16e3 691C0000 		.4byte	0x1c69
 5781 16e7 F1160000 		.4byte	0x16f1
 5782 16eb 09       		.uleb128 0x9
 5783 16ec 01       		.uleb128 0x1
 5784 16ed 50       		.byte	0x50
 5785 16ee 01       		.uleb128 0x1
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cckoGjaV.s 			page 124


 5786 16ef 37       		.byte	0x37
 5787 16f0 00       		.byte	0
 5788 16f1 08       		.uleb128 0x8
 5789 16f2 70090000 		.4byte	.LVL213
 5790 16f6 741C0000 		.4byte	0x1c74
 5791 16fa 24170000 		.4byte	0x1724
 5792 16fe 09       		.uleb128 0x9
 5793 16ff 01       		.uleb128 0x1
 5794 1700 50       		.byte	0x50
 5795 1701 02       		.uleb128 0x2
 5796 1702 75       		.byte	0x75
 5797 1703 00       		.sleb128 0
 5798 1704 09       		.uleb128 0x9
 5799 1705 01       		.uleb128 0x1
 5800 1706 51       		.byte	0x51
 5801 1707 02       		.uleb128 0x2
 5802 1708 74       		.byte	0x74
 5803 1709 00       		.sleb128 0
 5804 170a 09       		.uleb128 0x9
 5805 170b 01       		.uleb128 0x1
 5806 170c 52       		.byte	0x52
 5807 170d 02       		.uleb128 0x2
 5808 170e 74       		.byte	0x74
 5809 170f 00       		.sleb128 0
 5810 1710 09       		.uleb128 0x9
 5811 1711 01       		.uleb128 0x1
 5812 1712 53       		.byte	0x53
 5813 1713 01       		.uleb128 0x1
 5814 1714 35       		.byte	0x35
 5815 1715 09       		.uleb128 0x9
 5816 1716 02       		.uleb128 0x2
 5817 1717 7D       		.byte	0x7d
 5818 1718 00       		.sleb128 0
 5819 1719 02       		.uleb128 0x2
 5820 171a 75       		.byte	0x75
 5821 171b 00       		.sleb128 0
 5822 171c 09       		.uleb128 0x9
 5823 171d 02       		.uleb128 0x2
 5824 171e 7D       		.byte	0x7d
 5825 171f 04       		.sleb128 4
 5826 1720 02       		.uleb128 0x2
 5827 1721 74       		.byte	0x74
 5828 1722 00       		.sleb128 0
 5829 1723 00       		.byte	0
 5830 1724 08       		.uleb128 0x8
 5831 1725 76090000 		.4byte	.LVL214
 5832 1729 691C0000 		.4byte	0x1c69
 5833 172d 37170000 		.4byte	0x1737
 5834 1731 09       		.uleb128 0x9
 5835 1732 01       		.uleb128 0x1
 5836 1733 50       		.byte	0x50
 5837 1734 01       		.uleb128 0x1
 5838 1735 37       		.byte	0x37
 5839 1736 00       		.byte	0
 5840 1737 08       		.uleb128 0x8
 5841 1738 90090000 		.4byte	.LVL215
 5842 173c 741C0000 		.4byte	0x1c74
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cckoGjaV.s 			page 125


 5843 1740 68170000 		.4byte	0x1768
 5844 1744 09       		.uleb128 0x9
 5845 1745 01       		.uleb128 0x1
 5846 1746 50       		.byte	0x50
 5847 1747 01       		.uleb128 0x1
 5848 1748 3A       		.byte	0x3a
 5849 1749 09       		.uleb128 0x9
 5850 174a 01       		.uleb128 0x1
 5851 174b 51       		.byte	0x51
 5852 174c 01       		.uleb128 0x1
 5853 174d 30       		.byte	0x30
 5854 174e 09       		.uleb128 0x9
 5855 174f 01       		.uleb128 0x1
 5856 1750 52       		.byte	0x52
 5857 1751 02       		.uleb128 0x2
 5858 1752 74       		.byte	0x74
 5859 1753 00       		.sleb128 0
 5860 1754 09       		.uleb128 0x9
 5861 1755 01       		.uleb128 0x1
 5862 1756 53       		.byte	0x53
 5863 1757 01       		.uleb128 0x1
 5864 1758 34       		.byte	0x34
 5865 1759 09       		.uleb128 0x9
 5866 175a 02       		.uleb128 0x2
 5867 175b 7D       		.byte	0x7d
 5868 175c 00       		.sleb128 0
 5869 175d 02       		.uleb128 0x2
 5870 175e 75       		.byte	0x75
 5871 175f 00       		.sleb128 0
 5872 1760 09       		.uleb128 0x9
 5873 1761 02       		.uleb128 0x2
 5874 1762 7D       		.byte	0x7d
 5875 1763 04       		.sleb128 4
 5876 1764 02       		.uleb128 0x2
 5877 1765 74       		.byte	0x74
 5878 1766 00       		.sleb128 0
 5879 1767 00       		.byte	0
 5880 1768 08       		.uleb128 0x8
 5881 1769 98090000 		.4byte	.LVL216
 5882 176d AB1C0000 		.4byte	0x1cab
 5883 1771 81170000 		.4byte	0x1781
 5884 1775 09       		.uleb128 0x9
 5885 1776 01       		.uleb128 0x1
 5886 1777 50       		.byte	0x50
 5887 1778 01       		.uleb128 0x1
 5888 1779 30       		.byte	0x30
 5889 177a 09       		.uleb128 0x9
 5890 177b 01       		.uleb128 0x1
 5891 177c 51       		.byte	0x51
 5892 177d 02       		.uleb128 0x2
 5893 177e 75       		.byte	0x75
 5894 177f 00       		.sleb128 0
 5895 1780 00       		.byte	0
 5896 1781 08       		.uleb128 0x8
 5897 1782 9E090000 		.4byte	.LVL217
 5898 1786 691C0000 		.4byte	0x1c69
 5899 178a 94170000 		.4byte	0x1794
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cckoGjaV.s 			page 126


 5900 178e 09       		.uleb128 0x9
 5901 178f 01       		.uleb128 0x1
 5902 1790 50       		.byte	0x50
 5903 1791 01       		.uleb128 0x1
 5904 1792 37       		.byte	0x37
 5905 1793 00       		.byte	0
 5906 1794 08       		.uleb128 0x8
 5907 1795 AE090000 		.4byte	.LVL218
 5908 1799 741C0000 		.4byte	0x1c74
 5909 179d C6170000 		.4byte	0x17c6
 5910 17a1 09       		.uleb128 0x9
 5911 17a2 01       		.uleb128 0x1
 5912 17a3 50       		.byte	0x50
 5913 17a4 02       		.uleb128 0x2
 5914 17a5 08       		.byte	0x8
 5915 17a6 64       		.byte	0x64
 5916 17a7 09       		.uleb128 0x9
 5917 17a8 01       		.uleb128 0x1
 5918 17a9 51       		.byte	0x51
 5919 17aa 01       		.uleb128 0x1
 5920 17ab 30       		.byte	0x30
 5921 17ac 09       		.uleb128 0x9
 5922 17ad 01       		.uleb128 0x1
 5923 17ae 52       		.byte	0x52
 5924 17af 02       		.uleb128 0x2
 5925 17b0 74       		.byte	0x74
 5926 17b1 00       		.sleb128 0
 5927 17b2 09       		.uleb128 0x9
 5928 17b3 01       		.uleb128 0x1
 5929 17b4 53       		.byte	0x53
 5930 17b5 01       		.uleb128 0x1
 5931 17b6 34       		.byte	0x34
 5932 17b7 09       		.uleb128 0x9
 5933 17b8 02       		.uleb128 0x2
 5934 17b9 7D       		.byte	0x7d
 5935 17ba 00       		.sleb128 0
 5936 17bb 02       		.uleb128 0x2
 5937 17bc 75       		.byte	0x75
 5938 17bd 00       		.sleb128 0
 5939 17be 09       		.uleb128 0x9
 5940 17bf 02       		.uleb128 0x2
 5941 17c0 7D       		.byte	0x7d
 5942 17c1 04       		.sleb128 4
 5943 17c2 02       		.uleb128 0x2
 5944 17c3 74       		.byte	0x74
 5945 17c4 00       		.sleb128 0
 5946 17c5 00       		.byte	0
 5947 17c6 08       		.uleb128 0x8
 5948 17c7 B6090000 		.4byte	.LVL219
 5949 17cb AB1C0000 		.4byte	0x1cab
 5950 17cf E0170000 		.4byte	0x17e0
 5951 17d3 09       		.uleb128 0x9
 5952 17d4 01       		.uleb128 0x1
 5953 17d5 50       		.byte	0x50
 5954 17d6 02       		.uleb128 0x2
 5955 17d7 74       		.byte	0x74
 5956 17d8 00       		.sleb128 0
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cckoGjaV.s 			page 127


 5957 17d9 09       		.uleb128 0x9
 5958 17da 01       		.uleb128 0x1
 5959 17db 51       		.byte	0x51
 5960 17dc 02       		.uleb128 0x2
 5961 17dd 75       		.byte	0x75
 5962 17de 00       		.sleb128 0
 5963 17df 00       		.byte	0
 5964 17e0 08       		.uleb128 0x8
 5965 17e1 BC090000 		.4byte	.LVL220
 5966 17e5 691C0000 		.4byte	0x1c69
 5967 17e9 F3170000 		.4byte	0x17f3
 5968 17ed 09       		.uleb128 0x9
 5969 17ee 01       		.uleb128 0x1
 5970 17ef 50       		.byte	0x50
 5971 17f0 01       		.uleb128 0x1
 5972 17f1 37       		.byte	0x37
 5973 17f2 00       		.byte	0
 5974 17f3 08       		.uleb128 0x8
 5975 17f4 CC090000 		.4byte	.LVL221
 5976 17f8 741C0000 		.4byte	0x1c74
 5977 17fc 26180000 		.4byte	0x1826
 5978 1800 09       		.uleb128 0x9
 5979 1801 01       		.uleb128 0x1
 5980 1802 50       		.byte	0x50
 5981 1803 02       		.uleb128 0x2
 5982 1804 75       		.byte	0x75
 5983 1805 00       		.sleb128 0
 5984 1806 09       		.uleb128 0x9
 5985 1807 01       		.uleb128 0x1
 5986 1808 51       		.byte	0x51
 5987 1809 02       		.uleb128 0x2
 5988 180a 74       		.byte	0x74
 5989 180b 00       		.sleb128 0
 5990 180c 09       		.uleb128 0x9
 5991 180d 01       		.uleb128 0x1
 5992 180e 52       		.byte	0x52
 5993 180f 02       		.uleb128 0x2
 5994 1810 74       		.byte	0x74
 5995 1811 00       		.sleb128 0
 5996 1812 09       		.uleb128 0x9
 5997 1813 01       		.uleb128 0x1
 5998 1814 53       		.byte	0x53
 5999 1815 01       		.uleb128 0x1
 6000 1816 35       		.byte	0x35
 6001 1817 09       		.uleb128 0x9
 6002 1818 02       		.uleb128 0x2
 6003 1819 7D       		.byte	0x7d
 6004 181a 00       		.sleb128 0
 6005 181b 02       		.uleb128 0x2
 6006 181c 75       		.byte	0x75
 6007 181d 00       		.sleb128 0
 6008 181e 09       		.uleb128 0x9
 6009 181f 02       		.uleb128 0x2
 6010 1820 7D       		.byte	0x7d
 6011 1821 04       		.sleb128 4
 6012 1822 02       		.uleb128 0x2
 6013 1823 74       		.byte	0x74
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cckoGjaV.s 			page 128


 6014 1824 00       		.sleb128 0
 6015 1825 00       		.byte	0
 6016 1826 08       		.uleb128 0x8
 6017 1827 D2090000 		.4byte	.LVL222
 6018 182b 691C0000 		.4byte	0x1c69
 6019 182f 39180000 		.4byte	0x1839
 6020 1833 09       		.uleb128 0x9
 6021 1834 01       		.uleb128 0x1
 6022 1835 50       		.byte	0x50
 6023 1836 01       		.uleb128 0x1
 6024 1837 37       		.byte	0x37
 6025 1838 00       		.byte	0
 6026 1839 08       		.uleb128 0x8
 6027 183a 540B0000 		.4byte	.LVL250
 6028 183e 741C0000 		.4byte	0x1c74
 6029 1842 6C180000 		.4byte	0x186c
 6030 1846 09       		.uleb128 0x9
 6031 1847 01       		.uleb128 0x1
 6032 1848 50       		.byte	0x50
 6033 1849 02       		.uleb128 0x2
 6034 184a 08       		.byte	0x8
 6035 184b D2       		.byte	0xd2
 6036 184c 09       		.uleb128 0x9
 6037 184d 01       		.uleb128 0x1
 6038 184e 51       		.byte	0x51
 6039 184f 02       		.uleb128 0x2
 6040 1850 74       		.byte	0x74
 6041 1851 00       		.sleb128 0
 6042 1852 09       		.uleb128 0x9
 6043 1853 01       		.uleb128 0x1
 6044 1854 52       		.byte	0x52
 6045 1855 02       		.uleb128 0x2
 6046 1856 09       		.byte	0x9
 6047 1857 FF       		.byte	0xff
 6048 1858 09       		.uleb128 0x9
 6049 1859 01       		.uleb128 0x1
 6050 185a 53       		.byte	0x53
 6051 185b 01       		.uleb128 0x1
 6052 185c 35       		.byte	0x35
 6053 185d 09       		.uleb128 0x9
 6054 185e 02       		.uleb128 0x2
 6055 185f 7D       		.byte	0x7d
 6056 1860 00       		.sleb128 0
 6057 1861 02       		.uleb128 0x2
 6058 1862 75       		.byte	0x75
 6059 1863 00       		.sleb128 0
 6060 1864 09       		.uleb128 0x9
 6061 1865 02       		.uleb128 0x2
 6062 1866 7D       		.byte	0x7d
 6063 1867 04       		.sleb128 4
 6064 1868 02       		.uleb128 0x2
 6065 1869 74       		.byte	0x74
 6066 186a 00       		.sleb128 0
 6067 186b 00       		.byte	0
 6068 186c 08       		.uleb128 0x8
 6069 186d 5C0B0000 		.4byte	.LVL251
 6070 1871 AB1C0000 		.4byte	0x1cab
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cckoGjaV.s 			page 129


 6071 1875 85180000 		.4byte	0x1885
 6072 1879 09       		.uleb128 0x9
 6073 187a 01       		.uleb128 0x1
 6074 187b 50       		.byte	0x50
 6075 187c 01       		.uleb128 0x1
 6076 187d 33       		.byte	0x33
 6077 187e 09       		.uleb128 0x9
 6078 187f 01       		.uleb128 0x1
 6079 1880 51       		.byte	0x51
 6080 1881 02       		.uleb128 0x2
 6081 1882 75       		.byte	0x75
 6082 1883 00       		.sleb128 0
 6083 1884 00       		.byte	0
 6084 1885 08       		.uleb128 0x8
 6085 1886 620B0000 		.4byte	.LVL252
 6086 188a 691C0000 		.4byte	0x1c69
 6087 188e 98180000 		.4byte	0x1898
 6088 1892 09       		.uleb128 0x9
 6089 1893 01       		.uleb128 0x1
 6090 1894 50       		.byte	0x50
 6091 1895 01       		.uleb128 0x1
 6092 1896 37       		.byte	0x37
 6093 1897 00       		.byte	0
 6094 1898 08       		.uleb128 0x8
 6095 1899 780B0000 		.4byte	.LVL253
 6096 189d 741C0000 		.4byte	0x1c74
 6097 18a1 CC180000 		.4byte	0x18cc
 6098 18a5 09       		.uleb128 0x9
 6099 18a6 01       		.uleb128 0x1
 6100 18a7 50       		.byte	0x50
 6101 18a8 03       		.uleb128 0x3
 6102 18a9 0A       		.byte	0xa
 6103 18aa F901     		.2byte	0x1f9
 6104 18ac 09       		.uleb128 0x9
 6105 18ad 01       		.uleb128 0x1
 6106 18ae 51       		.byte	0x51
 6107 18af 02       		.uleb128 0x2
 6108 18b0 74       		.byte	0x74
 6109 18b1 00       		.sleb128 0
 6110 18b2 09       		.uleb128 0x9
 6111 18b3 01       		.uleb128 0x1
 6112 18b4 52       		.byte	0x52
 6113 18b5 02       		.uleb128 0x2
 6114 18b6 09       		.byte	0x9
 6115 18b7 FF       		.byte	0xff
 6116 18b8 09       		.uleb128 0x9
 6117 18b9 01       		.uleb128 0x1
 6118 18ba 53       		.byte	0x53
 6119 18bb 01       		.uleb128 0x1
 6120 18bc 35       		.byte	0x35
 6121 18bd 09       		.uleb128 0x9
 6122 18be 02       		.uleb128 0x2
 6123 18bf 7D       		.byte	0x7d
 6124 18c0 00       		.sleb128 0
 6125 18c1 02       		.uleb128 0x2
 6126 18c2 75       		.byte	0x75
 6127 18c3 00       		.sleb128 0
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cckoGjaV.s 			page 130


 6128 18c4 09       		.uleb128 0x9
 6129 18c5 02       		.uleb128 0x2
 6130 18c6 7D       		.byte	0x7d
 6131 18c7 04       		.sleb128 4
 6132 18c8 02       		.uleb128 0x2
 6133 18c9 76       		.byte	0x76
 6134 18ca 00       		.sleb128 0
 6135 18cb 00       		.byte	0
 6136 18cc 08       		.uleb128 0x8
 6137 18cd 800B0000 		.4byte	.LVL254
 6138 18d1 AB1C0000 		.4byte	0x1cab
 6139 18d5 E6180000 		.4byte	0x18e6
 6140 18d9 09       		.uleb128 0x9
 6141 18da 01       		.uleb128 0x1
 6142 18db 50       		.byte	0x50
 6143 18dc 02       		.uleb128 0x2
 6144 18dd 74       		.byte	0x74
 6145 18de 00       		.sleb128 0
 6146 18df 09       		.uleb128 0x9
 6147 18e0 01       		.uleb128 0x1
 6148 18e1 51       		.byte	0x51
 6149 18e2 02       		.uleb128 0x2
 6150 18e3 75       		.byte	0x75
 6151 18e4 00       		.sleb128 0
 6152 18e5 00       		.byte	0
 6153 18e6 08       		.uleb128 0x8
 6154 18e7 900B0000 		.4byte	.LVL255
 6155 18eb 741C0000 		.4byte	0x1c74
 6156 18ef 19190000 		.4byte	0x1919
 6157 18f3 09       		.uleb128 0x9
 6158 18f4 01       		.uleb128 0x1
 6159 18f5 50       		.byte	0x50
 6160 18f6 02       		.uleb128 0x2
 6161 18f7 08       		.byte	0x8
 6162 18f8 28       		.byte	0x28
 6163 18f9 09       		.uleb128 0x9
 6164 18fa 01       		.uleb128 0x1
 6165 18fb 51       		.byte	0x51
 6166 18fc 02       		.uleb128 0x2
 6167 18fd 74       		.byte	0x74
 6168 18fe 00       		.sleb128 0
 6169 18ff 09       		.uleb128 0x9
 6170 1900 01       		.uleb128 0x1
 6171 1901 52       		.byte	0x52
 6172 1902 02       		.uleb128 0x2
 6173 1903 76       		.byte	0x76
 6174 1904 00       		.sleb128 0
 6175 1905 09       		.uleb128 0x9
 6176 1906 01       		.uleb128 0x1
 6177 1907 53       		.byte	0x53
 6178 1908 01       		.uleb128 0x1
 6179 1909 34       		.byte	0x34
 6180 190a 09       		.uleb128 0x9
 6181 190b 02       		.uleb128 0x2
 6182 190c 7D       		.byte	0x7d
 6183 190d 00       		.sleb128 0
 6184 190e 02       		.uleb128 0x2
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cckoGjaV.s 			page 131


 6185 190f 75       		.byte	0x75
 6186 1910 00       		.sleb128 0
 6187 1911 09       		.uleb128 0x9
 6188 1912 02       		.uleb128 0x2
 6189 1913 7D       		.byte	0x7d
 6190 1914 04       		.sleb128 4
 6191 1915 02       		.uleb128 0x2
 6192 1916 76       		.byte	0x76
 6193 1917 00       		.sleb128 0
 6194 1918 00       		.byte	0
 6195 1919 0A       		.uleb128 0xa
 6196 191a 980B0000 		.4byte	.LVL256
 6197 191e B61C0000 		.4byte	0x1cb6
 6198 1922 09       		.uleb128 0x9
 6199 1923 01       		.uleb128 0x1
 6200 1924 50       		.byte	0x50
 6201 1925 02       		.uleb128 0x2
 6202 1926 74       		.byte	0x74
 6203 1927 00       		.sleb128 0
 6204 1928 09       		.uleb128 0x9
 6205 1929 01       		.uleb128 0x1
 6206 192a 51       		.byte	0x51
 6207 192b 01       		.uleb128 0x1
 6208 192c 32       		.byte	0x32
 6209 192d 00       		.byte	0
 6210 192e 00       		.byte	0
 6211 192f 13       		.uleb128 0x13
 6212 1930 4F070000 		.4byte	.LASF24
 6213 1934 04       		.byte	0x4
 6214 1935 1207     		.2byte	0x712
 6215 1937 3B190000 		.4byte	0x193b
 6216 193b 14       		.uleb128 0x14
 6217 193c 76000000 		.4byte	0x76
 6218 1940 15       		.uleb128 0x15
 6219 1941 0E030000 		.4byte	.LASF25
 6220 1945 05       		.byte	0x5
 6221 1946 23       		.byte	0x23
 6222 1947 68000000 		.4byte	0x68
 6223 194b 05       		.uleb128 0x5
 6224 194c 03       		.byte	0x3
 6225 194d 00000000 		.4byte	internal_orientation
 6226 1951 16       		.uleb128 0x16
 6227 1952 68000000 		.4byte	0x68
 6228 1956 61190000 		.4byte	0x1961
 6229 195a 17       		.uleb128 0x17
 6230 195b 9D000000 		.4byte	0x9d
 6231 195f 04       		.byte	0x4
 6232 1960 00       		.byte	0
 6233 1961 15       		.uleb128 0x15
 6234 1962 03040000 		.4byte	.LASF26
 6235 1966 01       		.byte	0x1
 6236 1967 29       		.byte	0x29
 6237 1968 51190000 		.4byte	0x1951
 6238 196c 05       		.uleb128 0x5
 6239 196d 03       		.byte	0x3
 6240 196e 00000000 		.4byte	puck_rack_scans
 6241 1972 15       		.uleb128 0x15
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cckoGjaV.s 			page 132


 6242 1973 1D050000 		.4byte	.LASF27
 6243 1977 01       		.byte	0x1
 6244 1978 2B       		.byte	0x2b
 6245 1979 51190000 		.4byte	0x1951
 6246 197d 05       		.uleb128 0x5
 6247 197e 03       		.byte	0x3
 6248 197f 00000000 		.4byte	puck_rack_west_offsets
 6249 1983 16       		.uleb128 0x16
 6250 1984 81000000 		.4byte	0x81
 6251 1988 93190000 		.4byte	0x1993
 6252 198c 17       		.uleb128 0x17
 6253 198d 9D000000 		.4byte	0x9d
 6254 1991 03       		.byte	0x3
 6255 1992 00       		.byte	0
 6256 1993 15       		.uleb128 0x15
 6257 1994 98040000 		.4byte	.LASF28
 6258 1998 01       		.byte	0x1
 6259 1999 25       		.byte	0x25
 6260 199a 83190000 		.4byte	0x1983
 6261 199e 05       		.uleb128 0x5
 6262 199f 03       		.byte	0x3
 6263 19a0 00000000 		.4byte	block_edge_location
 6264 19a4 15       		.uleb128 0x15
 6265 19a5 0A080000 		.4byte	.LASF29
 6266 19a9 06       		.byte	0x6
 6267 19aa 23       		.byte	0x23
 6268 19ab 68000000 		.4byte	0x68
 6269 19af 05       		.uleb128 0x5
 6270 19b0 03       		.byte	0x3
 6271 19b1 00000000 		.4byte	initialisation
 6272 19b5 16       		.uleb128 0x16
 6273 19b6 8F000000 		.4byte	0x8f
 6274 19ba C5190000 		.4byte	0x19c5
 6275 19be 17       		.uleb128 0x17
 6276 19bf 9D000000 		.4byte	0x9d
 6277 19c3 1F       		.byte	0x1f
 6278 19c4 00       		.byte	0
 6279 19c5 15       		.uleb128 0x15
 6280 19c6 28070000 		.4byte	.LASF30
 6281 19ca 01       		.byte	0x1
 6282 19cb 21       		.byte	0x21
 6283 19cc B5190000 		.4byte	0x19b5
 6284 19d0 05       		.uleb128 0x5
 6285 19d1 03       		.byte	0x3
 6286 19d2 00000000 		.4byte	output
 6287 19d6 16       		.uleb128 0x16
 6288 19d7 68000000 		.4byte	0x68
 6289 19db E6190000 		.4byte	0x19e6
 6290 19df 17       		.uleb128 0x17
 6291 19e0 9D000000 		.4byte	0x9d
 6292 19e4 06       		.byte	0x6
 6293 19e5 00       		.byte	0
 6294 19e6 18       		.uleb128 0x18
 6295 19e7 51060000 		.4byte	.LASF31
 6296 19eb 07       		.byte	0x7
 6297 19ec CB       		.byte	0xcb
 6298 19ed D6190000 		.4byte	0x19d6
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cckoGjaV.s 			page 133


 6299 19f1 15       		.uleb128 0x15
 6300 19f2 B7000000 		.4byte	.LASF32
 6301 19f6 05       		.byte	0x5
 6302 19f7 2C       		.byte	0x2c
 6303 19f8 68000000 		.4byte	0x68
 6304 19fc 05       		.uleb128 0x5
 6305 19fd 03       		.byte	0x3
 6306 19fe 00000000 		.4byte	global_encoder
 6307 1a02 15       		.uleb128 0x15
 6308 1a03 86010000 		.4byte	.LASF33
 6309 1a07 05       		.byte	0x5
 6310 1a08 2D       		.byte	0x2d
 6311 1a09 68000000 		.4byte	0x68
 6312 1a0d 05       		.uleb128 0x5
 6313 1a0e 03       		.byte	0x3
 6314 1a0f 00000000 		.4byte	global_distance
 6315 1a13 15       		.uleb128 0x15
 6316 1a14 80060000 		.4byte	.LASF34
 6317 1a18 07       		.byte	0x7
 6318 1a19 D1       		.byte	0xd1
 6319 1a1a 68000000 		.4byte	0x68
 6320 1a1e 05       		.uleb128 0x5
 6321 1a1f 03       		.byte	0x3
 6322 1a20 00000000 		.4byte	preferential_route
 6323 1a24 15       		.uleb128 0x15
 6324 1a25 36000000 		.4byte	.LASF35
 6325 1a29 07       		.byte	0x7
 6326 1a2a D2       		.byte	0xd2
 6327 1a2b 68000000 		.4byte	0x68
 6328 1a2f 05       		.uleb128 0x5
 6329 1a30 03       		.byte	0x3
 6330 1a31 00000000 		.4byte	initial_tolerance
 6331 1a35 15       		.uleb128 0x15
 6332 1a36 B5050000 		.4byte	.LASF36
 6333 1a3a 07       		.byte	0x7
 6334 1a3b D3       		.byte	0xd3
 6335 1a3c 68000000 		.4byte	0x68
 6336 1a40 05       		.uleb128 0x5
 6337 1a41 03       		.byte	0x3
 6338 1a42 00000000 		.4byte	set_path
 6339 1a46 15       		.uleb128 0x15
 6340 1a47 DF030000 		.4byte	.LASF37
 6341 1a4b 01       		.byte	0x1
 6342 1a4c 4D       		.byte	0x4d
 6343 1a4d 68000000 		.4byte	0x68
 6344 1a51 05       		.uleb128 0x5
 6345 1a52 03       		.byte	0x3
 6346 1a53 00000000 		.4byte	colour_flag
 6347 1a57 15       		.uleb128 0x15
 6348 1a58 B9030000 		.4byte	.LASF38
 6349 1a5c 01       		.byte	0x1
 6350 1a5d 24       		.byte	0x24
 6351 1a5e 68000000 		.4byte	0x68
 6352 1a62 05       		.uleb128 0x5
 6353 1a63 03       		.byte	0x3
 6354 1a64 00000000 		.4byte	state
 6355 1a68 15       		.uleb128 0x15
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cckoGjaV.s 			page 134


 6356 1a69 B7010000 		.4byte	.LASF39
 6357 1a6d 01       		.byte	0x1
 6358 1a6e 53       		.byte	0x53
 6359 1a6f 68000000 		.4byte	0x68
 6360 1a73 05       		.uleb128 0x5
 6361 1a74 03       		.byte	0x3
 6362 1a75 00000000 		.4byte	moving
 6363 1a79 15       		.uleb128 0x15
 6364 1a7a A7010000 		.4byte	.LASF40
 6365 1a7e 06       		.byte	0x6
 6366 1a7f 25       		.byte	0x25
 6367 1a80 68000000 		.4byte	0x68
 6368 1a84 05       		.uleb128 0x5
 6369 1a85 03       		.byte	0x3
 6370 1a86 00000000 		.4byte	ultrasonic_flag
 6371 1a8a 16       		.uleb128 0x16
 6372 1a8b 68000000 		.4byte	0x68
 6373 1a8f 9A1A0000 		.4byte	0x1a9a
 6374 1a93 17       		.uleb128 0x17
 6375 1a94 9D000000 		.4byte	0x9d
 6376 1a98 02       		.byte	0x2
 6377 1a99 00       		.byte	0
 6378 1a9a 15       		.uleb128 0x15
 6379 1a9b 64040000 		.4byte	.LASF41
 6380 1a9f 01       		.byte	0x1
 6381 1aa0 2A       		.byte	0x2a
 6382 1aa1 8A1A0000 		.4byte	0x1a8a
 6383 1aa5 05       		.uleb128 0x5
 6384 1aa6 03       		.byte	0x3
 6385 1aa7 00000000 		.4byte	puck_construction_plan
 6386 1aab 15       		.uleb128 0x15
 6387 1aac 76020000 		.4byte	.LASF42
 6388 1ab0 01       		.byte	0x1
 6389 1ab1 57       		.byte	0x57
 6390 1ab2 68000000 		.4byte	0x68
 6391 1ab6 05       		.uleb128 0x5
 6392 1ab7 03       		.byte	0x3
 6393 1ab8 00000000 		.4byte	current_stage
 6394 1abc 15       		.uleb128 0x15
 6395 1abd 9C050000 		.4byte	.LASF43
 6396 1ac1 01       		.byte	0x1
 6397 1ac2 4E       		.byte	0x4e
 6398 1ac3 68000000 		.4byte	0x68
 6399 1ac7 05       		.uleb128 0x5
 6400 1ac8 03       		.byte	0x3
 6401 1ac9 00000000 		.4byte	colour_sensing_algorithm
 6402 1acd 15       		.uleb128 0x15
 6403 1ace 62030000 		.4byte	.LASF44
 6404 1ad2 01       		.byte	0x1
 6405 1ad3 41       		.byte	0x41
 6406 1ad4 68000000 		.4byte	0x68
 6407 1ad8 05       		.uleb128 0x5
 6408 1ad9 03       		.byte	0x3
 6409 1ada 00000000 		.4byte	safety_override
 6410 1ade 16       		.uleb128 0x16
 6411 1adf 68000000 		.4byte	0x68
 6412 1ae3 EE1A0000 		.4byte	0x1aee
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cckoGjaV.s 			page 135


 6413 1ae7 17       		.uleb128 0x17
 6414 1ae8 9D000000 		.4byte	0x9d
 6415 1aec 03       		.byte	0x3
 6416 1aed 00       		.byte	0
 6417 1aee 15       		.uleb128 0x15
 6418 1aef 27020000 		.4byte	.LASF45
 6419 1af3 01       		.byte	0x1
 6420 1af4 36       		.byte	0x36
 6421 1af5 DE1A0000 		.4byte	0x1ade
 6422 1af9 05       		.uleb128 0x5
 6423 1afa 03       		.byte	0x3
 6424 1afb 00000000 		.4byte	block_location
 6425 1aff 15       		.uleb128 0x15
 6426 1b00 39040000 		.4byte	.LASF46
 6427 1b04 01       		.byte	0x1
 6428 1b05 3B       		.byte	0x3b
 6429 1b06 DE1A0000 		.4byte	0x1ade
 6430 1b0a 05       		.uleb128 0x5
 6431 1b0b 03       		.byte	0x3
 6432 1b0c 00000000 		.4byte	puck_location
 6433 1b10 15       		.uleb128 0x15
 6434 1b11 F2070000 		.4byte	.LASF47
 6435 1b15 01       		.byte	0x1
 6436 1b16 28       		.byte	0x28
 6437 1b17 68000000 		.4byte	0x68
 6438 1b1b 05       		.uleb128 0x5
 6439 1b1c 03       		.byte	0x3
 6440 1b1d 00000000 		.4byte	current_puck_stack_size
 6441 1b21 16       		.uleb128 0x16
 6442 1b22 68000000 		.4byte	0x68
 6443 1b26 311B0000 		.4byte	0x1b31
 6444 1b2a 17       		.uleb128 0x17
 6445 1b2b 9D000000 		.4byte	0x9d
 6446 1b2f 01       		.byte	0x1
 6447 1b30 00       		.byte	0
 6448 1b31 15       		.uleb128 0x15
 6449 1b32 6F010000 		.4byte	.LASF48
 6450 1b36 01       		.byte	0x1
 6451 1b37 31       		.byte	0x31
 6452 1b38 211B0000 		.4byte	0x1b21
 6453 1b3c 05       		.uleb128 0x5
 6454 1b3d 03       		.byte	0x3
 6455 1b3e 00000000 		.4byte	puck_temp_pile
 6456 1b42 15       		.uleb128 0x15
 6457 1b43 11060000 		.4byte	.LASF49
 6458 1b47 01       		.byte	0x1
 6459 1b48 35       		.byte	0x35
 6460 1b49 68000000 		.4byte	0x68
 6461 1b4d 05       		.uleb128 0x5
 6462 1b4e 03       		.byte	0x3
 6463 1b4f 00000000 		.4byte	begin_navigation
 6464 1b53 15       		.uleb128 0x15
 6465 1b54 D0000000 		.4byte	.LASF50
 6466 1b58 01       		.byte	0x1
 6467 1b59 45       		.byte	0x45
 6468 1b5a 33000000 		.4byte	0x33
 6469 1b5e 05       		.uleb128 0x5
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cckoGjaV.s 			page 136


 6470 1b5f 03       		.byte	0x3
 6471 1b60 00000000 		.4byte	block_east_clearance
 6472 1b64 15       		.uleb128 0x15
 6473 1b65 E4050000 		.4byte	.LASF51
 6474 1b69 01       		.byte	0x1
 6475 1b6a 46       		.byte	0x46
 6476 1b6b 33000000 		.4byte	0x33
 6477 1b6f 05       		.uleb128 0x5
 6478 1b70 03       		.byte	0x3
 6479 1b71 00000000 		.4byte	block_west_clearance
 6480 1b75 15       		.uleb128 0x15
 6481 1b76 5B010000 		.4byte	.LASF52
 6482 1b7a 01       		.byte	0x1
 6483 1b7b 47       		.byte	0x47
 6484 1b7c 33000000 		.4byte	0x33
 6485 1b80 05       		.uleb128 0x5
 6486 1b81 03       		.byte	0x3
 6487 1b82 00000000 		.4byte	puck_east_clearance
 6488 1b86 15       		.uleb128 0x15
 6489 1b87 68000000 		.4byte	.LASF53
 6490 1b8b 01       		.byte	0x1
 6491 1b8c 48       		.byte	0x48
 6492 1b8d 33000000 		.4byte	0x33
 6493 1b91 05       		.uleb128 0x5
 6494 1b92 03       		.byte	0x3
 6495 1b93 00000000 		.4byte	puck_west_clearance
 6496 1b97 15       		.uleb128 0x15
 6497 1b98 E2040000 		.4byte	.LASF54
 6498 1b9c 01       		.byte	0x1
 6499 1b9d 4C       		.byte	0x4c
 6500 1b9e 68000000 		.4byte	0x68
 6501 1ba2 05       		.uleb128 0x5
 6502 1ba3 03       		.byte	0x3
 6503 1ba4 00000000 		.4byte	idac_value
 6504 1ba8 15       		.uleb128 0x15
 6505 1ba9 89050000 		.4byte	.LASF55
 6506 1bad 01       		.byte	0x1
 6507 1bae 55       		.byte	0x55
 6508 1baf B91B0000 		.4byte	0x1bb9
 6509 1bb3 05       		.uleb128 0x5
 6510 1bb4 03       		.byte	0x3
 6511 1bb5 00000000 		.4byte	PLAN_SCAN_VERTICAL
 6512 1bb9 19       		.uleb128 0x19
 6513 1bba 68000000 		.4byte	0x68
 6514 1bbe 15       		.uleb128 0x15
 6515 1bbf 36070000 		.4byte	.LASF56
 6516 1bc3 01       		.byte	0x1
 6517 1bc4 5B       		.byte	0x5b
 6518 1bc5 68000000 		.4byte	0x68
 6519 1bc9 05       		.uleb128 0x5
 6520 1bca 03       		.byte	0x3
 6521 1bcb 00000000 		.4byte	distance_returned_global
 6522 1bcf 1A       		.uleb128 0x1a
 6523 1bd0 5B020000 		.4byte	.LASF57
 6524 1bd4 5B020000 		.4byte	.LASF57
 6525 1bd8 06       		.byte	0x6
 6526 1bd9 17       		.byte	0x17
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cckoGjaV.s 			page 137


 6527 1bda 1A       		.uleb128 0x1a
 6528 1bdb EA070000 		.4byte	.LASF58
 6529 1bdf EA070000 		.4byte	.LASF58
 6530 1be3 08       		.byte	0x8
 6531 1be4 76       		.byte	0x76
 6532 1be5 1A       		.uleb128 0x1a
 6533 1be6 40060000 		.4byte	.LASF59
 6534 1bea 40060000 		.4byte	.LASF59
 6535 1bee 09       		.byte	0x9
 6536 1bef 8B       		.byte	0x8b
 6537 1bf0 1A       		.uleb128 0x1a
 6538 1bf1 EB030000 		.4byte	.LASF60
 6539 1bf5 EB030000 		.4byte	.LASF60
 6540 1bf9 0A       		.byte	0xa
 6541 1bfa DC       		.byte	0xdc
 6542 1bfb 1A       		.uleb128 0x1a
 6543 1bfc E2020000 		.4byte	.LASF61
 6544 1c00 E2020000 		.4byte	.LASF61
 6545 1c04 0B       		.byte	0xb
 6546 1c05 DC       		.byte	0xdc
 6547 1c06 1A       		.uleb128 0x1a
 6548 1c07 03020000 		.4byte	.LASF62
 6549 1c0b 03020000 		.4byte	.LASF62
 6550 1c0f 0C       		.byte	0xc
 6551 1c10 0E       		.byte	0xe
 6552 1c11 1A       		.uleb128 0x1a
 6553 1c12 38080000 		.4byte	.LASF63
 6554 1c16 38080000 		.4byte	.LASF63
 6555 1c1a 0A       		.byte	0xa
 6556 1c1b DD       		.byte	0xdd
 6557 1c1c 1A       		.uleb128 0x1a
 6558 1c1d 19080000 		.4byte	.LASF64
 6559 1c21 19080000 		.4byte	.LASF64
 6560 1c25 0A       		.byte	0xa
 6561 1c26 C3       		.byte	0xc3
 6562 1c27 1A       		.uleb128 0x1a
 6563 1c28 AB020000 		.4byte	.LASF65
 6564 1c2c AB020000 		.4byte	.LASF65
 6565 1c30 0B       		.byte	0xb
 6566 1c31 DD       		.byte	0xdd
 6567 1c32 1A       		.uleb128 0x1a
 6568 1c33 48000000 		.4byte	.LASF66
 6569 1c37 48000000 		.4byte	.LASF66
 6570 1c3b 0B       		.byte	0xb
 6571 1c3c C3       		.byte	0xc3
 6572 1c3d 1A       		.uleb128 0x1a
 6573 1c3e 7C000000 		.4byte	.LASF67
 6574 1c42 7C000000 		.4byte	.LASF67
 6575 1c46 0D       		.byte	0xd
 6576 1c47 1D       		.byte	0x1d
 6577 1c48 1A       		.uleb128 0x1a
 6578 1c49 59030000 		.4byte	.LASF68
 6579 1c4d 59030000 		.4byte	.LASF68
 6580 1c51 0D       		.byte	0xd
 6581 1c52 1C       		.byte	0x1c
 6582 1c53 1A       		.uleb128 0x1a
 6583 1c54 5C040000 		.4byte	.LASF69
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cckoGjaV.s 			page 138


 6584 1c58 5C040000 		.4byte	.LASF69
 6585 1c5c 0E       		.byte	0xe
 6586 1c5d E7       		.byte	0xe7
 6587 1c5e 1A       		.uleb128 0x1a
 6588 1c5f 24000000 		.4byte	.LASF70
 6589 1c63 24000000 		.4byte	.LASF70
 6590 1c67 0F       		.byte	0xf
 6591 1c68 0E       		.byte	0xe
 6592 1c69 1A       		.uleb128 0x1a
 6593 1c6a A8000000 		.4byte	.LASF71
 6594 1c6e A8000000 		.4byte	.LASF71
 6595 1c72 05       		.byte	0x5
 6596 1c73 13       		.byte	0x13
 6597 1c74 1A       		.uleb128 0x1a
 6598 1c75 15070000 		.4byte	.LASF72
 6599 1c79 15070000 		.4byte	.LASF72
 6600 1c7d 05       		.byte	0x5
 6601 1c7e 12       		.byte	0x12
 6602 1c7f 1A       		.uleb128 0x1a
 6603 1c80 90000000 		.4byte	.LASF73
 6604 1c84 90000000 		.4byte	.LASF73
 6605 1c88 0D       		.byte	0xd
 6606 1c89 19       		.byte	0x19
 6607 1c8a 1A       		.uleb128 0x1a
 6608 1c8b 7F030000 		.4byte	.LASF74
 6609 1c8f 7F030000 		.4byte	.LASF74
 6610 1c93 10       		.byte	0x10
 6611 1c94 2F       		.byte	0x2f
 6612 1c95 1A       		.uleb128 0x1a
 6613 1c96 47040000 		.4byte	.LASF75
 6614 1c9a 47040000 		.4byte	.LASF75
 6615 1c9e 0C       		.byte	0xc
 6616 1c9f 0F       		.byte	0xf
 6617 1ca0 1A       		.uleb128 0x1a
 6618 1ca1 5F050000 		.4byte	.LASF76
 6619 1ca5 5F050000 		.4byte	.LASF76
 6620 1ca9 06       		.byte	0x6
 6621 1caa 16       		.byte	0x16
 6622 1cab 1A       		.uleb128 0x1a
 6623 1cac BF030000 		.4byte	.LASF77
 6624 1cb0 BF030000 		.4byte	.LASF77
 6625 1cb4 05       		.byte	0x5
 6626 1cb5 19       		.byte	0x19
 6627 1cb6 1A       		.uleb128 0x1a
 6628 1cb7 8A020000 		.4byte	.LASF78
 6629 1cbb 8A020000 		.4byte	.LASF78
 6630 1cbf 11       		.byte	0x11
 6631 1cc0 0F       		.byte	0xf
 6632 1cc1 1A       		.uleb128 0x1a
 6633 1cc2 13040000 		.4byte	.LASF79
 6634 1cc6 13040000 		.4byte	.LASF79
 6635 1cca 05       		.byte	0x5
 6636 1ccb 10       		.byte	0x10
 6637 1ccc 1A       		.uleb128 0x1a
 6638 1ccd 80050000 		.4byte	.LASF80
 6639 1cd1 80050000 		.4byte	.LASF80
 6640 1cd5 11       		.byte	0x11
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cckoGjaV.s 			page 139


 6641 1cd6 11       		.byte	0x11
 6642 1cd7 1A       		.uleb128 0x1a
 6643 1cd8 CC050000 		.4byte	.LASF81
 6644 1cdc CC050000 		.4byte	.LASF81
 6645 1ce0 05       		.byte	0x5
 6646 1ce1 2A       		.byte	0x2a
 6647 1ce2 1A       		.uleb128 0x1a
 6648 1ce3 00000000 		.4byte	.LASF82
 6649 1ce7 00000000 		.4byte	.LASF82
 6650 1ceb 11       		.byte	0x11
 6651 1cec 10       		.byte	0x10
 6652 1ced 1A       		.uleb128 0x1a
 6653 1cee 53050000 		.4byte	.LASF83
 6654 1cf2 53050000 		.4byte	.LASF83
 6655 1cf6 12       		.byte	0x12
 6656 1cf7 3D       		.byte	0x3d
 6657 1cf8 1A       		.uleb128 0x1a
 6658 1cf9 72030000 		.4byte	.LASF84
 6659 1cfd 72030000 		.4byte	.LASF84
 6660 1d01 09       		.byte	0x9
 6661 1d02 54       		.byte	0x54
 6662 1d03 1A       		.uleb128 0x1a
 6663 1d04 FB020000 		.4byte	.LASF85
 6664 1d08 FB020000 		.4byte	.LASF85
 6665 1d0c 13       		.byte	0x13
 6666 1d0d 3A       		.byte	0x3a
 6667 1d0e 1A       		.uleb128 0x1a
 6668 1d0f FF040000 		.4byte	.LASF86
 6669 1d13 FF040000 		.4byte	.LASF86
 6670 1d17 14       		.byte	0x14
 6671 1d18 3C       		.byte	0x3c
 6672 1d19 1A       		.uleb128 0x1a
 6673 1d1a 7B040000 		.4byte	.LASF87
 6674 1d1e 7B040000 		.4byte	.LASF87
 6675 1d22 14       		.byte	0x14
 6676 1d23 40       		.byte	0x40
 6677 1d24 1A       		.uleb128 0x1a
 6678 1d25 F9050000 		.4byte	.LASF88
 6679 1d29 F9050000 		.4byte	.LASF88
 6680 1d2d 14       		.byte	0x14
 6681 1d2e 41       		.byte	0x41
 6682 1d2f 1A       		.uleb128 0x1a
 6683 1d30 C3040000 		.4byte	.LASF89
 6684 1d34 C3040000 		.4byte	.LASF89
 6685 1d38 15       		.byte	0x15
 6686 1d39 2F       		.byte	0x2f
 6687 1d3a 1A       		.uleb128 0x1a
 6688 1d3b EE010000 		.4byte	.LASF90
 6689 1d3f EE010000 		.4byte	.LASF90
 6690 1d43 16       		.byte	0x16
 6691 1d44 92       		.byte	0x92
 6692 1d45 1A       		.uleb128 0x1a
 6693 1d46 9D030000 		.4byte	.LASF91
 6694 1d4a 9D030000 		.4byte	.LASF91
 6695 1d4e 16       		.byte	0x16
 6696 1d4f C3       		.byte	0xc3
 6697 1d50 1A       		.uleb128 0x1a
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cckoGjaV.s 			page 140


 6698 1d51 BE010000 		.4byte	.LASF92
 6699 1d55 BE010000 		.4byte	.LASF92
 6700 1d59 16       		.byte	0x16
 6701 1d5a DC       		.byte	0xdc
 6702 1d5b 1A       		.uleb128 0x1a
 6703 1d5c 36020000 		.4byte	.LASF93
 6704 1d60 36020000 		.4byte	.LASF93
 6705 1d64 17       		.byte	0x17
 6706 1d65 92       		.byte	0x92
 6707 1d66 1A       		.uleb128 0x1a
 6708 1d67 34050000 		.4byte	.LASF94
 6709 1d6b 34050000 		.4byte	.LASF94
 6710 1d6f 17       		.byte	0x17
 6711 1d70 C3       		.byte	0xc3
 6712 1d71 1A       		.uleb128 0x1a
 6713 1d72 0F020000 		.4byte	.LASF95
 6714 1d76 0F020000 		.4byte	.LASF95
 6715 1d7a 17       		.byte	0x17
 6716 1d7b DC       		.byte	0xdc
 6717 1d7c 1A       		.uleb128 0x1a
 6718 1d7d 21040000 		.4byte	.LASF96
 6719 1d81 21040000 		.4byte	.LASF96
 6720 1d85 0A       		.byte	0xa
 6721 1d86 92       		.byte	0x92
 6722 1d87 1A       		.uleb128 0x1a
 6723 1d88 23030000 		.4byte	.LASF97
 6724 1d8c 23030000 		.4byte	.LASF97
 6725 1d90 0B       		.byte	0xb
 6726 1d91 92       		.byte	0x92
 6727 1d92 1A       		.uleb128 0x1a
 6728 1d93 36010000 		.4byte	.LASF98
 6729 1d97 36010000 		.4byte	.LASF98
 6730 1d9b 18       		.byte	0x18
 6731 1d9c 48       		.byte	0x48
 6732 1d9d 1A       		.uleb128 0x1a
 6733 1d9e F3000000 		.4byte	.LASF99
 6734 1da2 F3000000 		.4byte	.LASF99
 6735 1da6 19       		.byte	0x19
 6736 1da7 48       		.byte	0x48
 6737 1da8 1A       		.uleb128 0x1a
 6738 1da9 BE050000 		.4byte	.LASF100
 6739 1dad BE050000 		.4byte	.LASF100
 6740 1db1 1A       		.byte	0x1a
 6741 1db2 5A       		.byte	0x5a
 6742 1db3 1A       		.uleb128 0x1a
 6743 1db4 D3010000 		.4byte	.LASF101
 6744 1db8 D3010000 		.4byte	.LASF101
 6745 1dbc 1A       		.byte	0x1a
 6746 1dbd 5E       		.byte	0x5e
 6747 1dbe 1A       		.uleb128 0x1a
 6748 1dbf E5000000 		.4byte	.LASF102
 6749 1dc3 E5000000 		.4byte	.LASF102
 6750 1dc7 1B       		.byte	0x1b
 6751 1dc8 18       		.byte	0x18
 6752 1dc9 1A       		.uleb128 0x1a
 6753 1dca 22060000 		.4byte	.LASF103
 6754 1dce 22060000 		.4byte	.LASF103
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cckoGjaV.s 			page 141


 6755 1dd2 1C       		.byte	0x1c
 6756 1dd3 18       		.byte	0x18
 6757 1dd4 1A       		.uleb128 0x1a
 6758 1dd5 96010000 		.4byte	.LASF104
 6759 1dd9 96010000 		.4byte	.LASF104
 6760 1ddd 1D       		.byte	0x1d
 6761 1dde 18       		.byte	0x18
 6762 1ddf 1A       		.uleb128 0x1a
 6763 1de0 01070000 		.4byte	.LASF105
 6764 1de4 01070000 		.4byte	.LASF105
 6765 1de8 06       		.byte	0x6
 6766 1de9 18       		.byte	0x18
 6767 1dea 1A       		.uleb128 0x1a
 6768 1deb 08000000 		.4byte	.LASF106
 6769 1def 08000000 		.4byte	.LASF106
 6770 1df3 1E       		.byte	0x1e
 6771 1df4 5A       		.byte	0x5a
 6772 1df5 1A       		.uleb128 0x1a
 6773 1df6 0D010000 		.4byte	.LASF107
 6774 1dfa 0D010000 		.4byte	.LASF107
 6775 1dfe 1E       		.byte	0x1e
 6776 1dff 5E       		.byte	0x5e
 6777 1e00 00       		.byte	0
 6778              		.section	.debug_abbrev,"",%progbits
 6779              	.Ldebug_abbrev0:
 6780 0000 01       		.uleb128 0x1
 6781 0001 11       		.uleb128 0x11
 6782 0002 01       		.byte	0x1
 6783 0003 25       		.uleb128 0x25
 6784 0004 0E       		.uleb128 0xe
 6785 0005 13       		.uleb128 0x13
 6786 0006 0B       		.uleb128 0xb
 6787 0007 03       		.uleb128 0x3
 6788 0008 0E       		.uleb128 0xe
 6789 0009 1B       		.uleb128 0x1b
 6790 000a 0E       		.uleb128 0xe
 6791 000b 55       		.uleb128 0x55
 6792 000c 17       		.uleb128 0x17
 6793 000d 11       		.uleb128 0x11
 6794 000e 01       		.uleb128 0x1
 6795 000f 10       		.uleb128 0x10
 6796 0010 17       		.uleb128 0x17
 6797 0011 00       		.byte	0
 6798 0012 00       		.byte	0
 6799 0013 02       		.uleb128 0x2
 6800 0014 24       		.uleb128 0x24
 6801 0015 00       		.byte	0
 6802 0016 0B       		.uleb128 0xb
 6803 0017 0B       		.uleb128 0xb
 6804 0018 3E       		.uleb128 0x3e
 6805 0019 0B       		.uleb128 0xb
 6806 001a 03       		.uleb128 0x3
 6807 001b 0E       		.uleb128 0xe
 6808 001c 00       		.byte	0
 6809 001d 00       		.byte	0
 6810 001e 03       		.uleb128 0x3
 6811 001f 16       		.uleb128 0x16
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cckoGjaV.s 			page 142


 6812 0020 00       		.byte	0
 6813 0021 03       		.uleb128 0x3
 6814 0022 0E       		.uleb128 0xe
 6815 0023 3A       		.uleb128 0x3a
 6816 0024 0B       		.uleb128 0xb
 6817 0025 3B       		.uleb128 0x3b
 6818 0026 0B       		.uleb128 0xb
 6819 0027 49       		.uleb128 0x49
 6820 0028 13       		.uleb128 0x13
 6821 0029 00       		.byte	0
 6822 002a 00       		.byte	0
 6823 002b 04       		.uleb128 0x4
 6824 002c 24       		.uleb128 0x24
 6825 002d 00       		.byte	0
 6826 002e 0B       		.uleb128 0xb
 6827 002f 0B       		.uleb128 0xb
 6828 0030 3E       		.uleb128 0x3e
 6829 0031 0B       		.uleb128 0xb
 6830 0032 03       		.uleb128 0x3
 6831 0033 08       		.uleb128 0x8
 6832 0034 00       		.byte	0
 6833 0035 00       		.byte	0
 6834 0036 05       		.uleb128 0x5
 6835 0037 2E       		.uleb128 0x2e
 6836 0038 01       		.byte	0x1
 6837 0039 3F       		.uleb128 0x3f
 6838 003a 19       		.uleb128 0x19
 6839 003b 03       		.uleb128 0x3
 6840 003c 08       		.uleb128 0x8
 6841 003d 3A       		.uleb128 0x3a
 6842 003e 0B       		.uleb128 0xb
 6843 003f 3B       		.uleb128 0x3b
 6844 0040 0B       		.uleb128 0xb
 6845 0041 27       		.uleb128 0x27
 6846 0042 19       		.uleb128 0x19
 6847 0043 11       		.uleb128 0x11
 6848 0044 01       		.uleb128 0x1
 6849 0045 12       		.uleb128 0x12
 6850 0046 06       		.uleb128 0x6
 6851 0047 40       		.uleb128 0x40
 6852 0048 18       		.uleb128 0x18
 6853 0049 9742     		.uleb128 0x2117
 6854 004b 19       		.uleb128 0x19
 6855 004c 01       		.uleb128 0x1
 6856 004d 13       		.uleb128 0x13
 6857 004e 00       		.byte	0
 6858 004f 00       		.byte	0
 6859 0050 06       		.uleb128 0x6
 6860 0051 898201   		.uleb128 0x4109
 6861 0054 00       		.byte	0
 6862 0055 11       		.uleb128 0x11
 6863 0056 01       		.uleb128 0x1
 6864 0057 31       		.uleb128 0x31
 6865 0058 13       		.uleb128 0x13
 6866 0059 00       		.byte	0
 6867 005a 00       		.byte	0
 6868 005b 07       		.uleb128 0x7
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cckoGjaV.s 			page 143


 6869 005c 2E       		.uleb128 0x2e
 6870 005d 01       		.byte	0x1
 6871 005e 3F       		.uleb128 0x3f
 6872 005f 19       		.uleb128 0x19
 6873 0060 03       		.uleb128 0x3
 6874 0061 0E       		.uleb128 0xe
 6875 0062 3A       		.uleb128 0x3a
 6876 0063 0B       		.uleb128 0xb
 6877 0064 3B       		.uleb128 0x3b
 6878 0065 0B       		.uleb128 0xb
 6879 0066 27       		.uleb128 0x27
 6880 0067 19       		.uleb128 0x19
 6881 0068 11       		.uleb128 0x11
 6882 0069 01       		.uleb128 0x1
 6883 006a 12       		.uleb128 0x12
 6884 006b 06       		.uleb128 0x6
 6885 006c 40       		.uleb128 0x40
 6886 006d 18       		.uleb128 0x18
 6887 006e 9742     		.uleb128 0x2117
 6888 0070 19       		.uleb128 0x19
 6889 0071 01       		.uleb128 0x1
 6890 0072 13       		.uleb128 0x13
 6891 0073 00       		.byte	0
 6892 0074 00       		.byte	0
 6893 0075 08       		.uleb128 0x8
 6894 0076 898201   		.uleb128 0x4109
 6895 0079 01       		.byte	0x1
 6896 007a 11       		.uleb128 0x11
 6897 007b 01       		.uleb128 0x1
 6898 007c 31       		.uleb128 0x31
 6899 007d 13       		.uleb128 0x13
 6900 007e 01       		.uleb128 0x1
 6901 007f 13       		.uleb128 0x13
 6902 0080 00       		.byte	0
 6903 0081 00       		.byte	0
 6904 0082 09       		.uleb128 0x9
 6905 0083 8A8201   		.uleb128 0x410a
 6906 0086 00       		.byte	0
 6907 0087 02       		.uleb128 0x2
 6908 0088 18       		.uleb128 0x18
 6909 0089 9142     		.uleb128 0x2111
 6910 008b 18       		.uleb128 0x18
 6911 008c 00       		.byte	0
 6912 008d 00       		.byte	0
 6913 008e 0A       		.uleb128 0xa
 6914 008f 898201   		.uleb128 0x4109
 6915 0092 01       		.byte	0x1
 6916 0093 11       		.uleb128 0x11
 6917 0094 01       		.uleb128 0x1
 6918 0095 31       		.uleb128 0x31
 6919 0096 13       		.uleb128 0x13
 6920 0097 00       		.byte	0
 6921 0098 00       		.byte	0
 6922 0099 0B       		.uleb128 0xb
 6923 009a 2E       		.uleb128 0x2e
 6924 009b 01       		.byte	0x1
 6925 009c 3F       		.uleb128 0x3f
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cckoGjaV.s 			page 144


 6926 009d 19       		.uleb128 0x19
 6927 009e 03       		.uleb128 0x3
 6928 009f 0E       		.uleb128 0xe
 6929 00a0 3A       		.uleb128 0x3a
 6930 00a1 0B       		.uleb128 0xb
 6931 00a2 3B       		.uleb128 0x3b
 6932 00a3 0B       		.uleb128 0xb
 6933 00a4 27       		.uleb128 0x27
 6934 00a5 19       		.uleb128 0x19
 6935 00a6 49       		.uleb128 0x49
 6936 00a7 13       		.uleb128 0x13
 6937 00a8 8701     		.uleb128 0x87
 6938 00aa 19       		.uleb128 0x19
 6939 00ab 11       		.uleb128 0x11
 6940 00ac 01       		.uleb128 0x1
 6941 00ad 12       		.uleb128 0x12
 6942 00ae 06       		.uleb128 0x6
 6943 00af 40       		.uleb128 0x40
 6944 00b0 18       		.uleb128 0x18
 6945 00b1 9742     		.uleb128 0x2117
 6946 00b3 19       		.uleb128 0x19
 6947 00b4 01       		.uleb128 0x1
 6948 00b5 13       		.uleb128 0x13
 6949 00b6 00       		.byte	0
 6950 00b7 00       		.byte	0
 6951 00b8 0C       		.uleb128 0xc
 6952 00b9 34       		.uleb128 0x34
 6953 00ba 00       		.byte	0
 6954 00bb 03       		.uleb128 0x3
 6955 00bc 0E       		.uleb128 0xe
 6956 00bd 3A       		.uleb128 0x3a
 6957 00be 0B       		.uleb128 0xb
 6958 00bf 3B       		.uleb128 0x3b
 6959 00c0 0B       		.uleb128 0xb
 6960 00c1 49       		.uleb128 0x49
 6961 00c2 13       		.uleb128 0x13
 6962 00c3 1C       		.uleb128 0x1c
 6963 00c4 0B       		.uleb128 0xb
 6964 00c5 00       		.byte	0
 6965 00c6 00       		.byte	0
 6966 00c7 0D       		.uleb128 0xd
 6967 00c8 0B       		.uleb128 0xb
 6968 00c9 01       		.byte	0x1
 6969 00ca 11       		.uleb128 0x11
 6970 00cb 01       		.uleb128 0x1
 6971 00cc 12       		.uleb128 0x12
 6972 00cd 06       		.uleb128 0x6
 6973 00ce 01       		.uleb128 0x1
 6974 00cf 13       		.uleb128 0x13
 6975 00d0 00       		.byte	0
 6976 00d1 00       		.byte	0
 6977 00d2 0E       		.uleb128 0xe
 6978 00d3 34       		.uleb128 0x34
 6979 00d4 00       		.byte	0
 6980 00d5 03       		.uleb128 0x3
 6981 00d6 0E       		.uleb128 0xe
 6982 00d7 3A       		.uleb128 0x3a
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cckoGjaV.s 			page 145


 6983 00d8 0B       		.uleb128 0xb
 6984 00d9 3B       		.uleb128 0x3b
 6985 00da 05       		.uleb128 0x5
 6986 00db 49       		.uleb128 0x49
 6987 00dc 13       		.uleb128 0x13
 6988 00dd 02       		.uleb128 0x2
 6989 00de 17       		.uleb128 0x17
 6990 00df 00       		.byte	0
 6991 00e0 00       		.byte	0
 6992 00e1 0F       		.uleb128 0xf
 6993 00e2 34       		.uleb128 0x34
 6994 00e3 00       		.byte	0
 6995 00e4 03       		.uleb128 0x3
 6996 00e5 08       		.uleb128 0x8
 6997 00e6 3A       		.uleb128 0x3a
 6998 00e7 0B       		.uleb128 0xb
 6999 00e8 3B       		.uleb128 0x3b
 7000 00e9 0B       		.uleb128 0xb
 7001 00ea 49       		.uleb128 0x49
 7002 00eb 13       		.uleb128 0x13
 7003 00ec 02       		.uleb128 0x2
 7004 00ed 17       		.uleb128 0x17
 7005 00ee 00       		.byte	0
 7006 00ef 00       		.byte	0
 7007 00f0 10       		.uleb128 0x10
 7008 00f1 34       		.uleb128 0x34
 7009 00f2 00       		.byte	0
 7010 00f3 03       		.uleb128 0x3
 7011 00f4 08       		.uleb128 0x8
 7012 00f5 3A       		.uleb128 0x3a
 7013 00f6 0B       		.uleb128 0xb
 7014 00f7 3B       		.uleb128 0x3b
 7015 00f8 05       		.uleb128 0x5
 7016 00f9 49       		.uleb128 0x49
 7017 00fa 13       		.uleb128 0x13
 7018 00fb 02       		.uleb128 0x2
 7019 00fc 17       		.uleb128 0x17
 7020 00fd 00       		.byte	0
 7021 00fe 00       		.byte	0
 7022 00ff 11       		.uleb128 0x11
 7023 0100 0B       		.uleb128 0xb
 7024 0101 01       		.byte	0x1
 7025 0102 55       		.uleb128 0x55
 7026 0103 17       		.uleb128 0x17
 7027 0104 01       		.uleb128 0x1
 7028 0105 13       		.uleb128 0x13
 7029 0106 00       		.byte	0
 7030 0107 00       		.byte	0
 7031 0108 12       		.uleb128 0x12
 7032 0109 34       		.uleb128 0x34
 7033 010a 00       		.byte	0
 7034 010b 03       		.uleb128 0x3
 7035 010c 0E       		.uleb128 0xe
 7036 010d 3A       		.uleb128 0x3a
 7037 010e 0B       		.uleb128 0xb
 7038 010f 3B       		.uleb128 0x3b
 7039 0110 05       		.uleb128 0x5
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cckoGjaV.s 			page 146


 7040 0111 49       		.uleb128 0x49
 7041 0112 13       		.uleb128 0x13
 7042 0113 00       		.byte	0
 7043 0114 00       		.byte	0
 7044 0115 13       		.uleb128 0x13
 7045 0116 34       		.uleb128 0x34
 7046 0117 00       		.byte	0
 7047 0118 03       		.uleb128 0x3
 7048 0119 0E       		.uleb128 0xe
 7049 011a 3A       		.uleb128 0x3a
 7050 011b 0B       		.uleb128 0xb
 7051 011c 3B       		.uleb128 0x3b
 7052 011d 05       		.uleb128 0x5
 7053 011e 49       		.uleb128 0x49
 7054 011f 13       		.uleb128 0x13
 7055 0120 3F       		.uleb128 0x3f
 7056 0121 19       		.uleb128 0x19
 7057 0122 3C       		.uleb128 0x3c
 7058 0123 19       		.uleb128 0x19
 7059 0124 00       		.byte	0
 7060 0125 00       		.byte	0
 7061 0126 14       		.uleb128 0x14
 7062 0127 35       		.uleb128 0x35
 7063 0128 00       		.byte	0
 7064 0129 49       		.uleb128 0x49
 7065 012a 13       		.uleb128 0x13
 7066 012b 00       		.byte	0
 7067 012c 00       		.byte	0
 7068 012d 15       		.uleb128 0x15
 7069 012e 34       		.uleb128 0x34
 7070 012f 00       		.byte	0
 7071 0130 03       		.uleb128 0x3
 7072 0131 0E       		.uleb128 0xe
 7073 0132 3A       		.uleb128 0x3a
 7074 0133 0B       		.uleb128 0xb
 7075 0134 3B       		.uleb128 0x3b
 7076 0135 0B       		.uleb128 0xb
 7077 0136 49       		.uleb128 0x49
 7078 0137 13       		.uleb128 0x13
 7079 0138 3F       		.uleb128 0x3f
 7080 0139 19       		.uleb128 0x19
 7081 013a 02       		.uleb128 0x2
 7082 013b 18       		.uleb128 0x18
 7083 013c 00       		.byte	0
 7084 013d 00       		.byte	0
 7085 013e 16       		.uleb128 0x16
 7086 013f 01       		.uleb128 0x1
 7087 0140 01       		.byte	0x1
 7088 0141 49       		.uleb128 0x49
 7089 0142 13       		.uleb128 0x13
 7090 0143 01       		.uleb128 0x1
 7091 0144 13       		.uleb128 0x13
 7092 0145 00       		.byte	0
 7093 0146 00       		.byte	0
 7094 0147 17       		.uleb128 0x17
 7095 0148 21       		.uleb128 0x21
 7096 0149 00       		.byte	0
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cckoGjaV.s 			page 147


 7097 014a 49       		.uleb128 0x49
 7098 014b 13       		.uleb128 0x13
 7099 014c 2F       		.uleb128 0x2f
 7100 014d 0B       		.uleb128 0xb
 7101 014e 00       		.byte	0
 7102 014f 00       		.byte	0
 7103 0150 18       		.uleb128 0x18
 7104 0151 34       		.uleb128 0x34
 7105 0152 00       		.byte	0
 7106 0153 03       		.uleb128 0x3
 7107 0154 0E       		.uleb128 0xe
 7108 0155 3A       		.uleb128 0x3a
 7109 0156 0B       		.uleb128 0xb
 7110 0157 3B       		.uleb128 0x3b
 7111 0158 0B       		.uleb128 0xb
 7112 0159 49       		.uleb128 0x49
 7113 015a 13       		.uleb128 0x13
 7114 015b 3F       		.uleb128 0x3f
 7115 015c 19       		.uleb128 0x19
 7116 015d 3C       		.uleb128 0x3c
 7117 015e 19       		.uleb128 0x19
 7118 015f 00       		.byte	0
 7119 0160 00       		.byte	0
 7120 0161 19       		.uleb128 0x19
 7121 0162 26       		.uleb128 0x26
 7122 0163 00       		.byte	0
 7123 0164 49       		.uleb128 0x49
 7124 0165 13       		.uleb128 0x13
 7125 0166 00       		.byte	0
 7126 0167 00       		.byte	0
 7127 0168 1A       		.uleb128 0x1a
 7128 0169 2E       		.uleb128 0x2e
 7129 016a 00       		.byte	0
 7130 016b 3F       		.uleb128 0x3f
 7131 016c 19       		.uleb128 0x19
 7132 016d 3C       		.uleb128 0x3c
 7133 016e 19       		.uleb128 0x19
 7134 016f 6E       		.uleb128 0x6e
 7135 0170 0E       		.uleb128 0xe
 7136 0171 03       		.uleb128 0x3
 7137 0172 0E       		.uleb128 0xe
 7138 0173 3A       		.uleb128 0x3a
 7139 0174 0B       		.uleb128 0xb
 7140 0175 3B       		.uleb128 0x3b
 7141 0176 0B       		.uleb128 0xb
 7142 0177 00       		.byte	0
 7143 0178 00       		.byte	0
 7144 0179 00       		.byte	0
 7145              		.section	.debug_loc,"",%progbits
 7146              	.Ldebug_loc0:
 7147              	.LLST0:
 7148 0000 DE010000 		.4byte	.LVL79
 7149 0004 E4010000 		.4byte	.LVL80
 7150 0008 0200     		.2byte	0x2
 7151 000a 30       		.byte	0x30
 7152 000b 9F       		.byte	0x9f
 7153 000c E4010000 		.4byte	.LVL80
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cckoGjaV.s 			page 148


 7154 0010 04020000 		.4byte	.LVL83
 7155 0014 0100     		.2byte	0x1
 7156 0016 52       		.byte	0x52
 7157 0017 00000000 		.4byte	0
 7158 001b 00000000 		.4byte	0
 7159              	.LLST1:
 7160 001f 78010000 		.4byte	.LVL65
 7161 0023 7C010000 		.4byte	.LVL66
 7162 0027 0200     		.2byte	0x2
 7163 0029 30       		.byte	0x30
 7164 002a 9F       		.byte	0x9f
 7165 002b 7C010000 		.4byte	.LVL66
 7166 002f B2010000 		.4byte	.LVL73
 7167 0033 0100     		.2byte	0x1
 7168 0035 54       		.byte	0x54
 7169 0036 00000000 		.4byte	0
 7170 003a 00000000 		.4byte	0
 7171              	.LLST2:
 7172 003e B0010000 		.4byte	.LVL72
 7173 0042 B4010000 		.4byte	.LVL74
 7174 0046 0200     		.2byte	0x2
 7175 0048 30       		.byte	0x30
 7176 0049 9F       		.byte	0x9f
 7177 004a B4010000 		.4byte	.LVL74
 7178 004e 08020000 		.4byte	.LVL85
 7179 0052 0100     		.2byte	0x1
 7180 0054 54       		.byte	0x54
 7181 0055 00000000 		.4byte	0
 7182 0059 00000000 		.4byte	0
 7183              	.LLST3:
 7184 005d DE010000 		.4byte	.LVL79
 7185 0061 E4010000 		.4byte	.LVL80
 7186 0065 0200     		.2byte	0x2
 7187 0067 30       		.byte	0x30
 7188 0068 9F       		.byte	0x9f
 7189 0069 E4010000 		.4byte	.LVL80
 7190 006d 06020000 		.4byte	.LVL84
 7191 0071 0100     		.2byte	0x1
 7192 0073 53       		.byte	0x53
 7193 0074 00000000 		.4byte	0
 7194 0078 00000000 		.4byte	0
 7195              	.LLST4:
 7196 007c 66020000 		.4byte	.LVL94
 7197 0080 4E030000 		.4byte	.LVL106
 7198 0084 0100     		.2byte	0x1
 7199 0086 54       		.byte	0x54
 7200 0087 00000000 		.4byte	0
 7201 008b 00000000 		.4byte	0
 7202              	.LLST5:
 7203 008f D0080000 		.4byte	.LVL198
 7204 0093 04090000 		.4byte	.LVL204
 7205 0097 0200     		.2byte	0x2
 7206 0099 31       		.byte	0x31
 7207 009a 9F       		.byte	0x9f
 7208 009b 00000000 		.4byte	0
 7209 009f 00000000 		.4byte	0
 7210              	.LLST6:
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cckoGjaV.s 			page 149


 7211 00a3 F6090000 		.4byte	.LVL225
 7212 00a7 100A0000 		.4byte	.LVL226
 7213 00ab 0100     		.2byte	0x1
 7214 00ad 52       		.byte	0x52
 7215 00ae 100A0000 		.4byte	.LVL226
 7216 00b2 190A0000 		.4byte	.LVL227-1
 7217 00b6 0500     		.2byte	0x5
 7218 00b8 03       		.byte	0x3
 7219 00b9 00000000 		.4byte	current_stage
 7220 00bd 00000000 		.4byte	0
 7221 00c1 00000000 		.4byte	0
 7222              		.section	.debug_aranges,"",%progbits
 7223 0000 34000000 		.4byte	0x34
 7224 0004 0200     		.2byte	0x2
 7225 0006 00000000 		.4byte	.Ldebug_info0
 7226 000a 04       		.byte	0x4
 7227 000b 00       		.byte	0
 7228 000c 0000     		.2byte	0
 7229 000e 0000     		.2byte	0
 7230 0010 00000000 		.4byte	.LFB64
 7231 0014 08000000 		.4byte	.LFE64-.LFB64
 7232 0018 00000000 		.4byte	.LFB65
 7233 001c 24000000 		.4byte	.LFE65-.LFB65
 7234 0020 00000000 		.4byte	.LFB66
 7235 0024 36000000 		.4byte	.LFE66-.LFB66
 7236 0028 00000000 		.4byte	.LFB67
 7237 002c A40B0000 		.4byte	.LFE67-.LFB67
 7238 0030 00000000 		.4byte	0
 7239 0034 00000000 		.4byte	0
 7240              		.section	.debug_ranges,"",%progbits
 7241              	.Ldebug_ranges0:
 7242 0000 DE010000 		.4byte	.LBB5
 7243 0004 E0010000 		.4byte	.LBE5
 7244 0008 E2010000 		.4byte	.LBB6
 7245 000c 02020000 		.4byte	.LBE6
 7246 0010 00000000 		.4byte	0
 7247 0014 00000000 		.4byte	0
 7248 0018 00000000 		.4byte	.LFB64
 7249 001c 08000000 		.4byte	.LFE64
 7250 0020 00000000 		.4byte	.LFB65
 7251 0024 24000000 		.4byte	.LFE65
 7252 0028 00000000 		.4byte	.LFB66
 7253 002c 36000000 		.4byte	.LFE66
 7254 0030 00000000 		.4byte	.LFB67
 7255 0034 A40B0000 		.4byte	.LFE67
 7256 0038 00000000 		.4byte	0
 7257 003c 00000000 		.4byte	0
 7258              		.section	.debug_line,"",%progbits
 7259              	.Ldebug_line0:
 7260 0000 6A050000 		.section	.debug_str,"MS",%progbits,1
 7260      02004503 
 7260      00000201 
 7260      FB0E0D00 
 7260      01010101 
 7261              	.LASF82:
 7262 0000 61726D4F 		.ascii	"armOpen\000"
 7262      70656E00 
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cckoGjaV.s 			page 150


 7263              	.LASF106:
 7264 0008 54696D65 		.ascii	"Timer_straight_adjust_Start\000"
 7264      725F7374 
 7264      72616967 
 7264      68745F61 
 7264      646A7573 
 7265              	.LASF70:
 7266 0024 756C7469 		.ascii	"ultimateDebugging\000"
 7266      6D617465 
 7266      44656275 
 7266      6767696E 
 7266      6700
 7267              	.LASF35:
 7268 0036 696E6974 		.ascii	"initial_tolerance\000"
 7268      69616C5F 
 7268      746F6C65 
 7268      72616E63 
 7268      6500
 7269              	.LASF66:
 7270 0048 4D6F746F 		.ascii	"Motor_Right_Driver_WriteCompare\000"
 7270      725F5269 
 7270      6768745F 
 7270      44726976 
 7270      65725F57 
 7271              	.LASF53:
 7272 0068 7075636B 		.ascii	"puck_west_clearance\000"
 7272      5F776573 
 7272      745F636C 
 7272      65617261 
 7272      6E636500 
 7273              	.LASF67:
 7274 007c 636F6C6F 		.ascii	"colourSensingOutput\000"
 7274      75725365 
 7274      6E73696E 
 7274      674F7574 
 7274      70757400 
 7275              	.LASF73:
 7276 0090 636F6C6F 		.ascii	"colourSensingInitialise\000"
 7276      75725365 
 7276      6E73696E 
 7276      67496E69 
 7276      7469616C 
 7277              	.LASF71:
 7278 00a8 73747261 		.ascii	"straightAdjust\000"
 7278      69676874 
 7278      41646A75 
 7278      737400
 7279              	.LASF32:
 7280 00b7 676C6F62 		.ascii	"global_encoder\000"
 7280      616C5F65 
 7280      6E636F64 
 7280      657200
 7281              	.LASF2:
 7282 00c6 73686F72 		.ascii	"short int\000"
 7282      7420696E 
 7282      7400
 7283              	.LASF50:
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cckoGjaV.s 			page 151


 7284 00d0 626C6F63 		.ascii	"block_east_clearance\000"
 7284      6B5F6561 
 7284      73745F63 
 7284      6C656172 
 7284      616E6365 
 7285              	.LASF102:
 7286 00e5 536F6E69 		.ascii	"Sonic_StartEx\000"
 7286      635F5374 
 7286      61727445 
 7286      7800
 7287              	.LASF99:
 7288 00f3 4D6F746F 		.ascii	"Motor_Right_Decoder_Start\000"
 7288      725F5269 
 7288      6768745F 
 7288      4465636F 
 7288      6465725F 
 7289              	.LASF107:
 7290 010d 54696D65 		.ascii	"Timer_straight_adjust_ReadStatusRegister\000"
 7290      725F7374 
 7290      72616967 
 7290      68745F61 
 7290      646A7573 
 7291              	.LASF98:
 7292 0136 4D6F746F 		.ascii	"Motor_Left_Decoder_Start\000"
 7292      725F4C65 
 7292      66745F44 
 7292      65636F64 
 7292      65725F53 
 7293              	.LASF14:
 7294 014f 6C6F6E67 		.ascii	"long double\000"
 7294      20646F75 
 7294      626C6500 
 7295              	.LASF52:
 7296 015b 7075636B 		.ascii	"puck_east_clearance\000"
 7296      5F656173 
 7296      745F636C 
 7296      65617261 
 7296      6E636500 
 7297              	.LASF48:
 7298 016f 7075636B 		.ascii	"puck_temp_pile\000"
 7298      5F74656D 
 7298      705F7069 
 7298      6C6500
 7299              	.LASF16:
 7300 017e 53746172 		.ascii	"StartIH\000"
 7300      74494800 
 7301              	.LASF33:
 7302 0186 676C6F62 		.ascii	"global_distance\000"
 7302      616C5F64 
 7302      69737461 
 7302      6E636500 
 7303              	.LASF104:
 7304 0196 53747261 		.ascii	"Straight_StartEx\000"
 7304      69676874 
 7304      5F537461 
 7304      72744578 
 7304      00
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cckoGjaV.s 			page 152


 7305              	.LASF40:
 7306 01a7 756C7472 		.ascii	"ultrasonic_flag\000"
 7306      61736F6E 
 7306      69635F66 
 7306      6C616700 
 7307              	.LASF39:
 7308 01b7 6D6F7669 		.ascii	"moving\000"
 7308      6E6700
 7309              	.LASF92:
 7310 01be 5261636B 		.ascii	"Rack_Servo_PWM_Sleep\000"
 7310      5F536572 
 7310      766F5F50 
 7310      574D5F53 
 7310      6C656570 
 7311              	.LASF101:
 7312 01d3 54696D65 		.ascii	"Timer_1_ReadStatusRegister\000"
 7312      725F315F 
 7312      52656164 
 7312      53746174 
 7312      75735265 
 7313              	.LASF90:
 7314 01ee 5261636B 		.ascii	"Rack_Servo_PWM_Start\000"
 7314      5F536572 
 7314      766F5F50 
 7314      574D5F53 
 7314      74617274 
 7315              	.LASF62:
 7316 0203 6D6F7665 		.ascii	"moveDynamic\000"
 7316      44796E61 
 7316      6D696300 
 7317              	.LASF95:
 7318 020f 47726970 		.ascii	"Gripper_Servo_PWM_Sleep\000"
 7318      7065725F 
 7318      53657276 
 7318      6F5F5057 
 7318      4D5F536C 
 7319              	.LASF45:
 7320 0227 626C6F63 		.ascii	"block_location\000"
 7320      6B5F6C6F 
 7320      63617469 
 7320      6F6E00
 7321              	.LASF93:
 7322 0236 47726970 		.ascii	"Gripper_Servo_PWM_Start\000"
 7322      7065725F 
 7322      53657276 
 7322      6F5F5057 
 7322      4D5F5374 
 7323              	.LASF22:
 7324 024e 7075636B 		.ascii	"puck_correct\000"
 7324      5F636F72 
 7324      72656374 
 7324      00
 7325              	.LASF57:
 7326 025b 756C7472 		.ascii	"ultrasonicInterruptHandler\000"
 7326      61736F6E 
 7326      6963496E 
 7326      74657272 
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cckoGjaV.s 			page 153


 7326      75707448 
 7327              	.LASF42:
 7328 0276 63757272 		.ascii	"current_stage\000"
 7328      656E745F 
 7328      73746167 
 7328      6500
 7329              	.LASF11:
 7330 0284 666C6F61 		.ascii	"float\000"
 7330      7400
 7331              	.LASF78:
 7332 028a 6368616E 		.ascii	"changeHeightToPuck\000"
 7332      67654865 
 7332      69676874 
 7332      546F5075 
 7332      636B00
 7333              	.LASF6:
 7334 029d 6C6F6E67 		.ascii	"long long int\000"
 7334      206C6F6E 
 7334      6720696E 
 7334      7400
 7335              	.LASF65:
 7336 02ab 4D6F746F 		.ascii	"Motor_Right_Driver_Wakeup\000"
 7336      725F5269 
 7336      6768745F 
 7336      44726976 
 7336      65725F57 
 7337              	.LASF18:
 7338 02c5 626C6F63 		.ascii	"block_and_puck_edge_midpoint\000"
 7338      6B5F616E 
 7338      645F7075 
 7338      636B5F65 
 7338      6467655F 
 7339              	.LASF61:
 7340 02e2 4D6F746F 		.ascii	"Motor_Right_Driver_Sleep\000"
 7340      725F5269 
 7340      6768745F 
 7340      44726976 
 7340      65725F53 
 7341              	.LASF85:
 7342 02fb 4144435F 		.ascii	"ADC_Start\000"
 7342      53746172 
 7342      7400
 7343              	.LASF4:
 7344 0305 6C6F6E67 		.ascii	"long int\000"
 7344      20696E74 
 7344      00
 7345              	.LASF25:
 7346 030e 696E7465 		.ascii	"internal_orientation\000"
 7346      726E616C 
 7346      5F6F7269 
 7346      656E7461 
 7346      74696F6E 
 7347              	.LASF97:
 7348 0323 4D6F746F 		.ascii	"Motor_Right_Driver_Start\000"
 7348      725F5269 
 7348      6768745F 
 7348      44726976 
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cckoGjaV.s 			page 154


 7348      65725F53 
 7349              	.LASF19:
 7350 033c 7075636B 		.ascii	"puck_construction_plan_index\000"
 7350      5F636F6E 
 7350      73747275 
 7350      6374696F 
 7350      6E5F706C 
 7351              	.LASF68:
 7352 0359 626C696E 		.ascii	"blinkLED\000"
 7352      6B4C4544 
 7352      00
 7353              	.LASF44:
 7354 0362 73616665 		.ascii	"safety_override\000"
 7354      74795F6F 
 7354      76657272 
 7354      69646500 
 7355              	.LASF84:
 7356 0372 55415254 		.ascii	"UART_1_Start\000"
 7356      5F315F53 
 7356      74617274 
 7356      00
 7357              	.LASF74:
 7358 037f 636F6E74 		.ascii	"control_photodiode_Write\000"
 7358      726F6C5F 
 7358      70686F74 
 7358      6F64696F 
 7358      64655F57 
 7359              	.LASF17:
 7360 0398 53414948 		.ascii	"SAIH\000"
 7360      00
 7361              	.LASF91:
 7362 039d 5261636B 		.ascii	"Rack_Servo_PWM_WriteCompare\000"
 7362      5F536572 
 7362      766F5F50 
 7362      574D5F57 
 7362      72697465 
 7363              	.LASF38:
 7364 03b9 73746174 		.ascii	"state\000"
 7364      6500
 7365              	.LASF77:
 7366 03bf 6368616E 		.ascii	"changeOrientation\000"
 7366      67654F72 
 7366      69656E74 
 7366      6174696F 
 7366      6E00
 7367              	.LASF1:
 7368 03d1 756E7369 		.ascii	"unsigned char\000"
 7368      676E6564 
 7368      20636861 
 7368      7200
 7369              	.LASF37:
 7370 03df 636F6C6F 		.ascii	"colour_flag\000"
 7370      75725F66 
 7370      6C616700 
 7371              	.LASF60:
 7372 03eb 4D6F746F 		.ascii	"Motor_Left_Driver_Sleep\000"
 7372      725F4C65 
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cckoGjaV.s 			page 155


 7372      66745F44 
 7372      72697665 
 7372      725F536C 
 7373              	.LASF26:
 7374 0403 7075636B 		.ascii	"puck_rack_scans\000"
 7374      5F726163 
 7374      6B5F7363 
 7374      616E7300 
 7375              	.LASF79:
 7376 0413 6D6F7665 		.ascii	"moveUntilPuck\000"
 7376      556E7469 
 7376      6C507563 
 7376      6B00
 7377              	.LASF96:
 7378 0421 4D6F746F 		.ascii	"Motor_Left_Driver_Start\000"
 7378      725F4C65 
 7378      66745F44 
 7378      72697665 
 7378      725F5374 
 7379              	.LASF46:
 7380 0439 7075636B 		.ascii	"puck_location\000"
 7380      5F6C6F63 
 7380      6174696F 
 7380      6E00
 7381              	.LASF75:
 7382 0447 7472616E 		.ascii	"translateMoveDynamic\000"
 7382      736C6174 
 7382      654D6F76 
 7382      6544796E 
 7382      616D6963 
 7383              	.LASF69:
 7384 045c 73707269 		.ascii	"sprintf\000"
 7384      6E746600 
 7385              	.LASF41:
 7386 0464 7075636B 		.ascii	"puck_construction_plan\000"
 7386      5F636F6E 
 7386      73747275 
 7386      6374696F 
 7386      6E5F706C 
 7387              	.LASF87:
 7388 047b 49444143 		.ascii	"IDAC8_1_SetRange\000"
 7388      385F315F 
 7388      53657452 
 7388      616E6765 
 7388      00
 7389              	.LASF0:
 7390 048c 7369676E 		.ascii	"signed char\000"
 7390      65642063 
 7390      68617200 
 7391              	.LASF28:
 7392 0498 626C6F63 		.ascii	"block_edge_location\000"
 7392      6B5F6564 
 7392      67655F6C 
 7392      6F636174 
 7392      696F6E00 
 7393              	.LASF7:
 7394 04ac 6C6F6E67 		.ascii	"long long unsigned int\000"
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cckoGjaV.s 			page 156


 7394      206C6F6E 
 7394      6720756E 
 7394      7369676E 
 7394      65642069 
 7395              	.LASF89:
 7396 04c3 636F6E74 		.ascii	"control_led_Write\000"
 7396      726F6C5F 
 7396      6C65645F 
 7396      57726974 
 7396      6500
 7397              	.LASF8:
 7398 04d5 756E7369 		.ascii	"unsigned int\000"
 7398      676E6564 
 7398      20696E74 
 7398      00
 7399              	.LASF54:
 7400 04e2 69646163 		.ascii	"idac_value\000"
 7400      5F76616C 
 7400      756500
 7401              	.LASF5:
 7402 04ed 6C6F6E67 		.ascii	"long unsigned int\000"
 7402      20756E73 
 7402      69676E65 
 7402      6420696E 
 7402      7400
 7403              	.LASF86:
 7404 04ff 49444143 		.ascii	"IDAC8_1_Start\000"
 7404      385F315F 
 7404      53746172 
 7404      7400
 7405              	.LASF21:
 7406 050d 626C6F63 		.ascii	"block_threshold\000"
 7406      6B5F7468 
 7406      72657368 
 7406      6F6C6400 
 7407              	.LASF27:
 7408 051d 7075636B 		.ascii	"puck_rack_west_offsets\000"
 7408      5F726163 
 7408      6B5F7765 
 7408      73745F6F 
 7408      66667365 
 7409              	.LASF94:
 7410 0534 47726970 		.ascii	"Gripper_Servo_PWM_WriteCompare\000"
 7410      7065725F 
 7410      53657276 
 7410      6F5F5057 
 7410      4D5F5772 
 7411              	.LASF83:
 7412 0553 5449415F 		.ascii	"TIA_1_Start\000"
 7412      315F5374 
 7412      61727400 
 7413              	.LASF76:
 7414 055f 64697374 		.ascii	"distanceSensor\000"
 7414      616E6365 
 7414      53656E73 
 7414      6F7200
 7415              	.LASF13:
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cckoGjaV.s 			page 157


 7416 056e 63686172 		.ascii	"char\000"
 7416      00
 7417              	.LASF111:
 7418 0573 6D61696E 		.ascii	"main\000"
 7418      00
 7419              	.LASF10:
 7420 0578 696E7433 		.ascii	"int32_t\000"
 7420      325F7400 
 7421              	.LASF80:
 7422 0580 61726D43 		.ascii	"armClose\000"
 7422      6C6F7365 
 7422      00
 7423              	.LASF55:
 7424 0589 504C414E 		.ascii	"PLAN_SCAN_VERTICAL\000"
 7424      5F534341 
 7424      4E5F5645 
 7424      52544943 
 7424      414C00
 7425              	.LASF43:
 7426 059c 636F6C6F 		.ascii	"colour_sensing_algorithm\000"
 7426      75725F73 
 7426      656E7369 
 7426      6E675F61 
 7426      6C676F72 
 7427              	.LASF36:
 7428 05b5 7365745F 		.ascii	"set_path\000"
 7428      70617468 
 7428      00
 7429              	.LASF100:
 7430 05be 54696D65 		.ascii	"Timer_1_Start\000"
 7430      725F315F 
 7430      53746172 
 7430      7400
 7431              	.LASF81:
 7432 05cc 6D6F7665 		.ascii	"moveForwardThenBackward\000"
 7432      466F7277 
 7432      61726454 
 7432      68656E42 
 7432      61636B77 
 7433              	.LASF51:
 7434 05e4 626C6F63 		.ascii	"block_west_clearance\000"
 7434      6B5F7765 
 7434      73745F63 
 7434      6C656172 
 7434      616E6365 
 7435              	.LASF88:
 7436 05f9 49444143 		.ascii	"IDAC8_1_SetValue\000"
 7436      385F315F 
 7436      53657456 
 7436      616C7565 
 7436      00
 7437              	.LASF109:
 7438 060a 6D61696E 		.ascii	"main.c\000"
 7438      2E6300
 7439              	.LASF49:
 7440 0611 62656769 		.ascii	"begin_navigation\000"
 7440      6E5F6E61 
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cckoGjaV.s 			page 158


 7440      76696761 
 7440      74696F6E 
 7440      00
 7441              	.LASF103:
 7442 0622 53746172 		.ascii	"Start_StartEx\000"
 7442      745F5374 
 7442      61727445 
 7442      7800
 7443              	.LASF20:
 7444 0630 7075636B 		.ascii	"puck_rack_index\000"
 7444      5F726163 
 7444      6B5F696E 
 7444      64657800 
 7445              	.LASF59:
 7446 0640 55415254 		.ascii	"UART_1_PutString\000"
 7446      5F315F50 
 7446      75745374 
 7446      72696E67 
 7446      00
 7447              	.LASF31:
 7448 0651 73656E73 		.ascii	"sensor_distances\000"
 7448      6F725F64 
 7448      69737461 
 7448      6E636573 
 7448      00
 7449              	.LASF3:
 7450 0662 73686F72 		.ascii	"short unsigned int\000"
 7450      7420756E 
 7450      7369676E 
 7450      65642069 
 7450      6E7400
 7451              	.LASF23:
 7452 0675 68656C64 		.ascii	"heldColour\000"
 7452      436F6C6F 
 7452      757200
 7453              	.LASF34:
 7454 0680 70726566 		.ascii	"preferential_route\000"
 7454      6572656E 
 7454      7469616C 
 7454      5F726F75 
 7454      746500
 7455              	.LASF112:
 7456 0693 7075636B 		.ascii	"puck_scan\000"
 7456      5F736361 
 7456      6E00
 7457              	.LASF9:
 7458 069d 5F5F696E 		.ascii	"__int32_t\000"
 7458      7433325F 
 7458      7400
 7459              	.LASF110:
 7460 06a7 433A5C55 		.ascii	"C:\\Users\\Misha\\Documents\\PSoC Creator\\ECE3091_"
 7460      73657273 
 7460      5C4D6973 
 7460      68615C44 
 7460      6F63756D 
 7461 06d5 47726F75 		.ascii	"Group17\\Group17RobotReal\\Group17Robot.cydsn\000"
 7461      7031375C 
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cckoGjaV.s 			page 159


 7461      47726F75 
 7461      70313752 
 7461      6F626F74 
 7462              	.LASF105:
 7463 0701 73616665 		.ascii	"safetyDistanceCheck\000"
 7463      74794469 
 7463      7374616E 
 7463      63654368 
 7463      65636B00 
 7464              	.LASF72:
 7465 0715 6D6F7665 		.ascii	"moveUntil\000"
 7465      556E7469 
 7465      6C00
 7466              	.LASF15:
 7467 071f 73697A65 		.ascii	"sizetype\000"
 7467      74797065 
 7467      00
 7468              	.LASF30:
 7469 0728 6F757470 		.ascii	"output\000"
 7469      757400
 7470              	.LASF12:
 7471 072f 646F7562 		.ascii	"double\000"
 7471      6C6500
 7472              	.LASF56:
 7473 0736 64697374 		.ascii	"distance_returned_global\000"
 7473      616E6365 
 7473      5F726574 
 7473      75726E65 
 7473      645F676C 
 7474              	.LASF24:
 7475 074f 49544D5F 		.ascii	"ITM_RxBuffer\000"
 7475      52784275 
 7475      66666572 
 7475      00
 7476              	.LASF108:
 7477 075c 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 7477      43313120 
 7477      352E342E 
 7477      31203230 
 7477      31363036 
 7478 078f 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 7478      20726576 
 7478      6973696F 
 7478      6E203233 
 7478      37373135 
 7479 07c2 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 7479      66756E63 
 7479      74696F6E 
 7479      2D736563 
 7479      74696F6E 
 7480              	.LASF58:
 7481 07ea 43794465 		.ascii	"CyDelay\000"
 7481      6C617900 
 7482              	.LASF47:
 7483 07f2 63757272 		.ascii	"current_puck_stack_size\000"
 7483      656E745F 
 7483      7075636B 
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cckoGjaV.s 			page 160


 7483      5F737461 
 7483      636B5F73 
 7484              	.LASF29:
 7485 080a 696E6974 		.ascii	"initialisation\000"
 7485      69616C69 
 7485      73617469 
 7485      6F6E00
 7486              	.LASF64:
 7487 0819 4D6F746F 		.ascii	"Motor_Left_Driver_WriteCompare\000"
 7487      725F4C65 
 7487      66745F44 
 7487      72697665 
 7487      725F5772 
 7488              	.LASF63:
 7489 0838 4D6F746F 		.ascii	"Motor_Left_Driver_Wakeup\000"
 7489      725F4C65 
 7489      66745F44 
 7489      72697665 
 7489      725F5761 
 7490              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
