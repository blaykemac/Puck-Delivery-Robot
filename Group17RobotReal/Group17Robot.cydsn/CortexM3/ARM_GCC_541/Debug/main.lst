ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\cc8WnjKS.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.Encoder_Counts_1_IH,"ax",%progbits
  20              		.align	2
  21              		.global	Encoder_Counts_1_IH
  22              		.thumb
  23              		.thumb_func
  24              		.type	Encoder_Counts_1_IH, %function
  25              	Encoder_Counts_1_IH:
  26              	.LFB64:
  27              		.file 1 "main.c"
   1:main.c        **** 
   2:main.c        **** /* ========================================
   3:main.c        ****  *
   4:main.c        ****  * Copyright YOUR COMPANY, THE YEAR
   5:main.c        ****  * All Rights Reserved
   6:main.c        ****  * UNPUBLISHED, LICENSED SOFTWARE.
   7:main.c        ****  *
   8:main.c        ****  * CONFIDENTIAL AND PROPRIETARY INFORMATION
   9:main.c        ****  * WHICH IS THE PROPERTY OF your company.
  10:main.c        ****  *
  11:main.c        ****  * ========================================
  12:main.c        **** */
  13:main.c        **** 
  14:main.c        **** #include "project.h"
  15:main.c        **** 
  16:main.c        **** // * C LIBRARIES * // 
  17:main.c        **** #include <stdio.h>
  18:main.c        **** #include <math.h>
  19:main.c        **** 
  20:main.c        **** // * OUR LIBRARIES * //
  21:main.c        **** #include "main.h"
  22:main.c        **** #include "colour.h"
  23:main.c        **** #include "ultrasonic.h" 
  24:main.c        **** #include "dcmotor.h"
  25:main.c        **** #include "servo.h"
  26:main.c        **** 
  27:main.c        **** 
  28:main.c        **** 
  29:main.c        **** //global variable currentPosition and currentOrientation (in main). Declare as externs in 
  30:main.c        **** //dcmotor, I guess
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\cc8WnjKS.s 			page 2


  31:main.c        **** float currentPosition[2] = {0,0};
  32:main.c        **** float desiredPosition[2];
  33:main.c        **** int currentOrientation = 90; //in degrees (convert to radians when needed)- 90 assuming we start fa
  34:main.c        **** int desiredOrientation;
  35:main.c        **** int M1_FD; //The four values shown here will be the duty cycles of the motors
  36:main.c        **** int M1_BD; //There are times when parts of the code (such as the driftCorrect function)
  37:main.c        **** int M2_FD; //need to know about the duty cycles. So we make the duty cycles a globally 
  38:main.c        **** int M2_BD; //known variable
  39:main.c        **** short int motor1Enable = 0; //These two will be on if the motors are on
  40:main.c        **** short int motor2Enable = 0;
  41:main.c        **** int M1_FD; //The four values shown here will be the duty cycles of the motors
  42:main.c        **** int M1_BD; //There are times when parts of the code (such as the driftCorrect function)
  43:main.c        **** int M2_FD; //need to know about the duty cycles. So we make the duty cycles a globally 
  44:main.c        **** int M2_BD; //known variable
  45:main.c        **** int motor1EncoderCounts; //These two variables will allow the entire program to keep 
  46:main.c        **** int motor2EncoderCounts; //track of how many turns the motors have spun 
  47:main.c        **** short int moveNow = 1; //This is a flag that lets the main program tell the moving functions
  48:main.c        **** //whether we want the robot to be moving or not. For example, when we need to operate servos
  49:main.c        **** //the main program would set moveNow to FALSE.
  50:main.c        **** 
  51:main.c        **** //The four flags below let the rest of the program know if the robot is trying to drive 
  52:main.c        **** //forward or back, turn left or right. At the start of every motion, turn these flags on
  53:main.c        **** //at the end turn them off.
  54:main.c        **** short int drivingForwardFlag = 0;
  55:main.c        **** short int drivingBackwardFlag = 0;
  56:main.c        **** short int turningLeftFlag = 0;
  57:main.c        **** short int turningRightFlag = 0;
  58:main.c        **** 
  59:main.c        **** //These flags will be used by the main program to allow the robot to move in certain directions
  60:main.c        **** short int moveLeftAllowed;
  61:main.c        **** short int moveRightAllowed;
  62:main.c        **** short int moveForwardAllowed;
  63:main.c        **** short int moveBackwardAllowed;
  64:main.c        **** 
  65:main.c        **** //Interrupt service routines for dcmotor function
  66:main.c        **** CY_ISR(Encoder_Counts_1_IH){
  28              		.loc 1 66 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 08B5     		push	{r3, lr}
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 3, -8
  35              		.cfi_offset 14, -4
  67:main.c        ****     stopMotor1AndUpdate();
  36              		.loc 1 67 0
  37 0002 FFF7FEFF 		bl	stopMotor1AndUpdate
  38              	.LVL0:
  39 0006 08BD     		pop	{r3, pc}
  40              		.cfi_endproc
  41              	.LFE64:
  42              		.size	Encoder_Counts_1_IH, .-Encoder_Counts_1_IH
  43              		.section	.text.Encoder_Counts_2_IH,"ax",%progbits
  44              		.align	2
  45              		.global	Encoder_Counts_2_IH
  46              		.thumb
  47              		.thumb_func
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\cc8WnjKS.s 			page 3


  48              		.type	Encoder_Counts_2_IH, %function
  49              	Encoder_Counts_2_IH:
  50              	.LFB65:
  68:main.c        **** }
  69:main.c        **** 
  70:main.c        **** CY_ISR(Encoder_Counts_2_IH){
  51              		.loc 1 70 0
  52              		.cfi_startproc
  53              		@ args = 0, pretend = 0, frame = 0
  54              		@ frame_needed = 0, uses_anonymous_args = 0
  55 0000 08B5     		push	{r3, lr}
  56              		.cfi_def_cfa_offset 8
  57              		.cfi_offset 3, -8
  58              		.cfi_offset 14, -4
  71:main.c        ****     stopMotor2AndUpdate();
  59              		.loc 1 71 0
  60 0002 FFF7FEFF 		bl	stopMotor2AndUpdate
  61              	.LVL1:
  62 0006 08BD     		pop	{r3, pc}
  63              		.cfi_endproc
  64              	.LFE65:
  65              		.size	Encoder_Counts_2_IH, .-Encoder_Counts_2_IH
  66              		.section	.text.Drift_Check_IH,"ax",%progbits
  67              		.align	2
  68              		.global	Drift_Check_IH
  69              		.thumb
  70              		.thumb_func
  71              		.type	Drift_Check_IH, %function
  72              	Drift_Check_IH:
  73              	.LFB66:
  72:main.c        **** }
  73:main.c        **** 
  74:main.c        **** CY_ISR(Drift_Check_IH){    
  74              		.loc 1 74 0
  75              		.cfi_startproc
  76              		@ args = 0, pretend = 0, frame = 0
  77              		@ frame_needed = 0, uses_anonymous_args = 0
  78 0000 08B5     		push	{r3, lr}
  79              		.cfi_def_cfa_offset 8
  80              		.cfi_offset 3, -8
  81              		.cfi_offset 14, -4
  75:main.c        ****     Drift_Check_Timer_ReadStatusRegister(); //Clears the interrupt
  82              		.loc 1 75 0
  83 0002 FFF7FEFF 		bl	Drift_Check_Timer_ReadStatusRegister
  84              	.LVL2:
  76:main.c        ****     Drift_Check_Timer_Stop(); //Stops the timer
  85              		.loc 1 76 0
  86 0006 FFF7FEFF 		bl	Drift_Check_Timer_Stop
  87              	.LVL3:
  77:main.c        ****     motor1EncoderCounts = Motor_1_Encoder_Counts_ReadCounter();
  88              		.loc 1 77 0
  89 000a FFF7FEFF 		bl	Motor_1_Encoder_Counts_ReadCounter
  90              	.LVL4:
  91 000e 044B     		ldr	r3, .L7
  92 0010 1860     		str	r0, [r3]
  78:main.c        ****     motor2EncoderCounts = Motor_2_Encoder_Counts_ReadCounter();
  93              		.loc 1 78 0
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\cc8WnjKS.s 			page 4


  94 0012 FFF7FEFF 		bl	Motor_2_Encoder_Counts_ReadCounter
  95              	.LVL5:
  96 0016 034B     		ldr	r3, .L7+4
  97 0018 1860     		str	r0, [r3]
  79:main.c        ****     driftCorrect(); //Does checking
  98              		.loc 1 79 0
  99 001a FFF7FEFF 		bl	driftCorrect
 100              	.LVL6:
 101 001e 08BD     		pop	{r3, pc}
 102              	.L8:
 103              		.align	2
 104              	.L7:
 105 0020 00000000 		.word	motor1EncoderCounts
 106 0024 00000000 		.word	motor2EncoderCounts
 107              		.cfi_endproc
 108              	.LFE66:
 109              		.size	Drift_Check_IH, .-Drift_Check_IH
 110              		.section	.text.TIH,"ax",%progbits
 111              		.align	2
 112              		.global	TIH
 113              		.thumb
 114              		.thumb_func
 115              		.type	TIH, %function
 116              	TIH:
 117              	.LFB67:
  80:main.c        **** }
  81:main.c        **** 
  82:main.c        **** // * VARIABLES * //
  83:main.c        **** int idac_value = 0;
  84:main.c        **** int colour_flag = 1;                    // sets which photodiode to use 
  85:main.c        **** extern float ultrasonic_distances[5];
  86:main.c        **** int beginNavigation = 0;
  87:main.c        **** 
  88:main.c        **** int state = STATE_SCAN_PLAN;
  89:main.c        **** 
  90:main.c        **** int running = 1;
  91:main.c        **** 
  92:main.c        **** int sweeping = 0;
  93:main.c        **** 
  94:main.c        **** int pathToPucks;
  95:main.c        **** int pathPastBlock;
  96:main.c        **** 
  97:main.c        **** float block_edge_location[4] = {0,0,0,0}; // N E S W
  98:main.c        **** 
  99:main.c        **** int currentPuckStackSize = 0;
 100:main.c        **** 
 101:main.c        **** // Puck Construction Scanning
 102:main.c        **** int puckRackColours[5] = {0,0,0,0,0}; // 5 slots in puck rack.
 103:main.c        **** int currentPuckRackScanningIndex = 0;
 104:main.c        **** int puckRackOffsetsFromWest[5] = {PUCK_RACK_0_WEST_DISTANCE,
 105:main.c        ****                                 PUCK_RACK_1_WEST_DISTANCE,
 106:main.c        ****                                 PUCK_RACK_2_WEST_DISTANCE,
 107:main.c        ****                                 PUCK_RACK_3_WEST_DISTANCE,
 108:main.c        ****                                 PUCK_RACK_4_WEST_DISTANCE };
 109:main.c        **** 
 110:main.c        **** 
 111:main.c        **** // * INTERRUPT HANDLING * // 
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\cc8WnjKS.s 			page 5


 112:main.c        **** CY_ISR(TIH)                             // Ultrasonic ISR Definition
 113:main.c        **** {
 118              		.loc 1 113 0
 119              		.cfi_startproc
 120              		@ args = 0, pretend = 0, frame = 0
 121              		@ frame_needed = 0, uses_anonymous_args = 0
 122 0000 08B5     		push	{r3, lr}
 123              		.cfi_def_cfa_offset 8
 124              		.cfi_offset 3, -8
 125              		.cfi_offset 14, -4
 114:main.c        ****     ultrasonicInterruptHandler();
 126              		.loc 1 114 0
 127 0002 FFF7FEFF 		bl	ultrasonicInterruptHandler
 128              	.LVL7:
 129 0006 08BD     		pop	{r3, pc}
 130              		.cfi_endproc
 131              	.LFE67:
 132              		.size	TIH, .-TIH
 133              		.section	.text.StartIH,"ax",%progbits
 134              		.align	2
 135              		.global	StartIH
 136              		.thumb
 137              		.thumb_func
 138              		.type	StartIH, %function
 139              	StartIH:
 140              	.LFB68:
 115:main.c        **** }
 116:main.c        **** 
 117:main.c        **** CY_ISR(StartIH)                             // Ultrasonic ISR Definition
 118:main.c        **** {
 141              		.loc 1 118 0
 142              		.cfi_startproc
 143              		@ args = 0, pretend = 0, frame = 0
 144              		@ frame_needed = 0, uses_anonymous_args = 0
 145 0000 08B5     		push	{r3, lr}
 146              		.cfi_def_cfa_offset 8
 147              		.cfi_offset 3, -8
 148              		.cfi_offset 14, -4
 119:main.c        ****     CyDelay(100);
 149              		.loc 1 119 0
 150 0002 6420     		movs	r0, #100
 151 0004 FFF7FEFF 		bl	CyDelay
 152              	.LVL8:
 120:main.c        ****     
 121:main.c        ****     beginNavigation = 1;
 153              		.loc 1 121 0
 154 0008 0122     		movs	r2, #1
 155 000a 034B     		ldr	r3, .L13
 156 000c 1A60     		str	r2, [r3]
 122:main.c        ****     colour_flag = 0; 
 157              		.loc 1 122 0
 158 000e 0022     		movs	r2, #0
 159 0010 024B     		ldr	r3, .L13+4
 160 0012 1A60     		str	r2, [r3]
 161 0014 08BD     		pop	{r3, pc}
 162              	.L14:
 163 0016 00BF     		.align	2
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\cc8WnjKS.s 			page 6


 164              	.L13:
 165 0018 00000000 		.word	.LANCHOR0
 166 001c 00000000 		.word	.LANCHOR1
 167              		.cfi_endproc
 168              	.LFE68:
 169              		.size	StartIH, .-StartIH
 170              		.global	__aeabi_fcmpge
 171              		.section	.text.main,"ax",%progbits
 172              		.align	2
 173              		.global	main
 174              		.thumb
 175              		.thumb_func
 176              		.type	main, %function
 177              	main:
 178              	.LFB69:
 123:main.c        **** }
 124:main.c        ****                     
 125:main.c        **** int main(void)
 126:main.c        **** {
 179              		.loc 1 126 0
 180              		.cfi_startproc
 181              		@ args = 0, pretend = 0, frame = 0
 182              		@ frame_needed = 0, uses_anonymous_args = 0
 183 0000 10B5     		push	{r4, lr}
 184              		.cfi_def_cfa_offset 8
 185              		.cfi_offset 4, -8
 186              		.cfi_offset 14, -4
 127:main.c        ****     CyGlobalIntEnable; /* Enable global interrupts. */
 187              		.loc 1 127 0
 188              		.syntax unified
 189              	@ 127 "main.c" 1
 190 0002 62B6     		CPSIE   i
 191              	@ 0 "" 2
 128:main.c        **** 
 129:main.c        ****     /* Place your initialization/startup code here (e.g. MyInst_Start()) */
 130:main.c        ****     TIA_1_Start();
 192              		.loc 1 130 0
 193              		.thumb
 194              		.syntax unified
 195 0004 FFF7FEFF 		bl	TIA_1_Start
 196              	.LVL9:
 131:main.c        ****     UART_1_Start();
 197              		.loc 1 131 0
 198 0008 FFF7FEFF 		bl	UART_1_Start
 199              	.LVL10:
 132:main.c        ****     UART_1_PutString("UART commencing... \n");
 200              		.loc 1 132 0
 201 000c 5D48     		ldr	r0, .L34
 202 000e FFF7FEFF 		bl	UART_1_PutString
 203              	.LVL11:
 133:main.c        ****     ADC_Start();
 204              		.loc 1 133 0
 205 0012 FFF7FEFF 		bl	ADC_Start
 206              	.LVL12:
 134:main.c        ****     IDAC8_1_Start();
 207              		.loc 1 134 0
 208 0016 FFF7FEFF 		bl	IDAC8_1_Start
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\cc8WnjKS.s 			page 7


 209              	.LVL13:
 135:main.c        ****     
 136:main.c        ****     // IDAC initialisation: 
 137:main.c        ****     IDAC8_1_SetRange(IDAC8_1_RANGE_32uA);       // Sets the range between 0 and 32uA
 210              		.loc 1 137 0
 211 001a 0020     		movs	r0, #0
 212 001c FFF7FEFF 		bl	IDAC8_1_SetRange
 213              	.LVL14:
 138:main.c        ****     IDAC8_1_SetValue(idac_value);               // set a value between 0 and 255
 214              		.loc 1 138 0
 215 0020 594C     		ldr	r4, .L34+4
 216 0022 2079     		ldrb	r0, [r4, #4]	@ zero_extendqisi2
 217 0024 FFF7FEFF 		bl	IDAC8_1_SetValue
 218              	.LVL15:
 139:main.c        ****     
 140:main.c        ****     // Colour Sensing Initialisation:
 141:main.c        ****     PWM_colour_Start();                         // Starts the PWM
 219              		.loc 1 141 0
 220 0028 FFF7FEFF 		bl	PWM_colour_Start
 221              	.LVL16:
 142:main.c        ****     PWM_colour_Sleep();                         // Puts it to sleep until we need it
 222              		.loc 1 142 0
 223 002c FFF7FEFF 		bl	PWM_colour_Sleep
 224              	.LVL17:
 143:main.c        ****     //RGB1Initialise();                         // Initialise 2nd RGB
 144:main.c        ****     //RGB2Initialise();                         // Initialise 2nd RGB
 145:main.c        ****     ColourIntialiseViaHardware();               // Initialises via hardware 
 225              		.loc 1 145 0
 226 0030 FFF7FEFF 		bl	ColourIntialiseViaHardware
 227              	.LVL18:
 146:main.c        ****     
 147:main.c        ****     // Ultrasonic Initialisation: 
 148:main.c        ****     
 149:main.c        ****         
 150:main.c        ****     // Timer and ISR instantiation
 151:main.c        ****     Timer_1_Start();
 228              		.loc 1 151 0
 229 0034 FFF7FEFF 		bl	Timer_1_Start
 230              	.LVL19:
 152:main.c        ****     Timer_1_ReadStatusRegister();
 231              		.loc 1 152 0
 232 0038 FFF7FEFF 		bl	Timer_1_ReadStatusRegister
 233              	.LVL20:
 153:main.c        ****     Sonic_StartEx(TIH);
 234              		.loc 1 153 0
 235 003c 5348     		ldr	r0, .L34+8
 236 003e FFF7FEFF 		bl	Sonic_StartEx
 237              	.LVL21:
 154:main.c        ****     Start_StartEx(StartIH);
 238              		.loc 1 154 0
 239 0042 5348     		ldr	r0, .L34+12
 240 0044 FFF7FEFF 		bl	Start_StartEx
 241              	.LVL22:
 155:main.c        ****     beginNavigation = 0;
 242              		.loc 1 155 0
 243 0048 0023     		movs	r3, #0
 244 004a 2360     		str	r3, [r4]
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\cc8WnjKS.s 			page 8


 245              	.LVL23:
 156:main.c        ****     int tmp = 0;
 157:main.c        ****     
 158:main.c        ****     //Initialising DC motors
 159:main.c        ****     Motor_1_driver_Start();
 246              		.loc 1 159 0
 247 004c FFF7FEFF 		bl	Motor_1_driver_Start
 248              	.LVL24:
 160:main.c        ****     Motor_2_driver_Start();
 249              		.loc 1 160 0
 250 0050 FFF7FEFF 		bl	Motor_2_driver_Start
 251              	.LVL25:
 161:main.c        ****     motorDutyCycleUpdate(0,0,0,0);//Have the motors stand still
 252              		.loc 1 161 0
 253 0054 0020     		movs	r0, #0
 254 0056 0346     		mov	r3, r0
 255 0058 0246     		mov	r2, r0
 256 005a 0146     		mov	r1, r0
 257 005c FFF7FEFF 		bl	motorDutyCycleUpdate
 258              	.LVL26:
 162:main.c        ****     
 163:main.c        ****     //Initialising counters
 164:main.c        ****     Motor_1_Encoder_Counts_Start();
 259              		.loc 1 164 0
 260 0060 FFF7FEFF 		bl	Motor_1_Encoder_Counts_Start
 261              	.LVL27:
 165:main.c        ****     Motor_2_Encoder_Counts_Start();
 262              		.loc 1 165 0
 263 0064 FFF7FEFF 		bl	Motor_2_Encoder_Counts_Start
 264              	.LVL28:
 166:main.c        ****     
 167:main.c        ****     //Initialising timers
 168:main.c        ****     Drift_Check_Timer_Start();
 265              		.loc 1 168 0
 266 0068 FFF7FEFF 		bl	Drift_Check_Timer_Start
 267              	.LVL29:
 169:main.c        ****     
 170:main.c        ****     //Starts and enables the interrupts for the motor encoder counts
 171:main.c        ****     Encoder_Counts_1_Interrupt_StartEx(Encoder_Counts_1_IH); 
 268              		.loc 1 171 0
 269 006c 4948     		ldr	r0, .L34+16
 270 006e FFF7FEFF 		bl	Encoder_Counts_1_Interrupt_StartEx
 271              	.LVL30:
 172:main.c        ****     Encoder_Counts_2_Interrupt_StartEx(Encoder_Counts_2_IH);
 272              		.loc 1 172 0
 273 0072 4948     		ldr	r0, .L34+20
 274 0074 FFF7FEFF 		bl	Encoder_Counts_2_Interrupt_StartEx
 275              	.LVL31:
 173:main.c        ****     Drift_Check_Interrupt_StartEx(Drift_Check_IH);		
 276              		.loc 1 173 0
 277 0078 4848     		ldr	r0, .L34+24
 278 007a FFF7FEFF 		bl	Drift_Check_Interrupt_StartEx
 279              	.LVL32:
 174:main.c        ****     
 175:main.c        ****     //Servos for the arm initialisation
 176:main.c        ****     //Gripper_Servo_PWM_WriteCompare(1250); //This is the closed gripper pos
 177:main.c        ****     //Rack_Servo_PWM_WriteCompare(1000); //This is the up arm pos
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\cc8WnjKS.s 			page 9


 178:main.c        ****    
 179:main.c        ****     Rack_Servo_PWM_Start();
 280              		.loc 1 179 0
 281 007e FFF7FEFF 		bl	Rack_Servo_PWM_Start
 282              	.LVL33:
 180:main.c        ****     Gripper_Servo_PWM_Start();
 283              		.loc 1 180 0
 284 0082 FFF7FEFF 		bl	Gripper_Servo_PWM_Start
 285              	.LVL34:
 286 0086 10E0     		b	.L16
 287              	.L20:
 181:main.c        ****     
 182:main.c        **** 
 183:main.c        ****     // Main Loop for States
 184:main.c        ****         
 185:main.c        ****     for(;;)
 186:main.c        ****     {   
 187:main.c        ****         // Start button is pressed so quit sensing
 188:main.c        **** 
 189:main.c        ****         /*
 190:main.c        ****         while (beginNavigation == 0) {
 191:main.c        ****             distanceCheck();           
 192:main.c        ****             UART_1_PutString("\n");
 193:main.c        ****             CyDelay(1000); // Check distance once a second.
 194:main.c        ****                 
 195:main.c        ****         }
 196:main.c        ****         
 197:main.c        ****         */
 198:main.c        ****         
 199:main.c        **** 
 200:main.c        ****         while (state == STATE_SCAN_PLAN) {              // colour sensing, while switch has not bee
 201:main.c        ****             if (currentPuckRackScanningIndex == 0){moveBackwardIndefinitely();}
 288              		.loc 1 201 0
 289 0088 3F4B     		ldr	r3, .L34+4
 290 008a 9B68     		ldr	r3, [r3, #8]
 291 008c 13B9     		cbnz	r3, .L17
 292              		.loc 1 201 0 is_stmt 0 discriminator 1
 293 008e FFF7FEFF 		bl	moveBackwardIndefinitely
 294              	.LVL35:
 295 0092 01E0     		b	.L18
 296              	.L17:
 202:main.c        ****             else {moveForwardIndefinitely();}        
 297              		.loc 1 202 0 is_stmt 1
 298 0094 FFF7FEFF 		bl	moveForwardIndefinitely
 299              	.LVL36:
 300              	.L18:
 203:main.c        ****             
 204:main.c        ****             ColourSensingViaHardware();
 301              		.loc 1 204 0
 302 0098 FFF7FEFF 		bl	ColourSensingViaHardware
 303              	.LVL37:
 205:main.c        ****             // ColourOutput();
 206:main.c        ****             // CyDelay(100);
 207:main.c        ****             
 208:main.c        ****             if (currentPuckRackScanningIndex == 4) {state = STATE_LOCATE_BLOCK_AND_PUCKS;}
 304              		.loc 1 208 0
 305 009c 3A4B     		ldr	r3, .L34+4
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\cc8WnjKS.s 			page 10


 306 009e 9B68     		ldr	r3, [r3, #8]
 307 00a0 042B     		cmp	r3, #4
 308 00a2 02D1     		bne	.L16
 309              		.loc 1 208 0 is_stmt 0 discriminator 1
 310 00a4 0222     		movs	r2, #2
 311 00a6 3E4B     		ldr	r3, .L34+28
 312 00a8 5A60     		str	r2, [r3, #4]
 313              	.L16:
 200:main.c        ****             if (currentPuckRackScanningIndex == 0){moveBackwardIndefinitely();}
 314              		.loc 1 200 0 is_stmt 1
 315 00aa 3D4B     		ldr	r3, .L34+28
 316 00ac 5B68     		ldr	r3, [r3, #4]
 317 00ae 012B     		cmp	r3, #1
 318 00b0 EAD0     		beq	.L20
 209:main.c        ****                      
 210:main.c        ****         }
 211:main.c        **** 
 212:main.c        ****     	if (state == STATE_LOCATE_BLOCK_AND_PUCKS){
 319              		.loc 1 212 0
 320 00b2 022B     		cmp	r3, #2
 321 00b4 17D1     		bne	.L21
 213:main.c        ****             
 214:main.c        ****             // Finding where the boundaries of the block are
 215:main.c        ****     		// Sweep across WEST to EAST until discrepancy
 216:main.c        ****             // But first sense the construction plan and then drive to wall and turn around to prep
 217:main.c        ****             
 218:main.c        ****             
 219:main.c        ****     		moveForwardIndefinitely();
 322              		.loc 1 219 0
 323 00b6 FFF7FEFF 		bl	moveForwardIndefinitely
 324              	.LVL38:
 220:main.c        ****     		turnRight(180); // Now facing EAST wall
 325              		.loc 1 220 0
 326 00ba 3A48     		ldr	r0, .L34+32
 327 00bc FFF7FEFF 		bl	turnRight
 328              	.LVL39:
 221:main.c        ****     		moveForwardIndefinitely(); // Do this until we get to EAST wall
 329              		.loc 1 221 0
 330 00c0 FFF7FEFF 		bl	moveForwardIndefinitely
 331              	.LVL40:
 222:main.c        ****             
 223:main.c        ****             
 224:main.c        ****             // Will now know the boundaries of the block.
 225:main.c        ****             // Figure out direction we want to travel
 226:main.c        ****             
 227:main.c        ****             if (block_edge_location[WEST] >= WIDTH_SENSOR_TO_SENSOR + SAFETY_MARGIN){
 332              		.loc 1 227 0
 333 00c4 4FF08441 		mov	r1, #1107296256
 334 00c8 2F4B     		ldr	r3, .L34+4
 335 00ca 9869     		ldr	r0, [r3, #24]	@ float
 336 00cc FFF7FEFF 		bl	__aeabi_fcmpge
 337              	.LVL41:
 338 00d0 18B1     		cbz	r0, .L32
 228:main.c        ****                 pathPastBlock = WEST;
 339              		.loc 1 228 0
 340 00d2 0322     		movs	r2, #3
 341 00d4 344B     		ldr	r3, .L34+36
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\cc8WnjKS.s 			page 11


 342 00d6 1A60     		str	r2, [r3]
 343 00d8 02E0     		b	.L24
 344              	.L32:
 229:main.c        ****             }
 230:main.c        ****             else {pathPastBlock = EAST;}
 345              		.loc 1 230 0
 346 00da 0122     		movs	r2, #1
 347 00dc 324B     		ldr	r3, .L34+36
 348 00de 1A60     		str	r2, [r3]
 349              	.L24:
 231:main.c        ****             
 232:main.c        ****             // Calculate puck position here too, then make a decision as to whether
 233:main.c        ****             // pathToPucks = ... ;
 234:main.c        **** 
 235:main.c        ****             state = STATE_GO_TO_PUCKS;
 350              		.loc 1 235 0
 351 00e0 0322     		movs	r2, #3
 352 00e2 2F4B     		ldr	r3, .L34+28
 353 00e4 5A60     		str	r2, [r3, #4]
 354              	.L21:
 236:main.c        **** 	}
 237:main.c        ****         
 238:main.c        ****         
 239:main.c        **** 
 240:main.c        ****         if (state == STATE_GO_TO_PUCKS){
 355              		.loc 1 240 0
 356 00e6 2E4B     		ldr	r3, .L34+28
 357 00e8 5B68     		ldr	r3, [r3, #4]
 358 00ea 032B     		cmp	r3, #3
 359 00ec 25D1     		bne	.L25
 241:main.c        ****             if (pathPastBlock == WEST){
 360              		.loc 1 241 0
 361 00ee 2E4B     		ldr	r3, .L34+36
 362 00f0 1B68     		ldr	r3, [r3]
 363 00f2 032B     		cmp	r3, #3
 364 00f4 0FD1     		bne	.L26
 242:main.c        ****                 if (pathToPucks != WEST) {
 365              		.loc 1 242 0
 366 00f6 2D4B     		ldr	r3, .L34+40
 367 00f8 1B68     		ldr	r3, [r3]
 368 00fa 032B     		cmp	r3, #3
 369 00fc 05D0     		beq	.L27
 243:main.c        ****                     moveAndAngle(SAFETY_MARGIN / 2 + WIDTH_SENSOR_TO_SENSOR / 2, ARENA_LENGTH - FRO
 370              		.loc 1 243 0
 371 00fe 0022     		movs	r2, #0
 372 0100 8221     		movs	r1, #130
 373 0102 1020     		movs	r0, #16
 374 0104 FFF7FEFF 		bl	moveAndAngle
 375              	.LVL42:
 376 0108 14E0     		b	.L28
 377              	.L27:
 244:main.c        ****                 }
 245:main.c        ****                 else {moveAndAngle(SAFETY_MARGIN / 2 + WIDTH_SENSOR_TO_SENSOR / 2, ARENA_LENGTH - F
 378              		.loc 1 245 0
 379 010a 5A22     		movs	r2, #90
 380 010c 6621     		movs	r1, #102
 381 010e 1020     		movs	r0, #16
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\cc8WnjKS.s 			page 12


 382 0110 FFF7FEFF 		bl	moveAndAngle
 383              	.LVL43:
 384 0114 0EE0     		b	.L28
 385              	.L26:
 246:main.c        ****             }
 247:main.c        ****             else {
 248:main.c        ****                 if (pathToPucks != EAST) {
 386              		.loc 1 248 0
 387 0116 254B     		ldr	r3, .L34+40
 388 0118 1B68     		ldr	r3, [r3]
 389 011a 012B     		cmp	r3, #1
 390 011c 05D0     		beq	.L29
 249:main.c        ****                     moveAndAngle(ARENA_WIDTH - SAFETY_MARGIN / 2 - WIDTH_SENSOR_TO_SENSOR / 2, AREN
 391              		.loc 1 249 0
 392 011e B422     		movs	r2, #180
 393 0120 8221     		movs	r1, #130
 394 0122 6820     		movs	r0, #104
 395 0124 FFF7FEFF 		bl	moveAndAngle
 396              	.LVL44:
 397 0128 04E0     		b	.L28
 398              	.L29:
 250:main.c        ****                 }
 251:main.c        ****                 else {moveAndAngle(ARENA_WIDTH - SAFETY_MARGIN / 2 - WIDTH_SENSOR_TO_SENSOR / 2, AR
 399              		.loc 1 251 0
 400 012a 5A22     		movs	r2, #90
 401 012c 6621     		movs	r1, #102
 402 012e 6820     		movs	r0, #104
 403 0130 FFF7FEFF 		bl	moveAndAngle
 404              	.LVL45:
 405              	.L28:
 252:main.c        ****             }
 253:main.c        ****             
 254:main.c        ****             // We are now in front of the pucks
 255:main.c        ****             state = STATE_FIND_REQUIRED_PUCK;
 406              		.loc 1 255 0
 407 0134 0422     		movs	r2, #4
 408 0136 1A4B     		ldr	r3, .L34+28
 409 0138 5A60     		str	r2, [r3, #4]
 410              	.L25:
 256:main.c        ****         }
 257:main.c        ****         
 258:main.c        ****         
 259:main.c        ****         
 260:main.c        ****         if (state == STATE_FIND_REQUIRED_PUCK){
 261:main.c        ****                
 262:main.c        ****         }
 263:main.c        ****         
 264:main.c        ****         if (state == STATE_DEPOSIT_PUCK){
 411              		.loc 1 264 0
 412 013a 194B     		ldr	r3, .L34+28
 413 013c 5B68     		ldr	r3, [r3, #4]
 414 013e 052B     		cmp	r3, #5
 415 0140 15D1     		bne	.L30
 265:main.c        ****             moveAndAngle(CONSTRUCTION_MIDPOINT,CONSTRUCTION_DISTANCE_FROM_WALL, SOUTH_ANGLE); // Ta
 416              		.loc 1 265 0
 417 0142 4FF48772 		mov	r2, #270
 418 0146 0521     		movs	r1, #5
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\cc8WnjKS.s 			page 13


 419 0148 1E20     		movs	r0, #30
 420 014a FFF7FEFF 		bl	moveAndAngle
 421              	.LVL46:
 266:main.c        ****             lowerAndOpen(currentPuckStackSize);
 422              		.loc 1 266 0
 423 014e 0E4C     		ldr	r4, .L34+4
 424 0150 E069     		ldr	r0, [r4, #28]
 425 0152 FFF7FEFF 		bl	lowerAndOpen
 426              	.LVL47:
 267:main.c        ****             changeHeightToPuck(currentPuckStackSize + 1); // Lift claw above stack to avoid hitting
 427              		.loc 1 267 0
 428 0156 E069     		ldr	r0, [r4, #28]
 429 0158 0130     		adds	r0, r0, #1
 430 015a FFF7FEFF 		bl	changeHeightToPuck
 431              	.LVL48:
 268:main.c        ****             
 269:main.c        ****             currentPuckStackSize++;
 432              		.loc 1 269 0
 433 015e E369     		ldr	r3, [r4, #28]
 434 0160 0133     		adds	r3, r3, #1
 435 0162 E361     		str	r3, [r4, #28]
 270:main.c        ****             
 271:main.c        ****             if (currentPuckStackSize == 3){state = STATE_PARK_HOME;}
 436              		.loc 1 271 0
 437 0164 032B     		cmp	r3, #3
 438 0166 02D1     		bne	.L30
 439              		.loc 1 271 0 is_stmt 0 discriminator 1
 440 0168 0622     		movs	r2, #6
 441 016a 0D4B     		ldr	r3, .L34+28
 442 016c 5A60     		str	r2, [r3, #4]
 443              	.L30:
 272:main.c        ****             
 273:main.c        ****         }
 274:main.c        ****         
 275:main.c        ****         if (state == STATE_PARK_HOME){
 444              		.loc 1 275 0 is_stmt 1
 445 016e 0C4B     		ldr	r3, .L34+28
 446 0170 5B68     		ldr	r3, [r3, #4]
 447 0172 062B     		cmp	r3, #6
 448 0174 99D1     		bne	.L16
 276:main.c        ****             moveAndAngle(HOME_MIDPOINT, HOME_PARKING_DISTANCE, NORTH_ANGLE); // Should reverse into
 449              		.loc 1 276 0
 450 0176 5A22     		movs	r2, #90
 451 0178 0321     		movs	r1, #3
 452 017a 3C20     		movs	r0, #60
 453 017c FFF7FEFF 		bl	moveAndAngle
 454              	.LVL49:
 455 0180 93E7     		b	.L16
 456              	.L35:
 457 0182 00BF     		.align	2
 458              	.L34:
 459 0184 00000000 		.word	.LC0
 460 0188 00000000 		.word	.LANCHOR0
 461 018c 00000000 		.word	TIH
 462 0190 00000000 		.word	StartIH
 463 0194 00000000 		.word	Encoder_Counts_1_IH
 464 0198 00000000 		.word	Encoder_Counts_2_IH
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\cc8WnjKS.s 			page 14


 465 019c 00000000 		.word	Drift_Check_IH
 466 01a0 00000000 		.word	.LANCHOR1
 467 01a4 00003443 		.word	1127481344
 468 01a8 00000000 		.word	pathPastBlock
 469 01ac 00000000 		.word	pathToPucks
 470              		.cfi_endproc
 471              	.LFE69:
 472              		.size	main, .-main
 473              		.global	currentPuckStackSize
 474              		.comm	pathPastBlock,4,4
 475              		.comm	pathToPucks,4,4
 476              		.global	running
 477              		.global	state
 478              		.global	beginNavigation
 479              		.global	colour_flag
 480              		.global	idac_value
 481              		.comm	moveBackwardAllowed,2,2
 482              		.comm	moveForwardAllowed,2,2
 483              		.comm	moveRightAllowed,2,2
 484              		.comm	moveLeftAllowed,2,2
 485              		.global	turningRightFlag
 486              		.global	turningLeftFlag
 487              		.global	drivingBackwardFlag
 488              		.global	drivingForwardFlag
 489              		.global	moveNow
 490              		.comm	motor2EncoderCounts,4,4
 491              		.comm	motor1EncoderCounts,4,4
 492              		.global	motor2Enable
 493              		.global	motor1Enable
 494              		.comm	M2_BD,4,4
 495              		.comm	M2_FD,4,4
 496              		.comm	M1_BD,4,4
 497              		.comm	M1_FD,4,4
 498              		.comm	desiredOrientation,4,4
 499              		.global	currentOrientation
 500              		.comm	desiredPosition,8,4
 501              		.global	currentPosition
 502              		.comm	puckPileLocation,4,4
 503              		.global	block_edge_location
 504              		.global	sweeping
 505              		.global	puckRackOffsetsFromWest
 506              		.global	puckRackColours
 507              		.global	currentPuckRackScanningIndex
 508              		.comm	driveStraightEnable,4,4
 509              		.data
 510              		.align	2
 511              		.set	.LANCHOR1,. + 0
 512              		.type	colour_flag, %object
 513              		.size	colour_flag, 4
 514              	colour_flag:
 515 0000 01000000 		.word	1
 516              		.type	state, %object
 517              		.size	state, 4
 518              	state:
 519 0004 01000000 		.word	1
 520              		.type	running, %object
 521              		.size	running, 4
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\cc8WnjKS.s 			page 15


 522              	running:
 523 0008 01000000 		.word	1
 524              		.type	moveNow, %object
 525              		.size	moveNow, 2
 526              	moveNow:
 527 000c 0100     		.short	1
 528 000e 0000     		.space	2
 529              		.type	currentOrientation, %object
 530              		.size	currentOrientation, 4
 531              	currentOrientation:
 532 0010 5A000000 		.word	90
 533              		.type	puckRackOffsetsFromWest, %object
 534              		.size	puckRackOffsetsFromWest, 20
 535              	puckRackOffsetsFromWest:
 536 0014 48000000 		.word	72
 537 0018 42000000 		.word	66
 538 001c 3C000000 		.word	60
 539 0020 36000000 		.word	54
 540 0024 30000000 		.word	48
 541              		.section	.rodata.str1.4,"aMS",%progbits,1
 542              		.align	2
 543              	.LC0:
 544 0000 55415254 		.ascii	"UART commencing... \012\000"
 544      20636F6D 
 544      6D656E63 
 544      696E672E 
 544      2E2E200A 
 545              		.bss
 546              		.align	2
 547              		.set	.LANCHOR0,. + 0
 548              		.type	beginNavigation, %object
 549              		.size	beginNavigation, 4
 550              	beginNavigation:
 551 0000 00000000 		.space	4
 552              		.type	idac_value, %object
 553              		.size	idac_value, 4
 554              	idac_value:
 555 0004 00000000 		.space	4
 556              		.type	currentPuckRackScanningIndex, %object
 557              		.size	currentPuckRackScanningIndex, 4
 558              	currentPuckRackScanningIndex:
 559 0008 00000000 		.space	4
 560              		.type	block_edge_location, %object
 561              		.size	block_edge_location, 16
 562              	block_edge_location:
 563 000c 00000000 		.space	16
 563      00000000 
 563      00000000 
 563      00000000 
 564              		.type	currentPuckStackSize, %object
 565              		.size	currentPuckStackSize, 4
 566              	currentPuckStackSize:
 567 001c 00000000 		.space	4
 568              		.type	turningRightFlag, %object
 569              		.size	turningRightFlag, 2
 570              	turningRightFlag:
 571 0020 0000     		.space	2
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\cc8WnjKS.s 			page 16


 572              		.type	turningLeftFlag, %object
 573              		.size	turningLeftFlag, 2
 574              	turningLeftFlag:
 575 0022 0000     		.space	2
 576              		.type	drivingBackwardFlag, %object
 577              		.size	drivingBackwardFlag, 2
 578              	drivingBackwardFlag:
 579 0024 0000     		.space	2
 580              		.type	drivingForwardFlag, %object
 581              		.size	drivingForwardFlag, 2
 582              	drivingForwardFlag:
 583 0026 0000     		.space	2
 584              		.type	motor2Enable, %object
 585              		.size	motor2Enable, 2
 586              	motor2Enable:
 587 0028 0000     		.space	2
 588              		.type	motor1Enable, %object
 589              		.size	motor1Enable, 2
 590              	motor1Enable:
 591 002a 0000     		.space	2
 592              		.type	currentPosition, %object
 593              		.size	currentPosition, 8
 594              	currentPosition:
 595 002c 00000000 		.space	8
 595      00000000 
 596              		.type	sweeping, %object
 597              		.size	sweeping, 4
 598              	sweeping:
 599 0034 00000000 		.space	4
 600              		.type	puckRackColours, %object
 601              		.size	puckRackColours, 20
 602              	puckRackColours:
 603 0038 00000000 		.space	20
 603      00000000 
 603      00000000 
 603      00000000 
 603      00000000 
 604              		.text
 605              	.Letext0:
 606              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 607              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 608              		.file 4 "Generated_Source\\PSoC5/core_cm3.h"
 609              		.file 5 "ultrasonic.h"
 610              		.file 6 "main.h"
 611              		.file 7 "dcmotor.h"
 612              		.file 8 "Generated_Source\\PSoC5/Drift_Check_Timer.h"
 613              		.file 9 "Generated_Source\\PSoC5/Motor_1_Encoder_Counts.h"
 614              		.file 10 "Generated_Source\\PSoC5/Motor_2_Encoder_Counts.h"
 615              		.file 11 "Generated_Source\\PSoC5/CyLib.h"
 616              		.file 12 "Generated_Source\\PSoC5/TIA_1.h"
 617              		.file 13 "Generated_Source\\PSoC5/UART_1.h"
 618              		.file 14 "Generated_Source\\PSoC5/ADC.h"
 619              		.file 15 "Generated_Source\\PSoC5/IDAC8_1.h"
 620              		.file 16 "Generated_Source\\PSoC5/PWM_colour.h"
 621              		.file 17 "colour.h"
 622              		.file 18 "Generated_Source\\PSoC5/Timer_1.h"
 623              		.file 19 "Generated_Source\\PSoC5/Sonic.h"
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\cc8WnjKS.s 			page 17


 624              		.file 20 "Generated_Source\\PSoC5/Start.h"
 625              		.file 21 "Generated_Source\\PSoC5/Motor_1_driver.h"
 626              		.file 22 "Generated_Source\\PSoC5/Motor_2_driver.h"
 627              		.file 23 "Generated_Source\\PSoC5/Encoder_Counts_1_Interrupt.h"
 628              		.file 24 "Generated_Source\\PSoC5/Encoder_Counts_2_Interrupt.h"
 629              		.file 25 "Generated_Source\\PSoC5/Drift_Check_Interrupt.h"
 630              		.file 26 "Generated_Source\\PSoC5/Rack_Servo_PWM.h"
 631              		.file 27 "Generated_Source\\PSoC5/Gripper_Servo_PWM.h"
 632              		.file 28 "servo.h"
 633              		.section	.debug_info,"",%progbits
 634              	.Ldebug_info0:
 635 0000 33080000 		.4byte	0x833
 636 0004 0400     		.2byte	0x4
 637 0006 00000000 		.4byte	.Ldebug_abbrev0
 638 000a 04       		.byte	0x4
 639 000b 01       		.uleb128 0x1
 640 000c 6A060000 		.4byte	.LASF98
 641 0010 0C       		.byte	0xc
 642 0011 74050000 		.4byte	.LASF99
 643 0015 B4030000 		.4byte	.LASF100
 644 0019 00000000 		.4byte	.Ldebug_ranges0+0
 645 001d 00000000 		.4byte	0
 646 0021 00000000 		.4byte	.Ldebug_line0
 647 0025 02       		.uleb128 0x2
 648 0026 01       		.byte	0x1
 649 0027 06       		.byte	0x6
 650 0028 55000000 		.4byte	.LASF0
 651 002c 02       		.uleb128 0x2
 652 002d 01       		.byte	0x1
 653 002e 08       		.byte	0x8
 654 002f 95030000 		.4byte	.LASF1
 655 0033 02       		.uleb128 0x2
 656 0034 02       		.byte	0x2
 657 0035 05       		.byte	0x5
 658 0036 8A000000 		.4byte	.LASF2
 659 003a 02       		.uleb128 0x2
 660 003b 02       		.byte	0x2
 661 003c 07       		.byte	0x7
 662 003d D3040000 		.4byte	.LASF3
 663 0041 03       		.uleb128 0x3
 664 0042 09060000 		.4byte	.LASF9
 665 0046 02       		.byte	0x2
 666 0047 3F       		.byte	0x3f
 667 0048 4C000000 		.4byte	0x4c
 668 004c 02       		.uleb128 0x2
 669 004d 04       		.byte	0x4
 670 004e 05       		.byte	0x5
 671 004f 00050000 		.4byte	.LASF4
 672 0053 02       		.uleb128 0x2
 673 0054 04       		.byte	0x4
 674 0055 07       		.byte	0x7
 675 0056 D7020000 		.4byte	.LASF5
 676 005a 02       		.uleb128 0x2
 677 005b 08       		.byte	0x8
 678 005c 05       		.byte	0x5
 679 005d 57020000 		.4byte	.LASF6
 680 0061 02       		.uleb128 0x2
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\cc8WnjKS.s 			page 18


 681 0062 08       		.byte	0x8
 682 0063 07       		.byte	0x7
 683 0064 39040000 		.4byte	.LASF7
 684 0068 04       		.uleb128 0x4
 685 0069 04       		.byte	0x4
 686 006a 05       		.byte	0x5
 687 006b 696E7400 		.ascii	"int\000"
 688 006f 02       		.uleb128 0x2
 689 0070 04       		.byte	0x4
 690 0071 07       		.byte	0x7
 691 0072 64040000 		.4byte	.LASF8
 692 0076 03       		.uleb128 0x3
 693 0077 0F050000 		.4byte	.LASF10
 694 007b 03       		.byte	0x3
 695 007c 2C       		.byte	0x2c
 696 007d 41000000 		.4byte	0x41
 697 0081 02       		.uleb128 0x2
 698 0082 04       		.byte	0x4
 699 0083 04       		.byte	0x4
 700 0084 3E020000 		.4byte	.LASF11
 701 0088 02       		.uleb128 0x2
 702 0089 08       		.byte	0x8
 703 008a 04       		.byte	0x4
 704 008b 96050000 		.4byte	.LASF12
 705 008f 02       		.uleb128 0x2
 706 0090 01       		.byte	0x1
 707 0091 08       		.byte	0x8
 708 0092 FB040000 		.4byte	.LASF13
 709 0096 02       		.uleb128 0x2
 710 0097 08       		.byte	0x8
 711 0098 04       		.byte	0x4
 712 0099 89030000 		.4byte	.LASF14
 713 009d 02       		.uleb128 0x2
 714 009e 04       		.byte	0x4
 715 009f 07       		.byte	0x7
 716 00a0 3D060000 		.4byte	.LASF15
 717 00a4 05       		.uleb128 0x5
 718 00a5 AE050000 		.4byte	.LASF16
 719 00a9 01       		.byte	0x1
 720 00aa 42       		.byte	0x42
 721 00ab 00000000 		.4byte	.LFB64
 722 00af 08000000 		.4byte	.LFE64-.LFB64
 723 00b3 01       		.uleb128 0x1
 724 00b4 9C       		.byte	0x9c
 725 00b5 C3000000 		.4byte	0xc3
 726 00b9 06       		.uleb128 0x6
 727 00ba 06000000 		.4byte	.LVL0
 728 00be 73060000 		.4byte	0x673
 729 00c2 00       		.byte	0
 730 00c3 05       		.uleb128 0x5
 731 00c4 41000000 		.4byte	.LASF17
 732 00c8 01       		.byte	0x1
 733 00c9 46       		.byte	0x46
 734 00ca 00000000 		.4byte	.LFB65
 735 00ce 08000000 		.4byte	.LFE65-.LFB65
 736 00d2 01       		.uleb128 0x1
 737 00d3 9C       		.byte	0x9c
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\cc8WnjKS.s 			page 19


 738 00d4 E2000000 		.4byte	0xe2
 739 00d8 06       		.uleb128 0x6
 740 00d9 06000000 		.4byte	.LVL1
 741 00dd 7E060000 		.4byte	0x67e
 742 00e1 00       		.byte	0
 743 00e2 05       		.uleb128 0x5
 744 00e3 D5050000 		.4byte	.LASF18
 745 00e7 01       		.byte	0x1
 746 00e8 4A       		.byte	0x4a
 747 00e9 00000000 		.4byte	.LFB66
 748 00ed 28000000 		.4byte	.LFE66-.LFB66
 749 00f1 01       		.uleb128 0x1
 750 00f2 9C       		.byte	0x9c
 751 00f3 25010000 		.4byte	0x125
 752 00f7 06       		.uleb128 0x6
 753 00f8 06000000 		.4byte	.LVL2
 754 00fc 89060000 		.4byte	0x689
 755 0100 06       		.uleb128 0x6
 756 0101 0A000000 		.4byte	.LVL3
 757 0105 94060000 		.4byte	0x694
 758 0109 06       		.uleb128 0x6
 759 010a 0E000000 		.4byte	.LVL4
 760 010e 9F060000 		.4byte	0x69f
 761 0112 06       		.uleb128 0x6
 762 0113 16000000 		.4byte	.LVL5
 763 0117 AA060000 		.4byte	0x6aa
 764 011b 06       		.uleb128 0x6
 765 011c 1E000000 		.4byte	.LVL6
 766 0120 B5060000 		.4byte	0x6b5
 767 0124 00       		.byte	0
 768 0125 07       		.uleb128 0x7
 769 0126 54494800 		.ascii	"TIH\000"
 770 012a 01       		.byte	0x1
 771 012b 70       		.byte	0x70
 772 012c 00000000 		.4byte	.LFB67
 773 0130 08000000 		.4byte	.LFE67-.LFB67
 774 0134 01       		.uleb128 0x1
 775 0135 9C       		.byte	0x9c
 776 0136 44010000 		.4byte	0x144
 777 013a 06       		.uleb128 0x6
 778 013b 06000000 		.4byte	.LVL7
 779 013f C0060000 		.4byte	0x6c0
 780 0143 00       		.byte	0
 781 0144 05       		.uleb128 0x5
 782 0145 2D010000 		.4byte	.LASF19
 783 0149 01       		.byte	0x1
 784 014a 75       		.byte	0x75
 785 014b 00000000 		.4byte	.LFB68
 786 014f 20000000 		.4byte	.LFE68-.LFB68
 787 0153 01       		.uleb128 0x1
 788 0154 9C       		.byte	0x9c
 789 0155 6A010000 		.4byte	0x16a
 790 0159 08       		.uleb128 0x8
 791 015a 08000000 		.4byte	.LVL8
 792 015e CB060000 		.4byte	0x6cb
 793 0162 09       		.uleb128 0x9
 794 0163 01       		.uleb128 0x1
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\cc8WnjKS.s 			page 20


 795 0164 50       		.byte	0x50
 796 0165 02       		.uleb128 0x2
 797 0166 08       		.byte	0x8
 798 0167 64       		.byte	0x64
 799 0168 00       		.byte	0
 800 0169 00       		.byte	0
 801 016a 0A       		.uleb128 0xa
 802 016b 28010000 		.4byte	.LASF101
 803 016f 01       		.byte	0x1
 804 0170 7D       		.byte	0x7d
 805 0171 68000000 		.4byte	0x68
 806 0175 00000000 		.4byte	.LFB69
 807 0179 B0010000 		.4byte	.LFE69-.LFB69
 808 017d 01       		.uleb128 0x1
 809 017e 9C       		.byte	0x9c
 810 017f CE030000 		.4byte	0x3ce
 811 0183 0B       		.uleb128 0xb
 812 0184 746D7000 		.ascii	"tmp\000"
 813 0188 01       		.byte	0x1
 814 0189 9C       		.byte	0x9c
 815 018a 68000000 		.4byte	0x68
 816 018e 00       		.byte	0
 817 018f 06       		.uleb128 0x6
 818 0190 08000000 		.4byte	.LVL9
 819 0194 D6060000 		.4byte	0x6d6
 820 0198 06       		.uleb128 0x6
 821 0199 0C000000 		.4byte	.LVL10
 822 019d E1060000 		.4byte	0x6e1
 823 01a1 0C       		.uleb128 0xc
 824 01a2 12000000 		.4byte	.LVL11
 825 01a6 EC060000 		.4byte	0x6ec
 826 01aa B8010000 		.4byte	0x1b8
 827 01ae 09       		.uleb128 0x9
 828 01af 01       		.uleb128 0x1
 829 01b0 50       		.byte	0x50
 830 01b1 05       		.uleb128 0x5
 831 01b2 03       		.byte	0x3
 832 01b3 00000000 		.4byte	.LC0
 833 01b7 00       		.byte	0
 834 01b8 06       		.uleb128 0x6
 835 01b9 16000000 		.4byte	.LVL12
 836 01bd F7060000 		.4byte	0x6f7
 837 01c1 06       		.uleb128 0x6
 838 01c2 1A000000 		.4byte	.LVL13
 839 01c6 02070000 		.4byte	0x702
 840 01ca 0C       		.uleb128 0xc
 841 01cb 20000000 		.4byte	.LVL14
 842 01cf 0D070000 		.4byte	0x70d
 843 01d3 DD010000 		.4byte	0x1dd
 844 01d7 09       		.uleb128 0x9
 845 01d8 01       		.uleb128 0x1
 846 01d9 50       		.byte	0x50
 847 01da 01       		.uleb128 0x1
 848 01db 30       		.byte	0x30
 849 01dc 00       		.byte	0
 850 01dd 06       		.uleb128 0x6
 851 01de 28000000 		.4byte	.LVL15
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\cc8WnjKS.s 			page 21


 852 01e2 18070000 		.4byte	0x718
 853 01e6 06       		.uleb128 0x6
 854 01e7 2C000000 		.4byte	.LVL16
 855 01eb 23070000 		.4byte	0x723
 856 01ef 06       		.uleb128 0x6
 857 01f0 30000000 		.4byte	.LVL17
 858 01f4 2E070000 		.4byte	0x72e
 859 01f8 06       		.uleb128 0x6
 860 01f9 34000000 		.4byte	.LVL18
 861 01fd 39070000 		.4byte	0x739
 862 0201 06       		.uleb128 0x6
 863 0202 38000000 		.4byte	.LVL19
 864 0206 44070000 		.4byte	0x744
 865 020a 06       		.uleb128 0x6
 866 020b 3C000000 		.4byte	.LVL20
 867 020f 4F070000 		.4byte	0x74f
 868 0213 0C       		.uleb128 0xc
 869 0214 42000000 		.4byte	.LVL21
 870 0218 5A070000 		.4byte	0x75a
 871 021c 2A020000 		.4byte	0x22a
 872 0220 09       		.uleb128 0x9
 873 0221 01       		.uleb128 0x1
 874 0222 50       		.byte	0x50
 875 0223 05       		.uleb128 0x5
 876 0224 03       		.byte	0x3
 877 0225 00000000 		.4byte	TIH
 878 0229 00       		.byte	0
 879 022a 0C       		.uleb128 0xc
 880 022b 48000000 		.4byte	.LVL22
 881 022f 65070000 		.4byte	0x765
 882 0233 41020000 		.4byte	0x241
 883 0237 09       		.uleb128 0x9
 884 0238 01       		.uleb128 0x1
 885 0239 50       		.byte	0x50
 886 023a 05       		.uleb128 0x5
 887 023b 03       		.byte	0x3
 888 023c 00000000 		.4byte	StartIH
 889 0240 00       		.byte	0
 890 0241 06       		.uleb128 0x6
 891 0242 50000000 		.4byte	.LVL24
 892 0246 70070000 		.4byte	0x770
 893 024a 06       		.uleb128 0x6
 894 024b 54000000 		.4byte	.LVL25
 895 024f 7B070000 		.4byte	0x77b
 896 0253 06       		.uleb128 0x6
 897 0254 60000000 		.4byte	.LVL26
 898 0258 86070000 		.4byte	0x786
 899 025c 06       		.uleb128 0x6
 900 025d 64000000 		.4byte	.LVL27
 901 0261 91070000 		.4byte	0x791
 902 0265 06       		.uleb128 0x6
 903 0266 68000000 		.4byte	.LVL28
 904 026a 9C070000 		.4byte	0x79c
 905 026e 06       		.uleb128 0x6
 906 026f 6C000000 		.4byte	.LVL29
 907 0273 A7070000 		.4byte	0x7a7
 908 0277 0C       		.uleb128 0xc
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\cc8WnjKS.s 			page 22


 909 0278 72000000 		.4byte	.LVL30
 910 027c B2070000 		.4byte	0x7b2
 911 0280 8E020000 		.4byte	0x28e
 912 0284 09       		.uleb128 0x9
 913 0285 01       		.uleb128 0x1
 914 0286 50       		.byte	0x50
 915 0287 05       		.uleb128 0x5
 916 0288 03       		.byte	0x3
 917 0289 00000000 		.4byte	Encoder_Counts_1_IH
 918 028d 00       		.byte	0
 919 028e 0C       		.uleb128 0xc
 920 028f 78000000 		.4byte	.LVL31
 921 0293 BD070000 		.4byte	0x7bd
 922 0297 A5020000 		.4byte	0x2a5
 923 029b 09       		.uleb128 0x9
 924 029c 01       		.uleb128 0x1
 925 029d 50       		.byte	0x50
 926 029e 05       		.uleb128 0x5
 927 029f 03       		.byte	0x3
 928 02a0 00000000 		.4byte	Encoder_Counts_2_IH
 929 02a4 00       		.byte	0
 930 02a5 0C       		.uleb128 0xc
 931 02a6 7E000000 		.4byte	.LVL32
 932 02aa C8070000 		.4byte	0x7c8
 933 02ae BC020000 		.4byte	0x2bc
 934 02b2 09       		.uleb128 0x9
 935 02b3 01       		.uleb128 0x1
 936 02b4 50       		.byte	0x50
 937 02b5 05       		.uleb128 0x5
 938 02b6 03       		.byte	0x3
 939 02b7 00000000 		.4byte	Drift_Check_IH
 940 02bb 00       		.byte	0
 941 02bc 06       		.uleb128 0x6
 942 02bd 82000000 		.4byte	.LVL33
 943 02c1 D3070000 		.4byte	0x7d3
 944 02c5 06       		.uleb128 0x6
 945 02c6 86000000 		.4byte	.LVL34
 946 02ca DE070000 		.4byte	0x7de
 947 02ce 06       		.uleb128 0x6
 948 02cf 92000000 		.4byte	.LVL35
 949 02d3 E9070000 		.4byte	0x7e9
 950 02d7 06       		.uleb128 0x6
 951 02d8 98000000 		.4byte	.LVL36
 952 02dc F4070000 		.4byte	0x7f4
 953 02e0 06       		.uleb128 0x6
 954 02e1 9C000000 		.4byte	.LVL37
 955 02e5 FF070000 		.4byte	0x7ff
 956 02e9 06       		.uleb128 0x6
 957 02ea BA000000 		.4byte	.LVL38
 958 02ee F4070000 		.4byte	0x7f4
 959 02f2 06       		.uleb128 0x6
 960 02f3 C0000000 		.4byte	.LVL39
 961 02f7 0A080000 		.4byte	0x80a
 962 02fb 06       		.uleb128 0x6
 963 02fc C4000000 		.4byte	.LVL40
 964 0300 F4070000 		.4byte	0x7f4
 965 0304 0C       		.uleb128 0xc
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\cc8WnjKS.s 			page 23


 966 0305 08010000 		.4byte	.LVL42
 967 0309 15080000 		.4byte	0x815
 968 030d 22030000 		.4byte	0x322
 969 0311 09       		.uleb128 0x9
 970 0312 01       		.uleb128 0x1
 971 0313 50       		.byte	0x50
 972 0314 01       		.uleb128 0x1
 973 0315 40       		.byte	0x40
 974 0316 09       		.uleb128 0x9
 975 0317 01       		.uleb128 0x1
 976 0318 51       		.byte	0x51
 977 0319 02       		.uleb128 0x2
 978 031a 08       		.byte	0x8
 979 031b 82       		.byte	0x82
 980 031c 09       		.uleb128 0x9
 981 031d 01       		.uleb128 0x1
 982 031e 52       		.byte	0x52
 983 031f 01       		.uleb128 0x1
 984 0320 30       		.byte	0x30
 985 0321 00       		.byte	0
 986 0322 0C       		.uleb128 0xc
 987 0323 14010000 		.4byte	.LVL43
 988 0327 15080000 		.4byte	0x815
 989 032b 41030000 		.4byte	0x341
 990 032f 09       		.uleb128 0x9
 991 0330 01       		.uleb128 0x1
 992 0331 50       		.byte	0x50
 993 0332 01       		.uleb128 0x1
 994 0333 40       		.byte	0x40
 995 0334 09       		.uleb128 0x9
 996 0335 01       		.uleb128 0x1
 997 0336 51       		.byte	0x51
 998 0337 02       		.uleb128 0x2
 999 0338 08       		.byte	0x8
 1000 0339 66       		.byte	0x66
 1001 033a 09       		.uleb128 0x9
 1002 033b 01       		.uleb128 0x1
 1003 033c 52       		.byte	0x52
 1004 033d 02       		.uleb128 0x2
 1005 033e 08       		.byte	0x8
 1006 033f 5A       		.byte	0x5a
 1007 0340 00       		.byte	0
 1008 0341 0C       		.uleb128 0xc
 1009 0342 28010000 		.4byte	.LVL44
 1010 0346 15080000 		.4byte	0x815
 1011 034a 61030000 		.4byte	0x361
 1012 034e 09       		.uleb128 0x9
 1013 034f 01       		.uleb128 0x1
 1014 0350 50       		.byte	0x50
 1015 0351 02       		.uleb128 0x2
 1016 0352 08       		.byte	0x8
 1017 0353 68       		.byte	0x68
 1018 0354 09       		.uleb128 0x9
 1019 0355 01       		.uleb128 0x1
 1020 0356 51       		.byte	0x51
 1021 0357 02       		.uleb128 0x2
 1022 0358 08       		.byte	0x8
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\cc8WnjKS.s 			page 24


 1023 0359 82       		.byte	0x82
 1024 035a 09       		.uleb128 0x9
 1025 035b 01       		.uleb128 0x1
 1026 035c 52       		.byte	0x52
 1027 035d 02       		.uleb128 0x2
 1028 035e 08       		.byte	0x8
 1029 035f B4       		.byte	0xb4
 1030 0360 00       		.byte	0
 1031 0361 0C       		.uleb128 0xc
 1032 0362 34010000 		.4byte	.LVL45
 1033 0366 15080000 		.4byte	0x815
 1034 036a 81030000 		.4byte	0x381
 1035 036e 09       		.uleb128 0x9
 1036 036f 01       		.uleb128 0x1
 1037 0370 50       		.byte	0x50
 1038 0371 02       		.uleb128 0x2
 1039 0372 08       		.byte	0x8
 1040 0373 68       		.byte	0x68
 1041 0374 09       		.uleb128 0x9
 1042 0375 01       		.uleb128 0x1
 1043 0376 51       		.byte	0x51
 1044 0377 02       		.uleb128 0x2
 1045 0378 08       		.byte	0x8
 1046 0379 66       		.byte	0x66
 1047 037a 09       		.uleb128 0x9
 1048 037b 01       		.uleb128 0x1
 1049 037c 52       		.byte	0x52
 1050 037d 02       		.uleb128 0x2
 1051 037e 08       		.byte	0x8
 1052 037f 5A       		.byte	0x5a
 1053 0380 00       		.byte	0
 1054 0381 0C       		.uleb128 0xc
 1055 0382 4E010000 		.4byte	.LVL46
 1056 0386 15080000 		.4byte	0x815
 1057 038a A0030000 		.4byte	0x3a0
 1058 038e 09       		.uleb128 0x9
 1059 038f 01       		.uleb128 0x1
 1060 0390 50       		.byte	0x50
 1061 0391 01       		.uleb128 0x1
 1062 0392 4E       		.byte	0x4e
 1063 0393 09       		.uleb128 0x9
 1064 0394 01       		.uleb128 0x1
 1065 0395 51       		.byte	0x51
 1066 0396 01       		.uleb128 0x1
 1067 0397 35       		.byte	0x35
 1068 0398 09       		.uleb128 0x9
 1069 0399 01       		.uleb128 0x1
 1070 039a 52       		.byte	0x52
 1071 039b 03       		.uleb128 0x3
 1072 039c 0A       		.byte	0xa
 1073 039d 0E01     		.2byte	0x10e
 1074 039f 00       		.byte	0
 1075 03a0 06       		.uleb128 0x6
 1076 03a1 56010000 		.4byte	.LVL47
 1077 03a5 20080000 		.4byte	0x820
 1078 03a9 06       		.uleb128 0x6
 1079 03aa 5E010000 		.4byte	.LVL48
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\cc8WnjKS.s 			page 25


 1080 03ae 2B080000 		.4byte	0x82b
 1081 03b2 08       		.uleb128 0x8
 1082 03b3 80010000 		.4byte	.LVL49
 1083 03b7 15080000 		.4byte	0x815
 1084 03bb 09       		.uleb128 0x9
 1085 03bc 01       		.uleb128 0x1
 1086 03bd 50       		.byte	0x50
 1087 03be 02       		.uleb128 0x2
 1088 03bf 08       		.byte	0x8
 1089 03c0 3C       		.byte	0x3c
 1090 03c1 09       		.uleb128 0x9
 1091 03c2 01       		.uleb128 0x1
 1092 03c3 51       		.byte	0x51
 1093 03c4 01       		.uleb128 0x1
 1094 03c5 33       		.byte	0x33
 1095 03c6 09       		.uleb128 0x9
 1096 03c7 01       		.uleb128 0x1
 1097 03c8 52       		.byte	0x52
 1098 03c9 02       		.uleb128 0x2
 1099 03ca 08       		.byte	0x8
 1100 03cb 5A       		.byte	0x5a
 1101 03cc 00       		.byte	0
 1102 03cd 00       		.byte	0
 1103 03ce 0D       		.uleb128 0xd
 1104 03cf 5D060000 		.4byte	.LASF20
 1105 03d3 04       		.byte	0x4
 1106 03d4 1207     		.2byte	0x712
 1107 03d6 DA030000 		.4byte	0x3da
 1108 03da 0E       		.uleb128 0xe
 1109 03db 76000000 		.4byte	0x76
 1110 03df 0F       		.uleb128 0xf
 1111 03e0 17050000 		.4byte	.LASF21
 1112 03e4 05       		.byte	0x5
 1113 03e5 1D       		.byte	0x1d
 1114 03e6 68000000 		.4byte	0x68
 1115 03ea 05       		.uleb128 0x5
 1116 03eb 03       		.byte	0x3
 1117 03ec 00000000 		.4byte	driveStraightEnable
 1118 03f0 0F       		.uleb128 0xf
 1119 03f1 3C030000 		.4byte	.LASF22
 1120 03f5 01       		.byte	0x1
 1121 03f6 67       		.byte	0x67
 1122 03f7 68000000 		.4byte	0x68
 1123 03fb 05       		.uleb128 0x5
 1124 03fc 03       		.byte	0x3
 1125 03fd 00000000 		.4byte	currentPuckRackScanningIndex
 1126 0401 10       		.uleb128 0x10
 1127 0402 68000000 		.4byte	0x68
 1128 0406 11040000 		.4byte	0x411
 1129 040a 11       		.uleb128 0x11
 1130 040b 9D000000 		.4byte	0x9d
 1131 040f 04       		.byte	0x4
 1132 0410 00       		.byte	0
 1133 0411 0F       		.uleb128 0xf
 1134 0412 13060000 		.4byte	.LASF23
 1135 0416 01       		.byte	0x1
 1136 0417 66       		.byte	0x66
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\cc8WnjKS.s 			page 26


 1137 0418 01040000 		.4byte	0x401
 1138 041c 05       		.uleb128 0x5
 1139 041d 03       		.byte	0x3
 1140 041e 00000000 		.4byte	puckRackColours
 1141 0422 0F       		.uleb128 0xf
 1142 0423 FD000000 		.4byte	.LASF24
 1143 0427 01       		.byte	0x1
 1144 0428 68       		.byte	0x68
 1145 0429 01040000 		.4byte	0x401
 1146 042d 05       		.uleb128 0x5
 1147 042e 03       		.byte	0x3
 1148 042f 00000000 		.4byte	puckRackOffsetsFromWest
 1149 0433 0F       		.uleb128 0xf
 1150 0434 F2040000 		.4byte	.LASF25
 1151 0438 01       		.byte	0x1
 1152 0439 5C       		.byte	0x5c
 1153 043a 68000000 		.4byte	0x68
 1154 043e 05       		.uleb128 0x5
 1155 043f 03       		.byte	0x3
 1156 0440 00000000 		.4byte	sweeping
 1157 0444 10       		.uleb128 0x10
 1158 0445 81000000 		.4byte	0x81
 1159 0449 54040000 		.4byte	0x454
 1160 044d 11       		.uleb128 0x11
 1161 044e 9D000000 		.4byte	0x9d
 1162 0452 03       		.byte	0x3
 1163 0453 00       		.byte	0
 1164 0454 0F       		.uleb128 0xf
 1165 0455 25040000 		.4byte	.LASF26
 1166 0459 01       		.byte	0x1
 1167 045a 61       		.byte	0x61
 1168 045b 44040000 		.4byte	0x444
 1169 045f 05       		.uleb128 0x5
 1170 0460 03       		.byte	0x3
 1171 0461 00000000 		.4byte	block_edge_location
 1172 0465 0F       		.uleb128 0xf
 1173 0466 0E030000 		.4byte	.LASF27
 1174 046a 06       		.byte	0x6
 1175 046b 75       		.byte	0x75
 1176 046c 81000000 		.4byte	0x81
 1177 0470 05       		.uleb128 0x5
 1178 0471 03       		.byte	0x3
 1179 0472 00000000 		.4byte	puckPileLocation
 1180 0476 0F       		.uleb128 0xf
 1181 0477 C2050000 		.4byte	.LASF28
 1182 047b 01       		.byte	0x1
 1183 047c 58       		.byte	0x58
 1184 047d 68000000 		.4byte	0x68
 1185 0481 05       		.uleb128 0x5
 1186 0482 03       		.byte	0x3
 1187 0483 00000000 		.4byte	state
 1188 0487 10       		.uleb128 0x10
 1189 0488 81000000 		.4byte	0x81
 1190 048c 97040000 		.4byte	0x497
 1191 0490 11       		.uleb128 0x11
 1192 0491 9D000000 		.4byte	0x9d
 1193 0495 01       		.byte	0x1
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\cc8WnjKS.s 			page 27


 1194 0496 00       		.byte	0
 1195 0497 0F       		.uleb128 0xf
 1196 0498 A8000000 		.4byte	.LASF29
 1197 049c 01       		.byte	0x1
 1198 049d 1F       		.byte	0x1f
 1199 049e 87040000 		.4byte	0x487
 1200 04a2 05       		.uleb128 0x5
 1201 04a3 03       		.byte	0x3
 1202 04a4 00000000 		.4byte	currentPosition
 1203 04a8 0F       		.uleb128 0xf
 1204 04a9 4D050000 		.4byte	.LASF30
 1205 04ad 01       		.byte	0x1
 1206 04ae 20       		.byte	0x20
 1207 04af 87040000 		.4byte	0x487
 1208 04b3 05       		.uleb128 0x5
 1209 04b4 03       		.byte	0x3
 1210 04b5 00000000 		.4byte	desiredPosition
 1211 04b9 0F       		.uleb128 0xf
 1212 04ba AD040000 		.4byte	.LASF31
 1213 04be 01       		.byte	0x1
 1214 04bf 21       		.byte	0x21
 1215 04c0 68000000 		.4byte	0x68
 1216 04c4 05       		.uleb128 0x5
 1217 04c5 03       		.byte	0x3
 1218 04c6 00000000 		.4byte	currentOrientation
 1219 04ca 0F       		.uleb128 0xf
 1220 04cb 15010000 		.4byte	.LASF32
 1221 04cf 01       		.byte	0x1
 1222 04d0 22       		.byte	0x22
 1223 04d1 68000000 		.4byte	0x68
 1224 04d5 05       		.uleb128 0x5
 1225 04d6 03       		.byte	0x3
 1226 04d7 00000000 		.4byte	desiredOrientation
 1227 04db 0F       		.uleb128 0xf
 1228 04dc 5D050000 		.4byte	.LASF33
 1229 04e0 01       		.byte	0x1
 1230 04e1 29       		.byte	0x29
 1231 04e2 68000000 		.4byte	0x68
 1232 04e6 05       		.uleb128 0x5
 1233 04e7 03       		.byte	0x3
 1234 04e8 00000000 		.4byte	M1_FD
 1235 04ec 0F       		.uleb128 0xf
 1236 04ed 09050000 		.4byte	.LASF34
 1237 04f1 01       		.byte	0x1
 1238 04f2 2A       		.byte	0x2a
 1239 04f3 68000000 		.4byte	0x68
 1240 04f7 05       		.uleb128 0x5
 1241 04f8 03       		.byte	0x3
 1242 04f9 00000000 		.4byte	M1_BD
 1243 04fd 0F       		.uleb128 0xf
 1244 04fe 51070000 		.4byte	.LASF35
 1245 0502 01       		.byte	0x1
 1246 0503 2B       		.byte	0x2b
 1247 0504 68000000 		.4byte	0x68
 1248 0508 05       		.uleb128 0x5
 1249 0509 03       		.byte	0x3
 1250 050a 00000000 		.4byte	M2_FD
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\cc8WnjKS.s 			page 28


 1251 050e 0F       		.uleb128 0xf
 1252 050f 57060000 		.4byte	.LASF36
 1253 0513 01       		.byte	0x1
 1254 0514 2C       		.byte	0x2c
 1255 0515 68000000 		.4byte	0x68
 1256 0519 05       		.uleb128 0x5
 1257 051a 03       		.byte	0x3
 1258 051b 00000000 		.4byte	M2_BD
 1259 051f 0F       		.uleb128 0xf
 1260 0520 ED010000 		.4byte	.LASF37
 1261 0524 01       		.byte	0x1
 1262 0525 27       		.byte	0x27
 1263 0526 33000000 		.4byte	0x33
 1264 052a 05       		.uleb128 0x5
 1265 052b 03       		.byte	0x3
 1266 052c 00000000 		.4byte	motor1Enable
 1267 0530 0F       		.uleb128 0xf
 1268 0531 C8050000 		.4byte	.LASF38
 1269 0535 01       		.byte	0x1
 1270 0536 28       		.byte	0x28
 1271 0537 33000000 		.4byte	0x33
 1272 053b 05       		.uleb128 0x5
 1273 053c 03       		.byte	0x3
 1274 053d 00000000 		.4byte	motor2Enable
 1275 0541 0F       		.uleb128 0xf
 1276 0542 E9000000 		.4byte	.LASF39
 1277 0546 01       		.byte	0x1
 1278 0547 2D       		.byte	0x2d
 1279 0548 68000000 		.4byte	0x68
 1280 054c 05       		.uleb128 0x5
 1281 054d 03       		.byte	0x3
 1282 054e 00000000 		.4byte	motor1EncoderCounts
 1283 0552 0F       		.uleb128 0xf
 1284 0553 00000000 		.4byte	.LASF40
 1285 0557 01       		.byte	0x1
 1286 0558 2E       		.byte	0x2e
 1287 0559 68000000 		.4byte	0x68
 1288 055d 05       		.uleb128 0x5
 1289 055e 03       		.byte	0x3
 1290 055f 00000000 		.4byte	motor2EncoderCounts
 1291 0563 0F       		.uleb128 0xf
 1292 0564 1D040000 		.4byte	.LASF41
 1293 0568 01       		.byte	0x1
 1294 0569 2F       		.byte	0x2f
 1295 056a 33000000 		.4byte	0x33
 1296 056e 05       		.uleb128 0x5
 1297 056f 03       		.byte	0x3
 1298 0570 00000000 		.4byte	moveNow
 1299 0574 0F       		.uleb128 0xf
 1300 0575 C6000000 		.4byte	.LASF42
 1301 0579 01       		.byte	0x1
 1302 057a 36       		.byte	0x36
 1303 057b 33000000 		.4byte	0x33
 1304 057f 05       		.uleb128 0x5
 1305 0580 03       		.byte	0x3
 1306 0581 00000000 		.4byte	drivingForwardFlag
 1307 0585 0F       		.uleb128 0xf
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\cc8WnjKS.s 			page 29


 1308 0586 FA020000 		.4byte	.LASF43
 1309 058a 01       		.byte	0x1
 1310 058b 37       		.byte	0x37
 1311 058c 33000000 		.4byte	0x33
 1312 0590 05       		.uleb128 0x5
 1313 0591 03       		.byte	0x3
 1314 0592 00000000 		.4byte	drivingBackwardFlag
 1315 0596 0F       		.uleb128 0xf
 1316 0597 7A000000 		.4byte	.LASF44
 1317 059b 01       		.byte	0x1
 1318 059c 38       		.byte	0x38
 1319 059d 33000000 		.4byte	0x33
 1320 05a1 05       		.uleb128 0x5
 1321 05a2 03       		.byte	0x3
 1322 05a3 00000000 		.4byte	turningLeftFlag
 1323 05a7 0F       		.uleb128 0xf
 1324 05a8 2D020000 		.4byte	.LASF45
 1325 05ac 01       		.byte	0x1
 1326 05ad 39       		.byte	0x39
 1327 05ae 33000000 		.4byte	0x33
 1328 05b2 05       		.uleb128 0x5
 1329 05b3 03       		.byte	0x3
 1330 05b4 00000000 		.4byte	turningRightFlag
 1331 05b8 0F       		.uleb128 0xf
 1332 05b9 23060000 		.4byte	.LASF46
 1333 05bd 01       		.byte	0x1
 1334 05be 3C       		.byte	0x3c
 1335 05bf 33000000 		.4byte	0x33
 1336 05c3 05       		.uleb128 0x5
 1337 05c4 03       		.byte	0x3
 1338 05c5 00000000 		.4byte	moveLeftAllowed
 1339 05c9 0F       		.uleb128 0xf
 1340 05ca 46060000 		.4byte	.LASF47
 1341 05ce 01       		.byte	0x1
 1342 05cf 3D       		.byte	0x3d
 1343 05d0 33000000 		.4byte	0x33
 1344 05d4 05       		.uleb128 0x5
 1345 05d5 03       		.byte	0x3
 1346 05d6 00000000 		.4byte	moveRightAllowed
 1347 05da 0F       		.uleb128 0xf
 1348 05db C0040000 		.4byte	.LASF48
 1349 05df 01       		.byte	0x1
 1350 05e0 3E       		.byte	0x3e
 1351 05e1 33000000 		.4byte	0x33
 1352 05e5 05       		.uleb128 0x5
 1353 05e6 03       		.byte	0x3
 1354 05e7 00000000 		.4byte	moveForwardAllowed
 1355 05eb 0F       		.uleb128 0xf
 1356 05ec 50040000 		.4byte	.LASF49
 1357 05f0 01       		.byte	0x1
 1358 05f1 3F       		.byte	0x3f
 1359 05f2 33000000 		.4byte	0x33
 1360 05f6 05       		.uleb128 0x5
 1361 05f7 03       		.byte	0x3
 1362 05f8 00000000 		.4byte	moveBackwardAllowed
 1363 05fc 0F       		.uleb128 0xf
 1364 05fd 71040000 		.4byte	.LASF50
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\cc8WnjKS.s 			page 30


 1365 0601 01       		.byte	0x1
 1366 0602 53       		.byte	0x53
 1367 0603 68000000 		.4byte	0x68
 1368 0607 05       		.uleb128 0x5
 1369 0608 03       		.byte	0x3
 1370 0609 00000000 		.4byte	idac_value
 1371 060d 0F       		.uleb128 0xf
 1372 060e 7D030000 		.4byte	.LASF51
 1373 0612 01       		.byte	0x1
 1374 0613 54       		.byte	0x54
 1375 0614 68000000 		.4byte	0x68
 1376 0618 05       		.uleb128 0x5
 1377 0619 03       		.byte	0x3
 1378 061a 00000000 		.4byte	colour_flag
 1379 061e 0F       		.uleb128 0xf
 1380 061f D9000000 		.4byte	.LASF52
 1381 0623 01       		.byte	0x1
 1382 0624 56       		.byte	0x56
 1383 0625 68000000 		.4byte	0x68
 1384 0629 05       		.uleb128 0x5
 1385 062a 03       		.byte	0x3
 1386 062b 00000000 		.4byte	beginNavigation
 1387 062f 0F       		.uleb128 0xf
 1388 0630 E5010000 		.4byte	.LASF53
 1389 0634 01       		.byte	0x1
 1390 0635 5A       		.byte	0x5a
 1391 0636 68000000 		.4byte	0x68
 1392 063a 05       		.uleb128 0x5
 1393 063b 03       		.byte	0x3
 1394 063c 00000000 		.4byte	running
 1395 0640 0F       		.uleb128 0xf
 1396 0641 30070000 		.4byte	.LASF54
 1397 0645 01       		.byte	0x1
 1398 0646 5E       		.byte	0x5e
 1399 0647 68000000 		.4byte	0x68
 1400 064b 05       		.uleb128 0x5
 1401 064c 03       		.byte	0x3
 1402 064d 00000000 		.4byte	pathToPucks
 1403 0651 0F       		.uleb128 0xf
 1404 0652 88020000 		.4byte	.LASF55
 1405 0656 01       		.byte	0x1
 1406 0657 5F       		.byte	0x5f
 1407 0658 68000000 		.4byte	0x68
 1408 065c 05       		.uleb128 0x5
 1409 065d 03       		.byte	0x3
 1410 065e 00000000 		.4byte	pathPastBlock
 1411 0662 0F       		.uleb128 0xf
 1412 0663 D0010000 		.4byte	.LASF56
 1413 0667 01       		.byte	0x1
 1414 0668 63       		.byte	0x63
 1415 0669 68000000 		.4byte	0x68
 1416 066d 05       		.uleb128 0x5
 1417 066e 03       		.byte	0x3
 1418 066f 00000000 		.4byte	currentPuckStackSize
 1419 0673 12       		.uleb128 0x12
 1420 0674 2B050000 		.4byte	.LASF57
 1421 0678 2B050000 		.4byte	.LASF57
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\cc8WnjKS.s 			page 31


 1422 067c 07       		.byte	0x7
 1423 067d 1C       		.byte	0x1c
 1424 067e 12       		.uleb128 0x12
 1425 067f 94000000 		.4byte	.LASF58
 1426 0683 94000000 		.4byte	.LASF58
 1427 0687 07       		.byte	0x7
 1428 0688 1D       		.byte	0x1d
 1429 0689 12       		.uleb128 0x12
 1430 068a E4050000 		.4byte	.LASF59
 1431 068e E4050000 		.4byte	.LASF59
 1432 0692 08       		.byte	0x8
 1433 0693 5E       		.byte	0x5e
 1434 0694 12       		.uleb128 0x12
 1435 0695 59030000 		.4byte	.LASF60
 1436 0699 59030000 		.4byte	.LASF60
 1437 069d 08       		.byte	0x8
 1438 069e 5B       		.byte	0x5b
 1439 069f 12       		.uleb128 0x12
 1440 06a0 6F070000 		.4byte	.LASF61
 1441 06a4 6F070000 		.4byte	.LASF61
 1442 06a8 09       		.byte	0x9
 1443 06a9 5D       		.byte	0x5d
 1444 06aa 12       		.uleb128 0x12
 1445 06ab 7C040000 		.4byte	.LASF62
 1446 06af 7C040000 		.4byte	.LASF62
 1447 06b3 0A       		.byte	0xa
 1448 06b4 5D       		.byte	0x5d
 1449 06b5 12       		.uleb128 0x12
 1450 06b6 52010000 		.4byte	.LASF63
 1451 06ba 52010000 		.4byte	.LASF63
 1452 06be 07       		.byte	0x7
 1453 06bf 11       		.byte	0x11
 1454 06c0 12       		.uleb128 0x12
 1455 06c1 12020000 		.4byte	.LASF64
 1456 06c5 12020000 		.4byte	.LASF64
 1457 06c9 05       		.byte	0x5
 1458 06ca 18       		.byte	0x18
 1459 06cb 12       		.uleb128 0x12
 1460 06cc F8060000 		.4byte	.LASF65
 1461 06d0 F8060000 		.4byte	.LASF65
 1462 06d4 0B       		.byte	0xb
 1463 06d5 76       		.byte	0x76
 1464 06d6 12       		.uleb128 0x12
 1465 06d7 E6040000 		.4byte	.LASF66
 1466 06db E6040000 		.4byte	.LASF66
 1467 06df 0C       		.byte	0xc
 1468 06e0 3D       		.byte	0x3d
 1469 06e1 12       		.uleb128 0x12
 1470 06e2 70030000 		.4byte	.LASF67
 1471 06e6 70030000 		.4byte	.LASF67
 1472 06ea 0D       		.byte	0xd
 1473 06eb 54       		.byte	0x54
 1474 06ec 12       		.uleb128 0x12
 1475 06ed 9D050000 		.4byte	.LASF68
 1476 06f1 9D050000 		.4byte	.LASF68
 1477 06f5 0D       		.byte	0xd
 1478 06f6 8B       		.byte	0x8b
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\cc8WnjKS.s 			page 32


 1479 06f7 12       		.uleb128 0x12
 1480 06f8 96020000 		.4byte	.LASF69
 1481 06fc 96020000 		.4byte	.LASF69
 1482 0700 0E       		.byte	0xe
 1483 0701 3A       		.byte	0x3a
 1484 0702 12       		.uleb128 0x12
 1485 0703 9F040000 		.4byte	.LASF70
 1486 0707 9F040000 		.4byte	.LASF70
 1487 070b 0F       		.byte	0xf
 1488 070c 3C       		.byte	0x3c
 1489 070d 12       		.uleb128 0x12
 1490 070e A3030000 		.4byte	.LASF71
 1491 0712 A3030000 		.4byte	.LASF71
 1492 0716 0F       		.byte	0xf
 1493 0717 40       		.byte	0x40
 1494 0718 12       		.uleb128 0x12
 1495 0719 63050000 		.4byte	.LASF72
 1496 071d 63050000 		.4byte	.LASF72
 1497 0721 0F       		.byte	0xf
 1498 0722 41       		.byte	0x41
 1499 0723 12       		.uleb128 0x12
 1500 0724 E9020000 		.4byte	.LASF73
 1501 0728 E9020000 		.4byte	.LASF73
 1502 072c 10       		.byte	0x10
 1503 072d 92       		.byte	0x92
 1504 072e 12       		.uleb128 0x12
 1505 072f AD020000 		.4byte	.LASF74
 1506 0733 AD020000 		.4byte	.LASF74
 1507 0737 10       		.byte	0x10
 1508 0738 DC       		.byte	0xdc
 1509 0739 12       		.uleb128 0x12
 1510 073a 00070000 		.4byte	.LASF75
 1511 073e 00070000 		.4byte	.LASF75
 1512 0742 11       		.byte	0x11
 1513 0743 22       		.byte	0x22
 1514 0744 12       		.uleb128 0x12
 1515 0745 3F050000 		.4byte	.LASF76
 1516 0749 3F050000 		.4byte	.LASF76
 1517 074d 12       		.byte	0x12
 1518 074e 5A       		.byte	0x5a
 1519 074f 12       		.uleb128 0x12
 1520 0750 5F010000 		.4byte	.LASF77
 1521 0754 5F010000 		.4byte	.LASF77
 1522 0758 12       		.byte	0x12
 1523 0759 5E       		.byte	0x5e
 1524 075a 12       		.uleb128 0x12
 1525 075b B8000000 		.4byte	.LASF78
 1526 075f B8000000 		.4byte	.LASF78
 1527 0763 13       		.byte	0x13
 1528 0764 18       		.byte	0x18
 1529 0765 12       		.uleb128 0x12
 1530 0766 88050000 		.4byte	.LASF79
 1531 076a 88050000 		.4byte	.LASF79
 1532 076e 14       		.byte	0x14
 1533 076f 18       		.byte	0x18
 1534 0770 12       		.uleb128 0x12
 1535 0771 1B070000 		.4byte	.LASF80
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\cc8WnjKS.s 			page 33


 1536 0775 1B070000 		.4byte	.LASF80
 1537 0779 15       		.byte	0x15
 1538 077a 92       		.byte	0x92
 1539 077b 12       		.uleb128 0x12
 1540 077c 3C070000 		.4byte	.LASF81
 1541 0780 3C070000 		.4byte	.LASF81
 1542 0784 16       		.byte	0x16
 1543 0785 92       		.byte	0x92
 1544 0786 12       		.uleb128 0x12
 1545 0787 14000000 		.4byte	.LASF82
 1546 078b 14000000 		.4byte	.LASF82
 1547 078f 07       		.byte	0x7
 1548 0790 10       		.byte	0x10
 1549 0791 12       		.uleb128 0x12
 1550 0792 35010000 		.4byte	.LASF83
 1551 0796 35010000 		.4byte	.LASF83
 1552 079a 09       		.byte	0x9
 1553 079b 4F       		.byte	0x4f
 1554 079c 12       		.uleb128 0x12
 1555 079d 1F030000 		.4byte	.LASF84
 1556 07a1 1F030000 		.4byte	.LASF84
 1557 07a5 0A       		.byte	0xa
 1558 07a6 4F       		.byte	0x4f
 1559 07a7 12       		.uleb128 0x12
 1560 07a8 57070000 		.4byte	.LASF85
 1561 07ac 57070000 		.4byte	.LASF85
 1562 07b0 08       		.byte	0x8
 1563 07b1 5A       		.byte	0x5a
 1564 07b2 12       		.uleb128 0x12
 1565 07b3 8F010000 		.4byte	.LASF86
 1566 07b7 8F010000 		.4byte	.LASF86
 1567 07bb 17       		.byte	0x17
 1568 07bc 18       		.byte	0x18
 1569 07bd 12       		.uleb128 0x12
 1570 07be 65020000 		.4byte	.LASF87
 1571 07c2 65020000 		.4byte	.LASF87
 1572 07c6 18       		.byte	0x18
 1573 07c7 18       		.byte	0x18
 1574 07c8 12       		.uleb128 0x12
 1575 07c9 B2010000 		.4byte	.LASF88
 1576 07cd B2010000 		.4byte	.LASF88
 1577 07d1 19       		.byte	0x19
 1578 07d2 18       		.byte	0x18
 1579 07d3 12       		.uleb128 0x12
 1580 07d4 7A010000 		.4byte	.LASF89
 1581 07d8 7A010000 		.4byte	.LASF89
 1582 07dc 1A       		.byte	0x1a
 1583 07dd 92       		.byte	0x92
 1584 07de 12       		.uleb128 0x12
 1585 07df FA010000 		.4byte	.LASF90
 1586 07e3 FA010000 		.4byte	.LASF90
 1587 07e7 1B       		.byte	0x1b
 1588 07e8 92       		.byte	0x92
 1589 07e9 12       		.uleb128 0x12
 1590 07ea BE020000 		.4byte	.LASF91
 1591 07ee BE020000 		.4byte	.LASF91
 1592 07f2 07       		.byte	0x7
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\cc8WnjKS.s 			page 34


 1593 07f3 16       		.byte	0x16
 1594 07f4 12       		.uleb128 0x12
 1595 07f5 29000000 		.4byte	.LASF92
 1596 07f9 29000000 		.4byte	.LASF92
 1597 07fd 07       		.byte	0x7
 1598 07fe 14       		.byte	0x14
 1599 07ff 12       		.uleb128 0x12
 1600 0800 61000000 		.4byte	.LASF93
 1601 0804 61000000 		.4byte	.LASF93
 1602 0808 11       		.byte	0x11
 1603 0809 23       		.byte	0x23
 1604 080a 12       		.uleb128 0x12
 1605 080b 33060000 		.4byte	.LASF94
 1606 080f 33060000 		.4byte	.LASF94
 1607 0813 07       		.byte	0x7
 1608 0814 18       		.byte	0x18
 1609 0815 12       		.uleb128 0x12
 1610 0816 7B050000 		.4byte	.LASF95
 1611 081a 7B050000 		.4byte	.LASF95
 1612 081e 07       		.byte	0x7
 1613 081f 1E       		.byte	0x1e
 1614 0820 12       		.uleb128 0x12
 1615 0821 A0020000 		.4byte	.LASF96
 1616 0825 A0020000 		.4byte	.LASF96
 1617 0829 1C       		.byte	0x1c
 1618 082a 14       		.byte	0x14
 1619 082b 12       		.uleb128 0x12
 1620 082c 44020000 		.4byte	.LASF97
 1621 0830 44020000 		.4byte	.LASF97
 1622 0834 1C       		.byte	0x1c
 1623 0835 13       		.byte	0x13
 1624 0836 00       		.byte	0
 1625              		.section	.debug_abbrev,"",%progbits
 1626              	.Ldebug_abbrev0:
 1627 0000 01       		.uleb128 0x1
 1628 0001 11       		.uleb128 0x11
 1629 0002 01       		.byte	0x1
 1630 0003 25       		.uleb128 0x25
 1631 0004 0E       		.uleb128 0xe
 1632 0005 13       		.uleb128 0x13
 1633 0006 0B       		.uleb128 0xb
 1634 0007 03       		.uleb128 0x3
 1635 0008 0E       		.uleb128 0xe
 1636 0009 1B       		.uleb128 0x1b
 1637 000a 0E       		.uleb128 0xe
 1638 000b 55       		.uleb128 0x55
 1639 000c 17       		.uleb128 0x17
 1640 000d 11       		.uleb128 0x11
 1641 000e 01       		.uleb128 0x1
 1642 000f 10       		.uleb128 0x10
 1643 0010 17       		.uleb128 0x17
 1644 0011 00       		.byte	0
 1645 0012 00       		.byte	0
 1646 0013 02       		.uleb128 0x2
 1647 0014 24       		.uleb128 0x24
 1648 0015 00       		.byte	0
 1649 0016 0B       		.uleb128 0xb
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\cc8WnjKS.s 			page 35


 1650 0017 0B       		.uleb128 0xb
 1651 0018 3E       		.uleb128 0x3e
 1652 0019 0B       		.uleb128 0xb
 1653 001a 03       		.uleb128 0x3
 1654 001b 0E       		.uleb128 0xe
 1655 001c 00       		.byte	0
 1656 001d 00       		.byte	0
 1657 001e 03       		.uleb128 0x3
 1658 001f 16       		.uleb128 0x16
 1659 0020 00       		.byte	0
 1660 0021 03       		.uleb128 0x3
 1661 0022 0E       		.uleb128 0xe
 1662 0023 3A       		.uleb128 0x3a
 1663 0024 0B       		.uleb128 0xb
 1664 0025 3B       		.uleb128 0x3b
 1665 0026 0B       		.uleb128 0xb
 1666 0027 49       		.uleb128 0x49
 1667 0028 13       		.uleb128 0x13
 1668 0029 00       		.byte	0
 1669 002a 00       		.byte	0
 1670 002b 04       		.uleb128 0x4
 1671 002c 24       		.uleb128 0x24
 1672 002d 00       		.byte	0
 1673 002e 0B       		.uleb128 0xb
 1674 002f 0B       		.uleb128 0xb
 1675 0030 3E       		.uleb128 0x3e
 1676 0031 0B       		.uleb128 0xb
 1677 0032 03       		.uleb128 0x3
 1678 0033 08       		.uleb128 0x8
 1679 0034 00       		.byte	0
 1680 0035 00       		.byte	0
 1681 0036 05       		.uleb128 0x5
 1682 0037 2E       		.uleb128 0x2e
 1683 0038 01       		.byte	0x1
 1684 0039 3F       		.uleb128 0x3f
 1685 003a 19       		.uleb128 0x19
 1686 003b 03       		.uleb128 0x3
 1687 003c 0E       		.uleb128 0xe
 1688 003d 3A       		.uleb128 0x3a
 1689 003e 0B       		.uleb128 0xb
 1690 003f 3B       		.uleb128 0x3b
 1691 0040 0B       		.uleb128 0xb
 1692 0041 27       		.uleb128 0x27
 1693 0042 19       		.uleb128 0x19
 1694 0043 11       		.uleb128 0x11
 1695 0044 01       		.uleb128 0x1
 1696 0045 12       		.uleb128 0x12
 1697 0046 06       		.uleb128 0x6
 1698 0047 40       		.uleb128 0x40
 1699 0048 18       		.uleb128 0x18
 1700 0049 9742     		.uleb128 0x2117
 1701 004b 19       		.uleb128 0x19
 1702 004c 01       		.uleb128 0x1
 1703 004d 13       		.uleb128 0x13
 1704 004e 00       		.byte	0
 1705 004f 00       		.byte	0
 1706 0050 06       		.uleb128 0x6
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\cc8WnjKS.s 			page 36


 1707 0051 898201   		.uleb128 0x4109
 1708 0054 00       		.byte	0
 1709 0055 11       		.uleb128 0x11
 1710 0056 01       		.uleb128 0x1
 1711 0057 31       		.uleb128 0x31
 1712 0058 13       		.uleb128 0x13
 1713 0059 00       		.byte	0
 1714 005a 00       		.byte	0
 1715 005b 07       		.uleb128 0x7
 1716 005c 2E       		.uleb128 0x2e
 1717 005d 01       		.byte	0x1
 1718 005e 3F       		.uleb128 0x3f
 1719 005f 19       		.uleb128 0x19
 1720 0060 03       		.uleb128 0x3
 1721 0061 08       		.uleb128 0x8
 1722 0062 3A       		.uleb128 0x3a
 1723 0063 0B       		.uleb128 0xb
 1724 0064 3B       		.uleb128 0x3b
 1725 0065 0B       		.uleb128 0xb
 1726 0066 27       		.uleb128 0x27
 1727 0067 19       		.uleb128 0x19
 1728 0068 11       		.uleb128 0x11
 1729 0069 01       		.uleb128 0x1
 1730 006a 12       		.uleb128 0x12
 1731 006b 06       		.uleb128 0x6
 1732 006c 40       		.uleb128 0x40
 1733 006d 18       		.uleb128 0x18
 1734 006e 9742     		.uleb128 0x2117
 1735 0070 19       		.uleb128 0x19
 1736 0071 01       		.uleb128 0x1
 1737 0072 13       		.uleb128 0x13
 1738 0073 00       		.byte	0
 1739 0074 00       		.byte	0
 1740 0075 08       		.uleb128 0x8
 1741 0076 898201   		.uleb128 0x4109
 1742 0079 01       		.byte	0x1
 1743 007a 11       		.uleb128 0x11
 1744 007b 01       		.uleb128 0x1
 1745 007c 31       		.uleb128 0x31
 1746 007d 13       		.uleb128 0x13
 1747 007e 00       		.byte	0
 1748 007f 00       		.byte	0
 1749 0080 09       		.uleb128 0x9
 1750 0081 8A8201   		.uleb128 0x410a
 1751 0084 00       		.byte	0
 1752 0085 02       		.uleb128 0x2
 1753 0086 18       		.uleb128 0x18
 1754 0087 9142     		.uleb128 0x2111
 1755 0089 18       		.uleb128 0x18
 1756 008a 00       		.byte	0
 1757 008b 00       		.byte	0
 1758 008c 0A       		.uleb128 0xa
 1759 008d 2E       		.uleb128 0x2e
 1760 008e 01       		.byte	0x1
 1761 008f 3F       		.uleb128 0x3f
 1762 0090 19       		.uleb128 0x19
 1763 0091 03       		.uleb128 0x3
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\cc8WnjKS.s 			page 37


 1764 0092 0E       		.uleb128 0xe
 1765 0093 3A       		.uleb128 0x3a
 1766 0094 0B       		.uleb128 0xb
 1767 0095 3B       		.uleb128 0x3b
 1768 0096 0B       		.uleb128 0xb
 1769 0097 27       		.uleb128 0x27
 1770 0098 19       		.uleb128 0x19
 1771 0099 49       		.uleb128 0x49
 1772 009a 13       		.uleb128 0x13
 1773 009b 8701     		.uleb128 0x87
 1774 009d 19       		.uleb128 0x19
 1775 009e 11       		.uleb128 0x11
 1776 009f 01       		.uleb128 0x1
 1777 00a0 12       		.uleb128 0x12
 1778 00a1 06       		.uleb128 0x6
 1779 00a2 40       		.uleb128 0x40
 1780 00a3 18       		.uleb128 0x18
 1781 00a4 9642     		.uleb128 0x2116
 1782 00a6 19       		.uleb128 0x19
 1783 00a7 01       		.uleb128 0x1
 1784 00a8 13       		.uleb128 0x13
 1785 00a9 00       		.byte	0
 1786 00aa 00       		.byte	0
 1787 00ab 0B       		.uleb128 0xb
 1788 00ac 34       		.uleb128 0x34
 1789 00ad 00       		.byte	0
 1790 00ae 03       		.uleb128 0x3
 1791 00af 08       		.uleb128 0x8
 1792 00b0 3A       		.uleb128 0x3a
 1793 00b1 0B       		.uleb128 0xb
 1794 00b2 3B       		.uleb128 0x3b
 1795 00b3 0B       		.uleb128 0xb
 1796 00b4 49       		.uleb128 0x49
 1797 00b5 13       		.uleb128 0x13
 1798 00b6 1C       		.uleb128 0x1c
 1799 00b7 0B       		.uleb128 0xb
 1800 00b8 00       		.byte	0
 1801 00b9 00       		.byte	0
 1802 00ba 0C       		.uleb128 0xc
 1803 00bb 898201   		.uleb128 0x4109
 1804 00be 01       		.byte	0x1
 1805 00bf 11       		.uleb128 0x11
 1806 00c0 01       		.uleb128 0x1
 1807 00c1 31       		.uleb128 0x31
 1808 00c2 13       		.uleb128 0x13
 1809 00c3 01       		.uleb128 0x1
 1810 00c4 13       		.uleb128 0x13
 1811 00c5 00       		.byte	0
 1812 00c6 00       		.byte	0
 1813 00c7 0D       		.uleb128 0xd
 1814 00c8 34       		.uleb128 0x34
 1815 00c9 00       		.byte	0
 1816 00ca 03       		.uleb128 0x3
 1817 00cb 0E       		.uleb128 0xe
 1818 00cc 3A       		.uleb128 0x3a
 1819 00cd 0B       		.uleb128 0xb
 1820 00ce 3B       		.uleb128 0x3b
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\cc8WnjKS.s 			page 38


 1821 00cf 05       		.uleb128 0x5
 1822 00d0 49       		.uleb128 0x49
 1823 00d1 13       		.uleb128 0x13
 1824 00d2 3F       		.uleb128 0x3f
 1825 00d3 19       		.uleb128 0x19
 1826 00d4 3C       		.uleb128 0x3c
 1827 00d5 19       		.uleb128 0x19
 1828 00d6 00       		.byte	0
 1829 00d7 00       		.byte	0
 1830 00d8 0E       		.uleb128 0xe
 1831 00d9 35       		.uleb128 0x35
 1832 00da 00       		.byte	0
 1833 00db 49       		.uleb128 0x49
 1834 00dc 13       		.uleb128 0x13
 1835 00dd 00       		.byte	0
 1836 00de 00       		.byte	0
 1837 00df 0F       		.uleb128 0xf
 1838 00e0 34       		.uleb128 0x34
 1839 00e1 00       		.byte	0
 1840 00e2 03       		.uleb128 0x3
 1841 00e3 0E       		.uleb128 0xe
 1842 00e4 3A       		.uleb128 0x3a
 1843 00e5 0B       		.uleb128 0xb
 1844 00e6 3B       		.uleb128 0x3b
 1845 00e7 0B       		.uleb128 0xb
 1846 00e8 49       		.uleb128 0x49
 1847 00e9 13       		.uleb128 0x13
 1848 00ea 3F       		.uleb128 0x3f
 1849 00eb 19       		.uleb128 0x19
 1850 00ec 02       		.uleb128 0x2
 1851 00ed 18       		.uleb128 0x18
 1852 00ee 00       		.byte	0
 1853 00ef 00       		.byte	0
 1854 00f0 10       		.uleb128 0x10
 1855 00f1 01       		.uleb128 0x1
 1856 00f2 01       		.byte	0x1
 1857 00f3 49       		.uleb128 0x49
 1858 00f4 13       		.uleb128 0x13
 1859 00f5 01       		.uleb128 0x1
 1860 00f6 13       		.uleb128 0x13
 1861 00f7 00       		.byte	0
 1862 00f8 00       		.byte	0
 1863 00f9 11       		.uleb128 0x11
 1864 00fa 21       		.uleb128 0x21
 1865 00fb 00       		.byte	0
 1866 00fc 49       		.uleb128 0x49
 1867 00fd 13       		.uleb128 0x13
 1868 00fe 2F       		.uleb128 0x2f
 1869 00ff 0B       		.uleb128 0xb
 1870 0100 00       		.byte	0
 1871 0101 00       		.byte	0
 1872 0102 12       		.uleb128 0x12
 1873 0103 2E       		.uleb128 0x2e
 1874 0104 00       		.byte	0
 1875 0105 3F       		.uleb128 0x3f
 1876 0106 19       		.uleb128 0x19
 1877 0107 3C       		.uleb128 0x3c
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\cc8WnjKS.s 			page 39


 1878 0108 19       		.uleb128 0x19
 1879 0109 6E       		.uleb128 0x6e
 1880 010a 0E       		.uleb128 0xe
 1881 010b 03       		.uleb128 0x3
 1882 010c 0E       		.uleb128 0xe
 1883 010d 3A       		.uleb128 0x3a
 1884 010e 0B       		.uleb128 0xb
 1885 010f 3B       		.uleb128 0x3b
 1886 0110 0B       		.uleb128 0xb
 1887 0111 00       		.byte	0
 1888 0112 00       		.byte	0
 1889 0113 00       		.byte	0
 1890              		.section	.debug_aranges,"",%progbits
 1891 0000 44000000 		.4byte	0x44
 1892 0004 0200     		.2byte	0x2
 1893 0006 00000000 		.4byte	.Ldebug_info0
 1894 000a 04       		.byte	0x4
 1895 000b 00       		.byte	0
 1896 000c 0000     		.2byte	0
 1897 000e 0000     		.2byte	0
 1898 0010 00000000 		.4byte	.LFB64
 1899 0014 08000000 		.4byte	.LFE64-.LFB64
 1900 0018 00000000 		.4byte	.LFB65
 1901 001c 08000000 		.4byte	.LFE65-.LFB65
 1902 0020 00000000 		.4byte	.LFB66
 1903 0024 28000000 		.4byte	.LFE66-.LFB66
 1904 0028 00000000 		.4byte	.LFB67
 1905 002c 08000000 		.4byte	.LFE67-.LFB67
 1906 0030 00000000 		.4byte	.LFB68
 1907 0034 20000000 		.4byte	.LFE68-.LFB68
 1908 0038 00000000 		.4byte	.LFB69
 1909 003c B0010000 		.4byte	.LFE69-.LFB69
 1910 0040 00000000 		.4byte	0
 1911 0044 00000000 		.4byte	0
 1912              		.section	.debug_ranges,"",%progbits
 1913              	.Ldebug_ranges0:
 1914 0000 00000000 		.4byte	.LFB64
 1915 0004 08000000 		.4byte	.LFE64
 1916 0008 00000000 		.4byte	.LFB65
 1917 000c 08000000 		.4byte	.LFE65
 1918 0010 00000000 		.4byte	.LFB66
 1919 0014 28000000 		.4byte	.LFE66
 1920 0018 00000000 		.4byte	.LFB67
 1921 001c 08000000 		.4byte	.LFE67
 1922 0020 00000000 		.4byte	.LFB68
 1923 0024 20000000 		.4byte	.LFE68
 1924 0028 00000000 		.4byte	.LFB69
 1925 002c B0010000 		.4byte	.LFE69
 1926 0030 00000000 		.4byte	0
 1927 0034 00000000 		.4byte	0
 1928              		.section	.debug_line,"",%progbits
 1929              	.Ldebug_line0:
 1930 0000 AC030000 		.section	.debug_str,"MS",%progbits,1
 1930      0200E502 
 1930      00000201 
 1930      FB0E0D00 
 1930      01010101 
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\cc8WnjKS.s 			page 40


 1931              	.LASF40:
 1932 0000 6D6F746F 		.ascii	"motor2EncoderCounts\000"
 1932      7232456E 
 1932      636F6465 
 1932      72436F75 
 1932      6E747300 
 1933              	.LASF82:
 1934 0014 6D6F746F 		.ascii	"motorDutyCycleUpdate\000"
 1934      72447574 
 1934      79437963 
 1934      6C655570 
 1934      64617465 
 1935              	.LASF92:
 1936 0029 6D6F7665 		.ascii	"moveForwardIndefinitely\000"
 1936      466F7277 
 1936      61726449 
 1936      6E646566 
 1936      696E6974 
 1937              	.LASF17:
 1938 0041 456E636F 		.ascii	"Encoder_Counts_2_IH\000"
 1938      6465725F 
 1938      436F756E 
 1938      74735F32 
 1938      5F494800 
 1939              	.LASF0:
 1940 0055 7369676E 		.ascii	"signed char\000"
 1940      65642063 
 1940      68617200 
 1941              	.LASF93:
 1942 0061 436F6C6F 		.ascii	"ColourSensingViaHardware\000"
 1942      75725365 
 1942      6E73696E 
 1942      67566961 
 1942      48617264 
 1943              	.LASF44:
 1944 007a 7475726E 		.ascii	"turningLeftFlag\000"
 1944      696E674C 
 1944      65667446 
 1944      6C616700 
 1945              	.LASF2:
 1946 008a 73686F72 		.ascii	"short int\000"
 1946      7420696E 
 1946      7400
 1947              	.LASF58:
 1948 0094 73746F70 		.ascii	"stopMotor2AndUpdate\000"
 1948      4D6F746F 
 1948      7232416E 
 1948      64557064 
 1948      61746500 
 1949              	.LASF29:
 1950 00a8 63757272 		.ascii	"currentPosition\000"
 1950      656E7450 
 1950      6F736974 
 1950      696F6E00 
 1951              	.LASF78:
 1952 00b8 536F6E69 		.ascii	"Sonic_StartEx\000"
 1952      635F5374 
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\cc8WnjKS.s 			page 41


 1952      61727445 
 1952      7800
 1953              	.LASF42:
 1954 00c6 64726976 		.ascii	"drivingForwardFlag\000"
 1954      696E6746 
 1954      6F727761 
 1954      7264466C 
 1954      616700
 1955              	.LASF52:
 1956 00d9 62656769 		.ascii	"beginNavigation\000"
 1956      6E4E6176 
 1956      69676174 
 1956      696F6E00 
 1957              	.LASF39:
 1958 00e9 6D6F746F 		.ascii	"motor1EncoderCounts\000"
 1958      7231456E 
 1958      636F6465 
 1958      72436F75 
 1958      6E747300 
 1959              	.LASF24:
 1960 00fd 7075636B 		.ascii	"puckRackOffsetsFromWest\000"
 1960      5261636B 
 1960      4F666673 
 1960      65747346 
 1960      726F6D57 
 1961              	.LASF32:
 1962 0115 64657369 		.ascii	"desiredOrientation\000"
 1962      7265644F 
 1962      7269656E 
 1962      74617469 
 1962      6F6E00
 1963              	.LASF101:
 1964 0128 6D61696E 		.ascii	"main\000"
 1964      00
 1965              	.LASF19:
 1966 012d 53746172 		.ascii	"StartIH\000"
 1966      74494800 
 1967              	.LASF83:
 1968 0135 4D6F746F 		.ascii	"Motor_1_Encoder_Counts_Start\000"
 1968      725F315F 
 1968      456E636F 
 1968      6465725F 
 1968      436F756E 
 1969              	.LASF63:
 1970 0152 64726966 		.ascii	"driftCorrect\000"
 1970      74436F72 
 1970      72656374 
 1970      00
 1971              	.LASF77:
 1972 015f 54696D65 		.ascii	"Timer_1_ReadStatusRegister\000"
 1972      725F315F 
 1972      52656164 
 1972      53746174 
 1972      75735265 
 1973              	.LASF89:
 1974 017a 5261636B 		.ascii	"Rack_Servo_PWM_Start\000"
 1974      5F536572 
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\cc8WnjKS.s 			page 42


 1974      766F5F50 
 1974      574D5F53 
 1974      74617274 
 1975              	.LASF86:
 1976 018f 456E636F 		.ascii	"Encoder_Counts_1_Interrupt_StartEx\000"
 1976      6465725F 
 1976      436F756E 
 1976      74735F31 
 1976      5F496E74 
 1977              	.LASF88:
 1978 01b2 44726966 		.ascii	"Drift_Check_Interrupt_StartEx\000"
 1978      745F4368 
 1978      65636B5F 
 1978      496E7465 
 1978      72727570 
 1979              	.LASF56:
 1980 01d0 63757272 		.ascii	"currentPuckStackSize\000"
 1980      656E7450 
 1980      75636B53 
 1980      7461636B 
 1980      53697A65 
 1981              	.LASF53:
 1982 01e5 72756E6E 		.ascii	"running\000"
 1982      696E6700 
 1983              	.LASF37:
 1984 01ed 6D6F746F 		.ascii	"motor1Enable\000"
 1984      7231456E 
 1984      61626C65 
 1984      00
 1985              	.LASF90:
 1986 01fa 47726970 		.ascii	"Gripper_Servo_PWM_Start\000"
 1986      7065725F 
 1986      53657276 
 1986      6F5F5057 
 1986      4D5F5374 
 1987              	.LASF64:
 1988 0212 756C7472 		.ascii	"ultrasonicInterruptHandler\000"
 1988      61736F6E 
 1988      6963496E 
 1988      74657272 
 1988      75707448 
 1989              	.LASF45:
 1990 022d 7475726E 		.ascii	"turningRightFlag\000"
 1990      696E6752 
 1990      69676874 
 1990      466C6167 
 1990      00
 1991              	.LASF11:
 1992 023e 666C6F61 		.ascii	"float\000"
 1992      7400
 1993              	.LASF97:
 1994 0244 6368616E 		.ascii	"changeHeightToPuck\000"
 1994      67654865 
 1994      69676874 
 1994      546F5075 
 1994      636B00
 1995              	.LASF6:
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\cc8WnjKS.s 			page 43


 1996 0257 6C6F6E67 		.ascii	"long long int\000"
 1996      206C6F6E 
 1996      6720696E 
 1996      7400
 1997              	.LASF87:
 1998 0265 456E636F 		.ascii	"Encoder_Counts_2_Interrupt_StartEx\000"
 1998      6465725F 
 1998      436F756E 
 1998      74735F32 
 1998      5F496E74 
 1999              	.LASF55:
 2000 0288 70617468 		.ascii	"pathPastBlock\000"
 2000      50617374 
 2000      426C6F63 
 2000      6B00
 2001              	.LASF69:
 2002 0296 4144435F 		.ascii	"ADC_Start\000"
 2002      53746172 
 2002      7400
 2003              	.LASF96:
 2004 02a0 6C6F7765 		.ascii	"lowerAndOpen\000"
 2004      72416E64 
 2004      4F70656E 
 2004      00
 2005              	.LASF74:
 2006 02ad 50574D5F 		.ascii	"PWM_colour_Sleep\000"
 2006      636F6C6F 
 2006      75725F53 
 2006      6C656570 
 2006      00
 2007              	.LASF91:
 2008 02be 6D6F7665 		.ascii	"moveBackwardIndefinitely\000"
 2008      4261636B 
 2008      77617264 
 2008      496E6465 
 2008      66696E69 
 2009              	.LASF5:
 2010 02d7 6C6F6E67 		.ascii	"long unsigned int\000"
 2010      20756E73 
 2010      69676E65 
 2010      6420696E 
 2010      7400
 2011              	.LASF73:
 2012 02e9 50574D5F 		.ascii	"PWM_colour_Start\000"
 2012      636F6C6F 
 2012      75725F53 
 2012      74617274 
 2012      00
 2013              	.LASF43:
 2014 02fa 64726976 		.ascii	"drivingBackwardFlag\000"
 2014      696E6742 
 2014      61636B77 
 2014      61726446 
 2014      6C616700 
 2015              	.LASF27:
 2016 030e 7075636B 		.ascii	"puckPileLocation\000"
 2016      50696C65 
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\cc8WnjKS.s 			page 44


 2016      4C6F6361 
 2016      74696F6E 
 2016      00
 2017              	.LASF84:
 2018 031f 4D6F746F 		.ascii	"Motor_2_Encoder_Counts_Start\000"
 2018      725F325F 
 2018      456E636F 
 2018      6465725F 
 2018      436F756E 
 2019              	.LASF22:
 2020 033c 63757272 		.ascii	"currentPuckRackScanningIndex\000"
 2020      656E7450 
 2020      75636B52 
 2020      61636B53 
 2020      63616E6E 
 2021              	.LASF60:
 2022 0359 44726966 		.ascii	"Drift_Check_Timer_Stop\000"
 2022      745F4368 
 2022      65636B5F 
 2022      54696D65 
 2022      725F5374 
 2023              	.LASF67:
 2024 0370 55415254 		.ascii	"UART_1_Start\000"
 2024      5F315F53 
 2024      74617274 
 2024      00
 2025              	.LASF51:
 2026 037d 636F6C6F 		.ascii	"colour_flag\000"
 2026      75725F66 
 2026      6C616700 
 2027              	.LASF14:
 2028 0389 6C6F6E67 		.ascii	"long double\000"
 2028      20646F75 
 2028      626C6500 
 2029              	.LASF1:
 2030 0395 756E7369 		.ascii	"unsigned char\000"
 2030      676E6564 
 2030      20636861 
 2030      7200
 2031              	.LASF71:
 2032 03a3 49444143 		.ascii	"IDAC8_1_SetRange\000"
 2032      385F315F 
 2032      53657452 
 2032      616E6765 
 2032      00
 2033              	.LASF100:
 2034 03b4 5C5C6164 		.ascii	"\\\\ad.monash.edu\\home\\User026\\bamcg3\\Documents"
 2034      2E6D6F6E 
 2034      6173682E 
 2034      6564755C 
 2034      686F6D65 
 2035 03e1 5C476974 		.ascii	"\\GitHub\\ECE3091_Group17\\Group17RobotReal\\Group1"
 2035      4875625C 
 2035      45434533 
 2035      3039315F 
 2035      47726F75 
 2036 0410 37526F62 		.ascii	"7Robot.cydsn\000"
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\cc8WnjKS.s 			page 45


 2036      6F742E63 
 2036      7964736E 
 2036      00
 2037              	.LASF41:
 2038 041d 6D6F7665 		.ascii	"moveNow\000"
 2038      4E6F7700 
 2039              	.LASF26:
 2040 0425 626C6F63 		.ascii	"block_edge_location\000"
 2040      6B5F6564 
 2040      67655F6C 
 2040      6F636174 
 2040      696F6E00 
 2041              	.LASF7:
 2042 0439 6C6F6E67 		.ascii	"long long unsigned int\000"
 2042      206C6F6E 
 2042      6720756E 
 2042      7369676E 
 2042      65642069 
 2043              	.LASF49:
 2044 0450 6D6F7665 		.ascii	"moveBackwardAllowed\000"
 2044      4261636B 
 2044      77617264 
 2044      416C6C6F 
 2044      77656400 
 2045              	.LASF8:
 2046 0464 756E7369 		.ascii	"unsigned int\000"
 2046      676E6564 
 2046      20696E74 
 2046      00
 2047              	.LASF50:
 2048 0471 69646163 		.ascii	"idac_value\000"
 2048      5F76616C 
 2048      756500
 2049              	.LASF62:
 2050 047c 4D6F746F 		.ascii	"Motor_2_Encoder_Counts_ReadCounter\000"
 2050      725F325F 
 2050      456E636F 
 2050      6465725F 
 2050      436F756E 
 2051              	.LASF70:
 2052 049f 49444143 		.ascii	"IDAC8_1_Start\000"
 2052      385F315F 
 2052      53746172 
 2052      7400
 2053              	.LASF31:
 2054 04ad 63757272 		.ascii	"currentOrientation\000"
 2054      656E744F 
 2054      7269656E 
 2054      74617469 
 2054      6F6E00
 2055              	.LASF48:
 2056 04c0 6D6F7665 		.ascii	"moveForwardAllowed\000"
 2056      466F7277 
 2056      61726441 
 2056      6C6C6F77 
 2056      656400
 2057              	.LASF3:
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\cc8WnjKS.s 			page 46


 2058 04d3 73686F72 		.ascii	"short unsigned int\000"
 2058      7420756E 
 2058      7369676E 
 2058      65642069 
 2058      6E7400
 2059              	.LASF66:
 2060 04e6 5449415F 		.ascii	"TIA_1_Start\000"
 2060      315F5374 
 2060      61727400 
 2061              	.LASF25:
 2062 04f2 73776565 		.ascii	"sweeping\000"
 2062      70696E67 
 2062      00
 2063              	.LASF13:
 2064 04fb 63686172 		.ascii	"char\000"
 2064      00
 2065              	.LASF4:
 2066 0500 6C6F6E67 		.ascii	"long int\000"
 2066      20696E74 
 2066      00
 2067              	.LASF34:
 2068 0509 4D315F42 		.ascii	"M1_BD\000"
 2068      4400
 2069              	.LASF10:
 2070 050f 696E7433 		.ascii	"int32_t\000"
 2070      325F7400 
 2071              	.LASF21:
 2072 0517 64726976 		.ascii	"driveStraightEnable\000"
 2072      65537472 
 2072      61696768 
 2072      74456E61 
 2072      626C6500 
 2073              	.LASF57:
 2074 052b 73746F70 		.ascii	"stopMotor1AndUpdate\000"
 2074      4D6F746F 
 2074      7231416E 
 2074      64557064 
 2074      61746500 
 2075              	.LASF76:
 2076 053f 54696D65 		.ascii	"Timer_1_Start\000"
 2076      725F315F 
 2076      53746172 
 2076      7400
 2077              	.LASF30:
 2078 054d 64657369 		.ascii	"desiredPosition\000"
 2078      72656450 
 2078      6F736974 
 2078      696F6E00 
 2079              	.LASF33:
 2080 055d 4D315F46 		.ascii	"M1_FD\000"
 2080      4400
 2081              	.LASF72:
 2082 0563 49444143 		.ascii	"IDAC8_1_SetValue\000"
 2082      385F315F 
 2082      53657456 
 2082      616C7565 
 2082      00
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\cc8WnjKS.s 			page 47


 2083              	.LASF99:
 2084 0574 6D61696E 		.ascii	"main.c\000"
 2084      2E6300
 2085              	.LASF95:
 2086 057b 6D6F7665 		.ascii	"moveAndAngle\000"
 2086      416E6441 
 2086      6E676C65 
 2086      00
 2087              	.LASF79:
 2088 0588 53746172 		.ascii	"Start_StartEx\000"
 2088      745F5374 
 2088      61727445 
 2088      7800
 2089              	.LASF12:
 2090 0596 646F7562 		.ascii	"double\000"
 2090      6C6500
 2091              	.LASF68:
 2092 059d 55415254 		.ascii	"UART_1_PutString\000"
 2092      5F315F50 
 2092      75745374 
 2092      72696E67 
 2092      00
 2093              	.LASF16:
 2094 05ae 456E636F 		.ascii	"Encoder_Counts_1_IH\000"
 2094      6465725F 
 2094      436F756E 
 2094      74735F31 
 2094      5F494800 
 2095              	.LASF28:
 2096 05c2 73746174 		.ascii	"state\000"
 2096      6500
 2097              	.LASF38:
 2098 05c8 6D6F746F 		.ascii	"motor2Enable\000"
 2098      7232456E 
 2098      61626C65 
 2098      00
 2099              	.LASF18:
 2100 05d5 44726966 		.ascii	"Drift_Check_IH\000"
 2100      745F4368 
 2100      65636B5F 
 2100      494800
 2101              	.LASF59:
 2102 05e4 44726966 		.ascii	"Drift_Check_Timer_ReadStatusRegister\000"
 2102      745F4368 
 2102      65636B5F 
 2102      54696D65 
 2102      725F5265 
 2103              	.LASF9:
 2104 0609 5F5F696E 		.ascii	"__int32_t\000"
 2104      7433325F 
 2104      7400
 2105              	.LASF23:
 2106 0613 7075636B 		.ascii	"puckRackColours\000"
 2106      5261636B 
 2106      436F6C6F 
 2106      75727300 
 2107              	.LASF46:
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\cc8WnjKS.s 			page 48


 2108 0623 6D6F7665 		.ascii	"moveLeftAllowed\000"
 2108      4C656674 
 2108      416C6C6F 
 2108      77656400 
 2109              	.LASF94:
 2110 0633 7475726E 		.ascii	"turnRight\000"
 2110      52696768 
 2110      7400
 2111              	.LASF15:
 2112 063d 73697A65 		.ascii	"sizetype\000"
 2112      74797065 
 2112      00
 2113              	.LASF47:
 2114 0646 6D6F7665 		.ascii	"moveRightAllowed\000"
 2114      52696768 
 2114      74416C6C 
 2114      6F776564 
 2114      00
 2115              	.LASF36:
 2116 0657 4D325F42 		.ascii	"M2_BD\000"
 2116      4400
 2117              	.LASF20:
 2118 065d 49544D5F 		.ascii	"ITM_RxBuffer\000"
 2118      52784275 
 2118      66666572 
 2118      00
 2119              	.LASF98:
 2120 066a 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 2120      43313120 
 2120      352E342E 
 2120      31203230 
 2120      31363036 
 2121 069d 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 2121      20726576 
 2121      6973696F 
 2121      6E203233 
 2121      37373135 
 2122 06d0 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 2122      66756E63 
 2122      74696F6E 
 2122      2D736563 
 2122      74696F6E 
 2123              	.LASF65:
 2124 06f8 43794465 		.ascii	"CyDelay\000"
 2124      6C617900 
 2125              	.LASF75:
 2126 0700 436F6C6F 		.ascii	"ColourIntialiseViaHardware\000"
 2126      7572496E 
 2126      7469616C 
 2126      69736556 
 2126      69614861 
 2127              	.LASF80:
 2128 071b 4D6F746F 		.ascii	"Motor_1_driver_Start\000"
 2128      725F315F 
 2128      64726976 
 2128      65725F53 
 2128      74617274 
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\cc8WnjKS.s 			page 49


 2129              	.LASF54:
 2130 0730 70617468 		.ascii	"pathToPucks\000"
 2130      546F5075 
 2130      636B7300 
 2131              	.LASF81:
 2132 073c 4D6F746F 		.ascii	"Motor_2_driver_Start\000"
 2132      725F325F 
 2132      64726976 
 2132      65725F53 
 2132      74617274 
 2133              	.LASF35:
 2134 0751 4D325F46 		.ascii	"M2_FD\000"
 2134      4400
 2135              	.LASF85:
 2136 0757 44726966 		.ascii	"Drift_Check_Timer_Start\000"
 2136      745F4368 
 2136      65636B5F 
 2136      54696D65 
 2136      725F5374 
 2137              	.LASF61:
 2138 076f 4D6F746F 		.ascii	"Motor_1_Encoder_Counts_ReadCounter\000"
 2138      725F315F 
 2138      456E636F 
 2138      6465725F 
 2138      436F756E 
 2139              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
