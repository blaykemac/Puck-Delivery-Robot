ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\ccrm6NBL.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.Encoder_Counts_1_IH,"ax",%progbits
  20              		.align	2
  21              		.global	Encoder_Counts_1_IH
  22              		.thumb
  23              		.thumb_func
  24              		.type	Encoder_Counts_1_IH, %function
  25              	Encoder_Counts_1_IH:
  26              	.LFB64:
  27              		.file 1 "main.c"
   1:main.c        **** 
   2:main.c        **** /* ========================================
   3:main.c        ****  *
   4:main.c        ****  * Copyright YOUR COMPANY, THE YEAR
   5:main.c        ****  * All Rights Reserved
   6:main.c        ****  * UNPUBLISHED, LICENSED SOFTWARE.
   7:main.c        ****  *
   8:main.c        ****  * CONFIDENTIAL AND PROPRIETARY INFORMATION
   9:main.c        ****  * WHICH IS THE PROPERTY OF your company.
  10:main.c        ****  *
  11:main.c        ****  * ========================================
  12:main.c        **** */
  13:main.c        **** 
  14:main.c        **** #include "project.h"
  15:main.c        **** 
  16:main.c        **** // * C LIBRARIES * // 
  17:main.c        **** #include <stdio.h>
  18:main.c        **** #include <math.h>
  19:main.c        **** 
  20:main.c        **** // * OUR LIBRARIES * //
  21:main.c        **** #include "main.h"
  22:main.c        **** #include "colour.h"
  23:main.c        **** #include "ultrasonic.h" 
  24:main.c        **** #include "dcmotor.h"
  25:main.c        **** #include "servo.h"
  26:main.c        **** 
  27:main.c        **** 
  28:main.c        **** 
  29:main.c        **** //global variable currentPosition and currentOrientation (in main). Declare as externs in 
  30:main.c        **** //dcmotor, I guess
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\ccrm6NBL.s 			page 2


  31:main.c        **** float currentPosition[2] = {0,0};
  32:main.c        **** float desiredPosition[2];
  33:main.c        **** int currentOrientation = 90; //in degrees (convert to radians when needed)- 90 assuming we start fa
  34:main.c        **** int desiredOrientation;
  35:main.c        **** int M1_FD; //The four values shown here will be the duty cycles of the motors
  36:main.c        **** int M1_BD; //There are times when parts of the code (such as the driftCorrect function)
  37:main.c        **** int M2_FD; //need to know about the duty cycles. So we make the duty cycles a globally 
  38:main.c        **** int M2_BD; //known variable
  39:main.c        **** short int motor1Enable = 0; //These two will be on if the motors are on
  40:main.c        **** short int motor2Enable = 0;
  41:main.c        **** int M1_FD; //The four values shown here will be the duty cycles of the motors
  42:main.c        **** int M1_BD; //There are times when parts of the code (such as the driftCorrect function)
  43:main.c        **** int M2_FD; //need to know about the duty cycles. So we make the duty cycles a globally 
  44:main.c        **** int M2_BD; //known variable
  45:main.c        **** int motor1EncoderCounts; //These two variables will allow the entire program to keep 
  46:main.c        **** int motor2EncoderCounts; //track of how many turns the motors have spun 
  47:main.c        **** short int moveNow = 1; //This is a flag that lets the main program tell the moving functions
  48:main.c        **** //whether we want the robot to be moving or not. For example, when we need to operate servos
  49:main.c        **** //the main program would set moveNow to FALSE.
  50:main.c        **** 
  51:main.c        **** //The four flags below let the rest of the program know if the robot is trying to drive 
  52:main.c        **** //forward or back, turn left or right. At the start of every motion, turn these flags on
  53:main.c        **** //at the end turn them off.
  54:main.c        **** short int drivingForwardFlag = 0;
  55:main.c        **** short int drivingBackwardFlag = 0;
  56:main.c        **** short int turningLeftFlag = 0;
  57:main.c        **** short int turningRightFlag = 0;
  58:main.c        **** 
  59:main.c        **** //These flags will be used by the main program to allow the robot to move in certain directions
  60:main.c        **** short int moveLeftAllowed;
  61:main.c        **** short int moveRightAllowed;
  62:main.c        **** short int moveForwardAllowed;
  63:main.c        **** short int moveBackwardAllowed;
  64:main.c        **** 
  65:main.c        **** //Interrupt service routines for dcmotor function
  66:main.c        **** CY_ISR(Encoder_Counts_1_IH){
  28              		.loc 1 66 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 08B5     		push	{r3, lr}
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 3, -8
  35              		.cfi_offset 14, -4
  67:main.c        ****     stopMotor1AndUpdate();
  36              		.loc 1 67 0
  37 0002 FFF7FEFF 		bl	stopMotor1AndUpdate
  38              	.LVL0:
  39 0006 08BD     		pop	{r3, pc}
  40              		.cfi_endproc
  41              	.LFE64:
  42              		.size	Encoder_Counts_1_IH, .-Encoder_Counts_1_IH
  43              		.section	.text.Encoder_Counts_2_IH,"ax",%progbits
  44              		.align	2
  45              		.global	Encoder_Counts_2_IH
  46              		.thumb
  47              		.thumb_func
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\ccrm6NBL.s 			page 3


  48              		.type	Encoder_Counts_2_IH, %function
  49              	Encoder_Counts_2_IH:
  50              	.LFB65:
  68:main.c        **** }
  69:main.c        **** 
  70:main.c        **** CY_ISR(Encoder_Counts_2_IH){
  51              		.loc 1 70 0
  52              		.cfi_startproc
  53              		@ args = 0, pretend = 0, frame = 0
  54              		@ frame_needed = 0, uses_anonymous_args = 0
  55 0000 08B5     		push	{r3, lr}
  56              		.cfi_def_cfa_offset 8
  57              		.cfi_offset 3, -8
  58              		.cfi_offset 14, -4
  71:main.c        ****     stopMotor2AndUpdate();
  59              		.loc 1 71 0
  60 0002 FFF7FEFF 		bl	stopMotor2AndUpdate
  61              	.LVL1:
  62 0006 08BD     		pop	{r3, pc}
  63              		.cfi_endproc
  64              	.LFE65:
  65              		.size	Encoder_Counts_2_IH, .-Encoder_Counts_2_IH
  66              		.section	.text.Drift_Check_IH,"ax",%progbits
  67              		.align	2
  68              		.global	Drift_Check_IH
  69              		.thumb
  70              		.thumb_func
  71              		.type	Drift_Check_IH, %function
  72              	Drift_Check_IH:
  73              	.LFB66:
  72:main.c        **** }
  73:main.c        **** 
  74:main.c        **** CY_ISR(Drift_Check_IH){    
  74              		.loc 1 74 0
  75              		.cfi_startproc
  76              		@ args = 0, pretend = 0, frame = 0
  77              		@ frame_needed = 0, uses_anonymous_args = 0
  78 0000 08B5     		push	{r3, lr}
  79              		.cfi_def_cfa_offset 8
  80              		.cfi_offset 3, -8
  81              		.cfi_offset 14, -4
  75:main.c        ****     Drift_Check_Timer_ReadStatusRegister(); //Clears the interrupt
  82              		.loc 1 75 0
  83 0002 FFF7FEFF 		bl	Drift_Check_Timer_ReadStatusRegister
  84              	.LVL2:
  76:main.c        ****     Drift_Check_Timer_Stop(); //Stops the timer
  85              		.loc 1 76 0
  86 0006 FFF7FEFF 		bl	Drift_Check_Timer_Stop
  87              	.LVL3:
  77:main.c        ****     motor1EncoderCounts = Motor_1_Encoder_Counts_ReadCounter();
  88              		.loc 1 77 0
  89 000a FFF7FEFF 		bl	Motor_1_Encoder_Counts_ReadCounter
  90              	.LVL4:
  91 000e 044B     		ldr	r3, .L7
  92 0010 1860     		str	r0, [r3]
  78:main.c        ****     motor2EncoderCounts = Motor_2_Encoder_Counts_ReadCounter();
  93              		.loc 1 78 0
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\ccrm6NBL.s 			page 4


  94 0012 FFF7FEFF 		bl	Motor_2_Encoder_Counts_ReadCounter
  95              	.LVL5:
  96 0016 034B     		ldr	r3, .L7+4
  97 0018 1860     		str	r0, [r3]
  79:main.c        ****     driftCorrect(); //Does checking
  98              		.loc 1 79 0
  99 001a FFF7FEFF 		bl	driftCorrect
 100              	.LVL6:
 101 001e 08BD     		pop	{r3, pc}
 102              	.L8:
 103              		.align	2
 104              	.L7:
 105 0020 00000000 		.word	motor1EncoderCounts
 106 0024 00000000 		.word	motor2EncoderCounts
 107              		.cfi_endproc
 108              	.LFE66:
 109              		.size	Drift_Check_IH, .-Drift_Check_IH
 110              		.section	.text.TIH,"ax",%progbits
 111              		.align	2
 112              		.global	TIH
 113              		.thumb
 114              		.thumb_func
 115              		.type	TIH, %function
 116              	TIH:
 117              	.LFB67:
  80:main.c        **** }
  81:main.c        **** 
  82:main.c        **** // * VARIABLES * //
  83:main.c        **** int idac_value = 0;
  84:main.c        **** 
  85:main.c        **** 
  86:main.c        **** 
  87:main.c        **** int colour_flag = 1;                    // sets which photodiode to use 
  88:main.c        **** int ColourSensingAlgorithm = 0;      // Determines which colour sensing algorithm to use:
  89:main.c        ****                                                 // 0: Wall algorithm
  90:main.c        ****                                                 // 1: Claw algorithm
  91:main.c        ****                                                 // 2: old algorithm
  92:main.c        **** 
  93:main.c        **** 
  94:main.c        **** 
  95:main.c        **** extern float ultrasonic_distances[5];
  96:main.c        **** int beginNavigation = 0;
  97:main.c        **** 
  98:main.c        **** int state = STATE_SCAN_PLAN;
  99:main.c        **** 
 100:main.c        **** int running = 1;
 101:main.c        **** 
 102:main.c        **** int sweeping = 0;
 103:main.c        **** 
 104:main.c        **** int pathToPucks;
 105:main.c        **** int pathPastBlock;
 106:main.c        **** 
 107:main.c        **** int moving = 0; // Temp to stop while loop from repeated runs of scanning plan code
 108:main.c        **** 
 109:main.c        **** float block_edge_location[4] = {0,0,0,0}; // N E S W
 110:main.c        **** 
 111:main.c        **** int currentPuckStackSize = 0;
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\ccrm6NBL.s 			page 5


 112:main.c        **** 
 113:main.c        **** // Puck Construction Scanning
 114:main.c        **** int puckRackColours[5] = {0,0,0,0,0}; // 5 slots in puck rack.
 115:main.c        **** int currentPuckRackScanningIndex = 0;
 116:main.c        **** int puckRackOffsetsFromWest[5] = {PUCK_RACK_0_WEST_DISTANCE,
 117:main.c        ****                                 PUCK_RACK_1_WEST_DISTANCE,
 118:main.c        ****                                 PUCK_RACK_2_WEST_DISTANCE,
 119:main.c        ****                                 PUCK_RACK_3_WEST_DISTANCE,
 120:main.c        ****                                 PUCK_RACK_4_WEST_DISTANCE };
 121:main.c        **** 
 122:main.c        **** 
 123:main.c        **** // * INTERRUPT HANDLING * // 
 124:main.c        **** CY_ISR(TIH)                             // Ultrasonic ISR Definition
 125:main.c        **** {
 118              		.loc 1 125 0
 119              		.cfi_startproc
 120              		@ args = 0, pretend = 0, frame = 0
 121              		@ frame_needed = 0, uses_anonymous_args = 0
 122 0000 08B5     		push	{r3, lr}
 123              		.cfi_def_cfa_offset 8
 124              		.cfi_offset 3, -8
 125              		.cfi_offset 14, -4
 126:main.c        ****     ultrasonicInterruptHandler();
 126              		.loc 1 126 0
 127 0002 FFF7FEFF 		bl	ultrasonicInterruptHandler
 128              	.LVL7:
 129 0006 08BD     		pop	{r3, pc}
 130              		.cfi_endproc
 131              	.LFE67:
 132              		.size	TIH, .-TIH
 133              		.section	.text.StartIH,"ax",%progbits
 134              		.align	2
 135              		.global	StartIH
 136              		.thumb
 137              		.thumb_func
 138              		.type	StartIH, %function
 139              	StartIH:
 140              	.LFB68:
 127:main.c        **** }
 128:main.c        **** 
 129:main.c        **** CY_ISR(StartIH)                             // Ultrasonic ISR Definition
 130:main.c        **** {
 141              		.loc 1 130 0
 142              		.cfi_startproc
 143              		@ args = 0, pretend = 0, frame = 0
 144              		@ frame_needed = 0, uses_anonymous_args = 0
 145 0000 08B5     		push	{r3, lr}
 146              		.cfi_def_cfa_offset 8
 147              		.cfi_offset 3, -8
 148              		.cfi_offset 14, -4
 131:main.c        ****     CyDelay(100);
 149              		.loc 1 131 0
 150 0002 6420     		movs	r0, #100
 151 0004 FFF7FEFF 		bl	CyDelay
 152              	.LVL8:
 132:main.c        ****     
 133:main.c        ****     beginNavigation = 1;
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\ccrm6NBL.s 			page 6


 153              		.loc 1 133 0
 154 0008 0122     		movs	r2, #1
 155 000a 034B     		ldr	r3, .L13
 156 000c 1A60     		str	r2, [r3]
 134:main.c        ****     colour_flag = 0; 
 157              		.loc 1 134 0
 158 000e 0022     		movs	r2, #0
 159 0010 024B     		ldr	r3, .L13+4
 160 0012 1A60     		str	r2, [r3]
 161 0014 08BD     		pop	{r3, pc}
 162              	.L14:
 163 0016 00BF     		.align	2
 164              	.L13:
 165 0018 00000000 		.word	.LANCHOR0
 166 001c 00000000 		.word	.LANCHOR1
 167              		.cfi_endproc
 168              	.LFE68:
 169              		.size	StartIH, .-StartIH
 170              		.global	__aeabi_fcmpge
 171              		.section	.text.main,"ax",%progbits
 172              		.align	2
 173              		.global	main
 174              		.thumb
 175              		.thumb_func
 176              		.type	main, %function
 177              	main:
 178              	.LFB69:
 135:main.c        **** }
 136:main.c        ****                     
 137:main.c        **** int main(void)
 138:main.c        **** {
 179              		.loc 1 138 0
 180              		.cfi_startproc
 181              		@ args = 0, pretend = 0, frame = 0
 182              		@ frame_needed = 0, uses_anonymous_args = 0
 183 0000 10B5     		push	{r4, lr}
 184              		.cfi_def_cfa_offset 8
 185              		.cfi_offset 4, -8
 186              		.cfi_offset 14, -4
 139:main.c        ****     CyGlobalIntEnable; /* Enable global interrupts. */
 187              		.loc 1 139 0
 188              		.syntax unified
 189              	@ 139 "main.c" 1
 190 0002 62B6     		CPSIE   i
 191              	@ 0 "" 2
 140:main.c        **** 
 141:main.c        ****     /* Place your initialization/startup code here (e.g. MyInst_Start()) */
 142:main.c        ****     TIA_1_Start();
 192              		.loc 1 142 0
 193              		.thumb
 194              		.syntax unified
 195 0004 FFF7FEFF 		bl	TIA_1_Start
 196              	.LVL9:
 143:main.c        ****     UART_1_Start();
 197              		.loc 1 143 0
 198 0008 FFF7FEFF 		bl	UART_1_Start
 199              	.LVL10:
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\ccrm6NBL.s 			page 7


 144:main.c        ****     UART_1_PutString("UART commencing... \n");
 200              		.loc 1 144 0
 201 000c 6948     		ldr	r0, .L36
 202 000e FFF7FEFF 		bl	UART_1_PutString
 203              	.LVL11:
 145:main.c        ****     ADC_Start();
 204              		.loc 1 145 0
 205 0012 FFF7FEFF 		bl	ADC_Start
 206              	.LVL12:
 146:main.c        ****     IDAC8_1_Start();
 207              		.loc 1 146 0
 208 0016 FFF7FEFF 		bl	IDAC8_1_Start
 209              	.LVL13:
 147:main.c        ****     
 148:main.c        ****     // IDAC initialisation: 
 149:main.c        ****     IDAC8_1_SetRange(IDAC8_1_RANGE_32uA);       // Sets the range between 0 and 32uA
 210              		.loc 1 149 0
 211 001a 0020     		movs	r0, #0
 212 001c FFF7FEFF 		bl	IDAC8_1_SetRange
 213              	.LVL14:
 150:main.c        ****     IDAC8_1_SetValue(idac_value);               // set a value between 0 and 255
 214              		.loc 1 150 0
 215 0020 654C     		ldr	r4, .L36+4
 216 0022 2079     		ldrb	r0, [r4, #4]	@ zero_extendqisi2
 217 0024 FFF7FEFF 		bl	IDAC8_1_SetValue
 218              	.LVL15:
 151:main.c        ****     
 152:main.c        ****      // Colour Sensing Initialisation & Debugging:
 153:main.c        ****     int calibrate = FALSE;                    // Do we want to calibrate the sensor? 
 154:main.c        ****     extern char output[32];   
 155:main.c        ****     
 156:main.c        **** 
 157:main.c        ****     
 158:main.c        ****     // Ultrasonic Initialisation: 
 159:main.c        ****     
 160:main.c        ****         
 161:main.c        ****     // Timer and ISR instantiation
 162:main.c        ****     Timer_1_Start();
 219              		.loc 1 162 0
 220 0028 FFF7FEFF 		bl	Timer_1_Start
 221              	.LVL16:
 163:main.c        ****     Timer_1_ReadStatusRegister();
 222              		.loc 1 163 0
 223 002c FFF7FEFF 		bl	Timer_1_ReadStatusRegister
 224              	.LVL17:
 164:main.c        ****     Sonic_StartEx(TIH);
 225              		.loc 1 164 0
 226 0030 6248     		ldr	r0, .L36+8
 227 0032 FFF7FEFF 		bl	Sonic_StartEx
 228              	.LVL18:
 165:main.c        ****     Start_StartEx(StartIH);
 229              		.loc 1 165 0
 230 0036 6248     		ldr	r0, .L36+12
 231 0038 FFF7FEFF 		bl	Start_StartEx
 232              	.LVL19:
 166:main.c        ****     beginNavigation = 0;
 233              		.loc 1 166 0
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\ccrm6NBL.s 			page 8


 234 003c 0023     		movs	r3, #0
 235 003e 2360     		str	r3, [r4]
 236              	.LVL20:
 167:main.c        ****     int tmp = 0;
 168:main.c        ****     
 169:main.c        ****     //Initialising DC motors
 170:main.c        ****     Motor_1_driver_Start();
 237              		.loc 1 170 0
 238 0040 FFF7FEFF 		bl	Motor_1_driver_Start
 239              	.LVL21:
 171:main.c        ****     Motor_2_driver_Start();
 240              		.loc 1 171 0
 241 0044 FFF7FEFF 		bl	Motor_2_driver_Start
 242              	.LVL22:
 172:main.c        ****     motorDutyCycleUpdate(0,0,0,0);//Have the motors stand still
 243              		.loc 1 172 0
 244 0048 0020     		movs	r0, #0
 245 004a 0346     		mov	r3, r0
 246 004c 0246     		mov	r2, r0
 247 004e 0146     		mov	r1, r0
 248 0050 FFF7FEFF 		bl	motorDutyCycleUpdate
 249              	.LVL23:
 173:main.c        ****     
 174:main.c        ****     //Initialising counters
 175:main.c        ****     Motor_1_Encoder_Counts_Start();
 250              		.loc 1 175 0
 251 0054 FFF7FEFF 		bl	Motor_1_Encoder_Counts_Start
 252              	.LVL24:
 176:main.c        ****     Motor_2_Encoder_Counts_Start();
 253              		.loc 1 176 0
 254 0058 FFF7FEFF 		bl	Motor_2_Encoder_Counts_Start
 255              	.LVL25:
 177:main.c        ****     
 178:main.c        ****     //Initialising timers
 179:main.c        ****     Drift_Check_Timer_Start();
 256              		.loc 1 179 0
 257 005c FFF7FEFF 		bl	Drift_Check_Timer_Start
 258              	.LVL26:
 180:main.c        ****     
 181:main.c        ****     //Starts and enables the interrupts for the motor encoder counts
 182:main.c        ****     Encoder_Counts_1_Interrupt_StartEx(Encoder_Counts_1_IH); 
 259              		.loc 1 182 0
 260 0060 5848     		ldr	r0, .L36+16
 261 0062 FFF7FEFF 		bl	Encoder_Counts_1_Interrupt_StartEx
 262              	.LVL27:
 183:main.c        ****     Encoder_Counts_2_Interrupt_StartEx(Encoder_Counts_2_IH);
 263              		.loc 1 183 0
 264 0066 5848     		ldr	r0, .L36+20
 265 0068 FFF7FEFF 		bl	Encoder_Counts_2_Interrupt_StartEx
 266              	.LVL28:
 184:main.c        ****     Drift_Check_Interrupt_StartEx(Drift_Check_IH);		
 267              		.loc 1 184 0
 268 006c 5748     		ldr	r0, .L36+24
 269 006e FFF7FEFF 		bl	Drift_Check_Interrupt_StartEx
 270              	.LVL29:
 185:main.c        ****     
 186:main.c        ****     //Servos for the arm initialisation
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\ccrm6NBL.s 			page 9


 187:main.c        ****     //Gripper_Servo_PWM_WriteCompare(1250); //This is the closed gripper pos
 188:main.c        ****     //Rack_Servo_PWM_WriteCompare(1000); //This is the up arm pos
 189:main.c        ****    
 190:main.c        ****     Rack_Servo_PWM_Start();
 271              		.loc 1 190 0
 272 0072 FFF7FEFF 		bl	Rack_Servo_PWM_Start
 273              	.LVL30:
 191:main.c        ****     Gripper_Servo_PWM_Start();
 274              		.loc 1 191 0
 275 0076 FFF7FEFF 		bl	Gripper_Servo_PWM_Start
 276              	.LVL31:
 277              	.L31:
 192:main.c        ****     
 193:main.c        **** 
 194:main.c        ****     // Main Loop for States
 195:main.c        ****         
 196:main.c        ****     for(;;)
 197:main.c        ****     {   
 198:main.c        ****         // Start button is pressed so quit sensing
 199:main.c        **** 
 200:main.c        ****         /*
 201:main.c        ****         while (beginNavigation == 0) {
 202:main.c        ****             distanceCheck();           
 203:main.c        ****             UART_1_PutString("\n");
 204:main.c        ****             CyDelay(1000); // Check distance once a second.
 205:main.c        ****                 
 206:main.c        ****         }
 207:main.c        ****         */
 208:main.c        ****         
 209:main.c        ****         
 210:main.c        ****         
 211:main.c        ****             control_led_Write(1);   CyDelay(1000);  // Ensures all the RGBs are working
 278              		.loc 1 211 0
 279 007a 0120     		movs	r0, #1
 280 007c FFF7FEFF 		bl	control_led_Write
 281              	.LVL32:
 282 0080 4FF47A70 		mov	r0, #1000
 283 0084 FFF7FEFF 		bl	CyDelay
 284              	.LVL33:
 212:main.c        ****             control_led_Write(2);   CyDelay(1000);
 285              		.loc 1 212 0
 286 0088 0220     		movs	r0, #2
 287 008a FFF7FEFF 		bl	control_led_Write
 288              	.LVL34:
 289 008e 4FF47A70 		mov	r0, #1000
 290 0092 FFF7FEFF 		bl	CyDelay
 291              	.LVL35:
 213:main.c        ****             control_led_Write(3);   CyDelay(1000);
 292              		.loc 1 213 0
 293 0096 0320     		movs	r0, #3
 294 0098 FFF7FEFF 		bl	control_led_Write
 295              	.LVL36:
 296 009c 4FF47A70 		mov	r0, #1000
 297 00a0 FFF7FEFF 		bl	CyDelay
 298              	.LVL37:
 214:main.c        ****             control_led_Write(0);   CyDelay(500);
 299              		.loc 1 214 0
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\ccrm6NBL.s 			page 10


 300 00a4 0020     		movs	r0, #0
 301 00a6 FFF7FEFF 		bl	control_led_Write
 302              	.LVL38:
 303 00aa 4FF4FA70 		mov	r0, #500
 304 00ae FFF7FEFF 		bl	CyDelay
 305              	.LVL39:
 215:main.c        ****             ColourSensingInitialise();                  // Initialises the colour sensor
 306              		.loc 1 215 0
 307 00b2 FFF7FEFF 		bl	ColourSensingInitialise
 308              	.LVL40:
 216:main.c        ****         
 217:main.c        **** 
 218:main.c        ****             
 219:main.c        ****         while (state == STATE_SCAN_PLAN) {              // colour sensing, while switch has not bee
 309              		.loc 1 219 0
 310 00b6 10E0     		b	.L17
 311              	.L20:
 220:main.c        ****             
 221:main.c        ****             
 222:main.c        ****             
 223:main.c        ****             if (calibrate)
 224:main.c        ****             {
 225:main.c        ****                 int lock = FALSE;
 226:main.c        ****                 do 
 227:main.c        ****                     {   
 228:main.c        ****                         if (lock == FALSE) 
 229:main.c        ****                         {
 230:main.c        ****                             UART_1_PutString("Count \t BLANK \t RED \t GREEN \t BLUE \t \n");
 231:main.c        ****                             for (int i = 0; i < 50; i++)
 232:main.c        ****                             {
 233:main.c        ****                             sprintf(output, "%d \t", i);
 234:main.c        ****                             UART_1_PutString(output);
 235:main.c        ****                             ColourSensingCalibration(); 
 236:main.c        ****                             UART_1_PutString("\n");
 237:main.c        ****                             }         
 238:main.c        ****                         lock = TRUE;    
 239:main.c        ****                         }
 240:main.c        ****                 } while (lock == TRUE);    
 241:main.c        ****             }
 242:main.c        ****             
 243:main.c        ****             //ColourSensingDebug();
 244:main.c        ****             if (!moving){
 312              		.loc 1 244 0
 313 00b8 3F4B     		ldr	r3, .L36+4
 314 00ba 9B68     		ldr	r3, [r3, #8]
 315 00bc 6BB9     		cbnz	r3, .L17
 245:main.c        ****                 moving = 1;
 316              		.loc 1 245 0
 317 00be 0122     		movs	r2, #1
 318 00c0 3D4B     		ldr	r3, .L36+4
 319 00c2 9A60     		str	r2, [r3, #8]
 246:main.c        ****             if (initialisation){moveBackwardIndefinitely(); initialisation = 0;}
 320              		.loc 1 246 0
 321 00c4 424B     		ldr	r3, .L36+28
 322 00c6 1B68     		ldr	r3, [r3]
 323 00c8 2BB1     		cbz	r3, .L18
 324              		.loc 1 246 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\ccrm6NBL.s 			page 11


 325 00ca FFF7FEFF 		bl	moveBackwardIndefinitely
 326              	.LVL41:
 327 00ce 0022     		movs	r2, #0
 328 00d0 3F4B     		ldr	r3, .L36+28
 329 00d2 1A60     		str	r2, [r3]
 330 00d4 01E0     		b	.L17
 331              	.L18:
 247:main.c        ****             else {moveForwardIndefinitely();}        
 332              		.loc 1 247 0 is_stmt 1
 333 00d6 FFF7FEFF 		bl	moveForwardIndefinitely
 334              	.LVL42:
 335              	.L17:
 219:main.c        ****             
 336              		.loc 1 219 0
 337 00da 3E4B     		ldr	r3, .L36+32
 338 00dc 5B68     		ldr	r3, [r3, #4]
 339 00de 012B     		cmp	r3, #1
 340 00e0 EAD0     		beq	.L20
 248:main.c        ****             
 249:main.c        ****             // Swap to using moveAndAngle function for each puck rack slot location
 250:main.c        ****             // moveAndAngle(puckRackLocation[i],starting vertical distance ,WEST_ANGLE); 
 251:main.c        ****             //
 252:main.c        ****             //
 253:main.c        ****             //
 254:main.c        ****             //
 255:main.c        ****             
 256:main.c        ****             //puckRackColours[currentPuckRackScanningIndex] = ColourSensingOutput();
 257:main.c        ****             
 258:main.c        ****             }
 259:main.c        ****         }
 260:main.c        **** 
 261:main.c        ****     	if (state == STATE_LOCATE_BLOCK_AND_PUCKS){
 341              		.loc 1 261 0
 342 00e2 022B     		cmp	r3, #2
 343 00e4 17D1     		bne	.L21
 262:main.c        ****             
 263:main.c        ****             // Finding where the boundaries of the block are
 264:main.c        ****     		// Sweep across WEST to EAST until discrepancy
 265:main.c        ****             // But first sense the construction plan and then drive to wall and turn around to prep
 266:main.c        ****             
 267:main.c        ****             
 268:main.c        ****     		moveForwardIndefinitely();
 344              		.loc 1 268 0
 345 00e6 FFF7FEFF 		bl	moveForwardIndefinitely
 346              	.LVL43:
 269:main.c        ****     		turnRight(180); // Now facing EAST wall
 347              		.loc 1 269 0
 348 00ea 3B48     		ldr	r0, .L36+36
 349 00ec FFF7FEFF 		bl	turnRight
 350              	.LVL44:
 270:main.c        ****     		moveForwardIndefinitely(); // Do this until we get to EAST wall
 351              		.loc 1 270 0
 352 00f0 FFF7FEFF 		bl	moveForwardIndefinitely
 353              	.LVL45:
 271:main.c        ****             
 272:main.c        ****             
 273:main.c        ****             // Will now know the boundaries of the block.
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\ccrm6NBL.s 			page 12


 274:main.c        ****             // Figure out direction we want to travel
 275:main.c        ****             
 276:main.c        ****             if (block_edge_location[WEST] >= WIDTH_SENSOR_TO_SENSOR + SAFETY_MARGIN){
 354              		.loc 1 276 0
 355 00f4 4FF08441 		mov	r1, #1107296256
 356 00f8 2F4B     		ldr	r3, .L36+4
 357 00fa 9869     		ldr	r0, [r3, #24]	@ float
 358 00fc FFF7FEFF 		bl	__aeabi_fcmpge
 359              	.LVL46:
 360 0100 18B1     		cbz	r0, .L34
 277:main.c        ****                 pathPastBlock = WEST;
 361              		.loc 1 277 0
 362 0102 0322     		movs	r2, #3
 363 0104 354B     		ldr	r3, .L36+40
 364 0106 1A60     		str	r2, [r3]
 365 0108 02E0     		b	.L24
 366              	.L34:
 278:main.c        ****             }
 279:main.c        ****             else {pathPastBlock = EAST;}
 367              		.loc 1 279 0
 368 010a 0122     		movs	r2, #1
 369 010c 334B     		ldr	r3, .L36+40
 370 010e 1A60     		str	r2, [r3]
 371              	.L24:
 280:main.c        ****             
 281:main.c        ****             // Calculate puck position here too, then make a decision as to whether
 282:main.c        ****             // pathToPucks = ... ;
 283:main.c        **** 
 284:main.c        ****             state = STATE_GO_TO_PUCKS;
 372              		.loc 1 284 0
 373 0110 0322     		movs	r2, #3
 374 0112 304B     		ldr	r3, .L36+32
 375 0114 5A60     		str	r2, [r3, #4]
 376              	.L21:
 285:main.c        **** 	}
 286:main.c        ****         
 287:main.c        ****         
 288:main.c        **** 
 289:main.c        ****         if (state == STATE_GO_TO_PUCKS){
 377              		.loc 1 289 0
 378 0116 2F4B     		ldr	r3, .L36+32
 379 0118 5B68     		ldr	r3, [r3, #4]
 380 011a 032B     		cmp	r3, #3
 381 011c 25D1     		bne	.L25
 290:main.c        ****             if (pathPastBlock == WEST){
 382              		.loc 1 290 0
 383 011e 2F4B     		ldr	r3, .L36+40
 384 0120 1B68     		ldr	r3, [r3]
 385 0122 032B     		cmp	r3, #3
 386 0124 0FD1     		bne	.L26
 291:main.c        ****                 if (pathToPucks != WEST) {
 387              		.loc 1 291 0
 388 0126 2E4B     		ldr	r3, .L36+44
 389 0128 1B68     		ldr	r3, [r3]
 390 012a 032B     		cmp	r3, #3
 391 012c 05D0     		beq	.L27
 292:main.c        ****                     moveAndAngle(SAFETY_MARGIN / 2 + WIDTH_SENSOR_TO_SENSOR / 2, ARENA_LENGTH - FRO
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\ccrm6NBL.s 			page 13


 392              		.loc 1 292 0
 393 012e 0022     		movs	r2, #0
 394 0130 8221     		movs	r1, #130
 395 0132 1020     		movs	r0, #16
 396 0134 FFF7FEFF 		bl	moveAndAngle
 397              	.LVL47:
 398 0138 14E0     		b	.L28
 399              	.L27:
 293:main.c        ****                 }
 294:main.c        ****                 else {moveAndAngle(SAFETY_MARGIN / 2 + WIDTH_SENSOR_TO_SENSOR / 2, ARENA_LENGTH - F
 400              		.loc 1 294 0
 401 013a 5A22     		movs	r2, #90
 402 013c 6621     		movs	r1, #102
 403 013e 1020     		movs	r0, #16
 404 0140 FFF7FEFF 		bl	moveAndAngle
 405              	.LVL48:
 406 0144 0EE0     		b	.L28
 407              	.L26:
 295:main.c        ****             }
 296:main.c        ****             else {
 297:main.c        ****                 if (pathToPucks != EAST) {
 408              		.loc 1 297 0
 409 0146 264B     		ldr	r3, .L36+44
 410 0148 1B68     		ldr	r3, [r3]
 411 014a 012B     		cmp	r3, #1
 412 014c 05D0     		beq	.L29
 298:main.c        ****                     moveAndAngle(ARENA_WIDTH - SAFETY_MARGIN / 2 - WIDTH_SENSOR_TO_SENSOR / 2, AREN
 413              		.loc 1 298 0
 414 014e B422     		movs	r2, #180
 415 0150 8221     		movs	r1, #130
 416 0152 6820     		movs	r0, #104
 417 0154 FFF7FEFF 		bl	moveAndAngle
 418              	.LVL49:
 419 0158 04E0     		b	.L28
 420              	.L29:
 299:main.c        ****                 }
 300:main.c        ****                 else {moveAndAngle(ARENA_WIDTH - SAFETY_MARGIN / 2 - WIDTH_SENSOR_TO_SENSOR / 2, AR
 421              		.loc 1 300 0
 422 015a 5A22     		movs	r2, #90
 423 015c 6621     		movs	r1, #102
 424 015e 6820     		movs	r0, #104
 425 0160 FFF7FEFF 		bl	moveAndAngle
 426              	.LVL50:
 427              	.L28:
 301:main.c        ****             }
 302:main.c        ****             
 303:main.c        ****             // We are now in front of the pucks
 304:main.c        ****             state = STATE_FIND_REQUIRED_PUCK;
 428              		.loc 1 304 0
 429 0164 0422     		movs	r2, #4
 430 0166 1B4B     		ldr	r3, .L36+32
 431 0168 5A60     		str	r2, [r3, #4]
 432              	.L25:
 305:main.c        ****         }
 306:main.c        ****         
 307:main.c        ****         
 308:main.c        ****         
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\ccrm6NBL.s 			page 14


 309:main.c        ****         if (state == STATE_FIND_REQUIRED_PUCK){
 310:main.c        ****                
 311:main.c        ****         }
 312:main.c        ****         
 313:main.c        ****         if (state == STATE_DEPOSIT_PUCK){
 433              		.loc 1 313 0
 434 016a 1A4B     		ldr	r3, .L36+32
 435 016c 5B68     		ldr	r3, [r3, #4]
 436 016e 052B     		cmp	r3, #5
 437 0170 15D1     		bne	.L30
 314:main.c        ****             moveAndAngle(CONSTRUCTION_MIDPOINT,CONSTRUCTION_DISTANCE_FROM_WALL, SOUTH_ANGLE); // Ta
 438              		.loc 1 314 0
 439 0172 4FF48772 		mov	r2, #270
 440 0176 0521     		movs	r1, #5
 441 0178 1E20     		movs	r0, #30
 442 017a FFF7FEFF 		bl	moveAndAngle
 443              	.LVL51:
 315:main.c        ****             lowerAndOpen(currentPuckStackSize);
 444              		.loc 1 315 0
 445 017e 0E4C     		ldr	r4, .L36+4
 446 0180 E069     		ldr	r0, [r4, #28]
 447 0182 FFF7FEFF 		bl	lowerAndOpen
 448              	.LVL52:
 316:main.c        ****             changeHeightToPuck(currentPuckStackSize + 1); // Lift claw above stack to avoid hitting
 449              		.loc 1 316 0
 450 0186 E069     		ldr	r0, [r4, #28]
 451 0188 0130     		adds	r0, r0, #1
 452 018a FFF7FEFF 		bl	changeHeightToPuck
 453              	.LVL53:
 317:main.c        ****             
 318:main.c        ****             currentPuckStackSize++;
 454              		.loc 1 318 0
 455 018e E369     		ldr	r3, [r4, #28]
 456 0190 0133     		adds	r3, r3, #1
 457 0192 E361     		str	r3, [r4, #28]
 319:main.c        ****             
 320:main.c        ****             if (currentPuckStackSize == 3){state = STATE_PARK_HOME;}
 458              		.loc 1 320 0
 459 0194 032B     		cmp	r3, #3
 460 0196 02D1     		bne	.L30
 461              		.loc 1 320 0 is_stmt 0 discriminator 1
 462 0198 0622     		movs	r2, #6
 463 019a 0E4B     		ldr	r3, .L36+32
 464 019c 5A60     		str	r2, [r3, #4]
 465              	.L30:
 321:main.c        ****             
 322:main.c        ****         }
 323:main.c        ****         
 324:main.c        ****         if (state == STATE_PARK_HOME){
 466              		.loc 1 324 0 is_stmt 1
 467 019e 0D4B     		ldr	r3, .L36+32
 468 01a0 5B68     		ldr	r3, [r3, #4]
 469 01a2 062B     		cmp	r3, #6
 470 01a4 7FF469AF 		bne	.L31
 325:main.c        ****             moveAndAngle(HOME_MIDPOINT, HOME_PARKING_DISTANCE, NORTH_ANGLE); // Should reverse into
 471              		.loc 1 325 0
 472 01a8 5A22     		movs	r2, #90
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\ccrm6NBL.s 			page 15


 473 01aa 0321     		movs	r1, #3
 474 01ac 3C20     		movs	r0, #60
 475 01ae FFF7FEFF 		bl	moveAndAngle
 476              	.LVL54:
 477 01b2 62E7     		b	.L31
 478              	.L37:
 479              		.align	2
 480              	.L36:
 481 01b4 00000000 		.word	.LC0
 482 01b8 00000000 		.word	.LANCHOR0
 483 01bc 00000000 		.word	TIH
 484 01c0 00000000 		.word	StartIH
 485 01c4 00000000 		.word	Encoder_Counts_1_IH
 486 01c8 00000000 		.word	Encoder_Counts_2_IH
 487 01cc 00000000 		.word	Drift_Check_IH
 488 01d0 00000000 		.word	initialisation
 489 01d4 00000000 		.word	.LANCHOR1
 490 01d8 00003443 		.word	1127481344
 491 01dc 00000000 		.word	pathPastBlock
 492 01e0 00000000 		.word	pathToPucks
 493              		.cfi_endproc
 494              	.LFE69:
 495              		.size	main, .-main
 496              		.global	currentPuckStackSize
 497              		.global	moving
 498              		.comm	pathPastBlock,4,4
 499              		.comm	pathToPucks,4,4
 500              		.global	running
 501              		.global	state
 502              		.global	beginNavigation
 503              		.global	ColourSensingAlgorithm
 504              		.global	colour_flag
 505              		.global	idac_value
 506              		.comm	moveBackwardAllowed,2,2
 507              		.comm	moveForwardAllowed,2,2
 508              		.comm	moveRightAllowed,2,2
 509              		.comm	moveLeftAllowed,2,2
 510              		.global	turningRightFlag
 511              		.global	turningLeftFlag
 512              		.global	drivingBackwardFlag
 513              		.global	drivingForwardFlag
 514              		.global	moveNow
 515              		.comm	motor2EncoderCounts,4,4
 516              		.comm	motor1EncoderCounts,4,4
 517              		.global	motor2Enable
 518              		.global	motor1Enable
 519              		.comm	M2_BD,4,4
 520              		.comm	M2_FD,4,4
 521              		.comm	M1_BD,4,4
 522              		.comm	M1_FD,4,4
 523              		.comm	desiredOrientation,4,4
 524              		.global	currentOrientation
 525              		.comm	desiredPosition,8,4
 526              		.global	currentPosition
 527              		.comm	initialisation,4,4
 528              		.comm	output,32,4
 529              		.comm	puckPileLocation,4,4
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\ccrm6NBL.s 			page 16


 530              		.global	block_edge_location
 531              		.global	sweeping
 532              		.global	puckRackOffsetsFromWest
 533              		.global	puckRackColours
 534              		.global	currentPuckRackScanningIndex
 535              		.comm	driveStraightEnable,4,4
 536              		.data
 537              		.align	2
 538              		.set	.LANCHOR1,. + 0
 539              		.type	colour_flag, %object
 540              		.size	colour_flag, 4
 541              	colour_flag:
 542 0000 01000000 		.word	1
 543              		.type	state, %object
 544              		.size	state, 4
 545              	state:
 546 0004 01000000 		.word	1
 547              		.type	running, %object
 548              		.size	running, 4
 549              	running:
 550 0008 01000000 		.word	1
 551              		.type	moveNow, %object
 552              		.size	moveNow, 2
 553              	moveNow:
 554 000c 0100     		.short	1
 555 000e 0000     		.space	2
 556              		.type	currentOrientation, %object
 557              		.size	currentOrientation, 4
 558              	currentOrientation:
 559 0010 5A000000 		.word	90
 560              		.type	puckRackOffsetsFromWest, %object
 561              		.size	puckRackOffsetsFromWest, 20
 562              	puckRackOffsetsFromWest:
 563 0014 48000000 		.word	72
 564 0018 42000000 		.word	66
 565 001c 3C000000 		.word	60
 566 0020 36000000 		.word	54
 567 0024 30000000 		.word	48
 568              		.section	.rodata.str1.4,"aMS",%progbits,1
 569              		.align	2
 570              	.LC0:
 571 0000 55415254 		.ascii	"UART commencing... \012\000"
 571      20636F6D 
 571      6D656E63 
 571      696E672E 
 571      2E2E200A 
 572              		.bss
 573              		.align	2
 574              		.set	.LANCHOR0,. + 0
 575              		.type	beginNavigation, %object
 576              		.size	beginNavigation, 4
 577              	beginNavigation:
 578 0000 00000000 		.space	4
 579              		.type	idac_value, %object
 580              		.size	idac_value, 4
 581              	idac_value:
 582 0004 00000000 		.space	4
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\ccrm6NBL.s 			page 17


 583              		.type	moving, %object
 584              		.size	moving, 4
 585              	moving:
 586 0008 00000000 		.space	4
 587              		.type	block_edge_location, %object
 588              		.size	block_edge_location, 16
 589              	block_edge_location:
 590 000c 00000000 		.space	16
 590      00000000 
 590      00000000 
 590      00000000 
 591              		.type	currentPuckStackSize, %object
 592              		.size	currentPuckStackSize, 4
 593              	currentPuckStackSize:
 594 001c 00000000 		.space	4
 595              		.type	ColourSensingAlgorithm, %object
 596              		.size	ColourSensingAlgorithm, 4
 597              	ColourSensingAlgorithm:
 598 0020 00000000 		.space	4
 599              		.type	turningRightFlag, %object
 600              		.size	turningRightFlag, 2
 601              	turningRightFlag:
 602 0024 0000     		.space	2
 603              		.type	turningLeftFlag, %object
 604              		.size	turningLeftFlag, 2
 605              	turningLeftFlag:
 606 0026 0000     		.space	2
 607              		.type	drivingBackwardFlag, %object
 608              		.size	drivingBackwardFlag, 2
 609              	drivingBackwardFlag:
 610 0028 0000     		.space	2
 611              		.type	drivingForwardFlag, %object
 612              		.size	drivingForwardFlag, 2
 613              	drivingForwardFlag:
 614 002a 0000     		.space	2
 615              		.type	motor2Enable, %object
 616              		.size	motor2Enable, 2
 617              	motor2Enable:
 618 002c 0000     		.space	2
 619              		.type	motor1Enable, %object
 620              		.size	motor1Enable, 2
 621              	motor1Enable:
 622 002e 0000     		.space	2
 623              		.type	currentPosition, %object
 624              		.size	currentPosition, 8
 625              	currentPosition:
 626 0030 00000000 		.space	8
 626      00000000 
 627              		.type	sweeping, %object
 628              		.size	sweeping, 4
 629              	sweeping:
 630 0038 00000000 		.space	4
 631              		.type	puckRackColours, %object
 632              		.size	puckRackColours, 20
 633              	puckRackColours:
 634 003c 00000000 		.space	20
 634      00000000 
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\ccrm6NBL.s 			page 18


 634      00000000 
 634      00000000 
 634      00000000 
 635              		.type	currentPuckRackScanningIndex, %object
 636              		.size	currentPuckRackScanningIndex, 4
 637              	currentPuckRackScanningIndex:
 638 0050 00000000 		.space	4
 639              		.text
 640              	.Letext0:
 641              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 642              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 643              		.file 4 "Generated_Source\\PSoC5/core_cm3.h"
 644              		.file 5 "ultrasonic.h"
 645              		.file 6 "main.h"
 646              		.file 7 "dcmotor.h"
 647              		.file 8 "Generated_Source\\PSoC5/Drift_Check_Timer.h"
 648              		.file 9 "Generated_Source\\PSoC5/Motor_1_Encoder_Counts.h"
 649              		.file 10 "Generated_Source\\PSoC5/Motor_2_Encoder_Counts.h"
 650              		.file 11 "Generated_Source\\PSoC5/CyLib.h"
 651              		.file 12 "Generated_Source\\PSoC5/TIA_1.h"
 652              		.file 13 "Generated_Source\\PSoC5/UART_1.h"
 653              		.file 14 "Generated_Source\\PSoC5/ADC.h"
 654              		.file 15 "Generated_Source\\PSoC5/IDAC8_1.h"
 655              		.file 16 "Generated_Source\\PSoC5/Timer_1.h"
 656              		.file 17 "Generated_Source\\PSoC5/Sonic.h"
 657              		.file 18 "Generated_Source\\PSoC5/Start.h"
 658              		.file 19 "Generated_Source\\PSoC5/Motor_1_driver.h"
 659              		.file 20 "Generated_Source\\PSoC5/Motor_2_driver.h"
 660              		.file 21 "Generated_Source\\PSoC5/Encoder_Counts_1_Interrupt.h"
 661              		.file 22 "Generated_Source\\PSoC5/Encoder_Counts_2_Interrupt.h"
 662              		.file 23 "Generated_Source\\PSoC5/Drift_Check_Interrupt.h"
 663              		.file 24 "Generated_Source\\PSoC5/Rack_Servo_PWM.h"
 664              		.file 25 "Generated_Source\\PSoC5/Gripper_Servo_PWM.h"
 665              		.file 26 "Generated_Source\\PSoC5/control_led.h"
 666              		.file 27 "colour.h"
 667              		.file 28 "servo.h"
 668              		.section	.debug_info,"",%progbits
 669              	.Ldebug_info0:
 670 0000 0D090000 		.4byte	0x90d
 671 0004 0400     		.2byte	0x4
 672 0006 00000000 		.4byte	.Ldebug_abbrev0
 673 000a 04       		.byte	0x4
 674 000b 01       		.uleb128 0x1
 675 000c 88060000 		.4byte	.LASF101
 676 0010 0C       		.byte	0xc
 677 0011 8B050000 		.4byte	.LASF102
 678 0015 E6030000 		.4byte	.LASF103
 679 0019 00000000 		.4byte	.Ldebug_ranges0+0
 680 001d 00000000 		.4byte	0
 681 0021 00000000 		.4byte	.Ldebug_line0
 682 0025 02       		.uleb128 0x2
 683 0026 01       		.byte	0x1
 684 0027 06       		.byte	0x6
 685 0028 55000000 		.4byte	.LASF0
 686 002c 02       		.uleb128 0x2
 687 002d 01       		.byte	0x1
 688 002e 08       		.byte	0x8
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\ccrm6NBL.s 			page 19


 689 002f C7030000 		.4byte	.LASF1
 690 0033 02       		.uleb128 0x2
 691 0034 02       		.byte	0x2
 692 0035 05       		.byte	0x5
 693 0036 71000000 		.4byte	.LASF2
 694 003a 02       		.uleb128 0x2
 695 003b 02       		.byte	0x2
 696 003c 07       		.byte	0x7
 697 003d F7040000 		.4byte	.LASF3
 698 0041 03       		.uleb128 0x3
 699 0042 20060000 		.4byte	.LASF9
 700 0046 02       		.byte	0x2
 701 0047 3F       		.byte	0x3f
 702 0048 4C000000 		.4byte	0x4c
 703 004c 02       		.uleb128 0x2
 704 004d 04       		.byte	0x4
 705 004e 05       		.byte	0x5
 706 004f 24050000 		.4byte	.LASF4
 707 0053 02       		.uleb128 0x2
 708 0054 04       		.byte	0x4
 709 0055 07       		.byte	0x7
 710 0056 10030000 		.4byte	.LASF5
 711 005a 02       		.uleb128 0x2
 712 005b 08       		.byte	0x8
 713 005c 05       		.byte	0x5
 714 005d A1020000 		.4byte	.LASF6
 715 0061 02       		.uleb128 0x2
 716 0062 08       		.byte	0x8
 717 0063 07       		.byte	0x7
 718 0064 6B040000 		.4byte	.LASF7
 719 0068 04       		.uleb128 0x4
 720 0069 04       		.byte	0x4
 721 006a 05       		.byte	0x5
 722 006b 696E7400 		.ascii	"int\000"
 723 006f 02       		.uleb128 0x2
 724 0070 04       		.byte	0x4
 725 0071 07       		.byte	0x7
 726 0072 94040000 		.4byte	.LASF8
 727 0076 03       		.uleb128 0x3
 728 0077 33050000 		.4byte	.LASF10
 729 007b 03       		.byte	0x3
 730 007c 2C       		.byte	0x2c
 731 007d 41000000 		.4byte	0x41
 732 0081 02       		.uleb128 0x2
 733 0082 04       		.byte	0x4
 734 0083 04       		.byte	0x4
 735 0084 88020000 		.4byte	.LASF11
 736 0088 02       		.uleb128 0x2
 737 0089 08       		.byte	0x8
 738 008a 04       		.byte	0x4
 739 008b AD050000 		.4byte	.LASF12
 740 008f 02       		.uleb128 0x2
 741 0090 01       		.byte	0x1
 742 0091 08       		.byte	0x8
 743 0092 1F050000 		.4byte	.LASF13
 744 0096 02       		.uleb128 0x2
 745 0097 08       		.byte	0x8
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\ccrm6NBL.s 			page 20


 746 0098 04       		.byte	0x4
 747 0099 AE030000 		.4byte	.LASF14
 748 009d 02       		.uleb128 0x2
 749 009e 04       		.byte	0x4
 750 009f 07       		.byte	0x7
 751 00a0 54060000 		.4byte	.LASF15
 752 00a4 05       		.uleb128 0x5
 753 00a5 C5050000 		.4byte	.LASF16
 754 00a9 01       		.byte	0x1
 755 00aa 42       		.byte	0x42
 756 00ab 00000000 		.4byte	.LFB64
 757 00af 08000000 		.4byte	.LFE64-.LFB64
 758 00b3 01       		.uleb128 0x1
 759 00b4 9C       		.byte	0x9c
 760 00b5 C3000000 		.4byte	0xc3
 761 00b9 06       		.uleb128 0x6
 762 00ba 06000000 		.4byte	.LVL0
 763 00be 63070000 		.4byte	0x763
 764 00c2 00       		.byte	0
 765 00c3 05       		.uleb128 0x5
 766 00c4 41000000 		.4byte	.LASF17
 767 00c8 01       		.byte	0x1
 768 00c9 46       		.byte	0x46
 769 00ca 00000000 		.4byte	.LFB65
 770 00ce 08000000 		.4byte	.LFE65-.LFB65
 771 00d2 01       		.uleb128 0x1
 772 00d3 9C       		.byte	0x9c
 773 00d4 E2000000 		.4byte	0xe2
 774 00d8 06       		.uleb128 0x6
 775 00d9 06000000 		.4byte	.LVL1
 776 00dd 6E070000 		.4byte	0x76e
 777 00e1 00       		.byte	0
 778 00e2 05       		.uleb128 0x5
 779 00e3 EC050000 		.4byte	.LASF18
 780 00e7 01       		.byte	0x1
 781 00e8 4A       		.byte	0x4a
 782 00e9 00000000 		.4byte	.LFB66
 783 00ed 28000000 		.4byte	.LFE66-.LFB66
 784 00f1 01       		.uleb128 0x1
 785 00f2 9C       		.byte	0x9c
 786 00f3 25010000 		.4byte	0x125
 787 00f7 06       		.uleb128 0x6
 788 00f8 06000000 		.4byte	.LVL2
 789 00fc 79070000 		.4byte	0x779
 790 0100 06       		.uleb128 0x6
 791 0101 0A000000 		.4byte	.LVL3
 792 0105 84070000 		.4byte	0x784
 793 0109 06       		.uleb128 0x6
 794 010a 0E000000 		.4byte	.LVL4
 795 010e 8F070000 		.4byte	0x78f
 796 0112 06       		.uleb128 0x6
 797 0113 16000000 		.4byte	.LVL5
 798 0117 9A070000 		.4byte	0x79a
 799 011b 06       		.uleb128 0x6
 800 011c 1E000000 		.4byte	.LVL6
 801 0120 A5070000 		.4byte	0x7a5
 802 0124 00       		.byte	0
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\ccrm6NBL.s 			page 21


 803 0125 07       		.uleb128 0x7
 804 0126 54494800 		.ascii	"TIH\000"
 805 012a 01       		.byte	0x1
 806 012b 7C       		.byte	0x7c
 807 012c 00000000 		.4byte	.LFB67
 808 0130 08000000 		.4byte	.LFE67-.LFB67
 809 0134 01       		.uleb128 0x1
 810 0135 9C       		.byte	0x9c
 811 0136 44010000 		.4byte	0x144
 812 013a 06       		.uleb128 0x6
 813 013b 06000000 		.4byte	.LVL7
 814 013f B0070000 		.4byte	0x7b0
 815 0143 00       		.byte	0
 816 0144 05       		.uleb128 0x5
 817 0145 37010000 		.4byte	.LASF19
 818 0149 01       		.byte	0x1
 819 014a 81       		.byte	0x81
 820 014b 00000000 		.4byte	.LFB68
 821 014f 20000000 		.4byte	.LFE68-.LFB68
 822 0153 01       		.uleb128 0x1
 823 0154 9C       		.byte	0x9c
 824 0155 6A010000 		.4byte	0x16a
 825 0159 08       		.uleb128 0x8
 826 015a 08000000 		.4byte	.LVL8
 827 015e BB070000 		.4byte	0x7bb
 828 0162 09       		.uleb128 0x9
 829 0163 01       		.uleb128 0x1
 830 0164 50       		.byte	0x50
 831 0165 02       		.uleb128 0x2
 832 0166 08       		.byte	0x8
 833 0167 64       		.byte	0x64
 834 0168 00       		.byte	0
 835 0169 00       		.byte	0
 836 016a 0A       		.uleb128 0xa
 837 016b C0000000 		.4byte	.LASF104
 838 016f 01       		.byte	0x1
 839 0170 89       		.byte	0x89
 840 0171 68000000 		.4byte	0x68
 841 0175 00000000 		.4byte	.LFB69
 842 0179 E4010000 		.4byte	.LFE69-.LFB69
 843 017d 01       		.uleb128 0x1
 844 017e 9C       		.byte	0x9c
 845 017f 6A040000 		.4byte	0x46a
 846 0183 0B       		.uleb128 0xb
 847 0184 98030000 		.4byte	.LASF20
 848 0188 01       		.byte	0x1
 849 0189 99       		.byte	0x99
 850 018a 68000000 		.4byte	0x68
 851 018e 00       		.byte	0
 852 018f 0C       		.uleb128 0xc
 853 0190 5D060000 		.4byte	.LASF21
 854 0194 01       		.byte	0x1
 855 0195 9A       		.byte	0x9a
 856 0196 6A040000 		.4byte	0x46a
 857 019a 0D       		.uleb128 0xd
 858 019b 746D7000 		.ascii	"tmp\000"
 859 019f 01       		.byte	0x1
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\ccrm6NBL.s 			page 22


 860 01a0 A7       		.byte	0xa7
 861 01a1 68000000 		.4byte	0x68
 862 01a5 00       		.byte	0
 863 01a6 06       		.uleb128 0x6
 864 01a7 08000000 		.4byte	.LVL9
 865 01ab C6070000 		.4byte	0x7c6
 866 01af 06       		.uleb128 0x6
 867 01b0 0C000000 		.4byte	.LVL10
 868 01b4 D1070000 		.4byte	0x7d1
 869 01b8 0E       		.uleb128 0xe
 870 01b9 12000000 		.4byte	.LVL11
 871 01bd DC070000 		.4byte	0x7dc
 872 01c1 CF010000 		.4byte	0x1cf
 873 01c5 09       		.uleb128 0x9
 874 01c6 01       		.uleb128 0x1
 875 01c7 50       		.byte	0x50
 876 01c8 05       		.uleb128 0x5
 877 01c9 03       		.byte	0x3
 878 01ca 00000000 		.4byte	.LC0
 879 01ce 00       		.byte	0
 880 01cf 06       		.uleb128 0x6
 881 01d0 16000000 		.4byte	.LVL12
 882 01d4 E7070000 		.4byte	0x7e7
 883 01d8 06       		.uleb128 0x6
 884 01d9 1A000000 		.4byte	.LVL13
 885 01dd F2070000 		.4byte	0x7f2
 886 01e1 0E       		.uleb128 0xe
 887 01e2 20000000 		.4byte	.LVL14
 888 01e6 FD070000 		.4byte	0x7fd
 889 01ea F4010000 		.4byte	0x1f4
 890 01ee 09       		.uleb128 0x9
 891 01ef 01       		.uleb128 0x1
 892 01f0 50       		.byte	0x50
 893 01f1 01       		.uleb128 0x1
 894 01f2 30       		.byte	0x30
 895 01f3 00       		.byte	0
 896 01f4 06       		.uleb128 0x6
 897 01f5 28000000 		.4byte	.LVL15
 898 01f9 08080000 		.4byte	0x808
 899 01fd 06       		.uleb128 0x6
 900 01fe 2C000000 		.4byte	.LVL16
 901 0202 13080000 		.4byte	0x813
 902 0206 06       		.uleb128 0x6
 903 0207 30000000 		.4byte	.LVL17
 904 020b 1E080000 		.4byte	0x81e
 905 020f 0E       		.uleb128 0xe
 906 0210 36000000 		.4byte	.LVL18
 907 0214 29080000 		.4byte	0x829
 908 0218 26020000 		.4byte	0x226
 909 021c 09       		.uleb128 0x9
 910 021d 01       		.uleb128 0x1
 911 021e 50       		.byte	0x50
 912 021f 05       		.uleb128 0x5
 913 0220 03       		.byte	0x3
 914 0221 00000000 		.4byte	TIH
 915 0225 00       		.byte	0
 916 0226 0E       		.uleb128 0xe
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\ccrm6NBL.s 			page 23


 917 0227 3C000000 		.4byte	.LVL19
 918 022b 34080000 		.4byte	0x834
 919 022f 3D020000 		.4byte	0x23d
 920 0233 09       		.uleb128 0x9
 921 0234 01       		.uleb128 0x1
 922 0235 50       		.byte	0x50
 923 0236 05       		.uleb128 0x5
 924 0237 03       		.byte	0x3
 925 0238 00000000 		.4byte	StartIH
 926 023c 00       		.byte	0
 927 023d 06       		.uleb128 0x6
 928 023e 44000000 		.4byte	.LVL21
 929 0242 3F080000 		.4byte	0x83f
 930 0246 06       		.uleb128 0x6
 931 0247 48000000 		.4byte	.LVL22
 932 024b 4A080000 		.4byte	0x84a
 933 024f 06       		.uleb128 0x6
 934 0250 54000000 		.4byte	.LVL23
 935 0254 55080000 		.4byte	0x855
 936 0258 06       		.uleb128 0x6
 937 0259 58000000 		.4byte	.LVL24
 938 025d 60080000 		.4byte	0x860
 939 0261 06       		.uleb128 0x6
 940 0262 5C000000 		.4byte	.LVL25
 941 0266 6B080000 		.4byte	0x86b
 942 026a 06       		.uleb128 0x6
 943 026b 60000000 		.4byte	.LVL26
 944 026f 76080000 		.4byte	0x876
 945 0273 0E       		.uleb128 0xe
 946 0274 66000000 		.4byte	.LVL27
 947 0278 81080000 		.4byte	0x881
 948 027c 8A020000 		.4byte	0x28a
 949 0280 09       		.uleb128 0x9
 950 0281 01       		.uleb128 0x1
 951 0282 50       		.byte	0x50
 952 0283 05       		.uleb128 0x5
 953 0284 03       		.byte	0x3
 954 0285 00000000 		.4byte	Encoder_Counts_1_IH
 955 0289 00       		.byte	0
 956 028a 0E       		.uleb128 0xe
 957 028b 6C000000 		.4byte	.LVL28
 958 028f 8C080000 		.4byte	0x88c
 959 0293 A1020000 		.4byte	0x2a1
 960 0297 09       		.uleb128 0x9
 961 0298 01       		.uleb128 0x1
 962 0299 50       		.byte	0x50
 963 029a 05       		.uleb128 0x5
 964 029b 03       		.byte	0x3
 965 029c 00000000 		.4byte	Encoder_Counts_2_IH
 966 02a0 00       		.byte	0
 967 02a1 0E       		.uleb128 0xe
 968 02a2 72000000 		.4byte	.LVL29
 969 02a6 97080000 		.4byte	0x897
 970 02aa B8020000 		.4byte	0x2b8
 971 02ae 09       		.uleb128 0x9
 972 02af 01       		.uleb128 0x1
 973 02b0 50       		.byte	0x50
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\ccrm6NBL.s 			page 24


 974 02b1 05       		.uleb128 0x5
 975 02b2 03       		.byte	0x3
 976 02b3 00000000 		.4byte	Drift_Check_IH
 977 02b7 00       		.byte	0
 978 02b8 06       		.uleb128 0x6
 979 02b9 76000000 		.4byte	.LVL30
 980 02bd A2080000 		.4byte	0x8a2
 981 02c1 06       		.uleb128 0x6
 982 02c2 7A000000 		.4byte	.LVL31
 983 02c6 AD080000 		.4byte	0x8ad
 984 02ca 0E       		.uleb128 0xe
 985 02cb 80000000 		.4byte	.LVL32
 986 02cf B8080000 		.4byte	0x8b8
 987 02d3 DD020000 		.4byte	0x2dd
 988 02d7 09       		.uleb128 0x9
 989 02d8 01       		.uleb128 0x1
 990 02d9 50       		.byte	0x50
 991 02da 01       		.uleb128 0x1
 992 02db 31       		.byte	0x31
 993 02dc 00       		.byte	0
 994 02dd 0E       		.uleb128 0xe
 995 02de 88000000 		.4byte	.LVL33
 996 02e2 BB070000 		.4byte	0x7bb
 997 02e6 F2020000 		.4byte	0x2f2
 998 02ea 09       		.uleb128 0x9
 999 02eb 01       		.uleb128 0x1
 1000 02ec 50       		.byte	0x50
 1001 02ed 03       		.uleb128 0x3
 1002 02ee 0A       		.byte	0xa
 1003 02ef E803     		.2byte	0x3e8
 1004 02f1 00       		.byte	0
 1005 02f2 0E       		.uleb128 0xe
 1006 02f3 8E000000 		.4byte	.LVL34
 1007 02f7 B8080000 		.4byte	0x8b8
 1008 02fb 05030000 		.4byte	0x305
 1009 02ff 09       		.uleb128 0x9
 1010 0300 01       		.uleb128 0x1
 1011 0301 50       		.byte	0x50
 1012 0302 01       		.uleb128 0x1
 1013 0303 32       		.byte	0x32
 1014 0304 00       		.byte	0
 1015 0305 0E       		.uleb128 0xe
 1016 0306 96000000 		.4byte	.LVL35
 1017 030a BB070000 		.4byte	0x7bb
 1018 030e 1A030000 		.4byte	0x31a
 1019 0312 09       		.uleb128 0x9
 1020 0313 01       		.uleb128 0x1
 1021 0314 50       		.byte	0x50
 1022 0315 03       		.uleb128 0x3
 1023 0316 0A       		.byte	0xa
 1024 0317 E803     		.2byte	0x3e8
 1025 0319 00       		.byte	0
 1026 031a 0E       		.uleb128 0xe
 1027 031b 9C000000 		.4byte	.LVL36
 1028 031f B8080000 		.4byte	0x8b8
 1029 0323 2D030000 		.4byte	0x32d
 1030 0327 09       		.uleb128 0x9
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\ccrm6NBL.s 			page 25


 1031 0328 01       		.uleb128 0x1
 1032 0329 50       		.byte	0x50
 1033 032a 01       		.uleb128 0x1
 1034 032b 33       		.byte	0x33
 1035 032c 00       		.byte	0
 1036 032d 0E       		.uleb128 0xe
 1037 032e A4000000 		.4byte	.LVL37
 1038 0332 BB070000 		.4byte	0x7bb
 1039 0336 42030000 		.4byte	0x342
 1040 033a 09       		.uleb128 0x9
 1041 033b 01       		.uleb128 0x1
 1042 033c 50       		.byte	0x50
 1043 033d 03       		.uleb128 0x3
 1044 033e 0A       		.byte	0xa
 1045 033f E803     		.2byte	0x3e8
 1046 0341 00       		.byte	0
 1047 0342 0E       		.uleb128 0xe
 1048 0343 AA000000 		.4byte	.LVL38
 1049 0347 B8080000 		.4byte	0x8b8
 1050 034b 55030000 		.4byte	0x355
 1051 034f 09       		.uleb128 0x9
 1052 0350 01       		.uleb128 0x1
 1053 0351 50       		.byte	0x50
 1054 0352 01       		.uleb128 0x1
 1055 0353 30       		.byte	0x30
 1056 0354 00       		.byte	0
 1057 0355 0E       		.uleb128 0xe
 1058 0356 B2000000 		.4byte	.LVL39
 1059 035a BB070000 		.4byte	0x7bb
 1060 035e 6A030000 		.4byte	0x36a
 1061 0362 09       		.uleb128 0x9
 1062 0363 01       		.uleb128 0x1
 1063 0364 50       		.byte	0x50
 1064 0365 03       		.uleb128 0x3
 1065 0366 0A       		.byte	0xa
 1066 0367 F401     		.2byte	0x1f4
 1067 0369 00       		.byte	0
 1068 036a 06       		.uleb128 0x6
 1069 036b B6000000 		.4byte	.LVL40
 1070 036f C3080000 		.4byte	0x8c3
 1071 0373 06       		.uleb128 0x6
 1072 0374 CE000000 		.4byte	.LVL41
 1073 0378 CE080000 		.4byte	0x8ce
 1074 037c 06       		.uleb128 0x6
 1075 037d DA000000 		.4byte	.LVL42
 1076 0381 D9080000 		.4byte	0x8d9
 1077 0385 06       		.uleb128 0x6
 1078 0386 EA000000 		.4byte	.LVL43
 1079 038a D9080000 		.4byte	0x8d9
 1080 038e 06       		.uleb128 0x6
 1081 038f F0000000 		.4byte	.LVL44
 1082 0393 E4080000 		.4byte	0x8e4
 1083 0397 06       		.uleb128 0x6
 1084 0398 F4000000 		.4byte	.LVL45
 1085 039c D9080000 		.4byte	0x8d9
 1086 03a0 0E       		.uleb128 0xe
 1087 03a1 38010000 		.4byte	.LVL47
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\ccrm6NBL.s 			page 26


 1088 03a5 EF080000 		.4byte	0x8ef
 1089 03a9 BE030000 		.4byte	0x3be
 1090 03ad 09       		.uleb128 0x9
 1091 03ae 01       		.uleb128 0x1
 1092 03af 50       		.byte	0x50
 1093 03b0 01       		.uleb128 0x1
 1094 03b1 40       		.byte	0x40
 1095 03b2 09       		.uleb128 0x9
 1096 03b3 01       		.uleb128 0x1
 1097 03b4 51       		.byte	0x51
 1098 03b5 02       		.uleb128 0x2
 1099 03b6 08       		.byte	0x8
 1100 03b7 82       		.byte	0x82
 1101 03b8 09       		.uleb128 0x9
 1102 03b9 01       		.uleb128 0x1
 1103 03ba 52       		.byte	0x52
 1104 03bb 01       		.uleb128 0x1
 1105 03bc 30       		.byte	0x30
 1106 03bd 00       		.byte	0
 1107 03be 0E       		.uleb128 0xe
 1108 03bf 44010000 		.4byte	.LVL48
 1109 03c3 EF080000 		.4byte	0x8ef
 1110 03c7 DD030000 		.4byte	0x3dd
 1111 03cb 09       		.uleb128 0x9
 1112 03cc 01       		.uleb128 0x1
 1113 03cd 50       		.byte	0x50
 1114 03ce 01       		.uleb128 0x1
 1115 03cf 40       		.byte	0x40
 1116 03d0 09       		.uleb128 0x9
 1117 03d1 01       		.uleb128 0x1
 1118 03d2 51       		.byte	0x51
 1119 03d3 02       		.uleb128 0x2
 1120 03d4 08       		.byte	0x8
 1121 03d5 66       		.byte	0x66
 1122 03d6 09       		.uleb128 0x9
 1123 03d7 01       		.uleb128 0x1
 1124 03d8 52       		.byte	0x52
 1125 03d9 02       		.uleb128 0x2
 1126 03da 08       		.byte	0x8
 1127 03db 5A       		.byte	0x5a
 1128 03dc 00       		.byte	0
 1129 03dd 0E       		.uleb128 0xe
 1130 03de 58010000 		.4byte	.LVL49
 1131 03e2 EF080000 		.4byte	0x8ef
 1132 03e6 FD030000 		.4byte	0x3fd
 1133 03ea 09       		.uleb128 0x9
 1134 03eb 01       		.uleb128 0x1
 1135 03ec 50       		.byte	0x50
 1136 03ed 02       		.uleb128 0x2
 1137 03ee 08       		.byte	0x8
 1138 03ef 68       		.byte	0x68
 1139 03f0 09       		.uleb128 0x9
 1140 03f1 01       		.uleb128 0x1
 1141 03f2 51       		.byte	0x51
 1142 03f3 02       		.uleb128 0x2
 1143 03f4 08       		.byte	0x8
 1144 03f5 82       		.byte	0x82
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\ccrm6NBL.s 			page 27


 1145 03f6 09       		.uleb128 0x9
 1146 03f7 01       		.uleb128 0x1
 1147 03f8 52       		.byte	0x52
 1148 03f9 02       		.uleb128 0x2
 1149 03fa 08       		.byte	0x8
 1150 03fb B4       		.byte	0xb4
 1151 03fc 00       		.byte	0
 1152 03fd 0E       		.uleb128 0xe
 1153 03fe 64010000 		.4byte	.LVL50
 1154 0402 EF080000 		.4byte	0x8ef
 1155 0406 1D040000 		.4byte	0x41d
 1156 040a 09       		.uleb128 0x9
 1157 040b 01       		.uleb128 0x1
 1158 040c 50       		.byte	0x50
 1159 040d 02       		.uleb128 0x2
 1160 040e 08       		.byte	0x8
 1161 040f 68       		.byte	0x68
 1162 0410 09       		.uleb128 0x9
 1163 0411 01       		.uleb128 0x1
 1164 0412 51       		.byte	0x51
 1165 0413 02       		.uleb128 0x2
 1166 0414 08       		.byte	0x8
 1167 0415 66       		.byte	0x66
 1168 0416 09       		.uleb128 0x9
 1169 0417 01       		.uleb128 0x1
 1170 0418 52       		.byte	0x52
 1171 0419 02       		.uleb128 0x2
 1172 041a 08       		.byte	0x8
 1173 041b 5A       		.byte	0x5a
 1174 041c 00       		.byte	0
 1175 041d 0E       		.uleb128 0xe
 1176 041e 7E010000 		.4byte	.LVL51
 1177 0422 EF080000 		.4byte	0x8ef
 1178 0426 3C040000 		.4byte	0x43c
 1179 042a 09       		.uleb128 0x9
 1180 042b 01       		.uleb128 0x1
 1181 042c 50       		.byte	0x50
 1182 042d 01       		.uleb128 0x1
 1183 042e 4E       		.byte	0x4e
 1184 042f 09       		.uleb128 0x9
 1185 0430 01       		.uleb128 0x1
 1186 0431 51       		.byte	0x51
 1187 0432 01       		.uleb128 0x1
 1188 0433 35       		.byte	0x35
 1189 0434 09       		.uleb128 0x9
 1190 0435 01       		.uleb128 0x1
 1191 0436 52       		.byte	0x52
 1192 0437 03       		.uleb128 0x3
 1193 0438 0A       		.byte	0xa
 1194 0439 0E01     		.2byte	0x10e
 1195 043b 00       		.byte	0
 1196 043c 06       		.uleb128 0x6
 1197 043d 86010000 		.4byte	.LVL52
 1198 0441 FA080000 		.4byte	0x8fa
 1199 0445 06       		.uleb128 0x6
 1200 0446 8E010000 		.4byte	.LVL53
 1201 044a 05090000 		.4byte	0x905
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\ccrm6NBL.s 			page 28


 1202 044e 08       		.uleb128 0x8
 1203 044f B2010000 		.4byte	.LVL54
 1204 0453 EF080000 		.4byte	0x8ef
 1205 0457 09       		.uleb128 0x9
 1206 0458 01       		.uleb128 0x1
 1207 0459 50       		.byte	0x50
 1208 045a 02       		.uleb128 0x2
 1209 045b 08       		.byte	0x8
 1210 045c 3C       		.byte	0x3c
 1211 045d 09       		.uleb128 0x9
 1212 045e 01       		.uleb128 0x1
 1213 045f 51       		.byte	0x51
 1214 0460 01       		.uleb128 0x1
 1215 0461 33       		.byte	0x33
 1216 0462 09       		.uleb128 0x9
 1217 0463 01       		.uleb128 0x1
 1218 0464 52       		.byte	0x52
 1219 0465 02       		.uleb128 0x2
 1220 0466 08       		.byte	0x8
 1221 0467 5A       		.byte	0x5a
 1222 0468 00       		.byte	0
 1223 0469 00       		.byte	0
 1224 046a 0F       		.uleb128 0xf
 1225 046b 8F000000 		.4byte	0x8f
 1226 046f 7A040000 		.4byte	0x47a
 1227 0473 10       		.uleb128 0x10
 1228 0474 9D000000 		.4byte	0x9d
 1229 0478 1F       		.byte	0x1f
 1230 0479 00       		.byte	0
 1231 047a 11       		.uleb128 0x11
 1232 047b 7B060000 		.4byte	.LASF22
 1233 047f 04       		.byte	0x4
 1234 0480 1207     		.2byte	0x712
 1235 0482 86040000 		.4byte	0x486
 1236 0486 12       		.uleb128 0x12
 1237 0487 76000000 		.4byte	0x76
 1238 048b 13       		.uleb128 0x13
 1239 048c 06020000 		.4byte	.LASF23
 1240 0490 05       		.byte	0x5
 1241 0491 1C       		.byte	0x1c
 1242 0492 68000000 		.4byte	0x68
 1243 0496 05       		.uleb128 0x5
 1244 0497 03       		.byte	0x3
 1245 0498 00000000 		.4byte	driveStraightEnable
 1246 049c 13       		.uleb128 0x13
 1247 049d 64030000 		.4byte	.LASF24
 1248 04a1 01       		.byte	0x1
 1249 04a2 73       		.byte	0x73
 1250 04a3 68000000 		.4byte	0x68
 1251 04a7 05       		.uleb128 0x5
 1252 04a8 03       		.byte	0x3
 1253 04a9 00000000 		.4byte	currentPuckRackScanningIndex
 1254 04ad 0F       		.uleb128 0xf
 1255 04ae 68000000 		.4byte	0x68
 1256 04b2 BD040000 		.4byte	0x4bd
 1257 04b6 10       		.uleb128 0x10
 1258 04b7 9D000000 		.4byte	0x9d
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\ccrm6NBL.s 			page 29


 1259 04bb 04       		.byte	0x4
 1260 04bc 00       		.byte	0
 1261 04bd 13       		.uleb128 0x13
 1262 04be 2A060000 		.4byte	.LASF25
 1263 04c2 01       		.byte	0x1
 1264 04c3 72       		.byte	0x72
 1265 04c4 AD040000 		.4byte	0x4ad
 1266 04c8 05       		.uleb128 0x5
 1267 04c9 03       		.byte	0x3
 1268 04ca 00000000 		.4byte	puckRackColours
 1269 04ce 13       		.uleb128 0x13
 1270 04cf 3F010000 		.4byte	.LASF26
 1271 04d3 01       		.byte	0x1
 1272 04d4 74       		.byte	0x74
 1273 04d5 AD040000 		.4byte	0x4ad
 1274 04d9 05       		.uleb128 0x5
 1275 04da 03       		.byte	0x3
 1276 04db 00000000 		.4byte	puckRackOffsetsFromWest
 1277 04df 13       		.uleb128 0x13
 1278 04e0 16050000 		.4byte	.LASF27
 1279 04e4 01       		.byte	0x1
 1280 04e5 66       		.byte	0x66
 1281 04e6 68000000 		.4byte	0x68
 1282 04ea 05       		.uleb128 0x5
 1283 04eb 03       		.byte	0x3
 1284 04ec 00000000 		.4byte	sweeping
 1285 04f0 0F       		.uleb128 0xf
 1286 04f1 81000000 		.4byte	0x81
 1287 04f5 00050000 		.4byte	0x500
 1288 04f9 10       		.uleb128 0x10
 1289 04fa 9D000000 		.4byte	0x9d
 1290 04fe 03       		.byte	0x3
 1291 04ff 00       		.byte	0
 1292 0500 13       		.uleb128 0x13
 1293 0501 57040000 		.4byte	.LASF28
 1294 0505 01       		.byte	0x1
 1295 0506 6D       		.byte	0x6d
 1296 0507 F0040000 		.4byte	0x4f0
 1297 050b 05       		.uleb128 0x5
 1298 050c 03       		.byte	0x3
 1299 050d 00000000 		.4byte	block_edge_location
 1300 0511 13       		.uleb128 0x13
 1301 0512 36030000 		.4byte	.LASF29
 1302 0516 06       		.byte	0x6
 1303 0517 75       		.byte	0x75
 1304 0518 81000000 		.4byte	0x81
 1305 051c 05       		.uleb128 0x5
 1306 051d 03       		.byte	0x3
 1307 051e 00000000 		.4byte	puckPileLocation
 1308 0522 13       		.uleb128 0x13
 1309 0523 5A070000 		.4byte	.LASF30
 1310 0527 05       		.byte	0x5
 1311 0528 25       		.byte	0x25
 1312 0529 68000000 		.4byte	0x68
 1313 052d 05       		.uleb128 0x5
 1314 052e 03       		.byte	0x3
 1315 052f 00000000 		.4byte	initialisation
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\ccrm6NBL.s 			page 30


 1316 0533 13       		.uleb128 0x13
 1317 0534 5D060000 		.4byte	.LASF21
 1318 0538 01       		.byte	0x1
 1319 0539 9A       		.byte	0x9a
 1320 053a 6A040000 		.4byte	0x46a
 1321 053e 05       		.uleb128 0x5
 1322 053f 03       		.byte	0x3
 1323 0540 00000000 		.4byte	output
 1324 0544 13       		.uleb128 0x13
 1325 0545 D9050000 		.4byte	.LASF31
 1326 0549 01       		.byte	0x1
 1327 054a 62       		.byte	0x62
 1328 054b 68000000 		.4byte	0x68
 1329 054f 05       		.uleb128 0x5
 1330 0550 03       		.byte	0x3
 1331 0551 00000000 		.4byte	state
 1332 0555 13       		.uleb128 0x13
 1333 0556 3B050000 		.4byte	.LASF32
 1334 055a 01       		.byte	0x1
 1335 055b 6B       		.byte	0x6b
 1336 055c 68000000 		.4byte	0x68
 1337 0560 05       		.uleb128 0x5
 1338 0561 03       		.byte	0x3
 1339 0562 00000000 		.4byte	moving
 1340 0566 0F       		.uleb128 0xf
 1341 0567 81000000 		.4byte	0x81
 1342 056b 76050000 		.4byte	0x576
 1343 056f 10       		.uleb128 0x10
 1344 0570 9D000000 		.4byte	0x9d
 1345 0574 01       		.byte	0x1
 1346 0575 00       		.byte	0
 1347 0576 13       		.uleb128 0x13
 1348 0577 8F000000 		.4byte	.LASF33
 1349 057b 01       		.byte	0x1
 1350 057c 1F       		.byte	0x1f
 1351 057d 66050000 		.4byte	0x566
 1352 0581 05       		.uleb128 0x5
 1353 0582 03       		.byte	0x3
 1354 0583 00000000 		.4byte	currentPosition
 1355 0587 13       		.uleb128 0x13
 1356 0588 64050000 		.4byte	.LASF34
 1357 058c 01       		.byte	0x1
 1358 058d 20       		.byte	0x20
 1359 058e 66050000 		.4byte	0x566
 1360 0592 05       		.uleb128 0x5
 1361 0593 03       		.byte	0x3
 1362 0594 00000000 		.4byte	desiredPosition
 1363 0598 13       		.uleb128 0x13
 1364 0599 D1040000 		.4byte	.LASF35
 1365 059d 01       		.byte	0x1
 1366 059e 21       		.byte	0x21
 1367 059f 68000000 		.4byte	0x68
 1368 05a3 05       		.uleb128 0x5
 1369 05a4 03       		.byte	0x3
 1370 05a5 00000000 		.4byte	currentOrientation
 1371 05a9 13       		.uleb128 0x13
 1372 05aa 01010000 		.4byte	.LASF36
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\ccrm6NBL.s 			page 31


 1373 05ae 01       		.byte	0x1
 1374 05af 22       		.byte	0x22
 1375 05b0 68000000 		.4byte	0x68
 1376 05b4 05       		.uleb128 0x5
 1377 05b5 03       		.byte	0x3
 1378 05b6 00000000 		.4byte	desiredOrientation
 1379 05ba 13       		.uleb128 0x13
 1380 05bb 74050000 		.4byte	.LASF37
 1381 05bf 01       		.byte	0x1
 1382 05c0 29       		.byte	0x29
 1383 05c1 68000000 		.4byte	0x68
 1384 05c5 05       		.uleb128 0x5
 1385 05c6 03       		.byte	0x3
 1386 05c7 00000000 		.4byte	M1_FD
 1387 05cb 13       		.uleb128 0x13
 1388 05cc 2D050000 		.4byte	.LASF38
 1389 05d0 01       		.byte	0x1
 1390 05d1 2A       		.byte	0x2a
 1391 05d2 68000000 		.4byte	0x68
 1392 05d6 05       		.uleb128 0x5
 1393 05d7 03       		.byte	0x3
 1394 05d8 00000000 		.4byte	M1_BD
 1395 05dc 13       		.uleb128 0x13
 1396 05dd 54070000 		.4byte	.LASF39
 1397 05e1 01       		.byte	0x1
 1398 05e2 2B       		.byte	0x2b
 1399 05e3 68000000 		.4byte	0x68
 1400 05e7 05       		.uleb128 0x5
 1401 05e8 03       		.byte	0x3
 1402 05e9 00000000 		.4byte	M2_FD
 1403 05ed 13       		.uleb128 0x13
 1404 05ee 75060000 		.4byte	.LASF40
 1405 05f2 01       		.byte	0x1
 1406 05f3 2C       		.byte	0x2c
 1407 05f4 68000000 		.4byte	0x68
 1408 05f8 05       		.uleb128 0x5
 1409 05f9 03       		.byte	0x3
 1410 05fa 00000000 		.4byte	M2_BD
 1411 05fe 13       		.uleb128 0x13
 1412 05ff 37020000 		.4byte	.LASF41
 1413 0603 01       		.byte	0x1
 1414 0604 27       		.byte	0x27
 1415 0605 33000000 		.4byte	0x33
 1416 0609 05       		.uleb128 0x5
 1417 060a 03       		.byte	0x3
 1418 060b 00000000 		.4byte	motor1Enable
 1419 060f 13       		.uleb128 0x13
 1420 0610 DF050000 		.4byte	.LASF42
 1421 0614 01       		.byte	0x1
 1422 0615 28       		.byte	0x28
 1423 0616 33000000 		.4byte	0x33
 1424 061a 05       		.uleb128 0x5
 1425 061b 03       		.byte	0x3
 1426 061c 00000000 		.4byte	motor2Enable
 1427 0620 13       		.uleb128 0x13
 1428 0621 D5000000 		.4byte	.LASF43
 1429 0625 01       		.byte	0x1
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\ccrm6NBL.s 			page 32


 1430 0626 2D       		.byte	0x2d
 1431 0627 68000000 		.4byte	0x68
 1432 062b 05       		.uleb128 0x5
 1433 062c 03       		.byte	0x3
 1434 062d 00000000 		.4byte	motor1EncoderCounts
 1435 0631 13       		.uleb128 0x13
 1436 0632 00000000 		.4byte	.LASF44
 1437 0636 01       		.byte	0x1
 1438 0637 2E       		.byte	0x2e
 1439 0638 68000000 		.4byte	0x68
 1440 063c 05       		.uleb128 0x5
 1441 063d 03       		.byte	0x3
 1442 063e 00000000 		.4byte	motor2EncoderCounts
 1443 0642 13       		.uleb128 0x13
 1444 0643 4F040000 		.4byte	.LASF45
 1445 0647 01       		.byte	0x1
 1446 0648 2F       		.byte	0x2f
 1447 0649 33000000 		.4byte	0x33
 1448 064d 05       		.uleb128 0x5
 1449 064e 03       		.byte	0x3
 1450 064f 00000000 		.4byte	moveNow
 1451 0653 13       		.uleb128 0x13
 1452 0654 AD000000 		.4byte	.LASF46
 1453 0658 01       		.byte	0x1
 1454 0659 36       		.byte	0x36
 1455 065a 33000000 		.4byte	0x33
 1456 065e 05       		.uleb128 0x5
 1457 065f 03       		.byte	0x3
 1458 0660 00000000 		.4byte	drivingForwardFlag
 1459 0664 13       		.uleb128 0x13
 1460 0665 22030000 		.4byte	.LASF47
 1461 0669 01       		.byte	0x1
 1462 066a 37       		.byte	0x37
 1463 066b 33000000 		.4byte	0x33
 1464 066f 05       		.uleb128 0x5
 1465 0670 03       		.byte	0x3
 1466 0671 00000000 		.4byte	drivingBackwardFlag
 1467 0675 13       		.uleb128 0x13
 1468 0676 61000000 		.4byte	.LASF48
 1469 067a 01       		.byte	0x1
 1470 067b 38       		.byte	0x38
 1471 067c 33000000 		.4byte	0x33
 1472 0680 05       		.uleb128 0x5
 1473 0681 03       		.byte	0x3
 1474 0682 00000000 		.4byte	turningLeftFlag
 1475 0686 13       		.uleb128 0x13
 1476 0687 77020000 		.4byte	.LASF49
 1477 068b 01       		.byte	0x1
 1478 068c 39       		.byte	0x39
 1479 068d 33000000 		.4byte	0x33
 1480 0691 05       		.uleb128 0x5
 1481 0692 03       		.byte	0x3
 1482 0693 00000000 		.4byte	turningRightFlag
 1483 0697 13       		.uleb128 0x13
 1484 0698 3A060000 		.4byte	.LASF50
 1485 069c 01       		.byte	0x1
 1486 069d 3C       		.byte	0x3c
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\ccrm6NBL.s 			page 33


 1487 069e 33000000 		.4byte	0x33
 1488 06a2 05       		.uleb128 0x5
 1489 06a3 03       		.byte	0x3
 1490 06a4 00000000 		.4byte	moveLeftAllowed
 1491 06a8 13       		.uleb128 0x13
 1492 06a9 64060000 		.4byte	.LASF51
 1493 06ad 01       		.byte	0x1
 1494 06ae 3D       		.byte	0x3d
 1495 06af 33000000 		.4byte	0x33
 1496 06b3 05       		.uleb128 0x5
 1497 06b4 03       		.byte	0x3
 1498 06b5 00000000 		.4byte	moveRightAllowed
 1499 06b9 13       		.uleb128 0x13
 1500 06ba E4040000 		.4byte	.LASF52
 1501 06be 01       		.byte	0x1
 1502 06bf 3E       		.byte	0x3e
 1503 06c0 33000000 		.4byte	0x33
 1504 06c4 05       		.uleb128 0x5
 1505 06c5 03       		.byte	0x3
 1506 06c6 00000000 		.4byte	moveForwardAllowed
 1507 06ca 13       		.uleb128 0x13
 1508 06cb 74010000 		.4byte	.LASF53
 1509 06cf 01       		.byte	0x1
 1510 06d0 3F       		.byte	0x3f
 1511 06d1 33000000 		.4byte	0x33
 1512 06d5 05       		.uleb128 0x5
 1513 06d6 03       		.byte	0x3
 1514 06d7 00000000 		.4byte	moveBackwardAllowed
 1515 06db 13       		.uleb128 0x13
 1516 06dc A1040000 		.4byte	.LASF54
 1517 06e0 01       		.byte	0x1
 1518 06e1 53       		.byte	0x53
 1519 06e2 68000000 		.4byte	0x68
 1520 06e6 05       		.uleb128 0x5
 1521 06e7 03       		.byte	0x3
 1522 06e8 00000000 		.4byte	idac_value
 1523 06ec 13       		.uleb128 0x13
 1524 06ed A2030000 		.4byte	.LASF55
 1525 06f1 01       		.byte	0x1
 1526 06f2 57       		.byte	0x57
 1527 06f3 68000000 		.4byte	0x68
 1528 06f7 05       		.uleb128 0x5
 1529 06f8 03       		.byte	0x3
 1530 06f9 00000000 		.4byte	colour_flag
 1531 06fd 13       		.uleb128 0x13
 1532 06fe AC040000 		.4byte	.LASF56
 1533 0702 01       		.byte	0x1
 1534 0703 58       		.byte	0x58
 1535 0704 68000000 		.4byte	0x68
 1536 0708 05       		.uleb128 0x5
 1537 0709 03       		.byte	0x3
 1538 070a 00000000 		.4byte	ColourSensingAlgorithm
 1539 070e 13       		.uleb128 0x13
 1540 070f C5000000 		.4byte	.LASF57
 1541 0713 01       		.byte	0x1
 1542 0714 60       		.byte	0x60
 1543 0715 68000000 		.4byte	0x68
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\ccrm6NBL.s 			page 34


 1544 0719 05       		.uleb128 0x5
 1545 071a 03       		.byte	0x3
 1546 071b 00000000 		.4byte	beginNavigation
 1547 071f 13       		.uleb128 0x13
 1548 0720 2F020000 		.4byte	.LASF58
 1549 0724 01       		.byte	0x1
 1550 0725 64       		.byte	0x64
 1551 0726 68000000 		.4byte	0x68
 1552 072a 05       		.uleb128 0x5
 1553 072b 03       		.byte	0x3
 1554 072c 00000000 		.4byte	running
 1555 0730 13       		.uleb128 0x13
 1556 0731 33070000 		.4byte	.LASF59
 1557 0735 01       		.byte	0x1
 1558 0736 68       		.byte	0x68
 1559 0737 68000000 		.4byte	0x68
 1560 073b 05       		.uleb128 0x5
 1561 073c 03       		.byte	0x3
 1562 073d 00000000 		.4byte	pathToPucks
 1563 0741 13       		.uleb128 0x13
 1564 0742 D2020000 		.4byte	.LASF60
 1565 0746 01       		.byte	0x1
 1566 0747 69       		.byte	0x69
 1567 0748 68000000 		.4byte	0x68
 1568 074c 05       		.uleb128 0x5
 1569 074d 03       		.byte	0x3
 1570 074e 00000000 		.4byte	pathPastBlock
 1571 0752 13       		.uleb128 0x13
 1572 0753 1A020000 		.4byte	.LASF61
 1573 0757 01       		.byte	0x1
 1574 0758 6F       		.byte	0x6f
 1575 0759 68000000 		.4byte	0x68
 1576 075d 05       		.uleb128 0x5
 1577 075e 03       		.byte	0x3
 1578 075f 00000000 		.4byte	currentPuckStackSize
 1579 0763 14       		.uleb128 0x14
 1580 0764 42050000 		.4byte	.LASF62
 1581 0768 42050000 		.4byte	.LASF62
 1582 076c 07       		.byte	0x7
 1583 076d 1C       		.byte	0x1c
 1584 076e 14       		.uleb128 0x14
 1585 076f 7B000000 		.4byte	.LASF63
 1586 0773 7B000000 		.4byte	.LASF63
 1587 0777 07       		.byte	0x7
 1588 0778 1D       		.byte	0x1d
 1589 0779 14       		.uleb128 0x14
 1590 077a FB050000 		.4byte	.LASF64
 1591 077e FB050000 		.4byte	.LASF64
 1592 0782 08       		.byte	0x8
 1593 0783 5E       		.byte	0x5e
 1594 0784 14       		.uleb128 0x14
 1595 0785 81030000 		.4byte	.LASF65
 1596 0789 81030000 		.4byte	.LASF65
 1597 078d 08       		.byte	0x8
 1598 078e 5B       		.byte	0x5b
 1599 078f 14       		.uleb128 0x14
 1600 0790 81070000 		.4byte	.LASF66
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\ccrm6NBL.s 			page 35


 1601 0794 81070000 		.4byte	.LASF66
 1602 0798 09       		.byte	0x9
 1603 0799 5D       		.byte	0x5d
 1604 079a 14       		.uleb128 0x14
 1605 079b 14010000 		.4byte	.LASF67
 1606 079f 14010000 		.4byte	.LASF67
 1607 07a3 0A       		.byte	0xa
 1608 07a4 5D       		.byte	0x5d
 1609 07a5 14       		.uleb128 0x14
 1610 07a6 88010000 		.4byte	.LASF68
 1611 07aa 88010000 		.4byte	.LASF68
 1612 07ae 07       		.byte	0x7
 1613 07af 11       		.byte	0x11
 1614 07b0 14       		.uleb128 0x14
 1615 07b1 5C020000 		.4byte	.LASF69
 1616 07b5 5C020000 		.4byte	.LASF69
 1617 07b9 05       		.byte	0x5
 1618 07ba 18       		.byte	0x18
 1619 07bb 14       		.uleb128 0x14
 1620 07bc 16070000 		.4byte	.LASF70
 1621 07c0 16070000 		.4byte	.LASF70
 1622 07c4 0B       		.byte	0xb
 1623 07c5 76       		.byte	0x76
 1624 07c6 14       		.uleb128 0x14
 1625 07c7 0A050000 		.4byte	.LASF71
 1626 07cb 0A050000 		.4byte	.LASF71
 1627 07cf 0C       		.byte	0xc
 1628 07d0 3D       		.byte	0x3d
 1629 07d1 14       		.uleb128 0x14
 1630 07d2 BA030000 		.4byte	.LASF72
 1631 07d6 BA030000 		.4byte	.LASF72
 1632 07da 0D       		.byte	0xd
 1633 07db 54       		.byte	0x54
 1634 07dc 14       		.uleb128 0x14
 1635 07dd B4050000 		.4byte	.LASF73
 1636 07e1 B4050000 		.4byte	.LASF73
 1637 07e5 0D       		.byte	0xd
 1638 07e6 8B       		.byte	0x8b
 1639 07e7 14       		.uleb128 0x14
 1640 07e8 E0020000 		.4byte	.LASF74
 1641 07ec E0020000 		.4byte	.LASF74
 1642 07f0 0E       		.byte	0xe
 1643 07f1 3A       		.byte	0x3a
 1644 07f2 14       		.uleb128 0x14
 1645 07f3 C3040000 		.4byte	.LASF75
 1646 07f7 C3040000 		.4byte	.LASF75
 1647 07fb 0F       		.byte	0xf
 1648 07fc 3C       		.byte	0x3c
 1649 07fd 14       		.uleb128 0x14
 1650 07fe D5030000 		.4byte	.LASF76
 1651 0802 D5030000 		.4byte	.LASF76
 1652 0806 0F       		.byte	0xf
 1653 0807 40       		.byte	0x40
 1654 0808 14       		.uleb128 0x14
 1655 0809 7A050000 		.4byte	.LASF77
 1656 080d 7A050000 		.4byte	.LASF77
 1657 0811 0F       		.byte	0xf
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\ccrm6NBL.s 			page 36


 1658 0812 41       		.byte	0x41
 1659 0813 14       		.uleb128 0x14
 1660 0814 56050000 		.4byte	.LASF78
 1661 0818 56050000 		.4byte	.LASF78
 1662 081c 10       		.byte	0x10
 1663 081d 5A       		.byte	0x5a
 1664 081e 14       		.uleb128 0x14
 1665 081f 95010000 		.4byte	.LASF79
 1666 0823 95010000 		.4byte	.LASF79
 1667 0827 10       		.byte	0x10
 1668 0828 5E       		.byte	0x5e
 1669 0829 14       		.uleb128 0x14
 1670 082a 9F000000 		.4byte	.LASF80
 1671 082e 9F000000 		.4byte	.LASF80
 1672 0832 11       		.byte	0x11
 1673 0833 18       		.byte	0x18
 1674 0834 14       		.uleb128 0x14
 1675 0835 9F050000 		.4byte	.LASF81
 1676 0839 9F050000 		.4byte	.LASF81
 1677 083d 12       		.byte	0x12
 1678 083e 18       		.byte	0x18
 1679 083f 14       		.uleb128 0x14
 1680 0840 1E070000 		.4byte	.LASF82
 1681 0844 1E070000 		.4byte	.LASF82
 1682 0848 13       		.byte	0x13
 1683 0849 92       		.byte	0x92
 1684 084a 14       		.uleb128 0x14
 1685 084b 3F070000 		.4byte	.LASF83
 1686 084f 3F070000 		.4byte	.LASF83
 1687 0853 14       		.byte	0x14
 1688 0854 92       		.byte	0x92
 1689 0855 14       		.uleb128 0x14
 1690 0856 14000000 		.4byte	.LASF84
 1691 085a 14000000 		.4byte	.LASF84
 1692 085e 07       		.byte	0x7
 1693 085f 10       		.byte	0x10
 1694 0860 14       		.uleb128 0x14
 1695 0861 57010000 		.4byte	.LASF85
 1696 0865 57010000 		.4byte	.LASF85
 1697 0869 09       		.byte	0x9
 1698 086a 4F       		.byte	0x4f
 1699 086b 14       		.uleb128 0x14
 1700 086c 47030000 		.4byte	.LASF86
 1701 0870 47030000 		.4byte	.LASF86
 1702 0874 0A       		.byte	0xa
 1703 0875 4F       		.byte	0x4f
 1704 0876 14       		.uleb128 0x14
 1705 0877 69070000 		.4byte	.LASF87
 1706 087b 69070000 		.4byte	.LASF87
 1707 087f 08       		.byte	0x8
 1708 0880 5A       		.byte	0x5a
 1709 0881 14       		.uleb128 0x14
 1710 0882 C5010000 		.4byte	.LASF88
 1711 0886 C5010000 		.4byte	.LASF88
 1712 088a 15       		.byte	0x15
 1713 088b 18       		.byte	0x18
 1714 088c 14       		.uleb128 0x14
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\ccrm6NBL.s 			page 37


 1715 088d AF020000 		.4byte	.LASF89
 1716 0891 AF020000 		.4byte	.LASF89
 1717 0895 16       		.byte	0x16
 1718 0896 18       		.byte	0x18
 1719 0897 14       		.uleb128 0x14
 1720 0898 E8010000 		.4byte	.LASF90
 1721 089c E8010000 		.4byte	.LASF90
 1722 08a0 17       		.byte	0x17
 1723 08a1 18       		.byte	0x18
 1724 08a2 14       		.uleb128 0x14
 1725 08a3 B0010000 		.4byte	.LASF91
 1726 08a7 B0010000 		.4byte	.LASF91
 1727 08ab 18       		.byte	0x18
 1728 08ac 92       		.byte	0x92
 1729 08ad 14       		.uleb128 0x14
 1730 08ae 44020000 		.4byte	.LASF92
 1731 08b2 44020000 		.4byte	.LASF92
 1732 08b6 19       		.byte	0x19
 1733 08b7 92       		.byte	0x92
 1734 08b8 14       		.uleb128 0x14
 1735 08b9 82040000 		.4byte	.LASF93
 1736 08bd 82040000 		.4byte	.LASF93
 1737 08c1 1A       		.byte	0x1a
 1738 08c2 2F       		.byte	0x2f
 1739 08c3 14       		.uleb128 0x14
 1740 08c4 E9000000 		.4byte	.LASF94
 1741 08c8 E9000000 		.4byte	.LASF94
 1742 08cc 1B       		.byte	0x1b
 1743 08cd 17       		.byte	0x17
 1744 08ce 14       		.uleb128 0x14
 1745 08cf F7020000 		.4byte	.LASF95
 1746 08d3 F7020000 		.4byte	.LASF95
 1747 08d7 07       		.byte	0x7
 1748 08d8 16       		.byte	0x16
 1749 08d9 14       		.uleb128 0x14
 1750 08da 29000000 		.4byte	.LASF96
 1751 08de 29000000 		.4byte	.LASF96
 1752 08e2 07       		.byte	0x7
 1753 08e3 14       		.byte	0x14
 1754 08e4 14       		.uleb128 0x14
 1755 08e5 4A060000 		.4byte	.LASF97
 1756 08e9 4A060000 		.4byte	.LASF97
 1757 08ed 07       		.byte	0x7
 1758 08ee 18       		.byte	0x18
 1759 08ef 14       		.uleb128 0x14
 1760 08f0 92050000 		.4byte	.LASF98
 1761 08f4 92050000 		.4byte	.LASF98
 1762 08f8 07       		.byte	0x7
 1763 08f9 1E       		.byte	0x1e
 1764 08fa 14       		.uleb128 0x14
 1765 08fb EA020000 		.4byte	.LASF99
 1766 08ff EA020000 		.4byte	.LASF99
 1767 0903 1C       		.byte	0x1c
 1768 0904 14       		.byte	0x14
 1769 0905 14       		.uleb128 0x14
 1770 0906 8E020000 		.4byte	.LASF100
 1771 090a 8E020000 		.4byte	.LASF100
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\ccrm6NBL.s 			page 38


 1772 090e 1C       		.byte	0x1c
 1773 090f 13       		.byte	0x13
 1774 0910 00       		.byte	0
 1775              		.section	.debug_abbrev,"",%progbits
 1776              	.Ldebug_abbrev0:
 1777 0000 01       		.uleb128 0x1
 1778 0001 11       		.uleb128 0x11
 1779 0002 01       		.byte	0x1
 1780 0003 25       		.uleb128 0x25
 1781 0004 0E       		.uleb128 0xe
 1782 0005 13       		.uleb128 0x13
 1783 0006 0B       		.uleb128 0xb
 1784 0007 03       		.uleb128 0x3
 1785 0008 0E       		.uleb128 0xe
 1786 0009 1B       		.uleb128 0x1b
 1787 000a 0E       		.uleb128 0xe
 1788 000b 55       		.uleb128 0x55
 1789 000c 17       		.uleb128 0x17
 1790 000d 11       		.uleb128 0x11
 1791 000e 01       		.uleb128 0x1
 1792 000f 10       		.uleb128 0x10
 1793 0010 17       		.uleb128 0x17
 1794 0011 00       		.byte	0
 1795 0012 00       		.byte	0
 1796 0013 02       		.uleb128 0x2
 1797 0014 24       		.uleb128 0x24
 1798 0015 00       		.byte	0
 1799 0016 0B       		.uleb128 0xb
 1800 0017 0B       		.uleb128 0xb
 1801 0018 3E       		.uleb128 0x3e
 1802 0019 0B       		.uleb128 0xb
 1803 001a 03       		.uleb128 0x3
 1804 001b 0E       		.uleb128 0xe
 1805 001c 00       		.byte	0
 1806 001d 00       		.byte	0
 1807 001e 03       		.uleb128 0x3
 1808 001f 16       		.uleb128 0x16
 1809 0020 00       		.byte	0
 1810 0021 03       		.uleb128 0x3
 1811 0022 0E       		.uleb128 0xe
 1812 0023 3A       		.uleb128 0x3a
 1813 0024 0B       		.uleb128 0xb
 1814 0025 3B       		.uleb128 0x3b
 1815 0026 0B       		.uleb128 0xb
 1816 0027 49       		.uleb128 0x49
 1817 0028 13       		.uleb128 0x13
 1818 0029 00       		.byte	0
 1819 002a 00       		.byte	0
 1820 002b 04       		.uleb128 0x4
 1821 002c 24       		.uleb128 0x24
 1822 002d 00       		.byte	0
 1823 002e 0B       		.uleb128 0xb
 1824 002f 0B       		.uleb128 0xb
 1825 0030 3E       		.uleb128 0x3e
 1826 0031 0B       		.uleb128 0xb
 1827 0032 03       		.uleb128 0x3
 1828 0033 08       		.uleb128 0x8
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\ccrm6NBL.s 			page 39


 1829 0034 00       		.byte	0
 1830 0035 00       		.byte	0
 1831 0036 05       		.uleb128 0x5
 1832 0037 2E       		.uleb128 0x2e
 1833 0038 01       		.byte	0x1
 1834 0039 3F       		.uleb128 0x3f
 1835 003a 19       		.uleb128 0x19
 1836 003b 03       		.uleb128 0x3
 1837 003c 0E       		.uleb128 0xe
 1838 003d 3A       		.uleb128 0x3a
 1839 003e 0B       		.uleb128 0xb
 1840 003f 3B       		.uleb128 0x3b
 1841 0040 0B       		.uleb128 0xb
 1842 0041 27       		.uleb128 0x27
 1843 0042 19       		.uleb128 0x19
 1844 0043 11       		.uleb128 0x11
 1845 0044 01       		.uleb128 0x1
 1846 0045 12       		.uleb128 0x12
 1847 0046 06       		.uleb128 0x6
 1848 0047 40       		.uleb128 0x40
 1849 0048 18       		.uleb128 0x18
 1850 0049 9742     		.uleb128 0x2117
 1851 004b 19       		.uleb128 0x19
 1852 004c 01       		.uleb128 0x1
 1853 004d 13       		.uleb128 0x13
 1854 004e 00       		.byte	0
 1855 004f 00       		.byte	0
 1856 0050 06       		.uleb128 0x6
 1857 0051 898201   		.uleb128 0x4109
 1858 0054 00       		.byte	0
 1859 0055 11       		.uleb128 0x11
 1860 0056 01       		.uleb128 0x1
 1861 0057 31       		.uleb128 0x31
 1862 0058 13       		.uleb128 0x13
 1863 0059 00       		.byte	0
 1864 005a 00       		.byte	0
 1865 005b 07       		.uleb128 0x7
 1866 005c 2E       		.uleb128 0x2e
 1867 005d 01       		.byte	0x1
 1868 005e 3F       		.uleb128 0x3f
 1869 005f 19       		.uleb128 0x19
 1870 0060 03       		.uleb128 0x3
 1871 0061 08       		.uleb128 0x8
 1872 0062 3A       		.uleb128 0x3a
 1873 0063 0B       		.uleb128 0xb
 1874 0064 3B       		.uleb128 0x3b
 1875 0065 0B       		.uleb128 0xb
 1876 0066 27       		.uleb128 0x27
 1877 0067 19       		.uleb128 0x19
 1878 0068 11       		.uleb128 0x11
 1879 0069 01       		.uleb128 0x1
 1880 006a 12       		.uleb128 0x12
 1881 006b 06       		.uleb128 0x6
 1882 006c 40       		.uleb128 0x40
 1883 006d 18       		.uleb128 0x18
 1884 006e 9742     		.uleb128 0x2117
 1885 0070 19       		.uleb128 0x19
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\ccrm6NBL.s 			page 40


 1886 0071 01       		.uleb128 0x1
 1887 0072 13       		.uleb128 0x13
 1888 0073 00       		.byte	0
 1889 0074 00       		.byte	0
 1890 0075 08       		.uleb128 0x8
 1891 0076 898201   		.uleb128 0x4109
 1892 0079 01       		.byte	0x1
 1893 007a 11       		.uleb128 0x11
 1894 007b 01       		.uleb128 0x1
 1895 007c 31       		.uleb128 0x31
 1896 007d 13       		.uleb128 0x13
 1897 007e 00       		.byte	0
 1898 007f 00       		.byte	0
 1899 0080 09       		.uleb128 0x9
 1900 0081 8A8201   		.uleb128 0x410a
 1901 0084 00       		.byte	0
 1902 0085 02       		.uleb128 0x2
 1903 0086 18       		.uleb128 0x18
 1904 0087 9142     		.uleb128 0x2111
 1905 0089 18       		.uleb128 0x18
 1906 008a 00       		.byte	0
 1907 008b 00       		.byte	0
 1908 008c 0A       		.uleb128 0xa
 1909 008d 2E       		.uleb128 0x2e
 1910 008e 01       		.byte	0x1
 1911 008f 3F       		.uleb128 0x3f
 1912 0090 19       		.uleb128 0x19
 1913 0091 03       		.uleb128 0x3
 1914 0092 0E       		.uleb128 0xe
 1915 0093 3A       		.uleb128 0x3a
 1916 0094 0B       		.uleb128 0xb
 1917 0095 3B       		.uleb128 0x3b
 1918 0096 0B       		.uleb128 0xb
 1919 0097 27       		.uleb128 0x27
 1920 0098 19       		.uleb128 0x19
 1921 0099 49       		.uleb128 0x49
 1922 009a 13       		.uleb128 0x13
 1923 009b 8701     		.uleb128 0x87
 1924 009d 19       		.uleb128 0x19
 1925 009e 11       		.uleb128 0x11
 1926 009f 01       		.uleb128 0x1
 1927 00a0 12       		.uleb128 0x12
 1928 00a1 06       		.uleb128 0x6
 1929 00a2 40       		.uleb128 0x40
 1930 00a3 18       		.uleb128 0x18
 1931 00a4 9642     		.uleb128 0x2116
 1932 00a6 19       		.uleb128 0x19
 1933 00a7 01       		.uleb128 0x1
 1934 00a8 13       		.uleb128 0x13
 1935 00a9 00       		.byte	0
 1936 00aa 00       		.byte	0
 1937 00ab 0B       		.uleb128 0xb
 1938 00ac 34       		.uleb128 0x34
 1939 00ad 00       		.byte	0
 1940 00ae 03       		.uleb128 0x3
 1941 00af 0E       		.uleb128 0xe
 1942 00b0 3A       		.uleb128 0x3a
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\ccrm6NBL.s 			page 41


 1943 00b1 0B       		.uleb128 0xb
 1944 00b2 3B       		.uleb128 0x3b
 1945 00b3 0B       		.uleb128 0xb
 1946 00b4 49       		.uleb128 0x49
 1947 00b5 13       		.uleb128 0x13
 1948 00b6 1C       		.uleb128 0x1c
 1949 00b7 0B       		.uleb128 0xb
 1950 00b8 00       		.byte	0
 1951 00b9 00       		.byte	0
 1952 00ba 0C       		.uleb128 0xc
 1953 00bb 34       		.uleb128 0x34
 1954 00bc 00       		.byte	0
 1955 00bd 03       		.uleb128 0x3
 1956 00be 0E       		.uleb128 0xe
 1957 00bf 3A       		.uleb128 0x3a
 1958 00c0 0B       		.uleb128 0xb
 1959 00c1 3B       		.uleb128 0x3b
 1960 00c2 0B       		.uleb128 0xb
 1961 00c3 49       		.uleb128 0x49
 1962 00c4 13       		.uleb128 0x13
 1963 00c5 3F       		.uleb128 0x3f
 1964 00c6 19       		.uleb128 0x19
 1965 00c7 3C       		.uleb128 0x3c
 1966 00c8 19       		.uleb128 0x19
 1967 00c9 00       		.byte	0
 1968 00ca 00       		.byte	0
 1969 00cb 0D       		.uleb128 0xd
 1970 00cc 34       		.uleb128 0x34
 1971 00cd 00       		.byte	0
 1972 00ce 03       		.uleb128 0x3
 1973 00cf 08       		.uleb128 0x8
 1974 00d0 3A       		.uleb128 0x3a
 1975 00d1 0B       		.uleb128 0xb
 1976 00d2 3B       		.uleb128 0x3b
 1977 00d3 0B       		.uleb128 0xb
 1978 00d4 49       		.uleb128 0x49
 1979 00d5 13       		.uleb128 0x13
 1980 00d6 1C       		.uleb128 0x1c
 1981 00d7 0B       		.uleb128 0xb
 1982 00d8 00       		.byte	0
 1983 00d9 00       		.byte	0
 1984 00da 0E       		.uleb128 0xe
 1985 00db 898201   		.uleb128 0x4109
 1986 00de 01       		.byte	0x1
 1987 00df 11       		.uleb128 0x11
 1988 00e0 01       		.uleb128 0x1
 1989 00e1 31       		.uleb128 0x31
 1990 00e2 13       		.uleb128 0x13
 1991 00e3 01       		.uleb128 0x1
 1992 00e4 13       		.uleb128 0x13
 1993 00e5 00       		.byte	0
 1994 00e6 00       		.byte	0
 1995 00e7 0F       		.uleb128 0xf
 1996 00e8 01       		.uleb128 0x1
 1997 00e9 01       		.byte	0x1
 1998 00ea 49       		.uleb128 0x49
 1999 00eb 13       		.uleb128 0x13
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\ccrm6NBL.s 			page 42


 2000 00ec 01       		.uleb128 0x1
 2001 00ed 13       		.uleb128 0x13
 2002 00ee 00       		.byte	0
 2003 00ef 00       		.byte	0
 2004 00f0 10       		.uleb128 0x10
 2005 00f1 21       		.uleb128 0x21
 2006 00f2 00       		.byte	0
 2007 00f3 49       		.uleb128 0x49
 2008 00f4 13       		.uleb128 0x13
 2009 00f5 2F       		.uleb128 0x2f
 2010 00f6 0B       		.uleb128 0xb
 2011 00f7 00       		.byte	0
 2012 00f8 00       		.byte	0
 2013 00f9 11       		.uleb128 0x11
 2014 00fa 34       		.uleb128 0x34
 2015 00fb 00       		.byte	0
 2016 00fc 03       		.uleb128 0x3
 2017 00fd 0E       		.uleb128 0xe
 2018 00fe 3A       		.uleb128 0x3a
 2019 00ff 0B       		.uleb128 0xb
 2020 0100 3B       		.uleb128 0x3b
 2021 0101 05       		.uleb128 0x5
 2022 0102 49       		.uleb128 0x49
 2023 0103 13       		.uleb128 0x13
 2024 0104 3F       		.uleb128 0x3f
 2025 0105 19       		.uleb128 0x19
 2026 0106 3C       		.uleb128 0x3c
 2027 0107 19       		.uleb128 0x19
 2028 0108 00       		.byte	0
 2029 0109 00       		.byte	0
 2030 010a 12       		.uleb128 0x12
 2031 010b 35       		.uleb128 0x35
 2032 010c 00       		.byte	0
 2033 010d 49       		.uleb128 0x49
 2034 010e 13       		.uleb128 0x13
 2035 010f 00       		.byte	0
 2036 0110 00       		.byte	0
 2037 0111 13       		.uleb128 0x13
 2038 0112 34       		.uleb128 0x34
 2039 0113 00       		.byte	0
 2040 0114 03       		.uleb128 0x3
 2041 0115 0E       		.uleb128 0xe
 2042 0116 3A       		.uleb128 0x3a
 2043 0117 0B       		.uleb128 0xb
 2044 0118 3B       		.uleb128 0x3b
 2045 0119 0B       		.uleb128 0xb
 2046 011a 49       		.uleb128 0x49
 2047 011b 13       		.uleb128 0x13
 2048 011c 3F       		.uleb128 0x3f
 2049 011d 19       		.uleb128 0x19
 2050 011e 02       		.uleb128 0x2
 2051 011f 18       		.uleb128 0x18
 2052 0120 00       		.byte	0
 2053 0121 00       		.byte	0
 2054 0122 14       		.uleb128 0x14
 2055 0123 2E       		.uleb128 0x2e
 2056 0124 00       		.byte	0
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\ccrm6NBL.s 			page 43


 2057 0125 3F       		.uleb128 0x3f
 2058 0126 19       		.uleb128 0x19
 2059 0127 3C       		.uleb128 0x3c
 2060 0128 19       		.uleb128 0x19
 2061 0129 6E       		.uleb128 0x6e
 2062 012a 0E       		.uleb128 0xe
 2063 012b 03       		.uleb128 0x3
 2064 012c 0E       		.uleb128 0xe
 2065 012d 3A       		.uleb128 0x3a
 2066 012e 0B       		.uleb128 0xb
 2067 012f 3B       		.uleb128 0x3b
 2068 0130 0B       		.uleb128 0xb
 2069 0131 00       		.byte	0
 2070 0132 00       		.byte	0
 2071 0133 00       		.byte	0
 2072              		.section	.debug_aranges,"",%progbits
 2073 0000 44000000 		.4byte	0x44
 2074 0004 0200     		.2byte	0x2
 2075 0006 00000000 		.4byte	.Ldebug_info0
 2076 000a 04       		.byte	0x4
 2077 000b 00       		.byte	0
 2078 000c 0000     		.2byte	0
 2079 000e 0000     		.2byte	0
 2080 0010 00000000 		.4byte	.LFB64
 2081 0014 08000000 		.4byte	.LFE64-.LFB64
 2082 0018 00000000 		.4byte	.LFB65
 2083 001c 08000000 		.4byte	.LFE65-.LFB65
 2084 0020 00000000 		.4byte	.LFB66
 2085 0024 28000000 		.4byte	.LFE66-.LFB66
 2086 0028 00000000 		.4byte	.LFB67
 2087 002c 08000000 		.4byte	.LFE67-.LFB67
 2088 0030 00000000 		.4byte	.LFB68
 2089 0034 20000000 		.4byte	.LFE68-.LFB68
 2090 0038 00000000 		.4byte	.LFB69
 2091 003c E4010000 		.4byte	.LFE69-.LFB69
 2092 0040 00000000 		.4byte	0
 2093 0044 00000000 		.4byte	0
 2094              		.section	.debug_ranges,"",%progbits
 2095              	.Ldebug_ranges0:
 2096 0000 00000000 		.4byte	.LFB64
 2097 0004 08000000 		.4byte	.LFE64
 2098 0008 00000000 		.4byte	.LFB65
 2099 000c 08000000 		.4byte	.LFE65
 2100 0010 00000000 		.4byte	.LFB66
 2101 0014 28000000 		.4byte	.LFE66
 2102 0018 00000000 		.4byte	.LFB67
 2103 001c 08000000 		.4byte	.LFE67
 2104 0020 00000000 		.4byte	.LFB68
 2105 0024 20000000 		.4byte	.LFE68
 2106 0028 00000000 		.4byte	.LFB69
 2107 002c E4010000 		.4byte	.LFE69
 2108 0030 00000000 		.4byte	0
 2109 0034 00000000 		.4byte	0
 2110              		.section	.debug_line,"",%progbits
 2111              	.Ldebug_line0:
 2112 0000 AD030000 		.section	.debug_str,"MS",%progbits,1
 2112      0200E602 
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\ccrm6NBL.s 			page 44


 2112      00000201 
 2112      FB0E0D00 
 2112      01010101 
 2113              	.LASF44:
 2114 0000 6D6F746F 		.ascii	"motor2EncoderCounts\000"
 2114      7232456E 
 2114      636F6465 
 2114      72436F75 
 2114      6E747300 
 2115              	.LASF84:
 2116 0014 6D6F746F 		.ascii	"motorDutyCycleUpdate\000"
 2116      72447574 
 2116      79437963 
 2116      6C655570 
 2116      64617465 
 2117              	.LASF96:
 2118 0029 6D6F7665 		.ascii	"moveForwardIndefinitely\000"
 2118      466F7277 
 2118      61726449 
 2118      6E646566 
 2118      696E6974 
 2119              	.LASF17:
 2120 0041 456E636F 		.ascii	"Encoder_Counts_2_IH\000"
 2120      6465725F 
 2120      436F756E 
 2120      74735F32 
 2120      5F494800 
 2121              	.LASF0:
 2122 0055 7369676E 		.ascii	"signed char\000"
 2122      65642063 
 2122      68617200 
 2123              	.LASF48:
 2124 0061 7475726E 		.ascii	"turningLeftFlag\000"
 2124      696E674C 
 2124      65667446 
 2124      6C616700 
 2125              	.LASF2:
 2126 0071 73686F72 		.ascii	"short int\000"
 2126      7420696E 
 2126      7400
 2127              	.LASF63:
 2128 007b 73746F70 		.ascii	"stopMotor2AndUpdate\000"
 2128      4D6F746F 
 2128      7232416E 
 2128      64557064 
 2128      61746500 
 2129              	.LASF33:
 2130 008f 63757272 		.ascii	"currentPosition\000"
 2130      656E7450 
 2130      6F736974 
 2130      696F6E00 
 2131              	.LASF80:
 2132 009f 536F6E69 		.ascii	"Sonic_StartEx\000"
 2132      635F5374 
 2132      61727445 
 2132      7800
 2133              	.LASF46:
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\ccrm6NBL.s 			page 45


 2134 00ad 64726976 		.ascii	"drivingForwardFlag\000"
 2134      696E6746 
 2134      6F727761 
 2134      7264466C 
 2134      616700
 2135              	.LASF104:
 2136 00c0 6D61696E 		.ascii	"main\000"
 2136      00
 2137              	.LASF57:
 2138 00c5 62656769 		.ascii	"beginNavigation\000"
 2138      6E4E6176 
 2138      69676174 
 2138      696F6E00 
 2139              	.LASF43:
 2140 00d5 6D6F746F 		.ascii	"motor1EncoderCounts\000"
 2140      7231456E 
 2140      636F6465 
 2140      72436F75 
 2140      6E747300 
 2141              	.LASF94:
 2142 00e9 436F6C6F 		.ascii	"ColourSensingInitialise\000"
 2142      75725365 
 2142      6E73696E 
 2142      67496E69 
 2142      7469616C 
 2143              	.LASF36:
 2144 0101 64657369 		.ascii	"desiredOrientation\000"
 2144      7265644F 
 2144      7269656E 
 2144      74617469 
 2144      6F6E00
 2145              	.LASF67:
 2146 0114 4D6F746F 		.ascii	"Motor_2_Encoder_Counts_ReadCounter\000"
 2146      725F325F 
 2146      456E636F 
 2146      6465725F 
 2146      436F756E 
 2147              	.LASF19:
 2148 0137 53746172 		.ascii	"StartIH\000"
 2148      74494800 
 2149              	.LASF26:
 2150 013f 7075636B 		.ascii	"puckRackOffsetsFromWest\000"
 2150      5261636B 
 2150      4F666673 
 2150      65747346 
 2150      726F6D57 
 2151              	.LASF85:
 2152 0157 4D6F746F 		.ascii	"Motor_1_Encoder_Counts_Start\000"
 2152      725F315F 
 2152      456E636F 
 2152      6465725F 
 2152      436F756E 
 2153              	.LASF53:
 2154 0174 6D6F7665 		.ascii	"moveBackwardAllowed\000"
 2154      4261636B 
 2154      77617264 
 2154      416C6C6F 
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\ccrm6NBL.s 			page 46


 2154      77656400 
 2155              	.LASF68:
 2156 0188 64726966 		.ascii	"driftCorrect\000"
 2156      74436F72 
 2156      72656374 
 2156      00
 2157              	.LASF79:
 2158 0195 54696D65 		.ascii	"Timer_1_ReadStatusRegister\000"
 2158      725F315F 
 2158      52656164 
 2158      53746174 
 2158      75735265 
 2159              	.LASF91:
 2160 01b0 5261636B 		.ascii	"Rack_Servo_PWM_Start\000"
 2160      5F536572 
 2160      766F5F50 
 2160      574D5F53 
 2160      74617274 
 2161              	.LASF88:
 2162 01c5 456E636F 		.ascii	"Encoder_Counts_1_Interrupt_StartEx\000"
 2162      6465725F 
 2162      436F756E 
 2162      74735F31 
 2162      5F496E74 
 2163              	.LASF90:
 2164 01e8 44726966 		.ascii	"Drift_Check_Interrupt_StartEx\000"
 2164      745F4368 
 2164      65636B5F 
 2164      496E7465 
 2164      72727570 
 2165              	.LASF23:
 2166 0206 64726976 		.ascii	"driveStraightEnable\000"
 2166      65537472 
 2166      61696768 
 2166      74456E61 
 2166      626C6500 
 2167              	.LASF61:
 2168 021a 63757272 		.ascii	"currentPuckStackSize\000"
 2168      656E7450 
 2168      75636B53 
 2168      7461636B 
 2168      53697A65 
 2169              	.LASF58:
 2170 022f 72756E6E 		.ascii	"running\000"
 2170      696E6700 
 2171              	.LASF41:
 2172 0237 6D6F746F 		.ascii	"motor1Enable\000"
 2172      7231456E 
 2172      61626C65 
 2172      00
 2173              	.LASF92:
 2174 0244 47726970 		.ascii	"Gripper_Servo_PWM_Start\000"
 2174      7065725F 
 2174      53657276 
 2174      6F5F5057 
 2174      4D5F5374 
 2175              	.LASF69:
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\ccrm6NBL.s 			page 47


 2176 025c 756C7472 		.ascii	"ultrasonicInterruptHandler\000"
 2176      61736F6E 
 2176      6963496E 
 2176      74657272 
 2176      75707448 
 2177              	.LASF49:
 2178 0277 7475726E 		.ascii	"turningRightFlag\000"
 2178      696E6752 
 2178      69676874 
 2178      466C6167 
 2178      00
 2179              	.LASF11:
 2180 0288 666C6F61 		.ascii	"float\000"
 2180      7400
 2181              	.LASF100:
 2182 028e 6368616E 		.ascii	"changeHeightToPuck\000"
 2182      67654865 
 2182      69676874 
 2182      546F5075 
 2182      636B00
 2183              	.LASF6:
 2184 02a1 6C6F6E67 		.ascii	"long long int\000"
 2184      206C6F6E 
 2184      6720696E 
 2184      7400
 2185              	.LASF89:
 2186 02af 456E636F 		.ascii	"Encoder_Counts_2_Interrupt_StartEx\000"
 2186      6465725F 
 2186      436F756E 
 2186      74735F32 
 2186      5F496E74 
 2187              	.LASF60:
 2188 02d2 70617468 		.ascii	"pathPastBlock\000"
 2188      50617374 
 2188      426C6F63 
 2188      6B00
 2189              	.LASF74:
 2190 02e0 4144435F 		.ascii	"ADC_Start\000"
 2190      53746172 
 2190      7400
 2191              	.LASF99:
 2192 02ea 6C6F7765 		.ascii	"lowerAndOpen\000"
 2192      72416E64 
 2192      4F70656E 
 2192      00
 2193              	.LASF95:
 2194 02f7 6D6F7665 		.ascii	"moveBackwardIndefinitely\000"
 2194      4261636B 
 2194      77617264 
 2194      496E6465 
 2194      66696E69 
 2195              	.LASF5:
 2196 0310 6C6F6E67 		.ascii	"long unsigned int\000"
 2196      20756E73 
 2196      69676E65 
 2196      6420696E 
 2196      7400
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\ccrm6NBL.s 			page 48


 2197              	.LASF47:
 2198 0322 64726976 		.ascii	"drivingBackwardFlag\000"
 2198      696E6742 
 2198      61636B77 
 2198      61726446 
 2198      6C616700 
 2199              	.LASF29:
 2200 0336 7075636B 		.ascii	"puckPileLocation\000"
 2200      50696C65 
 2200      4C6F6361 
 2200      74696F6E 
 2200      00
 2201              	.LASF86:
 2202 0347 4D6F746F 		.ascii	"Motor_2_Encoder_Counts_Start\000"
 2202      725F325F 
 2202      456E636F 
 2202      6465725F 
 2202      436F756E 
 2203              	.LASF24:
 2204 0364 63757272 		.ascii	"currentPuckRackScanningIndex\000"
 2204      656E7450 
 2204      75636B52 
 2204      61636B53 
 2204      63616E6E 
 2205              	.LASF65:
 2206 0381 44726966 		.ascii	"Drift_Check_Timer_Stop\000"
 2206      745F4368 
 2206      65636B5F 
 2206      54696D65 
 2206      725F5374 
 2207              	.LASF20:
 2208 0398 63616C69 		.ascii	"calibrate\000"
 2208      62726174 
 2208      6500
 2209              	.LASF55:
 2210 03a2 636F6C6F 		.ascii	"colour_flag\000"
 2210      75725F66 
 2210      6C616700 
 2211              	.LASF14:
 2212 03ae 6C6F6E67 		.ascii	"long double\000"
 2212      20646F75 
 2212      626C6500 
 2213              	.LASF72:
 2214 03ba 55415254 		.ascii	"UART_1_Start\000"
 2214      5F315F53 
 2214      74617274 
 2214      00
 2215              	.LASF1:
 2216 03c7 756E7369 		.ascii	"unsigned char\000"
 2216      676E6564 
 2216      20636861 
 2216      7200
 2217              	.LASF76:
 2218 03d5 49444143 		.ascii	"IDAC8_1_SetRange\000"
 2218      385F315F 
 2218      53657452 
 2218      616E6765 
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\ccrm6NBL.s 			page 49


 2218      00
 2219              	.LASF103:
 2220 03e6 5C5C6164 		.ascii	"\\\\ad.monash.edu\\home\\User026\\bamcg3\\Documents"
 2220      2E6D6F6E 
 2220      6173682E 
 2220      6564755C 
 2220      686F6D65 
 2221 0413 5C476974 		.ascii	"\\GitHub\\ECE3091_Group17\\Group17RobotReal\\Group1"
 2221      4875625C 
 2221      45434533 
 2221      3039315F 
 2221      47726F75 
 2222 0442 37526F62 		.ascii	"7Robot.cydsn\000"
 2222      6F742E63 
 2222      7964736E 
 2222      00
 2223              	.LASF45:
 2224 044f 6D6F7665 		.ascii	"moveNow\000"
 2224      4E6F7700 
 2225              	.LASF28:
 2226 0457 626C6F63 		.ascii	"block_edge_location\000"
 2226      6B5F6564 
 2226      67655F6C 
 2226      6F636174 
 2226      696F6E00 
 2227              	.LASF7:
 2228 046b 6C6F6E67 		.ascii	"long long unsigned int\000"
 2228      206C6F6E 
 2228      6720756E 
 2228      7369676E 
 2228      65642069 
 2229              	.LASF93:
 2230 0482 636F6E74 		.ascii	"control_led_Write\000"
 2230      726F6C5F 
 2230      6C65645F 
 2230      57726974 
 2230      6500
 2231              	.LASF8:
 2232 0494 756E7369 		.ascii	"unsigned int\000"
 2232      676E6564 
 2232      20696E74 
 2232      00
 2233              	.LASF54:
 2234 04a1 69646163 		.ascii	"idac_value\000"
 2234      5F76616C 
 2234      756500
 2235              	.LASF56:
 2236 04ac 436F6C6F 		.ascii	"ColourSensingAlgorithm\000"
 2236      75725365 
 2236      6E73696E 
 2236      67416C67 
 2236      6F726974 
 2237              	.LASF75:
 2238 04c3 49444143 		.ascii	"IDAC8_1_Start\000"
 2238      385F315F 
 2238      53746172 
 2238      7400
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\ccrm6NBL.s 			page 50


 2239              	.LASF35:
 2240 04d1 63757272 		.ascii	"currentOrientation\000"
 2240      656E744F 
 2240      7269656E 
 2240      74617469 
 2240      6F6E00
 2241              	.LASF52:
 2242 04e4 6D6F7665 		.ascii	"moveForwardAllowed\000"
 2242      466F7277 
 2242      61726441 
 2242      6C6C6F77 
 2242      656400
 2243              	.LASF3:
 2244 04f7 73686F72 		.ascii	"short unsigned int\000"
 2244      7420756E 
 2244      7369676E 
 2244      65642069 
 2244      6E7400
 2245              	.LASF71:
 2246 050a 5449415F 		.ascii	"TIA_1_Start\000"
 2246      315F5374 
 2246      61727400 
 2247              	.LASF27:
 2248 0516 73776565 		.ascii	"sweeping\000"
 2248      70696E67 
 2248      00
 2249              	.LASF13:
 2250 051f 63686172 		.ascii	"char\000"
 2250      00
 2251              	.LASF4:
 2252 0524 6C6F6E67 		.ascii	"long int\000"
 2252      20696E74 
 2252      00
 2253              	.LASF38:
 2254 052d 4D315F42 		.ascii	"M1_BD\000"
 2254      4400
 2255              	.LASF10:
 2256 0533 696E7433 		.ascii	"int32_t\000"
 2256      325F7400 
 2257              	.LASF32:
 2258 053b 6D6F7669 		.ascii	"moving\000"
 2258      6E6700
 2259              	.LASF62:
 2260 0542 73746F70 		.ascii	"stopMotor1AndUpdate\000"
 2260      4D6F746F 
 2260      7231416E 
 2260      64557064 
 2260      61746500 
 2261              	.LASF78:
 2262 0556 54696D65 		.ascii	"Timer_1_Start\000"
 2262      725F315F 
 2262      53746172 
 2262      7400
 2263              	.LASF34:
 2264 0564 64657369 		.ascii	"desiredPosition\000"
 2264      72656450 
 2264      6F736974 
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\ccrm6NBL.s 			page 51


 2264      696F6E00 
 2265              	.LASF37:
 2266 0574 4D315F46 		.ascii	"M1_FD\000"
 2266      4400
 2267              	.LASF77:
 2268 057a 49444143 		.ascii	"IDAC8_1_SetValue\000"
 2268      385F315F 
 2268      53657456 
 2268      616C7565 
 2268      00
 2269              	.LASF102:
 2270 058b 6D61696E 		.ascii	"main.c\000"
 2270      2E6300
 2271              	.LASF98:
 2272 0592 6D6F7665 		.ascii	"moveAndAngle\000"
 2272      416E6441 
 2272      6E676C65 
 2272      00
 2273              	.LASF81:
 2274 059f 53746172 		.ascii	"Start_StartEx\000"
 2274      745F5374 
 2274      61727445 
 2274      7800
 2275              	.LASF12:
 2276 05ad 646F7562 		.ascii	"double\000"
 2276      6C6500
 2277              	.LASF73:
 2278 05b4 55415254 		.ascii	"UART_1_PutString\000"
 2278      5F315F50 
 2278      75745374 
 2278      72696E67 
 2278      00
 2279              	.LASF16:
 2280 05c5 456E636F 		.ascii	"Encoder_Counts_1_IH\000"
 2280      6465725F 
 2280      436F756E 
 2280      74735F31 
 2280      5F494800 
 2281              	.LASF31:
 2282 05d9 73746174 		.ascii	"state\000"
 2282      6500
 2283              	.LASF42:
 2284 05df 6D6F746F 		.ascii	"motor2Enable\000"
 2284      7232456E 
 2284      61626C65 
 2284      00
 2285              	.LASF18:
 2286 05ec 44726966 		.ascii	"Drift_Check_IH\000"
 2286      745F4368 
 2286      65636B5F 
 2286      494800
 2287              	.LASF64:
 2288 05fb 44726966 		.ascii	"Drift_Check_Timer_ReadStatusRegister\000"
 2288      745F4368 
 2288      65636B5F 
 2288      54696D65 
 2288      725F5265 
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\ccrm6NBL.s 			page 52


 2289              	.LASF9:
 2290 0620 5F5F696E 		.ascii	"__int32_t\000"
 2290      7433325F 
 2290      7400
 2291              	.LASF25:
 2292 062a 7075636B 		.ascii	"puckRackColours\000"
 2292      5261636B 
 2292      436F6C6F 
 2292      75727300 
 2293              	.LASF50:
 2294 063a 6D6F7665 		.ascii	"moveLeftAllowed\000"
 2294      4C656674 
 2294      416C6C6F 
 2294      77656400 
 2295              	.LASF97:
 2296 064a 7475726E 		.ascii	"turnRight\000"
 2296      52696768 
 2296      7400
 2297              	.LASF15:
 2298 0654 73697A65 		.ascii	"sizetype\000"
 2298      74797065 
 2298      00
 2299              	.LASF21:
 2300 065d 6F757470 		.ascii	"output\000"
 2300      757400
 2301              	.LASF51:
 2302 0664 6D6F7665 		.ascii	"moveRightAllowed\000"
 2302      52696768 
 2302      74416C6C 
 2302      6F776564 
 2302      00
 2303              	.LASF40:
 2304 0675 4D325F42 		.ascii	"M2_BD\000"
 2304      4400
 2305              	.LASF22:
 2306 067b 49544D5F 		.ascii	"ITM_RxBuffer\000"
 2306      52784275 
 2306      66666572 
 2306      00
 2307              	.LASF101:
 2308 0688 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 2308      43313120 
 2308      352E342E 
 2308      31203230 
 2308      31363036 
 2309 06bb 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 2309      20726576 
 2309      6973696F 
 2309      6E203233 
 2309      37373135 
 2310 06ee 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 2310      66756E63 
 2310      74696F6E 
 2310      2D736563 
 2310      74696F6E 
 2311              	.LASF70:
 2312 0716 43794465 		.ascii	"CyDelay\000"
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\ccrm6NBL.s 			page 53


 2312      6C617900 
 2313              	.LASF82:
 2314 071e 4D6F746F 		.ascii	"Motor_1_driver_Start\000"
 2314      725F315F 
 2314      64726976 
 2314      65725F53 
 2314      74617274 
 2315              	.LASF59:
 2316 0733 70617468 		.ascii	"pathToPucks\000"
 2316      546F5075 
 2316      636B7300 
 2317              	.LASF83:
 2318 073f 4D6F746F 		.ascii	"Motor_2_driver_Start\000"
 2318      725F325F 
 2318      64726976 
 2318      65725F53 
 2318      74617274 
 2319              	.LASF39:
 2320 0754 4D325F46 		.ascii	"M2_FD\000"
 2320      4400
 2321              	.LASF30:
 2322 075a 696E6974 		.ascii	"initialisation\000"
 2322      69616C69 
 2322      73617469 
 2322      6F6E00
 2323              	.LASF87:
 2324 0769 44726966 		.ascii	"Drift_Check_Timer_Start\000"
 2324      745F4368 
 2324      65636B5F 
 2324      54696D65 
 2324      725F5374 
 2325              	.LASF66:
 2326 0781 4D6F746F 		.ascii	"Motor_1_Encoder_Counts_ReadCounter\000"
 2326      725F315F 
 2326      456E636F 
 2326      6465725F 
 2326      436F756E 
 2327              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
