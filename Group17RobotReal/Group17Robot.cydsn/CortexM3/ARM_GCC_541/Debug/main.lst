ARM GAS  C:\Users\Misha\AppData\Local\Temp\cc3J0lph.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.TIH,"ax",%progbits
  20              		.align	2
  21              		.global	TIH
  22              		.thumb
  23              		.thumb_func
  24              		.type	TIH, %function
  25              	TIH:
  26              	.LFB64:
  27              		.file 1 "main.c"
   1:main.c        **** 
   2:main.c        **** /* ========================================
   3:main.c        ****  *
   4:main.c        ****  * Copyright Group 17, 2019
   5:main.c        ****  * All Rights Reserved
   6:main.c        ****  * UNPUBLISHED, LICENSED SOFTWARE.
   7:main.c        ****  *
   8:main.c        ****  * CONFIDENTIAL AND PROPRIETARY INFORMATION
   9:main.c        ****  * WHICH IS THE PROPERTY OF Blayke, Misha, Nidhin.
  10:main.c        ****  *
  11:main.c        ****  * ========================================
  12:main.c        **** */
  13:main.c        **** 
  14:main.c        **** // * PSOC LIBRARY * //
  15:main.c        **** #include "project.h"
  16:main.c        **** 
  17:main.c        **** // * C LIBRARIES * // 
  18:main.c        **** #include <stdio.h>
  19:main.c        **** #include <math.h>
  20:main.c        **** 
  21:main.c        **** // * OUR LIBRARIES * //
  22:main.c        **** #include "main.h"
  23:main.c        **** #include "colour.h"
  24:main.c        **** #include "ultrasonic.h" 
  25:main.c        **** #include "dcmotor.h"
  26:main.c        **** #include "servo.h"
  27:main.c        **** #include "customMath.h"
  28:main.c        **** 
  29:main.c        **** 
  30:main.c        **** extern char output[32];   
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cc3J0lph.s 			page 2


  31:main.c        **** 
  32:main.c        **** // * STATE VARIABLES * //
  33:main.c        **** int state = STATE_SCAN_PLAN;
  34:main.c        **** int running = 1;
  35:main.c        **** int sweeping = 0;
  36:main.c        **** float block_edge_location[4] = {0,0,0,0}; // N E S W edge positions respectively
  37:main.c        **** 
  38:main.c        **** // * PUCK CONSTRUCTION VARIABLES * //
  39:main.c        **** int currentPuckStackSize = 0; // How many pucks are currently on the construction plate
  40:main.c        **** int puckRackColours[5] = {BLANK,BLANK,BLANK,BLANK,BLANK}; // 5 slots in puck rack.
  41:main.c        **** int puckConstructionPlan[3] = {BLANK,BLANK,BLANK};
  42:main.c        **** int currentPuckRackScanningIndex = 0;
  43:main.c        **** int puckRackOffsetsFromWest[5] = {PUCK_RACK_0_WEST_DISTANCE,
  44:main.c        ****                                 PUCK_RACK_1_WEST_DISTANCE,
  45:main.c        ****                                 PUCK_RACK_2_WEST_DISTANCE,
  46:main.c        ****                                 PUCK_RACK_3_WEST_DISTANCE,
  47:main.c        ****                                 PUCK_RACK_4_WEST_DISTANCE };
  48:main.c        **** 
  49:main.c        **** float horizontalPuckGrid = 0;
  50:main.c        **** 
  51:main.c        **** // * NAVIGATION AND POSITION VARIABLES * //
  52:main.c        **** 
  53:main.c        **** int beginNavigation = 0; // Allow us to break out of the intial phase when powered up
  54:main.c        **** 
  55:main.c        **** int pathToPucks; // This will give us a corridor that we should initially take when trying to go to
  56:main.c        **** int pathPastBlock;
  57:main.c        **** 
  58:main.c        **** float currentPosition[2] = {0,0};
  59:main.c        **** float desiredPosition[2];
  60:main.c        **** int currentOrientation = 90; //in degrees (convert to radians when needed)- 90 assuming we start fa
  61:main.c        **** int desiredOrientation;
  62:main.c        **** 
  63:main.c        **** short int moveNow = 1; //This is a flag that lets the main program tell the moving functions
  64:main.c        **** //whethe we want the robot to be moving or not. For example, when we need to operate servos
  65:main.c        **** //the main program would set moveNow to FALSE.
  66:main.c        **** 
  67:main.c        **** //The four flags below let the rest of the program know if the robot is trying to drive 
  68:main.c        **** //forward or back, turn left or right. At the start of every motion, turn these flags on
  69:main.c        **** //at the end turn them off.
  70:main.c        **** short int drivingForwardFlag = 0;
  71:main.c        **** short int drivingBackwardFlag = 0;
  72:main.c        **** short int turningLeftFlag = 0;
  73:main.c        **** short int turningRightFlag = 0;
  74:main.c        **** 
  75:main.c        **** //These flags will be used by the main program to allow the robot to move in certain directions
  76:main.c        **** short int moveLeftAllowed;
  77:main.c        **** short int moveRightAllowed;
  78:main.c        **** short int moveForwardAllowed;
  79:main.c        **** short int moveBackwardAllowed;
  80:main.c        **** 
  81:main.c        **** 
  82:main.c        **** // * COLOUR VARIABLES * //
  83:main.c        **** 
  84:main.c        **** int idac_value = 0;  
  85:main.c        **** int colour_flag = 1;                    // sets which photodiode to use 
  86:main.c        **** int colour_sensing_algorithm = 0;      // Determines which colour sensing algorithm to use:
  87:main.c        ****                                                 // 0: Wall algorithm
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cc3J0lph.s 			page 3


  88:main.c        ****                                             // 1: Claw algorithm
  89:main.c        ****                                                 // 2: old algorithm
  90:main.c        **** 
  91:main.c        **** int moving = 0; // Temp to stop while loop from repeated runs of scanning plan code
  92:main.c        **** 
  93:main.c        **** const int PLAN_SCAN_VERTICAL = 10; // Set to ultrasonic distance at the home base 
  94:main.c        **** 
  95:main.c        **** int current_stage = 1;      // There are 3 stages, we start at 1
  96:main.c        **** 
  97:main.c        **** 
  98:main.c        **** // * INTERRUPT HANDLING * // 
  99:main.c        **** CY_ISR(TIH)                             // Ultrasonic ISR Definition
 100:main.c        **** {
  28              		.loc 1 100 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 08B5     		push	{r3, lr}
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 3, -8
  35              		.cfi_offset 14, -4
 101:main.c        ****     ultrasonicInterruptHandler();
  36              		.loc 1 101 0
  37 0002 FFF7FEFF 		bl	ultrasonicInterruptHandler
  38              	.LVL0:
  39 0006 08BD     		pop	{r3, pc}
  40              		.cfi_endproc
  41              	.LFE64:
  42              		.size	TIH, .-TIH
  43              		.section	.text.StartIH,"ax",%progbits
  44              		.align	2
  45              		.global	StartIH
  46              		.thumb
  47              		.thumb_func
  48              		.type	StartIH, %function
  49              	StartIH:
  50              	.LFB65:
 102:main.c        **** }
 103:main.c        **** 
 104:main.c        **** CY_ISR(StartIH)                             // Ultrasonic ISR Definition
 105:main.c        **** {
  51              		.loc 1 105 0
  52              		.cfi_startproc
  53              		@ args = 0, pretend = 0, frame = 0
  54              		@ frame_needed = 0, uses_anonymous_args = 0
  55 0000 08B5     		push	{r3, lr}
  56              		.cfi_def_cfa_offset 8
  57              		.cfi_offset 3, -8
  58              		.cfi_offset 14, -4
 106:main.c        ****     CyDelay(100);
  59              		.loc 1 106 0
  60 0002 6420     		movs	r0, #100
  61 0004 FFF7FEFF 		bl	CyDelay
  62              	.LVL1:
 107:main.c        ****     
 108:main.c        ****     beginNavigation = 1;
  63              		.loc 1 108 0
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cc3J0lph.s 			page 4


  64 0008 0122     		movs	r2, #1
  65 000a 034B     		ldr	r3, .L5
  66 000c 1A60     		str	r2, [r3]
 109:main.c        ****     colour_flag = 0; 
  67              		.loc 1 109 0
  68 000e 0022     		movs	r2, #0
  69 0010 024B     		ldr	r3, .L5+4
  70 0012 1A60     		str	r2, [r3]
  71 0014 08BD     		pop	{r3, pc}
  72              	.L6:
  73 0016 00BF     		.align	2
  74              	.L5:
  75 0018 00000000 		.word	.LANCHOR0
  76 001c 00000000 		.word	.LANCHOR1
  77              		.cfi_endproc
  78              	.LFE65:
  79              		.size	StartIH, .-StartIH
  80              		.section	.text.Encoder_Counts_1_IH,"ax",%progbits
  81              		.align	2
  82              		.global	Encoder_Counts_1_IH
  83              		.thumb
  84              		.thumb_func
  85              		.type	Encoder_Counts_1_IH, %function
  86              	Encoder_Counts_1_IH:
  87              	.LFB66:
 110:main.c        **** }
 111:main.c        ****  
 112:main.c        **** //Interrupt service routines for dcmotor function
 113:main.c        **** CY_ISR(Encoder_Counts_1_IH){
  88              		.loc 1 113 0
  89              		.cfi_startproc
  90              		@ args = 0, pretend = 0, frame = 0
  91              		@ frame_needed = 0, uses_anonymous_args = 0
  92 0000 08B5     		push	{r3, lr}
  93              		.cfi_def_cfa_offset 8
  94              		.cfi_offset 3, -8
  95              		.cfi_offset 14, -4
 114:main.c        ****     stopMotor1AndUpdate();
  96              		.loc 1 114 0
  97 0002 FFF7FEFF 		bl	stopMotor1AndUpdate
  98              	.LVL2:
  99 0006 08BD     		pop	{r3, pc}
 100              		.cfi_endproc
 101              	.LFE66:
 102              		.size	Encoder_Counts_1_IH, .-Encoder_Counts_1_IH
 103              		.section	.text.Encoder_Counts_2_IH,"ax",%progbits
 104              		.align	2
 105              		.global	Encoder_Counts_2_IH
 106              		.thumb
 107              		.thumb_func
 108              		.type	Encoder_Counts_2_IH, %function
 109              	Encoder_Counts_2_IH:
 110              	.LFB67:
 115:main.c        **** }
 116:main.c        **** 
 117:main.c        **** CY_ISR(Encoder_Counts_2_IH){
 111              		.loc 1 117 0
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cc3J0lph.s 			page 5


 112              		.cfi_startproc
 113              		@ args = 0, pretend = 0, frame = 0
 114              		@ frame_needed = 0, uses_anonymous_args = 0
 115 0000 08B5     		push	{r3, lr}
 116              		.cfi_def_cfa_offset 8
 117              		.cfi_offset 3, -8
 118              		.cfi_offset 14, -4
 118:main.c        ****     stopMotor2AndUpdate();
 119              		.loc 1 118 0
 120 0002 FFF7FEFF 		bl	stopMotor2AndUpdate
 121              	.LVL3:
 122 0006 08BD     		pop	{r3, pc}
 123              		.cfi_endproc
 124              	.LFE67:
 125              		.size	Encoder_Counts_2_IH, .-Encoder_Counts_2_IH
 126              		.section	.text.Drift_Check_IH,"ax",%progbits
 127              		.align	2
 128              		.global	Drift_Check_IH
 129              		.thumb
 130              		.thumb_func
 131              		.type	Drift_Check_IH, %function
 132              	Drift_Check_IH:
 133              	.LFB68:
 119:main.c        **** }
 120:main.c        **** 
 121:main.c        **** CY_ISR(Drift_Check_IH){    
 134              		.loc 1 121 0
 135              		.cfi_startproc
 136              		@ args = 0, pretend = 0, frame = 0
 137              		@ frame_needed = 0, uses_anonymous_args = 0
 138 0000 08B5     		push	{r3, lr}
 139              		.cfi_def_cfa_offset 8
 140              		.cfi_offset 3, -8
 141              		.cfi_offset 14, -4
 122:main.c        ****     Drift_Check_Timer_ReadStatusRegister(); //Clears the interrupt
 142              		.loc 1 122 0
 143 0002 FFF7FEFF 		bl	Drift_Check_Timer_ReadStatusRegister
 144              	.LVL4:
 123:main.c        ****     Drift_Check_Timer_Stop(); //Stops the timer
 145              		.loc 1 123 0
 146 0006 FFF7FEFF 		bl	Drift_Check_Timer_Stop
 147              	.LVL5:
 124:main.c        ****     motor1EncoderCounts = Motor_1_Encoder_Counts_ReadCounter();
 148              		.loc 1 124 0
 149 000a FFF7FEFF 		bl	Motor_1_Encoder_Counts_ReadCounter
 150              	.LVL6:
 151 000e 044B     		ldr	r3, .L13
 152 0010 1860     		str	r0, [r3]
 125:main.c        ****     motor2EncoderCounts = Motor_2_Encoder_Counts_ReadCounter();
 153              		.loc 1 125 0
 154 0012 FFF7FEFF 		bl	Motor_2_Encoder_Counts_ReadCounter
 155              	.LVL7:
 156 0016 034B     		ldr	r3, .L13+4
 157 0018 1860     		str	r0, [r3]
 126:main.c        ****     driftCorrect(); //Does checking
 158              		.loc 1 126 0
 159 001a FFF7FEFF 		bl	driftCorrect
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cc3J0lph.s 			page 6


 160              	.LVL8:
 161 001e 08BD     		pop	{r3, pc}
 162              	.L14:
 163              		.align	2
 164              	.L13:
 165 0020 00000000 		.word	motor1EncoderCounts
 166 0024 00000000 		.word	motor2EncoderCounts
 167              		.cfi_endproc
 168              	.LFE68:
 169              		.size	Drift_Check_IH, .-Drift_Check_IH
 170              		.section	.text.main,"ax",%progbits
 171              		.align	2
 172              		.global	main
 173              		.thumb
 174              		.thumb_func
 175              		.type	main, %function
 176              	main:
 177              	.LFB69:
 127:main.c        **** }
 128:main.c        **** 
 129:main.c        **** 
 130:main.c        **** int main(void)
 131:main.c        **** {
 178              		.loc 1 131 0
 179              		.cfi_startproc
 180              		@ args = 0, pretend = 0, frame = 0
 181              		@ frame_needed = 0, uses_anonymous_args = 0
 182 0000 38B5     		push	{r3, r4, r5, lr}
 183              		.cfi_def_cfa_offset 16
 184              		.cfi_offset 3, -16
 185              		.cfi_offset 4, -12
 186              		.cfi_offset 5, -8
 187              		.cfi_offset 14, -4
 132:main.c        ****     CyGlobalIntEnable; /* Enable global interrupts. */
 188              		.loc 1 132 0
 189              		.syntax unified
 190              	@ 132 "main.c" 1
 191 0002 62B6     		CPSIE   i
 192              	@ 0 "" 2
 133:main.c        **** 
 134:main.c        ****     
 135:main.c        ****     TIA_1_Start();
 193              		.loc 1 135 0
 194              		.thumb
 195              		.syntax unified
 196 0004 FFF7FEFF 		bl	TIA_1_Start
 197              	.LVL9:
 136:main.c        ****     UART_1_Start();
 198              		.loc 1 136 0
 199 0008 FFF7FEFF 		bl	UART_1_Start
 200              	.LVL10:
 137:main.c        ****     UART_1_PutString("UART commencing... \n");
 201              		.loc 1 137 0
 202 000c 3648     		ldr	r0, .L19
 203 000e FFF7FEFF 		bl	UART_1_PutString
 204              	.LVL11:
 138:main.c        ****     ADC_Start();
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cc3J0lph.s 			page 7


 205              		.loc 1 138 0
 206 0012 FFF7FEFF 		bl	ADC_Start
 207              	.LVL12:
 139:main.c        ****     IDAC8_1_Start();
 208              		.loc 1 139 0
 209 0016 FFF7FEFF 		bl	IDAC8_1_Start
 210              	.LVL13:
 140:main.c        ****     
 141:main.c        ****     // DEBUGGING:
 142:main.c        ****     int colour_calibration = FALSE;             // Do we want to calibrate the sensor? 
 143:main.c        ****     int servo_testing = FALSE;                  // Do the servos need to be tested?      
 144:main.c        ****     
 145:main.c        ****     // IDAC initialisation: 
 146:main.c        ****     IDAC8_1_SetRange(IDAC8_1_RANGE_32uA);       // Sets the range between 0 and 32uA
 211              		.loc 1 146 0
 212 001a 0020     		movs	r0, #0
 213 001c FFF7FEFF 		bl	IDAC8_1_SetRange
 214              	.LVL14:
 147:main.c        ****     IDAC8_1_SetValue(idac_value);               // set a value between 0 and 255
 215              		.loc 1 147 0
 216 0020 324D     		ldr	r5, .L19+4
 217 0022 2879     		ldrb	r0, [r5, #4]	@ zero_extendqisi2
 218 0024 FFF7FEFF 		bl	IDAC8_1_SetValue
 219              	.LVL15:
 148:main.c        ****     
 149:main.c        ****     // Colour Sensing Initialisation & Debugging:
 150:main.c        ****     colour_sensing_algorithm = 0;
 220              		.loc 1 150 0
 221 0028 0024     		movs	r4, #0
 222 002a AC60     		str	r4, [r5, #8]
 151:main.c        ****     control_photodiode_Write(colour_sensing_algorithm);            // controls which photodiode is 
 223              		.loc 1 151 0
 224 002c 2046     		mov	r0, r4
 225 002e FFF7FEFF 		bl	control_photodiode_Write
 226              	.LVL16:
 152:main.c        ****                                                 // 0: wall
 153:main.c        ****                                                 // 1: claw
 154:main.c        ****     control_led_Write(1);   CyDelay(500);  // Ensures all the RGBs are working
 227              		.loc 1 154 0
 228 0032 0120     		movs	r0, #1
 229 0034 FFF7FEFF 		bl	control_led_Write
 230              	.LVL17:
 231 0038 4FF4FA70 		mov	r0, #500
 232 003c FFF7FEFF 		bl	CyDelay
 233              	.LVL18:
 155:main.c        ****     control_led_Write(2);   CyDelay(500);
 234              		.loc 1 155 0
 235 0040 0220     		movs	r0, #2
 236 0042 FFF7FEFF 		bl	control_led_Write
 237              	.LVL19:
 238 0046 4FF4FA70 		mov	r0, #500
 239 004a FFF7FEFF 		bl	CyDelay
 240              	.LVL20:
 156:main.c        ****     control_led_Write(3);   CyDelay(500);
 241              		.loc 1 156 0
 242 004e 0320     		movs	r0, #3
 243 0050 FFF7FEFF 		bl	control_led_Write
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cc3J0lph.s 			page 8


 244              	.LVL21:
 245 0054 4FF4FA70 		mov	r0, #500
 246 0058 FFF7FEFF 		bl	CyDelay
 247              	.LVL22:
 157:main.c        ****     control_led_Write(0);   CyDelay(500);
 248              		.loc 1 157 0
 249 005c 2046     		mov	r0, r4
 250 005e FFF7FEFF 		bl	control_led_Write
 251              	.LVL23:
 252 0062 4FF4FA70 		mov	r0, #500
 253 0066 FFF7FEFF 		bl	CyDelay
 254              	.LVL24:
 158:main.c        ****     ColourSensingInitialise();                  // Initialises the colour sensor
 255              		.loc 1 158 0
 256 006a FFF7FEFF 		bl	ColourSensingInitialise
 257              	.LVL25:
 159:main.c        ****     
 160:main.c        **** 
 161:main.c        ****     //Servos for the arm instatination
 162:main.c        ****     Rack_Servo_PWM_Start();
 258              		.loc 1 162 0
 259 006e FFF7FEFF 		bl	Rack_Servo_PWM_Start
 260              	.LVL26:
 163:main.c        ****     Rack_Servo_PWM_WriteCompare(1000);          // BRINGs rack to highest position, so not to mess 
 261              		.loc 1 163 0
 262 0072 4FF47A70 		mov	r0, #1000
 263 0076 FFF7FEFF 		bl	Rack_Servo_PWM_WriteCompare
 264              	.LVL27:
 164:main.c        ****     CyDelay(500);
 265              		.loc 1 164 0
 266 007a 4FF4FA70 		mov	r0, #500
 267 007e FFF7FEFF 		bl	CyDelay
 268              	.LVL28:
 165:main.c        ****     Rack_Servo_PWM_Sleep();
 269              		.loc 1 165 0
 270 0082 FFF7FEFF 		bl	Rack_Servo_PWM_Sleep
 271              	.LVL29:
 166:main.c        ****     
 167:main.c        ****     Gripper_Servo_PWM_Start();
 272              		.loc 1 167 0
 273 0086 FFF7FEFF 		bl	Gripper_Servo_PWM_Start
 274              	.LVL30:
 168:main.c        ****     Gripper_Servo_PWM_WriteCompare(1120);       //This is the open gripper position
 275              		.loc 1 168 0
 276 008a 4FF48C60 		mov	r0, #1120
 277 008e FFF7FEFF 		bl	Gripper_Servo_PWM_WriteCompare
 278              	.LVL31:
 169:main.c        ****     CyDelay(500);
 279              		.loc 1 169 0
 280 0092 4FF4FA70 		mov	r0, #500
 281 0096 FFF7FEFF 		bl	CyDelay
 282              	.LVL32:
 170:main.c        ****     Gripper_Servo_PWM_Sleep();
 283              		.loc 1 170 0
 284 009a FFF7FEFF 		bl	Gripper_Servo_PWM_Sleep
 285              	.LVL33:
 171:main.c        ****     
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cc3J0lph.s 			page 9


 172:main.c        ****     // Ultrasonic Initialisation: 
 173:main.c        ****     
 174:main.c        ****         
 175:main.c        ****     // Timer and ISR instantiation
 176:main.c        ****     Timer_1_Start();
 286              		.loc 1 176 0
 287 009e FFF7FEFF 		bl	Timer_1_Start
 288              	.LVL34:
 177:main.c        ****     Timer_1_ReadStatusRegister();
 289              		.loc 1 177 0
 290 00a2 FFF7FEFF 		bl	Timer_1_ReadStatusRegister
 291              	.LVL35:
 178:main.c        ****     Sonic_StartEx(TIH);
 292              		.loc 1 178 0
 293 00a6 1248     		ldr	r0, .L19+8
 294 00a8 FFF7FEFF 		bl	Sonic_StartEx
 295              	.LVL36:
 179:main.c        ****     Start_StartEx(StartIH);
 296              		.loc 1 179 0
 297 00ac 1148     		ldr	r0, .L19+12
 298 00ae FFF7FEFF 		bl	Start_StartEx
 299              	.LVL37:
 180:main.c        ****     beginNavigation = 0;
 300              		.loc 1 180 0
 301 00b2 2C60     		str	r4, [r5]
 181:main.c        ****     
 182:main.c        ****     //Initialising DC motors
 183:main.c        ****     Motor_1_driver_Start();
 302              		.loc 1 183 0
 303 00b4 FFF7FEFF 		bl	Motor_1_driver_Start
 304              	.LVL38:
 184:main.c        ****     Motor_2_driver_Start();
 305              		.loc 1 184 0
 306 00b8 FFF7FEFF 		bl	Motor_2_driver_Start
 307              	.LVL39:
 185:main.c        ****     motorDutyCycleUpdate(0,0,0,0);//Have the motors stand still
 308              		.loc 1 185 0
 309 00bc 0020     		movs	r0, #0
 310 00be 0346     		mov	r3, r0
 311 00c0 0246     		mov	r2, r0
 312 00c2 0146     		mov	r1, r0
 313 00c4 FFF7FEFF 		bl	motorDutyCycleUpdate
 314              	.LVL40:
 186:main.c        ****     
 187:main.c        ****     //Initialising counters
 188:main.c        ****     Motor_1_Encoder_Counts_Start();
 315              		.loc 1 188 0
 316 00c8 FFF7FEFF 		bl	Motor_1_Encoder_Counts_Start
 317              	.LVL41:
 189:main.c        ****     Motor_2_Encoder_Counts_Start();
 318              		.loc 1 189 0
 319 00cc FFF7FEFF 		bl	Motor_2_Encoder_Counts_Start
 320              	.LVL42:
 190:main.c        ****     
 191:main.c        ****     //Initialising timers
 192:main.c        ****     Drift_Check_Timer_Start();
 321              		.loc 1 192 0
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cc3J0lph.s 			page 10


 322 00d0 FFF7FEFF 		bl	Drift_Check_Timer_Start
 323              	.LVL43:
 193:main.c        ****     
 194:main.c        ****     //Starts and enables the interrupts for the motor encoder counts
 195:main.c        ****     Encoder_Counts_1_Interrupt_StartEx(Encoder_Counts_1_IH); 
 324              		.loc 1 195 0
 325 00d4 0848     		ldr	r0, .L19+16
 326 00d6 FFF7FEFF 		bl	Encoder_Counts_1_Interrupt_StartEx
 327              	.LVL44:
 196:main.c        ****     Encoder_Counts_2_Interrupt_StartEx(Encoder_Counts_2_IH);
 328              		.loc 1 196 0
 329 00da 0848     		ldr	r0, .L19+20
 330 00dc FFF7FEFF 		bl	Encoder_Counts_2_Interrupt_StartEx
 331              	.LVL45:
 197:main.c        ****     Drift_Check_Interrupt_StartEx(Drift_Check_IH);		
 332              		.loc 1 197 0
 333 00e0 0748     		ldr	r0, .L19+24
 334 00e2 FFF7FEFF 		bl	Drift_Check_Interrupt_StartEx
 335              	.LVL46:
 336              	.L17:
 337 00e6 FEE7     		b	.L17
 338              	.L20:
 339              		.align	2
 340              	.L19:
 341 00e8 00000000 		.word	.LC0
 342 00ec 00000000 		.word	.LANCHOR0
 343 00f0 00000000 		.word	TIH
 344 00f4 00000000 		.word	StartIH
 345 00f8 00000000 		.word	Encoder_Counts_1_IH
 346 00fc 00000000 		.word	Encoder_Counts_2_IH
 347 0100 00000000 		.word	Drift_Check_IH
 348              		.cfi_endproc
 349              	.LFE69:
 350              		.size	main, .-main
 351              		.section	.text.armMoving,"ax",%progbits
 352              		.align	2
 353              		.global	armMoving
 354              		.thumb
 355              		.thumb_func
 356              		.type	armMoving, %function
 357              	armMoving:
 358              	.LFB70:
 198:main.c        **** 
 199:main.c        ****     // Main Loop for States
 200:main.c        ****         
 201:main.c        ****     for(;;)
 202:main.c        ****     {   
 203:main.c        ****         // Start button is pressed so quit sensing
 204:main.c        **** 
 205:main.c        ****         /*
 206:main.c        ****         while (beginNavigation == 0) {
 207:main.c        ****             distanceCheck();           
 208:main.c        ****             UART_1_PutString("\n");
 209:main.c        ****             CyDelay(1000); // Check distance once a second.
 210:main.c        ****                 
 211:main.c        ****         }
 212:main.c        ****         */
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cc3J0lph.s 			page 11


 213:main.c        **** 
 214:main.c        **** 
 215:main.c        ****         
 216:main.c        **** 
 217:main.c        ****         if (state == STATE_SCAN_PLAN) {              // colour sensing, while switch has not been p
 218:main.c        ****             
 219:main.c        ****             // Colour Calibration: 
 220:main.c        ****             if (colour_calibration)
 221:main.c        ****             {
 222:main.c        ****                 int lock = FALSE;
 223:main.c        ****                 do 
 224:main.c        ****                     {   
 225:main.c        ****                         if (lock == FALSE) 
 226:main.c        ****                         {
 227:main.c        ****                             
 228:main.c        ****                             changeHeightToPuck(1);
 229:main.c        **** 
 230:main.c        ****                             UART_1_PutString("Count \t BLANK \t RED \t GREEN \t BLUE \t \n");
 231:main.c        ****                             for (int i = 0; i < 50; i++)
 232:main.c        ****                             {
 233:main.c        ****                             sprintf(output, "%d \t", i);
 234:main.c        ****                             UART_1_PutString(output);
 235:main.c        ****                             ColourSensingCalibration(); 
 236:main.c        ****                             UART_1_PutString("\n");
 237:main.c        ****                             }         
 238:main.c        ****                             lock = TRUE;    
 239:main.c        ****                         }
 240:main.c        ****                 } while (lock == TRUE);    
 241:main.c        ****             }
 242:main.c        ****             
 243:main.c        ****             // Servo Testing:
 244:main.c        ****             if (servo_testing) 
 245:main.c        ****             {
 246:main.c        ****                 int lock = FALSE;
 247:main.c        ****                 do 
 248:main.c        ****                     {   
 249:main.c        ****                         if (lock == FALSE) 
 250:main.c        ****                         {
 251:main.c        ****                             UART_1_PutString("Servo Testing: ");
 252:main.c        ****                             
 253:main.c        ****                             armMoving();
 254:main.c        ****                             
 255:main.c        ****                             
 256:main.c        ****                             for(int i = 0; i < 4; i++)
 257:main.c        ****                             {
 258:main.c        ****                                 changeHeightToPuck(i);
 259:main.c        ****                                 CyDelay(1000);
 260:main.c        ****                             }
 261:main.c        **** 
 262:main.c        ****                             lock = TRUE;    
 263:main.c        ****                         }
 264:main.c        ****                 } while (lock == TRUE);    
 265:main.c        ****             }    
 266:main.c        ****                 
 267:main.c        ****                 
 268:main.c        ****             }
 269:main.c        ****             
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cc3J0lph.s 			page 12


 270:main.c        **** 
 271:main.c        ****             
 272:main.c        ****             /*
 273:main.c        ****             if (!moving){
 274:main.c        ****                 moving = 1;
 275:main.c        ****             if (initialisation){moveBackwardIndefinitely(); initialisation = 0;}
 276:main.c        ****             else {moveForwardIndefinitely();}        
 277:main.c        ****            
 278:main.c        ****             
 279:main.c        ****             moveAndAngle(SCAN_INITIALISE_HORIZONTAL,PLAN_SCAN_VERTICAL,WEST_ANGLE); // Move beyond 
 280:main.c        ****             
 281:main.c        ****             // Read the black wall
 282:main.c        ****             
 283:main.c        ****             for (currentPuckRackScanningIndex = 0; currentPuckRackScanningIndex <= 4; currentPuckRa
 284:main.c        ****                 moveAndAngle(puckRackOffsetsFromWest[currentPuckRackScanningIndex],PLAN_SCAN_VERTIC
 285:main.c        ****                 puckRackColours[currentPuckRackScanningIndex] = colourSensingOutput();
 286:main.c        ****             }
 287:main.c        **** 
 288:main.c        ****             
 289:main.c        ****             
 290:main.c        ****             int puckConstructionPlanIndex = 0; // Will be used to iterate through the 3 puck colour
 291:main.c        ****             
 292:main.c        ****             // Iterate over all 5 rack slots and place the 3 colours into puckConstructionPlan.
 293:main.c        ****             for (int puckRackIndex = 0; puckRackIndex < 5; puckRackIndex++){
 294:main.c        ****                 if (puckRackColours[puckRackIndex] != BLANK && puckConstructionPlanIndex != 3){
 295:main.c        ****                     puckConstructionPlan[puckConstructionPlanIndex] = puckRackColours[puckRackIndex
 296:main.c        ****                     puckConstructionPlanIndex++;
 297:main.c        ****                 }
 298:main.c        ****             }
 299:main.c        ****             
 300:main.c        **** 
 301:main.c        ****             */
 302:main.c        ****         }
 303:main.c        ****         
 304:main.c        ****         
 305:main.c        **** 
 306:main.c        ****     	if (state == STATE_LOCATE_BLOCK_AND_PUCKS){
 307:main.c        ****             
 308:main.c        ****             // Finding where the boundaries of the block are
 309:main.c        ****     		// Sweep across WEST to EAST until discrepancy
 310:main.c        ****             // But first sense the construction plan and then drive to wall and turn around to prep
 311:main.c        ****             
 312:main.c        ****             /*
 313:main.c        ****     		moveForwardIndefinitely();
 314:main.c        ****     		turnRight(180); // Now facing EAST wall
 315:main.c        ****     		moveForwardIndefinitely(); // Do this until we get to EAST wall
 316:main.c        ****             */
 317:main.c        ****             
 318:main.c        ****             moveAndAngle(20,20,EAST_ANGLE); // Move to a position near construction base in an EAST
 319:main.c        ****             moveForwardIndefinitely(); // Scan until we reach EAST wall.
 320:main.c        ****             
 321:main.c        ****             // Will now know the boundaries of the block.
 322:main.c        ****             // Figure out direction we want to travel
 323:main.c        ****             
 324:main.c        **** 
 325:main.c        ****             pathPastBlock = (block_edge_location[WEST] >= WIDTH_SENSOR_TO_SENSOR + SAFETY_MARGIN ? 
 326:main.c        ****             pathToPucks = (puckPileLocation < ARENA_WIDTH / 2 ? WEST:EAST);
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cc3J0lph.s 			page 13


 327:main.c        ****             
 328:main.c        ****             state = STATE_GO_TO_PUCKS;
 329:main.c        **** 	    }
 330:main.c        ****         
 331:main.c        ****         
 332:main.c        **** 
 333:main.c        ****         if (state == STATE_GO_TO_PUCKS){
 334:main.c        ****             if (pathPastBlock == WEST){
 335:main.c        ****                 if (pathToPucks != WEST) {
 336:main.c        ****                     moveAndAngle(SAFETY_MARGIN / 2 + WIDTH_SENSOR_TO_SENSOR / 2, ARENA_LENGTH - FRO
 337:main.c        ****                 }
 338:main.c        ****                 else {moveAndAngle(SAFETY_MARGIN / 2 + WIDTH_SENSOR_TO_SENSOR / 2, ARENA_LENGTH - F
 339:main.c        ****             }
 340:main.c        ****             else {
 341:main.c        ****                 if (pathToPucks != EAST) {
 342:main.c        ****                     moveAndAngle(ARENA_WIDTH - SAFETY_MARGIN / 2 - WIDTH_SENSOR_TO_SENSOR / 2, AREN
 343:main.c        ****                 }
 344:main.c        ****                 else {moveAndAngle(ARENA_WIDTH - SAFETY_MARGIN / 2 - WIDTH_SENSOR_TO_SENSOR / 2, AR
 345:main.c        ****             }
 346:main.c        ****             
 347:main.c        ****             // Now depending on if the pucks are in the corner or not, 
 348:main.c        ****             
 349:main.c        ****             // We are now in front of the pucks
 350:main.c        ****             state = STATE_FIND_REQUIRED_PUCK;
 351:main.c        ****         }
 352:main.c        ****         
 353:main.c        ****         
 354:main.c        ****         
 355:main.c        ****         if (state == STATE_FIND_REQUIRED_PUCK){
 356:main.c        ****             int requiredColour = puckConstructionPlan[currentPuckStackSize];
 357:main.c        ****             int puckFound = 0;
 358:main.c        ****             
 359:main.c        ****             
 360:main.c        ****             // Let's assume that we get to the east or west of the puck pile and we are as close to
 361:main.c        ****             if (roundDirection() == NORTH){
 362:main.c        **** 
 363:main.c        ****             }
 364:main.c        ****             else if (roundDirection() == EAST){
 365:main.c        ****                 // Poll ultrasonics, displaceRight until no longer see the pucks
 366:main.c        ****                 // Drive up to the middle puck
 367:main.c        ****                 // We know that we used moveAndAngle() to get to the exact vertical position of the
 368:main.c        ****                 moveForwardIndefinitely();
 369:main.c        ****                 
 370:main.c        ****                 // May need to displaceRight a bit to ensure that we are perfectly centered with th
 371:main.c        ****                 // Now we need to inch forward with the claw lifted
 372:main.c        ****                 // Also store the horizontal location of the pucks based off our current position. 
 373:main.c        ****                 
 374:main.c        ****                 horizontalPuckGrid = currentPosition[0]; // Take our horizontal position as a refer
 375:main.c        ****                 
 376:main.c        ****                 changeHeightToPuck(1); // Lift up enough so we dont hit the pucks when scanning the
 377:main.c        ****                 moveForward(DISTANCE_STOPPED_FROM_PUCK); // Move forward until colour sensor above 
 378:main.c        ****                
 379:main.c        ****                 if (colourSensingOutput() == puckConstructionPlan[currentPuckStackSize]){ 
 380:main.c        ****                     // This is the puck we need
 381:main.c        ****                     moveBackward(DISTANCE_STOPPED_FROM_PUCK); // Reverse to make room for lowering 
 382:main.c        ****                     lowerAndOpen(0); // We are grabbing the pucks from the ground.
 383:main.c        ****                     moveForward(DISTANCE_STOPPED_FROM_PUCK);
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cc3J0lph.s 			page 14


 384:main.c        ****                     closeAndRaise(1); // Lift above the height of the ground pucks
 385:main.c        **** 
 386:main.c        ****                 }
 387:main.c        ****                 
 388:main.c        ****                 // If the colour isn't what we need, we could pick it up and drop it somewhere out 
 389:main.c        ****                 else {
 390:main.c        ****                     moveBackward(DISTANCE_STOPPED_FROM_PUCK); // Need to check the next puck
 391:main.c        ****                     displaceLeft(5,22);
 392:main.c        ****                     changeHeightToPuck(1); // Lift up enough so we dont hit the pucks when scanning
 393:main.c        ****                     moveForward(DISTANCE_STOPPED_FROM_PUCK); // Move forward until colour sensor ab
 394:main.c        ****                     
 395:main.c        ****                     // Scan the next puck
 396:main.c        ****                     if (colourSensingOutput() == puckConstructionPlan[currentPuckStackSize]){ 
 397:main.c        ****                         // This is the puck we need
 398:main.c        ****                         moveBackward(DISTANCE_STOPPED_FROM_PUCK); // Reverse to make room for lower
 399:main.c        ****                         lowerAndOpen(0); // We are grabbing the pucks from the ground.
 400:main.c        ****                         moveForward(DISTANCE_STOPPED_FROM_PUCK);
 401:main.c        ****                         closeAndRaise(1); // Lift above the height of the ground pucks
 402:main.c        **** 
 403:main.c        ****                     }
 404:main.c        ****                     
 405:main.c        ****                     else {
 406:main.c        ****                         moveBackward(DISTANCE_STOPPED_FROM_PUCK); // Need to check the next puck
 407:main.c        ****                         displaceLeft(5,22);
 408:main.c        ****                         changeHeightToPuck(1); // Lift up enough so we dont hit the pucks when scan
 409:main.c        ****                         moveForward(DISTANCE_STOPPED_FROM_PUCK); // Move forward until colour senso
 410:main.c        ****                         
 411:main.c        ****                         if (colourSensingOutput() == puckConstructionPlan[currentPuckStackSize]){ 
 412:main.c        ****                             // This is the puck we need
 413:main.c        ****                             moveBackward(DISTANCE_STOPPED_FROM_PUCK); // Reverse to make room for l
 414:main.c        ****                             lowerAndOpen(0); // We are grabbing the pucks from the ground.
 415:main.c        ****                             moveForward(DISTANCE_STOPPED_FROM_PUCK);
 416:main.c        ****                             closeAndRaise(1); // Lift above the height of the ground pucks
 417:main.c        **** 
 418:main.c        ****                         }
 419:main.c        ****                     
 420:main.c        ****                     }
 421:main.c        ****                 }
 422:main.c        ****                 
 423:main.c        ****                 if (colourSensingOutput() == puckConstructionPlan[currentPuckStackSize]){ 
 424:main.c        ****                     // This is the puck we need
 425:main.c        ****                     moveBackward(DISTANCE_STOPPED_FROM_PUCK); // Reverse to make room for lowering 
 426:main.c        ****                     lowerAndOpen(0); // We are grabbing the pucks from the ground.
 427:main.c        ****                     moveForward(DISTANCE_STOPPED_FROM_PUCK);
 428:main.c        ****                     closeAndRaise(1); // Lift above the height of the ground pucks
 429:main.c        **** 
 430:main.c        ****                 }
 431:main.c        ****                 
 432:main.c        ****             }
 433:main.c        ****             
 434:main.c        ****             else if (roundDirection() == WEST){
 435:main.c        ****                 // Poll ultrasonics, displaceRight until no longer see the pucks
 436:main.c        ****                 // Drive up to the middle puck
 437:main.c        ****                 // We know that we used moveAndAngle() to get to the exact vertical position of the
 438:main.c        ****                 moveForwardIndefinitely();
 439:main.c        ****             }
 440:main.c        ****             
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cc3J0lph.s 			page 15


 441:main.c        ****             /*
 442:main.c        ****             while(!puckFound){
 443:main.c        ****                   
 444:main.c        ****             }
 445:main.c        ****             */
 446:main.c        ****         }
 447:main.c        ****         
 448:main.c        ****         if (state == STATE_DEPOSIT_PUCK){
 449:main.c        **** 
 450:main.c        ****             moveAndAngle(CONSTRUCTION_MIDPOINT,CONSTRUCTION_DISTANCE_FROM_WALL + 10, SOUTH_ANGLE); 
 451:main.c        ****             lowerAndOpen(currentPuckStackSize);
 452:main.c        ****             moveAndAngle(CONSTRUCTION_MIDPOINT,CONSTRUCTION_DISTANCE_FROM_WALL, SOUTH_ANGLE); // Ta
 453:main.c        ****             changeHeightToPuck(currentPuckStackSize + 1); // Lift claw above stack to avoid hitting
 454:main.c        ****             moveAndAngle(CONSTRUCTION_MIDPOINT,CONSTRUCTION_DISTANCE_FROM_WALL, SOUTH_ANGLE); // Ta
 455:main.c        **** 
 456:main.c        ****             
 457:main.c        ****             lowerAndOpen(current_stage);
 458:main.c        ****             changeHeightToPuck(current_stage + 1); // Lift claw above stack to avoid hitting the st
 459:main.c        ****             
 460:main.c        ****             current_stage++;
 461:main.c        ****             
 462:main.c        ****             if (current_stage == 3){state = STATE_PARK_HOME;}        // Returns to home 
 463:main.c        ****             
 464:main.c        ****         }
 465:main.c        ****         
 466:main.c        ****         if (state == STATE_PARK_HOME){
 467:main.c        ****             moveAndAngle(HOME_MIDPOINT, HOME_PARKING_DISTANCE, NORTH_ANGLE); // Should reverse into
 468:main.c        ****             
 469:main.c        ****             // Run code to stop robot entirely.
 470:main.c        ****         }
 471:main.c        ****         
 472:main.c        ****         
 473:main.c        **** }
 474:main.c        **** 
 475:main.c        **** void armMoving(void){
 359              		.loc 1 475 0
 360              		.cfi_startproc
 361              		@ args = 0, pretend = 0, frame = 0
 362              		@ frame_needed = 0, uses_anonymous_args = 0
 363 0000 38B5     		push	{r3, r4, r5, lr}
 364              		.cfi_def_cfa_offset 16
 365              		.cfi_offset 3, -16
 366              		.cfi_offset 4, -12
 367              		.cfi_offset 5, -8
 368              		.cfi_offset 14, -4
 369              	.LVL47:
 476:main.c        ****     
 477:main.c        ****     int puck_correct = FALSE;   // A flag to determine if the correct puck has been picked up
 478:main.c        ****     int puck_scan;
 479:main.c        ****     
 480:main.c        ****     puckRackColours[1] = RED;
 370              		.loc 1 480 0
 371 0002 0122     		movs	r2, #1
 372 0004 0D4B     		ldr	r3, .L27
 373 0006 1A61     		str	r2, [r3, #16]
 481:main.c        ****     
 482:main.c        **** // States
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cc3J0lph.s 			page 16


 483:main.c        ****     // moving
 484:main.c        ****     changeHeightToPuck(3);  // Arm has to be lifted to highest position
 374              		.loc 1 484 0
 375 0008 0320     		movs	r0, #3
 376 000a FFF7FEFF 		bl	changeHeightToPuck
 377              	.LVL48:
 477:main.c        ****     int puck_scan;
 378              		.loc 1 477 0
 379 000e 0025     		movs	r5, #0
 485:main.c        ****         // THIS WILL be ensured by always returning the claw to the highest position after completi
 486:main.c        ****         
 487:main.c        ****     // Scanning puck:
 488:main.c        ****     while (puck_correct == FALSE) 
 380              		.loc 1 488 0
 381 0010 11E0     		b	.L22
 382              	.LVL49:
 383              	.L24:
 489:main.c        ****     {
 490:main.c        ****                                 // robot moves forward towards puck
 491:main.c        ****         changeHeightToPuck(1);  // arm lowers onto robot
 384              		.loc 1 491 0
 385 0012 0120     		movs	r0, #1
 386 0014 FFF7FEFF 		bl	changeHeightToPuck
 387              	.LVL50:
 492:main.c        ****         puck_scan = colourSensingOutput();  // colour sensor takes a scan
 388              		.loc 1 492 0
 389 0018 FFF7FEFF 		bl	colourSensingOutput
 390              	.LVL51:
 391 001c 0446     		mov	r4, r0
 392              	.LVL52:
 493:main.c        ****         changeHeightToPuck(3);  // arm returns to high position
 393              		.loc 1 493 0
 394 001e 0320     		movs	r0, #3
 395              	.LVL53:
 396 0020 FFF7FEFF 		bl	changeHeightToPuck
 397              	.LVL54:
 494:main.c        ****                                 // robot moves backwards
 495:main.c        ****         if (puck_scan == puckConstructionPlan[current_stage]) {puck_correct = TRUE;}
 398              		.loc 1 495 0
 399 0024 064B     		ldr	r3, .L27+4
 400 0026 9A68     		ldr	r2, [r3, #8]
 401 0028 044B     		ldr	r3, .L27
 402 002a 03EB8203 		add	r3, r3, r2, lsl #2
 403 002e 1B6A     		ldr	r3, [r3, #32]
 404 0030 9C42     		cmp	r4, r3
 405 0032 00D1     		bne	.L22
 406 0034 0125     		movs	r5, #1
 407              	.LVL55:
 408              	.L22:
 488:main.c        ****     {
 409              		.loc 1 488 0
 410 0036 002D     		cmp	r5, #0
 411 0038 EBD0     		beq	.L24
 496:main.c        ****                                 // if colour == true:
 497:main.c        ****                                     // enter picking up puck from 
 498:main.c        ****         else 
 499:main.c        ****         {
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cc3J0lph.s 			page 17


 500:main.c        ****                                 // if colour == false
 501:main.c        ****                                     // robot translates to side to see next puck, and performs scan
 502:main.c        ****         }
 503:main.c        ****     }
 504:main.c        ****     
 505:main.c        ****     /*
 506:main.c        ****     
 507:main.c        ****     // Picking Up puck from pile:
 508:main.c        ****     changeHeightToPuck(0);      // arm lowers to ground
 509:main.c        ****                                 // robot moves forward
 510:main.c        ****     armClose();                 // claw closes on puck
 511:main.c        ****     changeHeightToPuck(3);      // arm lifts up to highest position
 512:main.c        ****                                 // robot moves back away from puck area   
 513:main.c        ****       
 514:main.c        ****     
 515:main.c        ****     // Deposition puck in construction zone:
 516:main.c        ****                                 // arm will be in highest position from moving
 517:main.c        ****         changeHeightToPuck(current_stage-1);    // arm moves to position of stacking pucks         
 518:main.c        ****                                                 // stage 1st = ground/0
 519:main.c        ****                                                 // stage 2nd = 1
 520:main.c        ****                                                 // stage 3rd = 2
 521:main.c        ****         armOpen();              // gripper releases puck
 522:main.c        ****         changeHeightToPuck(3);  // arm moves back to highest position availabe
 523:main.c        ****                                 // robot moves away 
 524:main.c        ****     */
 525:main.c        ****     
 526:main.c        **** }
 412              		.loc 1 526 0
 413 003a 38BD     		pop	{r3, r4, r5, pc}
 414              	.LVL56:
 415              	.L28:
 416              		.align	2
 417              	.L27:
 418 003c 00000000 		.word	.LANCHOR0
 419 0040 00000000 		.word	.LANCHOR1
 420              		.cfi_endproc
 421              	.LFE70:
 422              		.size	armMoving, .-armMoving
 423              		.global	current_stage
 424              		.global	PLAN_SCAN_VERTICAL
 425              		.global	moving
 426              		.global	colour_sensing_algorithm
 427              		.global	colour_flag
 428              		.global	idac_value
 429              		.comm	moveBackwardAllowed,2,2
 430              		.comm	moveForwardAllowed,2,2
 431              		.comm	moveRightAllowed,2,2
 432              		.comm	moveLeftAllowed,2,2
 433              		.global	moveNow
 434              		.comm	desiredOrientation,4,4
 435              		.global	currentOrientation
 436              		.comm	desiredPosition,8,4
 437              		.global	currentPosition
 438              		.comm	pathPastBlock,4,4
 439              		.comm	pathToPucks,4,4
 440              		.global	beginNavigation
 441              		.global	horizontalPuckGrid
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cc3J0lph.s 			page 18


 442              		.global	puckConstructionPlan
 443              		.global	currentPuckStackSize
 444              		.global	running
 445              		.global	state
 446              		.comm	initialisation,4,4
 447              		.comm	output,32,4
 448              		.global	turningRightFlag
 449              		.global	turningLeftFlag
 450              		.global	drivingBackwardFlag
 451              		.global	drivingForwardFlag
 452              		.comm	puckPileLocation,4,4
 453              		.global	block_edge_location
 454              		.global	sweeping
 455              		.global	puckRackOffsetsFromWest
 456              		.global	puckRackColours
 457              		.global	currentPuckRackScanningIndex
 458              		.comm	driveStraightEnable,4,4
 459              		.section	.rodata
 460              		.align	2
 461              		.type	PLAN_SCAN_VERTICAL, %object
 462              		.size	PLAN_SCAN_VERTICAL, 4
 463              	PLAN_SCAN_VERTICAL:
 464 0000 0A000000 		.word	10
 465              		.data
 466              		.align	2
 467              		.set	.LANCHOR1,. + 0
 468              		.type	colour_flag, %object
 469              		.size	colour_flag, 4
 470              	colour_flag:
 471 0000 01000000 		.word	1
 472              		.type	state, %object
 473              		.size	state, 4
 474              	state:
 475 0004 01000000 		.word	1
 476              		.type	current_stage, %object
 477              		.size	current_stage, 4
 478              	current_stage:
 479 0008 01000000 		.word	1
 480              		.type	moveNow, %object
 481              		.size	moveNow, 2
 482              	moveNow:
 483 000c 0100     		.short	1
 484 000e 0000     		.space	2
 485              		.type	currentOrientation, %object
 486              		.size	currentOrientation, 4
 487              	currentOrientation:
 488 0010 5A000000 		.word	90
 489              		.type	running, %object
 490              		.size	running, 4
 491              	running:
 492 0014 01000000 		.word	1
 493              		.type	puckRackOffsetsFromWest, %object
 494              		.size	puckRackOffsetsFromWest, 20
 495              	puckRackOffsetsFromWest:
 496 0018 48000000 		.word	72
 497 001c 42000000 		.word	66
 498 0020 3C000000 		.word	60
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cc3J0lph.s 			page 19


 499 0024 36000000 		.word	54
 500 0028 30000000 		.word	48
 501              		.section	.rodata.str1.4,"aMS",%progbits,1
 502              		.align	2
 503              	.LC0:
 504 0000 55415254 		.ascii	"UART commencing... \012\000"
 504      20636F6D 
 504      6D656E63 
 504      696E672E 
 504      2E2E200A 
 505              		.bss
 506              		.align	2
 507              		.set	.LANCHOR0,. + 0
 508              		.type	beginNavigation, %object
 509              		.size	beginNavigation, 4
 510              	beginNavigation:
 511 0000 00000000 		.space	4
 512              		.type	idac_value, %object
 513              		.size	idac_value, 4
 514              	idac_value:
 515 0004 00000000 		.space	4
 516              		.type	colour_sensing_algorithm, %object
 517              		.size	colour_sensing_algorithm, 4
 518              	colour_sensing_algorithm:
 519 0008 00000000 		.space	4
 520              		.type	puckRackColours, %object
 521              		.size	puckRackColours, 20
 522              	puckRackColours:
 523 000c 00000000 		.space	20
 523      00000000 
 523      00000000 
 523      00000000 
 523      00000000 
 524              		.type	puckConstructionPlan, %object
 525              		.size	puckConstructionPlan, 12
 526              	puckConstructionPlan:
 527 0020 00000000 		.space	12
 527      00000000 
 527      00000000 
 528              		.type	moving, %object
 529              		.size	moving, 4
 530              	moving:
 531 002c 00000000 		.space	4
 532              		.type	currentPosition, %object
 533              		.size	currentPosition, 8
 534              	currentPosition:
 535 0030 00000000 		.space	8
 535      00000000 
 536              		.type	horizontalPuckGrid, %object
 537              		.size	horizontalPuckGrid, 4
 538              	horizontalPuckGrid:
 539 0038 00000000 		.space	4
 540              		.type	currentPuckStackSize, %object
 541              		.size	currentPuckStackSize, 4
 542              	currentPuckStackSize:
 543 003c 00000000 		.space	4
 544              		.type	turningRightFlag, %object
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cc3J0lph.s 			page 20


 545              		.size	turningRightFlag, 2
 546              	turningRightFlag:
 547 0040 0000     		.space	2
 548              		.type	turningLeftFlag, %object
 549              		.size	turningLeftFlag, 2
 550              	turningLeftFlag:
 551 0042 0000     		.space	2
 552              		.type	drivingBackwardFlag, %object
 553              		.size	drivingBackwardFlag, 2
 554              	drivingBackwardFlag:
 555 0044 0000     		.space	2
 556              		.type	drivingForwardFlag, %object
 557              		.size	drivingForwardFlag, 2
 558              	drivingForwardFlag:
 559 0046 0000     		.space	2
 560              		.type	block_edge_location, %object
 561              		.size	block_edge_location, 16
 562              	block_edge_location:
 563 0048 00000000 		.space	16
 563      00000000 
 563      00000000 
 563      00000000 
 564              		.type	sweeping, %object
 565              		.size	sweeping, 4
 566              	sweeping:
 567 0058 00000000 		.space	4
 568              		.type	currentPuckRackScanningIndex, %object
 569              		.size	currentPuckRackScanningIndex, 4
 570              	currentPuckRackScanningIndex:
 571 005c 00000000 		.space	4
 572              		.text
 573              	.Letext0:
 574              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 575              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 576              		.file 4 "Generated_Source\\PSoC5/core_cm3.h"
 577              		.file 5 "ultrasonic.h"
 578              		.file 6 "main.h"
 579              		.file 7 "dcmotor.h"
 580              		.file 8 "Generated_Source\\PSoC5/CyLib.h"
 581              		.file 9 "Generated_Source\\PSoC5/Drift_Check_Timer.h"
 582              		.file 10 "Generated_Source\\PSoC5/Motor_1_Encoder_Counts.h"
 583              		.file 11 "Generated_Source\\PSoC5/Motor_2_Encoder_Counts.h"
 584              		.file 12 "Generated_Source\\PSoC5/TIA_1.h"
 585              		.file 13 "Generated_Source\\PSoC5/UART_1.h"
 586              		.file 14 "Generated_Source\\PSoC5/ADC.h"
 587              		.file 15 "Generated_Source\\PSoC5/IDAC8_1.h"
 588              		.file 16 "Generated_Source\\PSoC5/control_photodiode.h"
 589              		.file 17 "Generated_Source\\PSoC5/control_led.h"
 590              		.file 18 "colour.h"
 591              		.file 19 "Generated_Source\\PSoC5/Rack_Servo_PWM.h"
 592              		.file 20 "Generated_Source\\PSoC5/Gripper_Servo_PWM.h"
 593              		.file 21 "Generated_Source\\PSoC5/Timer_1.h"
 594              		.file 22 "Generated_Source\\PSoC5/Sonic.h"
 595              		.file 23 "Generated_Source\\PSoC5/Start.h"
 596              		.file 24 "Generated_Source\\PSoC5/Motor_1_driver.h"
 597              		.file 25 "Generated_Source\\PSoC5/Motor_2_driver.h"
 598              		.file 26 "Generated_Source\\PSoC5/Encoder_Counts_1_Interrupt.h"
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cc3J0lph.s 			page 21


 599              		.file 27 "Generated_Source\\PSoC5/Encoder_Counts_2_Interrupt.h"
 600              		.file 28 "Generated_Source\\PSoC5/Drift_Check_Interrupt.h"
 601              		.file 29 "servo.h"
 602              		.section	.debug_info,"",%progbits
 603              	.Ldebug_info0:
 604 0000 EA080000 		.4byte	0x8ea
 605 0004 0400     		.2byte	0x4
 606 0006 00000000 		.4byte	.Ldebug_abbrev0
 607 000a 04       		.byte	0x4
 608 000b 01       		.uleb128 0x1
 609 000c 10070000 		.4byte	.LASF104
 610 0010 0C       		.byte	0xc
 611 0011 D4050000 		.4byte	.LASF105
 612 0015 78060000 		.4byte	.LASF106
 613 0019 00000000 		.4byte	.Ldebug_ranges0+0
 614 001d 00000000 		.4byte	0
 615 0021 00000000 		.4byte	.Ldebug_line0
 616 0025 02       		.uleb128 0x2
 617 0026 01       		.byte	0x1
 618 0027 06       		.byte	0x6
 619 0028 4A000000 		.4byte	.LASF0
 620 002c 02       		.uleb128 0x2
 621 002d 01       		.byte	0x1
 622 002e 08       		.byte	0x8
 623 002f FE030000 		.4byte	.LASF1
 624 0033 02       		.uleb128 0x2
 625 0034 02       		.byte	0x2
 626 0035 05       		.byte	0x5
 627 0036 8F000000 		.4byte	.LASF2
 628 003a 02       		.uleb128 0x2
 629 003b 02       		.byte	0x2
 630 003c 07       		.byte	0x7
 631 003d B0050000 		.4byte	.LASF3
 632 0041 03       		.uleb128 0x3
 633 0042 5E060000 		.4byte	.LASF9
 634 0046 02       		.byte	0x2
 635 0047 3F       		.byte	0x3f
 636 0048 4C000000 		.4byte	0x4c
 637 004c 02       		.uleb128 0x2
 638 004d 04       		.byte	0x4
 639 004e 05       		.byte	0x5
 640 004f 25030000 		.4byte	.LASF4
 641 0053 02       		.uleb128 0x2
 642 0054 04       		.byte	0x4
 643 0055 07       		.byte	0x7
 644 0056 DB050000 		.4byte	.LASF5
 645 005a 02       		.uleb128 0x2
 646 005b 08       		.byte	0x8
 647 005c 05       		.byte	0x5
 648 005d B7020000 		.4byte	.LASF6
 649 0061 02       		.uleb128 0x2
 650 0062 08       		.byte	0x8
 651 0063 07       		.byte	0x7
 652 0064 43040000 		.4byte	.LASF7
 653 0068 04       		.uleb128 0x4
 654 0069 04       		.byte	0x4
 655 006a 05       		.byte	0x5
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cc3J0lph.s 			page 22


 656 006b 696E7400 		.ascii	"int\000"
 657 006f 02       		.uleb128 0x2
 658 0070 04       		.byte	0x4
 659 0071 07       		.byte	0x7
 660 0072 7A040000 		.4byte	.LASF8
 661 0076 03       		.uleb128 0x3
 662 0077 30050000 		.4byte	.LASF10
 663 007b 03       		.byte	0x3
 664 007c 2C       		.byte	0x2c
 665 007d 41000000 		.4byte	0x41
 666 0081 02       		.uleb128 0x2
 667 0082 04       		.byte	0x4
 668 0083 04       		.byte	0x4
 669 0084 9E020000 		.4byte	.LASF11
 670 0088 02       		.uleb128 0x2
 671 0089 08       		.byte	0x8
 672 008a 04       		.byte	0x4
 673 008b FB050000 		.4byte	.LASF12
 674 008f 02       		.uleb128 0x2
 675 0090 01       		.byte	0x1
 676 0091 08       		.byte	0x8
 677 0092 2B050000 		.4byte	.LASF13
 678 0096 02       		.uleb128 0x2
 679 0097 08       		.byte	0x8
 680 0098 04       		.byte	0x4
 681 0099 F2030000 		.4byte	.LASF14
 682 009d 02       		.uleb128 0x2
 683 009e 04       		.byte	0x4
 684 009f 07       		.byte	0x7
 685 00a0 E2060000 		.4byte	.LASF15
 686 00a4 05       		.uleb128 0x5
 687 00a5 54494800 		.ascii	"TIH\000"
 688 00a9 01       		.byte	0x1
 689 00aa 63       		.byte	0x63
 690 00ab 00000000 		.4byte	.LFB64
 691 00af 08000000 		.4byte	.LFE64-.LFB64
 692 00b3 01       		.uleb128 0x1
 693 00b4 9C       		.byte	0x9c
 694 00b5 C3000000 		.4byte	0xc3
 695 00b9 06       		.uleb128 0x6
 696 00ba 06000000 		.4byte	.LVL0
 697 00be 35070000 		.4byte	0x735
 698 00c2 00       		.byte	0
 699 00c3 07       		.uleb128 0x7
 700 00c4 45010000 		.4byte	.LASF16
 701 00c8 01       		.byte	0x1
 702 00c9 68       		.byte	0x68
 703 00ca 00000000 		.4byte	.LFB65
 704 00ce 20000000 		.4byte	.LFE65-.LFB65
 705 00d2 01       		.uleb128 0x1
 706 00d3 9C       		.byte	0x9c
 707 00d4 E9000000 		.4byte	0xe9
 708 00d8 08       		.uleb128 0x8
 709 00d9 08000000 		.4byte	.LVL1
 710 00dd 40070000 		.4byte	0x740
 711 00e1 09       		.uleb128 0x9
 712 00e2 01       		.uleb128 0x1
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cc3J0lph.s 			page 23


 713 00e3 50       		.byte	0x50
 714 00e4 02       		.uleb128 0x2
 715 00e5 08       		.byte	0x8
 716 00e6 64       		.byte	0x64
 717 00e7 00       		.byte	0
 718 00e8 00       		.byte	0
 719 00e9 07       		.uleb128 0x7
 720 00ea 13060000 		.4byte	.LASF17
 721 00ee 01       		.byte	0x1
 722 00ef 71       		.byte	0x71
 723 00f0 00000000 		.4byte	.LFB66
 724 00f4 08000000 		.4byte	.LFE66-.LFB66
 725 00f8 01       		.uleb128 0x1
 726 00f9 9C       		.byte	0x9c
 727 00fa 08010000 		.4byte	0x108
 728 00fe 06       		.uleb128 0x6
 729 00ff 06000000 		.4byte	.LVL2
 730 0103 4B070000 		.4byte	0x74b
 731 0107 00       		.byte	0
 732 0108 07       		.uleb128 0x7
 733 0109 36000000 		.4byte	.LASF18
 734 010d 01       		.byte	0x1
 735 010e 75       		.byte	0x75
 736 010f 00000000 		.4byte	.LFB67
 737 0113 08000000 		.4byte	.LFE67-.LFB67
 738 0117 01       		.uleb128 0x1
 739 0118 9C       		.byte	0x9c
 740 0119 27010000 		.4byte	0x127
 741 011d 06       		.uleb128 0x6
 742 011e 06000000 		.4byte	.LVL3
 743 0122 56070000 		.4byte	0x756
 744 0126 00       		.byte	0
 745 0127 07       		.uleb128 0x7
 746 0128 45060000 		.4byte	.LASF19
 747 012c 01       		.byte	0x1
 748 012d 79       		.byte	0x79
 749 012e 00000000 		.4byte	.LFB68
 750 0132 28000000 		.4byte	.LFE68-.LFB68
 751 0136 01       		.uleb128 0x1
 752 0137 9C       		.byte	0x9c
 753 0138 6A010000 		.4byte	0x16a
 754 013c 06       		.uleb128 0x6
 755 013d 06000000 		.4byte	.LVL4
 756 0141 61070000 		.4byte	0x761
 757 0145 06       		.uleb128 0x6
 758 0146 0A000000 		.4byte	.LVL5
 759 014a 6C070000 		.4byte	0x76c
 760 014e 06       		.uleb128 0x6
 761 014f 0E000000 		.4byte	.LVL6
 762 0153 77070000 		.4byte	0x777
 763 0157 06       		.uleb128 0x6
 764 0158 16000000 		.4byte	.LVL7
 765 015c 82070000 		.4byte	0x782
 766 0160 06       		.uleb128 0x6
 767 0161 1E000000 		.4byte	.LVL8
 768 0165 8D070000 		.4byte	0x78d
 769 0169 00       		.byte	0
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cc3J0lph.s 			page 24


 770 016a 0A       		.uleb128 0xa
 771 016b 40010000 		.4byte	.LASF107
 772 016f 01       		.byte	0x1
 773 0170 82       		.byte	0x82
 774 0171 68000000 		.4byte	0x68
 775 0175 00000000 		.4byte	.LFB69
 776 0179 04010000 		.4byte	.LFE69-.LFB69
 777 017d 01       		.uleb128 0x1
 778 017e 9C       		.byte	0x9c
 779 017f E0030000 		.4byte	0x3e0
 780 0183 0B       		.uleb128 0xb
 781 0184 DE000000 		.4byte	.LASF20
 782 0188 01       		.byte	0x1
 783 0189 8E       		.byte	0x8e
 784 018a 68000000 		.4byte	0x68
 785 018e 00       		.byte	0
 786 018f 0B       		.uleb128 0xb
 787 0190 6C040000 		.4byte	.LASF21
 788 0194 01       		.byte	0x1
 789 0195 8F       		.byte	0x8f
 790 0196 68000000 		.4byte	0x68
 791 019a 00       		.byte	0
 792 019b 06       		.uleb128 0x6
 793 019c 08000000 		.4byte	.LVL9
 794 01a0 98070000 		.4byte	0x798
 795 01a4 06       		.uleb128 0x6
 796 01a5 0C000000 		.4byte	.LVL10
 797 01a9 A3070000 		.4byte	0x7a3
 798 01ad 0C       		.uleb128 0xc
 799 01ae 12000000 		.4byte	.LVL11
 800 01b2 AE070000 		.4byte	0x7ae
 801 01b6 C4010000 		.4byte	0x1c4
 802 01ba 09       		.uleb128 0x9
 803 01bb 01       		.uleb128 0x1
 804 01bc 50       		.byte	0x50
 805 01bd 05       		.uleb128 0x5
 806 01be 03       		.byte	0x3
 807 01bf 00000000 		.4byte	.LC0
 808 01c3 00       		.byte	0
 809 01c4 06       		.uleb128 0x6
 810 01c5 16000000 		.4byte	.LVL12
 811 01c9 B9070000 		.4byte	0x7b9
 812 01cd 06       		.uleb128 0x6
 813 01ce 1A000000 		.4byte	.LVL13
 814 01d2 C4070000 		.4byte	0x7c4
 815 01d6 0C       		.uleb128 0xc
 816 01d7 20000000 		.4byte	.LVL14
 817 01db CF070000 		.4byte	0x7cf
 818 01df E9010000 		.4byte	0x1e9
 819 01e3 09       		.uleb128 0x9
 820 01e4 01       		.uleb128 0x1
 821 01e5 50       		.byte	0x50
 822 01e6 01       		.uleb128 0x1
 823 01e7 30       		.byte	0x30
 824 01e8 00       		.byte	0
 825 01e9 06       		.uleb128 0x6
 826 01ea 28000000 		.4byte	.LVL15
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cc3J0lph.s 			page 25


 827 01ee DA070000 		.4byte	0x7da
 828 01f2 0C       		.uleb128 0xc
 829 01f3 32000000 		.4byte	.LVL16
 830 01f7 E5070000 		.4byte	0x7e5
 831 01fb 06020000 		.4byte	0x206
 832 01ff 09       		.uleb128 0x9
 833 0200 01       		.uleb128 0x1
 834 0201 50       		.byte	0x50
 835 0202 02       		.uleb128 0x2
 836 0203 74       		.byte	0x74
 837 0204 00       		.sleb128 0
 838 0205 00       		.byte	0
 839 0206 0C       		.uleb128 0xc
 840 0207 38000000 		.4byte	.LVL17
 841 020b F0070000 		.4byte	0x7f0
 842 020f 19020000 		.4byte	0x219
 843 0213 09       		.uleb128 0x9
 844 0214 01       		.uleb128 0x1
 845 0215 50       		.byte	0x50
 846 0216 01       		.uleb128 0x1
 847 0217 31       		.byte	0x31
 848 0218 00       		.byte	0
 849 0219 0C       		.uleb128 0xc
 850 021a 40000000 		.4byte	.LVL18
 851 021e 40070000 		.4byte	0x740
 852 0222 2E020000 		.4byte	0x22e
 853 0226 09       		.uleb128 0x9
 854 0227 01       		.uleb128 0x1
 855 0228 50       		.byte	0x50
 856 0229 03       		.uleb128 0x3
 857 022a 0A       		.byte	0xa
 858 022b F401     		.2byte	0x1f4
 859 022d 00       		.byte	0
 860 022e 0C       		.uleb128 0xc
 861 022f 46000000 		.4byte	.LVL19
 862 0233 F0070000 		.4byte	0x7f0
 863 0237 41020000 		.4byte	0x241
 864 023b 09       		.uleb128 0x9
 865 023c 01       		.uleb128 0x1
 866 023d 50       		.byte	0x50
 867 023e 01       		.uleb128 0x1
 868 023f 32       		.byte	0x32
 869 0240 00       		.byte	0
 870 0241 0C       		.uleb128 0xc
 871 0242 4E000000 		.4byte	.LVL20
 872 0246 40070000 		.4byte	0x740
 873 024a 56020000 		.4byte	0x256
 874 024e 09       		.uleb128 0x9
 875 024f 01       		.uleb128 0x1
 876 0250 50       		.byte	0x50
 877 0251 03       		.uleb128 0x3
 878 0252 0A       		.byte	0xa
 879 0253 F401     		.2byte	0x1f4
 880 0255 00       		.byte	0
 881 0256 0C       		.uleb128 0xc
 882 0257 54000000 		.4byte	.LVL21
 883 025b F0070000 		.4byte	0x7f0
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cc3J0lph.s 			page 26


 884 025f 69020000 		.4byte	0x269
 885 0263 09       		.uleb128 0x9
 886 0264 01       		.uleb128 0x1
 887 0265 50       		.byte	0x50
 888 0266 01       		.uleb128 0x1
 889 0267 33       		.byte	0x33
 890 0268 00       		.byte	0
 891 0269 0C       		.uleb128 0xc
 892 026a 5C000000 		.4byte	.LVL22
 893 026e 40070000 		.4byte	0x740
 894 0272 7E020000 		.4byte	0x27e
 895 0276 09       		.uleb128 0x9
 896 0277 01       		.uleb128 0x1
 897 0278 50       		.byte	0x50
 898 0279 03       		.uleb128 0x3
 899 027a 0A       		.byte	0xa
 900 027b F401     		.2byte	0x1f4
 901 027d 00       		.byte	0
 902 027e 0C       		.uleb128 0xc
 903 027f 62000000 		.4byte	.LVL23
 904 0283 F0070000 		.4byte	0x7f0
 905 0287 92020000 		.4byte	0x292
 906 028b 09       		.uleb128 0x9
 907 028c 01       		.uleb128 0x1
 908 028d 50       		.byte	0x50
 909 028e 02       		.uleb128 0x2
 910 028f 74       		.byte	0x74
 911 0290 00       		.sleb128 0
 912 0291 00       		.byte	0
 913 0292 0C       		.uleb128 0xc
 914 0293 6A000000 		.4byte	.LVL24
 915 0297 40070000 		.4byte	0x740
 916 029b A7020000 		.4byte	0x2a7
 917 029f 09       		.uleb128 0x9
 918 02a0 01       		.uleb128 0x1
 919 02a1 50       		.byte	0x50
 920 02a2 03       		.uleb128 0x3
 921 02a3 0A       		.byte	0xa
 922 02a4 F401     		.2byte	0x1f4
 923 02a6 00       		.byte	0
 924 02a7 06       		.uleb128 0x6
 925 02a8 6E000000 		.4byte	.LVL25
 926 02ac FB070000 		.4byte	0x7fb
 927 02b0 06       		.uleb128 0x6
 928 02b1 72000000 		.4byte	.LVL26
 929 02b5 06080000 		.4byte	0x806
 930 02b9 0C       		.uleb128 0xc
 931 02ba 7A000000 		.4byte	.LVL27
 932 02be 11080000 		.4byte	0x811
 933 02c2 CE020000 		.4byte	0x2ce
 934 02c6 09       		.uleb128 0x9
 935 02c7 01       		.uleb128 0x1
 936 02c8 50       		.byte	0x50
 937 02c9 03       		.uleb128 0x3
 938 02ca 0A       		.byte	0xa
 939 02cb E803     		.2byte	0x3e8
 940 02cd 00       		.byte	0
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cc3J0lph.s 			page 27


 941 02ce 0C       		.uleb128 0xc
 942 02cf 82000000 		.4byte	.LVL28
 943 02d3 40070000 		.4byte	0x740
 944 02d7 E3020000 		.4byte	0x2e3
 945 02db 09       		.uleb128 0x9
 946 02dc 01       		.uleb128 0x1
 947 02dd 50       		.byte	0x50
 948 02de 03       		.uleb128 0x3
 949 02df 0A       		.byte	0xa
 950 02e0 F401     		.2byte	0x1f4
 951 02e2 00       		.byte	0
 952 02e3 06       		.uleb128 0x6
 953 02e4 86000000 		.4byte	.LVL29
 954 02e8 1C080000 		.4byte	0x81c
 955 02ec 06       		.uleb128 0x6
 956 02ed 8A000000 		.4byte	.LVL30
 957 02f1 27080000 		.4byte	0x827
 958 02f5 0C       		.uleb128 0xc
 959 02f6 92000000 		.4byte	.LVL31
 960 02fa 32080000 		.4byte	0x832
 961 02fe 0A030000 		.4byte	0x30a
 962 0302 09       		.uleb128 0x9
 963 0303 01       		.uleb128 0x1
 964 0304 50       		.byte	0x50
 965 0305 03       		.uleb128 0x3
 966 0306 0A       		.byte	0xa
 967 0307 6004     		.2byte	0x460
 968 0309 00       		.byte	0
 969 030a 0C       		.uleb128 0xc
 970 030b 9A000000 		.4byte	.LVL32
 971 030f 40070000 		.4byte	0x740
 972 0313 1F030000 		.4byte	0x31f
 973 0317 09       		.uleb128 0x9
 974 0318 01       		.uleb128 0x1
 975 0319 50       		.byte	0x50
 976 031a 03       		.uleb128 0x3
 977 031b 0A       		.byte	0xa
 978 031c F401     		.2byte	0x1f4
 979 031e 00       		.byte	0
 980 031f 06       		.uleb128 0x6
 981 0320 9E000000 		.4byte	.LVL33
 982 0324 3D080000 		.4byte	0x83d
 983 0328 06       		.uleb128 0x6
 984 0329 A2000000 		.4byte	.LVL34
 985 032d 48080000 		.4byte	0x848
 986 0331 06       		.uleb128 0x6
 987 0332 A6000000 		.4byte	.LVL35
 988 0336 53080000 		.4byte	0x853
 989 033a 0C       		.uleb128 0xc
 990 033b AC000000 		.4byte	.LVL36
 991 033f 5E080000 		.4byte	0x85e
 992 0343 51030000 		.4byte	0x351
 993 0347 09       		.uleb128 0x9
 994 0348 01       		.uleb128 0x1
 995 0349 50       		.byte	0x50
 996 034a 05       		.uleb128 0x5
 997 034b 03       		.byte	0x3
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cc3J0lph.s 			page 28


 998 034c 00000000 		.4byte	TIH
 999 0350 00       		.byte	0
 1000 0351 0C       		.uleb128 0xc
 1001 0352 B2000000 		.4byte	.LVL37
 1002 0356 69080000 		.4byte	0x869
 1003 035a 68030000 		.4byte	0x368
 1004 035e 09       		.uleb128 0x9
 1005 035f 01       		.uleb128 0x1
 1006 0360 50       		.byte	0x50
 1007 0361 05       		.uleb128 0x5
 1008 0362 03       		.byte	0x3
 1009 0363 00000000 		.4byte	StartIH
 1010 0367 00       		.byte	0
 1011 0368 06       		.uleb128 0x6
 1012 0369 B8000000 		.4byte	.LVL38
 1013 036d 74080000 		.4byte	0x874
 1014 0371 06       		.uleb128 0x6
 1015 0372 BC000000 		.4byte	.LVL39
 1016 0376 7F080000 		.4byte	0x87f
 1017 037a 06       		.uleb128 0x6
 1018 037b C8000000 		.4byte	.LVL40
 1019 037f 8A080000 		.4byte	0x88a
 1020 0383 06       		.uleb128 0x6
 1021 0384 CC000000 		.4byte	.LVL41
 1022 0388 95080000 		.4byte	0x895
 1023 038c 06       		.uleb128 0x6
 1024 038d D0000000 		.4byte	.LVL42
 1025 0391 A0080000 		.4byte	0x8a0
 1026 0395 06       		.uleb128 0x6
 1027 0396 D4000000 		.4byte	.LVL43
 1028 039a AB080000 		.4byte	0x8ab
 1029 039e 0C       		.uleb128 0xc
 1030 039f DA000000 		.4byte	.LVL44
 1031 03a3 B6080000 		.4byte	0x8b6
 1032 03a7 B5030000 		.4byte	0x3b5
 1033 03ab 09       		.uleb128 0x9
 1034 03ac 01       		.uleb128 0x1
 1035 03ad 50       		.byte	0x50
 1036 03ae 05       		.uleb128 0x5
 1037 03af 03       		.byte	0x3
 1038 03b0 00000000 		.4byte	Encoder_Counts_1_IH
 1039 03b4 00       		.byte	0
 1040 03b5 0C       		.uleb128 0xc
 1041 03b6 E0000000 		.4byte	.LVL45
 1042 03ba C1080000 		.4byte	0x8c1
 1043 03be CC030000 		.4byte	0x3cc
 1044 03c2 09       		.uleb128 0x9
 1045 03c3 01       		.uleb128 0x1
 1046 03c4 50       		.byte	0x50
 1047 03c5 05       		.uleb128 0x5
 1048 03c6 03       		.byte	0x3
 1049 03c7 00000000 		.4byte	Encoder_Counts_2_IH
 1050 03cb 00       		.byte	0
 1051 03cc 08       		.uleb128 0x8
 1052 03cd E6000000 		.4byte	.LVL46
 1053 03d1 CC080000 		.4byte	0x8cc
 1054 03d5 09       		.uleb128 0x9
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cc3J0lph.s 			page 29


 1055 03d6 01       		.uleb128 0x1
 1056 03d7 50       		.byte	0x50
 1057 03d8 05       		.uleb128 0x5
 1058 03d9 03       		.byte	0x3
 1059 03da 00000000 		.4byte	Drift_Check_IH
 1060 03de 00       		.byte	0
 1061 03df 00       		.byte	0
 1062 03e0 0D       		.uleb128 0xd
 1063 03e1 1D040000 		.4byte	.LASF22
 1064 03e5 01       		.byte	0x1
 1065 03e6 DB01     		.2byte	0x1db
 1066 03e8 00000000 		.4byte	.LFB70
 1067 03ec 44000000 		.4byte	.LFE70-.LFB70
 1068 03f0 01       		.uleb128 0x1
 1069 03f1 9C       		.byte	0x9c
 1070 03f2 55040000 		.4byte	0x455
 1071 03f6 0E       		.uleb128 0xe
 1072 03f7 29000000 		.4byte	.LASF23
 1073 03fb 01       		.byte	0x1
 1074 03fc DD01     		.2byte	0x1dd
 1075 03fe 68000000 		.4byte	0x68
 1076 0402 00000000 		.4byte	.LLST0
 1077 0406 0E       		.uleb128 0xe
 1078 0407 54060000 		.4byte	.LASF24
 1079 040b 01       		.byte	0x1
 1080 040c DE01     		.2byte	0x1de
 1081 040e 68000000 		.4byte	0x68
 1082 0412 1F000000 		.4byte	.LLST1
 1083 0416 0C       		.uleb128 0xc
 1084 0417 0E000000 		.4byte	.LVL48
 1085 041b D7080000 		.4byte	0x8d7
 1086 041f 29040000 		.4byte	0x429
 1087 0423 09       		.uleb128 0x9
 1088 0424 01       		.uleb128 0x1
 1089 0425 50       		.byte	0x50
 1090 0426 01       		.uleb128 0x1
 1091 0427 33       		.byte	0x33
 1092 0428 00       		.byte	0
 1093 0429 0C       		.uleb128 0xc
 1094 042a 18000000 		.4byte	.LVL50
 1095 042e D7080000 		.4byte	0x8d7
 1096 0432 3C040000 		.4byte	0x43c
 1097 0436 09       		.uleb128 0x9
 1098 0437 01       		.uleb128 0x1
 1099 0438 50       		.byte	0x50
 1100 0439 01       		.uleb128 0x1
 1101 043a 31       		.byte	0x31
 1102 043b 00       		.byte	0
 1103 043c 06       		.uleb128 0x6
 1104 043d 1C000000 		.4byte	.LVL51
 1105 0441 E2080000 		.4byte	0x8e2
 1106 0445 08       		.uleb128 0x8
 1107 0446 24000000 		.4byte	.LVL54
 1108 044a D7080000 		.4byte	0x8d7
 1109 044e 09       		.uleb128 0x9
 1110 044f 01       		.uleb128 0x1
 1111 0450 50       		.byte	0x50
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cc3J0lph.s 			page 30


 1112 0451 01       		.uleb128 0x1
 1113 0452 33       		.byte	0x33
 1114 0453 00       		.byte	0
 1115 0454 00       		.byte	0
 1116 0455 0F       		.uleb128 0xf
 1117 0456 03070000 		.4byte	.LASF25
 1118 045a 04       		.byte	0x4
 1119 045b 1207     		.2byte	0x712
 1120 045d 61040000 		.4byte	0x461
 1121 0461 10       		.uleb128 0x10
 1122 0462 76000000 		.4byte	0x76
 1123 0466 11       		.uleb128 0x11
 1124 0467 11020000 		.4byte	.LASF26
 1125 046b 05       		.byte	0x5
 1126 046c 1D       		.byte	0x1d
 1127 046d 68000000 		.4byte	0x68
 1128 0471 05       		.uleb128 0x5
 1129 0472 03       		.byte	0x3
 1130 0473 00000000 		.4byte	driveStraightEnable
 1131 0477 11       		.uleb128 0x11
 1132 0478 89030000 		.4byte	.LASF27
 1133 047c 01       		.byte	0x1
 1134 047d 2A       		.byte	0x2a
 1135 047e 68000000 		.4byte	0x68
 1136 0482 05       		.uleb128 0x5
 1137 0483 03       		.byte	0x3
 1138 0484 00000000 		.4byte	currentPuckRackScanningIndex
 1139 0488 12       		.uleb128 0x12
 1140 0489 68000000 		.4byte	0x68
 1141 048d 98040000 		.4byte	0x498
 1142 0491 13       		.uleb128 0x13
 1143 0492 9D000000 		.4byte	0x9d
 1144 0496 04       		.byte	0x4
 1145 0497 00       		.byte	0
 1146 0498 11       		.uleb128 0x11
 1147 0499 68060000 		.4byte	.LASF28
 1148 049d 01       		.byte	0x1
 1149 049e 28       		.byte	0x28
 1150 049f 88040000 		.4byte	0x488
 1151 04a3 05       		.uleb128 0x5
 1152 04a4 03       		.byte	0x3
 1153 04a5 00000000 		.4byte	puckRackColours
 1154 04a9 11       		.uleb128 0x11
 1155 04aa 25020000 		.4byte	.LASF29
 1156 04ae 01       		.byte	0x1
 1157 04af 2B       		.byte	0x2b
 1158 04b0 88040000 		.4byte	0x488
 1159 04b4 05       		.uleb128 0x5
 1160 04b5 03       		.byte	0x3
 1161 04b6 00000000 		.4byte	puckRackOffsetsFromWest
 1162 04ba 11       		.uleb128 0x11
 1163 04bb 22050000 		.4byte	.LASF30
 1164 04bf 01       		.byte	0x1
 1165 04c0 23       		.byte	0x23
 1166 04c1 68000000 		.4byte	0x68
 1167 04c5 05       		.uleb128 0x5
 1168 04c6 03       		.byte	0x3
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cc3J0lph.s 			page 31


 1169 04c7 00000000 		.4byte	sweeping
 1170 04cb 12       		.uleb128 0x12
 1171 04cc 81000000 		.4byte	0x81
 1172 04d0 DB040000 		.4byte	0x4db
 1173 04d4 13       		.uleb128 0x13
 1174 04d5 9D000000 		.4byte	0x9d
 1175 04d9 03       		.byte	0x3
 1176 04da 00       		.byte	0
 1177 04db 11       		.uleb128 0x11
 1178 04dc 2F040000 		.4byte	.LASF31
 1179 04e0 01       		.byte	0x1
 1180 04e1 24       		.byte	0x24
 1181 04e2 CB040000 		.4byte	0x4cb
 1182 04e6 05       		.uleb128 0x5
 1183 04e7 03       		.byte	0x3
 1184 04e8 00000000 		.4byte	block_edge_location
 1185 04ec 11       		.uleb128 0x11
 1186 04ed 5B030000 		.4byte	.LASF32
 1187 04f1 06       		.byte	0x6
 1188 04f2 7A       		.byte	0x7a
 1189 04f3 81000000 		.4byte	0x81
 1190 04f7 05       		.uleb128 0x5
 1191 04f8 03       		.byte	0x3
 1192 04f9 00000000 		.4byte	puckPileLocation
 1193 04fd 11       		.uleb128 0x11
 1194 04fe CB000000 		.4byte	.LASF33
 1195 0502 01       		.byte	0x1
 1196 0503 46       		.byte	0x46
 1197 0504 33000000 		.4byte	0x33
 1198 0508 05       		.uleb128 0x5
 1199 0509 03       		.byte	0x3
 1200 050a 00000000 		.4byte	drivingForwardFlag
 1201 050e 11       		.uleb128 0x11
 1202 050f 47030000 		.4byte	.LASF34
 1203 0513 01       		.byte	0x1
 1204 0514 47       		.byte	0x47
 1205 0515 33000000 		.4byte	0x33
 1206 0519 05       		.uleb128 0x5
 1207 051a 03       		.byte	0x3
 1208 051b 00000000 		.4byte	drivingBackwardFlag
 1209 051f 11       		.uleb128 0x11
 1210 0520 6A000000 		.4byte	.LASF35
 1211 0524 01       		.byte	0x1
 1212 0525 48       		.byte	0x48
 1213 0526 33000000 		.4byte	0x33
 1214 052a 05       		.uleb128 0x5
 1215 052b 03       		.byte	0x3
 1216 052c 00000000 		.4byte	turningLeftFlag
 1217 0530 11       		.uleb128 0x11
 1218 0531 8D020000 		.4byte	.LASF36
 1219 0535 01       		.byte	0x1
 1220 0536 49       		.byte	0x49
 1221 0537 33000000 		.4byte	0x33
 1222 053b 05       		.uleb128 0x5
 1223 053c 03       		.byte	0x3
 1224 053d 00000000 		.4byte	turningRightFlag
 1225 0541 11       		.uleb128 0x11
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cc3J0lph.s 			page 32


 1226 0542 DC070000 		.4byte	.LASF37
 1227 0546 05       		.byte	0x5
 1228 0547 2B       		.byte	0x2b
 1229 0548 68000000 		.4byte	0x68
 1230 054c 05       		.uleb128 0x5
 1231 054d 03       		.byte	0x3
 1232 054e 00000000 		.4byte	initialisation
 1233 0552 12       		.uleb128 0x12
 1234 0553 8F000000 		.4byte	0x8f
 1235 0557 62050000 		.4byte	0x562
 1236 055b 13       		.uleb128 0x13
 1237 055c 9D000000 		.4byte	0x9d
 1238 0560 1F       		.byte	0x1f
 1239 0561 00       		.byte	0
 1240 0562 11       		.uleb128 0x11
 1241 0563 EB060000 		.4byte	.LASF38
 1242 0567 01       		.byte	0x1
 1243 0568 1E       		.byte	0x1e
 1244 0569 52050000 		.4byte	0x552
 1245 056d 05       		.uleb128 0x5
 1246 056e 03       		.byte	0x3
 1247 056f 00000000 		.4byte	output
 1248 0573 14       		.uleb128 0x14
 1249 0574 01010000 		.4byte	.LASF39
 1250 0578 07       		.byte	0x7
 1251 0579 31       		.byte	0x31
 1252 057a 68000000 		.4byte	0x68
 1253 057e 14       		.uleb128 0x14
 1254 057f 00000000 		.4byte	.LASF40
 1255 0583 07       		.byte	0x7
 1256 0584 32       		.byte	0x32
 1257 0585 68000000 		.4byte	0x68
 1258 0589 11       		.uleb128 0x11
 1259 058a E6030000 		.4byte	.LASF41
 1260 058e 01       		.byte	0x1
 1261 058f 55       		.byte	0x55
 1262 0590 68000000 		.4byte	0x68
 1263 0594 05       		.uleb128 0x5
 1264 0595 03       		.byte	0x3
 1265 0596 00000000 		.4byte	colour_flag
 1266 059a 11       		.uleb128 0x11
 1267 059b 3F060000 		.4byte	.LASF42
 1268 059f 01       		.byte	0x1
 1269 05a0 21       		.byte	0x21
 1270 05a1 68000000 		.4byte	0x68
 1271 05a5 05       		.uleb128 0x5
 1272 05a6 03       		.byte	0x3
 1273 05a7 00000000 		.4byte	state
 1274 05ab 11       		.uleb128 0x11
 1275 05ac 77050000 		.4byte	.LASF43
 1276 05b0 01       		.byte	0x1
 1277 05b1 5B       		.byte	0x5b
 1278 05b2 68000000 		.4byte	0x68
 1279 05b6 05       		.uleb128 0x5
 1280 05b7 03       		.byte	0x3
 1281 05b8 00000000 		.4byte	moving
 1282 05bc 12       		.uleb128 0x12
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cc3J0lph.s 			page 33


 1283 05bd 81000000 		.4byte	0x81
 1284 05c1 CC050000 		.4byte	0x5cc
 1285 05c5 13       		.uleb128 0x13
 1286 05c6 9D000000 		.4byte	0x9d
 1287 05ca 01       		.byte	0x1
 1288 05cb 00       		.byte	0
 1289 05cc 11       		.uleb128 0x11
 1290 05cd AD000000 		.4byte	.LASF44
 1291 05d1 01       		.byte	0x1
 1292 05d2 3A       		.byte	0x3a
 1293 05d3 BC050000 		.4byte	0x5bc
 1294 05d7 05       		.uleb128 0x5
 1295 05d8 03       		.byte	0x3
 1296 05d9 00000000 		.4byte	currentPosition
 1297 05dd 11       		.uleb128 0x11
 1298 05de A0050000 		.4byte	.LASF45
 1299 05e2 01       		.byte	0x1
 1300 05e3 3B       		.byte	0x3b
 1301 05e4 BC050000 		.4byte	0x5bc
 1302 05e8 05       		.uleb128 0x5
 1303 05e9 03       		.byte	0x3
 1304 05ea 00000000 		.4byte	desiredPosition
 1305 05ee 11       		.uleb128 0x11
 1306 05ef C3040000 		.4byte	.LASF46
 1307 05f3 01       		.byte	0x1
 1308 05f4 3C       		.byte	0x3c
 1309 05f5 68000000 		.4byte	0x68
 1310 05f9 05       		.uleb128 0x5
 1311 05fa 03       		.byte	0x3
 1312 05fb 00000000 		.4byte	currentOrientation
 1313 05ff 11       		.uleb128 0x11
 1314 0600 2D010000 		.4byte	.LASF47
 1315 0604 01       		.byte	0x1
 1316 0605 3D       		.byte	0x3d
 1317 0606 68000000 		.4byte	0x68
 1318 060a 05       		.uleb128 0x5
 1319 060b 03       		.byte	0x3
 1320 060c 00000000 		.4byte	desiredOrientation
 1321 0610 11       		.uleb128 0x11
 1322 0611 27040000 		.4byte	.LASF48
 1323 0615 01       		.byte	0x1
 1324 0616 3F       		.byte	0x3f
 1325 0617 33000000 		.4byte	0x33
 1326 061b 05       		.uleb128 0x5
 1327 061c 03       		.byte	0x3
 1328 061d 00000000 		.4byte	moveNow
 1329 0621 11       		.uleb128 0x11
 1330 0622 D2060000 		.4byte	.LASF49
 1331 0626 01       		.byte	0x1
 1332 0627 4C       		.byte	0x4c
 1333 0628 33000000 		.4byte	0x33
 1334 062c 05       		.uleb128 0x5
 1335 062d 03       		.byte	0x3
 1336 062e 00000000 		.4byte	moveLeftAllowed
 1337 0632 11       		.uleb128 0x11
 1338 0633 F2060000 		.4byte	.LASF50
 1339 0637 01       		.byte	0x1
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cc3J0lph.s 			page 34


 1340 0638 4D       		.byte	0x4d
 1341 0639 33000000 		.4byte	0x33
 1342 063d 05       		.uleb128 0x5
 1343 063e 03       		.byte	0x3
 1344 063f 00000000 		.4byte	moveRightAllowed
 1345 0643 11       		.uleb128 0x11
 1346 0644 D6040000 		.4byte	.LASF51
 1347 0648 01       		.byte	0x1
 1348 0649 4E       		.byte	0x4e
 1349 064a 33000000 		.4byte	0x33
 1350 064e 05       		.uleb128 0x5
 1351 064f 03       		.byte	0x3
 1352 0650 00000000 		.4byte	moveForwardAllowed
 1353 0654 11       		.uleb128 0x11
 1354 0655 7F010000 		.4byte	.LASF52
 1355 0659 01       		.byte	0x1
 1356 065a 4F       		.byte	0x4f
 1357 065b 33000000 		.4byte	0x33
 1358 065f 05       		.uleb128 0x5
 1359 0660 03       		.byte	0x3
 1360 0661 00000000 		.4byte	moveBackwardAllowed
 1361 0665 11       		.uleb128 0x11
 1362 0666 52020000 		.4byte	.LASF53
 1363 066a 01       		.byte	0x1
 1364 066b 22       		.byte	0x22
 1365 066c 68000000 		.4byte	0x68
 1366 0670 05       		.uleb128 0x5
 1367 0671 03       		.byte	0x3
 1368 0672 00000000 		.4byte	running
 1369 0676 11       		.uleb128 0x11
 1370 0677 3D020000 		.4byte	.LASF54
 1371 067b 01       		.byte	0x1
 1372 067c 27       		.byte	0x27
 1373 067d 68000000 		.4byte	0x68
 1374 0681 05       		.uleb128 0x5
 1375 0682 03       		.byte	0x3
 1376 0683 00000000 		.4byte	currentPuckStackSize
 1377 0687 12       		.uleb128 0x12
 1378 0688 68000000 		.4byte	0x68
 1379 068c 97060000 		.4byte	0x697
 1380 0690 13       		.uleb128 0x13
 1381 0691 9D000000 		.4byte	0x9d
 1382 0695 02       		.byte	0x2
 1383 0696 00       		.byte	0
 1384 0697 11       		.uleb128 0x11
 1385 0698 7A000000 		.4byte	.LASF55
 1386 069c 01       		.byte	0x1
 1387 069d 29       		.byte	0x29
 1388 069e 87060000 		.4byte	0x687
 1389 06a2 05       		.uleb128 0x5
 1390 06a3 03       		.byte	0x3
 1391 06a4 00000000 		.4byte	puckConstructionPlan
 1392 06a8 11       		.uleb128 0x11
 1393 06a9 4B050000 		.4byte	.LASF56
 1394 06ad 01       		.byte	0x1
 1395 06ae 31       		.byte	0x31
 1396 06af 81000000 		.4byte	0x81
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cc3J0lph.s 			page 35


 1397 06b3 05       		.uleb128 0x5
 1398 06b4 03       		.byte	0x3
 1399 06b5 00000000 		.4byte	horizontalPuckGrid
 1400 06b9 11       		.uleb128 0x11
 1401 06ba F1000000 		.4byte	.LASF57
 1402 06be 01       		.byte	0x1
 1403 06bf 35       		.byte	0x35
 1404 06c0 68000000 		.4byte	0x68
 1405 06c4 05       		.uleb128 0x5
 1406 06c5 03       		.byte	0x3
 1407 06c6 00000000 		.4byte	beginNavigation
 1408 06ca 11       		.uleb128 0x11
 1409 06cb BB070000 		.4byte	.LASF58
 1410 06cf 01       		.byte	0x1
 1411 06d0 37       		.byte	0x37
 1412 06d1 68000000 		.4byte	0x68
 1413 06d5 05       		.uleb128 0x5
 1414 06d6 03       		.byte	0x3
 1415 06d7 00000000 		.4byte	pathToPucks
 1416 06db 11       		.uleb128 0x11
 1417 06dc 0D030000 		.4byte	.LASF59
 1418 06e0 01       		.byte	0x1
 1419 06e1 38       		.byte	0x38
 1420 06e2 68000000 		.4byte	0x68
 1421 06e6 05       		.uleb128 0x5
 1422 06e7 03       		.byte	0x3
 1423 06e8 00000000 		.4byte	pathPastBlock
 1424 06ec 11       		.uleb128 0x11
 1425 06ed 87040000 		.4byte	.LASF60
 1426 06f1 01       		.byte	0x1
 1427 06f2 54       		.byte	0x54
 1428 06f3 68000000 		.4byte	0x68
 1429 06f7 05       		.uleb128 0x5
 1430 06f8 03       		.byte	0x3
 1431 06f9 00000000 		.4byte	idac_value
 1432 06fd 11       		.uleb128 0x11
 1433 06fe 5E050000 		.4byte	.LASF61
 1434 0702 01       		.byte	0x1
 1435 0703 56       		.byte	0x56
 1436 0704 68000000 		.4byte	0x68
 1437 0708 05       		.uleb128 0x5
 1438 0709 03       		.byte	0x3
 1439 070a 00000000 		.4byte	colour_sensing_algorithm
 1440 070e 11       		.uleb128 0x11
 1441 070f 38050000 		.4byte	.LASF62
 1442 0713 01       		.byte	0x1
 1443 0714 5D       		.byte	0x5d
 1444 0715 1F070000 		.4byte	0x71f
 1445 0719 05       		.uleb128 0x5
 1446 071a 03       		.byte	0x3
 1447 071b 00000000 		.4byte	PLAN_SCAN_VERTICAL
 1448 071f 15       		.uleb128 0x15
 1449 0720 68000000 		.4byte	0x68
 1450 0724 11       		.uleb128 0x11
 1451 0725 E9040000 		.4byte	.LASF63
 1452 0729 01       		.byte	0x1
 1453 072a 5F       		.byte	0x5f
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cc3J0lph.s 			page 36


 1454 072b 68000000 		.4byte	0x68
 1455 072f 05       		.uleb128 0x5
 1456 0730 03       		.byte	0x3
 1457 0731 00000000 		.4byte	current_stage
 1458 0735 16       		.uleb128 0x16
 1459 0736 72020000 		.4byte	.LASF64
 1460 073a 72020000 		.4byte	.LASF64
 1461 073e 05       		.byte	0x5
 1462 073f 19       		.byte	0x19
 1463 0740 16       		.uleb128 0x16
 1464 0741 9E070000 		.4byte	.LASF65
 1465 0745 9E070000 		.4byte	.LASF65
 1466 0749 08       		.byte	0x8
 1467 074a 76       		.byte	0x76
 1468 074b 16       		.uleb128 0x16
 1469 074c 7E050000 		.4byte	.LASF66
 1470 0750 7E050000 		.4byte	.LASF66
 1471 0754 07       		.byte	0x7
 1472 0755 1F       		.byte	0x1f
 1473 0756 16       		.uleb128 0x16
 1474 0757 99000000 		.4byte	.LASF67
 1475 075b 99000000 		.4byte	.LASF67
 1476 075f 07       		.byte	0x7
 1477 0760 20       		.byte	0x20
 1478 0761 16       		.uleb128 0x16
 1479 0762 E8020000 		.4byte	.LASF68
 1480 0766 E8020000 		.4byte	.LASF68
 1481 076a 09       		.byte	0x9
 1482 076b 5E       		.byte	0x5e
 1483 076c 16       		.uleb128 0x16
 1484 076d C2030000 		.4byte	.LASF69
 1485 0771 C2030000 		.4byte	.LASF69
 1486 0775 09       		.byte	0x9
 1487 0776 5B       		.byte	0x5b
 1488 0777 16       		.uleb128 0x16
 1489 0778 03080000 		.4byte	.LASF70
 1490 077c 03080000 		.4byte	.LASF70
 1491 0780 0A       		.byte	0xa
 1492 0781 5D       		.byte	0x5d
 1493 0782 16       		.uleb128 0x16
 1494 0783 92040000 		.4byte	.LASF71
 1495 0787 92040000 		.4byte	.LASF71
 1496 078b 0B       		.byte	0xb
 1497 078c 5D       		.byte	0x5d
 1498 078d 16       		.uleb128 0x16
 1499 078e 93010000 		.4byte	.LASF72
 1500 0792 93010000 		.4byte	.LASF72
 1501 0796 07       		.byte	0x7
 1502 0797 14       		.byte	0x14
 1503 0798 16       		.uleb128 0x16
 1504 0799 16050000 		.4byte	.LASF73
 1505 079d 16050000 		.4byte	.LASF73
 1506 07a1 0C       		.byte	0xc
 1507 07a2 3D       		.byte	0x3d
 1508 07a3 16       		.uleb128 0x16
 1509 07a4 D9030000 		.4byte	.LASF74
 1510 07a8 D9030000 		.4byte	.LASF74
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cc3J0lph.s 			page 37


 1511 07ac 0D       		.byte	0xd
 1512 07ad 54       		.byte	0x54
 1513 07ae 16       		.uleb128 0x16
 1514 07af 02060000 		.4byte	.LASF75
 1515 07b3 02060000 		.4byte	.LASF75
 1516 07b7 0D       		.byte	0xd
 1517 07b8 8B       		.byte	0x8b
 1518 07b9 16       		.uleb128 0x16
 1519 07ba 1B030000 		.4byte	.LASF76
 1520 07be 1B030000 		.4byte	.LASF76
 1521 07c2 0E       		.byte	0xe
 1522 07c3 3A       		.byte	0x3a
 1523 07c4 16       		.uleb128 0x16
 1524 07c5 B5040000 		.4byte	.LASF77
 1525 07c9 B5040000 		.4byte	.LASF77
 1526 07cd 0F       		.byte	0xf
 1527 07ce 3C       		.byte	0x3c
 1528 07cf 16       		.uleb128 0x16
 1529 07d0 0C040000 		.4byte	.LASF78
 1530 07d4 0C040000 		.4byte	.LASF78
 1531 07d8 0F       		.byte	0xf
 1532 07d9 40       		.byte	0x40
 1533 07da 16       		.uleb128 0x16
 1534 07db C3050000 		.4byte	.LASF79
 1535 07df C3050000 		.4byte	.LASF79
 1536 07e3 0F       		.byte	0xf
 1537 07e4 41       		.byte	0x41
 1538 07e5 16       		.uleb128 0x16
 1539 07e6 2E030000 		.4byte	.LASF80
 1540 07ea 2E030000 		.4byte	.LASF80
 1541 07ee 10       		.byte	0x10
 1542 07ef 2F       		.byte	0x2f
 1543 07f0 16       		.uleb128 0x16
 1544 07f1 5A040000 		.4byte	.LASF81
 1545 07f5 5A040000 		.4byte	.LASF81
 1546 07f9 11       		.byte	0x11
 1547 07fa 2F       		.byte	0x2f
 1548 07fb 16       		.uleb128 0x16
 1549 07fc 15010000 		.4byte	.LASF82
 1550 0800 15010000 		.4byte	.LASF82
 1551 0804 12       		.byte	0x12
 1552 0805 19       		.byte	0x19
 1553 0806 16       		.uleb128 0x16
 1554 0807 BB010000 		.4byte	.LASF83
 1555 080b BB010000 		.4byte	.LASF83
 1556 080f 13       		.byte	0x13
 1557 0810 92       		.byte	0x92
 1558 0811 16       		.uleb128 0x16
 1559 0812 A6030000 		.4byte	.LASF84
 1560 0816 A6030000 		.4byte	.LASF84
 1561 081a 13       		.byte	0x13
 1562 081b C3       		.byte	0xc3
 1563 081c 16       		.uleb128 0x16
 1564 081d 4D010000 		.4byte	.LASF85
 1565 0821 4D010000 		.4byte	.LASF85
 1566 0825 13       		.byte	0x13
 1567 0826 DC       		.byte	0xdc
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cc3J0lph.s 			page 38


 1568 0827 16       		.uleb128 0x16
 1569 0828 5A020000 		.4byte	.LASF86
 1570 082c 5A020000 		.4byte	.LASF86
 1571 0830 14       		.byte	0x14
 1572 0831 92       		.byte	0x92
 1573 0832 16       		.uleb128 0x16
 1574 0833 F7040000 		.4byte	.LASF87
 1575 0837 F7040000 		.4byte	.LASF87
 1576 083b 14       		.byte	0x14
 1577 083c C3       		.byte	0xc3
 1578 083d 16       		.uleb128 0x16
 1579 083e 27060000 		.4byte	.LASF88
 1580 0842 27060000 		.4byte	.LASF88
 1581 0846 14       		.byte	0x14
 1582 0847 DC       		.byte	0xdc
 1583 0848 16       		.uleb128 0x16
 1584 0849 92050000 		.4byte	.LASF89
 1585 084d 92050000 		.4byte	.LASF89
 1586 0851 15       		.byte	0x15
 1587 0852 5A       		.byte	0x5a
 1588 0853 16       		.uleb128 0x16
 1589 0854 A0010000 		.4byte	.LASF90
 1590 0858 A0010000 		.4byte	.LASF90
 1591 085c 15       		.byte	0x15
 1592 085d 5E       		.byte	0x5e
 1593 085e 16       		.uleb128 0x16
 1594 085f BD000000 		.4byte	.LASF91
 1595 0863 BD000000 		.4byte	.LASF91
 1596 0867 16       		.byte	0x16
 1597 0868 18       		.byte	0x18
 1598 0869 16       		.uleb128 0x16
 1599 086a ED050000 		.4byte	.LASF92
 1600 086e ED050000 		.4byte	.LASF92
 1601 0872 17       		.byte	0x17
 1602 0873 18       		.byte	0x18
 1603 0874 16       		.uleb128 0x16
 1604 0875 A6070000 		.4byte	.LASF93
 1605 0879 A6070000 		.4byte	.LASF93
 1606 087d 18       		.byte	0x18
 1607 087e 92       		.byte	0x92
 1608 087f 16       		.uleb128 0x16
 1609 0880 C7070000 		.4byte	.LASF94
 1610 0884 C7070000 		.4byte	.LASF94
 1611 0888 19       		.byte	0x19
 1612 0889 92       		.byte	0x92
 1613 088a 16       		.uleb128 0x16
 1614 088b 14000000 		.4byte	.LASF95
 1615 088f 14000000 		.4byte	.LASF95
 1616 0893 07       		.byte	0x7
 1617 0894 13       		.byte	0x13
 1618 0895 16       		.uleb128 0x16
 1619 0896 62010000 		.4byte	.LASF96
 1620 089a 62010000 		.4byte	.LASF96
 1621 089e 0A       		.byte	0xa
 1622 089f 4F       		.byte	0x4f
 1623 08a0 16       		.uleb128 0x16
 1624 08a1 6C030000 		.4byte	.LASF97
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cc3J0lph.s 			page 39


 1625 08a5 6C030000 		.4byte	.LASF97
 1626 08a9 0B       		.byte	0xb
 1627 08aa 4F       		.byte	0x4f
 1628 08ab 16       		.uleb128 0x16
 1629 08ac EB070000 		.4byte	.LASF98
 1630 08b0 EB070000 		.4byte	.LASF98
 1631 08b4 09       		.byte	0x9
 1632 08b5 5A       		.byte	0x5a
 1633 08b6 16       		.uleb128 0x16
 1634 08b7 D0010000 		.4byte	.LASF99
 1635 08bb D0010000 		.4byte	.LASF99
 1636 08bf 1A       		.byte	0x1a
 1637 08c0 18       		.byte	0x18
 1638 08c1 16       		.uleb128 0x16
 1639 08c2 C5020000 		.4byte	.LASF100
 1640 08c6 C5020000 		.4byte	.LASF100
 1641 08ca 1B       		.byte	0x1b
 1642 08cb 18       		.byte	0x18
 1643 08cc 16       		.uleb128 0x16
 1644 08cd F3010000 		.4byte	.LASF101
 1645 08d1 F3010000 		.4byte	.LASF101
 1646 08d5 1C       		.byte	0x1c
 1647 08d6 18       		.byte	0x18
 1648 08d7 16       		.uleb128 0x16
 1649 08d8 A4020000 		.4byte	.LASF102
 1650 08dc A4020000 		.4byte	.LASF102
 1651 08e0 1D       		.byte	0x1d
 1652 08e1 0F       		.byte	0xf
 1653 08e2 16       		.uleb128 0x16
 1654 08e3 56000000 		.4byte	.LASF103
 1655 08e7 56000000 		.4byte	.LASF103
 1656 08eb 12       		.byte	0x12
 1657 08ec 1C       		.byte	0x1c
 1658 08ed 00       		.byte	0
 1659              		.section	.debug_abbrev,"",%progbits
 1660              	.Ldebug_abbrev0:
 1661 0000 01       		.uleb128 0x1
 1662 0001 11       		.uleb128 0x11
 1663 0002 01       		.byte	0x1
 1664 0003 25       		.uleb128 0x25
 1665 0004 0E       		.uleb128 0xe
 1666 0005 13       		.uleb128 0x13
 1667 0006 0B       		.uleb128 0xb
 1668 0007 03       		.uleb128 0x3
 1669 0008 0E       		.uleb128 0xe
 1670 0009 1B       		.uleb128 0x1b
 1671 000a 0E       		.uleb128 0xe
 1672 000b 55       		.uleb128 0x55
 1673 000c 17       		.uleb128 0x17
 1674 000d 11       		.uleb128 0x11
 1675 000e 01       		.uleb128 0x1
 1676 000f 10       		.uleb128 0x10
 1677 0010 17       		.uleb128 0x17
 1678 0011 00       		.byte	0
 1679 0012 00       		.byte	0
 1680 0013 02       		.uleb128 0x2
 1681 0014 24       		.uleb128 0x24
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cc3J0lph.s 			page 40


 1682 0015 00       		.byte	0
 1683 0016 0B       		.uleb128 0xb
 1684 0017 0B       		.uleb128 0xb
 1685 0018 3E       		.uleb128 0x3e
 1686 0019 0B       		.uleb128 0xb
 1687 001a 03       		.uleb128 0x3
 1688 001b 0E       		.uleb128 0xe
 1689 001c 00       		.byte	0
 1690 001d 00       		.byte	0
 1691 001e 03       		.uleb128 0x3
 1692 001f 16       		.uleb128 0x16
 1693 0020 00       		.byte	0
 1694 0021 03       		.uleb128 0x3
 1695 0022 0E       		.uleb128 0xe
 1696 0023 3A       		.uleb128 0x3a
 1697 0024 0B       		.uleb128 0xb
 1698 0025 3B       		.uleb128 0x3b
 1699 0026 0B       		.uleb128 0xb
 1700 0027 49       		.uleb128 0x49
 1701 0028 13       		.uleb128 0x13
 1702 0029 00       		.byte	0
 1703 002a 00       		.byte	0
 1704 002b 04       		.uleb128 0x4
 1705 002c 24       		.uleb128 0x24
 1706 002d 00       		.byte	0
 1707 002e 0B       		.uleb128 0xb
 1708 002f 0B       		.uleb128 0xb
 1709 0030 3E       		.uleb128 0x3e
 1710 0031 0B       		.uleb128 0xb
 1711 0032 03       		.uleb128 0x3
 1712 0033 08       		.uleb128 0x8
 1713 0034 00       		.byte	0
 1714 0035 00       		.byte	0
 1715 0036 05       		.uleb128 0x5
 1716 0037 2E       		.uleb128 0x2e
 1717 0038 01       		.byte	0x1
 1718 0039 3F       		.uleb128 0x3f
 1719 003a 19       		.uleb128 0x19
 1720 003b 03       		.uleb128 0x3
 1721 003c 08       		.uleb128 0x8
 1722 003d 3A       		.uleb128 0x3a
 1723 003e 0B       		.uleb128 0xb
 1724 003f 3B       		.uleb128 0x3b
 1725 0040 0B       		.uleb128 0xb
 1726 0041 27       		.uleb128 0x27
 1727 0042 19       		.uleb128 0x19
 1728 0043 11       		.uleb128 0x11
 1729 0044 01       		.uleb128 0x1
 1730 0045 12       		.uleb128 0x12
 1731 0046 06       		.uleb128 0x6
 1732 0047 40       		.uleb128 0x40
 1733 0048 18       		.uleb128 0x18
 1734 0049 9742     		.uleb128 0x2117
 1735 004b 19       		.uleb128 0x19
 1736 004c 01       		.uleb128 0x1
 1737 004d 13       		.uleb128 0x13
 1738 004e 00       		.byte	0
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cc3J0lph.s 			page 41


 1739 004f 00       		.byte	0
 1740 0050 06       		.uleb128 0x6
 1741 0051 898201   		.uleb128 0x4109
 1742 0054 00       		.byte	0
 1743 0055 11       		.uleb128 0x11
 1744 0056 01       		.uleb128 0x1
 1745 0057 31       		.uleb128 0x31
 1746 0058 13       		.uleb128 0x13
 1747 0059 00       		.byte	0
 1748 005a 00       		.byte	0
 1749 005b 07       		.uleb128 0x7
 1750 005c 2E       		.uleb128 0x2e
 1751 005d 01       		.byte	0x1
 1752 005e 3F       		.uleb128 0x3f
 1753 005f 19       		.uleb128 0x19
 1754 0060 03       		.uleb128 0x3
 1755 0061 0E       		.uleb128 0xe
 1756 0062 3A       		.uleb128 0x3a
 1757 0063 0B       		.uleb128 0xb
 1758 0064 3B       		.uleb128 0x3b
 1759 0065 0B       		.uleb128 0xb
 1760 0066 27       		.uleb128 0x27
 1761 0067 19       		.uleb128 0x19
 1762 0068 11       		.uleb128 0x11
 1763 0069 01       		.uleb128 0x1
 1764 006a 12       		.uleb128 0x12
 1765 006b 06       		.uleb128 0x6
 1766 006c 40       		.uleb128 0x40
 1767 006d 18       		.uleb128 0x18
 1768 006e 9742     		.uleb128 0x2117
 1769 0070 19       		.uleb128 0x19
 1770 0071 01       		.uleb128 0x1
 1771 0072 13       		.uleb128 0x13
 1772 0073 00       		.byte	0
 1773 0074 00       		.byte	0
 1774 0075 08       		.uleb128 0x8
 1775 0076 898201   		.uleb128 0x4109
 1776 0079 01       		.byte	0x1
 1777 007a 11       		.uleb128 0x11
 1778 007b 01       		.uleb128 0x1
 1779 007c 31       		.uleb128 0x31
 1780 007d 13       		.uleb128 0x13
 1781 007e 00       		.byte	0
 1782 007f 00       		.byte	0
 1783 0080 09       		.uleb128 0x9
 1784 0081 8A8201   		.uleb128 0x410a
 1785 0084 00       		.byte	0
 1786 0085 02       		.uleb128 0x2
 1787 0086 18       		.uleb128 0x18
 1788 0087 9142     		.uleb128 0x2111
 1789 0089 18       		.uleb128 0x18
 1790 008a 00       		.byte	0
 1791 008b 00       		.byte	0
 1792 008c 0A       		.uleb128 0xa
 1793 008d 2E       		.uleb128 0x2e
 1794 008e 01       		.byte	0x1
 1795 008f 3F       		.uleb128 0x3f
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cc3J0lph.s 			page 42


 1796 0090 19       		.uleb128 0x19
 1797 0091 03       		.uleb128 0x3
 1798 0092 0E       		.uleb128 0xe
 1799 0093 3A       		.uleb128 0x3a
 1800 0094 0B       		.uleb128 0xb
 1801 0095 3B       		.uleb128 0x3b
 1802 0096 0B       		.uleb128 0xb
 1803 0097 27       		.uleb128 0x27
 1804 0098 19       		.uleb128 0x19
 1805 0099 49       		.uleb128 0x49
 1806 009a 13       		.uleb128 0x13
 1807 009b 8701     		.uleb128 0x87
 1808 009d 19       		.uleb128 0x19
 1809 009e 11       		.uleb128 0x11
 1810 009f 01       		.uleb128 0x1
 1811 00a0 12       		.uleb128 0x12
 1812 00a1 06       		.uleb128 0x6
 1813 00a2 40       		.uleb128 0x40
 1814 00a3 18       		.uleb128 0x18
 1815 00a4 9742     		.uleb128 0x2117
 1816 00a6 19       		.uleb128 0x19
 1817 00a7 01       		.uleb128 0x1
 1818 00a8 13       		.uleb128 0x13
 1819 00a9 00       		.byte	0
 1820 00aa 00       		.byte	0
 1821 00ab 0B       		.uleb128 0xb
 1822 00ac 34       		.uleb128 0x34
 1823 00ad 00       		.byte	0
 1824 00ae 03       		.uleb128 0x3
 1825 00af 0E       		.uleb128 0xe
 1826 00b0 3A       		.uleb128 0x3a
 1827 00b1 0B       		.uleb128 0xb
 1828 00b2 3B       		.uleb128 0x3b
 1829 00b3 0B       		.uleb128 0xb
 1830 00b4 49       		.uleb128 0x49
 1831 00b5 13       		.uleb128 0x13
 1832 00b6 1C       		.uleb128 0x1c
 1833 00b7 0B       		.uleb128 0xb
 1834 00b8 00       		.byte	0
 1835 00b9 00       		.byte	0
 1836 00ba 0C       		.uleb128 0xc
 1837 00bb 898201   		.uleb128 0x4109
 1838 00be 01       		.byte	0x1
 1839 00bf 11       		.uleb128 0x11
 1840 00c0 01       		.uleb128 0x1
 1841 00c1 31       		.uleb128 0x31
 1842 00c2 13       		.uleb128 0x13
 1843 00c3 01       		.uleb128 0x1
 1844 00c4 13       		.uleb128 0x13
 1845 00c5 00       		.byte	0
 1846 00c6 00       		.byte	0
 1847 00c7 0D       		.uleb128 0xd
 1848 00c8 2E       		.uleb128 0x2e
 1849 00c9 01       		.byte	0x1
 1850 00ca 3F       		.uleb128 0x3f
 1851 00cb 19       		.uleb128 0x19
 1852 00cc 03       		.uleb128 0x3
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cc3J0lph.s 			page 43


 1853 00cd 0E       		.uleb128 0xe
 1854 00ce 3A       		.uleb128 0x3a
 1855 00cf 0B       		.uleb128 0xb
 1856 00d0 3B       		.uleb128 0x3b
 1857 00d1 05       		.uleb128 0x5
 1858 00d2 27       		.uleb128 0x27
 1859 00d3 19       		.uleb128 0x19
 1860 00d4 11       		.uleb128 0x11
 1861 00d5 01       		.uleb128 0x1
 1862 00d6 12       		.uleb128 0x12
 1863 00d7 06       		.uleb128 0x6
 1864 00d8 40       		.uleb128 0x40
 1865 00d9 18       		.uleb128 0x18
 1866 00da 9742     		.uleb128 0x2117
 1867 00dc 19       		.uleb128 0x19
 1868 00dd 01       		.uleb128 0x1
 1869 00de 13       		.uleb128 0x13
 1870 00df 00       		.byte	0
 1871 00e0 00       		.byte	0
 1872 00e1 0E       		.uleb128 0xe
 1873 00e2 34       		.uleb128 0x34
 1874 00e3 00       		.byte	0
 1875 00e4 03       		.uleb128 0x3
 1876 00e5 0E       		.uleb128 0xe
 1877 00e6 3A       		.uleb128 0x3a
 1878 00e7 0B       		.uleb128 0xb
 1879 00e8 3B       		.uleb128 0x3b
 1880 00e9 05       		.uleb128 0x5
 1881 00ea 49       		.uleb128 0x49
 1882 00eb 13       		.uleb128 0x13
 1883 00ec 02       		.uleb128 0x2
 1884 00ed 17       		.uleb128 0x17
 1885 00ee 00       		.byte	0
 1886 00ef 00       		.byte	0
 1887 00f0 0F       		.uleb128 0xf
 1888 00f1 34       		.uleb128 0x34
 1889 00f2 00       		.byte	0
 1890 00f3 03       		.uleb128 0x3
 1891 00f4 0E       		.uleb128 0xe
 1892 00f5 3A       		.uleb128 0x3a
 1893 00f6 0B       		.uleb128 0xb
 1894 00f7 3B       		.uleb128 0x3b
 1895 00f8 05       		.uleb128 0x5
 1896 00f9 49       		.uleb128 0x49
 1897 00fa 13       		.uleb128 0x13
 1898 00fb 3F       		.uleb128 0x3f
 1899 00fc 19       		.uleb128 0x19
 1900 00fd 3C       		.uleb128 0x3c
 1901 00fe 19       		.uleb128 0x19
 1902 00ff 00       		.byte	0
 1903 0100 00       		.byte	0
 1904 0101 10       		.uleb128 0x10
 1905 0102 35       		.uleb128 0x35
 1906 0103 00       		.byte	0
 1907 0104 49       		.uleb128 0x49
 1908 0105 13       		.uleb128 0x13
 1909 0106 00       		.byte	0
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cc3J0lph.s 			page 44


 1910 0107 00       		.byte	0
 1911 0108 11       		.uleb128 0x11
 1912 0109 34       		.uleb128 0x34
 1913 010a 00       		.byte	0
 1914 010b 03       		.uleb128 0x3
 1915 010c 0E       		.uleb128 0xe
 1916 010d 3A       		.uleb128 0x3a
 1917 010e 0B       		.uleb128 0xb
 1918 010f 3B       		.uleb128 0x3b
 1919 0110 0B       		.uleb128 0xb
 1920 0111 49       		.uleb128 0x49
 1921 0112 13       		.uleb128 0x13
 1922 0113 3F       		.uleb128 0x3f
 1923 0114 19       		.uleb128 0x19
 1924 0115 02       		.uleb128 0x2
 1925 0116 18       		.uleb128 0x18
 1926 0117 00       		.byte	0
 1927 0118 00       		.byte	0
 1928 0119 12       		.uleb128 0x12
 1929 011a 01       		.uleb128 0x1
 1930 011b 01       		.byte	0x1
 1931 011c 49       		.uleb128 0x49
 1932 011d 13       		.uleb128 0x13
 1933 011e 01       		.uleb128 0x1
 1934 011f 13       		.uleb128 0x13
 1935 0120 00       		.byte	0
 1936 0121 00       		.byte	0
 1937 0122 13       		.uleb128 0x13
 1938 0123 21       		.uleb128 0x21
 1939 0124 00       		.byte	0
 1940 0125 49       		.uleb128 0x49
 1941 0126 13       		.uleb128 0x13
 1942 0127 2F       		.uleb128 0x2f
 1943 0128 0B       		.uleb128 0xb
 1944 0129 00       		.byte	0
 1945 012a 00       		.byte	0
 1946 012b 14       		.uleb128 0x14
 1947 012c 34       		.uleb128 0x34
 1948 012d 00       		.byte	0
 1949 012e 03       		.uleb128 0x3
 1950 012f 0E       		.uleb128 0xe
 1951 0130 3A       		.uleb128 0x3a
 1952 0131 0B       		.uleb128 0xb
 1953 0132 3B       		.uleb128 0x3b
 1954 0133 0B       		.uleb128 0xb
 1955 0134 49       		.uleb128 0x49
 1956 0135 13       		.uleb128 0x13
 1957 0136 3F       		.uleb128 0x3f
 1958 0137 19       		.uleb128 0x19
 1959 0138 3C       		.uleb128 0x3c
 1960 0139 19       		.uleb128 0x19
 1961 013a 00       		.byte	0
 1962 013b 00       		.byte	0
 1963 013c 15       		.uleb128 0x15
 1964 013d 26       		.uleb128 0x26
 1965 013e 00       		.byte	0
 1966 013f 49       		.uleb128 0x49
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cc3J0lph.s 			page 45


 1967 0140 13       		.uleb128 0x13
 1968 0141 00       		.byte	0
 1969 0142 00       		.byte	0
 1970 0143 16       		.uleb128 0x16
 1971 0144 2E       		.uleb128 0x2e
 1972 0145 00       		.byte	0
 1973 0146 3F       		.uleb128 0x3f
 1974 0147 19       		.uleb128 0x19
 1975 0148 3C       		.uleb128 0x3c
 1976 0149 19       		.uleb128 0x19
 1977 014a 6E       		.uleb128 0x6e
 1978 014b 0E       		.uleb128 0xe
 1979 014c 03       		.uleb128 0x3
 1980 014d 0E       		.uleb128 0xe
 1981 014e 3A       		.uleb128 0x3a
 1982 014f 0B       		.uleb128 0xb
 1983 0150 3B       		.uleb128 0x3b
 1984 0151 0B       		.uleb128 0xb
 1985 0152 00       		.byte	0
 1986 0153 00       		.byte	0
 1987 0154 00       		.byte	0
 1988              		.section	.debug_loc,"",%progbits
 1989              	.Ldebug_loc0:
 1990              	.LLST0:
 1991 0000 02000000 		.4byte	.LVL47
 1992 0004 12000000 		.4byte	.LVL49
 1993 0008 0200     		.2byte	0x2
 1994 000a 30       		.byte	0x30
 1995 000b 9F       		.byte	0x9f
 1996 000c 12000000 		.4byte	.LVL49
 1997 0010 3C000000 		.4byte	.LVL56
 1998 0014 0100     		.2byte	0x1
 1999 0016 55       		.byte	0x55
 2000 0017 00000000 		.4byte	0
 2001 001b 00000000 		.4byte	0
 2002              	.LLST1:
 2003 001f 1E000000 		.4byte	.LVL52
 2004 0023 20000000 		.4byte	.LVL53
 2005 0027 0100     		.2byte	0x1
 2006 0029 50       		.byte	0x50
 2007 002a 20000000 		.4byte	.LVL53
 2008 002e 36000000 		.4byte	.LVL55
 2009 0032 0100     		.2byte	0x1
 2010 0034 54       		.byte	0x54
 2011 0035 00000000 		.4byte	0
 2012 0039 00000000 		.4byte	0
 2013              		.section	.debug_aranges,"",%progbits
 2014 0000 4C000000 		.4byte	0x4c
 2015 0004 0200     		.2byte	0x2
 2016 0006 00000000 		.4byte	.Ldebug_info0
 2017 000a 04       		.byte	0x4
 2018 000b 00       		.byte	0
 2019 000c 0000     		.2byte	0
 2020 000e 0000     		.2byte	0
 2021 0010 00000000 		.4byte	.LFB64
 2022 0014 08000000 		.4byte	.LFE64-.LFB64
 2023 0018 00000000 		.4byte	.LFB65
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cc3J0lph.s 			page 46


 2024 001c 20000000 		.4byte	.LFE65-.LFB65
 2025 0020 00000000 		.4byte	.LFB66
 2026 0024 08000000 		.4byte	.LFE66-.LFB66
 2027 0028 00000000 		.4byte	.LFB67
 2028 002c 08000000 		.4byte	.LFE67-.LFB67
 2029 0030 00000000 		.4byte	.LFB68
 2030 0034 28000000 		.4byte	.LFE68-.LFB68
 2031 0038 00000000 		.4byte	.LFB69
 2032 003c 04010000 		.4byte	.LFE69-.LFB69
 2033 0040 00000000 		.4byte	.LFB70
 2034 0044 44000000 		.4byte	.LFE70-.LFB70
 2035 0048 00000000 		.4byte	0
 2036 004c 00000000 		.4byte	0
 2037              		.section	.debug_ranges,"",%progbits
 2038              	.Ldebug_ranges0:
 2039 0000 00000000 		.4byte	.LFB64
 2040 0004 08000000 		.4byte	.LFE64
 2041 0008 00000000 		.4byte	.LFB65
 2042 000c 20000000 		.4byte	.LFE65
 2043 0010 00000000 		.4byte	.LFB66
 2044 0014 08000000 		.4byte	.LFE66
 2045 0018 00000000 		.4byte	.LFB67
 2046 001c 08000000 		.4byte	.LFE67
 2047 0020 00000000 		.4byte	.LFB68
 2048 0024 28000000 		.4byte	.LFE68
 2049 0028 00000000 		.4byte	.LFB69
 2050 002c 04010000 		.4byte	.LFE69
 2051 0030 00000000 		.4byte	.LFB70
 2052 0034 44000000 		.4byte	.LFE70
 2053 0038 00000000 		.4byte	0
 2054 003c 00000000 		.4byte	0
 2055              		.section	.debug_line,"",%progbits
 2056              	.Ldebug_line0:
 2057 0000 B6030000 		.section	.debug_str,"MS",%progbits,1
 2057      0200FE02 
 2057      00000201 
 2057      FB0E0D00 
 2057      01010101 
 2058              	.LASF40:
 2059 0000 6D6F746F 		.ascii	"motor2EncoderCounts\000"
 2059      7232456E 
 2059      636F6465 
 2059      72436F75 
 2059      6E747300 
 2060              	.LASF95:
 2061 0014 6D6F746F 		.ascii	"motorDutyCycleUpdate\000"
 2061      72447574 
 2061      79437963 
 2061      6C655570 
 2061      64617465 
 2062              	.LASF23:
 2063 0029 7075636B 		.ascii	"puck_correct\000"
 2063      5F636F72 
 2063      72656374 
 2063      00
 2064              	.LASF18:
 2065 0036 456E636F 		.ascii	"Encoder_Counts_2_IH\000"
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cc3J0lph.s 			page 47


 2065      6465725F 
 2065      436F756E 
 2065      74735F32 
 2065      5F494800 
 2066              	.LASF0:
 2067 004a 7369676E 		.ascii	"signed char\000"
 2067      65642063 
 2067      68617200 
 2068              	.LASF103:
 2069 0056 636F6C6F 		.ascii	"colourSensingOutput\000"
 2069      75725365 
 2069      6E73696E 
 2069      674F7574 
 2069      70757400 
 2070              	.LASF35:
 2071 006a 7475726E 		.ascii	"turningLeftFlag\000"
 2071      696E674C 
 2071      65667446 
 2071      6C616700 
 2072              	.LASF55:
 2073 007a 7075636B 		.ascii	"puckConstructionPlan\000"
 2073      436F6E73 
 2073      74727563 
 2073      74696F6E 
 2073      506C616E 
 2074              	.LASF2:
 2075 008f 73686F72 		.ascii	"short int\000"
 2075      7420696E 
 2075      7400
 2076              	.LASF67:
 2077 0099 73746F70 		.ascii	"stopMotor2AndUpdate\000"
 2077      4D6F746F 
 2077      7232416E 
 2077      64557064 
 2077      61746500 
 2078              	.LASF44:
 2079 00ad 63757272 		.ascii	"currentPosition\000"
 2079      656E7450 
 2079      6F736974 
 2079      696F6E00 
 2080              	.LASF91:
 2081 00bd 536F6E69 		.ascii	"Sonic_StartEx\000"
 2081      635F5374 
 2081      61727445 
 2081      7800
 2082              	.LASF33:
 2083 00cb 64726976 		.ascii	"drivingForwardFlag\000"
 2083      696E6746 
 2083      6F727761 
 2083      7264466C 
 2083      616700
 2084              	.LASF20:
 2085 00de 636F6C6F 		.ascii	"colour_calibration\000"
 2085      75725F63 
 2085      616C6962 
 2085      72617469 
 2085      6F6E00
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cc3J0lph.s 			page 48


 2086              	.LASF57:
 2087 00f1 62656769 		.ascii	"beginNavigation\000"
 2087      6E4E6176 
 2087      69676174 
 2087      696F6E00 
 2088              	.LASF39:
 2089 0101 6D6F746F 		.ascii	"motor1EncoderCounts\000"
 2089      7231456E 
 2089      636F6465 
 2089      72436F75 
 2089      6E747300 
 2090              	.LASF82:
 2091 0115 436F6C6F 		.ascii	"ColourSensingInitialise\000"
 2091      75725365 
 2091      6E73696E 
 2091      67496E69 
 2091      7469616C 
 2092              	.LASF47:
 2093 012d 64657369 		.ascii	"desiredOrientation\000"
 2093      7265644F 
 2093      7269656E 
 2093      74617469 
 2093      6F6E00
 2094              	.LASF107:
 2095 0140 6D61696E 		.ascii	"main\000"
 2095      00
 2096              	.LASF16:
 2097 0145 53746172 		.ascii	"StartIH\000"
 2097      74494800 
 2098              	.LASF85:
 2099 014d 5261636B 		.ascii	"Rack_Servo_PWM_Sleep\000"
 2099      5F536572 
 2099      766F5F50 
 2099      574D5F53 
 2099      6C656570 
 2100              	.LASF96:
 2101 0162 4D6F746F 		.ascii	"Motor_1_Encoder_Counts_Start\000"
 2101      725F315F 
 2101      456E636F 
 2101      6465725F 
 2101      436F756E 
 2102              	.LASF52:
 2103 017f 6D6F7665 		.ascii	"moveBackwardAllowed\000"
 2103      4261636B 
 2103      77617264 
 2103      416C6C6F 
 2103      77656400 
 2104              	.LASF72:
 2105 0193 64726966 		.ascii	"driftCorrect\000"
 2105      74436F72 
 2105      72656374 
 2105      00
 2106              	.LASF90:
 2107 01a0 54696D65 		.ascii	"Timer_1_ReadStatusRegister\000"
 2107      725F315F 
 2107      52656164 
 2107      53746174 
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cc3J0lph.s 			page 49


 2107      75735265 
 2108              	.LASF83:
 2109 01bb 5261636B 		.ascii	"Rack_Servo_PWM_Start\000"
 2109      5F536572 
 2109      766F5F50 
 2109      574D5F53 
 2109      74617274 
 2110              	.LASF99:
 2111 01d0 456E636F 		.ascii	"Encoder_Counts_1_Interrupt_StartEx\000"
 2111      6465725F 
 2111      436F756E 
 2111      74735F31 
 2111      5F496E74 
 2112              	.LASF101:
 2113 01f3 44726966 		.ascii	"Drift_Check_Interrupt_StartEx\000"
 2113      745F4368 
 2113      65636B5F 
 2113      496E7465 
 2113      72727570 
 2114              	.LASF26:
 2115 0211 64726976 		.ascii	"driveStraightEnable\000"
 2115      65537472 
 2115      61696768 
 2115      74456E61 
 2115      626C6500 
 2116              	.LASF29:
 2117 0225 7075636B 		.ascii	"puckRackOffsetsFromWest\000"
 2117      5261636B 
 2117      4F666673 
 2117      65747346 
 2117      726F6D57 
 2118              	.LASF54:
 2119 023d 63757272 		.ascii	"currentPuckStackSize\000"
 2119      656E7450 
 2119      75636B53 
 2119      7461636B 
 2119      53697A65 
 2120              	.LASF53:
 2121 0252 72756E6E 		.ascii	"running\000"
 2121      696E6700 
 2122              	.LASF86:
 2123 025a 47726970 		.ascii	"Gripper_Servo_PWM_Start\000"
 2123      7065725F 
 2123      53657276 
 2123      6F5F5057 
 2123      4D5F5374 
 2124              	.LASF64:
 2125 0272 756C7472 		.ascii	"ultrasonicInterruptHandler\000"
 2125      61736F6E 
 2125      6963496E 
 2125      74657272 
 2125      75707448 
 2126              	.LASF36:
 2127 028d 7475726E 		.ascii	"turningRightFlag\000"
 2127      696E6752 
 2127      69676874 
 2127      466C6167 
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cc3J0lph.s 			page 50


 2127      00
 2128              	.LASF11:
 2129 029e 666C6F61 		.ascii	"float\000"
 2129      7400
 2130              	.LASF102:
 2131 02a4 6368616E 		.ascii	"changeHeightToPuck\000"
 2131      67654865 
 2131      69676874 
 2131      546F5075 
 2131      636B00
 2132              	.LASF6:
 2133 02b7 6C6F6E67 		.ascii	"long long int\000"
 2133      206C6F6E 
 2133      6720696E 
 2133      7400
 2134              	.LASF100:
 2135 02c5 456E636F 		.ascii	"Encoder_Counts_2_Interrupt_StartEx\000"
 2135      6465725F 
 2135      436F756E 
 2135      74735F32 
 2135      5F496E74 
 2136              	.LASF68:
 2137 02e8 44726966 		.ascii	"Drift_Check_Timer_ReadStatusRegister\000"
 2137      745F4368 
 2137      65636B5F 
 2137      54696D65 
 2137      725F5265 
 2138              	.LASF59:
 2139 030d 70617468 		.ascii	"pathPastBlock\000"
 2139      50617374 
 2139      426C6F63 
 2139      6B00
 2140              	.LASF76:
 2141 031b 4144435F 		.ascii	"ADC_Start\000"
 2141      53746172 
 2141      7400
 2142              	.LASF4:
 2143 0325 6C6F6E67 		.ascii	"long int\000"
 2143      20696E74 
 2143      00
 2144              	.LASF80:
 2145 032e 636F6E74 		.ascii	"control_photodiode_Write\000"
 2145      726F6C5F 
 2145      70686F74 
 2145      6F64696F 
 2145      64655F57 
 2146              	.LASF34:
 2147 0347 64726976 		.ascii	"drivingBackwardFlag\000"
 2147      696E6742 
 2147      61636B77 
 2147      61726446 
 2147      6C616700 
 2148              	.LASF32:
 2149 035b 7075636B 		.ascii	"puckPileLocation\000"
 2149      50696C65 
 2149      4C6F6361 
 2149      74696F6E 
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cc3J0lph.s 			page 51


 2149      00
 2150              	.LASF97:
 2151 036c 4D6F746F 		.ascii	"Motor_2_Encoder_Counts_Start\000"
 2151      725F325F 
 2151      456E636F 
 2151      6465725F 
 2151      436F756E 
 2152              	.LASF27:
 2153 0389 63757272 		.ascii	"currentPuckRackScanningIndex\000"
 2153      656E7450 
 2153      75636B52 
 2153      61636B53 
 2153      63616E6E 
 2154              	.LASF84:
 2155 03a6 5261636B 		.ascii	"Rack_Servo_PWM_WriteCompare\000"
 2155      5F536572 
 2155      766F5F50 
 2155      574D5F57 
 2155      72697465 
 2156              	.LASF69:
 2157 03c2 44726966 		.ascii	"Drift_Check_Timer_Stop\000"
 2157      745F4368 
 2157      65636B5F 
 2157      54696D65 
 2157      725F5374 
 2158              	.LASF74:
 2159 03d9 55415254 		.ascii	"UART_1_Start\000"
 2159      5F315F53 
 2159      74617274 
 2159      00
 2160              	.LASF41:
 2161 03e6 636F6C6F 		.ascii	"colour_flag\000"
 2161      75725F66 
 2161      6C616700 
 2162              	.LASF14:
 2163 03f2 6C6F6E67 		.ascii	"long double\000"
 2163      20646F75 
 2163      626C6500 
 2164              	.LASF1:
 2165 03fe 756E7369 		.ascii	"unsigned char\000"
 2165      676E6564 
 2165      20636861 
 2165      7200
 2166              	.LASF78:
 2167 040c 49444143 		.ascii	"IDAC8_1_SetRange\000"
 2167      385F315F 
 2167      53657452 
 2167      616E6765 
 2167      00
 2168              	.LASF22:
 2169 041d 61726D4D 		.ascii	"armMoving\000"
 2169      6F76696E 
 2169      6700
 2170              	.LASF48:
 2171 0427 6D6F7665 		.ascii	"moveNow\000"
 2171      4E6F7700 
 2172              	.LASF31:
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cc3J0lph.s 			page 52


 2173 042f 626C6F63 		.ascii	"block_edge_location\000"
 2173      6B5F6564 
 2173      67655F6C 
 2173      6F636174 
 2173      696F6E00 
 2174              	.LASF7:
 2175 0443 6C6F6E67 		.ascii	"long long unsigned int\000"
 2175      206C6F6E 
 2175      6720756E 
 2175      7369676E 
 2175      65642069 
 2176              	.LASF81:
 2177 045a 636F6E74 		.ascii	"control_led_Write\000"
 2177      726F6C5F 
 2177      6C65645F 
 2177      57726974 
 2177      6500
 2178              	.LASF21:
 2179 046c 73657276 		.ascii	"servo_testing\000"
 2179      6F5F7465 
 2179      7374696E 
 2179      6700
 2180              	.LASF8:
 2181 047a 756E7369 		.ascii	"unsigned int\000"
 2181      676E6564 
 2181      20696E74 
 2181      00
 2182              	.LASF60:
 2183 0487 69646163 		.ascii	"idac_value\000"
 2183      5F76616C 
 2183      756500
 2184              	.LASF71:
 2185 0492 4D6F746F 		.ascii	"Motor_2_Encoder_Counts_ReadCounter\000"
 2185      725F325F 
 2185      456E636F 
 2185      6465725F 
 2185      436F756E 
 2186              	.LASF77:
 2187 04b5 49444143 		.ascii	"IDAC8_1_Start\000"
 2187      385F315F 
 2187      53746172 
 2187      7400
 2188              	.LASF46:
 2189 04c3 63757272 		.ascii	"currentOrientation\000"
 2189      656E744F 
 2189      7269656E 
 2189      74617469 
 2189      6F6E00
 2190              	.LASF51:
 2191 04d6 6D6F7665 		.ascii	"moveForwardAllowed\000"
 2191      466F7277 
 2191      61726441 
 2191      6C6C6F77 
 2191      656400
 2192              	.LASF63:
 2193 04e9 63757272 		.ascii	"current_stage\000"
 2193      656E745F 
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cc3J0lph.s 			page 53


 2193      73746167 
 2193      6500
 2194              	.LASF87:
 2195 04f7 47726970 		.ascii	"Gripper_Servo_PWM_WriteCompare\000"
 2195      7065725F 
 2195      53657276 
 2195      6F5F5057 
 2195      4D5F5772 
 2196              	.LASF73:
 2197 0516 5449415F 		.ascii	"TIA_1_Start\000"
 2197      315F5374 
 2197      61727400 
 2198              	.LASF30:
 2199 0522 73776565 		.ascii	"sweeping\000"
 2199      70696E67 
 2199      00
 2200              	.LASF13:
 2201 052b 63686172 		.ascii	"char\000"
 2201      00
 2202              	.LASF10:
 2203 0530 696E7433 		.ascii	"int32_t\000"
 2203      325F7400 
 2204              	.LASF62:
 2205 0538 504C414E 		.ascii	"PLAN_SCAN_VERTICAL\000"
 2205      5F534341 
 2205      4E5F5645 
 2205      52544943 
 2205      414C00
 2206              	.LASF56:
 2207 054b 686F7269 		.ascii	"horizontalPuckGrid\000"
 2207      7A6F6E74 
 2207      616C5075 
 2207      636B4772 
 2207      696400
 2208              	.LASF61:
 2209 055e 636F6C6F 		.ascii	"colour_sensing_algorithm\000"
 2209      75725F73 
 2209      656E7369 
 2209      6E675F61 
 2209      6C676F72 
 2210              	.LASF43:
 2211 0577 6D6F7669 		.ascii	"moving\000"
 2211      6E6700
 2212              	.LASF66:
 2213 057e 73746F70 		.ascii	"stopMotor1AndUpdate\000"
 2213      4D6F746F 
 2213      7231416E 
 2213      64557064 
 2213      61746500 
 2214              	.LASF89:
 2215 0592 54696D65 		.ascii	"Timer_1_Start\000"
 2215      725F315F 
 2215      53746172 
 2215      7400
 2216              	.LASF45:
 2217 05a0 64657369 		.ascii	"desiredPosition\000"
 2217      72656450 
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cc3J0lph.s 			page 54


 2217      6F736974 
 2217      696F6E00 
 2218              	.LASF3:
 2219 05b0 73686F72 		.ascii	"short unsigned int\000"
 2219      7420756E 
 2219      7369676E 
 2219      65642069 
 2219      6E7400
 2220              	.LASF79:
 2221 05c3 49444143 		.ascii	"IDAC8_1_SetValue\000"
 2221      385F315F 
 2221      53657456 
 2221      616C7565 
 2221      00
 2222              	.LASF105:
 2223 05d4 6D61696E 		.ascii	"main.c\000"
 2223      2E6300
 2224              	.LASF5:
 2225 05db 6C6F6E67 		.ascii	"long unsigned int\000"
 2225      20756E73 
 2225      69676E65 
 2225      6420696E 
 2225      7400
 2226              	.LASF92:
 2227 05ed 53746172 		.ascii	"Start_StartEx\000"
 2227      745F5374 
 2227      61727445 
 2227      7800
 2228              	.LASF12:
 2229 05fb 646F7562 		.ascii	"double\000"
 2229      6C6500
 2230              	.LASF75:
 2231 0602 55415254 		.ascii	"UART_1_PutString\000"
 2231      5F315F50 
 2231      75745374 
 2231      72696E67 
 2231      00
 2232              	.LASF17:
 2233 0613 456E636F 		.ascii	"Encoder_Counts_1_IH\000"
 2233      6465725F 
 2233      436F756E 
 2233      74735F31 
 2233      5F494800 
 2234              	.LASF88:
 2235 0627 47726970 		.ascii	"Gripper_Servo_PWM_Sleep\000"
 2235      7065725F 
 2235      53657276 
 2235      6F5F5057 
 2235      4D5F536C 
 2236              	.LASF42:
 2237 063f 73746174 		.ascii	"state\000"
 2237      6500
 2238              	.LASF19:
 2239 0645 44726966 		.ascii	"Drift_Check_IH\000"
 2239      745F4368 
 2239      65636B5F 
 2239      494800
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cc3J0lph.s 			page 55


 2240              	.LASF24:
 2241 0654 7075636B 		.ascii	"puck_scan\000"
 2241      5F736361 
 2241      6E00
 2242              	.LASF9:
 2243 065e 5F5F696E 		.ascii	"__int32_t\000"
 2243      7433325F 
 2243      7400
 2244              	.LASF28:
 2245 0668 7075636B 		.ascii	"puckRackColours\000"
 2245      5261636B 
 2245      436F6C6F 
 2245      75727300 
 2246              	.LASF106:
 2247 0678 433A5C55 		.ascii	"C:\\Users\\Misha\\Documents\\PSoC Creator\\ECE3091_"
 2247      73657273 
 2247      5C4D6973 
 2247      68615C44 
 2247      6F63756D 
 2248 06a6 47726F75 		.ascii	"Group17\\Group17RobotReal\\Group17Robot.cydsn\000"
 2248      7031375C 
 2248      47726F75 
 2248      70313752 
 2248      6F626F74 
 2249              	.LASF49:
 2250 06d2 6D6F7665 		.ascii	"moveLeftAllowed\000"
 2250      4C656674 
 2250      416C6C6F 
 2250      77656400 
 2251              	.LASF15:
 2252 06e2 73697A65 		.ascii	"sizetype\000"
 2252      74797065 
 2252      00
 2253              	.LASF38:
 2254 06eb 6F757470 		.ascii	"output\000"
 2254      757400
 2255              	.LASF50:
 2256 06f2 6D6F7665 		.ascii	"moveRightAllowed\000"
 2256      52696768 
 2256      74416C6C 
 2256      6F776564 
 2256      00
 2257              	.LASF25:
 2258 0703 49544D5F 		.ascii	"ITM_RxBuffer\000"
 2258      52784275 
 2258      66666572 
 2258      00
 2259              	.LASF104:
 2260 0710 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 2260      43313120 
 2260      352E342E 
 2260      31203230 
 2260      31363036 
 2261 0743 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 2261      20726576 
 2261      6973696F 
 2261      6E203233 
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cc3J0lph.s 			page 56


 2261      37373135 
 2262 0776 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 2262      66756E63 
 2262      74696F6E 
 2262      2D736563 
 2262      74696F6E 
 2263              	.LASF65:
 2264 079e 43794465 		.ascii	"CyDelay\000"
 2264      6C617900 
 2265              	.LASF93:
 2266 07a6 4D6F746F 		.ascii	"Motor_1_driver_Start\000"
 2266      725F315F 
 2266      64726976 
 2266      65725F53 
 2266      74617274 
 2267              	.LASF58:
 2268 07bb 70617468 		.ascii	"pathToPucks\000"
 2268      546F5075 
 2268      636B7300 
 2269              	.LASF94:
 2270 07c7 4D6F746F 		.ascii	"Motor_2_driver_Start\000"
 2270      725F325F 
 2270      64726976 
 2270      65725F53 
 2270      74617274 
 2271              	.LASF37:
 2272 07dc 696E6974 		.ascii	"initialisation\000"
 2272      69616C69 
 2272      73617469 
 2272      6F6E00
 2273              	.LASF98:
 2274 07eb 44726966 		.ascii	"Drift_Check_Timer_Start\000"
 2274      745F4368 
 2274      65636B5F 
 2274      54696D65 
 2274      725F5374 
 2275              	.LASF70:
 2276 0803 4D6F746F 		.ascii	"Motor_1_Encoder_Counts_ReadCounter\000"
 2276      725F315F 
 2276      456E636F 
 2276      6465725F 
 2276      436F756E 
 2277              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
