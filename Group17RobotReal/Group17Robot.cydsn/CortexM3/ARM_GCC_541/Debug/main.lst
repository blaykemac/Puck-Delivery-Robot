ARM GAS  C:\Users\Misha\AppData\Local\Temp\cccxI4fz.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.TIH,"ax",%progbits
  20              		.align	2
  21              		.global	TIH
  22              		.thumb
  23              		.thumb_func
  24              		.type	TIH, %function
  25              	TIH:
  26              	.LFB64:
  27              		.file 1 "main.c"
   1:main.c        **** 
   2:main.c        **** /* ========================================
   3:main.c        ****  *
   4:main.c        ****  * Copyright Group 17, 2019
   5:main.c        ****  * All Rights Reserved
   6:main.c        ****  * UNPUBLISHED, LICENSED SOFTWARE.
   7:main.c        ****  *
   8:main.c        ****  * CONFIDENTIAL AND PROPRIETARY INFORMATION
   9:main.c        ****  * WHICH IS THE PROPERTY OF Blayke, Misha, Nidhin.
  10:main.c        ****  *
  11:main.c        ****  * ========================================
  12:main.c        **** */
  13:main.c        **** 
  14:main.c        **** // * PSOC LIBRARY * //
  15:main.c        **** #include "project.h"
  16:main.c        **** 
  17:main.c        **** // * C LIBRARIES * // 
  18:main.c        **** #include <stdlib.h>
  19:main.c        **** #include <stdio.h>
  20:main.c        **** #include <math.h>
  21:main.c        **** 
  22:main.c        **** // * OUR LIBRARIES * //
  23:main.c        **** #include "main.h"
  24:main.c        **** #include "colour.h"
  25:main.c        **** #include "ultrasonic.h" 
  26:main.c        **** #include "servo.h"
  27:main.c        **** #include "mishamotor.h"
  28:main.c        **** #include "customMath.h"
  29:main.c        **** 
  30:main.c        **** 
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cccxI4fz.s 			page 2


  31:main.c        **** extern char output[32];   
  32:main.c        **** 
  33:main.c        **** // * STATE VARIABLES * //
  34:main.c        **** int state = STATE_SCAN_PLAN;
  35:main.c        **** int running = 1;
  36:main.c        **** int sweeping = 0;
  37:main.c        **** float block_edge_location[4] = {0,0,0,0}; // N E S W edge positions respectively
  38:main.c        **** 
  39:main.c        **** // * PUCK CONSTRUCTION VARIABLES * //
  40:main.c        **** int currentPuckStackSize = 0; // How many pucks are currently on the construction plate
  41:main.c        **** int puckRackColours[5] = {BLANK,BLANK,BLANK,BLANK,BLANK}; // 5 slots in puck rack.
  42:main.c        **** int puckConstructionPlan[3] = {BLANK,BLANK,BLANK};
  43:main.c        **** int currentPuckRackScanningIndex = 0;
  44:main.c        **** int puckRackOffsetsFromWest[5] = {PUCK_RACK_0_WEST_DISTANCE,
  45:main.c        ****                                 PUCK_RACK_1_WEST_DISTANCE,
  46:main.c        ****                                 PUCK_RACK_2_WEST_DISTANCE,
  47:main.c        ****                                 PUCK_RACK_3_WEST_DISTANCE,
  48:main.c        ****                                 PUCK_RACK_4_WEST_DISTANCE };
  49:main.c        **** 
  50:main.c        **** float horizontalPuckGrid = 0;
  51:main.c        **** 
  52:main.c        **** // * NAVIGATION AND POSITION VARIABLES * //
  53:main.c        **** 
  54:main.c        **** int beginNavigation = 0; // Allow us to break out of the intial phase when powered up
  55:main.c        **** 
  56:main.c        **** int pathToPucks; // This will give us a corridor that we should initially take when trying to go to
  57:main.c        **** int pathPastBlock;
  58:main.c        **** 
  59:main.c        **** float currentPosition[2] = {0,0};
  60:main.c        **** float desiredPosition[2];
  61:main.c        **** int currentOrientation = 90; //in degrees (convert to radians when needed)- 90 assuming we start fa
  62:main.c        **** int desiredOrientation;
  63:main.c        **** 
  64:main.c        **** short int moveNow = 1; //This is a flag that lets the main program tell the moving functions
  65:main.c        **** //whethe we want the robot to be moving or not. For example, when we need to operate servos
  66:main.c        **** //the main program would set moveNow to FALSE.
  67:main.c        **** 
  68:main.c        **** //The four flags below let the rest of the program know if the robot is trying to drive 
  69:main.c        **** //forward or back, turn left or right. At the start of every motion, turn these flags on
  70:main.c        **** //at the end turn them off.
  71:main.c        **** short int drivingForwardFlag = 0;
  72:main.c        **** short int drivingBackwardFlag = 0;
  73:main.c        **** short int turningLeftFlag = 0;
  74:main.c        **** short int turningRightFlag = 0;
  75:main.c        **** 
  76:main.c        **** //These flags will be used by the main program to allow the robot to move in certain directions
  77:main.c        **** short int moveLeftAllowed;
  78:main.c        **** short int moveRightAllowed;
  79:main.c        **** short int moveForwardAllowed;
  80:main.c        **** short int moveBackwardAllowed;
  81:main.c        **** 
  82:main.c        **** 
  83:main.c        **** // * COLOUR VARIABLES * //
  84:main.c        **** 
  85:main.c        **** int idac_value = 0;  
  86:main.c        **** int colour_flag = 1;                    // sets which photodiode to use 
  87:main.c        **** int colour_sensing_algorithm = 0;      // Determines which colour sensing algorithm to use:
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cccxI4fz.s 			page 3


  88:main.c        ****                                                 // 0: Wall algorithm
  89:main.c        ****                                             // 1: Claw algorithm
  90:main.c        ****                                                 // 2: old algorithm
  91:main.c        **** 
  92:main.c        **** int moving = 0; // Temp to stop while loop from repeated runs of scanning plan code
  93:main.c        **** 
  94:main.c        **** const int PLAN_SCAN_VERTICAL = 10; // Set to ultrasonic distance at the home base 
  95:main.c        **** 
  96:main.c        **** int current_stage = 1;      // There are 3 stages, we start at 1
  97:main.c        **** 
  98:main.c        **** 
  99:main.c        **** // GLOBAL VARIABLE
 100:main.c        **** int distance_returned_global;
 101:main.c        **** 
 102:main.c        **** 
 103:main.c        **** // * INTERRUPT HANDLING * // 
 104:main.c        **** CY_ISR(TIH)                             // Ultrasonic ISR Definition
 105:main.c        **** {
  28              		.loc 1 105 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 08B5     		push	{r3, lr}
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 3, -8
  35              		.cfi_offset 14, -4
 106:main.c        ****     ultrasonicInterruptHandler();
  36              		.loc 1 106 0
  37 0002 FFF7FEFF 		bl	ultrasonicInterruptHandler
  38              	.LVL0:
  39 0006 08BD     		pop	{r3, pc}
  40              		.cfi_endproc
  41              	.LFE64:
  42              		.size	TIH, .-TIH
  43              		.section	.text.StartIH,"ax",%progbits
  44              		.align	2
  45              		.global	StartIH
  46              		.thumb
  47              		.thumb_func
  48              		.type	StartIH, %function
  49              	StartIH:
  50              	.LFB65:
 107:main.c        **** }
 108:main.c        **** 
 109:main.c        **** CY_ISR(StartIH)                             // Ultrasonic ISR Definition
 110:main.c        **** {
  51              		.loc 1 110 0
  52              		.cfi_startproc
  53              		@ args = 0, pretend = 0, frame = 0
  54              		@ frame_needed = 0, uses_anonymous_args = 0
  55 0000 08B5     		push	{r3, lr}
  56              		.cfi_def_cfa_offset 8
  57              		.cfi_offset 3, -8
  58              		.cfi_offset 14, -4
 111:main.c        ****     CyDelay(100);
  59              		.loc 1 111 0
  60 0002 6420     		movs	r0, #100
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cccxI4fz.s 			page 4


  61 0004 FFF7FEFF 		bl	CyDelay
  62              	.LVL1:
 112:main.c        ****     
 113:main.c        ****     beginNavigation = 1;
  63              		.loc 1 113 0
  64 0008 0122     		movs	r2, #1
  65 000a 034B     		ldr	r3, .L5
  66 000c 1A60     		str	r2, [r3]
 114:main.c        ****     colour_flag = 0; 
  67              		.loc 1 114 0
  68 000e 0022     		movs	r2, #0
  69 0010 024B     		ldr	r3, .L5+4
  70 0012 1A60     		str	r2, [r3]
  71 0014 08BD     		pop	{r3, pc}
  72              	.L6:
  73 0016 00BF     		.align	2
  74              	.L5:
  75 0018 00000000 		.word	.LANCHOR0
  76 001c 00000000 		.word	.LANCHOR1
  77              		.cfi_endproc
  78              	.LFE65:
  79              		.size	StartIH, .-StartIH
  80              		.section	.text.armMoving,"ax",%progbits
  81              		.align	2
  82              		.global	armMoving
  83              		.thumb
  84              		.thumb_func
  85              		.type	armMoving, %function
  86              	armMoving:
  87              	.LFB67:
 115:main.c        **** }
 116:main.c        ****  
 117:main.c        **** //Interrupt service routines for dcmotor function
 118:main.c        **** /*
 119:main.c        **** CY_ISR(Encoder_Counts_1_IH){
 120:main.c        ****     stopMotor1AndUpdate();
 121:main.c        **** }
 122:main.c        **** 
 123:main.c        **** CY_ISR(Encoder_Counts_2_IH){
 124:main.c        ****     stopMotor2AndUpdate();
 125:main.c        **** }
 126:main.c        **** 
 127:main.c        **** CY_ISR(Drift_Check_IH){    
 128:main.c        ****     Drift_Check_Timer_ReadStatusRegister(); //Clears the interrupt
 129:main.c        ****     Drift_Check_Timer_Stop(); //Stops the timer
 130:main.c        ****     motor1EncoderCounts = Motor_1_Encoder_Counts_ReadCounter();
 131:main.c        ****     motor2EncoderCounts = Motor_2_Encoder_Counts_ReadCounter();
 132:main.c        ****     driftCorrect(); //Does checking
 133:main.c        **** }
 134:main.c        **** */
 135:main.c        **** 
 136:main.c        **** int main(void)
 137:main.c        **** {
 138:main.c        ****     CyGlobalIntEnable; /* Enable global interrupts. */
 139:main.c        **** 
 140:main.c        ****     
 141:main.c        ****     TIA_1_Start();
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cccxI4fz.s 			page 5


 142:main.c        ****     UART_1_Start();
 143:main.c        ****     UART_1_PutString("UART commencing... \n");
 144:main.c        ****     ADC_Start();
 145:main.c        ****     IDAC8_1_Start();
 146:main.c        ****     
 147:main.c        ****     // DEBUGGING:
 148:main.c        ****     int colour_calibration = FALSE;             // Do we want to calibrate the sensor? 
 149:main.c        ****     int servo_testing = FALSE;                  // Do the servos need to be tested?      
 150:main.c        ****     int motor_testing = FALSE;
 151:main.c        ****     int ultrasonic_testing = TRUE;  
 152:main.c        ****     
 153:main.c        ****     
 154:main.c        ****     // IDAC initialisation: 
 155:main.c        ****     IDAC8_1_SetRange(IDAC8_1_RANGE_32uA);       // Sets the range between 0 and 32uA
 156:main.c        ****     IDAC8_1_SetValue(idac_value);               // set a value between 0 and 255
 157:main.c        ****     
 158:main.c        ****     // Colour Sensing Initialisation & Debugging:
 159:main.c        ****     colour_sensing_algorithm = 0;
 160:main.c        ****     control_photodiode_Write(colour_sensing_algorithm);            // controls which photodiode is 
 161:main.c        ****                                                 // 0: wall
 162:main.c        ****                                                 // 1: claw
 163:main.c        ****     control_led_Write(1);   CyDelay(500);  // Ensures all the RGBs are working
 164:main.c        ****     control_led_Write(2);   CyDelay(500);
 165:main.c        ****     control_led_Write(3);   CyDelay(500);
 166:main.c        ****     control_led_Write(0);   CyDelay(500);
 167:main.c        ****     colourSensingInitialise();                  // Initialises the colour sensor
 168:main.c        ****     
 169:main.c        **** 
 170:main.c        ****     //Servos for the arm instatination
 171:main.c        ****     Rack_Servo_PWM_Start();
 172:main.c        ****     Rack_Servo_PWM_WriteCompare(1000);          // BRINGs rack to highest position, so not to mess 
 173:main.c        ****     CyDelay(500);
 174:main.c        ****     Rack_Servo_PWM_Sleep();
 175:main.c        ****     
 176:main.c        ****     Gripper_Servo_PWM_Start();
 177:main.c        ****     Gripper_Servo_PWM_WriteCompare(1120);       //This is the open gripper position
 178:main.c        ****     CyDelay(500);
 179:main.c        ****     Gripper_Servo_PWM_Sleep();
 180:main.c        ****     
 181:main.c        ****     // Misha Motors Initialisation:
 182:main.c        ****     Motor_Left_Driver_Start();
 183:main.c        ****     Motor_Left_Driver_Sleep();                  // Puts motor to sleep
 184:main.c        ****     Motor_Right_Driver_Start();
 185:main.c        ****     Motor_Right_Driver_Sleep();                 // Puts motor to sleep
 186:main.c        ****     
 187:main.c        ****     Motor_Left_Decoder_Start();
 188:main.c        ****     Motor_Right_Decoder_Start();
 189:main.c        ****     
 190:main.c        ****     // Ultrasonic Initialisation: 
 191:main.c        ****     
 192:main.c        ****         
 193:main.c        ****     // Timer and ISR instantiation
 194:main.c        ****     Timer_1_Start();
 195:main.c        ****     Timer_1_ReadStatusRegister();
 196:main.c        ****     Sonic_StartEx(TIH);
 197:main.c        ****     Start_StartEx(StartIH);
 198:main.c        ****     beginNavigation = 0;
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cccxI4fz.s 			page 6


 199:main.c        ****     
 200:main.c        ****     /*  OLD CODE FROM NIDHIN:
 201:main.c        ****     //Initialising DC motors
 202:main.c        ****     Motor_1_driver_Start();
 203:main.c        ****     Motor_2_driver_Start();
 204:main.c        ****     motorDutyCycleUpdate(0,0,0,0);//Have the motors stand still
 205:main.c        ****     
 206:main.c        ****     
 207:main.c        ****     //Initialising counters
 208:main.c        ****     Motor_1_Encoder_Counts_Start();
 209:main.c        ****     Motor_2_Encoder_Counts_Start();
 210:main.c        ****     
 211:main.c        ****     //Initialising timers
 212:main.c        ****     Drift_Check_Timer_Start();
 213:main.c        ****     
 214:main.c        ****     //Starts and enables the interrupts for the motor encoder counts
 215:main.c        ****     Encoder_Counts_1_Interrupt_StartEx(Encoder_Counts_1_IH); 
 216:main.c        ****     Encoder_Counts_2_Interrupt_StartEx(Encoder_Counts_2_IH);
 217:main.c        ****     Drift_Check_Interrupt_StartEx(Drift_Check_IH);		
 218:main.c        ****     */
 219:main.c        **** 
 220:main.c        ****     // Main Loop for States
 221:main.c        ****         
 222:main.c        ****     for(;;)
 223:main.c        ****     {   
 224:main.c        ****         // Start button is pressed so quit sensing
 225:main.c        **** 
 226:main.c        ****         /*
 227:main.c        ****         while (beginNavigation == 0) {
 228:main.c        ****             distanceCheck();           
 229:main.c        ****             UART_1_PutString("\n");
 230:main.c        ****             CyDelay(1000); // Check distance once a second.
 231:main.c        ****                 
 232:main.c        ****         }
 233:main.c        ****         */
 234:main.c        ****         
 235:main.c        ****         
 236:main.c        ****         // Enter picking up puck state for the moment FOR TESTING
 237:main.c        ****         //colour_sensing_algorithm = 1;
 238:main.c        ****         //control_photodiode_Write(1);
 239:main.c        ****         //state = STATE_FIND_REQUIRED_PUCK;
 240:main.c        **** 
 241:main.c        ****         if (state == STATE_SCAN_PLAN) {              // colour sensing, while switch has not been p
 242:main.c        ****             
 243:main.c        ****             // Colour Calibration: 
 244:main.c        ****             if (colour_calibration)
 245:main.c        ****             {
 246:main.c        ****                 int lock = FALSE;   
 247:main.c        ****                 do 
 248:main.c        ****                     {   
 249:main.c        ****                         if (lock == FALSE) 
 250:main.c        ****                         {
 251:main.c        ****                             
 252:main.c        ****                             control_photodiode_Write(1);    // Claw
 253:main.c        ****                             changeHeightToPuck(0);
 254:main.c        **** 
 255:main.c        ****                             UART_1_PutString("Count \t BLANK \t RED \t GREEN \t BLUE \t \n");
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cccxI4fz.s 			page 7


 256:main.c        ****                             for (int i = 0; i < 50; i++)
 257:main.c        ****                             {
 258:main.c        ****                             sprintf(output, "%d \t", i);
 259:main.c        ****                             UART_1_PutString(output);
 260:main.c        ****                             colourSensingCalibration(); 
 261:main.c        ****                             UART_1_PutString("\n");
 262:main.c        ****                             }         
 263:main.c        ****                             lock = TRUE;    
 264:main.c        ****                         }
 265:main.c        ****                 } while (lock == TRUE);    
 266:main.c        ****             }
 267:main.c        ****             
 268:main.c        ****             // Servo Testing:
 269:main.c        ****             if (servo_testing) 
 270:main.c        ****             {
 271:main.c        ****                 int lock = FALSE;
 272:main.c        ****                 do 
 273:main.c        ****                     {   
 274:main.c        ****                         if (lock == FALSE) 
 275:main.c        ****                         {
 276:main.c        ****                             UART_1_PutString("Servo Testing: ");
 277:main.c        ****                             
 278:main.c        ****                             armMoving();
 279:main.c        ****                             
 280:main.c        ****                             
 281:main.c        ****                             for(int i = 0; i < 4; i++)
 282:main.c        ****                             {
 283:main.c        ****                                 changeHeightToPuck(i);
 284:main.c        ****                                 CyDelay(1000);
 285:main.c        ****                             }
 286:main.c        **** 
 287:main.c        ****                             lock = TRUE;    
 288:main.c        ****                         }
 289:main.c        ****                 } while (lock == TRUE);    
 290:main.c        ****             }    
 291:main.c        ****                 
 292:main.c        ****             // Motor Testing: 
 293:main.c        ****             if (motor_testing)
 294:main.c        ****             {
 295:main.c        ****                 int lock = FALSE;
 296:main.c        ****                 do 
 297:main.c        ****                     {   
 298:main.c        ****                         if (lock == FALSE) 
 299:main.c        ****                         {
 300:main.c        ****                             UART_1_PutString("Motor Testing: \n");
 301:main.c        **** 
 302:main.c        ****                             //mishaMoveForward();
 303:main.c        ****                             //mishaMoveBackward();
 304:main.c        ****                             //mishaMoveDynamic(-300);
 305:main.c        ****                             
 306:main.c        ****                             mishaSwivel(-180);
 307:main.c        ****                             
 308:main.c        ****                             lock = TRUE;    
 309:main.c        ****                         }
 310:main.c        ****                 } while (lock == TRUE);    
 311:main.c        ****             }    
 312:main.c        ****             
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cccxI4fz.s 			page 8


 313:main.c        ****             // Ultrasonic Testing:
 314:main.c        ****             
 315:main.c        ****             if (ultrasonic_testing) 
 316:main.c        ****             {
 317:main.c        ****                 int lock = FALSE;
 318:main.c        ****                 do 
 319:main.c        ****                     {   
 320:main.c        ****                         if (lock == FALSE) 
 321:main.c        ****                         {
 322:main.c        ****                             UART_1_PutString("Ultrasonic Testing: \n");
 323:main.c        ****                             
 324:main.c        ****                             //armMoving();
 325:main.c        ****                             //straightAdjust();
 326:main.c        ****                             
 327:main.c        ****                             int dick = 2;
 328:main.c        ****                             while(0) {
 329:main.c        ****                                 distanceSensor(dick);
 330:main.c        ****                                 CyDelay(500);
 331:main.c        ****                                 sprintf(output, "%d \t %d \t %d \t %d \t %d \n", ultrasonic_distanc
 332:main.c        ****                                                          ultrasonic_distances_mm[1],
 333:main.c        ****                                                          ultrasonic_distances_mm[2],
 334:main.c        ****                                                             ultrasonic_distances_mm[3],
 335:main.c        ****                                                             ultrasonic_distances_mm[4]);
 336:main.c        ****                                 UART_1_PutString(output);
 337:main.c        ****                             }
 338:main.c        ****                             // 0 gave front left    // front left
 339:main.c        ****                             // 1 gave front right   // front right 
 340:main.c        ****                             // 2 gave back sensor   // side left now??? 
 341:main.c        ****                             // 3 gave side right    // side right 
 342:main.c        ****                             // 4 gave back sensor   // back sensor
 343:main.c        ****                             
 344:main.c        ****                             while(0) {
 345:main.c        ****                                 for (int i = 0; i < 5; i++)
 346:main.c        ****                                 {
 347:main.c        ****                                     distanceSensor(i);
 348:main.c        ****                                     CyDelay(100);
 349:main.c        ****                                     sprintf(output, "%d \t", ultrasonic_distances_mm[i]);
 350:main.c        ****                                     UART_1_PutString(output);
 351:main.c        ****                                 }
 352:main.c        ****                                 UART_1_PutString("\n");
 353:main.c        ****                             }
 354:main.c        ****                             
 355:main.c        ****                             
 356:main.c        ****                             
 357:main.c        ****                             
 358:main.c        ****                             // TEST FIRING
 359:main.c        ****                             for (int i = 0; i < 5; i++)
 360:main.c        ****                                 {
 361:main.c        ****                                     distanceSensor(i);
 362:main.c        ****                                     CyDelay(100);
 363:main.c        ****                                     sprintf(output, "%d \t", ultrasonic_distances_mm[i]);
 364:main.c        ****                                     UART_1_PutString(output);
 365:main.c        ****                                 }
 366:main.c        ****                             UART_1_PutString("\n");
 367:main.c        ****                             
 368:main.c        ****                             
 369:main.c        ****                             moveUntil(-150);              // should keep moving until we approach 5
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cccxI4fz.s 			page 9


 370:main.c        ****                             straightAdjust();
 371:main.c        ****                             
 372:main.c        ****                             
 373:main.c        ****                             /*
 374:main.c        ****                             for (int i = 0; i < 5; i++)
 375:main.c        ****                             {
 376:main.c        ****                                 sprintf(output, "%d: \t", i);       
 377:main.c        ****                                 UART_1_PutString(output);
 378:main.c        ****                             }
 379:main.c        ****                             UART_1_PutString("\n");   
 380:main.c        ****                             
 381:main.c        ****                             
 382:main.c        ****                             for (int i = 0; i < 50; i++) {
 383:main.c        ****                             distanceCheck();
 384:main.c        ****                             CyDelay(200);
 385:main.c        ****                             }
 386:main.c        ****                             
 387:main.c        ****                             */
 388:main.c        ****                             
 389:main.c        ****                             //straightAdjust();
 390:main.c        ****                             
 391:main.c        ****                             
 392:main.c        ****                             lock = TRUE;    
 393:main.c        ****                         }
 394:main.c        ****                 } while (lock == TRUE);    
 395:main.c        ****             }    
 396:main.c        ****             
 397:main.c        ****                        
 398:main.c        ****             // MOVEMENT TESTING:
 399:main.c        ****             
 400:main.c        ****             //mishaMoveDynamic(850);
 401:main.c        ****             //mishaMoveDynamic(-850);
 402:main.c        ****             
 403:main.c        ****             mishaMoveDynamic(230);
 404:main.c        ****             while(1) {};
 405:main.c        ****             
 406:main.c        ****             
 407:main.c        ****             
 408:main.c        ****             mishaMoveDynamic(-300);
 409:main.c        ****             CyDelay(500);
 410:main.c        ****             colourSensingInitialise();      
 411:main.c        ****             CyDelay(500);
 412:main.c        ****             mishaMoveDynamic(120);
 413:main.c        ****             CyDelay(500);
 414:main.c        ****             
 415:main.c        ****             for (int i = 0; i < 5; i++) {
 416:main.c        ****                 puckRackColours[i] = colourSensingOutput();
 417:main.c        ****                 CyDelay(500);
 418:main.c        ****                 mishaMoveDynamic(61);
 419:main.c        ****                 CyDelay(500);
 420:main.c        ****             }
 421:main.c        ****                        
 422:main.c        ****             UART_1_PutString("Found Colours: \n");
 423:main.c        ****             for (int i = 0; i < 5; i++) 
 424:main.c        ****             {
 425:main.c        ****                 sprintf(output, "%i \n", puckRackColours[i]);       
 426:main.c        ****                 UART_1_PutString(output);
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cccxI4fz.s 			page 10


 427:main.c        ****             }
 428:main.c        ****             
 429:main.c        ****             
 430:main.c        ****             control_photodiode_Write(1);    // changes to claw photodiode
 431:main.c        ****             colour_sensing_algorithm = 1;   // changes it to claw algorithm
 432:main.c        ****                        
 433:main.c        ****             //while(1) {}
 434:main.c        ****             
 435:main.c        ****             // THEN WE FILTER THE NO PUCK VALUES:
 436:main.c        ****             
 437:main.c        ****             
 438:main.c        ****             
 439:main.c        ****             for (int i = 0; i < 5; i++){
 440:main.c        ****                 if (puckRackColours[i] != BLANK && i != 3){
 441:main.c        ****                     puckConstructionPlan[i] = puckRackColours[i];
 442:main.c        ****                     i++;
 443:main.c        ****                 }
 444:main.c        ****             }
 445:main.c        ****                     
 446:main.c        ****             // MOVE into the next state: 
 447:main.c        ****             state = STATE_LOCATE_BLOCK_AND_PUCKS;
 448:main.c        ****             
 449:main.c        ****             /*
 450:main.c        ****             if (!moving){
 451:main.c        ****                 moving = 1;
 452:main.c        ****             if (initialisation){moveBackwardIndefinitely(); initialisation = 0;}
 453:main.c        ****             else {moveForwardIndefinitely();}        
 454:main.c        ****            
 455:main.c        ****             
 456:main.c        ****             moveAndAngle(SCAN_INITIALISE_HORIZONTAL,PLAN_SCAN_VERTICAL,WEST_ANGLE); // Move beyond 
 457:main.c        ****             
 458:main.c        ****             // Read the black wall
 459:main.c        ****             
 460:main.c        ****             for (currentPuckRackScanningIndex = 0; currentPuckRackScanningIndex <= 4; currentPuckRa
 461:main.c        ****                 moveAndAngle(puckRackOffsetsFromWest[currentPuckRackScanningIndex],PLAN_SCAN_VERTIC
 462:main.c        ****                 puckRackColours[currentPuckRackScanningIndex] = colourSensingOutput();
 463:main.c        ****             }
 464:main.c        **** 
 465:main.c        ****             
 466:main.c        ****             
 467:main.c        ****             int puckConstructionPlanIndex = 0; // Will be used to iterate through the 3 puck colour
 468:main.c        ****             
 469:main.c        ****             // Iterate over all 5 rack slots and place the 3 colours into puckConstructionPlan.
 470:main.c        ****             for (int puckRackIndex = 0; puckRackIndex < 5; puckRackIndex++){
 471:main.c        ****                 if (puckRackColours[puckRackIndex] != BLANK && puckConstructionPlanIndex != 3){
 472:main.c        ****                     puckConstructionPlan[puckConstructionPlanIndex] = puckRackColours[puckRackIndex
 473:main.c        ****                     puckConstructionPlanIndex++;
 474:main.c        ****                 }
 475:main.c        ****             }
 476:main.c        ****             
 477:main.c        **** 
 478:main.c        ****             */
 479:main.c        ****         }
 480:main.c        ****         
 481:main.c        ****         
 482:main.c        **** 
 483:main.c        ****     	if (state == STATE_LOCATE_BLOCK_AND_PUCKS){
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cccxI4fz.s 			page 11


 484:main.c        ****             
 485:main.c        ****             mishaSwivel(-45);  
 486:main.c        ****             mishaMoveDynamic(-150);
 487:main.c        ****             mishaSwivel(45);
 488:main.c        ****             mishaMoveDynamic(200);
 489:main.c        ****             mishaSwivel(90);
 490:main.c        ****             mishaMoveDynamic(500);
 491:main.c        ****             
 492:main.c        ****             
 493:main.c        ****             
 494:main.c        ****             
 495:main.c        ****             
 496:main.c        ****             
 497:main.c        ****             // Finding where the boundaries of the block are
 498:main.c        ****     		// Sweep across WEST to EAST until discrepancy
 499:main.c        ****             // But first sense the construction plan and then drive to wall and turn around to prep
 500:main.c        ****             
 501:main.c        ****             /*
 502:main.c        ****     		moveForwardIndefinitely();
 503:main.c        ****     		turnRight(180); // Now facing EAST wall
 504:main.c        ****     		moveForwardIndefinitely(); // Do this until we get to EAST wall
 505:main.c        ****             */
 506:main.c        ****             
 507:main.c        ****             //moveAndAngle(20,20,EAST_ANGLE); // Move to a position near construction base in an EA
 508:main.c        ****             //moveForwardIndefinitely(); // Scan until we reach EAST wall.
 509:main.c        ****             
 510:main.c        ****             // Will now know the boundaries of the block.
 511:main.c        ****             // Figure out direction we want to travel
 512:main.c        ****             
 513:main.c        **** 
 514:main.c        ****             //pathPastBlock = (block_edge_location[WEST] >= WIDTH_SENSOR_TO_SENSOR + SAFETY_MARGIN 
 515:main.c        ****             //pathToPucks = (puckPileLocation < ARENA_WIDTH / 2 ? WEST:EAST);
 516:main.c        ****             
 517:main.c        ****             state = STATE_GO_TO_PUCKS;
 518:main.c        **** 	    }
 519:main.c        ****         
 520:main.c        ****         
 521:main.c        **** 
 522:main.c        ****         if (state == STATE_GO_TO_PUCKS){
 523:main.c        ****             
 524:main.c        ****             /*
 525:main.c        ****             if (pathPastBlock == WEST){
 526:main.c        ****                 if (pathToPucks != WEST) {
 527:main.c        ****                     moveAndAngle(SAFETY_MARGIN / 2 + WIDTH_SENSOR_TO_SENSOR / 2, ARENA_LENGTH - FRO
 528:main.c        ****                 }
 529:main.c        ****                 else {moveAndAngle(SAFETY_MARGIN / 2 + WIDTH_SENSOR_TO_SENSOR / 2, ARENA_LENGTH - F
 530:main.c        ****             }
 531:main.c        ****             else {
 532:main.c        ****                 if (pathToPucks != EAST) {
 533:main.c        ****                     moveAndAngle(ARENA_WIDTH - SAFETY_MARGIN / 2 - WIDTH_SENSOR_TO_SENSOR / 2, AREN
 534:main.c        ****                 }
 535:main.c        ****                 else {moveAndAngle(ARENA_WIDTH - SAFETY_MARGIN / 2 - WIDTH_SENSOR_TO_SENSOR / 2, AR
 536:main.c        ****             }
 537:main.c        ****             
 538:main.c        ****             // Now depending on if the pucks are in the corner or not, 
 539:main.c        ****             
 540:main.c        ****             // We are now in front of the pucks
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cccxI4fz.s 			page 12


 541:main.c        ****             */
 542:main.c        ****             
 543:main.c        ****             state = STATE_FIND_REQUIRED_PUCK;
 544:main.c        ****         }
 545:main.c        ****         
 546:main.c        ****         
 547:main.c        ****         
 548:main.c        ****         if (state == STATE_FIND_REQUIRED_PUCK)
 549:main.c        ****         {
 550:main.c        ****             
 551:main.c        ****             
 552:main.c        ****         SPEED = 70;    
 553:main.c        ****         int puck_correct = FALSE;   // A flag to determine if the correct puck has been picked up
 554:main.c        ****         int puck_scan;
 555:main.c        ****         
 556:main.c        ****     
 557:main.c        ****         puckConstructionPlan[1] = RED;
 558:main.c        ****     
 559:main.c        ****         // Scanning puck:
 560:main.c        **** 
 561:main.c        ****         while (puck_correct == FALSE) 
 562:main.c        ****         {
 563:main.c        ****             mishaMoveDynamic(50);  // robot moves forward towards puck
 564:main.c        ****                                     // could replace this with the distance gathered from the ultra
 565:main.c        ****             changeHeightToPuck(1);  // arm lowers onto robot
 566:main.c        ****             puck_scan = colourSensingOutput();  // colour sensor takes a scan
 567:main.c        ****             changeHeightToPuck(3);  // arm returns to high position
 568:main.c        ****             mishaMoveDynamic(-50);   // robot moves backwards
 569:main.c        ****             if (puck_scan == puckConstructionPlan[1]) {puck_correct = TRUE;}
 570:main.c        ****                                     // if colour == true:
 571:main.c        ****                 
 572:main.c        ****             else 
 573:main.c        ****             {
 574:main.c        ****                                     // if colour == false
 575:main.c        ****                                         // robot translates to side to see next puck, and performs 
 576:main.c        ****             }
 577:main.c        ****         }
 578:main.c        ****                 
 579:main.c        ****         // Picking Up puck from pile:
 580:main.c        ****         changeHeightToPuck(0);      // arm lowers to ground
 581:main.c        ****         //changeHeightToPuck(1);
 582:main.c        ****         moveUntilPuck();
 583:main.c        ****         //mishaMoveDynamic(60);       // robot moves forward
 584:main.c        ****         armClose();                 // claw closes on puck
 585:main.c        ****         changeHeightToPuck(3);      // arm lifts up to highest position
 586:main.c        ****         mishaMoveDynamic(-60);       // robot moves back away from puck area 
 587:main.c        ****         
 588:main.c        ****             
 589:main.c        ****         while(1) {};           
 590:main.c        ****             
 591:main.c        ****             /*
 592:main.c        ****             int requiredColour = puckConstructionPlan[currentPuckStackSize];
 593:main.c        ****             int puckFound = 0;
 594:main.c        ****             
 595:main.c        ****             
 596:main.c        ****             // Let's assume that we get to the east or west of the puck pile and we are as close to
 597:main.c        ****             if (roundDirection() == NORTH){
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cccxI4fz.s 			page 13


 598:main.c        **** 
 599:main.c        ****             }
 600:main.c        ****             else if (roundDirection() == EAST){
 601:main.c        ****                 // Poll ultrasonics, displaceRight until no longer see the pucks
 602:main.c        ****                 // Drive up to the middle puck
 603:main.c        ****                 // We know that we used moveAndAngle() to get to the exact vertical position of the
 604:main.c        ****                 moveForwardIndefinitely();
 605:main.c        ****                 
 606:main.c        ****                 // May need to displaceRight a bit to ensure that we are perfectly centered with th
 607:main.c        ****                 // Now we need to inch forward with the claw lifted
 608:main.c        ****                 // Also store the horizontal location of the pucks based off our current position. 
 609:main.c        ****                 
 610:main.c        ****                 horizontalPuckGrid = currentPosition[0]; // Take our horizontal position as a refer
 611:main.c        ****                 
 612:main.c        ****                 changeHeightToPuck(1); // Lift up enough so we dont hit the pucks when scanning the
 613:main.c        ****                 moveForward(DISTANCE_STOPPED_FROM_PUCK); // Move forward until colour sensor above 
 614:main.c        ****                
 615:main.c        ****                 if (colourSensingOutput() == puckConstructionPlan[currentPuckStackSize]){ 
 616:main.c        ****                     // This is the puck we need
 617:main.c        ****                     moveBackward(DISTANCE_STOPPED_FROM_PUCK); // Reverse to make room for lowering 
 618:main.c        ****                     lowerAndOpen(0); // We are grabbing the pucks from the ground.
 619:main.c        ****                     moveForward(DISTANCE_STOPPED_FROM_PUCK);
 620:main.c        ****                     closeAndRaise(1); // Lift above the height of the ground pucks
 621:main.c        **** 
 622:main.c        ****                 }
 623:main.c        ****                 
 624:main.c        ****                 // If the colour isn't what we need, we could pick it up and drop it somewhere out 
 625:main.c        ****                 else {
 626:main.c        ****                     moveBackward(DISTANCE_STOPPED_FROM_PUCK); // Need to check the next puck
 627:main.c        ****                     displaceLeft(5,22);
 628:main.c        ****                     changeHeightToPuck(1); // Lift up enough so we dont hit the pucks when scanning
 629:main.c        ****                     moveForward(DISTANCE_STOPPED_FROM_PUCK); // Move forward until colour sensor ab
 630:main.c        ****                     
 631:main.c        ****                     // Scan the next puck
 632:main.c        ****                     if (colourSensingOutput() == puckConstructionPlan[currentPuckStackSize]){ 
 633:main.c        ****                         // This is the puck we need
 634:main.c        ****                         moveBackward(DISTANCE_STOPPED_FROM_PUCK); // Reverse to make room for lower
 635:main.c        ****                         lowerAndOpen(0); // We are grabbing the pucks from the ground.
 636:main.c        ****                         moveForward(DISTANCE_STOPPED_FROM_PUCK);
 637:main.c        ****                         closeAndRaise(1); // Lift above the height of the ground pucks
 638:main.c        **** 
 639:main.c        ****                     }
 640:main.c        ****                     
 641:main.c        ****                     else {
 642:main.c        ****                         moveBackward(DISTANCE_STOPPED_FROM_PUCK); // Need to check the next puck
 643:main.c        ****                         displaceLeft(5,22);
 644:main.c        ****                         changeHeightToPuck(1); // Lift up enough so we dont hit the pucks when scan
 645:main.c        ****                         moveForward(DISTANCE_STOPPED_FROM_PUCK); // Move forward until colour senso
 646:main.c        ****                         
 647:main.c        ****                         if (colourSensingOutput() == puckConstructionPlan[currentPuckStackSize]){ 
 648:main.c        ****                             // This is the puck we need
 649:main.c        ****                             moveBackward(DISTANCE_STOPPED_FROM_PUCK); // Reverse to make room for l
 650:main.c        ****                             lowerAndOpen(0); // We are grabbing the pucks from the ground.
 651:main.c        ****                             moveForward(DISTANCE_STOPPED_FROM_PUCK);
 652:main.c        ****                             closeAndRaise(1); // Lift above the height of the ground pucks
 653:main.c        **** 
 654:main.c        ****                         }
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cccxI4fz.s 			page 14


 655:main.c        ****                     
 656:main.c        ****                     }
 657:main.c        ****                 }
 658:main.c        ****                 
 659:main.c        ****                 if (colourSensingOutput() == puckConstructionPlan[currentPuckStackSize]){ 
 660:main.c        ****                     // This is the puck we need
 661:main.c        ****                     moveBackward(DISTANCE_STOPPED_FROM_PUCK); // Reverse to make room for lowering 
 662:main.c        ****                     lowerAndOpen(0); // We are grabbing the pucks from the ground.
 663:main.c        ****                     moveForward(DISTANCE_STOPPED_FROM_PUCK);
 664:main.c        ****                     closeAndRaise(1); // Lift above the height of the ground pucks
 665:main.c        **** 
 666:main.c        ****                 }
 667:main.c        ****                 
 668:main.c        ****             }
 669:main.c        ****             
 670:main.c        ****             else if (roundDirection() == WEST){
 671:main.c        ****                 // Poll ultrasonics, displaceRight until no longer see the pucks
 672:main.c        ****                 // Drive up to the middle puck
 673:main.c        ****                 // We know that we used moveAndAngle() to get to the exact vertical position of the
 674:main.c        ****                 moveForwardIndefinitely();
 675:main.c        ****             }
 676:main.c        ****             
 677:main.c        ****             */
 678:main.c        ****             
 679:main.c        ****             /*
 680:main.c        ****             while(!puckFound){
 681:main.c        ****                   
 682:main.c        ****             }
 683:main.c        ****             */
 684:main.c        ****             
 685:main.c        ****             
 686:main.c        ****         }
 687:main.c        ****         
 688:main.c        ****         if (state == STATE_DEPOSIT_PUCK){
 689:main.c        **** 
 690:main.c        ****             /*
 691:main.c        ****             moveAndAngle(CONSTRUCTION_MIDPOINT,CONSTRUCTION_DISTANCE_FROM_WALL + 10, SOUTH_ANGLE); 
 692:main.c        ****             lowerAndOpen(currentPuckStackSize);
 693:main.c        ****             moveAndAngle(CONSTRUCTION_MIDPOINT,CONSTRUCTION_DISTANCE_FROM_WALL, SOUTH_ANGLE); // Ta
 694:main.c        ****             changeHeightToPuck(currentPuckStackSize + 1); // Lift claw above stack to avoid hitting
 695:main.c        ****             moveAndAngle(CONSTRUCTION_MIDPOINT,CONSTRUCTION_DISTANCE_FROM_WALL, SOUTH_ANGLE); // Ta
 696:main.c        **** 
 697:main.c        ****             
 698:main.c        ****             lowerAndOpen(current_stage);
 699:main.c        ****             changeHeightToPuck(current_stage + 1); // Lift claw above stack to avoid hitting the st
 700:main.c        ****             
 701:main.c        ****             current_stage++;
 702:main.c        ****             
 703:main.c        ****             if (current_stage == 3){state = STATE_PARK_HOME;}        // Returns to home 
 704:main.c        ****             */
 705:main.c        ****             
 706:main.c        ****         }
 707:main.c        ****         
 708:main.c        ****         if (state == STATE_PARK_HOME){
 709:main.c        ****             
 710:main.c        ****             //moveAndAngle(HOME_MIDPOINT, HOME_PARKING_DISTANCE, NORTH_ANGLE); // Should reverse in
 711:main.c        ****             
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cccxI4fz.s 			page 15


 712:main.c        ****             // Run code to stop robot entirely.
 713:main.c        ****         }
 714:main.c        ****         
 715:main.c        ****         
 716:main.c        ****     }    
 717:main.c        **** }
 718:main.c        **** 
 719:main.c        **** void armMoving(void){
  88              		.loc 1 719 0
  89              		.cfi_startproc
  90              		@ args = 0, pretend = 0, frame = 0
  91              		@ frame_needed = 0, uses_anonymous_args = 0
  92 0000 38B5     		push	{r3, r4, r5, lr}
  93              		.cfi_def_cfa_offset 16
  94              		.cfi_offset 3, -16
  95              		.cfi_offset 4, -12
  96              		.cfi_offset 5, -8
  97              		.cfi_offset 14, -4
  98              	.LVL2:
 720:main.c        ****     
 721:main.c        ****     int puck_correct = FALSE;   // A flag to determine if the correct puck has been picked up
 722:main.c        ****     int puck_scan;
 723:main.c        ****     
 724:main.c        ****     puckConstructionPlan[1] = RED;
  99              		.loc 1 724 0
 100 0002 0122     		movs	r2, #1
 101 0004 0D4B     		ldr	r3, .L13
 102 0006 9A60     		str	r2, [r3, #8]
 725:main.c        ****     
 726:main.c        **** // States
 727:main.c        ****     // moving
 728:main.c        ****     changeHeightToPuck(3);  // Arm has to be lifted to highest position
 103              		.loc 1 728 0
 104 0008 0320     		movs	r0, #3
 105 000a FFF7FEFF 		bl	changeHeightToPuck
 106              	.LVL3:
 721:main.c        ****     int puck_scan;
 107              		.loc 1 721 0
 108 000e 0025     		movs	r5, #0
 729:main.c        ****         // THIS WILL be ensured by always returning the claw to the highest position after completi
 730:main.c        ****         
 731:main.c        ****     // Scanning puck:
 732:main.c        ****     while (puck_correct == FALSE) 
 109              		.loc 1 732 0
 110 0010 11E0     		b	.L8
 111              	.LVL4:
 112              	.L10:
 733:main.c        ****     {
 734:main.c        ****                                 // robot moves forward towards puck
 735:main.c        ****         changeHeightToPuck(1);  // arm lowers onto robot
 113              		.loc 1 735 0
 114 0012 0120     		movs	r0, #1
 115 0014 FFF7FEFF 		bl	changeHeightToPuck
 116              	.LVL5:
 736:main.c        ****         puck_scan = colourSensingOutput();  // colour sensor takes a scan
 117              		.loc 1 736 0
 118 0018 FFF7FEFF 		bl	colourSensingOutput
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cccxI4fz.s 			page 16


 119              	.LVL6:
 120 001c 0446     		mov	r4, r0
 121              	.LVL7:
 737:main.c        ****         changeHeightToPuck(3);  // arm returns to high position
 122              		.loc 1 737 0
 123 001e 0320     		movs	r0, #3
 124              	.LVL8:
 125 0020 FFF7FEFF 		bl	changeHeightToPuck
 126              	.LVL9:
 738:main.c        ****                                 // robot moves backwards
 739:main.c        ****         if (puck_scan == puckConstructionPlan[current_stage]) {puck_correct = TRUE;}
 127              		.loc 1 739 0
 128 0024 064B     		ldr	r3, .L13+4
 129 0026 5A68     		ldr	r2, [r3, #4]
 130 0028 044B     		ldr	r3, .L13
 131 002a 03EB8203 		add	r3, r3, r2, lsl #2
 132 002e 5B68     		ldr	r3, [r3, #4]
 133 0030 9C42     		cmp	r4, r3
 134 0032 00D1     		bne	.L8
 135 0034 0125     		movs	r5, #1
 136              	.LVL10:
 137              	.L8:
 732:main.c        ****     {
 138              		.loc 1 732 0
 139 0036 002D     		cmp	r5, #0
 140 0038 EBD0     		beq	.L10
 740:main.c        ****                                 // if colour == true:
 741:main.c        ****                                     // enter picking up puck from 
 742:main.c        ****         else 
 743:main.c        ****         {
 744:main.c        ****                                 // if colour == false
 745:main.c        ****                                     // robot translates to side to see next puck, and performs scan
 746:main.c        ****         }
 747:main.c        ****     }
 748:main.c        ****     
 749:main.c        ****     /*
 750:main.c        ****     
 751:main.c        ****     // Picking Up puck from pile:
 752:main.c        ****     changeHeightToPuck(0);      // arm lowers to ground
 753:main.c        ****                                 // robot moves forward
 754:main.c        ****     armClose();                 // claw closes on puck
 755:main.c        ****     changeHeightToPuck(3);      // arm lifts up to highest position
 756:main.c        ****                                 // robot moves back away from puck area   
 757:main.c        ****       
 758:main.c        ****     
 759:main.c        ****     // Deposition puck in construction zone:
 760:main.c        ****                                 // arm will be in highest position from moving
 761:main.c        ****         changeHeightToPuck(current_stage-1);    // arm moves to position of stacking pucks         
 762:main.c        ****                                                 // stage 1st = ground/0
 763:main.c        ****                                                 // stage 2nd = 1
 764:main.c        ****                                                 // stage 3rd = 2
 765:main.c        ****         armOpen();              // gripper releases puck
 766:main.c        ****         changeHeightToPuck(3);  // arm moves back to highest position availabe
 767:main.c        ****                                 // robot moves away 
 768:main.c        ****     */
 769:main.c        ****     
 770:main.c        **** }
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cccxI4fz.s 			page 17


 141              		.loc 1 770 0
 142 003a 38BD     		pop	{r3, r4, r5, pc}
 143              	.LVL11:
 144              	.L14:
 145              		.align	2
 146              	.L13:
 147 003c 00000000 		.word	.LANCHOR0
 148 0040 00000000 		.word	.LANCHOR1
 149              		.cfi_endproc
 150              	.LFE67:
 151              		.size	armMoving, .-armMoving
 152              		.section	.text.moveUntilPuck,"ax",%progbits
 153              		.align	2
 154              		.global	moveUntilPuck
 155              		.thumb
 156              		.thumb_func
 157              		.type	moveUntilPuck, %function
 158              	moveUntilPuck:
 159              	.LFB68:
 771:main.c        **** 
 772:main.c        **** void moveUntilPuck(void) {
 160              		.loc 1 772 0
 161              		.cfi_startproc
 162              		@ args = 0, pretend = 0, frame = 0
 163              		@ frame_needed = 0, uses_anonymous_args = 0
 164 0000 10B5     		push	{r4, lr}
 165              		.cfi_def_cfa_offset 8
 166              		.cfi_offset 4, -8
 167              		.cfi_offset 14, -4
 168              	.LVL12:
 773:main.c        ****     int puck_detect = 0;
 774:main.c        ****     Motor_Left_Control_Write(0);
 169              		.loc 1 774 0
 170 0002 0020     		movs	r0, #0
 171 0004 FFF7FEFF 		bl	Motor_Left_Control_Write
 172              	.LVL13:
 775:main.c        ****     Motor_Right_Control_Write(0);
 173              		.loc 1 775 0
 174 0008 0020     		movs	r0, #0
 175 000a FFF7FEFF 		bl	Motor_Right_Control_Write
 176              	.LVL14:
 776:main.c        ****     
 777:main.c        ****     Motor_Left_Driver_Wakeup();
 177              		.loc 1 777 0
 178 000e FFF7FEFF 		bl	Motor_Left_Driver_Wakeup
 179              	.LVL15:
 778:main.c        ****     Motor_Left_Driver_WriteCompare(SPEED);
 180              		.loc 1 778 0
 181 0012 124C     		ldr	r4, .L19
 182 0014 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
 183 0016 FFF7FEFF 		bl	Motor_Left_Driver_WriteCompare
 184              	.LVL16:
 779:main.c        ****     Motor_Right_Driver_Wakeup();
 185              		.loc 1 779 0
 186 001a FFF7FEFF 		bl	Motor_Right_Driver_Wakeup
 187              	.LVL17:
 780:main.c        ****     Motor_Right_Driver_WriteCompare(SPEED);
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cccxI4fz.s 			page 18


 188              		.loc 1 780 0
 189 001e 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
 190 0020 FFF7FEFF 		bl	Motor_Right_Driver_WriteCompare
 191              	.LVL18:
 781:main.c        ****     
 782:main.c        ****     colour_sensing_algorithm = 2;       
 192              		.loc 1 782 0
 193 0024 0222     		movs	r2, #2
 194 0026 0E4B     		ldr	r3, .L19+4
 195 0028 1A61     		str	r2, [r3, #16]
 773:main.c        ****     Motor_Left_Control_Write(0);
 196              		.loc 1 773 0
 197 002a 0024     		movs	r4, #0
 783:main.c        ****     
 784:main.c        ****     while (puck_detect == 0) 
 198              		.loc 1 784 0
 199 002c 05E0     		b	.L16
 200              	.LVL19:
 201              	.L17:
 785:main.c        ****     {
 786:main.c        ****         puck_detect = colourSensingOutput();
 202              		.loc 1 786 0
 203 002e FFF7FEFF 		bl	colourSensingOutput
 204              	.LVL20:
 205 0032 0446     		mov	r4, r0
 206              	.LVL21:
 787:main.c        ****         CyDelay(10);
 207              		.loc 1 787 0
 208 0034 0A20     		movs	r0, #10
 209              	.LVL22:
 210 0036 FFF7FEFF 		bl	CyDelay
 211              	.LVL23:
 212              	.L16:
 784:main.c        ****     {
 213              		.loc 1 784 0
 214 003a 002C     		cmp	r4, #0
 215 003c F7D0     		beq	.L17
 788:main.c        ****         //sprintf(output, "%i \t", puck_detect);       
 789:main.c        ****         //UART_1_PutString(output);
 790:main.c        ****     }
 791:main.c        ****        
 792:main.c        ****     Motor_Left_Decoder_SetCounter(0);
 216              		.loc 1 792 0
 217 003e 0020     		movs	r0, #0
 218 0040 FFF7FEFF 		bl	Motor_Left_Decoder_SetCounter
 219              	.LVL24:
 793:main.c        ****     Motor_Right_Decoder_SetCounter(0);
 220              		.loc 1 793 0
 221 0044 0020     		movs	r0, #0
 222 0046 FFF7FEFF 		bl	Motor_Right_Decoder_SetCounter
 223              	.LVL25:
 794:main.c        ****     
 795:main.c        ****     Motor_Left_Driver_Sleep();
 224              		.loc 1 795 0
 225 004a FFF7FEFF 		bl	Motor_Left_Driver_Sleep
 226              	.LVL26:
 796:main.c        ****     Motor_Right_Driver_Sleep();
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cccxI4fz.s 			page 19


 227              		.loc 1 796 0
 228 004e FFF7FEFF 		bl	Motor_Right_Driver_Sleep
 229              	.LVL27:
 797:main.c        ****     
 798:main.c        ****     mishaMoveDynamic(30);
 230              		.loc 1 798 0
 231 0052 1E20     		movs	r0, #30
 232 0054 FFF7FEFF 		bl	mishaMoveDynamic
 233              	.LVL28:
 234 0058 10BD     		pop	{r4, pc}
 235              	.LVL29:
 236              	.L20:
 237 005a 00BF     		.align	2
 238              	.L19:
 239 005c 00000000 		.word	SPEED
 240 0060 00000000 		.word	.LANCHOR0
 241              		.cfi_endproc
 242              	.LFE68:
 243              		.size	moveUntilPuck, .-moveUntilPuck
 244              		.section	.text.straightAdjust,"ax",%progbits
 245              		.align	2
 246              		.global	straightAdjust
 247              		.thumb
 248              		.thumb_func
 249              		.type	straightAdjust, %function
 250              	straightAdjust:
 251              	.LFB69:
 799:main.c        ****     
 800:main.c        **** }
 801:main.c        **** 
 802:main.c        **** 
 803:main.c        **** void straightAdjust(void) {
 252              		.loc 1 803 0
 253              		.cfi_startproc
 254              		@ args = 0, pretend = 0, frame = 0
 255              		@ frame_needed = 0, uses_anonymous_args = 0
 256 0000 70B5     		push	{r4, r5, r6, lr}
 257              		.cfi_def_cfa_offset 16
 258              		.cfi_offset 4, -16
 259              		.cfi_offset 5, -12
 260              		.cfi_offset 6, -8
 261              		.cfi_offset 14, -4
 262              	.LVL30:
 804:main.c        ****        
 805:main.c        ****     int front_left;
 806:main.c        ****     int front_right;
 807:main.c        ****     int difference = 300;
 263              		.loc 1 807 0
 264 0002 4FF49674 		mov	r4, #300
 808:main.c        ****     int tolerance = 3;
 809:main.c        ****     
 810:main.c        ****     //distanceCheck(); 
 811:main.c        ****     
 812:main.c        ****     while (abs(difference) > 200) {              // ensures the initial readings are accurate
 265              		.loc 1 812 0
 266 0006 29E0     		b	.L22
 267              	.LVL31:
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cccxI4fz.s 			page 20


 268              	.L23:
 813:main.c        ****         distanceSensor(FRONT_LEFT);
 269              		.loc 1 813 0
 270 0008 0020     		movs	r0, #0
 271 000a FFF7FEFF 		bl	distanceSensor
 272              	.LVL32:
 814:main.c        ****         CyDelay(50);                        // 50ms might not be enough ???
 273              		.loc 1 814 0
 274 000e 3220     		movs	r0, #50
 275 0010 FFF7FEFF 		bl	CyDelay
 276              	.LVL33:
 815:main.c        ****         sprintf(output, "%d \t", ultrasonic_distances_mm[FRONT_LEFT]);
 277              		.loc 1 815 0
 278 0014 674E     		ldr	r6, .L32
 279 0016 684C     		ldr	r4, .L32+4
 280              	.LVL34:
 281 0018 684D     		ldr	r5, .L32+8
 282 001a 3268     		ldr	r2, [r6]
 283 001c 2146     		mov	r1, r4
 284 001e 2846     		mov	r0, r5
 285 0020 FFF7FEFF 		bl	sprintf
 286              	.LVL35:
 816:main.c        ****         UART_1_PutString(output);
 287              		.loc 1 816 0
 288 0024 2846     		mov	r0, r5
 289 0026 FFF7FEFF 		bl	UART_1_PutString
 290              	.LVL36:
 817:main.c        ****         
 818:main.c        ****         distanceSensor(FRONT_RIGHT);
 291              		.loc 1 818 0
 292 002a 0120     		movs	r0, #1
 293 002c FFF7FEFF 		bl	distanceSensor
 294              	.LVL37:
 819:main.c        ****         CyDelay(50);
 295              		.loc 1 819 0
 296 0030 3220     		movs	r0, #50
 297 0032 FFF7FEFF 		bl	CyDelay
 298              	.LVL38:
 820:main.c        ****         sprintf(output, "%d \t", ultrasonic_distances_mm[FRONT_RIGHT]);
 299              		.loc 1 820 0
 300 0036 7268     		ldr	r2, [r6, #4]
 301 0038 2146     		mov	r1, r4
 302 003a 2846     		mov	r0, r5
 303 003c FFF7FEFF 		bl	sprintf
 304              	.LVL39:
 821:main.c        ****         UART_1_PutString(output);
 305              		.loc 1 821 0
 306 0040 2846     		mov	r0, r5
 307 0042 FFF7FEFF 		bl	UART_1_PutString
 308              	.LVL40:
 822:main.c        ****         
 823:main.c        ****         difference = ultrasonic_distances_mm[FRONT_LEFT] - ultrasonic_distances_mm[FRONT_RIGHT];
 309              		.loc 1 823 0
 310 0046 3468     		ldr	r4, [r6]
 311 0048 7368     		ldr	r3, [r6, #4]
 312 004a E41A     		subs	r4, r4, r3
 313              	.LVL41:
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cccxI4fz.s 			page 21


 824:main.c        ****         sprintf(output, "difference = %d, \n", difference);       
 314              		.loc 1 824 0
 315 004c 2246     		mov	r2, r4
 316 004e 5C49     		ldr	r1, .L32+12
 317 0050 2846     		mov	r0, r5
 318 0052 FFF7FEFF 		bl	sprintf
 319              	.LVL42:
 825:main.c        ****         UART_1_PutString(output);
 320              		.loc 1 825 0
 321 0056 2846     		mov	r0, r5
 322 0058 FFF7FEFF 		bl	UART_1_PutString
 323              	.LVL43:
 324              	.L22:
 812:main.c        ****         distanceSensor(FRONT_LEFT);
 325              		.loc 1 812 0
 326 005c 84EAE473 		eor	r3, r4, r4, asr #31
 327 0060 A3EBE473 		sub	r3, r3, r4, asr #31
 328 0064 C82B     		cmp	r3, #200
 329 0066 CFDC     		bgt	.L23
 330              	.L30:
 826:main.c        ****     }
 827:main.c        ****     
 828:main.c        ****     
 829:main.c        ****     int speed_left = 30;        // slow speed
 830:main.c        ****     int speed_right = 30;
 831:main.c        ****     
 832:main.c        ****     do {
 833:main.c        ****         if (difference > 0)             // This means we need to move it right
 331              		.loc 1 833 0
 332 0068 002C     		cmp	r4, #0
 333 006a 3BDD     		ble	.L24
 834:main.c        ****         {
 835:main.c        ****             Motor_Left_Control_Write(0); Motor_Right_Control_Write(1); 
 334              		.loc 1 835 0
 335 006c 0020     		movs	r0, #0
 336 006e FFF7FEFF 		bl	Motor_Left_Control_Write
 337              	.LVL44:
 338 0072 0120     		movs	r0, #1
 339 0074 FFF7FEFF 		bl	Motor_Right_Control_Write
 340              	.LVL45:
 836:main.c        ****             while (abs(difference) > tolerance && abs(difference) < 200)     // ensures working cor
 341              		.loc 1 836 0
 342 0078 29E0     		b	.L25
 343              	.LVL46:
 344              	.L27:
 837:main.c        ****             {
 838:main.c        ****             Motor_Left_Driver_Wakeup();
 345              		.loc 1 838 0
 346 007a FFF7FEFF 		bl	Motor_Left_Driver_Wakeup
 347              	.LVL47:
 839:main.c        ****             Motor_Left_Driver_WriteCompare(speed_left);
 348              		.loc 1 839 0
 349 007e 1E20     		movs	r0, #30
 350 0080 FFF7FEFF 		bl	Motor_Left_Driver_WriteCompare
 351              	.LVL48:
 840:main.c        ****             Motor_Right_Driver_Wakeup();
 352              		.loc 1 840 0
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cccxI4fz.s 			page 22


 353 0084 FFF7FEFF 		bl	Motor_Right_Driver_Wakeup
 354              	.LVL49:
 841:main.c        ****             Motor_Right_Driver_WriteCompare(speed_right);
 355              		.loc 1 841 0
 356 0088 1E20     		movs	r0, #30
 357 008a FFF7FEFF 		bl	Motor_Right_Driver_WriteCompare
 358              	.LVL50:
 842:main.c        **** 
 843:main.c        ****             distanceSensor(FRONT_LEFT);
 359              		.loc 1 843 0
 360 008e 0020     		movs	r0, #0
 361 0090 FFF7FEFF 		bl	distanceSensor
 362              	.LVL51:
 844:main.c        ****             CyDelay(50);
 363              		.loc 1 844 0
 364 0094 3220     		movs	r0, #50
 365 0096 FFF7FEFF 		bl	CyDelay
 366              	.LVL52:
 845:main.c        ****             distanceSensor(FRONT_RIGHT);
 367              		.loc 1 845 0
 368 009a 0120     		movs	r0, #1
 369 009c FFF7FEFF 		bl	distanceSensor
 370              	.LVL53:
 846:main.c        ****             CyDelay(50);
 371              		.loc 1 846 0
 372 00a0 3220     		movs	r0, #50
 373 00a2 FFF7FEFF 		bl	CyDelay
 374              	.LVL54:
 847:main.c        ****                       
 848:main.c        ****             difference = ultrasonic_distances_mm[FRONT_LEFT] - ultrasonic_distances_mm[FRONT_RIGHT]
 375              		.loc 1 848 0
 376 00a6 434B     		ldr	r3, .L32
 377 00a8 1A68     		ldr	r2, [r3]
 378 00aa 5B68     		ldr	r3, [r3, #4]
 379 00ac D41A     		subs	r4, r2, r3
 380              	.LVL55:
 849:main.c        ****             
 850:main.c        ****             sprintf(output, "%d, %d \n", ultrasonic_distances_mm[FRONT_LEFT], ultrasonic_distances_
 381              		.loc 1 850 0
 382 00ae 434D     		ldr	r5, .L32+8
 383 00b0 4449     		ldr	r1, .L32+16
 384 00b2 2846     		mov	r0, r5
 385 00b4 FFF7FEFF 		bl	sprintf
 386              	.LVL56:
 851:main.c        ****             UART_1_PutString(output);
 387              		.loc 1 851 0
 388 00b8 2846     		mov	r0, r5
 389 00ba FFF7FEFF 		bl	UART_1_PutString
 390              	.LVL57:
 852:main.c        ****             
 853:main.c        ****             sprintf(output, "difference = %d, \n", difference);       
 391              		.loc 1 853 0
 392 00be 2246     		mov	r2, r4
 393 00c0 3F49     		ldr	r1, .L32+12
 394 00c2 2846     		mov	r0, r5
 395 00c4 FFF7FEFF 		bl	sprintf
 396              	.LVL58:
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cccxI4fz.s 			page 23


 854:main.c        ****             UART_1_PutString(output);
 397              		.loc 1 854 0
 398 00c8 2846     		mov	r0, r5
 399 00ca FFF7FEFF 		bl	UART_1_PutString
 400              	.LVL59:
 401              	.L25:
 836:main.c        ****             {
 402              		.loc 1 836 0
 403 00ce 84EAE473 		eor	r3, r4, r4, asr #31
 404 00d2 A3EBE473 		sub	r3, r3, r4, asr #31
 405 00d6 032B     		cmp	r3, #3
 406 00d8 3FDD     		ble	.L26
 836:main.c        ****             {
 407              		.loc 1 836 0 is_stmt 0 discriminator 1
 408 00da C734     		adds	r4, r4, #199
 409              	.LVL60:
 410 00dc B4F5C77F 		cmp	r4, #398
 411 00e0 CBD9     		bls	.L27
 412 00e2 3AE0     		b	.L26
 413              	.LVL61:
 414              	.L24:
 855:main.c        ****             
 856:main.c        ****             
 857:main.c        ****             }
 858:main.c        ****             
 859:main.c        ****         }
 860:main.c        ****         else {
 861:main.c        ****             Motor_Left_Control_Write(1); Motor_Right_Control_Write(0);
 415              		.loc 1 861 0 is_stmt 1
 416 00e4 0120     		movs	r0, #1
 417 00e6 FFF7FEFF 		bl	Motor_Left_Control_Write
 418              	.LVL62:
 419 00ea 0020     		movs	r0, #0
 420 00ec FFF7FEFF 		bl	Motor_Right_Control_Write
 421              	.LVL63:
 862:main.c        ****             while (abs(difference) > tolerance && abs(difference) < 200) 
 422              		.loc 1 862 0
 423 00f0 29E0     		b	.L28
 424              	.LVL64:
 425              	.L29:
 863:main.c        ****             {
 864:main.c        ****             Motor_Left_Driver_Wakeup();
 426              		.loc 1 864 0
 427 00f2 FFF7FEFF 		bl	Motor_Left_Driver_Wakeup
 428              	.LVL65:
 865:main.c        ****             Motor_Left_Driver_WriteCompare(speed_left);
 429              		.loc 1 865 0
 430 00f6 1E20     		movs	r0, #30
 431 00f8 FFF7FEFF 		bl	Motor_Left_Driver_WriteCompare
 432              	.LVL66:
 866:main.c        ****             Motor_Right_Driver_Wakeup();
 433              		.loc 1 866 0
 434 00fc FFF7FEFF 		bl	Motor_Right_Driver_Wakeup
 435              	.LVL67:
 867:main.c        ****             Motor_Right_Driver_WriteCompare(speed_right); 
 436              		.loc 1 867 0
 437 0100 1E20     		movs	r0, #30
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cccxI4fz.s 			page 24


 438 0102 FFF7FEFF 		bl	Motor_Right_Driver_WriteCompare
 439              	.LVL68:
 868:main.c        ****             
 869:main.c        ****             distanceSensor(FRONT_LEFT);
 440              		.loc 1 869 0
 441 0106 0020     		movs	r0, #0
 442 0108 FFF7FEFF 		bl	distanceSensor
 443              	.LVL69:
 870:main.c        ****             CyDelay(50);
 444              		.loc 1 870 0
 445 010c 3220     		movs	r0, #50
 446 010e FFF7FEFF 		bl	CyDelay
 447              	.LVL70:
 871:main.c        ****             distanceSensor(FRONT_RIGHT);
 448              		.loc 1 871 0
 449 0112 0120     		movs	r0, #1
 450 0114 FFF7FEFF 		bl	distanceSensor
 451              	.LVL71:
 872:main.c        ****             CyDelay(50);
 452              		.loc 1 872 0
 453 0118 3220     		movs	r0, #50
 454 011a FFF7FEFF 		bl	CyDelay
 455              	.LVL72:
 873:main.c        ****                       
 874:main.c        ****             difference = ultrasonic_distances_mm[FRONT_LEFT] - ultrasonic_distances_mm[FRONT_RIGHT]
 456              		.loc 1 874 0
 457 011e 254B     		ldr	r3, .L32
 458 0120 1A68     		ldr	r2, [r3]
 459 0122 5B68     		ldr	r3, [r3, #4]
 460 0124 D41A     		subs	r4, r2, r3
 461              	.LVL73:
 875:main.c        ****             
 876:main.c        ****             sprintf(output, " %d , %d \t", ultrasonic_distances_mm[FRONT_LEFT], ultrasonic_distance
 462              		.loc 1 876 0
 463 0126 254D     		ldr	r5, .L32+8
 464 0128 2749     		ldr	r1, .L32+20
 465 012a 2846     		mov	r0, r5
 466 012c FFF7FEFF 		bl	sprintf
 467              	.LVL74:
 877:main.c        ****             UART_1_PutString(output);
 468              		.loc 1 877 0
 469 0130 2846     		mov	r0, r5
 470 0132 FFF7FEFF 		bl	UART_1_PutString
 471              	.LVL75:
 878:main.c        ****             
 879:main.c        ****             sprintf(output, "dif: %d, \n", difference);       
 472              		.loc 1 879 0
 473 0136 2246     		mov	r2, r4
 474 0138 2449     		ldr	r1, .L32+24
 475 013a 2846     		mov	r0, r5
 476 013c FFF7FEFF 		bl	sprintf
 477              	.LVL76:
 880:main.c        ****             UART_1_PutString(output);
 478              		.loc 1 880 0
 479 0140 2846     		mov	r0, r5
 480 0142 FFF7FEFF 		bl	UART_1_PutString
 481              	.LVL77:
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cccxI4fz.s 			page 25


 482              	.L28:
 862:main.c        ****             {
 483              		.loc 1 862 0
 484 0146 84EAE473 		eor	r3, r4, r4, asr #31
 485 014a A3EBE473 		sub	r3, r3, r4, asr #31
 486 014e 032B     		cmp	r3, #3
 487 0150 03DD     		ble	.L26
 862:main.c        ****             {
 488              		.loc 1 862 0 is_stmt 0 discriminator 1
 489 0152 C734     		adds	r4, r4, #199
 490              	.LVL78:
 491 0154 B4F5C77F 		cmp	r4, #398
 492 0158 CBD9     		bls	.L29
 493              	.LVL79:
 494              	.L26:
 881:main.c        ****             
 882:main.c        ****             }
 883:main.c        ****             
 884:main.c        ****         }
 885:main.c        ****         
 886:main.c        ****         
 887:main.c        ****         // CHECKS one more time to ensure the difference is accurate: 
 888:main.c        ****         distanceSensor(FRONT_LEFT);
 495              		.loc 1 888 0 is_stmt 1
 496 015a 0020     		movs	r0, #0
 497 015c FFF7FEFF 		bl	distanceSensor
 498              	.LVL80:
 889:main.c        ****         CyDelay(50);
 499              		.loc 1 889 0
 500 0160 3220     		movs	r0, #50
 501 0162 FFF7FEFF 		bl	CyDelay
 502              	.LVL81:
 890:main.c        ****         distanceSensor(FRONT_RIGHT);
 503              		.loc 1 890 0
 504 0166 0120     		movs	r0, #1
 505 0168 FFF7FEFF 		bl	distanceSensor
 506              	.LVL82:
 891:main.c        ****         CyDelay(50);
 507              		.loc 1 891 0
 508 016c 3220     		movs	r0, #50
 509 016e FFF7FEFF 		bl	CyDelay
 510              	.LVL83:
 892:main.c        ****                       
 893:main.c        ****         difference = ultrasonic_distances_mm[FRONT_LEFT] - ultrasonic_distances_mm[FRONT_RIGHT];
 511              		.loc 1 893 0
 512 0172 104B     		ldr	r3, .L32
 513 0174 1A68     		ldr	r2, [r3]
 514 0176 5B68     		ldr	r3, [r3, #4]
 515 0178 D41A     		subs	r4, r2, r3
 516              	.LVL84:
 894:main.c        ****         sprintf(output, "%d, %d \n", ultrasonic_distances_mm[FRONT_LEFT], ultrasonic_distances_mm[F
 517              		.loc 1 894 0
 518 017a 104D     		ldr	r5, .L32+8
 519 017c 1149     		ldr	r1, .L32+16
 520 017e 2846     		mov	r0, r5
 521 0180 FFF7FEFF 		bl	sprintf
 522              	.LVL85:
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cccxI4fz.s 			page 26


 895:main.c        ****         UART_1_PutString(output);
 523              		.loc 1 895 0
 524 0184 2846     		mov	r0, r5
 525 0186 FFF7FEFF 		bl	UART_1_PutString
 526              	.LVL86:
 896:main.c        ****         sprintf(output, "difference = %d, \n", difference);       
 527              		.loc 1 896 0
 528 018a 2246     		mov	r2, r4
 529 018c 0C49     		ldr	r1, .L32+12
 530 018e 2846     		mov	r0, r5
 531 0190 FFF7FEFF 		bl	sprintf
 532              	.LVL87:
 897:main.c        ****         UART_1_PutString(output);
 533              		.loc 1 897 0
 534 0194 2846     		mov	r0, r5
 535 0196 FFF7FEFF 		bl	UART_1_PutString
 536              	.LVL88:
 898:main.c        ****         
 899:main.c        ****     } while (abs(difference) > 10);        // This ensures that the turning worked correctly
 537              		.loc 1 899 0
 538 019a 84EAE473 		eor	r3, r4, r4, asr #31
 539 019e A3EBE473 		sub	r3, r3, r4, asr #31
 540 01a2 0A2B     		cmp	r3, #10
 541 01a4 3FF760AF 		bgt	.L30
 900:main.c        ****     
 901:main.c        ****     Motor_Left_Driver_Sleep();
 542              		.loc 1 901 0
 543 01a8 FFF7FEFF 		bl	Motor_Left_Driver_Sleep
 544              	.LVL89:
 902:main.c        ****     Motor_Right_Driver_Sleep();
 545              		.loc 1 902 0
 546 01ac FFF7FEFF 		bl	Motor_Right_Driver_Sleep
 547              	.LVL90:
 548 01b0 70BD     		pop	{r4, r5, r6, pc}
 549              	.LVL91:
 550              	.L33:
 551 01b2 00BF     		.align	2
 552              	.L32:
 553 01b4 00000000 		.word	ultrasonic_distances_mm
 554 01b8 00000000 		.word	.LC0
 555 01bc 00000000 		.word	output
 556 01c0 08000000 		.word	.LC1
 557 01c4 1C000000 		.word	.LC2
 558 01c8 28000000 		.word	.LC3
 559 01cc 34000000 		.word	.LC4
 560              		.cfi_endproc
 561              	.LFE69:
 562              		.size	straightAdjust, .-straightAdjust
 563              		.section	.text.moveUntil,"ax",%progbits
 564              		.align	2
 565              		.global	moveUntil
 566              		.thumb
 567              		.thumb_func
 568              		.type	moveUntil, %function
 569              	moveUntil:
 570              	.LFB70:
 903:main.c        ****     
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cccxI4fz.s 			page 27


 904:main.c        ****     // I WANT TO CREATE A FUNCTION THAT TAKES A CONTINOUS POLL OF THE UTLRASONICS 
 905:main.c        ****     
 906:main.c        ****     
 907:main.c        ****     /*
 908:main.c        **** 
 909:main.c        ****     while(abs(difference) > tolerance)
 910:main.c        ****     {
 911:main.c        ****         distanceCheck();         // updates the distances
 912:main.c        ****         difference = ultrasonic_distances_mm[FRONT_LEFT] - ultrasonic_distances_mm[FRONT_RIGHT];
 913:main.c        ****         sprintf(output, "%d, \t", ultrasonic_distances_mm[FRONT_LEFT]);       
 914:main.c        ****         UART_1_PutString(output);
 915:main.c        ****         sprintf(output, "%d \n", ultrasonic_distances_mm[FRONT_RIGHT]);      
 916:main.c        ****         UART_1_PutString(output);
 917:main.c        ****         
 918:main.c        ****         if (ultrasonic_distances_mm[FRONT_LEFT] < ultrasonic_distances_mm[FRONT_RIGHT] 
 919:main.c        ****                 || ultrasonic_distances_mm[FRONT_LEFT] > 8000) 
 920:main.c        ****         {
 921:main.c        ****             mishaSwivel(-1);    // we want to swivel left
 922:main.c        ****         }
 923:main.c        ****         else if (ultrasonic_distances_mm[FRONT_LEFT] > ultrasonic_distances_mm[FRONT_RIGHT])
 924:main.c        ****         {
 925:main.c        ****             mishaSwivel(1);    // want to swivel right
 926:main.c        ****         }
 927:main.c        ****         
 928:main.c        ****     }
 929:main.c        ****     
 930:main.c        ****     */
 931:main.c        **** 
 932:main.c        **** }
 933:main.c        **** 
 934:main.c        **** 
 935:main.c        **** void moveUntil(int distance_set) {
 571              		.loc 1 935 0
 572              		.cfi_startproc
 573              		@ args = 0, pretend = 0, frame = 0
 574              		@ frame_needed = 0, uses_anonymous_args = 0
 575              	.LVL92:
 576 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 577              		.cfi_def_cfa_offset 24
 578              		.cfi_offset 3, -24
 579              		.cfi_offset 4, -20
 580              		.cfi_offset 5, -16
 581              		.cfi_offset 6, -12
 582              		.cfi_offset 7, -8
 583              		.cfi_offset 14, -4
 936:main.c        ****     // distance_set is in millimeteres
 937:main.c        ****     // will check the front two ultrasonics 
 938:main.c        ****     // will move until distance specified in function 
 939:main.c        ****     
 940:main.c        ****     int count_left;                 // counts the encoder values
 941:main.c        ****     int count_right;
 942:main.c        ****     int speed_left = SPEED;         // the set speed of the motors
 584              		.loc 1 942 0
 585 0002 294B     		ldr	r3, .L40
 586 0004 1C68     		ldr	r4, [r3]
 587              	.LVL93:
 943:main.c        ****     int speed_right = SPEED;
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cccxI4fz.s 			page 28


 944:main.c        ****     int compare;                    
 945:main.c        ****     int ultrasonic_sensor;          // the ultrasonic sensor we will be using 
 946:main.c        ****     int distance_sensor;            // the measured distance of the sensor
 947:main.c        ****     
 948:main.c        ****     
 949:main.c        ****     
 950:main.c        ****     
 951:main.c        ****     // The distance is in millimetres 
 952:main.c        ****     // Is the distance negative or positive? 
 953:main.c        ****     if (distance_set > 0) { 
 588              		.loc 1 953 0
 589 0006 071E     		subs	r7, r0, #0
 590 0008 07DD     		ble	.L35
 954:main.c        ****         Motor_Left_Control_Write(0); 
 591              		.loc 1 954 0
 592 000a 0020     		movs	r0, #0
 593              	.LVL94:
 594 000c FFF7FEFF 		bl	Motor_Left_Control_Write
 595              	.LVL95:
 955:main.c        ****         Motor_Right_Control_Write(0); 
 596              		.loc 1 955 0
 597 0010 0020     		movs	r0, #0
 598 0012 FFF7FEFF 		bl	Motor_Right_Control_Write
 599              	.LVL96:
 956:main.c        ****         ultrasonic_sensor = FRONT_LEFT;       // use the back ultrasonic to test our distance
 600              		.loc 1 956 0
 601 0016 0026     		movs	r6, #0
 602 0018 06E0     		b	.L36
 603              	.LVL97:
 604              	.L35:
 957:main.c        ****                                         // THIS CHECKS THE FRONT LEFT SENSOR, for some reason?
 958:main.c        ****         compare = 32000;                // max compare value
 959:main.c        ****     }
 960:main.c        ****     else {
 961:main.c        ****         Motor_Left_Control_Write(1); 
 605              		.loc 1 961 0
 606 001a 0120     		movs	r0, #1
 607              	.LVL98:
 608 001c FFF7FEFF 		bl	Motor_Left_Control_Write
 609              	.LVL99:
 962:main.c        ****         Motor_Right_Control_Write(1);
 610              		.loc 1 962 0
 611 0020 0120     		movs	r0, #1
 612 0022 FFF7FEFF 		bl	Motor_Right_Control_Write
 613              	.LVL100:
 963:main.c        ****         ultrasonic_sensor = BACK; // We just use one ultrasonic front sensor
 614              		.loc 1 963 0
 615 0026 0426     		movs	r6, #4
 616              	.LVL101:
 617              	.L36:
 964:main.c        ****         compare = -32000;               // min compare value
 965:main.c        ****     }
 966:main.c        ****     
 967:main.c        ****     Motor_Left_Driver_Wakeup();
 618              		.loc 1 967 0
 619 0028 FFF7FEFF 		bl	Motor_Left_Driver_Wakeup
 620              	.LVL102:
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cccxI4fz.s 			page 29


 968:main.c        ****     Motor_Left_Driver_WriteCompare(speed_left);
 621              		.loc 1 968 0
 622 002c E4B2     		uxtb	r4, r4
 623              	.LVL103:
 624 002e 2046     		mov	r0, r4
 625 0030 FFF7FEFF 		bl	Motor_Left_Driver_WriteCompare
 626              	.LVL104:
 969:main.c        ****     Motor_Right_Driver_Wakeup();
 627              		.loc 1 969 0
 628 0034 FFF7FEFF 		bl	Motor_Right_Driver_Wakeup
 629              	.LVL105:
 970:main.c        ****     Motor_Right_Driver_WriteCompare(speed_right);
 630              		.loc 1 970 0
 631 0038 2046     		mov	r0, r4
 632 003a FFF7FEFF 		bl	Motor_Right_Driver_WriteCompare
 633              	.LVL106:
 971:main.c        ****     
 972:main.c        ****     count_left = Motor_Left_Decoder_GetCounter();       
 634              		.loc 1 972 0
 635 003e FFF7FEFF 		bl	Motor_Left_Decoder_GetCounter
 636              	.LVL107:
 973:main.c        ****     count_right = Motor_Right_Decoder_GetCounter();     
 637              		.loc 1 973 0
 638 0042 FFF7FEFF 		bl	Motor_Right_Decoder_GetCounter
 639              	.LVL108:
 974:main.c        ****     //distanceCheckOne(ultrasonic_sensor);                            // checks the distance
 975:main.c        ****     distanceSensor(ultrasonic_sensor);
 640              		.loc 1 975 0
 641 0046 3046     		mov	r0, r6
 642 0048 FFF7FEFF 		bl	distanceSensor
 643              	.LVL109:
 976:main.c        ****     CyDelay(50);
 644              		.loc 1 976 0
 645 004c 3220     		movs	r0, #50
 646 004e FFF7FEFF 		bl	CyDelay
 647              	.LVL110:
 977:main.c        ****     distance_sensor = ultrasonic_distances_mm[ultrasonic_sensor];   // checks the distance measured
 648              		.loc 1 977 0
 649 0052 164B     		ldr	r3, .L40+4
 650 0054 53F82640 		ldr	r4, [r3, r6, lsl #2]
 651              	.LVL111:
 978:main.c        ****     
 979:main.c        ****     while (distance_sensor > abs(distance_set)) {                // This adjusts for drift 
 652              		.loc 1 979 0
 653 0058 15E0     		b	.L37
 654              	.L38:
 980:main.c        ****         count_left = Motor_Left_Decoder_GetCounter();
 655              		.loc 1 980 0
 656 005a FFF7FEFF 		bl	Motor_Left_Decoder_GetCounter
 657              	.LVL112:
 981:main.c        ****         count_right = Motor_Right_Decoder_GetCounter();
 658              		.loc 1 981 0
 659 005e FFF7FEFF 		bl	Motor_Right_Decoder_GetCounter
 660              	.LVL113:
 982:main.c        ****         if (count_left > count_right) {
 983:main.c        ****         speed_left -= 2;
 984:main.c        ****         }
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cccxI4fz.s 			page 30


 985:main.c        ****         if (count_right > count_left) {
 986:main.c        ****         speed_right -=2; 
 987:main.c        ****         }
 988:main.c        ****         distanceSensor(ultrasonic_sensor);
 661              		.loc 1 988 0
 662 0062 3046     		mov	r0, r6
 663 0064 FFF7FEFF 		bl	distanceSensor
 664              	.LVL114:
 989:main.c        ****         CyDelay(50);
 665              		.loc 1 989 0
 666 0068 3220     		movs	r0, #50
 667 006a FFF7FEFF 		bl	CyDelay
 668              	.LVL115:
 990:main.c        ****         //distanceCheckOne(ultrasonic_sensor);                            // checks the distance
 991:main.c        ****         distance_sensor = ultrasonic_distances_mm[ultrasonic_sensor];   // checks the distance meas
 669              		.loc 1 991 0
 670 006e 0F4B     		ldr	r3, .L40+4
 671 0070 53F82640 		ldr	r4, [r3, r6, lsl #2]
 672              	.LVL116:
 992:main.c        ****         sprintf(output, "%d \t", distance_sensor);       
 673              		.loc 1 992 0
 674 0074 0E4D     		ldr	r5, .L40+8
 675 0076 2246     		mov	r2, r4
 676 0078 0E49     		ldr	r1, .L40+12
 677 007a 2846     		mov	r0, r5
 678 007c FFF7FEFF 		bl	sprintf
 679              	.LVL117:
 993:main.c        ****         UART_1_PutString(output);
 680              		.loc 1 993 0
 681 0080 2846     		mov	r0, r5
 682 0082 FFF7FEFF 		bl	UART_1_PutString
 683              	.LVL118:
 684              	.L37:
 979:main.c        ****         count_left = Motor_Left_Decoder_GetCounter();
 685              		.loc 1 979 0
 686 0086 87EAE773 		eor	r3, r7, r7, asr #31
 687 008a A3EBE773 		sub	r3, r3, r7, asr #31
 688 008e 9C42     		cmp	r4, r3
 689 0090 E3DC     		bgt	.L38
 994:main.c        ****     }
 995:main.c        ****     
 996:main.c        ****     //sprintf(output, "left motor: %d \n", count_left);       
 997:main.c        ****     //UART_1_PutString(output);
 998:main.c        ****     //sprintf(output, "right motor: %d \n", count_right);      
 999:main.c        ****     //UART_1_PutString(output);
1000:main.c        ****         
1001:main.c        ****     Motor_Left_Decoder_SetCounter(0);                       // RESET the decoders to 0
 690              		.loc 1 1001 0
 691 0092 0020     		movs	r0, #0
 692 0094 FFF7FEFF 		bl	Motor_Left_Decoder_SetCounter
 693              	.LVL119:
1002:main.c        ****     Motor_Right_Decoder_SetCounter(0);   
 694              		.loc 1 1002 0
 695 0098 0020     		movs	r0, #0
 696 009a FFF7FEFF 		bl	Motor_Right_Decoder_SetCounter
 697              	.LVL120:
1003:main.c        ****     
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cccxI4fz.s 			page 31


1004:main.c        ****     Motor_Left_Driver_Sleep();              // Puts motors to sleep 
 698              		.loc 1 1004 0
 699 009e FFF7FEFF 		bl	Motor_Left_Driver_Sleep
 700              	.LVL121:
1005:main.c        ****     Motor_Right_Driver_Sleep();
 701              		.loc 1 1005 0
 702 00a2 FFF7FEFF 		bl	Motor_Right_Driver_Sleep
 703              	.LVL122:
 704 00a6 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 705              	.LVL123:
 706              	.L41:
 707              		.align	2
 708              	.L40:
 709 00a8 00000000 		.word	SPEED
 710 00ac 00000000 		.word	ultrasonic_distances_mm
 711 00b0 00000000 		.word	output
 712 00b4 00000000 		.word	.LC0
 713              		.cfi_endproc
 714              	.LFE70:
 715              		.size	moveUntil, .-moveUntil
 716              		.section	.text.main,"ax",%progbits
 717              		.align	2
 718              		.global	main
 719              		.thumb
 720              		.thumb_func
 721              		.type	main, %function
 722              	main:
 723              	.LFB66:
 137:main.c        ****     CyGlobalIntEnable; /* Enable global interrupts. */
 724              		.loc 1 137 0
 725              		.cfi_startproc
 726              		@ args = 0, pretend = 0, frame = 0
 727              		@ frame_needed = 0, uses_anonymous_args = 0
 728 0000 38B5     		push	{r3, r4, r5, lr}
 729              		.cfi_def_cfa_offset 16
 730              		.cfi_offset 3, -16
 731              		.cfi_offset 4, -12
 732              		.cfi_offset 5, -8
 733              		.cfi_offset 14, -4
 138:main.c        **** 
 734              		.loc 1 138 0
 735              		.syntax unified
 736              	@ 138 "main.c" 1
 737 0002 62B6     		CPSIE   i
 738              	@ 0 "" 2
 141:main.c        ****     UART_1_Start();
 739              		.loc 1 141 0
 740              		.thumb
 741              		.syntax unified
 742 0004 FFF7FEFF 		bl	TIA_1_Start
 743              	.LVL124:
 142:main.c        ****     UART_1_PutString("UART commencing... \n");
 744              		.loc 1 142 0
 745 0008 FFF7FEFF 		bl	UART_1_Start
 746              	.LVL125:
 143:main.c        ****     ADC_Start();
 747              		.loc 1 143 0
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cccxI4fz.s 			page 32


 748 000c 7048     		ldr	r0, .L58
 749 000e FFF7FEFF 		bl	UART_1_PutString
 750              	.LVL126:
 144:main.c        ****     IDAC8_1_Start();
 751              		.loc 1 144 0
 752 0012 FFF7FEFF 		bl	ADC_Start
 753              	.LVL127:
 145:main.c        ****     
 754              		.loc 1 145 0
 755 0016 FFF7FEFF 		bl	IDAC8_1_Start
 756              	.LVL128:
 155:main.c        ****     IDAC8_1_SetValue(idac_value);               // set a value between 0 and 255
 757              		.loc 1 155 0
 758 001a 0020     		movs	r0, #0
 759 001c FFF7FEFF 		bl	IDAC8_1_SetRange
 760              	.LVL129:
 156:main.c        ****     
 761              		.loc 1 156 0
 762 0020 6C4D     		ldr	r5, .L58+4
 763 0022 287D     		ldrb	r0, [r5, #20]	@ zero_extendqisi2
 764 0024 FFF7FEFF 		bl	IDAC8_1_SetValue
 765              	.LVL130:
 159:main.c        ****     control_photodiode_Write(colour_sensing_algorithm);            // controls which photodiode is 
 766              		.loc 1 159 0
 767 0028 0024     		movs	r4, #0
 768 002a 2C61     		str	r4, [r5, #16]
 160:main.c        ****                                                 // 0: wall
 769              		.loc 1 160 0
 770 002c 2046     		mov	r0, r4
 771 002e FFF7FEFF 		bl	control_photodiode_Write
 772              	.LVL131:
 163:main.c        ****     control_led_Write(2);   CyDelay(500);
 773              		.loc 1 163 0
 774 0032 0120     		movs	r0, #1
 775 0034 FFF7FEFF 		bl	control_led_Write
 776              	.LVL132:
 777 0038 4FF4FA70 		mov	r0, #500
 778 003c FFF7FEFF 		bl	CyDelay
 779              	.LVL133:
 164:main.c        ****     control_led_Write(3);   CyDelay(500);
 780              		.loc 1 164 0
 781 0040 0220     		movs	r0, #2
 782 0042 FFF7FEFF 		bl	control_led_Write
 783              	.LVL134:
 784 0046 4FF4FA70 		mov	r0, #500
 785 004a FFF7FEFF 		bl	CyDelay
 786              	.LVL135:
 165:main.c        ****     control_led_Write(0);   CyDelay(500);
 787              		.loc 1 165 0
 788 004e 0320     		movs	r0, #3
 789 0050 FFF7FEFF 		bl	control_led_Write
 790              	.LVL136:
 791 0054 4FF4FA70 		mov	r0, #500
 792 0058 FFF7FEFF 		bl	CyDelay
 793              	.LVL137:
 166:main.c        ****     colourSensingInitialise();                  // Initialises the colour sensor
 794              		.loc 1 166 0
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cccxI4fz.s 			page 33


 795 005c 2046     		mov	r0, r4
 796 005e FFF7FEFF 		bl	control_led_Write
 797              	.LVL138:
 798 0062 4FF4FA70 		mov	r0, #500
 799 0066 FFF7FEFF 		bl	CyDelay
 800              	.LVL139:
 167:main.c        ****     
 801              		.loc 1 167 0
 802 006a FFF7FEFF 		bl	colourSensingInitialise
 803              	.LVL140:
 171:main.c        ****     Rack_Servo_PWM_WriteCompare(1000);          // BRINGs rack to highest position, so not to mess 
 804              		.loc 1 171 0
 805 006e FFF7FEFF 		bl	Rack_Servo_PWM_Start
 806              	.LVL141:
 172:main.c        ****     CyDelay(500);
 807              		.loc 1 172 0
 808 0072 4FF47A70 		mov	r0, #1000
 809 0076 FFF7FEFF 		bl	Rack_Servo_PWM_WriteCompare
 810              	.LVL142:
 173:main.c        ****     Rack_Servo_PWM_Sleep();
 811              		.loc 1 173 0
 812 007a 4FF4FA70 		mov	r0, #500
 813 007e FFF7FEFF 		bl	CyDelay
 814              	.LVL143:
 174:main.c        ****     
 815              		.loc 1 174 0
 816 0082 FFF7FEFF 		bl	Rack_Servo_PWM_Sleep
 817              	.LVL144:
 176:main.c        ****     Gripper_Servo_PWM_WriteCompare(1120);       //This is the open gripper position
 818              		.loc 1 176 0
 819 0086 FFF7FEFF 		bl	Gripper_Servo_PWM_Start
 820              	.LVL145:
 177:main.c        ****     CyDelay(500);
 821              		.loc 1 177 0
 822 008a 4FF48C60 		mov	r0, #1120
 823 008e FFF7FEFF 		bl	Gripper_Servo_PWM_WriteCompare
 824              	.LVL146:
 178:main.c        ****     Gripper_Servo_PWM_Sleep();
 825              		.loc 1 178 0
 826 0092 4FF4FA70 		mov	r0, #500
 827 0096 FFF7FEFF 		bl	CyDelay
 828              	.LVL147:
 179:main.c        ****     
 829              		.loc 1 179 0
 830 009a FFF7FEFF 		bl	Gripper_Servo_PWM_Sleep
 831              	.LVL148:
 182:main.c        ****     Motor_Left_Driver_Sleep();                  // Puts motor to sleep
 832              		.loc 1 182 0
 833 009e FFF7FEFF 		bl	Motor_Left_Driver_Start
 834              	.LVL149:
 183:main.c        ****     Motor_Right_Driver_Start();
 835              		.loc 1 183 0
 836 00a2 FFF7FEFF 		bl	Motor_Left_Driver_Sleep
 837              	.LVL150:
 184:main.c        ****     Motor_Right_Driver_Sleep();                 // Puts motor to sleep
 838              		.loc 1 184 0
 839 00a6 FFF7FEFF 		bl	Motor_Right_Driver_Start
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cccxI4fz.s 			page 34


 840              	.LVL151:
 185:main.c        ****     
 841              		.loc 1 185 0
 842 00aa FFF7FEFF 		bl	Motor_Right_Driver_Sleep
 843              	.LVL152:
 187:main.c        ****     Motor_Right_Decoder_Start();
 844              		.loc 1 187 0
 845 00ae FFF7FEFF 		bl	Motor_Left_Decoder_Start
 846              	.LVL153:
 188:main.c        ****     
 847              		.loc 1 188 0
 848 00b2 FFF7FEFF 		bl	Motor_Right_Decoder_Start
 849              	.LVL154:
 194:main.c        ****     Timer_1_ReadStatusRegister();
 850              		.loc 1 194 0
 851 00b6 FFF7FEFF 		bl	Timer_1_Start
 852              	.LVL155:
 195:main.c        ****     Sonic_StartEx(TIH);
 853              		.loc 1 195 0
 854 00ba FFF7FEFF 		bl	Timer_1_ReadStatusRegister
 855              	.LVL156:
 196:main.c        ****     Start_StartEx(StartIH);
 856              		.loc 1 196 0
 857 00be 4648     		ldr	r0, .L58+8
 858 00c0 FFF7FEFF 		bl	Sonic_StartEx
 859              	.LVL157:
 197:main.c        ****     beginNavigation = 0;
 860              		.loc 1 197 0
 861 00c4 4548     		ldr	r0, .L58+12
 862 00c6 FFF7FEFF 		bl	Start_StartEx
 863              	.LVL158:
 198:main.c        ****     
 864              		.loc 1 198 0
 865 00ca 2C60     		str	r4, [r5]
 866              	.L51:
 241:main.c        ****             
 867              		.loc 1 241 0
 868 00cc 444B     		ldr	r3, .L58+16
 869 00ce 9B68     		ldr	r3, [r3, #8]
 870 00d0 012B     		cmp	r3, #1
 871 00d2 2AD1     		bne	.L43
 872 00d4 0023     		movs	r3, #0
 873              	.L47:
 874              	.LVL159:
 875              	.LBB2:
 320:main.c        ****                         {
 876              		.loc 1 320 0
 877 00d6 13BB     		cbnz	r3, .L44
 878              	.LBB3:
 322:main.c        ****                             
 879              		.loc 1 322 0
 880 00d8 4248     		ldr	r0, .L58+20
 881 00da FFF7FEFF 		bl	UART_1_PutString
 882              	.LVL160:
 883              	.LBB4:
 359:main.c        ****                                 {
 884              		.loc 1 359 0
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cccxI4fz.s 			page 35


 885 00de 0024     		movs	r4, #0
 886 00e0 11E0     		b	.L45
 887              	.LVL161:
 888              	.L46:
 361:main.c        ****                                     CyDelay(100);
 889              		.loc 1 361 0 discriminator 3
 890 00e2 2046     		mov	r0, r4
 891 00e4 FFF7FEFF 		bl	distanceSensor
 892              	.LVL162:
 362:main.c        ****                                     sprintf(output, "%d \t", ultrasonic_distances_mm[i]);
 893              		.loc 1 362 0 discriminator 3
 894 00e8 6420     		movs	r0, #100
 895 00ea FFF7FEFF 		bl	CyDelay
 896              	.LVL163:
 363:main.c        ****                                     UART_1_PutString(output);
 897              		.loc 1 363 0 discriminator 3
 898 00ee 3E4D     		ldr	r5, .L58+24
 899 00f0 3E4B     		ldr	r3, .L58+28
 900 00f2 53F82420 		ldr	r2, [r3, r4, lsl #2]
 901 00f6 3E49     		ldr	r1, .L58+32
 902 00f8 2846     		mov	r0, r5
 903 00fa FFF7FEFF 		bl	sprintf
 904              	.LVL164:
 364:main.c        ****                                 }
 905              		.loc 1 364 0 discriminator 3
 906 00fe 2846     		mov	r0, r5
 907 0100 FFF7FEFF 		bl	UART_1_PutString
 908              	.LVL165:
 359:main.c        ****                                 {
 909              		.loc 1 359 0 discriminator 3
 910 0104 0134     		adds	r4, r4, #1
 911              	.LVL166:
 912              	.L45:
 359:main.c        ****                                 {
 913              		.loc 1 359 0 is_stmt 0 discriminator 1
 914 0106 042C     		cmp	r4, #4
 915 0108 EBDD     		ble	.L46
 916              	.LBE4:
 366:main.c        ****                             
 917              		.loc 1 366 0 is_stmt 1
 918 010a 3A48     		ldr	r0, .L58+36
 919 010c FFF7FEFF 		bl	UART_1_PutString
 920              	.LVL167:
 369:main.c        ****                             straightAdjust();
 921              		.loc 1 369 0
 922 0110 6FF09500 		mvn	r0, #149
 923 0114 FFF7FEFF 		bl	moveUntil
 924              	.LVL168:
 370:main.c        ****                             
 925              		.loc 1 370 0
 926 0118 FFF7FEFF 		bl	straightAdjust
 927              	.LVL169:
 392:main.c        ****                         }
 928              		.loc 1 392 0
 929 011c 0123     		movs	r3, #1
 930              	.LVL170:
 931              	.L44:
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cccxI4fz.s 			page 36


 932              	.LBE3:
 394:main.c        ****             }    
 933              		.loc 1 394 0
 934 011e 002B     		cmp	r3, #0
 935 0120 D9D1     		bne	.L47
 936              	.LBE2:
 403:main.c        ****             while(1) {};
 937              		.loc 1 403 0
 938 0122 E620     		movs	r0, #230
 939 0124 FFF7FEFF 		bl	mishaMoveDynamic
 940              	.LVL171:
 941              	.L48:
 942 0128 FEE7     		b	.L48
 943              	.L43:
 483:main.c        ****             
 944              		.loc 1 483 0
 945 012a 022B     		cmp	r3, #2
 946 012c 17D1     		bne	.L49
 485:main.c        ****             mishaMoveDynamic(-150);
 947              		.loc 1 485 0
 948 012e 6FF02C00 		mvn	r0, #44
 949 0132 FFF7FEFF 		bl	mishaSwivel
 950              	.LVL172:
 486:main.c        ****             mishaSwivel(45);
 951              		.loc 1 486 0
 952 0136 6FF09500 		mvn	r0, #149
 953 013a FFF7FEFF 		bl	mishaMoveDynamic
 954              	.LVL173:
 487:main.c        ****             mishaMoveDynamic(200);
 955              		.loc 1 487 0
 956 013e 2D20     		movs	r0, #45
 957 0140 FFF7FEFF 		bl	mishaSwivel
 958              	.LVL174:
 488:main.c        ****             mishaSwivel(90);
 959              		.loc 1 488 0
 960 0144 C820     		movs	r0, #200
 961 0146 FFF7FEFF 		bl	mishaMoveDynamic
 962              	.LVL175:
 489:main.c        ****             mishaMoveDynamic(500);
 963              		.loc 1 489 0
 964 014a 5A20     		movs	r0, #90
 965 014c FFF7FEFF 		bl	mishaSwivel
 966              	.LVL176:
 490:main.c        ****             
 967              		.loc 1 490 0
 968 0150 4FF4FA70 		mov	r0, #500
 969 0154 FFF7FEFF 		bl	mishaMoveDynamic
 970              	.LVL177:
 517:main.c        **** 	    }
 971              		.loc 1 517 0
 972 0158 0322     		movs	r2, #3
 973 015a 214B     		ldr	r3, .L58+16
 974 015c 9A60     		str	r2, [r3, #8]
 975              	.L49:
 522:main.c        ****             
 976              		.loc 1 522 0
 977 015e 204B     		ldr	r3, .L58+16
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cccxI4fz.s 			page 37


 978 0160 9B68     		ldr	r3, [r3, #8]
 979 0162 032B     		cmp	r3, #3
 980 0164 02D1     		bne	.L50
 543:main.c        ****         }
 981              		.loc 1 543 0
 982 0166 0422     		movs	r2, #4
 983 0168 1D4B     		ldr	r3, .L58+16
 984 016a 9A60     		str	r2, [r3, #8]
 985              	.L50:
 548:main.c        ****         {
 986              		.loc 1 548 0
 987 016c 1C4B     		ldr	r3, .L58+16
 988 016e 9B68     		ldr	r3, [r3, #8]
 989 0170 042B     		cmp	r3, #4
 990 0172 ABD1     		bne	.L51
 991              	.LBB5:
 552:main.c        ****         int puck_correct = FALSE;   // A flag to determine if the correct puck has been picked up
 992              		.loc 1 552 0
 993 0174 4622     		movs	r2, #70
 994 0176 204B     		ldr	r3, .L58+40
 995 0178 1A60     		str	r2, [r3]
 996              	.LVL178:
 557:main.c        ****     
 997              		.loc 1 557 0
 998 017a 0122     		movs	r2, #1
 999 017c 154B     		ldr	r3, .L58+4
 1000 017e 9A60     		str	r2, [r3, #8]
 553:main.c        ****         int puck_scan;
 1001              		.loc 1 553 0
 1002 0180 0024     		movs	r4, #0
 561:main.c        ****         {
 1003              		.loc 1 561 0
 1004 0182 14E0     		b	.L52
 1005              	.LVL179:
 1006              	.L54:
 563:main.c        ****                                     // could replace this with the distance gathered from the ultra
 1007              		.loc 1 563 0
 1008 0184 3220     		movs	r0, #50
 1009 0186 FFF7FEFF 		bl	mishaMoveDynamic
 1010              	.LVL180:
 565:main.c        ****             puck_scan = colourSensingOutput();  // colour sensor takes a scan
 1011              		.loc 1 565 0
 1012 018a 0120     		movs	r0, #1
 1013 018c FFF7FEFF 		bl	changeHeightToPuck
 1014              	.LVL181:
 566:main.c        ****             changeHeightToPuck(3);  // arm returns to high position
 1015              		.loc 1 566 0
 1016 0190 FFF7FEFF 		bl	colourSensingOutput
 1017              	.LVL182:
 1018 0194 0546     		mov	r5, r0
 1019              	.LVL183:
 567:main.c        ****             mishaMoveDynamic(-50);   // robot moves backwards
 1020              		.loc 1 567 0
 1021 0196 0320     		movs	r0, #3
 1022              	.LVL184:
 1023 0198 FFF7FEFF 		bl	changeHeightToPuck
 1024              	.LVL185:
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cccxI4fz.s 			page 38


 568:main.c        ****             if (puck_scan == puckConstructionPlan[1]) {puck_correct = TRUE;}
 1025              		.loc 1 568 0
 1026 019c 6FF03100 		mvn	r0, #49
 1027 01a0 FFF7FEFF 		bl	mishaMoveDynamic
 1028              	.LVL186:
 569:main.c        ****                                     // if colour == true:
 1029              		.loc 1 569 0
 1030 01a4 0B4B     		ldr	r3, .L58+4
 1031 01a6 9B68     		ldr	r3, [r3, #8]
 1032 01a8 9D42     		cmp	r5, r3
 1033 01aa 00D1     		bne	.L52
 1034 01ac 0124     		movs	r4, #1
 1035              	.LVL187:
 1036              	.L52:
 561:main.c        ****         {
 1037              		.loc 1 561 0
 1038 01ae 002C     		cmp	r4, #0
 1039 01b0 E8D0     		beq	.L54
 580:main.c        ****         //changeHeightToPuck(1);
 1040              		.loc 1 580 0
 1041 01b2 0020     		movs	r0, #0
 1042 01b4 FFF7FEFF 		bl	changeHeightToPuck
 1043              	.LVL188:
 582:main.c        ****         //mishaMoveDynamic(60);       // robot moves forward
 1044              		.loc 1 582 0
 1045 01b8 FFF7FEFF 		bl	moveUntilPuck
 1046              	.LVL189:
 584:main.c        ****         changeHeightToPuck(3);      // arm lifts up to highest position
 1047              		.loc 1 584 0
 1048 01bc FFF7FEFF 		bl	armClose
 1049              	.LVL190:
 585:main.c        ****         mishaMoveDynamic(-60);       // robot moves back away from puck area 
 1050              		.loc 1 585 0
 1051 01c0 0320     		movs	r0, #3
 1052 01c2 FFF7FEFF 		bl	changeHeightToPuck
 1053              	.LVL191:
 586:main.c        ****         
 1054              		.loc 1 586 0
 1055 01c6 6FF03B00 		mvn	r0, #59
 1056 01ca FFF7FEFF 		bl	mishaMoveDynamic
 1057              	.LVL192:
 1058              	.L55:
 1059 01ce FEE7     		b	.L55
 1060              	.L59:
 1061              		.align	2
 1062              	.L58:
 1063 01d0 40000000 		.word	.LC5
 1064 01d4 00000000 		.word	.LANCHOR0
 1065 01d8 00000000 		.word	TIH
 1066 01dc 00000000 		.word	StartIH
 1067 01e0 00000000 		.word	.LANCHOR1
 1068 01e4 58000000 		.word	.LC6
 1069 01e8 00000000 		.word	output
 1070 01ec 00000000 		.word	ultrasonic_distances_mm
 1071 01f0 00000000 		.word	.LC0
 1072 01f4 70000000 		.word	.LC7
 1073 01f8 00000000 		.word	SPEED
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cccxI4fz.s 			page 39


 1074              	.LBE5:
 1075              		.cfi_endproc
 1076              	.LFE66:
 1077              		.size	main, .-main
 1078              		.comm	distance_returned_global,4,4
 1079              		.global	current_stage
 1080              		.global	PLAN_SCAN_VERTICAL
 1081              		.global	moving
 1082              		.global	colour_sensing_algorithm
 1083              		.global	colour_flag
 1084              		.global	idac_value
 1085              		.comm	moveBackwardAllowed,2,2
 1086              		.comm	moveForwardAllowed,2,2
 1087              		.comm	moveRightAllowed,2,2
 1088              		.comm	moveLeftAllowed,2,2
 1089              		.global	moveNow
 1090              		.comm	desiredOrientation,4,4
 1091              		.global	currentOrientation
 1092              		.comm	desiredPosition,8,4
 1093              		.global	currentPosition
 1094              		.comm	pathPastBlock,4,4
 1095              		.comm	pathToPucks,4,4
 1096              		.global	beginNavigation
 1097              		.global	horizontalPuckGrid
 1098              		.global	puckConstructionPlan
 1099              		.global	currentPuckStackSize
 1100              		.global	running
 1101              		.global	state
 1102              		.comm	ultrasonic_flag,4,4
 1103              		.comm	initialisation,4,4
 1104              		.comm	output,32,4
 1105              		.global	turningRightFlag
 1106              		.global	turningLeftFlag
 1107              		.global	drivingBackwardFlag
 1108              		.global	drivingForwardFlag
 1109              		.comm	puckPileLocation,4,4
 1110              		.global	block_edge_location
 1111              		.global	sweeping
 1112              		.global	puckRackOffsetsFromWest
 1113              		.global	puckRackColours
 1114              		.global	currentPuckRackScanningIndex
 1115              		.comm	driveStraightEnable,4,4
 1116              		.section	.rodata
 1117              		.align	2
 1118              		.type	PLAN_SCAN_VERTICAL, %object
 1119              		.size	PLAN_SCAN_VERTICAL, 4
 1120              	PLAN_SCAN_VERTICAL:
 1121 0000 0A000000 		.word	10
 1122              		.data
 1123              		.align	2
 1124              		.set	.LANCHOR1,. + 0
 1125              		.type	colour_flag, %object
 1126              		.size	colour_flag, 4
 1127              	colour_flag:
 1128 0000 01000000 		.word	1
 1129              		.type	current_stage, %object
 1130              		.size	current_stage, 4
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cccxI4fz.s 			page 40


 1131              	current_stage:
 1132 0004 01000000 		.word	1
 1133              		.type	state, %object
 1134              		.size	state, 4
 1135              	state:
 1136 0008 01000000 		.word	1
 1137              		.type	moveNow, %object
 1138              		.size	moveNow, 2
 1139              	moveNow:
 1140 000c 0100     		.short	1
 1141 000e 0000     		.space	2
 1142              		.type	currentOrientation, %object
 1143              		.size	currentOrientation, 4
 1144              	currentOrientation:
 1145 0010 5A000000 		.word	90
 1146              		.type	running, %object
 1147              		.size	running, 4
 1148              	running:
 1149 0014 01000000 		.word	1
 1150              		.type	puckRackOffsetsFromWest, %object
 1151              		.size	puckRackOffsetsFromWest, 20
 1152              	puckRackOffsetsFromWest:
 1153 0018 48000000 		.word	72
 1154 001c 42000000 		.word	66
 1155 0020 3C000000 		.word	60
 1156 0024 36000000 		.word	54
 1157 0028 30000000 		.word	48
 1158              		.section	.rodata.str1.4,"aMS",%progbits,1
 1159              		.align	2
 1160              	.LC0:
 1161 0000 25642009 		.ascii	"%d \011\000"
 1161      00
 1162 0005 000000   		.space	3
 1163              	.LC1:
 1164 0008 64696666 		.ascii	"difference = %d, \012\000"
 1164      6572656E 
 1164      6365203D 
 1164      2025642C 
 1164      200A00
 1165 001b 00       		.space	1
 1166              	.LC2:
 1167 001c 25642C20 		.ascii	"%d, %d \012\000"
 1167      2564200A 
 1167      00
 1168 0025 000000   		.space	3
 1169              	.LC3:
 1170 0028 20256420 		.ascii	" %d , %d \011\000"
 1170      2C202564 
 1170      200900
 1171 0033 00       		.space	1
 1172              	.LC4:
 1173 0034 6469663A 		.ascii	"dif: %d, \012\000"
 1173      2025642C 
 1173      200A00
 1174 003f 00       		.space	1
 1175              	.LC5:
 1176 0040 55415254 		.ascii	"UART commencing... \012\000"
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cccxI4fz.s 			page 41


 1176      20636F6D 
 1176      6D656E63 
 1176      696E672E 
 1176      2E2E200A 
 1177 0055 000000   		.space	3
 1178              	.LC6:
 1179 0058 556C7472 		.ascii	"Ultrasonic Testing: \012\000"
 1179      61736F6E 
 1179      69632054 
 1179      65737469 
 1179      6E673A20 
 1180 006e 0000     		.space	2
 1181              	.LC7:
 1182 0070 0A00     		.ascii	"\012\000"
 1183              		.bss
 1184              		.align	2
 1185              		.set	.LANCHOR0,. + 0
 1186              		.type	beginNavigation, %object
 1187              		.size	beginNavigation, 4
 1188              	beginNavigation:
 1189 0000 00000000 		.space	4
 1190              		.type	puckConstructionPlan, %object
 1191              		.size	puckConstructionPlan, 12
 1192              	puckConstructionPlan:
 1193 0004 00000000 		.space	12
 1193      00000000 
 1193      00000000 
 1194              		.type	colour_sensing_algorithm, %object
 1195              		.size	colour_sensing_algorithm, 4
 1196              	colour_sensing_algorithm:
 1197 0010 00000000 		.space	4
 1198              		.type	idac_value, %object
 1199              		.size	idac_value, 4
 1200              	idac_value:
 1201 0014 00000000 		.space	4
 1202              		.type	moving, %object
 1203              		.size	moving, 4
 1204              	moving:
 1205 0018 00000000 		.space	4
 1206              		.type	currentPosition, %object
 1207              		.size	currentPosition, 8
 1208              	currentPosition:
 1209 001c 00000000 		.space	8
 1209      00000000 
 1210              		.type	horizontalPuckGrid, %object
 1211              		.size	horizontalPuckGrid, 4
 1212              	horizontalPuckGrid:
 1213 0024 00000000 		.space	4
 1214              		.type	currentPuckStackSize, %object
 1215              		.size	currentPuckStackSize, 4
 1216              	currentPuckStackSize:
 1217 0028 00000000 		.space	4
 1218              		.type	turningRightFlag, %object
 1219              		.size	turningRightFlag, 2
 1220              	turningRightFlag:
 1221 002c 0000     		.space	2
 1222              		.type	turningLeftFlag, %object
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cccxI4fz.s 			page 42


 1223              		.size	turningLeftFlag, 2
 1224              	turningLeftFlag:
 1225 002e 0000     		.space	2
 1226              		.type	drivingBackwardFlag, %object
 1227              		.size	drivingBackwardFlag, 2
 1228              	drivingBackwardFlag:
 1229 0030 0000     		.space	2
 1230              		.type	drivingForwardFlag, %object
 1231              		.size	drivingForwardFlag, 2
 1232              	drivingForwardFlag:
 1233 0032 0000     		.space	2
 1234              		.type	block_edge_location, %object
 1235              		.size	block_edge_location, 16
 1236              	block_edge_location:
 1237 0034 00000000 		.space	16
 1237      00000000 
 1237      00000000 
 1237      00000000 
 1238              		.type	sweeping, %object
 1239              		.size	sweeping, 4
 1240              	sweeping:
 1241 0044 00000000 		.space	4
 1242              		.type	puckRackColours, %object
 1243              		.size	puckRackColours, 20
 1244              	puckRackColours:
 1245 0048 00000000 		.space	20
 1245      00000000 
 1245      00000000 
 1245      00000000 
 1245      00000000 
 1246              		.type	currentPuckRackScanningIndex, %object
 1247              		.size	currentPuckRackScanningIndex, 4
 1248              	currentPuckRackScanningIndex:
 1249 005c 00000000 		.space	4
 1250              		.text
 1251              	.Letext0:
 1252              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 1253              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 1254              		.file 4 "Generated_Source\\PSoC5/core_cm3.h"
 1255              		.file 5 "ultrasonic.h"
 1256              		.file 6 "main.h"
 1257              		.file 7 "Generated_Source\\PSoC5/CyLib.h"
 1258              		.file 8 "servo.h"
 1259              		.file 9 "colour.h"
 1260              		.file 10 "Generated_Source\\PSoC5/Motor_Left_Control.h"
 1261              		.file 11 "Generated_Source\\PSoC5/Motor_Right_Control.h"
 1262              		.file 12 "Generated_Source\\PSoC5/Motor_Left_Driver.h"
 1263              		.file 13 "Generated_Source\\PSoC5/Motor_Right_Driver.h"
 1264              		.file 14 "Generated_Source\\PSoC5/Motor_Left_Decoder.h"
 1265              		.file 15 "Generated_Source\\PSoC5/Motor_Right_Decoder.h"
 1266              		.file 16 "mishamotor.h"
 1267              		.file 17 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4
 1268              		.file 18 "Generated_Source\\PSoC5/UART_1.h"
 1269              		.file 19 "Generated_Source\\PSoC5/TIA_1.h"
 1270              		.file 20 "Generated_Source\\PSoC5/ADC.h"
 1271              		.file 21 "Generated_Source\\PSoC5/IDAC8_1.h"
 1272              		.file 22 "Generated_Source\\PSoC5/control_photodiode.h"
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cccxI4fz.s 			page 43


 1273              		.file 23 "Generated_Source\\PSoC5/control_led.h"
 1274              		.file 24 "Generated_Source\\PSoC5/Rack_Servo_PWM.h"
 1275              		.file 25 "Generated_Source\\PSoC5/Gripper_Servo_PWM.h"
 1276              		.file 26 "Generated_Source\\PSoC5/Timer_1.h"
 1277              		.file 27 "Generated_Source\\PSoC5/Sonic.h"
 1278              		.file 28 "Generated_Source\\PSoC5/Start.h"
 1279              		.section	.debug_info,"",%progbits
 1280              	.Ldebug_info0:
 1281 0000 E6110000 		.4byte	0x11e6
 1282 0004 0400     		.2byte	0x4
 1283 0006 00000000 		.4byte	.Ldebug_abbrev0
 1284 000a 04       		.byte	0x4
 1285 000b 01       		.uleb128 0x1
 1286 000c DC020000 		.4byte	.LASF127
 1287 0010 0C       		.byte	0xc
 1288 0011 12000000 		.4byte	.LASF128
 1289 0015 B3070000 		.4byte	.LASF129
 1290 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1291 001d 00000000 		.4byte	0
 1292 0021 00000000 		.4byte	.Ldebug_line0
 1293 0025 02       		.uleb128 0x2
 1294 0026 01       		.byte	0x1
 1295 0027 06       		.byte	0x6
 1296 0028 CE080000 		.4byte	.LASF0
 1297 002c 02       		.uleb128 0x2
 1298 002d 01       		.byte	0x1
 1299 002e 08       		.byte	0x8
 1300 002f 39080000 		.4byte	.LASF1
 1301 0033 02       		.uleb128 0x2
 1302 0034 02       		.byte	0x2
 1303 0035 05       		.byte	0x5
 1304 0036 91060000 		.4byte	.LASF2
 1305 003a 02       		.uleb128 0x2
 1306 003b 02       		.byte	0x2
 1307 003c 07       		.byte	0x7
 1308 003d E3080000 		.4byte	.LASF3
 1309 0041 03       		.uleb128 0x3
 1310 0042 C5000000 		.4byte	.LASF9
 1311 0046 02       		.byte	0x2
 1312 0047 3F       		.byte	0x3f
 1313 0048 4C000000 		.4byte	0x4c
 1314 004c 02       		.uleb128 0x2
 1315 004d 04       		.byte	0x4
 1316 004e 05       		.byte	0x5
 1317 004f B5060000 		.4byte	.LASF4
 1318 0053 02       		.uleb128 0x2
 1319 0054 04       		.byte	0x4
 1320 0055 07       		.byte	0x7
 1321 0056 93070000 		.4byte	.LASF5
 1322 005a 02       		.uleb128 0x2
 1323 005b 08       		.byte	0x8
 1324 005c 05       		.byte	0x5
 1325 005d E6040000 		.4byte	.LASF6
 1326 0061 02       		.uleb128 0x2
 1327 0062 08       		.byte	0x8
 1328 0063 07       		.byte	0x7
 1329 0064 02020000 		.4byte	.LASF7
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cccxI4fz.s 			page 44


 1330 0068 04       		.uleb128 0x4
 1331 0069 04       		.byte	0x4
 1332 006a 05       		.byte	0x5
 1333 006b 696E7400 		.ascii	"int\000"
 1334 006f 02       		.uleb128 0x2
 1335 0070 04       		.byte	0x4
 1336 0071 07       		.byte	0x7
 1337 0072 65000000 		.4byte	.LASF8
 1338 0076 03       		.uleb128 0x3
 1339 0077 2A090000 		.4byte	.LASF10
 1340 007b 03       		.byte	0x3
 1341 007c 2C       		.byte	0x2c
 1342 007d 41000000 		.4byte	0x41
 1343 0081 02       		.uleb128 0x2
 1344 0082 04       		.byte	0x4
 1345 0083 04       		.byte	0x4
 1346 0084 AB010000 		.4byte	.LASF11
 1347 0088 02       		.uleb128 0x2
 1348 0089 08       		.byte	0x8
 1349 008a 04       		.byte	0x4
 1350 008b 1B090000 		.4byte	.LASF12
 1351 008f 02       		.uleb128 0x2
 1352 0090 01       		.byte	0x1
 1353 0091 08       		.byte	0x8
 1354 0092 5C040000 		.4byte	.LASF13
 1355 0096 02       		.uleb128 0x2
 1356 0097 08       		.byte	0x8
 1357 0098 04       		.byte	0x4
 1358 0099 09060000 		.4byte	.LASF14
 1359 009d 02       		.uleb128 0x2
 1360 009e 04       		.byte	0x4
 1361 009f 07       		.byte	0x7
 1362 00a0 71070000 		.4byte	.LASF15
 1363 00a4 05       		.uleb128 0x5
 1364 00a5 54494800 		.ascii	"TIH\000"
 1365 00a9 01       		.byte	0x1
 1366 00aa 68       		.byte	0x68
 1367 00ab 00000000 		.4byte	.LFB64
 1368 00af 08000000 		.4byte	.LFE64-.LFB64
 1369 00b3 01       		.uleb128 0x1
 1370 00b4 9C       		.byte	0x9c
 1371 00b5 C3000000 		.4byte	0xc3
 1372 00b9 06       		.uleb128 0x6
 1373 00ba 06000000 		.4byte	.LVL0
 1374 00be FA0F0000 		.4byte	0xffa
 1375 00c2 00       		.byte	0
 1376 00c3 07       		.uleb128 0x7
 1377 00c4 5B070000 		.4byte	.LASF16
 1378 00c8 01       		.byte	0x1
 1379 00c9 6D       		.byte	0x6d
 1380 00ca 00000000 		.4byte	.LFB65
 1381 00ce 20000000 		.4byte	.LFE65-.LFB65
 1382 00d2 01       		.uleb128 0x1
 1383 00d3 9C       		.byte	0x9c
 1384 00d4 E9000000 		.4byte	0xe9
 1385 00d8 08       		.uleb128 0x8
 1386 00d9 08000000 		.4byte	.LVL1
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cccxI4fz.s 			page 45


 1387 00dd 05100000 		.4byte	0x1005
 1388 00e1 09       		.uleb128 0x9
 1389 00e2 01       		.uleb128 0x1
 1390 00e3 50       		.byte	0x50
 1391 00e4 02       		.uleb128 0x2
 1392 00e5 08       		.byte	0x8
 1393 00e6 64       		.byte	0x64
 1394 00e7 00       		.byte	0
 1395 00e8 00       		.byte	0
 1396 00e9 0A       		.uleb128 0xa
 1397 00ea 08000000 		.4byte	.LASF17
 1398 00ee 01       		.byte	0x1
 1399 00ef CF02     		.2byte	0x2cf
 1400 00f1 00000000 		.4byte	.LFB67
 1401 00f5 44000000 		.4byte	.LFE67-.LFB67
 1402 00f9 01       		.uleb128 0x1
 1403 00fa 9C       		.byte	0x9c
 1404 00fb 5E010000 		.4byte	0x15e
 1405 00ff 0B       		.uleb128 0xb
 1406 0100 0E090000 		.4byte	.LASF18
 1407 0104 01       		.byte	0x1
 1408 0105 D102     		.2byte	0x2d1
 1409 0107 68000000 		.4byte	0x68
 1410 010b 00000000 		.4byte	.LLST0
 1411 010f 0B       		.uleb128 0xb
 1412 0110 2A010000 		.4byte	.LASF19
 1413 0114 01       		.byte	0x1
 1414 0115 D202     		.2byte	0x2d2
 1415 0117 68000000 		.4byte	0x68
 1416 011b 1F000000 		.4byte	.LLST1
 1417 011f 0C       		.uleb128 0xc
 1418 0120 0E000000 		.4byte	.LVL3
 1419 0124 10100000 		.4byte	0x1010
 1420 0128 32010000 		.4byte	0x132
 1421 012c 09       		.uleb128 0x9
 1422 012d 01       		.uleb128 0x1
 1423 012e 50       		.byte	0x50
 1424 012f 01       		.uleb128 0x1
 1425 0130 33       		.byte	0x33
 1426 0131 00       		.byte	0
 1427 0132 0C       		.uleb128 0xc
 1428 0133 18000000 		.4byte	.LVL5
 1429 0137 10100000 		.4byte	0x1010
 1430 013b 45010000 		.4byte	0x145
 1431 013f 09       		.uleb128 0x9
 1432 0140 01       		.uleb128 0x1
 1433 0141 50       		.byte	0x50
 1434 0142 01       		.uleb128 0x1
 1435 0143 31       		.byte	0x31
 1436 0144 00       		.byte	0
 1437 0145 06       		.uleb128 0x6
 1438 0146 1C000000 		.4byte	.LVL6
 1439 014a 1B100000 		.4byte	0x101b
 1440 014e 08       		.uleb128 0x8
 1441 014f 24000000 		.4byte	.LVL9
 1442 0153 10100000 		.4byte	0x1010
 1443 0157 09       		.uleb128 0x9
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cccxI4fz.s 			page 46


 1444 0158 01       		.uleb128 0x1
 1445 0159 50       		.byte	0x50
 1446 015a 01       		.uleb128 0x1
 1447 015b 33       		.byte	0x33
 1448 015c 00       		.byte	0
 1449 015d 00       		.byte	0
 1450 015e 0A       		.uleb128 0xa
 1451 015f A5070000 		.4byte	.LASF20
 1452 0163 01       		.byte	0x1
 1453 0164 0403     		.2byte	0x304
 1454 0166 00000000 		.4byte	.LFB68
 1455 016a 64000000 		.4byte	.LFE68-.LFB68
 1456 016e 01       		.uleb128 0x1
 1457 016f 9C       		.byte	0x9c
 1458 0170 32020000 		.4byte	0x232
 1459 0174 0B       		.uleb128 0xb
 1460 0175 6A030000 		.4byte	.LASF21
 1461 0179 01       		.byte	0x1
 1462 017a 0503     		.2byte	0x305
 1463 017c 68000000 		.4byte	0x68
 1464 0180 3D000000 		.4byte	.LLST2
 1465 0184 0C       		.uleb128 0xc
 1466 0185 08000000 		.4byte	.LVL13
 1467 0189 26100000 		.4byte	0x1026
 1468 018d 97010000 		.4byte	0x197
 1469 0191 09       		.uleb128 0x9
 1470 0192 01       		.uleb128 0x1
 1471 0193 50       		.byte	0x50
 1472 0194 01       		.uleb128 0x1
 1473 0195 30       		.byte	0x30
 1474 0196 00       		.byte	0
 1475 0197 0C       		.uleb128 0xc
 1476 0198 0E000000 		.4byte	.LVL14
 1477 019c 31100000 		.4byte	0x1031
 1478 01a0 AA010000 		.4byte	0x1aa
 1479 01a4 09       		.uleb128 0x9
 1480 01a5 01       		.uleb128 0x1
 1481 01a6 50       		.byte	0x50
 1482 01a7 01       		.uleb128 0x1
 1483 01a8 30       		.byte	0x30
 1484 01a9 00       		.byte	0
 1485 01aa 06       		.uleb128 0x6
 1486 01ab 12000000 		.4byte	.LVL15
 1487 01af 3C100000 		.4byte	0x103c
 1488 01b3 06       		.uleb128 0x6
 1489 01b4 1A000000 		.4byte	.LVL16
 1490 01b8 47100000 		.4byte	0x1047
 1491 01bc 06       		.uleb128 0x6
 1492 01bd 1E000000 		.4byte	.LVL17
 1493 01c1 52100000 		.4byte	0x1052
 1494 01c5 06       		.uleb128 0x6
 1495 01c6 24000000 		.4byte	.LVL18
 1496 01ca 5D100000 		.4byte	0x105d
 1497 01ce 06       		.uleb128 0x6
 1498 01cf 32000000 		.4byte	.LVL20
 1499 01d3 1B100000 		.4byte	0x101b
 1500 01d7 0C       		.uleb128 0xc
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cccxI4fz.s 			page 47


 1501 01d8 3A000000 		.4byte	.LVL23
 1502 01dc 05100000 		.4byte	0x1005
 1503 01e0 EA010000 		.4byte	0x1ea
 1504 01e4 09       		.uleb128 0x9
 1505 01e5 01       		.uleb128 0x1
 1506 01e6 50       		.byte	0x50
 1507 01e7 01       		.uleb128 0x1
 1508 01e8 3A       		.byte	0x3a
 1509 01e9 00       		.byte	0
 1510 01ea 0C       		.uleb128 0xc
 1511 01eb 44000000 		.4byte	.LVL24
 1512 01ef 68100000 		.4byte	0x1068
 1513 01f3 FD010000 		.4byte	0x1fd
 1514 01f7 09       		.uleb128 0x9
 1515 01f8 01       		.uleb128 0x1
 1516 01f9 50       		.byte	0x50
 1517 01fa 01       		.uleb128 0x1
 1518 01fb 30       		.byte	0x30
 1519 01fc 00       		.byte	0
 1520 01fd 0C       		.uleb128 0xc
 1521 01fe 4A000000 		.4byte	.LVL25
 1522 0202 73100000 		.4byte	0x1073
 1523 0206 10020000 		.4byte	0x210
 1524 020a 09       		.uleb128 0x9
 1525 020b 01       		.uleb128 0x1
 1526 020c 50       		.byte	0x50
 1527 020d 01       		.uleb128 0x1
 1528 020e 30       		.byte	0x30
 1529 020f 00       		.byte	0
 1530 0210 06       		.uleb128 0x6
 1531 0211 4E000000 		.4byte	.LVL26
 1532 0215 7E100000 		.4byte	0x107e
 1533 0219 06       		.uleb128 0x6
 1534 021a 52000000 		.4byte	.LVL27
 1535 021e 89100000 		.4byte	0x1089
 1536 0222 08       		.uleb128 0x8
 1537 0223 58000000 		.4byte	.LVL28
 1538 0227 94100000 		.4byte	0x1094
 1539 022b 09       		.uleb128 0x9
 1540 022c 01       		.uleb128 0x1
 1541 022d 50       		.byte	0x50
 1542 022e 01       		.uleb128 0x1
 1543 022f 4E       		.byte	0x4e
 1544 0230 00       		.byte	0
 1545 0231 00       		.byte	0
 1546 0232 0A       		.uleb128 0xa
 1547 0233 4D040000 		.4byte	.LASF22
 1548 0237 01       		.byte	0x1
 1549 0238 2303     		.2byte	0x323
 1550 023a 00000000 		.4byte	.LFB69
 1551 023e D0010000 		.4byte	.LFE69-.LFB69
 1552 0242 01       		.uleb128 0x1
 1553 0243 9C       		.byte	0x9c
 1554 0244 67060000 		.4byte	0x667
 1555 0248 0D       		.uleb128 0xd
 1556 0249 5A000000 		.4byte	.LASF23
 1557 024d 01       		.byte	0x1
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cccxI4fz.s 			page 48


 1558 024e 2503     		.2byte	0x325
 1559 0250 68000000 		.4byte	0x68
 1560 0254 0D       		.uleb128 0xd
 1561 0255 2D080000 		.4byte	.LASF24
 1562 0259 01       		.byte	0x1
 1563 025a 2603     		.2byte	0x326
 1564 025c 68000000 		.4byte	0x68
 1565 0260 0B       		.uleb128 0xb
 1566 0261 9F080000 		.4byte	.LASF25
 1567 0265 01       		.byte	0x1
 1568 0266 2703     		.2byte	0x327
 1569 0268 68000000 		.4byte	0x68
 1570 026c 72000000 		.4byte	.LLST3
 1571 0270 0E       		.uleb128 0xe
 1572 0271 AE040000 		.4byte	.LASF26
 1573 0275 01       		.byte	0x1
 1574 0276 2803     		.2byte	0x328
 1575 0278 68000000 		.4byte	0x68
 1576 027c 03       		.byte	0x3
 1577 027d 0D       		.uleb128 0xd
 1578 027e 19020000 		.4byte	.LASF27
 1579 0282 01       		.byte	0x1
 1580 0283 3D03     		.2byte	0x33d
 1581 0285 68000000 		.4byte	0x68
 1582 0289 0D       		.uleb128 0xd
 1583 028a 2B000000 		.4byte	.LASF28
 1584 028e 01       		.byte	0x1
 1585 028f 3E03     		.2byte	0x33e
 1586 0291 68000000 		.4byte	0x68
 1587 0295 0C       		.uleb128 0xc
 1588 0296 0E000000 		.4byte	.LVL32
 1589 029a 9F100000 		.4byte	0x109f
 1590 029e A8020000 		.4byte	0x2a8
 1591 02a2 09       		.uleb128 0x9
 1592 02a3 01       		.uleb128 0x1
 1593 02a4 50       		.byte	0x50
 1594 02a5 01       		.uleb128 0x1
 1595 02a6 30       		.byte	0x30
 1596 02a7 00       		.byte	0
 1597 02a8 0C       		.uleb128 0xc
 1598 02a9 14000000 		.4byte	.LVL33
 1599 02ad 05100000 		.4byte	0x1005
 1600 02b1 BC020000 		.4byte	0x2bc
 1601 02b5 09       		.uleb128 0x9
 1602 02b6 01       		.uleb128 0x1
 1603 02b7 50       		.byte	0x50
 1604 02b8 02       		.uleb128 0x2
 1605 02b9 08       		.byte	0x8
 1606 02ba 32       		.byte	0x32
 1607 02bb 00       		.byte	0
 1608 02bc 0C       		.uleb128 0xc
 1609 02bd 24000000 		.4byte	.LVL35
 1610 02c1 AA100000 		.4byte	0x10aa
 1611 02c5 D6020000 		.4byte	0x2d6
 1612 02c9 09       		.uleb128 0x9
 1613 02ca 01       		.uleb128 0x1
 1614 02cb 50       		.byte	0x50
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cccxI4fz.s 			page 49


 1615 02cc 02       		.uleb128 0x2
 1616 02cd 75       		.byte	0x75
 1617 02ce 00       		.sleb128 0
 1618 02cf 09       		.uleb128 0x9
 1619 02d0 01       		.uleb128 0x1
 1620 02d1 51       		.byte	0x51
 1621 02d2 02       		.uleb128 0x2
 1622 02d3 74       		.byte	0x74
 1623 02d4 00       		.sleb128 0
 1624 02d5 00       		.byte	0
 1625 02d6 0C       		.uleb128 0xc
 1626 02d7 2A000000 		.4byte	.LVL36
 1627 02db B5100000 		.4byte	0x10b5
 1628 02df EA020000 		.4byte	0x2ea
 1629 02e3 09       		.uleb128 0x9
 1630 02e4 01       		.uleb128 0x1
 1631 02e5 50       		.byte	0x50
 1632 02e6 02       		.uleb128 0x2
 1633 02e7 75       		.byte	0x75
 1634 02e8 00       		.sleb128 0
 1635 02e9 00       		.byte	0
 1636 02ea 0C       		.uleb128 0xc
 1637 02eb 30000000 		.4byte	.LVL37
 1638 02ef 9F100000 		.4byte	0x109f
 1639 02f3 FD020000 		.4byte	0x2fd
 1640 02f7 09       		.uleb128 0x9
 1641 02f8 01       		.uleb128 0x1
 1642 02f9 50       		.byte	0x50
 1643 02fa 01       		.uleb128 0x1
 1644 02fb 31       		.byte	0x31
 1645 02fc 00       		.byte	0
 1646 02fd 0C       		.uleb128 0xc
 1647 02fe 36000000 		.4byte	.LVL38
 1648 0302 05100000 		.4byte	0x1005
 1649 0306 11030000 		.4byte	0x311
 1650 030a 09       		.uleb128 0x9
 1651 030b 01       		.uleb128 0x1
 1652 030c 50       		.byte	0x50
 1653 030d 02       		.uleb128 0x2
 1654 030e 08       		.byte	0x8
 1655 030f 32       		.byte	0x32
 1656 0310 00       		.byte	0
 1657 0311 0C       		.uleb128 0xc
 1658 0312 40000000 		.4byte	.LVL39
 1659 0316 AA100000 		.4byte	0x10aa
 1660 031a 2B030000 		.4byte	0x32b
 1661 031e 09       		.uleb128 0x9
 1662 031f 01       		.uleb128 0x1
 1663 0320 50       		.byte	0x50
 1664 0321 02       		.uleb128 0x2
 1665 0322 75       		.byte	0x75
 1666 0323 00       		.sleb128 0
 1667 0324 09       		.uleb128 0x9
 1668 0325 01       		.uleb128 0x1
 1669 0326 51       		.byte	0x51
 1670 0327 02       		.uleb128 0x2
 1671 0328 74       		.byte	0x74
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cccxI4fz.s 			page 50


 1672 0329 00       		.sleb128 0
 1673 032a 00       		.byte	0
 1674 032b 0C       		.uleb128 0xc
 1675 032c 46000000 		.4byte	.LVL40
 1676 0330 B5100000 		.4byte	0x10b5
 1677 0334 3F030000 		.4byte	0x33f
 1678 0338 09       		.uleb128 0x9
 1679 0339 01       		.uleb128 0x1
 1680 033a 50       		.byte	0x50
 1681 033b 02       		.uleb128 0x2
 1682 033c 75       		.byte	0x75
 1683 033d 00       		.sleb128 0
 1684 033e 00       		.byte	0
 1685 033f 0C       		.uleb128 0xc
 1686 0340 56000000 		.4byte	.LVL42
 1687 0344 AA100000 		.4byte	0x10aa
 1688 0348 62030000 		.4byte	0x362
 1689 034c 09       		.uleb128 0x9
 1690 034d 01       		.uleb128 0x1
 1691 034e 50       		.byte	0x50
 1692 034f 02       		.uleb128 0x2
 1693 0350 75       		.byte	0x75
 1694 0351 00       		.sleb128 0
 1695 0352 09       		.uleb128 0x9
 1696 0353 01       		.uleb128 0x1
 1697 0354 51       		.byte	0x51
 1698 0355 05       		.uleb128 0x5
 1699 0356 03       		.byte	0x3
 1700 0357 08000000 		.4byte	.LC1
 1701 035b 09       		.uleb128 0x9
 1702 035c 01       		.uleb128 0x1
 1703 035d 52       		.byte	0x52
 1704 035e 02       		.uleb128 0x2
 1705 035f 74       		.byte	0x74
 1706 0360 00       		.sleb128 0
 1707 0361 00       		.byte	0
 1708 0362 0C       		.uleb128 0xc
 1709 0363 5C000000 		.4byte	.LVL43
 1710 0367 B5100000 		.4byte	0x10b5
 1711 036b 76030000 		.4byte	0x376
 1712 036f 09       		.uleb128 0x9
 1713 0370 01       		.uleb128 0x1
 1714 0371 50       		.byte	0x50
 1715 0372 02       		.uleb128 0x2
 1716 0373 75       		.byte	0x75
 1717 0374 00       		.sleb128 0
 1718 0375 00       		.byte	0
 1719 0376 0C       		.uleb128 0xc
 1720 0377 72000000 		.4byte	.LVL44
 1721 037b 26100000 		.4byte	0x1026
 1722 037f 89030000 		.4byte	0x389
 1723 0383 09       		.uleb128 0x9
 1724 0384 01       		.uleb128 0x1
 1725 0385 50       		.byte	0x50
 1726 0386 01       		.uleb128 0x1
 1727 0387 30       		.byte	0x30
 1728 0388 00       		.byte	0
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cccxI4fz.s 			page 51


 1729 0389 0C       		.uleb128 0xc
 1730 038a 78000000 		.4byte	.LVL45
 1731 038e 31100000 		.4byte	0x1031
 1732 0392 9C030000 		.4byte	0x39c
 1733 0396 09       		.uleb128 0x9
 1734 0397 01       		.uleb128 0x1
 1735 0398 50       		.byte	0x50
 1736 0399 01       		.uleb128 0x1
 1737 039a 31       		.byte	0x31
 1738 039b 00       		.byte	0
 1739 039c 06       		.uleb128 0x6
 1740 039d 7E000000 		.4byte	.LVL47
 1741 03a1 3C100000 		.4byte	0x103c
 1742 03a5 0C       		.uleb128 0xc
 1743 03a6 84000000 		.4byte	.LVL48
 1744 03aa 47100000 		.4byte	0x1047
 1745 03ae B8030000 		.4byte	0x3b8
 1746 03b2 09       		.uleb128 0x9
 1747 03b3 01       		.uleb128 0x1
 1748 03b4 50       		.byte	0x50
 1749 03b5 01       		.uleb128 0x1
 1750 03b6 4E       		.byte	0x4e
 1751 03b7 00       		.byte	0
 1752 03b8 06       		.uleb128 0x6
 1753 03b9 88000000 		.4byte	.LVL49
 1754 03bd 52100000 		.4byte	0x1052
 1755 03c1 0C       		.uleb128 0xc
 1756 03c2 8E000000 		.4byte	.LVL50
 1757 03c6 5D100000 		.4byte	0x105d
 1758 03ca D4030000 		.4byte	0x3d4
 1759 03ce 09       		.uleb128 0x9
 1760 03cf 01       		.uleb128 0x1
 1761 03d0 50       		.byte	0x50
 1762 03d1 01       		.uleb128 0x1
 1763 03d2 4E       		.byte	0x4e
 1764 03d3 00       		.byte	0
 1765 03d4 0C       		.uleb128 0xc
 1766 03d5 94000000 		.4byte	.LVL51
 1767 03d9 9F100000 		.4byte	0x109f
 1768 03dd E7030000 		.4byte	0x3e7
 1769 03e1 09       		.uleb128 0x9
 1770 03e2 01       		.uleb128 0x1
 1771 03e3 50       		.byte	0x50
 1772 03e4 01       		.uleb128 0x1
 1773 03e5 30       		.byte	0x30
 1774 03e6 00       		.byte	0
 1775 03e7 0C       		.uleb128 0xc
 1776 03e8 9A000000 		.4byte	.LVL52
 1777 03ec 05100000 		.4byte	0x1005
 1778 03f0 FB030000 		.4byte	0x3fb
 1779 03f4 09       		.uleb128 0x9
 1780 03f5 01       		.uleb128 0x1
 1781 03f6 50       		.byte	0x50
 1782 03f7 02       		.uleb128 0x2
 1783 03f8 08       		.byte	0x8
 1784 03f9 32       		.byte	0x32
 1785 03fa 00       		.byte	0
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cccxI4fz.s 			page 52


 1786 03fb 0C       		.uleb128 0xc
 1787 03fc A0000000 		.4byte	.LVL53
 1788 0400 9F100000 		.4byte	0x109f
 1789 0404 0E040000 		.4byte	0x40e
 1790 0408 09       		.uleb128 0x9
 1791 0409 01       		.uleb128 0x1
 1792 040a 50       		.byte	0x50
 1793 040b 01       		.uleb128 0x1
 1794 040c 31       		.byte	0x31
 1795 040d 00       		.byte	0
 1796 040e 0C       		.uleb128 0xc
 1797 040f A6000000 		.4byte	.LVL54
 1798 0413 05100000 		.4byte	0x1005
 1799 0417 22040000 		.4byte	0x422
 1800 041b 09       		.uleb128 0x9
 1801 041c 01       		.uleb128 0x1
 1802 041d 50       		.byte	0x50
 1803 041e 02       		.uleb128 0x2
 1804 041f 08       		.byte	0x8
 1805 0420 32       		.byte	0x32
 1806 0421 00       		.byte	0
 1807 0422 0C       		.uleb128 0xc
 1808 0423 B8000000 		.4byte	.LVL56
 1809 0427 AA100000 		.4byte	0x10aa
 1810 042b 3F040000 		.4byte	0x43f
 1811 042f 09       		.uleb128 0x9
 1812 0430 01       		.uleb128 0x1
 1813 0431 50       		.byte	0x50
 1814 0432 02       		.uleb128 0x2
 1815 0433 75       		.byte	0x75
 1816 0434 00       		.sleb128 0
 1817 0435 09       		.uleb128 0x9
 1818 0436 01       		.uleb128 0x1
 1819 0437 51       		.byte	0x51
 1820 0438 05       		.uleb128 0x5
 1821 0439 03       		.byte	0x3
 1822 043a 1C000000 		.4byte	.LC2
 1823 043e 00       		.byte	0
 1824 043f 0C       		.uleb128 0xc
 1825 0440 BE000000 		.4byte	.LVL57
 1826 0444 B5100000 		.4byte	0x10b5
 1827 0448 53040000 		.4byte	0x453
 1828 044c 09       		.uleb128 0x9
 1829 044d 01       		.uleb128 0x1
 1830 044e 50       		.byte	0x50
 1831 044f 02       		.uleb128 0x2
 1832 0450 75       		.byte	0x75
 1833 0451 00       		.sleb128 0
 1834 0452 00       		.byte	0
 1835 0453 0C       		.uleb128 0xc
 1836 0454 C8000000 		.4byte	.LVL58
 1837 0458 AA100000 		.4byte	0x10aa
 1838 045c 76040000 		.4byte	0x476
 1839 0460 09       		.uleb128 0x9
 1840 0461 01       		.uleb128 0x1
 1841 0462 50       		.byte	0x50
 1842 0463 02       		.uleb128 0x2
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cccxI4fz.s 			page 53


 1843 0464 75       		.byte	0x75
 1844 0465 00       		.sleb128 0
 1845 0466 09       		.uleb128 0x9
 1846 0467 01       		.uleb128 0x1
 1847 0468 51       		.byte	0x51
 1848 0469 05       		.uleb128 0x5
 1849 046a 03       		.byte	0x3
 1850 046b 08000000 		.4byte	.LC1
 1851 046f 09       		.uleb128 0x9
 1852 0470 01       		.uleb128 0x1
 1853 0471 52       		.byte	0x52
 1854 0472 02       		.uleb128 0x2
 1855 0473 74       		.byte	0x74
 1856 0474 00       		.sleb128 0
 1857 0475 00       		.byte	0
 1858 0476 0C       		.uleb128 0xc
 1859 0477 CE000000 		.4byte	.LVL59
 1860 047b B5100000 		.4byte	0x10b5
 1861 047f 8A040000 		.4byte	0x48a
 1862 0483 09       		.uleb128 0x9
 1863 0484 01       		.uleb128 0x1
 1864 0485 50       		.byte	0x50
 1865 0486 02       		.uleb128 0x2
 1866 0487 75       		.byte	0x75
 1867 0488 00       		.sleb128 0
 1868 0489 00       		.byte	0
 1869 048a 0C       		.uleb128 0xc
 1870 048b EA000000 		.4byte	.LVL62
 1871 048f 26100000 		.4byte	0x1026
 1872 0493 9D040000 		.4byte	0x49d
 1873 0497 09       		.uleb128 0x9
 1874 0498 01       		.uleb128 0x1
 1875 0499 50       		.byte	0x50
 1876 049a 01       		.uleb128 0x1
 1877 049b 31       		.byte	0x31
 1878 049c 00       		.byte	0
 1879 049d 0C       		.uleb128 0xc
 1880 049e F0000000 		.4byte	.LVL63
 1881 04a2 31100000 		.4byte	0x1031
 1882 04a6 B0040000 		.4byte	0x4b0
 1883 04aa 09       		.uleb128 0x9
 1884 04ab 01       		.uleb128 0x1
 1885 04ac 50       		.byte	0x50
 1886 04ad 01       		.uleb128 0x1
 1887 04ae 30       		.byte	0x30
 1888 04af 00       		.byte	0
 1889 04b0 06       		.uleb128 0x6
 1890 04b1 F6000000 		.4byte	.LVL65
 1891 04b5 3C100000 		.4byte	0x103c
 1892 04b9 0C       		.uleb128 0xc
 1893 04ba FC000000 		.4byte	.LVL66
 1894 04be 47100000 		.4byte	0x1047
 1895 04c2 CC040000 		.4byte	0x4cc
 1896 04c6 09       		.uleb128 0x9
 1897 04c7 01       		.uleb128 0x1
 1898 04c8 50       		.byte	0x50
 1899 04c9 01       		.uleb128 0x1
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cccxI4fz.s 			page 54


 1900 04ca 4E       		.byte	0x4e
 1901 04cb 00       		.byte	0
 1902 04cc 06       		.uleb128 0x6
 1903 04cd 00010000 		.4byte	.LVL67
 1904 04d1 52100000 		.4byte	0x1052
 1905 04d5 0C       		.uleb128 0xc
 1906 04d6 06010000 		.4byte	.LVL68
 1907 04da 5D100000 		.4byte	0x105d
 1908 04de E8040000 		.4byte	0x4e8
 1909 04e2 09       		.uleb128 0x9
 1910 04e3 01       		.uleb128 0x1
 1911 04e4 50       		.byte	0x50
 1912 04e5 01       		.uleb128 0x1
 1913 04e6 4E       		.byte	0x4e
 1914 04e7 00       		.byte	0
 1915 04e8 0C       		.uleb128 0xc
 1916 04e9 0C010000 		.4byte	.LVL69
 1917 04ed 9F100000 		.4byte	0x109f
 1918 04f1 FB040000 		.4byte	0x4fb
 1919 04f5 09       		.uleb128 0x9
 1920 04f6 01       		.uleb128 0x1
 1921 04f7 50       		.byte	0x50
 1922 04f8 01       		.uleb128 0x1
 1923 04f9 30       		.byte	0x30
 1924 04fa 00       		.byte	0
 1925 04fb 0C       		.uleb128 0xc
 1926 04fc 12010000 		.4byte	.LVL70
 1927 0500 05100000 		.4byte	0x1005
 1928 0504 0F050000 		.4byte	0x50f
 1929 0508 09       		.uleb128 0x9
 1930 0509 01       		.uleb128 0x1
 1931 050a 50       		.byte	0x50
 1932 050b 02       		.uleb128 0x2
 1933 050c 08       		.byte	0x8
 1934 050d 32       		.byte	0x32
 1935 050e 00       		.byte	0
 1936 050f 0C       		.uleb128 0xc
 1937 0510 18010000 		.4byte	.LVL71
 1938 0514 9F100000 		.4byte	0x109f
 1939 0518 22050000 		.4byte	0x522
 1940 051c 09       		.uleb128 0x9
 1941 051d 01       		.uleb128 0x1
 1942 051e 50       		.byte	0x50
 1943 051f 01       		.uleb128 0x1
 1944 0520 31       		.byte	0x31
 1945 0521 00       		.byte	0
 1946 0522 0C       		.uleb128 0xc
 1947 0523 1E010000 		.4byte	.LVL72
 1948 0527 05100000 		.4byte	0x1005
 1949 052b 36050000 		.4byte	0x536
 1950 052f 09       		.uleb128 0x9
 1951 0530 01       		.uleb128 0x1
 1952 0531 50       		.byte	0x50
 1953 0532 02       		.uleb128 0x2
 1954 0533 08       		.byte	0x8
 1955 0534 32       		.byte	0x32
 1956 0535 00       		.byte	0
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cccxI4fz.s 			page 55


 1957 0536 0C       		.uleb128 0xc
 1958 0537 30010000 		.4byte	.LVL74
 1959 053b AA100000 		.4byte	0x10aa
 1960 053f 53050000 		.4byte	0x553
 1961 0543 09       		.uleb128 0x9
 1962 0544 01       		.uleb128 0x1
 1963 0545 50       		.byte	0x50
 1964 0546 02       		.uleb128 0x2
 1965 0547 75       		.byte	0x75
 1966 0548 00       		.sleb128 0
 1967 0549 09       		.uleb128 0x9
 1968 054a 01       		.uleb128 0x1
 1969 054b 51       		.byte	0x51
 1970 054c 05       		.uleb128 0x5
 1971 054d 03       		.byte	0x3
 1972 054e 28000000 		.4byte	.LC3
 1973 0552 00       		.byte	0
 1974 0553 0C       		.uleb128 0xc
 1975 0554 36010000 		.4byte	.LVL75
 1976 0558 B5100000 		.4byte	0x10b5
 1977 055c 67050000 		.4byte	0x567
 1978 0560 09       		.uleb128 0x9
 1979 0561 01       		.uleb128 0x1
 1980 0562 50       		.byte	0x50
 1981 0563 02       		.uleb128 0x2
 1982 0564 75       		.byte	0x75
 1983 0565 00       		.sleb128 0
 1984 0566 00       		.byte	0
 1985 0567 0C       		.uleb128 0xc
 1986 0568 40010000 		.4byte	.LVL76
 1987 056c AA100000 		.4byte	0x10aa
 1988 0570 8A050000 		.4byte	0x58a
 1989 0574 09       		.uleb128 0x9
 1990 0575 01       		.uleb128 0x1
 1991 0576 50       		.byte	0x50
 1992 0577 02       		.uleb128 0x2
 1993 0578 75       		.byte	0x75
 1994 0579 00       		.sleb128 0
 1995 057a 09       		.uleb128 0x9
 1996 057b 01       		.uleb128 0x1
 1997 057c 51       		.byte	0x51
 1998 057d 05       		.uleb128 0x5
 1999 057e 03       		.byte	0x3
 2000 057f 34000000 		.4byte	.LC4
 2001 0583 09       		.uleb128 0x9
 2002 0584 01       		.uleb128 0x1
 2003 0585 52       		.byte	0x52
 2004 0586 02       		.uleb128 0x2
 2005 0587 74       		.byte	0x74
 2006 0588 00       		.sleb128 0
 2007 0589 00       		.byte	0
 2008 058a 0C       		.uleb128 0xc
 2009 058b 46010000 		.4byte	.LVL77
 2010 058f B5100000 		.4byte	0x10b5
 2011 0593 9E050000 		.4byte	0x59e
 2012 0597 09       		.uleb128 0x9
 2013 0598 01       		.uleb128 0x1
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cccxI4fz.s 			page 56


 2014 0599 50       		.byte	0x50
 2015 059a 02       		.uleb128 0x2
 2016 059b 75       		.byte	0x75
 2017 059c 00       		.sleb128 0
 2018 059d 00       		.byte	0
 2019 059e 0C       		.uleb128 0xc
 2020 059f 60010000 		.4byte	.LVL80
 2021 05a3 9F100000 		.4byte	0x109f
 2022 05a7 B1050000 		.4byte	0x5b1
 2023 05ab 09       		.uleb128 0x9
 2024 05ac 01       		.uleb128 0x1
 2025 05ad 50       		.byte	0x50
 2026 05ae 01       		.uleb128 0x1
 2027 05af 30       		.byte	0x30
 2028 05b0 00       		.byte	0
 2029 05b1 0C       		.uleb128 0xc
 2030 05b2 66010000 		.4byte	.LVL81
 2031 05b6 05100000 		.4byte	0x1005
 2032 05ba C5050000 		.4byte	0x5c5
 2033 05be 09       		.uleb128 0x9
 2034 05bf 01       		.uleb128 0x1
 2035 05c0 50       		.byte	0x50
 2036 05c1 02       		.uleb128 0x2
 2037 05c2 08       		.byte	0x8
 2038 05c3 32       		.byte	0x32
 2039 05c4 00       		.byte	0
 2040 05c5 0C       		.uleb128 0xc
 2041 05c6 6C010000 		.4byte	.LVL82
 2042 05ca 9F100000 		.4byte	0x109f
 2043 05ce D8050000 		.4byte	0x5d8
 2044 05d2 09       		.uleb128 0x9
 2045 05d3 01       		.uleb128 0x1
 2046 05d4 50       		.byte	0x50
 2047 05d5 01       		.uleb128 0x1
 2048 05d6 31       		.byte	0x31
 2049 05d7 00       		.byte	0
 2050 05d8 0C       		.uleb128 0xc
 2051 05d9 72010000 		.4byte	.LVL83
 2052 05dd 05100000 		.4byte	0x1005
 2053 05e1 EC050000 		.4byte	0x5ec
 2054 05e5 09       		.uleb128 0x9
 2055 05e6 01       		.uleb128 0x1
 2056 05e7 50       		.byte	0x50
 2057 05e8 02       		.uleb128 0x2
 2058 05e9 08       		.byte	0x8
 2059 05ea 32       		.byte	0x32
 2060 05eb 00       		.byte	0
 2061 05ec 0C       		.uleb128 0xc
 2062 05ed 84010000 		.4byte	.LVL85
 2063 05f1 AA100000 		.4byte	0x10aa
 2064 05f5 09060000 		.4byte	0x609
 2065 05f9 09       		.uleb128 0x9
 2066 05fa 01       		.uleb128 0x1
 2067 05fb 50       		.byte	0x50
 2068 05fc 02       		.uleb128 0x2
 2069 05fd 75       		.byte	0x75
 2070 05fe 00       		.sleb128 0
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cccxI4fz.s 			page 57


 2071 05ff 09       		.uleb128 0x9
 2072 0600 01       		.uleb128 0x1
 2073 0601 51       		.byte	0x51
 2074 0602 05       		.uleb128 0x5
 2075 0603 03       		.byte	0x3
 2076 0604 1C000000 		.4byte	.LC2
 2077 0608 00       		.byte	0
 2078 0609 0C       		.uleb128 0xc
 2079 060a 8A010000 		.4byte	.LVL86
 2080 060e B5100000 		.4byte	0x10b5
 2081 0612 1D060000 		.4byte	0x61d
 2082 0616 09       		.uleb128 0x9
 2083 0617 01       		.uleb128 0x1
 2084 0618 50       		.byte	0x50
 2085 0619 02       		.uleb128 0x2
 2086 061a 75       		.byte	0x75
 2087 061b 00       		.sleb128 0
 2088 061c 00       		.byte	0
 2089 061d 0C       		.uleb128 0xc
 2090 061e 94010000 		.4byte	.LVL87
 2091 0622 AA100000 		.4byte	0x10aa
 2092 0626 40060000 		.4byte	0x640
 2093 062a 09       		.uleb128 0x9
 2094 062b 01       		.uleb128 0x1
 2095 062c 50       		.byte	0x50
 2096 062d 02       		.uleb128 0x2
 2097 062e 75       		.byte	0x75
 2098 062f 00       		.sleb128 0
 2099 0630 09       		.uleb128 0x9
 2100 0631 01       		.uleb128 0x1
 2101 0632 51       		.byte	0x51
 2102 0633 05       		.uleb128 0x5
 2103 0634 03       		.byte	0x3
 2104 0635 08000000 		.4byte	.LC1
 2105 0639 09       		.uleb128 0x9
 2106 063a 01       		.uleb128 0x1
 2107 063b 52       		.byte	0x52
 2108 063c 02       		.uleb128 0x2
 2109 063d 74       		.byte	0x74
 2110 063e 00       		.sleb128 0
 2111 063f 00       		.byte	0
 2112 0640 0C       		.uleb128 0xc
 2113 0641 9A010000 		.4byte	.LVL88
 2114 0645 B5100000 		.4byte	0x10b5
 2115 0649 54060000 		.4byte	0x654
 2116 064d 09       		.uleb128 0x9
 2117 064e 01       		.uleb128 0x1
 2118 064f 50       		.byte	0x50
 2119 0650 02       		.uleb128 0x2
 2120 0651 75       		.byte	0x75
 2121 0652 00       		.sleb128 0
 2122 0653 00       		.byte	0
 2123 0654 06       		.uleb128 0x6
 2124 0655 AC010000 		.4byte	.LVL89
 2125 0659 7E100000 		.4byte	0x107e
 2126 065d 06       		.uleb128 0x6
 2127 065e B0010000 		.4byte	.LVL90
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cccxI4fz.s 			page 58


 2128 0662 89100000 		.4byte	0x1089
 2129 0666 00       		.byte	0
 2130 0667 0A       		.uleb128 0xa
 2131 0668 0C040000 		.4byte	.LASF29
 2132 066c 01       		.byte	0x1
 2133 066d A703     		.2byte	0x3a7
 2134 066f 00000000 		.4byte	.LFB70
 2135 0673 B8000000 		.4byte	.LFE70-.LFB70
 2136 0677 01       		.uleb128 0x1
 2137 0678 9C       		.byte	0x9c
 2138 0679 5F080000 		.4byte	0x85f
 2139 067d 0F       		.uleb128 0xf
 2140 067e 72000000 		.4byte	.LASF130
 2141 0682 01       		.byte	0x1
 2142 0683 A703     		.2byte	0x3a7
 2143 0685 68000000 		.4byte	0x68
 2144 0689 02010000 		.4byte	.LLST4
 2145 068d 0D       		.uleb128 0xd
 2146 068e 73060000 		.4byte	.LASF30
 2147 0692 01       		.byte	0x1
 2148 0693 AC03     		.2byte	0x3ac
 2149 0695 68000000 		.4byte	0x68
 2150 0699 0D       		.uleb128 0xd
 2151 069a 16040000 		.4byte	.LASF31
 2152 069e 01       		.byte	0x1
 2153 069f AD03     		.2byte	0x3ad
 2154 06a1 68000000 		.4byte	0x68
 2155 06a5 0B       		.uleb128 0xb
 2156 06a6 19020000 		.4byte	.LASF27
 2157 06aa 01       		.byte	0x1
 2158 06ab AE03     		.2byte	0x3ae
 2159 06ad 68000000 		.4byte	0x68
 2160 06b1 44010000 		.4byte	.LLST5
 2161 06b5 0B       		.uleb128 0xb
 2162 06b6 2B000000 		.4byte	.LASF28
 2163 06ba 01       		.byte	0x1
 2164 06bb AF03     		.2byte	0x3af
 2165 06bd 68000000 		.4byte	0x68
 2166 06c1 44010000 		.4byte	.LLST5
 2167 06c5 0B       		.uleb128 0xb
 2168 06c6 3E050000 		.4byte	.LASF32
 2169 06ca 01       		.byte	0x1
 2170 06cb B003     		.2byte	0x3b0
 2171 06cd 68000000 		.4byte	0x68
 2172 06d1 57010000 		.4byte	.LLST7
 2173 06d5 0B       		.uleb128 0xb
 2174 06d6 37000000 		.4byte	.LASF33
 2175 06da 01       		.byte	0x1
 2176 06db B103     		.2byte	0x3b1
 2177 06dd 68000000 		.4byte	0x68
 2178 06e1 7B010000 		.4byte	.LLST8
 2179 06e5 0B       		.uleb128 0xb
 2180 06e6 32090000 		.4byte	.LASF34
 2181 06ea 01       		.byte	0x1
 2182 06eb B203     		.2byte	0x3b2
 2183 06ed 68000000 		.4byte	0x68
 2184 06f1 A6010000 		.4byte	.LLST9
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cccxI4fz.s 			page 59


 2185 06f5 0C       		.uleb128 0xc
 2186 06f6 10000000 		.4byte	.LVL95
 2187 06fa 26100000 		.4byte	0x1026
 2188 06fe 08070000 		.4byte	0x708
 2189 0702 09       		.uleb128 0x9
 2190 0703 01       		.uleb128 0x1
 2191 0704 50       		.byte	0x50
 2192 0705 01       		.uleb128 0x1
 2193 0706 30       		.byte	0x30
 2194 0707 00       		.byte	0
 2195 0708 0C       		.uleb128 0xc
 2196 0709 16000000 		.4byte	.LVL96
 2197 070d 31100000 		.4byte	0x1031
 2198 0711 1B070000 		.4byte	0x71b
 2199 0715 09       		.uleb128 0x9
 2200 0716 01       		.uleb128 0x1
 2201 0717 50       		.byte	0x50
 2202 0718 01       		.uleb128 0x1
 2203 0719 30       		.byte	0x30
 2204 071a 00       		.byte	0
 2205 071b 0C       		.uleb128 0xc
 2206 071c 20000000 		.4byte	.LVL99
 2207 0720 26100000 		.4byte	0x1026
 2208 0724 2E070000 		.4byte	0x72e
 2209 0728 09       		.uleb128 0x9
 2210 0729 01       		.uleb128 0x1
 2211 072a 50       		.byte	0x50
 2212 072b 01       		.uleb128 0x1
 2213 072c 31       		.byte	0x31
 2214 072d 00       		.byte	0
 2215 072e 0C       		.uleb128 0xc
 2216 072f 26000000 		.4byte	.LVL100
 2217 0733 31100000 		.4byte	0x1031
 2218 0737 41070000 		.4byte	0x741
 2219 073b 09       		.uleb128 0x9
 2220 073c 01       		.uleb128 0x1
 2221 073d 50       		.byte	0x50
 2222 073e 01       		.uleb128 0x1
 2223 073f 31       		.byte	0x31
 2224 0740 00       		.byte	0
 2225 0741 06       		.uleb128 0x6
 2226 0742 2C000000 		.4byte	.LVL102
 2227 0746 3C100000 		.4byte	0x103c
 2228 074a 0C       		.uleb128 0xc
 2229 074b 34000000 		.4byte	.LVL104
 2230 074f 47100000 		.4byte	0x1047
 2231 0753 5E070000 		.4byte	0x75e
 2232 0757 09       		.uleb128 0x9
 2233 0758 01       		.uleb128 0x1
 2234 0759 50       		.byte	0x50
 2235 075a 02       		.uleb128 0x2
 2236 075b 74       		.byte	0x74
 2237 075c 00       		.sleb128 0
 2238 075d 00       		.byte	0
 2239 075e 06       		.uleb128 0x6
 2240 075f 38000000 		.4byte	.LVL105
 2241 0763 52100000 		.4byte	0x1052
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cccxI4fz.s 			page 60


 2242 0767 0C       		.uleb128 0xc
 2243 0768 3E000000 		.4byte	.LVL106
 2244 076c 5D100000 		.4byte	0x105d
 2245 0770 7B070000 		.4byte	0x77b
 2246 0774 09       		.uleb128 0x9
 2247 0775 01       		.uleb128 0x1
 2248 0776 50       		.byte	0x50
 2249 0777 02       		.uleb128 0x2
 2250 0778 74       		.byte	0x74
 2251 0779 00       		.sleb128 0
 2252 077a 00       		.byte	0
 2253 077b 06       		.uleb128 0x6
 2254 077c 42000000 		.4byte	.LVL107
 2255 0780 C0100000 		.4byte	0x10c0
 2256 0784 06       		.uleb128 0x6
 2257 0785 46000000 		.4byte	.LVL108
 2258 0789 CB100000 		.4byte	0x10cb
 2259 078d 0C       		.uleb128 0xc
 2260 078e 4C000000 		.4byte	.LVL109
 2261 0792 9F100000 		.4byte	0x109f
 2262 0796 A1070000 		.4byte	0x7a1
 2263 079a 09       		.uleb128 0x9
 2264 079b 01       		.uleb128 0x1
 2265 079c 50       		.byte	0x50
 2266 079d 02       		.uleb128 0x2
 2267 079e 76       		.byte	0x76
 2268 079f 00       		.sleb128 0
 2269 07a0 00       		.byte	0
 2270 07a1 0C       		.uleb128 0xc
 2271 07a2 52000000 		.4byte	.LVL110
 2272 07a6 05100000 		.4byte	0x1005
 2273 07aa B5070000 		.4byte	0x7b5
 2274 07ae 09       		.uleb128 0x9
 2275 07af 01       		.uleb128 0x1
 2276 07b0 50       		.byte	0x50
 2277 07b1 02       		.uleb128 0x2
 2278 07b2 08       		.byte	0x8
 2279 07b3 32       		.byte	0x32
 2280 07b4 00       		.byte	0
 2281 07b5 06       		.uleb128 0x6
 2282 07b6 5E000000 		.4byte	.LVL112
 2283 07ba C0100000 		.4byte	0x10c0
 2284 07be 06       		.uleb128 0x6
 2285 07bf 62000000 		.4byte	.LVL113
 2286 07c3 CB100000 		.4byte	0x10cb
 2287 07c7 0C       		.uleb128 0xc
 2288 07c8 68000000 		.4byte	.LVL114
 2289 07cc 9F100000 		.4byte	0x109f
 2290 07d0 DB070000 		.4byte	0x7db
 2291 07d4 09       		.uleb128 0x9
 2292 07d5 01       		.uleb128 0x1
 2293 07d6 50       		.byte	0x50
 2294 07d7 02       		.uleb128 0x2
 2295 07d8 76       		.byte	0x76
 2296 07d9 00       		.sleb128 0
 2297 07da 00       		.byte	0
 2298 07db 0C       		.uleb128 0xc
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cccxI4fz.s 			page 61


 2299 07dc 6E000000 		.4byte	.LVL115
 2300 07e0 05100000 		.4byte	0x1005
 2301 07e4 EF070000 		.4byte	0x7ef
 2302 07e8 09       		.uleb128 0x9
 2303 07e9 01       		.uleb128 0x1
 2304 07ea 50       		.byte	0x50
 2305 07eb 02       		.uleb128 0x2
 2306 07ec 08       		.byte	0x8
 2307 07ed 32       		.byte	0x32
 2308 07ee 00       		.byte	0
 2309 07ef 0C       		.uleb128 0xc
 2310 07f0 80000000 		.4byte	.LVL117
 2311 07f4 AA100000 		.4byte	0x10aa
 2312 07f8 12080000 		.4byte	0x812
 2313 07fc 09       		.uleb128 0x9
 2314 07fd 01       		.uleb128 0x1
 2315 07fe 50       		.byte	0x50
 2316 07ff 02       		.uleb128 0x2
 2317 0800 75       		.byte	0x75
 2318 0801 00       		.sleb128 0
 2319 0802 09       		.uleb128 0x9
 2320 0803 01       		.uleb128 0x1
 2321 0804 51       		.byte	0x51
 2322 0805 05       		.uleb128 0x5
 2323 0806 03       		.byte	0x3
 2324 0807 00000000 		.4byte	.LC0
 2325 080b 09       		.uleb128 0x9
 2326 080c 01       		.uleb128 0x1
 2327 080d 52       		.byte	0x52
 2328 080e 02       		.uleb128 0x2
 2329 080f 74       		.byte	0x74
 2330 0810 00       		.sleb128 0
 2331 0811 00       		.byte	0
 2332 0812 0C       		.uleb128 0xc
 2333 0813 86000000 		.4byte	.LVL118
 2334 0817 B5100000 		.4byte	0x10b5
 2335 081b 26080000 		.4byte	0x826
 2336 081f 09       		.uleb128 0x9
 2337 0820 01       		.uleb128 0x1
 2338 0821 50       		.byte	0x50
 2339 0822 02       		.uleb128 0x2
 2340 0823 75       		.byte	0x75
 2341 0824 00       		.sleb128 0
 2342 0825 00       		.byte	0
 2343 0826 0C       		.uleb128 0xc
 2344 0827 98000000 		.4byte	.LVL119
 2345 082b 68100000 		.4byte	0x1068
 2346 082f 39080000 		.4byte	0x839
 2347 0833 09       		.uleb128 0x9
 2348 0834 01       		.uleb128 0x1
 2349 0835 50       		.byte	0x50
 2350 0836 01       		.uleb128 0x1
 2351 0837 30       		.byte	0x30
 2352 0838 00       		.byte	0
 2353 0839 0C       		.uleb128 0xc
 2354 083a 9E000000 		.4byte	.LVL120
 2355 083e 73100000 		.4byte	0x1073
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cccxI4fz.s 			page 62


 2356 0842 4C080000 		.4byte	0x84c
 2357 0846 09       		.uleb128 0x9
 2358 0847 01       		.uleb128 0x1
 2359 0848 50       		.byte	0x50
 2360 0849 01       		.uleb128 0x1
 2361 084a 30       		.byte	0x30
 2362 084b 00       		.byte	0
 2363 084c 06       		.uleb128 0x6
 2364 084d A2000000 		.4byte	.LVL121
 2365 0851 7E100000 		.4byte	0x107e
 2366 0855 06       		.uleb128 0x6
 2367 0856 A6000000 		.4byte	.LVL122
 2368 085a 89100000 		.4byte	0x1089
 2369 085e 00       		.byte	0
 2370 085f 10       		.uleb128 0x10
 2371 0860 F6080000 		.4byte	.LASF131
 2372 0864 01       		.byte	0x1
 2373 0865 88       		.byte	0x88
 2374 0866 68000000 		.4byte	0x68
 2375 086a 00000000 		.4byte	.LFB66
 2376 086e FC010000 		.4byte	.LFE66-.LFB66
 2377 0872 01       		.uleb128 0x1
 2378 0873 9C       		.byte	0x9c
 2379 0874 F80C0000 		.4byte	0xcf8
 2380 0878 11       		.uleb128 0x11
 2381 0879 FB080000 		.4byte	.LASF35
 2382 087d 01       		.byte	0x1
 2383 087e 94       		.byte	0x94
 2384 087f 68000000 		.4byte	0x68
 2385 0883 00       		.byte	0
 2386 0884 11       		.uleb128 0x11
 2387 0885 63070000 		.4byte	.LASF36
 2388 0889 01       		.byte	0x1
 2389 088a 95       		.byte	0x95
 2390 088b 68000000 		.4byte	0x68
 2391 088f 00       		.byte	0
 2392 0890 11       		.uleb128 0x11
 2393 0891 85010000 		.4byte	.LASF37
 2394 0895 01       		.byte	0x1
 2395 0896 96       		.byte	0x96
 2396 0897 68000000 		.4byte	0x68
 2397 089b 00       		.byte	0
 2398 089c 11       		.uleb128 0x11
 2399 089d 9B030000 		.4byte	.LASF38
 2400 08a1 01       		.byte	0x1
 2401 08a2 97       		.byte	0x97
 2402 08a3 68000000 		.4byte	0x68
 2403 08a7 01       		.byte	0x1
 2404 08a8 12       		.uleb128 0x12
 2405 08a9 D6000000 		.4byte	.LBB2
 2406 08ad 4C000000 		.4byte	.LBE2-.LBB2
 2407 08b1 9D090000 		.4byte	0x99d
 2408 08b5 0B       		.uleb128 0xb
 2409 08b6 F4040000 		.4byte	.LASF39
 2410 08ba 01       		.byte	0x1
 2411 08bb 3D01     		.2byte	0x13d
 2412 08bd 68000000 		.4byte	0x68
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cccxI4fz.s 			page 63


 2413 08c1 B9010000 		.4byte	.LLST10
 2414 08c5 13       		.uleb128 0x13
 2415 08c6 D8000000 		.4byte	.LBB3
 2416 08ca 46000000 		.4byte	.LBE3-.LBB3
 2417 08ce 0B       		.uleb128 0xb
 2418 08cf 11050000 		.4byte	.LASF40
 2419 08d3 01       		.byte	0x1
 2420 08d4 4701     		.2byte	0x147
 2421 08d6 68000000 		.4byte	0x68
 2422 08da E3010000 		.4byte	.LLST11
 2423 08de 12       		.uleb128 0x12
 2424 08df DE000000 		.4byte	.LBB4
 2425 08e3 2C000000 		.4byte	.LBE4-.LBB4
 2426 08e7 4F090000 		.4byte	0x94f
 2427 08eb 14       		.uleb128 0x14
 2428 08ec 6900     		.ascii	"i\000"
 2429 08ee 01       		.byte	0x1
 2430 08ef 6701     		.2byte	0x167
 2431 08f1 68000000 		.4byte	0x68
 2432 08f5 F7010000 		.4byte	.LLST12
 2433 08f9 0C       		.uleb128 0xc
 2434 08fa E8000000 		.4byte	.LVL162
 2435 08fe 9F100000 		.4byte	0x109f
 2436 0902 0D090000 		.4byte	0x90d
 2437 0906 09       		.uleb128 0x9
 2438 0907 01       		.uleb128 0x1
 2439 0908 50       		.byte	0x50
 2440 0909 02       		.uleb128 0x2
 2441 090a 74       		.byte	0x74
 2442 090b 00       		.sleb128 0
 2443 090c 00       		.byte	0
 2444 090d 0C       		.uleb128 0xc
 2445 090e EE000000 		.4byte	.LVL163
 2446 0912 05100000 		.4byte	0x1005
 2447 0916 21090000 		.4byte	0x921
 2448 091a 09       		.uleb128 0x9
 2449 091b 01       		.uleb128 0x1
 2450 091c 50       		.byte	0x50
 2451 091d 02       		.uleb128 0x2
 2452 091e 08       		.byte	0x8
 2453 091f 64       		.byte	0x64
 2454 0920 00       		.byte	0
 2455 0921 0C       		.uleb128 0xc
 2456 0922 FE000000 		.4byte	.LVL164
 2457 0926 AA100000 		.4byte	0x10aa
 2458 092a 3E090000 		.4byte	0x93e
 2459 092e 09       		.uleb128 0x9
 2460 092f 01       		.uleb128 0x1
 2461 0930 50       		.byte	0x50
 2462 0931 02       		.uleb128 0x2
 2463 0932 75       		.byte	0x75
 2464 0933 00       		.sleb128 0
 2465 0934 09       		.uleb128 0x9
 2466 0935 01       		.uleb128 0x1
 2467 0936 51       		.byte	0x51
 2468 0937 05       		.uleb128 0x5
 2469 0938 03       		.byte	0x3
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cccxI4fz.s 			page 64


 2470 0939 00000000 		.4byte	.LC0
 2471 093d 00       		.byte	0
 2472 093e 08       		.uleb128 0x8
 2473 093f 04010000 		.4byte	.LVL165
 2474 0943 B5100000 		.4byte	0x10b5
 2475 0947 09       		.uleb128 0x9
 2476 0948 01       		.uleb128 0x1
 2477 0949 50       		.byte	0x50
 2478 094a 02       		.uleb128 0x2
 2479 094b 75       		.byte	0x75
 2480 094c 00       		.sleb128 0
 2481 094d 00       		.byte	0
 2482 094e 00       		.byte	0
 2483 094f 0C       		.uleb128 0xc
 2484 0950 DE000000 		.4byte	.LVL160
 2485 0954 B5100000 		.4byte	0x10b5
 2486 0958 66090000 		.4byte	0x966
 2487 095c 09       		.uleb128 0x9
 2488 095d 01       		.uleb128 0x1
 2489 095e 50       		.byte	0x50
 2490 095f 05       		.uleb128 0x5
 2491 0960 03       		.byte	0x3
 2492 0961 58000000 		.4byte	.LC6
 2493 0965 00       		.byte	0
 2494 0966 0C       		.uleb128 0xc
 2495 0967 10010000 		.4byte	.LVL167
 2496 096b B5100000 		.4byte	0x10b5
 2497 096f 7D090000 		.4byte	0x97d
 2498 0973 09       		.uleb128 0x9
 2499 0974 01       		.uleb128 0x1
 2500 0975 50       		.byte	0x50
 2501 0976 05       		.uleb128 0x5
 2502 0977 03       		.byte	0x3
 2503 0978 70000000 		.4byte	.LC7
 2504 097c 00       		.byte	0
 2505 097d 0C       		.uleb128 0xc
 2506 097e 18010000 		.4byte	.LVL168
 2507 0982 67060000 		.4byte	0x667
 2508 0986 92090000 		.4byte	0x992
 2509 098a 09       		.uleb128 0x9
 2510 098b 01       		.uleb128 0x1
 2511 098c 50       		.byte	0x50
 2512 098d 03       		.uleb128 0x3
 2513 098e 0B       		.byte	0xb
 2514 098f 6AFF     		.2byte	0xff6a
 2515 0991 00       		.byte	0
 2516 0992 06       		.uleb128 0x6
 2517 0993 1C010000 		.4byte	.LVL169
 2518 0997 32020000 		.4byte	0x232
 2519 099b 00       		.byte	0
 2520 099c 00       		.byte	0
 2521 099d 12       		.uleb128 0x12
 2522 099e 74010000 		.4byte	.LBB5
 2523 09a2 88000000 		.4byte	.LBE5-.LBB5
 2524 09a6 6A0A0000 		.4byte	0xa6a
 2525 09aa 0B       		.uleb128 0xb
 2526 09ab 0E090000 		.4byte	.LASF18
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cccxI4fz.s 			page 65


 2527 09af 01       		.byte	0x1
 2528 09b0 2902     		.2byte	0x229
 2529 09b2 68000000 		.4byte	0x68
 2530 09b6 16020000 		.4byte	.LLST13
 2531 09ba 0B       		.uleb128 0xb
 2532 09bb 2A010000 		.4byte	.LASF19
 2533 09bf 01       		.byte	0x1
 2534 09c0 2A02     		.2byte	0x22a
 2535 09c2 68000000 		.4byte	0x68
 2536 09c6 35020000 		.4byte	.LLST14
 2537 09ca 0C       		.uleb128 0xc
 2538 09cb 8A010000 		.4byte	.LVL180
 2539 09cf 94100000 		.4byte	0x1094
 2540 09d3 DE090000 		.4byte	0x9de
 2541 09d7 09       		.uleb128 0x9
 2542 09d8 01       		.uleb128 0x1
 2543 09d9 50       		.byte	0x50
 2544 09da 02       		.uleb128 0x2
 2545 09db 08       		.byte	0x8
 2546 09dc 32       		.byte	0x32
 2547 09dd 00       		.byte	0
 2548 09de 0C       		.uleb128 0xc
 2549 09df 90010000 		.4byte	.LVL181
 2550 09e3 10100000 		.4byte	0x1010
 2551 09e7 F1090000 		.4byte	0x9f1
 2552 09eb 09       		.uleb128 0x9
 2553 09ec 01       		.uleb128 0x1
 2554 09ed 50       		.byte	0x50
 2555 09ee 01       		.uleb128 0x1
 2556 09ef 31       		.byte	0x31
 2557 09f0 00       		.byte	0
 2558 09f1 06       		.uleb128 0x6
 2559 09f2 94010000 		.4byte	.LVL182
 2560 09f6 1B100000 		.4byte	0x101b
 2561 09fa 0C       		.uleb128 0xc
 2562 09fb 9C010000 		.4byte	.LVL185
 2563 09ff 10100000 		.4byte	0x1010
 2564 0a03 0D0A0000 		.4byte	0xa0d
 2565 0a07 09       		.uleb128 0x9
 2566 0a08 01       		.uleb128 0x1
 2567 0a09 50       		.byte	0x50
 2568 0a0a 01       		.uleb128 0x1
 2569 0a0b 33       		.byte	0x33
 2570 0a0c 00       		.byte	0
 2571 0a0d 0C       		.uleb128 0xc
 2572 0a0e A4010000 		.4byte	.LVL186
 2573 0a12 94100000 		.4byte	0x1094
 2574 0a16 210A0000 		.4byte	0xa21
 2575 0a1a 09       		.uleb128 0x9
 2576 0a1b 01       		.uleb128 0x1
 2577 0a1c 50       		.byte	0x50
 2578 0a1d 02       		.uleb128 0x2
 2579 0a1e 09       		.byte	0x9
 2580 0a1f CE       		.byte	0xce
 2581 0a20 00       		.byte	0
 2582 0a21 0C       		.uleb128 0xc
 2583 0a22 B8010000 		.4byte	.LVL188
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cccxI4fz.s 			page 66


 2584 0a26 10100000 		.4byte	0x1010
 2585 0a2a 340A0000 		.4byte	0xa34
 2586 0a2e 09       		.uleb128 0x9
 2587 0a2f 01       		.uleb128 0x1
 2588 0a30 50       		.byte	0x50
 2589 0a31 01       		.uleb128 0x1
 2590 0a32 30       		.byte	0x30
 2591 0a33 00       		.byte	0
 2592 0a34 06       		.uleb128 0x6
 2593 0a35 BC010000 		.4byte	.LVL189
 2594 0a39 5E010000 		.4byte	0x15e
 2595 0a3d 06       		.uleb128 0x6
 2596 0a3e C0010000 		.4byte	.LVL190
 2597 0a42 D6100000 		.4byte	0x10d6
 2598 0a46 0C       		.uleb128 0xc
 2599 0a47 C6010000 		.4byte	.LVL191
 2600 0a4b 10100000 		.4byte	0x1010
 2601 0a4f 590A0000 		.4byte	0xa59
 2602 0a53 09       		.uleb128 0x9
 2603 0a54 01       		.uleb128 0x1
 2604 0a55 50       		.byte	0x50
 2605 0a56 01       		.uleb128 0x1
 2606 0a57 33       		.byte	0x33
 2607 0a58 00       		.byte	0
 2608 0a59 08       		.uleb128 0x8
 2609 0a5a CE010000 		.4byte	.LVL192
 2610 0a5e 94100000 		.4byte	0x1094
 2611 0a62 09       		.uleb128 0x9
 2612 0a63 01       		.uleb128 0x1
 2613 0a64 50       		.byte	0x50
 2614 0a65 02       		.uleb128 0x2
 2615 0a66 09       		.byte	0x9
 2616 0a67 C4       		.byte	0xc4
 2617 0a68 00       		.byte	0
 2618 0a69 00       		.byte	0
 2619 0a6a 06       		.uleb128 0x6
 2620 0a6b 08000000 		.4byte	.LVL124
 2621 0a6f E1100000 		.4byte	0x10e1
 2622 0a73 06       		.uleb128 0x6
 2623 0a74 0C000000 		.4byte	.LVL125
 2624 0a78 EC100000 		.4byte	0x10ec
 2625 0a7c 0C       		.uleb128 0xc
 2626 0a7d 12000000 		.4byte	.LVL126
 2627 0a81 B5100000 		.4byte	0x10b5
 2628 0a85 930A0000 		.4byte	0xa93
 2629 0a89 09       		.uleb128 0x9
 2630 0a8a 01       		.uleb128 0x1
 2631 0a8b 50       		.byte	0x50
 2632 0a8c 05       		.uleb128 0x5
 2633 0a8d 03       		.byte	0x3
 2634 0a8e 40000000 		.4byte	.LC5
 2635 0a92 00       		.byte	0
 2636 0a93 06       		.uleb128 0x6
 2637 0a94 16000000 		.4byte	.LVL127
 2638 0a98 F7100000 		.4byte	0x10f7
 2639 0a9c 06       		.uleb128 0x6
 2640 0a9d 1A000000 		.4byte	.LVL128
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cccxI4fz.s 			page 67


 2641 0aa1 02110000 		.4byte	0x1102
 2642 0aa5 0C       		.uleb128 0xc
 2643 0aa6 20000000 		.4byte	.LVL129
 2644 0aaa 0D110000 		.4byte	0x110d
 2645 0aae B80A0000 		.4byte	0xab8
 2646 0ab2 09       		.uleb128 0x9
 2647 0ab3 01       		.uleb128 0x1
 2648 0ab4 50       		.byte	0x50
 2649 0ab5 01       		.uleb128 0x1
 2650 0ab6 30       		.byte	0x30
 2651 0ab7 00       		.byte	0
 2652 0ab8 06       		.uleb128 0x6
 2653 0ab9 28000000 		.4byte	.LVL130
 2654 0abd 18110000 		.4byte	0x1118
 2655 0ac1 0C       		.uleb128 0xc
 2656 0ac2 32000000 		.4byte	.LVL131
 2657 0ac6 23110000 		.4byte	0x1123
 2658 0aca D50A0000 		.4byte	0xad5
 2659 0ace 09       		.uleb128 0x9
 2660 0acf 01       		.uleb128 0x1
 2661 0ad0 50       		.byte	0x50
 2662 0ad1 02       		.uleb128 0x2
 2663 0ad2 74       		.byte	0x74
 2664 0ad3 00       		.sleb128 0
 2665 0ad4 00       		.byte	0
 2666 0ad5 0C       		.uleb128 0xc
 2667 0ad6 38000000 		.4byte	.LVL132
 2668 0ada 2E110000 		.4byte	0x112e
 2669 0ade E80A0000 		.4byte	0xae8
 2670 0ae2 09       		.uleb128 0x9
 2671 0ae3 01       		.uleb128 0x1
 2672 0ae4 50       		.byte	0x50
 2673 0ae5 01       		.uleb128 0x1
 2674 0ae6 31       		.byte	0x31
 2675 0ae7 00       		.byte	0
 2676 0ae8 0C       		.uleb128 0xc
 2677 0ae9 40000000 		.4byte	.LVL133
 2678 0aed 05100000 		.4byte	0x1005
 2679 0af1 FD0A0000 		.4byte	0xafd
 2680 0af5 09       		.uleb128 0x9
 2681 0af6 01       		.uleb128 0x1
 2682 0af7 50       		.byte	0x50
 2683 0af8 03       		.uleb128 0x3
 2684 0af9 0A       		.byte	0xa
 2685 0afa F401     		.2byte	0x1f4
 2686 0afc 00       		.byte	0
 2687 0afd 0C       		.uleb128 0xc
 2688 0afe 46000000 		.4byte	.LVL134
 2689 0b02 2E110000 		.4byte	0x112e
 2690 0b06 100B0000 		.4byte	0xb10
 2691 0b0a 09       		.uleb128 0x9
 2692 0b0b 01       		.uleb128 0x1
 2693 0b0c 50       		.byte	0x50
 2694 0b0d 01       		.uleb128 0x1
 2695 0b0e 32       		.byte	0x32
 2696 0b0f 00       		.byte	0
 2697 0b10 0C       		.uleb128 0xc
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cccxI4fz.s 			page 68


 2698 0b11 4E000000 		.4byte	.LVL135
 2699 0b15 05100000 		.4byte	0x1005
 2700 0b19 250B0000 		.4byte	0xb25
 2701 0b1d 09       		.uleb128 0x9
 2702 0b1e 01       		.uleb128 0x1
 2703 0b1f 50       		.byte	0x50
 2704 0b20 03       		.uleb128 0x3
 2705 0b21 0A       		.byte	0xa
 2706 0b22 F401     		.2byte	0x1f4
 2707 0b24 00       		.byte	0
 2708 0b25 0C       		.uleb128 0xc
 2709 0b26 54000000 		.4byte	.LVL136
 2710 0b2a 2E110000 		.4byte	0x112e
 2711 0b2e 380B0000 		.4byte	0xb38
 2712 0b32 09       		.uleb128 0x9
 2713 0b33 01       		.uleb128 0x1
 2714 0b34 50       		.byte	0x50
 2715 0b35 01       		.uleb128 0x1
 2716 0b36 33       		.byte	0x33
 2717 0b37 00       		.byte	0
 2718 0b38 0C       		.uleb128 0xc
 2719 0b39 5C000000 		.4byte	.LVL137
 2720 0b3d 05100000 		.4byte	0x1005
 2721 0b41 4D0B0000 		.4byte	0xb4d
 2722 0b45 09       		.uleb128 0x9
 2723 0b46 01       		.uleb128 0x1
 2724 0b47 50       		.byte	0x50
 2725 0b48 03       		.uleb128 0x3
 2726 0b49 0A       		.byte	0xa
 2727 0b4a F401     		.2byte	0x1f4
 2728 0b4c 00       		.byte	0
 2729 0b4d 0C       		.uleb128 0xc
 2730 0b4e 62000000 		.4byte	.LVL138
 2731 0b52 2E110000 		.4byte	0x112e
 2732 0b56 610B0000 		.4byte	0xb61
 2733 0b5a 09       		.uleb128 0x9
 2734 0b5b 01       		.uleb128 0x1
 2735 0b5c 50       		.byte	0x50
 2736 0b5d 02       		.uleb128 0x2
 2737 0b5e 74       		.byte	0x74
 2738 0b5f 00       		.sleb128 0
 2739 0b60 00       		.byte	0
 2740 0b61 0C       		.uleb128 0xc
 2741 0b62 6A000000 		.4byte	.LVL139
 2742 0b66 05100000 		.4byte	0x1005
 2743 0b6a 760B0000 		.4byte	0xb76
 2744 0b6e 09       		.uleb128 0x9
 2745 0b6f 01       		.uleb128 0x1
 2746 0b70 50       		.byte	0x50
 2747 0b71 03       		.uleb128 0x3
 2748 0b72 0A       		.byte	0xa
 2749 0b73 F401     		.2byte	0x1f4
 2750 0b75 00       		.byte	0
 2751 0b76 06       		.uleb128 0x6
 2752 0b77 6E000000 		.4byte	.LVL140
 2753 0b7b 39110000 		.4byte	0x1139
 2754 0b7f 06       		.uleb128 0x6
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cccxI4fz.s 			page 69


 2755 0b80 72000000 		.4byte	.LVL141
 2756 0b84 44110000 		.4byte	0x1144
 2757 0b88 0C       		.uleb128 0xc
 2758 0b89 7A000000 		.4byte	.LVL142
 2759 0b8d 4F110000 		.4byte	0x114f
 2760 0b91 9D0B0000 		.4byte	0xb9d
 2761 0b95 09       		.uleb128 0x9
 2762 0b96 01       		.uleb128 0x1
 2763 0b97 50       		.byte	0x50
 2764 0b98 03       		.uleb128 0x3
 2765 0b99 0A       		.byte	0xa
 2766 0b9a E803     		.2byte	0x3e8
 2767 0b9c 00       		.byte	0
 2768 0b9d 0C       		.uleb128 0xc
 2769 0b9e 82000000 		.4byte	.LVL143
 2770 0ba2 05100000 		.4byte	0x1005
 2771 0ba6 B20B0000 		.4byte	0xbb2
 2772 0baa 09       		.uleb128 0x9
 2773 0bab 01       		.uleb128 0x1
 2774 0bac 50       		.byte	0x50
 2775 0bad 03       		.uleb128 0x3
 2776 0bae 0A       		.byte	0xa
 2777 0baf F401     		.2byte	0x1f4
 2778 0bb1 00       		.byte	0
 2779 0bb2 06       		.uleb128 0x6
 2780 0bb3 86000000 		.4byte	.LVL144
 2781 0bb7 5A110000 		.4byte	0x115a
 2782 0bbb 06       		.uleb128 0x6
 2783 0bbc 8A000000 		.4byte	.LVL145
 2784 0bc0 65110000 		.4byte	0x1165
 2785 0bc4 0C       		.uleb128 0xc
 2786 0bc5 92000000 		.4byte	.LVL146
 2787 0bc9 70110000 		.4byte	0x1170
 2788 0bcd D90B0000 		.4byte	0xbd9
 2789 0bd1 09       		.uleb128 0x9
 2790 0bd2 01       		.uleb128 0x1
 2791 0bd3 50       		.byte	0x50
 2792 0bd4 03       		.uleb128 0x3
 2793 0bd5 0A       		.byte	0xa
 2794 0bd6 6004     		.2byte	0x460
 2795 0bd8 00       		.byte	0
 2796 0bd9 0C       		.uleb128 0xc
 2797 0bda 9A000000 		.4byte	.LVL147
 2798 0bde 05100000 		.4byte	0x1005
 2799 0be2 EE0B0000 		.4byte	0xbee
 2800 0be6 09       		.uleb128 0x9
 2801 0be7 01       		.uleb128 0x1
 2802 0be8 50       		.byte	0x50
 2803 0be9 03       		.uleb128 0x3
 2804 0bea 0A       		.byte	0xa
 2805 0beb F401     		.2byte	0x1f4
 2806 0bed 00       		.byte	0
 2807 0bee 06       		.uleb128 0x6
 2808 0bef 9E000000 		.4byte	.LVL148
 2809 0bf3 7B110000 		.4byte	0x117b
 2810 0bf7 06       		.uleb128 0x6
 2811 0bf8 A2000000 		.4byte	.LVL149
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cccxI4fz.s 			page 70


 2812 0bfc 86110000 		.4byte	0x1186
 2813 0c00 06       		.uleb128 0x6
 2814 0c01 A6000000 		.4byte	.LVL150
 2815 0c05 7E100000 		.4byte	0x107e
 2816 0c09 06       		.uleb128 0x6
 2817 0c0a AA000000 		.4byte	.LVL151
 2818 0c0e 91110000 		.4byte	0x1191
 2819 0c12 06       		.uleb128 0x6
 2820 0c13 AE000000 		.4byte	.LVL152
 2821 0c17 89100000 		.4byte	0x1089
 2822 0c1b 06       		.uleb128 0x6
 2823 0c1c B2000000 		.4byte	.LVL153
 2824 0c20 9C110000 		.4byte	0x119c
 2825 0c24 06       		.uleb128 0x6
 2826 0c25 B6000000 		.4byte	.LVL154
 2827 0c29 A7110000 		.4byte	0x11a7
 2828 0c2d 06       		.uleb128 0x6
 2829 0c2e BA000000 		.4byte	.LVL155
 2830 0c32 B2110000 		.4byte	0x11b2
 2831 0c36 06       		.uleb128 0x6
 2832 0c37 BE000000 		.4byte	.LVL156
 2833 0c3b BD110000 		.4byte	0x11bd
 2834 0c3f 0C       		.uleb128 0xc
 2835 0c40 C4000000 		.4byte	.LVL157
 2836 0c44 C8110000 		.4byte	0x11c8
 2837 0c48 560C0000 		.4byte	0xc56
 2838 0c4c 09       		.uleb128 0x9
 2839 0c4d 01       		.uleb128 0x1
 2840 0c4e 50       		.byte	0x50
 2841 0c4f 05       		.uleb128 0x5
 2842 0c50 03       		.byte	0x3
 2843 0c51 00000000 		.4byte	TIH
 2844 0c55 00       		.byte	0
 2845 0c56 0C       		.uleb128 0xc
 2846 0c57 CA000000 		.4byte	.LVL158
 2847 0c5b D3110000 		.4byte	0x11d3
 2848 0c5f 6D0C0000 		.4byte	0xc6d
 2849 0c63 09       		.uleb128 0x9
 2850 0c64 01       		.uleb128 0x1
 2851 0c65 50       		.byte	0x50
 2852 0c66 05       		.uleb128 0x5
 2853 0c67 03       		.byte	0x3
 2854 0c68 00000000 		.4byte	StartIH
 2855 0c6c 00       		.byte	0
 2856 0c6d 0C       		.uleb128 0xc
 2857 0c6e 28010000 		.4byte	.LVL171
 2858 0c72 94100000 		.4byte	0x1094
 2859 0c76 810C0000 		.4byte	0xc81
 2860 0c7a 09       		.uleb128 0x9
 2861 0c7b 01       		.uleb128 0x1
 2862 0c7c 50       		.byte	0x50
 2863 0c7d 02       		.uleb128 0x2
 2864 0c7e 08       		.byte	0x8
 2865 0c7f E6       		.byte	0xe6
 2866 0c80 00       		.byte	0
 2867 0c81 0C       		.uleb128 0xc
 2868 0c82 36010000 		.4byte	.LVL172
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cccxI4fz.s 			page 71


 2869 0c86 DE110000 		.4byte	0x11de
 2870 0c8a 950C0000 		.4byte	0xc95
 2871 0c8e 09       		.uleb128 0x9
 2872 0c8f 01       		.uleb128 0x1
 2873 0c90 50       		.byte	0x50
 2874 0c91 02       		.uleb128 0x2
 2875 0c92 09       		.byte	0x9
 2876 0c93 D3       		.byte	0xd3
 2877 0c94 00       		.byte	0
 2878 0c95 0C       		.uleb128 0xc
 2879 0c96 3E010000 		.4byte	.LVL173
 2880 0c9a 94100000 		.4byte	0x1094
 2881 0c9e AA0C0000 		.4byte	0xcaa
 2882 0ca2 09       		.uleb128 0x9
 2883 0ca3 01       		.uleb128 0x1
 2884 0ca4 50       		.byte	0x50
 2885 0ca5 03       		.uleb128 0x3
 2886 0ca6 0B       		.byte	0xb
 2887 0ca7 6AFF     		.2byte	0xff6a
 2888 0ca9 00       		.byte	0
 2889 0caa 0C       		.uleb128 0xc
 2890 0cab 44010000 		.4byte	.LVL174
 2891 0caf DE110000 		.4byte	0x11de
 2892 0cb3 BE0C0000 		.4byte	0xcbe
 2893 0cb7 09       		.uleb128 0x9
 2894 0cb8 01       		.uleb128 0x1
 2895 0cb9 50       		.byte	0x50
 2896 0cba 02       		.uleb128 0x2
 2897 0cbb 08       		.byte	0x8
 2898 0cbc 2D       		.byte	0x2d
 2899 0cbd 00       		.byte	0
 2900 0cbe 0C       		.uleb128 0xc
 2901 0cbf 4A010000 		.4byte	.LVL175
 2902 0cc3 94100000 		.4byte	0x1094
 2903 0cc7 D20C0000 		.4byte	0xcd2
 2904 0ccb 09       		.uleb128 0x9
 2905 0ccc 01       		.uleb128 0x1
 2906 0ccd 50       		.byte	0x50
 2907 0cce 02       		.uleb128 0x2
 2908 0ccf 08       		.byte	0x8
 2909 0cd0 C8       		.byte	0xc8
 2910 0cd1 00       		.byte	0
 2911 0cd2 0C       		.uleb128 0xc
 2912 0cd3 50010000 		.4byte	.LVL176
 2913 0cd7 DE110000 		.4byte	0x11de
 2914 0cdb E60C0000 		.4byte	0xce6
 2915 0cdf 09       		.uleb128 0x9
 2916 0ce0 01       		.uleb128 0x1
 2917 0ce1 50       		.byte	0x50
 2918 0ce2 02       		.uleb128 0x2
 2919 0ce3 08       		.byte	0x8
 2920 0ce4 5A       		.byte	0x5a
 2921 0ce5 00       		.byte	0
 2922 0ce6 08       		.uleb128 0x8
 2923 0ce7 58010000 		.4byte	.LVL177
 2924 0ceb 94100000 		.4byte	0x1094
 2925 0cef 09       		.uleb128 0x9
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cccxI4fz.s 			page 72


 2926 0cf0 01       		.uleb128 0x1
 2927 0cf1 50       		.byte	0x50
 2928 0cf2 03       		.uleb128 0x3
 2929 0cf3 0A       		.byte	0xa
 2930 0cf4 F401     		.2byte	0x1f4
 2931 0cf6 00       		.byte	0
 2932 0cf7 00       		.byte	0
 2933 0cf8 15       		.uleb128 0x15
 2934 0cf9 BE060000 		.4byte	.LASF41
 2935 0cfd 04       		.byte	0x4
 2936 0cfe 1207     		.2byte	0x712
 2937 0d00 040D0000 		.4byte	0xd04
 2938 0d04 16       		.uleb128 0x16
 2939 0d05 76000000 		.4byte	0x76
 2940 0d09 17       		.uleb128 0x17
 2941 0d0a 58020000 		.4byte	.LASF42
 2942 0d0e 05       		.byte	0x5
 2943 0d0f 1E       		.byte	0x1e
 2944 0d10 68000000 		.4byte	0x68
 2945 0d14 05       		.uleb128 0x5
 2946 0d15 03       		.byte	0x3
 2947 0d16 00000000 		.4byte	driveStraightEnable
 2948 0d1a 17       		.uleb128 0x17
 2949 0d1b 9F050000 		.4byte	.LASF43
 2950 0d1f 01       		.byte	0x1
 2951 0d20 2B       		.byte	0x2b
 2952 0d21 68000000 		.4byte	0x68
 2953 0d25 05       		.uleb128 0x5
 2954 0d26 03       		.byte	0x3
 2955 0d27 00000000 		.4byte	currentPuckRackScanningIndex
 2956 0d2b 18       		.uleb128 0x18
 2957 0d2c 68000000 		.4byte	0x68
 2958 0d30 3B0D0000 		.4byte	0xd3b
 2959 0d34 19       		.uleb128 0x19
 2960 0d35 9D000000 		.4byte	0x9d
 2961 0d39 04       		.byte	0x4
 2962 0d3a 00       		.byte	0
 2963 0d3b 17       		.uleb128 0x17
 2964 0d3c 58080000 		.4byte	.LASF44
 2965 0d40 01       		.byte	0x1
 2966 0d41 29       		.byte	0x29
 2967 0d42 2B0D0000 		.4byte	0xd2b
 2968 0d46 05       		.uleb128 0x5
 2969 0d47 03       		.byte	0x3
 2970 0d48 00000000 		.4byte	puckRackColours
 2971 0d4c 17       		.uleb128 0x17
 2972 0d4d 68080000 		.4byte	.LASF45
 2973 0d51 01       		.byte	0x1
 2974 0d52 2C       		.byte	0x2c
 2975 0d53 2B0D0000 		.4byte	0xd2b
 2976 0d57 05       		.uleb128 0x5
 2977 0d58 03       		.byte	0x3
 2978 0d59 00000000 		.4byte	puckRackOffsetsFromWest
 2979 0d5d 17       		.uleb128 0x17
 2980 0d5e 21010000 		.4byte	.LASF46
 2981 0d62 01       		.byte	0x1
 2982 0d63 24       		.byte	0x24
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cccxI4fz.s 			page 73


 2983 0d64 68000000 		.4byte	0x68
 2984 0d68 05       		.uleb128 0x5
 2985 0d69 03       		.byte	0x3
 2986 0d6a 00000000 		.4byte	sweeping
 2987 0d6e 18       		.uleb128 0x18
 2988 0d6f 81000000 		.4byte	0x81
 2989 0d73 7E0D0000 		.4byte	0xd7e
 2990 0d77 19       		.uleb128 0x19
 2991 0d78 9D000000 		.4byte	0x9d
 2992 0d7c 03       		.byte	0x3
 2993 0d7d 00       		.byte	0
 2994 0d7e 17       		.uleb128 0x17
 2995 0d7f 39070000 		.4byte	.LASF47
 2996 0d83 01       		.byte	0x1
 2997 0d84 25       		.byte	0x25
 2998 0d85 6E0D0000 		.4byte	0xd6e
 2999 0d89 05       		.uleb128 0x5
 3000 0d8a 03       		.byte	0x3
 3001 0d8b 00000000 		.4byte	block_edge_location
 3002 0d8f 17       		.uleb128 0x17
 3003 0d90 49000000 		.4byte	.LASF48
 3004 0d94 06       		.byte	0x6
 3005 0d95 7A       		.byte	0x7a
 3006 0d96 81000000 		.4byte	0x81
 3007 0d9a 05       		.uleb128 0x5
 3008 0d9b 03       		.byte	0x3
 3009 0d9c 00000000 		.4byte	puckPileLocation
 3010 0da0 17       		.uleb128 0x17
 3011 0da1 1D060000 		.4byte	.LASF49
 3012 0da5 01       		.byte	0x1
 3013 0da6 47       		.byte	0x47
 3014 0da7 33000000 		.4byte	0x33
 3015 0dab 05       		.uleb128 0x5
 3016 0dac 03       		.byte	0x3
 3017 0dad 00000000 		.4byte	drivingForwardFlag
 3018 0db1 17       		.uleb128 0x17
 3019 0db2 76030000 		.4byte	.LASF50
 3020 0db6 01       		.byte	0x1
 3021 0db7 48       		.byte	0x48
 3022 0db8 33000000 		.4byte	0x33
 3023 0dbc 05       		.uleb128 0x5
 3024 0dbd 03       		.byte	0x3
 3025 0dbe 00000000 		.4byte	drivingBackwardFlag
 3026 0dc2 17       		.uleb128 0x17
 3027 0dc3 7B040000 		.4byte	.LASF51
 3028 0dc7 01       		.byte	0x1
 3029 0dc8 49       		.byte	0x49
 3030 0dc9 33000000 		.4byte	0x33
 3031 0dcd 05       		.uleb128 0x5
 3032 0dce 03       		.byte	0x3
 3033 0dcf 00000000 		.4byte	turningLeftFlag
 3034 0dd3 17       		.uleb128 0x17
 3035 0dd4 FC060000 		.4byte	.LASF52
 3036 0dd8 01       		.byte	0x1
 3037 0dd9 4A       		.byte	0x4a
 3038 0dda 33000000 		.4byte	0x33
 3039 0dde 05       		.uleb128 0x5
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cccxI4fz.s 			page 74


 3040 0ddf 03       		.byte	0x3
 3041 0de0 00000000 		.4byte	turningRightFlag
 3042 0de4 17       		.uleb128 0x17
 3043 0de5 1E080000 		.4byte	.LASF53
 3044 0de9 05       		.byte	0x5
 3045 0dea 2C       		.byte	0x2c
 3046 0deb 68000000 		.4byte	0x68
 3047 0def 05       		.uleb128 0x5
 3048 0df0 03       		.byte	0x3
 3049 0df1 00000000 		.4byte	initialisation
 3050 0df5 18       		.uleb128 0x18
 3051 0df6 8F000000 		.4byte	0x8f
 3052 0dfa 050E0000 		.4byte	0xe05
 3053 0dfe 19       		.uleb128 0x19
 3054 0dff 9D000000 		.4byte	0x9d
 3055 0e03 1F       		.byte	0x1f
 3056 0e04 00       		.byte	0
 3057 0e05 17       		.uleb128 0x17
 3058 0e06 19000000 		.4byte	.LASF54
 3059 0e0a 01       		.byte	0x1
 3060 0e0b 1F       		.byte	0x1f
 3061 0e0c F50D0000 		.4byte	0xdf5
 3062 0e10 05       		.uleb128 0x5
 3063 0e11 03       		.byte	0x3
 3064 0e12 00000000 		.4byte	output
 3065 0e16 1A       		.uleb128 0x1a
 3066 0e17 34010000 		.4byte	.LASF55
 3067 0e1b 06       		.byte	0x6
 3068 0e1c 99       		.byte	0x99
 3069 0e1d 68000000 		.4byte	0x68
 3070 0e21 1A       		.uleb128 0x1a
 3071 0e22 AD000000 		.4byte	.LASF56
 3072 0e26 06       		.byte	0x6
 3073 0e27 9A       		.byte	0x9a
 3074 0e28 2B0D0000 		.4byte	0xd2b
 3075 0e2c 17       		.uleb128 0x17
 3076 0e2d 32050000 		.4byte	.LASF57
 3077 0e31 01       		.byte	0x1
 3078 0e32 56       		.byte	0x56
 3079 0e33 68000000 		.4byte	0x68
 3080 0e37 05       		.uleb128 0x5
 3081 0e38 03       		.byte	0x3
 3082 0e39 00000000 		.4byte	colour_flag
 3083 0e3d 17       		.uleb128 0x17
 3084 0e3e 80080000 		.4byte	.LASF58
 3085 0e42 01       		.byte	0x1
 3086 0e43 22       		.byte	0x22
 3087 0e44 68000000 		.4byte	0x68
 3088 0e48 05       		.uleb128 0x5
 3089 0e49 03       		.byte	0x3
 3090 0e4a 00000000 		.4byte	state
 3091 0e4e 17       		.uleb128 0x17
 3092 0e4f E2010000 		.4byte	.LASF59
 3093 0e53 01       		.byte	0x1
 3094 0e54 5C       		.byte	0x5c
 3095 0e55 68000000 		.4byte	0x68
 3096 0e59 05       		.uleb128 0x5
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cccxI4fz.s 			page 75


 3097 0e5a 03       		.byte	0x3
 3098 0e5b 00000000 		.4byte	moving
 3099 0e5f 17       		.uleb128 0x17
 3100 0e60 30060000 		.4byte	.LASF60
 3101 0e64 05       		.byte	0x5
 3102 0e65 2E       		.byte	0x2e
 3103 0e66 68000000 		.4byte	0x68
 3104 0e6a 05       		.uleb128 0x5
 3105 0e6b 03       		.byte	0x3
 3106 0e6c 00000000 		.4byte	ultrasonic_flag
 3107 0e70 17       		.uleb128 0x17
 3108 0e71 3A040000 		.4byte	.LASF61
 3109 0e75 01       		.byte	0x1
 3110 0e76 3D       		.byte	0x3d
 3111 0e77 68000000 		.4byte	0x68
 3112 0e7b 05       		.uleb128 0x5
 3113 0e7c 03       		.byte	0x3
 3114 0e7d 00000000 		.4byte	currentOrientation
 3115 0e81 17       		.uleb128 0x17
 3116 0e82 22090000 		.4byte	.LASF62
 3117 0e86 01       		.byte	0x1
 3118 0e87 23       		.byte	0x23
 3119 0e88 68000000 		.4byte	0x68
 3120 0e8c 05       		.uleb128 0x5
 3121 0e8d 03       		.byte	0x3
 3122 0e8e 00000000 		.4byte	running
 3123 0e92 17       		.uleb128 0x17
 3124 0e93 24020000 		.4byte	.LASF63
 3125 0e97 01       		.byte	0x1
 3126 0e98 28       		.byte	0x28
 3127 0e99 68000000 		.4byte	0x68
 3128 0e9d 05       		.uleb128 0x5
 3129 0e9e 03       		.byte	0x3
 3130 0e9f 00000000 		.4byte	currentPuckStackSize
 3131 0ea3 18       		.uleb128 0x18
 3132 0ea4 68000000 		.4byte	0x68
 3133 0ea8 B30E0000 		.4byte	0xeb3
 3134 0eac 19       		.uleb128 0x19
 3135 0ead 9D000000 		.4byte	0x9d
 3136 0eb1 02       		.byte	0x2
 3137 0eb2 00       		.byte	0
 3138 0eb3 17       		.uleb128 0x17
 3139 0eb4 46050000 		.4byte	.LASF64
 3140 0eb8 01       		.byte	0x1
 3141 0eb9 2A       		.byte	0x2a
 3142 0eba A30E0000 		.4byte	0xea3
 3143 0ebe 05       		.uleb128 0x5
 3144 0ebf 03       		.byte	0x3
 3145 0ec0 00000000 		.4byte	puckConstructionPlan
 3146 0ec4 17       		.uleb128 0x17
 3147 0ec5 D1050000 		.4byte	.LASF65
 3148 0ec9 01       		.byte	0x1
 3149 0eca 32       		.byte	0x32
 3150 0ecb 81000000 		.4byte	0x81
 3151 0ecf 05       		.uleb128 0x5
 3152 0ed0 03       		.byte	0x3
 3153 0ed1 00000000 		.4byte	horizontalPuckGrid
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cccxI4fz.s 			page 76


 3154 0ed5 17       		.uleb128 0x17
 3155 0ed6 16050000 		.4byte	.LASF66
 3156 0eda 01       		.byte	0x1
 3157 0edb 36       		.byte	0x36
 3158 0edc 68000000 		.4byte	0x68
 3159 0ee0 05       		.uleb128 0x5
 3160 0ee1 03       		.byte	0x3
 3161 0ee2 00000000 		.4byte	beginNavigation
 3162 0ee6 17       		.uleb128 0x17
 3163 0ee7 26050000 		.4byte	.LASF67
 3164 0eeb 01       		.byte	0x1
 3165 0eec 38       		.byte	0x38
 3166 0eed 68000000 		.4byte	0x68
 3167 0ef1 05       		.uleb128 0x5
 3168 0ef2 03       		.byte	0x3
 3169 0ef3 00000000 		.4byte	pathToPucks
 3170 0ef7 17       		.uleb128 0x17
 3171 0ef8 4D070000 		.4byte	.LASF68
 3172 0efc 01       		.byte	0x1
 3173 0efd 39       		.byte	0x39
 3174 0efe 68000000 		.4byte	0x68
 3175 0f02 05       		.uleb128 0x5
 3176 0f03 03       		.byte	0x3
 3177 0f04 00000000 		.4byte	pathPastBlock
 3178 0f08 18       		.uleb128 0x18
 3179 0f09 81000000 		.4byte	0x81
 3180 0f0d 180F0000 		.4byte	0xf18
 3181 0f11 19       		.uleb128 0x19
 3182 0f12 9D000000 		.4byte	0x9d
 3183 0f16 01       		.byte	0x1
 3184 0f17 00       		.byte	0
 3185 0f18 17       		.uleb128 0x17
 3186 0f19 BF010000 		.4byte	.LASF69
 3187 0f1d 01       		.byte	0x1
 3188 0f1e 3B       		.byte	0x3b
 3189 0f1f 080F0000 		.4byte	0xf08
 3190 0f23 05       		.uleb128 0x5
 3191 0f24 03       		.byte	0x3
 3192 0f25 00000000 		.4byte	currentPosition
 3193 0f29 17       		.uleb128 0x17
 3194 0f2a EC060000 		.4byte	.LASF70
 3195 0f2e 01       		.byte	0x1
 3196 0f2f 3C       		.byte	0x3c
 3197 0f30 080F0000 		.4byte	0xf08
 3198 0f34 05       		.uleb128 0x5
 3199 0f35 03       		.byte	0x3
 3200 0f36 00000000 		.4byte	desiredPosition
 3201 0f3a 17       		.uleb128 0x17
 3202 0f3b 7E060000 		.4byte	.LASF71
 3203 0f3f 01       		.byte	0x1
 3204 0f40 3E       		.byte	0x3e
 3205 0f41 68000000 		.4byte	0x68
 3206 0f45 05       		.uleb128 0x5
 3207 0f46 03       		.byte	0x3
 3208 0f47 00000000 		.4byte	desiredOrientation
 3209 0f4b 17       		.uleb128 0x17
 3210 0f4c AA080000 		.4byte	.LASF72
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cccxI4fz.s 			page 77


 3211 0f50 01       		.byte	0x1
 3212 0f51 40       		.byte	0x40
 3213 0f52 33000000 		.4byte	0x33
 3214 0f56 05       		.uleb128 0x5
 3215 0f57 03       		.byte	0x3
 3216 0f58 00000000 		.4byte	moveNow
 3217 0f5c 17       		.uleb128 0x17
 3218 0f5d 9E040000 		.4byte	.LASF73
 3219 0f61 01       		.byte	0x1
 3220 0f62 4D       		.byte	0x4d
 3221 0f63 33000000 		.4byte	0x33
 3222 0f67 05       		.uleb128 0x5
 3223 0f68 03       		.byte	0x3
 3224 0f69 00000000 		.4byte	moveLeftAllowed
 3225 0f6d 17       		.uleb128 0x17
 3226 0f6e 47020000 		.4byte	.LASF74
 3227 0f72 01       		.byte	0x1
 3228 0f73 4E       		.byte	0x4e
 3229 0f74 33000000 		.4byte	0x33
 3230 0f78 05       		.uleb128 0x5
 3231 0f79 03       		.byte	0x3
 3232 0f7a 00000000 		.4byte	moveRightAllowed
 3233 0f7e 17       		.uleb128 0x17
 3234 0f7f 8B040000 		.4byte	.LASF75
 3235 0f83 01       		.byte	0x1
 3236 0f84 4F       		.byte	0x4f
 3237 0f85 33000000 		.4byte	0x33
 3238 0f89 05       		.uleb128 0x5
 3239 0f8a 03       		.byte	0x3
 3240 0f8b 00000000 		.4byte	moveForwardAllowed
 3241 0f8f 17       		.uleb128 0x17
 3242 0f90 CC030000 		.4byte	.LASF76
 3243 0f94 01       		.byte	0x1
 3244 0f95 50       		.byte	0x50
 3245 0f96 33000000 		.4byte	0x33
 3246 0f9a 05       		.uleb128 0x5
 3247 0f9b 03       		.byte	0x3
 3248 0f9c 00000000 		.4byte	moveBackwardAllowed
 3249 0fa0 17       		.uleb128 0x17
 3250 0fa1 20000000 		.4byte	.LASF77
 3251 0fa5 01       		.byte	0x1
 3252 0fa6 55       		.byte	0x55
 3253 0fa7 68000000 		.4byte	0x68
 3254 0fab 05       		.uleb128 0x5
 3255 0fac 03       		.byte	0x3
 3256 0fad 00000000 		.4byte	idac_value
 3257 0fb1 17       		.uleb128 0x17
 3258 0fb2 F0050000 		.4byte	.LASF78
 3259 0fb6 01       		.byte	0x1
 3260 0fb7 57       		.byte	0x57
 3261 0fb8 68000000 		.4byte	0x68
 3262 0fbc 05       		.uleb128 0x5
 3263 0fbd 03       		.byte	0x3
 3264 0fbe 00000000 		.4byte	colour_sensing_algorithm
 3265 0fc2 17       		.uleb128 0x17
 3266 0fc3 E0030000 		.4byte	.LASF79
 3267 0fc7 01       		.byte	0x1
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cccxI4fz.s 			page 78


 3268 0fc8 5E       		.byte	0x5e
 3269 0fc9 D30F0000 		.4byte	0xfd3
 3270 0fcd 05       		.uleb128 0x5
 3271 0fce 03       		.byte	0x3
 3272 0fcf 00000000 		.4byte	PLAN_SCAN_VERTICAL
 3273 0fd3 1B       		.uleb128 0x1b
 3274 0fd4 68000000 		.4byte	0x68
 3275 0fd8 17       		.uleb128 0x17
 3276 0fd9 B2080000 		.4byte	.LASF80
 3277 0fdd 01       		.byte	0x1
 3278 0fde 60       		.byte	0x60
 3279 0fdf 68000000 		.4byte	0x68
 3280 0fe3 05       		.uleb128 0x5
 3281 0fe4 03       		.byte	0x3
 3282 0fe5 00000000 		.4byte	current_stage
 3283 0fe9 17       		.uleb128 0x17
 3284 0fea 5B050000 		.4byte	.LASF81
 3285 0fee 01       		.byte	0x1
 3286 0fef 64       		.byte	0x64
 3287 0ff0 68000000 		.4byte	0x68
 3288 0ff4 05       		.uleb128 0x5
 3289 0ff5 03       		.byte	0x3
 3290 0ff6 00000000 		.4byte	distance_returned_global
 3291 0ffa 1C       		.uleb128 0x1c
 3292 0ffb EE000000 		.4byte	.LASF82
 3293 0fff EE000000 		.4byte	.LASF82
 3294 1003 05       		.byte	0x5
 3295 1004 19       		.byte	0x19
 3296 1005 1C       		.uleb128 0x1c
 3297 1006 00000000 		.4byte	.LASF83
 3298 100a 00000000 		.4byte	.LASF83
 3299 100e 07       		.byte	0x7
 3300 100f 76       		.byte	0x76
 3301 1010 1C       		.uleb128 0x1c
 3302 1011 CF010000 		.4byte	.LASF84
 3303 1015 CF010000 		.4byte	.LASF84
 3304 1019 08       		.byte	0x8
 3305 101a 0F       		.byte	0xf
 3306 101b 1C       		.uleb128 0x1c
 3307 101c 3A010000 		.4byte	.LASF85
 3308 1020 3A010000 		.4byte	.LASF85
 3309 1024 09       		.byte	0x9
 3310 1025 1C       		.byte	0x1c
 3311 1026 1C       		.uleb128 0x1c
 3312 1027 E9010000 		.4byte	.LASF86
 3313 102b E9010000 		.4byte	.LASF86
 3314 102f 0A       		.byte	0xa
 3315 1030 2F       		.byte	0x2f
 3316 1031 1C       		.uleb128 0x1c
 3317 1032 9B060000 		.4byte	.LASF87
 3318 1036 9B060000 		.4byte	.LASF87
 3319 103a 0B       		.byte	0xb
 3320 103b 2F       		.byte	0x2f
 3321 103c 1C       		.uleb128 0x1c
 3322 103d F3030000 		.4byte	.LASF88
 3323 1041 F3030000 		.4byte	.LASF88
 3324 1045 0C       		.byte	0xc
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cccxI4fz.s 			page 79


 3325 1046 DD       		.byte	0xdd
 3326 1047 1C       		.uleb128 0x1c
 3327 1048 8E000000 		.4byte	.LASF89
 3328 104c 8E000000 		.4byte	.LASF89
 3329 1050 0C       		.byte	0xc
 3330 1051 C3       		.byte	0xc3
 3331 1052 1C       		.uleb128 0x1c
 3332 1053 85050000 		.4byte	.LASF90
 3333 1057 85050000 		.4byte	.LASF90
 3334 105b 0D       		.byte	0xd
 3335 105c DD       		.byte	0xdd
 3336 105d 1C       		.uleb128 0x1c
 3337 105e B8040000 		.4byte	.LASF91
 3338 1062 B8040000 		.4byte	.LASF91
 3339 1066 0D       		.byte	0xd
 3340 1067 C3       		.byte	0xc3
 3341 1068 1C       		.uleb128 0x1c
 3342 1069 4E010000 		.4byte	.LASF92
 3343 106d 4E010000 		.4byte	.LASF92
 3344 1071 0E       		.byte	0xe
 3345 1072 4F       		.byte	0x4f
 3346 1073 1C       		.uleb128 0x1c
 3347 1074 CF000000 		.4byte	.LASF93
 3348 1078 CF000000 		.4byte	.LASF93
 3349 107c 0F       		.byte	0xf
 3350 107d 4F       		.byte	0x4f
 3351 107e 1C       		.uleb128 0x1c
 3352 107f 93010000 		.4byte	.LASF94
 3353 1083 93010000 		.4byte	.LASF94
 3354 1087 0C       		.byte	0xc
 3355 1088 DC       		.byte	0xdc
 3356 1089 1C       		.uleb128 0x1c
 3357 108a C3020000 		.4byte	.LASF95
 3358 108e C3020000 		.4byte	.LASF95
 3359 1092 0D       		.byte	0xd
 3360 1093 DC       		.byte	0xdc
 3361 1094 1C       		.uleb128 0x1c
 3362 1095 0D080000 		.4byte	.LASF96
 3363 1099 0D080000 		.4byte	.LASF96
 3364 109d 10       		.byte	0x10
 3365 109e 10       		.byte	0x10
 3366 109f 1C       		.uleb128 0x1c
 3367 10a0 7F000000 		.4byte	.LASF97
 3368 10a4 7F000000 		.4byte	.LASF97
 3369 10a8 05       		.byte	0x5
 3370 10a9 16       		.byte	0x16
 3371 10aa 1C       		.uleb128 0x1c
 3372 10ab 15060000 		.4byte	.LASF98
 3373 10af 15060000 		.4byte	.LASF98
 3374 10b3 11       		.byte	0x11
 3375 10b4 E7       		.byte	0xe7
 3376 10b5 1C       		.uleb128 0x1c
 3377 10b6 8A030000 		.4byte	.LASF99
 3378 10ba 8A030000 		.4byte	.LASF99
 3379 10be 12       		.byte	0x12
 3380 10bf 8B       		.byte	0x8b
 3381 10c0 1C       		.uleb128 0x1c
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cccxI4fz.s 			page 80


 3382 10c1 AE030000 		.4byte	.LASF100
 3383 10c5 AE030000 		.4byte	.LASF100
 3384 10c9 0E       		.byte	0xe
 3385 10ca 4E       		.byte	0x4e
 3386 10cb 1C       		.uleb128 0x1c
 3387 10cc 6C020000 		.4byte	.LASF101
 3388 10d0 6C020000 		.4byte	.LASF101
 3389 10d4 0F       		.byte	0xf
 3390 10d5 4E       		.byte	0x4e
 3391 10d6 1C       		.uleb128 0x1c
 3392 10d7 DA080000 		.4byte	.LASF102
 3393 10db DA080000 		.4byte	.LASF102
 3394 10df 08       		.byte	0x8
 3395 10e0 11       		.byte	0x11
 3396 10e1 1C       		.uleb128 0x1c
 3397 10e2 CB060000 		.4byte	.LASF103
 3398 10e6 CB060000 		.4byte	.LASF103
 3399 10ea 13       		.byte	0x13
 3400 10eb 3D       		.byte	0x3d
 3401 10ec 1C       		.uleb128 0x1c
 3402 10ed 2C070000 		.4byte	.LASF104
 3403 10f1 2C070000 		.4byte	.LASF104
 3404 10f5 12       		.byte	0x12
 3405 10f6 54       		.byte	0x54
 3406 10f7 1C       		.uleb128 0x1c
 3407 10f8 A7020000 		.4byte	.LASF105
 3408 10fc A7020000 		.4byte	.LASF105
 3409 1100 14       		.byte	0x14
 3410 1101 3A       		.byte	0x3a
 3411 1102 1C       		.uleb128 0x1c
 3412 1103 D8040000 		.4byte	.LASF106
 3413 1107 D8040000 		.4byte	.LASF106
 3414 110b 15       		.byte	0x15
 3415 110c 3C       		.byte	0x3c
 3416 110d 1C       		.uleb128 0x1c
 3417 110e 47080000 		.4byte	.LASF107
 3418 1112 47080000 		.4byte	.LASF107
 3419 1116 15       		.byte	0x15
 3420 1117 40       		.byte	0x40
 3421 1118 1C       		.uleb128 0x1c
 3422 1119 74050000 		.4byte	.LASF108
 3423 111d 74050000 		.4byte	.LASF108
 3424 1121 15       		.byte	0x15
 3425 1122 41       		.byte	0x41
 3426 1123 1C       		.uleb128 0x1c
 3427 1124 7A070000 		.4byte	.LASF109
 3428 1128 7A070000 		.4byte	.LASF109
 3429 112c 16       		.byte	0x16
 3430 112d 2F       		.byte	0x2f
 3431 112e 1C       		.uleb128 0x1c
 3432 112f B1020000 		.4byte	.LASF110
 3433 1133 B1020000 		.4byte	.LASF110
 3434 1137 17       		.byte	0x17
 3435 1138 2F       		.byte	0x2f
 3436 1139 1C       		.uleb128 0x1c
 3437 113a 40060000 		.4byte	.LASF111
 3438 113e 40060000 		.4byte	.LASF111
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cccxI4fz.s 			page 81


 3439 1142 09       		.byte	0x9
 3440 1143 19       		.byte	0x19
 3441 1144 1C       		.uleb128 0x1c
 3442 1145 BC050000 		.4byte	.LASF112
 3443 1149 BC050000 		.4byte	.LASF112
 3444 114d 18       		.byte	0x18
 3445 114e 92       		.byte	0x92
 3446 114f 1C       		.uleb128 0x1c
 3447 1150 8B020000 		.4byte	.LASF113
 3448 1154 8B020000 		.4byte	.LASF113
 3449 1158 18       		.byte	0x18
 3450 1159 C3       		.byte	0xc3
 3451 115a 1C       		.uleb128 0x1c
 3452 115b D7060000 		.4byte	.LASF114
 3453 115f D7060000 		.4byte	.LASF114
 3454 1163 18       		.byte	0x18
 3455 1164 DC       		.byte	0xdc
 3456 1165 1C       		.uleb128 0x1c
 3457 1166 22040000 		.4byte	.LASF115
 3458 116a 22040000 		.4byte	.LASF115
 3459 116e 19       		.byte	0x19
 3460 116f 92       		.byte	0x92
 3461 1170 1C       		.uleb128 0x1c
 3462 1171 0D070000 		.4byte	.LASF116
 3463 1175 0D070000 		.4byte	.LASF116
 3464 1179 19       		.byte	0x19
 3465 117a C3       		.byte	0xc3
 3466 117b 1C       		.uleb128 0x1c
 3467 117c F9040000 		.4byte	.LASF117
 3468 1180 F9040000 		.4byte	.LASF117
 3469 1184 19       		.byte	0x19
 3470 1185 DC       		.byte	0xdc
 3471 1186 1C       		.uleb128 0x1c
 3472 1187 09010000 		.4byte	.LASF118
 3473 118b 09010000 		.4byte	.LASF118
 3474 118f 0C       		.byte	0xc
 3475 1190 92       		.byte	0x92
 3476 1191 1C       		.uleb128 0x1c
 3477 1192 6C010000 		.4byte	.LASF119
 3478 1196 6C010000 		.4byte	.LASF119
 3479 119a 0D       		.byte	0xd
 3480 119b 92       		.byte	0x92
 3481 119c 1C       		.uleb128 0x1c
 3482 119d 86080000 		.4byte	.LASF120
 3483 11a1 86080000 		.4byte	.LASF120
 3484 11a5 0E       		.byte	0xe
 3485 11a6 48       		.byte	0x48
 3486 11a7 1C       		.uleb128 0x1c
 3487 11a8 61040000 		.4byte	.LASF121
 3488 11ac 61040000 		.4byte	.LASF121
 3489 11b0 0F       		.byte	0xf
 3490 11b1 48       		.byte	0x48
 3491 11b2 1C       		.uleb128 0x1c
 3492 11b3 C0080000 		.4byte	.LASF122
 3493 11b7 C0080000 		.4byte	.LASF122
 3494 11bb 1A       		.byte	0x1a
 3495 11bc 5A       		.byte	0x5a
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cccxI4fz.s 			page 82


 3496 11bd 1C       		.uleb128 0x1c
 3497 11be 58060000 		.4byte	.LASF123
 3498 11c2 58060000 		.4byte	.LASF123
 3499 11c6 1A       		.byte	0x1a
 3500 11c7 5E       		.byte	0x5e
 3501 11c8 1C       		.uleb128 0x1c
 3502 11c9 B1010000 		.4byte	.LASF124
 3503 11cd B1010000 		.4byte	.LASF124
 3504 11d1 1B       		.byte	0x1b
 3505 11d2 18       		.byte	0x18
 3506 11d3 1C       		.uleb128 0x1c
 3507 11d4 39020000 		.4byte	.LASF125
 3508 11d8 39020000 		.4byte	.LASF125
 3509 11dc 1C       		.byte	0x1c
 3510 11dd 18       		.byte	0x18
 3511 11de 1C       		.uleb128 0x1c
 3512 11df E4050000 		.4byte	.LASF126
 3513 11e3 E4050000 		.4byte	.LASF126
 3514 11e7 10       		.byte	0x10
 3515 11e8 11       		.byte	0x11
 3516 11e9 00       		.byte	0
 3517              		.section	.debug_abbrev,"",%progbits
 3518              	.Ldebug_abbrev0:
 3519 0000 01       		.uleb128 0x1
 3520 0001 11       		.uleb128 0x11
 3521 0002 01       		.byte	0x1
 3522 0003 25       		.uleb128 0x25
 3523 0004 0E       		.uleb128 0xe
 3524 0005 13       		.uleb128 0x13
 3525 0006 0B       		.uleb128 0xb
 3526 0007 03       		.uleb128 0x3
 3527 0008 0E       		.uleb128 0xe
 3528 0009 1B       		.uleb128 0x1b
 3529 000a 0E       		.uleb128 0xe
 3530 000b 55       		.uleb128 0x55
 3531 000c 17       		.uleb128 0x17
 3532 000d 11       		.uleb128 0x11
 3533 000e 01       		.uleb128 0x1
 3534 000f 10       		.uleb128 0x10
 3535 0010 17       		.uleb128 0x17
 3536 0011 00       		.byte	0
 3537 0012 00       		.byte	0
 3538 0013 02       		.uleb128 0x2
 3539 0014 24       		.uleb128 0x24
 3540 0015 00       		.byte	0
 3541 0016 0B       		.uleb128 0xb
 3542 0017 0B       		.uleb128 0xb
 3543 0018 3E       		.uleb128 0x3e
 3544 0019 0B       		.uleb128 0xb
 3545 001a 03       		.uleb128 0x3
 3546 001b 0E       		.uleb128 0xe
 3547 001c 00       		.byte	0
 3548 001d 00       		.byte	0
 3549 001e 03       		.uleb128 0x3
 3550 001f 16       		.uleb128 0x16
 3551 0020 00       		.byte	0
 3552 0021 03       		.uleb128 0x3
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cccxI4fz.s 			page 83


 3553 0022 0E       		.uleb128 0xe
 3554 0023 3A       		.uleb128 0x3a
 3555 0024 0B       		.uleb128 0xb
 3556 0025 3B       		.uleb128 0x3b
 3557 0026 0B       		.uleb128 0xb
 3558 0027 49       		.uleb128 0x49
 3559 0028 13       		.uleb128 0x13
 3560 0029 00       		.byte	0
 3561 002a 00       		.byte	0
 3562 002b 04       		.uleb128 0x4
 3563 002c 24       		.uleb128 0x24
 3564 002d 00       		.byte	0
 3565 002e 0B       		.uleb128 0xb
 3566 002f 0B       		.uleb128 0xb
 3567 0030 3E       		.uleb128 0x3e
 3568 0031 0B       		.uleb128 0xb
 3569 0032 03       		.uleb128 0x3
 3570 0033 08       		.uleb128 0x8
 3571 0034 00       		.byte	0
 3572 0035 00       		.byte	0
 3573 0036 05       		.uleb128 0x5
 3574 0037 2E       		.uleb128 0x2e
 3575 0038 01       		.byte	0x1
 3576 0039 3F       		.uleb128 0x3f
 3577 003a 19       		.uleb128 0x19
 3578 003b 03       		.uleb128 0x3
 3579 003c 08       		.uleb128 0x8
 3580 003d 3A       		.uleb128 0x3a
 3581 003e 0B       		.uleb128 0xb
 3582 003f 3B       		.uleb128 0x3b
 3583 0040 0B       		.uleb128 0xb
 3584 0041 27       		.uleb128 0x27
 3585 0042 19       		.uleb128 0x19
 3586 0043 11       		.uleb128 0x11
 3587 0044 01       		.uleb128 0x1
 3588 0045 12       		.uleb128 0x12
 3589 0046 06       		.uleb128 0x6
 3590 0047 40       		.uleb128 0x40
 3591 0048 18       		.uleb128 0x18
 3592 0049 9742     		.uleb128 0x2117
 3593 004b 19       		.uleb128 0x19
 3594 004c 01       		.uleb128 0x1
 3595 004d 13       		.uleb128 0x13
 3596 004e 00       		.byte	0
 3597 004f 00       		.byte	0
 3598 0050 06       		.uleb128 0x6
 3599 0051 898201   		.uleb128 0x4109
 3600 0054 00       		.byte	0
 3601 0055 11       		.uleb128 0x11
 3602 0056 01       		.uleb128 0x1
 3603 0057 31       		.uleb128 0x31
 3604 0058 13       		.uleb128 0x13
 3605 0059 00       		.byte	0
 3606 005a 00       		.byte	0
 3607 005b 07       		.uleb128 0x7
 3608 005c 2E       		.uleb128 0x2e
 3609 005d 01       		.byte	0x1
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cccxI4fz.s 			page 84


 3610 005e 3F       		.uleb128 0x3f
 3611 005f 19       		.uleb128 0x19
 3612 0060 03       		.uleb128 0x3
 3613 0061 0E       		.uleb128 0xe
 3614 0062 3A       		.uleb128 0x3a
 3615 0063 0B       		.uleb128 0xb
 3616 0064 3B       		.uleb128 0x3b
 3617 0065 0B       		.uleb128 0xb
 3618 0066 27       		.uleb128 0x27
 3619 0067 19       		.uleb128 0x19
 3620 0068 11       		.uleb128 0x11
 3621 0069 01       		.uleb128 0x1
 3622 006a 12       		.uleb128 0x12
 3623 006b 06       		.uleb128 0x6
 3624 006c 40       		.uleb128 0x40
 3625 006d 18       		.uleb128 0x18
 3626 006e 9742     		.uleb128 0x2117
 3627 0070 19       		.uleb128 0x19
 3628 0071 01       		.uleb128 0x1
 3629 0072 13       		.uleb128 0x13
 3630 0073 00       		.byte	0
 3631 0074 00       		.byte	0
 3632 0075 08       		.uleb128 0x8
 3633 0076 898201   		.uleb128 0x4109
 3634 0079 01       		.byte	0x1
 3635 007a 11       		.uleb128 0x11
 3636 007b 01       		.uleb128 0x1
 3637 007c 31       		.uleb128 0x31
 3638 007d 13       		.uleb128 0x13
 3639 007e 00       		.byte	0
 3640 007f 00       		.byte	0
 3641 0080 09       		.uleb128 0x9
 3642 0081 8A8201   		.uleb128 0x410a
 3643 0084 00       		.byte	0
 3644 0085 02       		.uleb128 0x2
 3645 0086 18       		.uleb128 0x18
 3646 0087 9142     		.uleb128 0x2111
 3647 0089 18       		.uleb128 0x18
 3648 008a 00       		.byte	0
 3649 008b 00       		.byte	0
 3650 008c 0A       		.uleb128 0xa
 3651 008d 2E       		.uleb128 0x2e
 3652 008e 01       		.byte	0x1
 3653 008f 3F       		.uleb128 0x3f
 3654 0090 19       		.uleb128 0x19
 3655 0091 03       		.uleb128 0x3
 3656 0092 0E       		.uleb128 0xe
 3657 0093 3A       		.uleb128 0x3a
 3658 0094 0B       		.uleb128 0xb
 3659 0095 3B       		.uleb128 0x3b
 3660 0096 05       		.uleb128 0x5
 3661 0097 27       		.uleb128 0x27
 3662 0098 19       		.uleb128 0x19
 3663 0099 11       		.uleb128 0x11
 3664 009a 01       		.uleb128 0x1
 3665 009b 12       		.uleb128 0x12
 3666 009c 06       		.uleb128 0x6
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cccxI4fz.s 			page 85


 3667 009d 40       		.uleb128 0x40
 3668 009e 18       		.uleb128 0x18
 3669 009f 9742     		.uleb128 0x2117
 3670 00a1 19       		.uleb128 0x19
 3671 00a2 01       		.uleb128 0x1
 3672 00a3 13       		.uleb128 0x13
 3673 00a4 00       		.byte	0
 3674 00a5 00       		.byte	0
 3675 00a6 0B       		.uleb128 0xb
 3676 00a7 34       		.uleb128 0x34
 3677 00a8 00       		.byte	0
 3678 00a9 03       		.uleb128 0x3
 3679 00aa 0E       		.uleb128 0xe
 3680 00ab 3A       		.uleb128 0x3a
 3681 00ac 0B       		.uleb128 0xb
 3682 00ad 3B       		.uleb128 0x3b
 3683 00ae 05       		.uleb128 0x5
 3684 00af 49       		.uleb128 0x49
 3685 00b0 13       		.uleb128 0x13
 3686 00b1 02       		.uleb128 0x2
 3687 00b2 17       		.uleb128 0x17
 3688 00b3 00       		.byte	0
 3689 00b4 00       		.byte	0
 3690 00b5 0C       		.uleb128 0xc
 3691 00b6 898201   		.uleb128 0x4109
 3692 00b9 01       		.byte	0x1
 3693 00ba 11       		.uleb128 0x11
 3694 00bb 01       		.uleb128 0x1
 3695 00bc 31       		.uleb128 0x31
 3696 00bd 13       		.uleb128 0x13
 3697 00be 01       		.uleb128 0x1
 3698 00bf 13       		.uleb128 0x13
 3699 00c0 00       		.byte	0
 3700 00c1 00       		.byte	0
 3701 00c2 0D       		.uleb128 0xd
 3702 00c3 34       		.uleb128 0x34
 3703 00c4 00       		.byte	0
 3704 00c5 03       		.uleb128 0x3
 3705 00c6 0E       		.uleb128 0xe
 3706 00c7 3A       		.uleb128 0x3a
 3707 00c8 0B       		.uleb128 0xb
 3708 00c9 3B       		.uleb128 0x3b
 3709 00ca 05       		.uleb128 0x5
 3710 00cb 49       		.uleb128 0x49
 3711 00cc 13       		.uleb128 0x13
 3712 00cd 00       		.byte	0
 3713 00ce 00       		.byte	0
 3714 00cf 0E       		.uleb128 0xe
 3715 00d0 34       		.uleb128 0x34
 3716 00d1 00       		.byte	0
 3717 00d2 03       		.uleb128 0x3
 3718 00d3 0E       		.uleb128 0xe
 3719 00d4 3A       		.uleb128 0x3a
 3720 00d5 0B       		.uleb128 0xb
 3721 00d6 3B       		.uleb128 0x3b
 3722 00d7 05       		.uleb128 0x5
 3723 00d8 49       		.uleb128 0x49
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cccxI4fz.s 			page 86


 3724 00d9 13       		.uleb128 0x13
 3725 00da 1C       		.uleb128 0x1c
 3726 00db 0B       		.uleb128 0xb
 3727 00dc 00       		.byte	0
 3728 00dd 00       		.byte	0
 3729 00de 0F       		.uleb128 0xf
 3730 00df 05       		.uleb128 0x5
 3731 00e0 00       		.byte	0
 3732 00e1 03       		.uleb128 0x3
 3733 00e2 0E       		.uleb128 0xe
 3734 00e3 3A       		.uleb128 0x3a
 3735 00e4 0B       		.uleb128 0xb
 3736 00e5 3B       		.uleb128 0x3b
 3737 00e6 05       		.uleb128 0x5
 3738 00e7 49       		.uleb128 0x49
 3739 00e8 13       		.uleb128 0x13
 3740 00e9 02       		.uleb128 0x2
 3741 00ea 17       		.uleb128 0x17
 3742 00eb 00       		.byte	0
 3743 00ec 00       		.byte	0
 3744 00ed 10       		.uleb128 0x10
 3745 00ee 2E       		.uleb128 0x2e
 3746 00ef 01       		.byte	0x1
 3747 00f0 3F       		.uleb128 0x3f
 3748 00f1 19       		.uleb128 0x19
 3749 00f2 03       		.uleb128 0x3
 3750 00f3 0E       		.uleb128 0xe
 3751 00f4 3A       		.uleb128 0x3a
 3752 00f5 0B       		.uleb128 0xb
 3753 00f6 3B       		.uleb128 0x3b
 3754 00f7 0B       		.uleb128 0xb
 3755 00f8 27       		.uleb128 0x27
 3756 00f9 19       		.uleb128 0x19
 3757 00fa 49       		.uleb128 0x49
 3758 00fb 13       		.uleb128 0x13
 3759 00fc 8701     		.uleb128 0x87
 3760 00fe 19       		.uleb128 0x19
 3761 00ff 11       		.uleb128 0x11
 3762 0100 01       		.uleb128 0x1
 3763 0101 12       		.uleb128 0x12
 3764 0102 06       		.uleb128 0x6
 3765 0103 40       		.uleb128 0x40
 3766 0104 18       		.uleb128 0x18
 3767 0105 9742     		.uleb128 0x2117
 3768 0107 19       		.uleb128 0x19
 3769 0108 01       		.uleb128 0x1
 3770 0109 13       		.uleb128 0x13
 3771 010a 00       		.byte	0
 3772 010b 00       		.byte	0
 3773 010c 11       		.uleb128 0x11
 3774 010d 34       		.uleb128 0x34
 3775 010e 00       		.byte	0
 3776 010f 03       		.uleb128 0x3
 3777 0110 0E       		.uleb128 0xe
 3778 0111 3A       		.uleb128 0x3a
 3779 0112 0B       		.uleb128 0xb
 3780 0113 3B       		.uleb128 0x3b
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cccxI4fz.s 			page 87


 3781 0114 0B       		.uleb128 0xb
 3782 0115 49       		.uleb128 0x49
 3783 0116 13       		.uleb128 0x13
 3784 0117 1C       		.uleb128 0x1c
 3785 0118 0B       		.uleb128 0xb
 3786 0119 00       		.byte	0
 3787 011a 00       		.byte	0
 3788 011b 12       		.uleb128 0x12
 3789 011c 0B       		.uleb128 0xb
 3790 011d 01       		.byte	0x1
 3791 011e 11       		.uleb128 0x11
 3792 011f 01       		.uleb128 0x1
 3793 0120 12       		.uleb128 0x12
 3794 0121 06       		.uleb128 0x6
 3795 0122 01       		.uleb128 0x1
 3796 0123 13       		.uleb128 0x13
 3797 0124 00       		.byte	0
 3798 0125 00       		.byte	0
 3799 0126 13       		.uleb128 0x13
 3800 0127 0B       		.uleb128 0xb
 3801 0128 01       		.byte	0x1
 3802 0129 11       		.uleb128 0x11
 3803 012a 01       		.uleb128 0x1
 3804 012b 12       		.uleb128 0x12
 3805 012c 06       		.uleb128 0x6
 3806 012d 00       		.byte	0
 3807 012e 00       		.byte	0
 3808 012f 14       		.uleb128 0x14
 3809 0130 34       		.uleb128 0x34
 3810 0131 00       		.byte	0
 3811 0132 03       		.uleb128 0x3
 3812 0133 08       		.uleb128 0x8
 3813 0134 3A       		.uleb128 0x3a
 3814 0135 0B       		.uleb128 0xb
 3815 0136 3B       		.uleb128 0x3b
 3816 0137 05       		.uleb128 0x5
 3817 0138 49       		.uleb128 0x49
 3818 0139 13       		.uleb128 0x13
 3819 013a 02       		.uleb128 0x2
 3820 013b 17       		.uleb128 0x17
 3821 013c 00       		.byte	0
 3822 013d 00       		.byte	0
 3823 013e 15       		.uleb128 0x15
 3824 013f 34       		.uleb128 0x34
 3825 0140 00       		.byte	0
 3826 0141 03       		.uleb128 0x3
 3827 0142 0E       		.uleb128 0xe
 3828 0143 3A       		.uleb128 0x3a
 3829 0144 0B       		.uleb128 0xb
 3830 0145 3B       		.uleb128 0x3b
 3831 0146 05       		.uleb128 0x5
 3832 0147 49       		.uleb128 0x49
 3833 0148 13       		.uleb128 0x13
 3834 0149 3F       		.uleb128 0x3f
 3835 014a 19       		.uleb128 0x19
 3836 014b 3C       		.uleb128 0x3c
 3837 014c 19       		.uleb128 0x19
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cccxI4fz.s 			page 88


 3838 014d 00       		.byte	0
 3839 014e 00       		.byte	0
 3840 014f 16       		.uleb128 0x16
 3841 0150 35       		.uleb128 0x35
 3842 0151 00       		.byte	0
 3843 0152 49       		.uleb128 0x49
 3844 0153 13       		.uleb128 0x13
 3845 0154 00       		.byte	0
 3846 0155 00       		.byte	0
 3847 0156 17       		.uleb128 0x17
 3848 0157 34       		.uleb128 0x34
 3849 0158 00       		.byte	0
 3850 0159 03       		.uleb128 0x3
 3851 015a 0E       		.uleb128 0xe
 3852 015b 3A       		.uleb128 0x3a
 3853 015c 0B       		.uleb128 0xb
 3854 015d 3B       		.uleb128 0x3b
 3855 015e 0B       		.uleb128 0xb
 3856 015f 49       		.uleb128 0x49
 3857 0160 13       		.uleb128 0x13
 3858 0161 3F       		.uleb128 0x3f
 3859 0162 19       		.uleb128 0x19
 3860 0163 02       		.uleb128 0x2
 3861 0164 18       		.uleb128 0x18
 3862 0165 00       		.byte	0
 3863 0166 00       		.byte	0
 3864 0167 18       		.uleb128 0x18
 3865 0168 01       		.uleb128 0x1
 3866 0169 01       		.byte	0x1
 3867 016a 49       		.uleb128 0x49
 3868 016b 13       		.uleb128 0x13
 3869 016c 01       		.uleb128 0x1
 3870 016d 13       		.uleb128 0x13
 3871 016e 00       		.byte	0
 3872 016f 00       		.byte	0
 3873 0170 19       		.uleb128 0x19
 3874 0171 21       		.uleb128 0x21
 3875 0172 00       		.byte	0
 3876 0173 49       		.uleb128 0x49
 3877 0174 13       		.uleb128 0x13
 3878 0175 2F       		.uleb128 0x2f
 3879 0176 0B       		.uleb128 0xb
 3880 0177 00       		.byte	0
 3881 0178 00       		.byte	0
 3882 0179 1A       		.uleb128 0x1a
 3883 017a 34       		.uleb128 0x34
 3884 017b 00       		.byte	0
 3885 017c 03       		.uleb128 0x3
 3886 017d 0E       		.uleb128 0xe
 3887 017e 3A       		.uleb128 0x3a
 3888 017f 0B       		.uleb128 0xb
 3889 0180 3B       		.uleb128 0x3b
 3890 0181 0B       		.uleb128 0xb
 3891 0182 49       		.uleb128 0x49
 3892 0183 13       		.uleb128 0x13
 3893 0184 3F       		.uleb128 0x3f
 3894 0185 19       		.uleb128 0x19
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cccxI4fz.s 			page 89


 3895 0186 3C       		.uleb128 0x3c
 3896 0187 19       		.uleb128 0x19
 3897 0188 00       		.byte	0
 3898 0189 00       		.byte	0
 3899 018a 1B       		.uleb128 0x1b
 3900 018b 26       		.uleb128 0x26
 3901 018c 00       		.byte	0
 3902 018d 49       		.uleb128 0x49
 3903 018e 13       		.uleb128 0x13
 3904 018f 00       		.byte	0
 3905 0190 00       		.byte	0
 3906 0191 1C       		.uleb128 0x1c
 3907 0192 2E       		.uleb128 0x2e
 3908 0193 00       		.byte	0
 3909 0194 3F       		.uleb128 0x3f
 3910 0195 19       		.uleb128 0x19
 3911 0196 3C       		.uleb128 0x3c
 3912 0197 19       		.uleb128 0x19
 3913 0198 6E       		.uleb128 0x6e
 3914 0199 0E       		.uleb128 0xe
 3915 019a 03       		.uleb128 0x3
 3916 019b 0E       		.uleb128 0xe
 3917 019c 3A       		.uleb128 0x3a
 3918 019d 0B       		.uleb128 0xb
 3919 019e 3B       		.uleb128 0x3b
 3920 019f 0B       		.uleb128 0xb
 3921 01a0 00       		.byte	0
 3922 01a1 00       		.byte	0
 3923 01a2 00       		.byte	0
 3924              		.section	.debug_loc,"",%progbits
 3925              	.Ldebug_loc0:
 3926              	.LLST0:
 3927 0000 02000000 		.4byte	.LVL2
 3928 0004 12000000 		.4byte	.LVL4
 3929 0008 0200     		.2byte	0x2
 3930 000a 30       		.byte	0x30
 3931 000b 9F       		.byte	0x9f
 3932 000c 12000000 		.4byte	.LVL4
 3933 0010 3C000000 		.4byte	.LVL11
 3934 0014 0100     		.2byte	0x1
 3935 0016 55       		.byte	0x55
 3936 0017 00000000 		.4byte	0
 3937 001b 00000000 		.4byte	0
 3938              	.LLST1:
 3939 001f 1E000000 		.4byte	.LVL7
 3940 0023 20000000 		.4byte	.LVL8
 3941 0027 0100     		.2byte	0x1
 3942 0029 50       		.byte	0x50
 3943 002a 20000000 		.4byte	.LVL8
 3944 002e 36000000 		.4byte	.LVL10
 3945 0032 0100     		.2byte	0x1
 3946 0034 54       		.byte	0x54
 3947 0035 00000000 		.4byte	0
 3948 0039 00000000 		.4byte	0
 3949              	.LLST2:
 3950 003d 02000000 		.4byte	.LVL12
 3951 0041 2E000000 		.4byte	.LVL19
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cccxI4fz.s 			page 90


 3952 0045 0200     		.2byte	0x2
 3953 0047 30       		.byte	0x30
 3954 0048 9F       		.byte	0x9f
 3955 0049 2E000000 		.4byte	.LVL19
 3956 004d 34000000 		.4byte	.LVL21
 3957 0051 0100     		.2byte	0x1
 3958 0053 54       		.byte	0x54
 3959 0054 34000000 		.4byte	.LVL21
 3960 0058 36000000 		.4byte	.LVL22
 3961 005c 0100     		.2byte	0x1
 3962 005e 50       		.byte	0x50
 3963 005f 36000000 		.4byte	.LVL22
 3964 0063 5A000000 		.4byte	.LVL29
 3965 0067 0100     		.2byte	0x1
 3966 0069 54       		.byte	0x54
 3967 006a 00000000 		.4byte	0
 3968 006e 00000000 		.4byte	0
 3969              	.LLST3:
 3970 0072 02000000 		.4byte	.LVL30
 3971 0076 08000000 		.4byte	.LVL31
 3972 007a 0400     		.2byte	0x4
 3973 007c 0A       		.byte	0xa
 3974 007d 2C01     		.2byte	0x12c
 3975 007f 9F       		.byte	0x9f
 3976 0080 08000000 		.4byte	.LVL31
 3977 0084 18000000 		.4byte	.LVL34
 3978 0088 0100     		.2byte	0x1
 3979 008a 54       		.byte	0x54
 3980 008b 4C000000 		.4byte	.LVL41
 3981 008f 7A000000 		.4byte	.LVL46
 3982 0093 0100     		.2byte	0x1
 3983 0095 54       		.byte	0x54
 3984 0096 7A000000 		.4byte	.LVL46
 3985 009a AE000000 		.4byte	.LVL55
 3986 009e 0400     		.2byte	0x4
 3987 00a0 74       		.byte	0x74
 3988 00a1 B97E     		.sleb128 -199
 3989 00a3 9F       		.byte	0x9f
 3990 00a4 AE000000 		.4byte	.LVL55
 3991 00a8 DC000000 		.4byte	.LVL60
 3992 00ac 0100     		.2byte	0x1
 3993 00ae 54       		.byte	0x54
 3994 00af DC000000 		.4byte	.LVL60
 3995 00b3 E4000000 		.4byte	.LVL61
 3996 00b7 0400     		.2byte	0x4
 3997 00b9 74       		.byte	0x74
 3998 00ba B97E     		.sleb128 -199
 3999 00bc 9F       		.byte	0x9f
 4000 00bd E4000000 		.4byte	.LVL61
 4001 00c1 F2000000 		.4byte	.LVL64
 4002 00c5 0100     		.2byte	0x1
 4003 00c7 54       		.byte	0x54
 4004 00c8 F2000000 		.4byte	.LVL64
 4005 00cc 26010000 		.4byte	.LVL73
 4006 00d0 0400     		.2byte	0x4
 4007 00d2 74       		.byte	0x74
 4008 00d3 B97E     		.sleb128 -199
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cccxI4fz.s 			page 91


 4009 00d5 9F       		.byte	0x9f
 4010 00d6 26010000 		.4byte	.LVL73
 4011 00da 54010000 		.4byte	.LVL78
 4012 00de 0100     		.2byte	0x1
 4013 00e0 54       		.byte	0x54
 4014 00e1 54010000 		.4byte	.LVL78
 4015 00e5 5A010000 		.4byte	.LVL79
 4016 00e9 0400     		.2byte	0x4
 4017 00eb 74       		.byte	0x74
 4018 00ec B97E     		.sleb128 -199
 4019 00ee 9F       		.byte	0x9f
 4020 00ef 7A010000 		.4byte	.LVL84
 4021 00f3 B2010000 		.4byte	.LVL91
 4022 00f7 0100     		.2byte	0x1
 4023 00f9 54       		.byte	0x54
 4024 00fa 00000000 		.4byte	0
 4025 00fe 00000000 		.4byte	0
 4026              	.LLST4:
 4027 0102 00000000 		.4byte	.LVL92
 4028 0106 0C000000 		.4byte	.LVL94
 4029 010a 0100     		.2byte	0x1
 4030 010c 50       		.byte	0x50
 4031 010d 0C000000 		.4byte	.LVL94
 4032 0111 1A000000 		.4byte	.LVL97
 4033 0115 0100     		.2byte	0x1
 4034 0117 57       		.byte	0x57
 4035 0118 1A000000 		.4byte	.LVL97
 4036 011c 1C000000 		.4byte	.LVL98
 4037 0120 0100     		.2byte	0x1
 4038 0122 50       		.byte	0x50
 4039 0123 1C000000 		.4byte	.LVL98
 4040 0127 A8000000 		.4byte	.LVL123
 4041 012b 0100     		.2byte	0x1
 4042 012d 57       		.byte	0x57
 4043 012e A8000000 		.4byte	.LVL123
 4044 0132 B8000000 		.4byte	.LFE70
 4045 0136 0400     		.2byte	0x4
 4046 0138 F3       		.byte	0xf3
 4047 0139 01       		.uleb128 0x1
 4048 013a 50       		.byte	0x50
 4049 013b 9F       		.byte	0x9f
 4050 013c 00000000 		.4byte	0
 4051 0140 00000000 		.4byte	0
 4052              	.LLST5:
 4053 0144 06000000 		.4byte	.LVL93
 4054 0148 2E000000 		.4byte	.LVL103
 4055 014c 0100     		.2byte	0x1
 4056 014e 54       		.byte	0x54
 4057 014f 00000000 		.4byte	0
 4058 0153 00000000 		.4byte	0
 4059              	.LLST7:
 4060 0157 16000000 		.4byte	.LVL96
 4061 015b 1A000000 		.4byte	.LVL97
 4062 015f 0400     		.2byte	0x4
 4063 0161 0A       		.byte	0xa
 4064 0162 007D     		.2byte	0x7d00
 4065 0164 9F       		.byte	0x9f
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cccxI4fz.s 			page 92


 4066 0165 26000000 		.4byte	.LVL100
 4067 0169 28000000 		.4byte	.LVL101
 4068 016d 0400     		.2byte	0x4
 4069 016f 0B       		.byte	0xb
 4070 0170 0083     		.2byte	0x8300
 4071 0172 9F       		.byte	0x9f
 4072 0173 00000000 		.4byte	0
 4073 0177 00000000 		.4byte	0
 4074              	.LLST8:
 4075 017b 16000000 		.4byte	.LVL96
 4076 017f 1A000000 		.4byte	.LVL97
 4077 0183 0200     		.2byte	0x2
 4078 0185 30       		.byte	0x30
 4079 0186 9F       		.byte	0x9f
 4080 0187 26000000 		.4byte	.LVL100
 4081 018b 28000000 		.4byte	.LVL101
 4082 018f 0200     		.2byte	0x2
 4083 0191 34       		.byte	0x34
 4084 0192 9F       		.byte	0x9f
 4085 0193 28000000 		.4byte	.LVL101
 4086 0197 A8000000 		.4byte	.LVL123
 4087 019b 0100     		.2byte	0x1
 4088 019d 56       		.byte	0x56
 4089 019e 00000000 		.4byte	0
 4090 01a2 00000000 		.4byte	0
 4091              	.LLST9:
 4092 01a6 58000000 		.4byte	.LVL111
 4093 01aa A8000000 		.4byte	.LVL123
 4094 01ae 0100     		.2byte	0x1
 4095 01b0 54       		.byte	0x54
 4096 01b1 00000000 		.4byte	0
 4097 01b5 00000000 		.4byte	0
 4098              	.LLST10:
 4099 01b9 D6000000 		.4byte	.LVL159
 4100 01bd DD000000 		.4byte	.LVL160-1
 4101 01c1 0100     		.2byte	0x1
 4102 01c3 53       		.byte	0x53
 4103 01c4 1C010000 		.4byte	.LVL169
 4104 01c8 1E010000 		.4byte	.LVL170
 4105 01cc 0200     		.2byte	0x2
 4106 01ce 31       		.byte	0x31
 4107 01cf 9F       		.byte	0x9f
 4108 01d0 1E010000 		.4byte	.LVL170
 4109 01d4 27010000 		.4byte	.LVL171-1
 4110 01d8 0100     		.2byte	0x1
 4111 01da 53       		.byte	0x53
 4112 01db 00000000 		.4byte	0
 4113 01df 00000000 		.4byte	0
 4114              	.LLST11:
 4115 01e3 DE000000 		.4byte	.LVL160
 4116 01e7 1E010000 		.4byte	.LVL170
 4117 01eb 0200     		.2byte	0x2
 4118 01ed 32       		.byte	0x32
 4119 01ee 9F       		.byte	0x9f
 4120 01ef 00000000 		.4byte	0
 4121 01f3 00000000 		.4byte	0
 4122              	.LLST12:
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cccxI4fz.s 			page 93


 4123 01f7 DE000000 		.4byte	.LVL160
 4124 01fb E2000000 		.4byte	.LVL161
 4125 01ff 0200     		.2byte	0x2
 4126 0201 30       		.byte	0x30
 4127 0202 9F       		.byte	0x9f
 4128 0203 E2000000 		.4byte	.LVL161
 4129 0207 1E010000 		.4byte	.LVL170
 4130 020b 0100     		.2byte	0x1
 4131 020d 54       		.byte	0x54
 4132 020e 00000000 		.4byte	0
 4133 0212 00000000 		.4byte	0
 4134              	.LLST13:
 4135 0216 7A010000 		.4byte	.LVL178
 4136 021a 84010000 		.4byte	.LVL179
 4137 021e 0200     		.2byte	0x2
 4138 0220 30       		.byte	0x30
 4139 0221 9F       		.byte	0x9f
 4140 0222 84010000 		.4byte	.LVL179
 4141 0226 FC010000 		.4byte	.LFE66
 4142 022a 0100     		.2byte	0x1
 4143 022c 54       		.byte	0x54
 4144 022d 00000000 		.4byte	0
 4145 0231 00000000 		.4byte	0
 4146              	.LLST14:
 4147 0235 96010000 		.4byte	.LVL183
 4148 0239 98010000 		.4byte	.LVL184
 4149 023d 0100     		.2byte	0x1
 4150 023f 50       		.byte	0x50
 4151 0240 98010000 		.4byte	.LVL184
 4152 0244 AE010000 		.4byte	.LVL187
 4153 0248 0100     		.2byte	0x1
 4154 024a 55       		.byte	0x55
 4155 024b 00000000 		.4byte	0
 4156 024f 00000000 		.4byte	0
 4157              		.section	.debug_aranges,"",%progbits
 4158 0000 4C000000 		.4byte	0x4c
 4159 0004 0200     		.2byte	0x2
 4160 0006 00000000 		.4byte	.Ldebug_info0
 4161 000a 04       		.byte	0x4
 4162 000b 00       		.byte	0
 4163 000c 0000     		.2byte	0
 4164 000e 0000     		.2byte	0
 4165 0010 00000000 		.4byte	.LFB64
 4166 0014 08000000 		.4byte	.LFE64-.LFB64
 4167 0018 00000000 		.4byte	.LFB65
 4168 001c 20000000 		.4byte	.LFE65-.LFB65
 4169 0020 00000000 		.4byte	.LFB67
 4170 0024 44000000 		.4byte	.LFE67-.LFB67
 4171 0028 00000000 		.4byte	.LFB68
 4172 002c 64000000 		.4byte	.LFE68-.LFB68
 4173 0030 00000000 		.4byte	.LFB69
 4174 0034 D0010000 		.4byte	.LFE69-.LFB69
 4175 0038 00000000 		.4byte	.LFB70
 4176 003c B8000000 		.4byte	.LFE70-.LFB70
 4177 0040 00000000 		.4byte	.LFB66
 4178 0044 FC010000 		.4byte	.LFE66-.LFB66
 4179 0048 00000000 		.4byte	0
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cccxI4fz.s 			page 94


 4180 004c 00000000 		.4byte	0
 4181              		.section	.debug_ranges,"",%progbits
 4182              	.Ldebug_ranges0:
 4183 0000 00000000 		.4byte	.LFB64
 4184 0004 08000000 		.4byte	.LFE64
 4185 0008 00000000 		.4byte	.LFB65
 4186 000c 20000000 		.4byte	.LFE65
 4187 0010 00000000 		.4byte	.LFB67
 4188 0014 44000000 		.4byte	.LFE67
 4189 0018 00000000 		.4byte	.LFB68
 4190 001c 64000000 		.4byte	.LFE68
 4191 0020 00000000 		.4byte	.LFB69
 4192 0024 D0010000 		.4byte	.LFE69
 4193 0028 00000000 		.4byte	.LFB70
 4194 002c B8000000 		.4byte	.LFE70
 4195 0030 00000000 		.4byte	.LFB66
 4196 0034 FC010000 		.4byte	.LFE66
 4197 0038 00000000 		.4byte	0
 4198 003c 00000000 		.4byte	0
 4199              		.section	.debug_line,"",%progbits
 4200              	.Ldebug_line0:
 4201 0000 CC040000 		.section	.debug_str,"MS",%progbits,1
 4201      02003303 
 4201      00000201 
 4201      FB0E0D00 
 4201      01010101 
 4202              	.LASF83:
 4203 0000 43794465 		.ascii	"CyDelay\000"
 4203      6C617900 
 4204              	.LASF17:
 4205 0008 61726D4D 		.ascii	"armMoving\000"
 4205      6F76696E 
 4205      6700
 4206              	.LASF128:
 4207 0012 6D61696E 		.ascii	"main.c\000"
 4207      2E6300
 4208              	.LASF54:
 4209 0019 6F757470 		.ascii	"output\000"
 4209      757400
 4210              	.LASF77:
 4211 0020 69646163 		.ascii	"idac_value\000"
 4211      5F76616C 
 4211      756500
 4212              	.LASF28:
 4213 002b 73706565 		.ascii	"speed_right\000"
 4213      645F7269 
 4213      67687400 
 4214              	.LASF33:
 4215 0037 756C7472 		.ascii	"ultrasonic_sensor\000"
 4215      61736F6E 
 4215      69635F73 
 4215      656E736F 
 4215      7200
 4216              	.LASF48:
 4217 0049 7075636B 		.ascii	"puckPileLocation\000"
 4217      50696C65 
 4217      4C6F6361 
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cccxI4fz.s 			page 95


 4217      74696F6E 
 4217      00
 4218              	.LASF23:
 4219 005a 66726F6E 		.ascii	"front_left\000"
 4219      745F6C65 
 4219      667400
 4220              	.LASF8:
 4221 0065 756E7369 		.ascii	"unsigned int\000"
 4221      676E6564 
 4221      20696E74 
 4221      00
 4222              	.LASF130:
 4223 0072 64697374 		.ascii	"distance_set\000"
 4223      616E6365 
 4223      5F736574 
 4223      00
 4224              	.LASF97:
 4225 007f 64697374 		.ascii	"distanceSensor\000"
 4225      616E6365 
 4225      53656E73 
 4225      6F7200
 4226              	.LASF89:
 4227 008e 4D6F746F 		.ascii	"Motor_Left_Driver_WriteCompare\000"
 4227      725F4C65 
 4227      66745F44 
 4227      72697665 
 4227      725F5772 
 4228              	.LASF56:
 4229 00ad 756C7472 		.ascii	"ultrasonic_distances_mm\000"
 4229      61736F6E 
 4229      69635F64 
 4229      69737461 
 4229      6E636573 
 4230              	.LASF9:
 4231 00c5 5F5F696E 		.ascii	"__int32_t\000"
 4231      7433325F 
 4231      7400
 4232              	.LASF93:
 4233 00cf 4D6F746F 		.ascii	"Motor_Right_Decoder_SetCounter\000"
 4233      725F5269 
 4233      6768745F 
 4233      4465636F 
 4233      6465725F 
 4234              	.LASF82:
 4235 00ee 756C7472 		.ascii	"ultrasonicInterruptHandler\000"
 4235      61736F6E 
 4235      6963496E 
 4235      74657272 
 4235      75707448 
 4236              	.LASF118:
 4237 0109 4D6F746F 		.ascii	"Motor_Left_Driver_Start\000"
 4237      725F4C65 
 4237      66745F44 
 4237      72697665 
 4237      725F5374 
 4238              	.LASF46:
 4239 0121 73776565 		.ascii	"sweeping\000"
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cccxI4fz.s 			page 96


 4239      70696E67 
 4239      00
 4240              	.LASF19:
 4241 012a 7075636B 		.ascii	"puck_scan\000"
 4241      5F736361 
 4241      6E00
 4242              	.LASF55:
 4243 0134 53504545 		.ascii	"SPEED\000"
 4243      4400
 4244              	.LASF85:
 4245 013a 636F6C6F 		.ascii	"colourSensingOutput\000"
 4245      75725365 
 4245      6E73696E 
 4245      674F7574 
 4245      70757400 
 4246              	.LASF92:
 4247 014e 4D6F746F 		.ascii	"Motor_Left_Decoder_SetCounter\000"
 4247      725F4C65 
 4247      66745F44 
 4247      65636F64 
 4247      65725F53 
 4248              	.LASF119:
 4249 016c 4D6F746F 		.ascii	"Motor_Right_Driver_Start\000"
 4249      725F5269 
 4249      6768745F 
 4249      44726976 
 4249      65725F53 
 4250              	.LASF37:
 4251 0185 6D6F746F 		.ascii	"motor_testing\000"
 4251      725F7465 
 4251      7374696E 
 4251      6700
 4252              	.LASF94:
 4253 0193 4D6F746F 		.ascii	"Motor_Left_Driver_Sleep\000"
 4253      725F4C65 
 4253      66745F44 
 4253      72697665 
 4253      725F536C 
 4254              	.LASF11:
 4255 01ab 666C6F61 		.ascii	"float\000"
 4255      7400
 4256              	.LASF124:
 4257 01b1 536F6E69 		.ascii	"Sonic_StartEx\000"
 4257      635F5374 
 4257      61727445 
 4257      7800
 4258              	.LASF69:
 4259 01bf 63757272 		.ascii	"currentPosition\000"
 4259      656E7450 
 4259      6F736974 
 4259      696F6E00 
 4260              	.LASF84:
 4261 01cf 6368616E 		.ascii	"changeHeightToPuck\000"
 4261      67654865 
 4261      69676874 
 4261      546F5075 
 4261      636B00
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cccxI4fz.s 			page 97


 4262              	.LASF59:
 4263 01e2 6D6F7669 		.ascii	"moving\000"
 4263      6E6700
 4264              	.LASF86:
 4265 01e9 4D6F746F 		.ascii	"Motor_Left_Control_Write\000"
 4265      725F4C65 
 4265      66745F43 
 4265      6F6E7472 
 4265      6F6C5F57 
 4266              	.LASF7:
 4267 0202 6C6F6E67 		.ascii	"long long unsigned int\000"
 4267      206C6F6E 
 4267      6720756E 
 4267      7369676E 
 4267      65642069 
 4268              	.LASF27:
 4269 0219 73706565 		.ascii	"speed_left\000"
 4269      645F6C65 
 4269      667400
 4270              	.LASF63:
 4271 0224 63757272 		.ascii	"currentPuckStackSize\000"
 4271      656E7450 
 4271      75636B53 
 4271      7461636B 
 4271      53697A65 
 4272              	.LASF125:
 4273 0239 53746172 		.ascii	"Start_StartEx\000"
 4273      745F5374 
 4273      61727445 
 4273      7800
 4274              	.LASF74:
 4275 0247 6D6F7665 		.ascii	"moveRightAllowed\000"
 4275      52696768 
 4275      74416C6C 
 4275      6F776564 
 4275      00
 4276              	.LASF42:
 4277 0258 64726976 		.ascii	"driveStraightEnable\000"
 4277      65537472 
 4277      61696768 
 4277      74456E61 
 4277      626C6500 
 4278              	.LASF101:
 4279 026c 4D6F746F 		.ascii	"Motor_Right_Decoder_GetCounter\000"
 4279      725F5269 
 4279      6768745F 
 4279      4465636F 
 4279      6465725F 
 4280              	.LASF113:
 4281 028b 5261636B 		.ascii	"Rack_Servo_PWM_WriteCompare\000"
 4281      5F536572 
 4281      766F5F50 
 4281      574D5F57 
 4281      72697465 
 4282              	.LASF105:
 4283 02a7 4144435F 		.ascii	"ADC_Start\000"
 4283      53746172 
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cccxI4fz.s 			page 98


 4283      7400
 4284              	.LASF110:
 4285 02b1 636F6E74 		.ascii	"control_led_Write\000"
 4285      726F6C5F 
 4285      6C65645F 
 4285      57726974 
 4285      6500
 4286              	.LASF95:
 4287 02c3 4D6F746F 		.ascii	"Motor_Right_Driver_Sleep\000"
 4287      725F5269 
 4287      6768745F 
 4287      44726976 
 4287      65725F53 
 4288              	.LASF127:
 4289 02dc 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 4289      43313120 
 4289      352E342E 
 4289      31203230 
 4289      31363036 
 4290 030f 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 4290      20726576 
 4290      6973696F 
 4290      6E203233 
 4290      37373135 
 4291 0342 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 4291      66756E63 
 4291      74696F6E 
 4291      2D736563 
 4291      74696F6E 
 4292              	.LASF21:
 4293 036a 7075636B 		.ascii	"puck_detect\000"
 4293      5F646574 
 4293      65637400 
 4294              	.LASF50:
 4295 0376 64726976 		.ascii	"drivingBackwardFlag\000"
 4295      696E6742 
 4295      61636B77 
 4295      61726446 
 4295      6C616700 
 4296              	.LASF99:
 4297 038a 55415254 		.ascii	"UART_1_PutString\000"
 4297      5F315F50 
 4297      75745374 
 4297      72696E67 
 4297      00
 4298              	.LASF38:
 4299 039b 756C7472 		.ascii	"ultrasonic_testing\000"
 4299      61736F6E 
 4299      69635F74 
 4299      65737469 
 4299      6E6700
 4300              	.LASF100:
 4301 03ae 4D6F746F 		.ascii	"Motor_Left_Decoder_GetCounter\000"
 4301      725F4C65 
 4301      66745F44 
 4301      65636F64 
 4301      65725F47 
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cccxI4fz.s 			page 99


 4302              	.LASF76:
 4303 03cc 6D6F7665 		.ascii	"moveBackwardAllowed\000"
 4303      4261636B 
 4303      77617264 
 4303      416C6C6F 
 4303      77656400 
 4304              	.LASF79:
 4305 03e0 504C414E 		.ascii	"PLAN_SCAN_VERTICAL\000"
 4305      5F534341 
 4305      4E5F5645 
 4305      52544943 
 4305      414C00
 4306              	.LASF88:
 4307 03f3 4D6F746F 		.ascii	"Motor_Left_Driver_Wakeup\000"
 4307      725F4C65 
 4307      66745F44 
 4307      72697665 
 4307      725F5761 
 4308              	.LASF29:
 4309 040c 6D6F7665 		.ascii	"moveUntil\000"
 4309      556E7469 
 4309      6C00
 4310              	.LASF31:
 4311 0416 636F756E 		.ascii	"count_right\000"
 4311      745F7269 
 4311      67687400 
 4312              	.LASF115:
 4313 0422 47726970 		.ascii	"Gripper_Servo_PWM_Start\000"
 4313      7065725F 
 4313      53657276 
 4313      6F5F5057 
 4313      4D5F5374 
 4314              	.LASF61:
 4315 043a 63757272 		.ascii	"currentOrientation\000"
 4315      656E744F 
 4315      7269656E 
 4315      74617469 
 4315      6F6E00
 4316              	.LASF22:
 4317 044d 73747261 		.ascii	"straightAdjust\000"
 4317      69676874 
 4317      41646A75 
 4317      737400
 4318              	.LASF13:
 4319 045c 63686172 		.ascii	"char\000"
 4319      00
 4320              	.LASF121:
 4321 0461 4D6F746F 		.ascii	"Motor_Right_Decoder_Start\000"
 4321      725F5269 
 4321      6768745F 
 4321      4465636F 
 4321      6465725F 
 4322              	.LASF51:
 4323 047b 7475726E 		.ascii	"turningLeftFlag\000"
 4323      696E674C 
 4323      65667446 
 4323      6C616700 
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cccxI4fz.s 			page 100


 4324              	.LASF75:
 4325 048b 6D6F7665 		.ascii	"moveForwardAllowed\000"
 4325      466F7277 
 4325      61726441 
 4325      6C6C6F77 
 4325      656400
 4326              	.LASF73:
 4327 049e 6D6F7665 		.ascii	"moveLeftAllowed\000"
 4327      4C656674 
 4327      416C6C6F 
 4327      77656400 
 4328              	.LASF26:
 4329 04ae 746F6C65 		.ascii	"tolerance\000"
 4329      72616E63 
 4329      6500
 4330              	.LASF91:
 4331 04b8 4D6F746F 		.ascii	"Motor_Right_Driver_WriteCompare\000"
 4331      725F5269 
 4331      6768745F 
 4331      44726976 
 4331      65725F57 
 4332              	.LASF106:
 4333 04d8 49444143 		.ascii	"IDAC8_1_Start\000"
 4333      385F315F 
 4333      53746172 
 4333      7400
 4334              	.LASF6:
 4335 04e6 6C6F6E67 		.ascii	"long long int\000"
 4335      206C6F6E 
 4335      6720696E 
 4335      7400
 4336              	.LASF39:
 4337 04f4 6C6F636B 		.ascii	"lock\000"
 4337      00
 4338              	.LASF117:
 4339 04f9 47726970 		.ascii	"Gripper_Servo_PWM_Sleep\000"
 4339      7065725F 
 4339      53657276 
 4339      6F5F5057 
 4339      4D5F536C 
 4340              	.LASF40:
 4341 0511 6469636B 		.ascii	"dick\000"
 4341      00
 4342              	.LASF66:
 4343 0516 62656769 		.ascii	"beginNavigation\000"
 4343      6E4E6176 
 4343      69676174 
 4343      696F6E00 
 4344              	.LASF67:
 4345 0526 70617468 		.ascii	"pathToPucks\000"
 4345      546F5075 
 4345      636B7300 
 4346              	.LASF57:
 4347 0532 636F6C6F 		.ascii	"colour_flag\000"
 4347      75725F66 
 4347      6C616700 
 4348              	.LASF32:
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cccxI4fz.s 			page 101


 4349 053e 636F6D70 		.ascii	"compare\000"
 4349      61726500 
 4350              	.LASF64:
 4351 0546 7075636B 		.ascii	"puckConstructionPlan\000"
 4351      436F6E73 
 4351      74727563 
 4351      74696F6E 
 4351      506C616E 
 4352              	.LASF81:
 4353 055b 64697374 		.ascii	"distance_returned_global\000"
 4353      616E6365 
 4353      5F726574 
 4353      75726E65 
 4353      645F676C 
 4354              	.LASF108:
 4355 0574 49444143 		.ascii	"IDAC8_1_SetValue\000"
 4355      385F315F 
 4355      53657456 
 4355      616C7565 
 4355      00
 4356              	.LASF90:
 4357 0585 4D6F746F 		.ascii	"Motor_Right_Driver_Wakeup\000"
 4357      725F5269 
 4357      6768745F 
 4357      44726976 
 4357      65725F57 
 4358              	.LASF43:
 4359 059f 63757272 		.ascii	"currentPuckRackScanningIndex\000"
 4359      656E7450 
 4359      75636B52 
 4359      61636B53 
 4359      63616E6E 
 4360              	.LASF112:
 4361 05bc 5261636B 		.ascii	"Rack_Servo_PWM_Start\000"
 4361      5F536572 
 4361      766F5F50 
 4361      574D5F53 
 4361      74617274 
 4362              	.LASF65:
 4363 05d1 686F7269 		.ascii	"horizontalPuckGrid\000"
 4363      7A6F6E74 
 4363      616C5075 
 4363      636B4772 
 4363      696400
 4364              	.LASF126:
 4365 05e4 6D697368 		.ascii	"mishaSwivel\000"
 4365      61537769 
 4365      76656C00 
 4366              	.LASF78:
 4367 05f0 636F6C6F 		.ascii	"colour_sensing_algorithm\000"
 4367      75725F73 
 4367      656E7369 
 4367      6E675F61 
 4367      6C676F72 
 4368              	.LASF14:
 4369 0609 6C6F6E67 		.ascii	"long double\000"
 4369      20646F75 
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cccxI4fz.s 			page 102


 4369      626C6500 
 4370              	.LASF98:
 4371 0615 73707269 		.ascii	"sprintf\000"
 4371      6E746600 
 4372              	.LASF49:
 4373 061d 64726976 		.ascii	"drivingForwardFlag\000"
 4373      696E6746 
 4373      6F727761 
 4373      7264466C 
 4373      616700
 4374              	.LASF60:
 4375 0630 756C7472 		.ascii	"ultrasonic_flag\000"
 4375      61736F6E 
 4375      69635F66 
 4375      6C616700 
 4376              	.LASF111:
 4377 0640 636F6C6F 		.ascii	"colourSensingInitialise\000"
 4377      75725365 
 4377      6E73696E 
 4377      67496E69 
 4377      7469616C 
 4378              	.LASF123:
 4379 0658 54696D65 		.ascii	"Timer_1_ReadStatusRegister\000"
 4379      725F315F 
 4379      52656164 
 4379      53746174 
 4379      75735265 
 4380              	.LASF30:
 4381 0673 636F756E 		.ascii	"count_left\000"
 4381      745F6C65 
 4381      667400
 4382              	.LASF71:
 4383 067e 64657369 		.ascii	"desiredOrientation\000"
 4383      7265644F 
 4383      7269656E 
 4383      74617469 
 4383      6F6E00
 4384              	.LASF2:
 4385 0691 73686F72 		.ascii	"short int\000"
 4385      7420696E 
 4385      7400
 4386              	.LASF87:
 4387 069b 4D6F746F 		.ascii	"Motor_Right_Control_Write\000"
 4387      725F5269 
 4387      6768745F 
 4387      436F6E74 
 4387      726F6C5F 
 4388              	.LASF4:
 4389 06b5 6C6F6E67 		.ascii	"long int\000"
 4389      20696E74 
 4389      00
 4390              	.LASF41:
 4391 06be 49544D5F 		.ascii	"ITM_RxBuffer\000"
 4391      52784275 
 4391      66666572 
 4391      00
 4392              	.LASF103:
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cccxI4fz.s 			page 103


 4393 06cb 5449415F 		.ascii	"TIA_1_Start\000"
 4393      315F5374 
 4393      61727400 
 4394              	.LASF114:
 4395 06d7 5261636B 		.ascii	"Rack_Servo_PWM_Sleep\000"
 4395      5F536572 
 4395      766F5F50 
 4395      574D5F53 
 4395      6C656570 
 4396              	.LASF70:
 4397 06ec 64657369 		.ascii	"desiredPosition\000"
 4397      72656450 
 4397      6F736974 
 4397      696F6E00 
 4398              	.LASF52:
 4399 06fc 7475726E 		.ascii	"turningRightFlag\000"
 4399      696E6752 
 4399      69676874 
 4399      466C6167 
 4399      00
 4400              	.LASF116:
 4401 070d 47726970 		.ascii	"Gripper_Servo_PWM_WriteCompare\000"
 4401      7065725F 
 4401      53657276 
 4401      6F5F5057 
 4401      4D5F5772 
 4402              	.LASF104:
 4403 072c 55415254 		.ascii	"UART_1_Start\000"
 4403      5F315F53 
 4403      74617274 
 4403      00
 4404              	.LASF47:
 4405 0739 626C6F63 		.ascii	"block_edge_location\000"
 4405      6B5F6564 
 4405      67655F6C 
 4405      6F636174 
 4405      696F6E00 
 4406              	.LASF68:
 4407 074d 70617468 		.ascii	"pathPastBlock\000"
 4407      50617374 
 4407      426C6F63 
 4407      6B00
 4408              	.LASF16:
 4409 075b 53746172 		.ascii	"StartIH\000"
 4409      74494800 
 4410              	.LASF36:
 4411 0763 73657276 		.ascii	"servo_testing\000"
 4411      6F5F7465 
 4411      7374696E 
 4411      6700
 4412              	.LASF15:
 4413 0771 73697A65 		.ascii	"sizetype\000"
 4413      74797065 
 4413      00
 4414              	.LASF109:
 4415 077a 636F6E74 		.ascii	"control_photodiode_Write\000"
 4415      726F6C5F 
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cccxI4fz.s 			page 104


 4415      70686F74 
 4415      6F64696F 
 4415      64655F57 
 4416              	.LASF5:
 4417 0793 6C6F6E67 		.ascii	"long unsigned int\000"
 4417      20756E73 
 4417      69676E65 
 4417      6420696E 
 4417      7400
 4418              	.LASF20:
 4419 07a5 6D6F7665 		.ascii	"moveUntilPuck\000"
 4419      556E7469 
 4419      6C507563 
 4419      6B00
 4420              	.LASF129:
 4421 07b3 433A5C55 		.ascii	"C:\\Users\\Misha\\Documents\\PSoC Creator\\ECE3091_"
 4421      73657273 
 4421      5C4D6973 
 4421      68615C44 
 4421      6F63756D 
 4422 07e1 47726F75 		.ascii	"Group17\\Group17RobotReal\\Group17Robot.cydsn\000"
 4422      7031375C 
 4422      47726F75 
 4422      70313752 
 4422      6F626F74 
 4423              	.LASF96:
 4424 080d 6D697368 		.ascii	"mishaMoveDynamic\000"
 4424      614D6F76 
 4424      6544796E 
 4424      616D6963 
 4424      00
 4425              	.LASF53:
 4426 081e 696E6974 		.ascii	"initialisation\000"
 4426      69616C69 
 4426      73617469 
 4426      6F6E00
 4427              	.LASF24:
 4428 082d 66726F6E 		.ascii	"front_right\000"
 4428      745F7269 
 4428      67687400 
 4429              	.LASF1:
 4430 0839 756E7369 		.ascii	"unsigned char\000"
 4430      676E6564 
 4430      20636861 
 4430      7200
 4431              	.LASF107:
 4432 0847 49444143 		.ascii	"IDAC8_1_SetRange\000"
 4432      385F315F 
 4432      53657452 
 4432      616E6765 
 4432      00
 4433              	.LASF44:
 4434 0858 7075636B 		.ascii	"puckRackColours\000"
 4434      5261636B 
 4434      436F6C6F 
 4434      75727300 
 4435              	.LASF45:
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cccxI4fz.s 			page 105


 4436 0868 7075636B 		.ascii	"puckRackOffsetsFromWest\000"
 4436      5261636B 
 4436      4F666673 
 4436      65747346 
 4436      726F6D57 
 4437              	.LASF58:
 4438 0880 73746174 		.ascii	"state\000"
 4438      6500
 4439              	.LASF120:
 4440 0886 4D6F746F 		.ascii	"Motor_Left_Decoder_Start\000"
 4440      725F4C65 
 4440      66745F44 
 4440      65636F64 
 4440      65725F53 
 4441              	.LASF25:
 4442 089f 64696666 		.ascii	"difference\000"
 4442      6572656E 
 4442      636500
 4443              	.LASF72:
 4444 08aa 6D6F7665 		.ascii	"moveNow\000"
 4444      4E6F7700 
 4445              	.LASF80:
 4446 08b2 63757272 		.ascii	"current_stage\000"
 4446      656E745F 
 4446      73746167 
 4446      6500
 4447              	.LASF122:
 4448 08c0 54696D65 		.ascii	"Timer_1_Start\000"
 4448      725F315F 
 4448      53746172 
 4448      7400
 4449              	.LASF0:
 4450 08ce 7369676E 		.ascii	"signed char\000"
 4450      65642063 
 4450      68617200 
 4451              	.LASF102:
 4452 08da 61726D43 		.ascii	"armClose\000"
 4452      6C6F7365 
 4452      00
 4453              	.LASF3:
 4454 08e3 73686F72 		.ascii	"short unsigned int\000"
 4454      7420756E 
 4454      7369676E 
 4454      65642069 
 4454      6E7400
 4455              	.LASF131:
 4456 08f6 6D61696E 		.ascii	"main\000"
 4456      00
 4457              	.LASF35:
 4458 08fb 636F6C6F 		.ascii	"colour_calibration\000"
 4458      75725F63 
 4458      616C6962 
 4458      72617469 
 4458      6F6E00
 4459              	.LASF18:
 4460 090e 7075636B 		.ascii	"puck_correct\000"
 4460      5F636F72 
ARM GAS  C:\Users\Misha\AppData\Local\Temp\cccxI4fz.s 			page 106


 4460      72656374 
 4460      00
 4461              	.LASF12:
 4462 091b 646F7562 		.ascii	"double\000"
 4462      6C6500
 4463              	.LASF62:
 4464 0922 72756E6E 		.ascii	"running\000"
 4464      696E6700 
 4465              	.LASF10:
 4466 092a 696E7433 		.ascii	"int32_t\000"
 4466      325F7400 
 4467              	.LASF34:
 4468 0932 64697374 		.ascii	"distance_sensor\000"
 4468      616E6365 
 4468      5F73656E 
 4468      736F7200 
 4469              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
