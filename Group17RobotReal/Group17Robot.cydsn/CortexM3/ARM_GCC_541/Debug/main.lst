ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccRuSwul.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.TIH,"ax",%progbits
  20              		.align	2
  21              		.global	TIH
  22              		.thumb
  23              		.thumb_func
  24              		.type	TIH, %function
  25              	TIH:
  26              	.LFB64:
  27              		.file 1 "main.c"
   1:main.c        **** 
   2:main.c        **** /* ========================================
   3:main.c        ****  *
   4:main.c        ****  * Copyright Group 17, 2019
   5:main.c        ****  * All Rights Reserved
   6:main.c        ****  * UNPUBLISHED, LICENSED SOFTWARE.
   7:main.c        ****  *
   8:main.c        ****  * CONFIDENTIAL AND PROPRIETARY INFORMATION
   9:main.c        ****  * WHICH IS THE PROPERTY OF Blayke, Misha, Nidhin.
  10:main.c        ****  *
  11:main.c        ****  * ========================================
  12:main.c        **** */
  13:main.c        **** 
  14:main.c        **** // * PSOC LIBRARY * //
  15:main.c        **** #include "project.h"
  16:main.c        **** 
  17:main.c        **** // * C LIBRARIES * // 
  18:main.c        **** #include <stdlib.h>
  19:main.c        **** #include <stdio.h>
  20:main.c        **** #include <math.h>
  21:main.c        **** 
  22:main.c        **** // * OUR LIBRARIES * //
  23:main.c        **** #include "main.h"
  24:main.c        **** #include "colour.h"
  25:main.c        **** #include "ultrasonic.h" 
  26:main.c        **** #include "servo.h"
  27:main.c        **** #include "motor.h"
  28:main.c        **** #include "customMath.h"
  29:main.c        **** #include "navigation.h"
  30:main.c        **** 
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccRuSwul.s 			page 2


  31:main.c        **** 
  32:main.c        **** extern char output[32];   
  33:main.c        **** 
  34:main.c        **** // * STATE VARIABLES * //
  35:main.c        **** int state = STATE_SCAN_PLAN;
  36:main.c        **** int running = 1;
  37:main.c        **** int sweeping = 0;
  38:main.c        **** float block_edge_location[4] = {0,0,0,0}; // N E S W edge positions respectively
  39:main.c        **** 
  40:main.c        **** // * PUCK CONSTRUCTION VARIABLES * //
  41:main.c        **** int currentPuckStackSize = 0; // How many pucks are currently on the construction plate
  42:main.c        **** int puckRackColours[5] = {BLANK,BLANK,BLANK,BLANK,BLANK}; // 5 slots in puck rack.
  43:main.c        **** int puckConstructionPlan[3] = {BLANK,BLANK,BLANK};
  44:main.c        **** int currentPuckRackScanningIndex = 0;
  45:main.c        **** int puckRackOffsetsFromWest[5] = {PUCK_RACK_0_WEST_DISTANCE,
  46:main.c        ****                                 PUCK_RACK_1_WEST_DISTANCE,
  47:main.c        ****                                 PUCK_RACK_2_WEST_DISTANCE,
  48:main.c        ****                                 PUCK_RACK_3_WEST_DISTANCE,
  49:main.c        ****                                 PUCK_RACK_4_WEST_DISTANCE };
  50:main.c        **** 
  51:main.c        **** int puckColoursTempPile[2] = {BLANK,BLANK}; // Index 0 refers to east home base edge, 1 refers to w
  52:main.c        **** 
  53:main.c        **** float horizontalPuckGrid = 0;
  54:main.c        **** 
  55:main.c        **** // * NAVIGATION AND POSITION VARIABLES * //
  56:main.c        **** 
  57:main.c        **** int beginNavigation = 0; // Allow us to break out of the intial phase when powered up
  58:main.c        **** int pathToPucks; // This will give us a corridor that we should initially take when trying to go to
  59:main.c        **** int pathPastBlock;
  60:main.c        **** int block_location[4] = {0,0,0,0};      // The block location values
  61:main.c        ****                                         //#define NORTH 0
  62:main.c        ****                                         //#define EAST 1
  63:main.c        ****                                         //#define SOUTH 2
  64:main.c        ****                                         //#define WEST 3
  65:main.c        **** int puck_location[4] = {0,0,0,0};       // The block location values
  66:main.c        ****                                         //#define NORTH 0
  67:main.c        ****                                         //#define EAST 1
  68:main.c        ****                                         //#define SOUTH 2
  69:main.c        ****                                         //#define WEST 3
  70:main.c        **** 
  71:main.c        **** int safety_override = FALSE;            
  72:main.c        **** 
  73:main.c        **** // These block clearance variables are only true if we have enough room either side of the block to
  74:main.c        **** // And only true for the puck clearance variables if there is enough room to be able to turn at the
  75:main.c        **** short int blockEastClearance = 0;
  76:main.c        **** short int blockWestClearance = 0;
  77:main.c        **** short int puckEastClearance = 0;
  78:main.c        **** short int puckWestClearance = 0;
  79:main.c        **** 
  80:main.c        **** // * COLOUR VARIABLES * //
  81:main.c        **** 
  82:main.c        **** int idac_value = 0;  
  83:main.c        **** int colour_flag = 1;                    // sets which photodiode to use 
  84:main.c        **** int colour_sensing_algorithm = 0;      // Determines which colour sensing algorithm to use:
  85:main.c        ****                                                 // 0: Wall algorithm
  86:main.c        ****                                             // 1: Claw algorithm
  87:main.c        ****                                                 // 2: old algorithm
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccRuSwul.s 			page 3


  88:main.c        **** 
  89:main.c        **** int moving = 0; // Temp to stop while loop from repeated runs of scanning plan code
  90:main.c        **** 
  91:main.c        **** const int PLAN_SCAN_VERTICAL = 10; // Set to ultrasonic distance at the home base 
  92:main.c        **** 
  93:main.c        **** int current_stage = 1;      // There are 3 stages, we start at 1
  94:main.c        **** 
  95:main.c        **** 
  96:main.c        **** // GLOBAL VARIABLE
  97:main.c        **** int distance_returned_global;
  98:main.c        **** 
  99:main.c        **** 
 100:main.c        **** // * INTERRUPT HANDLING * // 
 101:main.c        **** CY_ISR(TIH)                             // Ultrasonic ISR Definition
 102:main.c        **** {
  28              		.loc 1 102 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 08B5     		push	{r3, lr}
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 3, -8
  35              		.cfi_offset 14, -4
 103:main.c        ****     ultrasonicInterruptHandler();
  36              		.loc 1 103 0
  37 0002 FFF7FEFF 		bl	ultrasonicInterruptHandler
  38              	.LVL0:
  39 0006 08BD     		pop	{r3, pc}
  40              		.cfi_endproc
  41              	.LFE64:
  42              		.size	TIH, .-TIH
  43              		.section	.text.StartIH,"ax",%progbits
  44              		.align	2
  45              		.global	StartIH
  46              		.thumb
  47              		.thumb_func
  48              		.type	StartIH, %function
  49              	StartIH:
  50              	.LFB65:
 104:main.c        **** }
 105:main.c        **** 
 106:main.c        **** CY_ISR(StartIH)                             // Ultrasonic ISR Definition
 107:main.c        **** {
  51              		.loc 1 107 0
  52              		.cfi_startproc
  53              		@ args = 0, pretend = 0, frame = 0
  54              		@ frame_needed = 0, uses_anonymous_args = 0
  55 0000 08B5     		push	{r3, lr}
  56              		.cfi_def_cfa_offset 8
  57              		.cfi_offset 3, -8
  58              		.cfi_offset 14, -4
 108:main.c        ****     CyDelay(100);
  59              		.loc 1 108 0
  60 0002 6420     		movs	r0, #100
  61 0004 FFF7FEFF 		bl	CyDelay
  62              	.LVL1:
 109:main.c        ****     
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccRuSwul.s 			page 4


 110:main.c        ****     beginNavigation = 1;
  63              		.loc 1 110 0
  64 0008 0122     		movs	r2, #1
  65 000a 034B     		ldr	r3, .L5
  66 000c 1A60     		str	r2, [r3]
 111:main.c        ****     colour_flag = 0; 
  67              		.loc 1 111 0
  68 000e 0022     		movs	r2, #0
  69 0010 024B     		ldr	r3, .L5+4
  70 0012 1A60     		str	r2, [r3]
  71 0014 08BD     		pop	{r3, pc}
  72              	.L6:
  73 0016 00BF     		.align	2
  74              	.L5:
  75 0018 00000000 		.word	.LANCHOR0
  76 001c 00000000 		.word	.LANCHOR1
  77              		.cfi_endproc
  78              	.LFE65:
  79              		.size	StartIH, .-StartIH
  80              		.section	.text.main,"ax",%progbits
  81              		.align	2
  82              		.global	main
  83              		.thumb
  84              		.thumb_func
  85              		.type	main, %function
  86              	main:
  87              	.LFB66:
 112:main.c        **** }
 113:main.c        ****  
 114:main.c        **** //Interrupt service routines for dcmotor function
 115:main.c        **** /*
 116:main.c        **** CY_ISR(Encoder_Counts_1_IH){
 117:main.c        ****     stopMotor1AndUpdate();
 118:main.c        **** }
 119:main.c        **** 
 120:main.c        **** CY_ISR(Encoder_Counts_2_IH){
 121:main.c        ****     stopMotor2AndUpdate();
 122:main.c        **** }
 123:main.c        **** 
 124:main.c        **** CY_ISR(Drift_Check_IH){    
 125:main.c        ****     Drift_Check_Timer_ReadStatusRegister(); //Clears the interrupt
 126:main.c        ****     Drift_Check_Timer_Stop(); //Stops the timer
 127:main.c        ****     motor1EncoderCounts = Motor_1_Encoder_Counts_ReadCounter();
 128:main.c        ****     motor2EncoderCounts = Motor_2_Encoder_Counts_ReadCounter();
 129:main.c        ****     driftCorrect(); //Does checking
 130:main.c        **** }
 131:main.c        **** */
 132:main.c        **** 
 133:main.c        **** int main(void)
 134:main.c        **** {
  88              		.loc 1 134 0
  89              		.cfi_startproc
  90              		@ args = 0, pretend = 0, frame = 0
  91              		@ frame_needed = 0, uses_anonymous_args = 0
  92 0000 F0B5     		push	{r4, r5, r6, r7, lr}
  93              		.cfi_def_cfa_offset 20
  94              		.cfi_offset 4, -20
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccRuSwul.s 			page 5


  95              		.cfi_offset 5, -16
  96              		.cfi_offset 6, -12
  97              		.cfi_offset 7, -8
  98              		.cfi_offset 14, -4
  99 0002 83B0     		sub	sp, sp, #12
 100              		.cfi_def_cfa_offset 32
 135:main.c        ****     CyGlobalIntEnable; /* Enable global interrupts. */
 101              		.loc 1 135 0
 102              		.syntax unified
 103              	@ 135 "main.c" 1
 104 0004 62B6     		CPSIE   i
 105              	@ 0 "" 2
 136:main.c        **** 
 137:main.c        ****     
 138:main.c        ****     TIA_1_Start();
 106              		.loc 1 138 0
 107              		.thumb
 108              		.syntax unified
 109 0006 FFF7FEFF 		bl	TIA_1_Start
 110              	.LVL2:
 139:main.c        ****     UART_1_Start();
 111              		.loc 1 139 0
 112 000a FFF7FEFF 		bl	UART_1_Start
 113              	.LVL3:
 140:main.c        ****     UART_1_PutString("UART commencing... \n");
 114              		.loc 1 140 0
 115 000e C348     		ldr	r0, .L45
 116 0010 FFF7FEFF 		bl	UART_1_PutString
 117              	.LVL4:
 141:main.c        ****     ADC_Start();
 118              		.loc 1 141 0
 119 0014 FFF7FEFF 		bl	ADC_Start
 120              	.LVL5:
 142:main.c        ****     IDAC8_1_Start();
 121              		.loc 1 142 0
 122 0018 FFF7FEFF 		bl	IDAC8_1_Start
 123              	.LVL6:
 143:main.c        ****     
 144:main.c        ****     // DEBUGGING:
 145:main.c        ****         // Moved to debugging.c file, set it there
 146:main.c        ****     
 147:main.c        ****     
 148:main.c        ****     // IDAC initialisation: 
 149:main.c        ****     IDAC8_1_SetRange(IDAC8_1_RANGE_32uA);       // Sets the range between 0 and 32uA
 124              		.loc 1 149 0
 125 001c 0020     		movs	r0, #0
 126 001e FFF7FEFF 		bl	IDAC8_1_SetRange
 127              	.LVL7:
 150:main.c        ****     IDAC8_1_SetValue(idac_value);               // set a value between 0 and 255
 128              		.loc 1 150 0
 129 0022 BF4C     		ldr	r4, .L45+4
 130 0024 2079     		ldrb	r0, [r4, #4]	@ zero_extendqisi2
 131 0026 FFF7FEFF 		bl	IDAC8_1_SetValue
 132              	.LVL8:
 151:main.c        ****     
 152:main.c        ****     // Colour Sensing Initialisation & Debugging:
 153:main.c        ****     colour_sensing_algorithm = 0;
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccRuSwul.s 			page 6


 133              		.loc 1 153 0
 134 002a 0025     		movs	r5, #0
 135 002c A560     		str	r5, [r4, #8]
 154:main.c        ****     control_photodiode_Write(colour_sensing_algorithm);            // controls which photodiode is 
 136              		.loc 1 154 0
 137 002e 2846     		mov	r0, r5
 138 0030 FFF7FEFF 		bl	control_photodiode_Write
 139              	.LVL9:
 155:main.c        ****                                                 // 0: wall
 156:main.c        ****                                                 // 1: claw
 157:main.c        ****     control_led_Write(1);   CyDelay(500);  // Ensures all the RGBs are working
 140              		.loc 1 157 0
 141 0034 0120     		movs	r0, #1
 142 0036 FFF7FEFF 		bl	control_led_Write
 143              	.LVL10:
 144 003a 4FF4FA70 		mov	r0, #500
 145 003e FFF7FEFF 		bl	CyDelay
 146              	.LVL11:
 158:main.c        ****     control_led_Write(2);   CyDelay(500);
 147              		.loc 1 158 0
 148 0042 0220     		movs	r0, #2
 149 0044 FFF7FEFF 		bl	control_led_Write
 150              	.LVL12:
 151 0048 4FF4FA70 		mov	r0, #500
 152 004c FFF7FEFF 		bl	CyDelay
 153              	.LVL13:
 159:main.c        ****     control_led_Write(3);   CyDelay(500);
 154              		.loc 1 159 0
 155 0050 0320     		movs	r0, #3
 156 0052 FFF7FEFF 		bl	control_led_Write
 157              	.LVL14:
 158 0056 4FF4FA70 		mov	r0, #500
 159 005a FFF7FEFF 		bl	CyDelay
 160              	.LVL15:
 160:main.c        ****     control_led_Write(0);   CyDelay(500);
 161              		.loc 1 160 0
 162 005e 2846     		mov	r0, r5
 163 0060 FFF7FEFF 		bl	control_led_Write
 164              	.LVL16:
 165 0064 4FF4FA70 		mov	r0, #500
 166 0068 FFF7FEFF 		bl	CyDelay
 167              	.LVL17:
 161:main.c        ****     colourSensingInitialise();                  // Initialises the colour sensor
 168              		.loc 1 161 0
 169 006c FFF7FEFF 		bl	colourSensingInitialise
 170              	.LVL18:
 162:main.c        ****     
 163:main.c        **** 
 164:main.c        ****     //Servos for the arm instatination
 165:main.c        ****     Rack_Servo_PWM_Start();
 171              		.loc 1 165 0
 172 0070 FFF7FEFF 		bl	Rack_Servo_PWM_Start
 173              	.LVL19:
 166:main.c        ****     Rack_Servo_PWM_WriteCompare(1000);          // BRINGs rack to highest position, so not to mess 
 174              		.loc 1 166 0
 175 0074 4FF47A70 		mov	r0, #1000
 176 0078 FFF7FEFF 		bl	Rack_Servo_PWM_WriteCompare
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccRuSwul.s 			page 7


 177              	.LVL20:
 167:main.c        ****     CyDelay(500);
 178              		.loc 1 167 0
 179 007c 4FF4FA70 		mov	r0, #500
 180 0080 FFF7FEFF 		bl	CyDelay
 181              	.LVL21:
 168:main.c        ****     Rack_Servo_PWM_Sleep();
 182              		.loc 1 168 0
 183 0084 FFF7FEFF 		bl	Rack_Servo_PWM_Sleep
 184              	.LVL22:
 169:main.c        ****     
 170:main.c        ****     Gripper_Servo_PWM_Start();
 185              		.loc 1 170 0
 186 0088 FFF7FEFF 		bl	Gripper_Servo_PWM_Start
 187              	.LVL23:
 171:main.c        ****     Gripper_Servo_PWM_WriteCompare(1120);       //This is the open gripper position
 188              		.loc 1 171 0
 189 008c 4FF48C60 		mov	r0, #1120
 190 0090 FFF7FEFF 		bl	Gripper_Servo_PWM_WriteCompare
 191              	.LVL24:
 172:main.c        ****     CyDelay(500);
 192              		.loc 1 172 0
 193 0094 4FF4FA70 		mov	r0, #500
 194 0098 FFF7FEFF 		bl	CyDelay
 195              	.LVL25:
 173:main.c        ****     Gripper_Servo_PWM_Sleep();
 196              		.loc 1 173 0
 197 009c FFF7FEFF 		bl	Gripper_Servo_PWM_Sleep
 198              	.LVL26:
 174:main.c        ****     
 175:main.c        ****     // Motors Initialisation:
 176:main.c        ****     Motor_Left_Driver_Start();
 199              		.loc 1 176 0
 200 00a0 FFF7FEFF 		bl	Motor_Left_Driver_Start
 201              	.LVL27:
 177:main.c        ****     Motor_Left_Driver_Sleep();                  // Puts motor to sleep
 202              		.loc 1 177 0
 203 00a4 FFF7FEFF 		bl	Motor_Left_Driver_Sleep
 204              	.LVL28:
 178:main.c        ****     Motor_Right_Driver_Start();
 205              		.loc 1 178 0
 206 00a8 FFF7FEFF 		bl	Motor_Right_Driver_Start
 207              	.LVL29:
 179:main.c        ****     Motor_Right_Driver_Sleep();                 // Puts motor to sleep
 208              		.loc 1 179 0
 209 00ac FFF7FEFF 		bl	Motor_Right_Driver_Sleep
 210              	.LVL30:
 180:main.c        ****     
 181:main.c        ****     Motor_Left_Decoder_Start();
 211              		.loc 1 181 0
 212 00b0 FFF7FEFF 		bl	Motor_Left_Decoder_Start
 213              	.LVL31:
 182:main.c        ****     Motor_Right_Decoder_Start();
 214              		.loc 1 182 0
 215 00b4 FFF7FEFF 		bl	Motor_Right_Decoder_Start
 216              	.LVL32:
 183:main.c        ****     
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccRuSwul.s 			page 8


 184:main.c        ****     internal_orientation = WEST;                // robot initial starts in the East direction
 217              		.loc 1 184 0
 218 00b8 9A4F     		ldr	r7, .L45+8
 219 00ba 0326     		movs	r6, #3
 220 00bc 3E60     		str	r6, [r7]
 185:main.c        ****     
 186:main.c        ****     // Timer and ISR instantiation
 187:main.c        ****     Timer_1_Start();                
 221              		.loc 1 187 0
 222 00be FFF7FEFF 		bl	Timer_1_Start
 223              	.LVL33:
 188:main.c        ****     Timer_1_ReadStatusRegister();
 224              		.loc 1 188 0
 225 00c2 FFF7FEFF 		bl	Timer_1_ReadStatusRegister
 226              	.LVL34:
 189:main.c        ****     Sonic_StartEx(TIH);
 227              		.loc 1 189 0
 228 00c6 9848     		ldr	r0, .L45+12
 229 00c8 FFF7FEFF 		bl	Sonic_StartEx
 230              	.LVL35:
 190:main.c        ****     Start_StartEx(StartIH);
 231              		.loc 1 190 0
 232 00cc 9748     		ldr	r0, .L45+16
 233 00ce FFF7FEFF 		bl	Start_StartEx
 234              	.LVL36:
 191:main.c        ****     beginNavigation = 0;
 235              		.loc 1 191 0
 236 00d2 2560     		str	r5, [r4]
 192:main.c        ****     
 193:main.c        ****     // Ultrasonic Initialisation & Calibration:
 194:main.c        ****     // The ultrasonics take several test measurements to ensure they are working
 195:main.c        ****         
 196:main.c        ****     UART_1_PutString("Ultrasonic Calibration tests: \n");
 237              		.loc 1 196 0
 238 00d4 9648     		ldr	r0, .L45+20
 239 00d6 FFF7FEFF 		bl	UART_1_PutString
 240              	.LVL37:
 197:main.c        ****     safetyDistanceCheck();
 241              		.loc 1 197 0
 242 00da FFF7FEFF 		bl	safetyDistanceCheck
 243              	.LVL38:
 198:main.c        ****     safetyDistanceCheck();
 244              		.loc 1 198 0
 245 00de FFF7FEFF 		bl	safetyDistanceCheck
 246              	.LVL39:
 199:main.c        ****     safetyDistanceCheck();
 247              		.loc 1 199 0
 248 00e2 FFF7FEFF 		bl	safetyDistanceCheck
 249              	.LVL40:
 200:main.c        ****     
 201:main.c        ****     /*  OLD CODE FROM NIDHIN:
 202:main.c        ****     //Initialising DC motors
 203:main.c        ****     Motor_1_driver_Start();
 204:main.c        ****     Motor_2_driver_Start();
 205:main.c        ****     motorDutyCycleUpdate(0,0,0,0);//Have the motors stand still
 206:main.c        ****     
 207:main.c        ****     
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccRuSwul.s 			page 9


 208:main.c        ****     //Initialising counters
 209:main.c        ****     Motor_1_Encoder_Counts_Start();
 210:main.c        ****     Motor_2_Encoder_Counts_Start();
 211:main.c        ****     
 212:main.c        ****     //Initialising timers
 213:main.c        ****     Drift_Check_Timer_Start();
 214:main.c        ****     
 215:main.c        ****     //Starts and enables the interrupts for the motor encoder counts
 216:main.c        ****     Encoder_Counts_1_Interrupt_StartEx(Encoder_Counts_1_IH); 
 217:main.c        ****     Encoder_Counts_2_Interrupt_StartEx(Encoder_Counts_2_IH);
 218:main.c        ****     Drift_Check_Interrupt_StartEx(Drift_Check_IH);		
 219:main.c        ****     */
 220:main.c        **** 
 221:main.c        ****       // FORCING STATE:
 222:main.c        ****     // Manual state set for testing
 223:main.c        ****     state = STATE_DEPOSIT_PUCK;
 250              		.loc 1 223 0
 251 00e6 934A     		ldr	r2, .L45+24
 252 00e8 0623     		movs	r3, #6
 253 00ea 5360     		str	r3, [r2, #4]
 224:main.c        ****     currentPuckStackSize = 0;
 254              		.loc 1 224 0
 255 00ec E560     		str	r5, [r4, #12]
 225:main.c        ****     current_stage = 1;
 256              		.loc 1 225 0
 257 00ee 0123     		movs	r3, #1
 258 00f0 9360     		str	r3, [r2, #8]
 226:main.c        ****     blockEastClearance = 0;
 259              		.loc 1 226 0
 260 00f2 2582     		strh	r5, [r4, #16]	@ movhi
 227:main.c        ****     blockWestClearance = 1;
 261              		.loc 1 227 0
 262 00f4 6382     		strh	r3, [r4, #18]	@ movhi
 228:main.c        ****     puckEastClearance = 0;
 263              		.loc 1 228 0
 264 00f6 A582     		strh	r5, [r4, #20]	@ movhi
 229:main.c        ****     puckWestClearance = 1;
 265              		.loc 1 229 0
 266 00f8 E382     		strh	r3, [r4, #22]	@ movhi
 267              	.LVL41:
 230:main.c        ****     int block_and_puck_edge_midpoint = 500; // take the midpoint between inner edge between the puc
 231:main.c        ****     internal_orientation = EAST;
 268              		.loc 1 231 0
 269 00fa 3B60     		str	r3, [r7]
 232:main.c        ****     puckConstructionPlan[0] = RED;
 270              		.loc 1 232 0
 271 00fc A361     		str	r3, [r4, #24]
 233:main.c        ****     puckConstructionPlan[1] = GREEN;
 272              		.loc 1 233 0
 273 00fe 0223     		movs	r3, #2
 274 0100 E361     		str	r3, [r4, #28]
 234:main.c        ****     puckConstructionPlan[2] = BLUE;
 275              		.loc 1 234 0
 276 0102 2662     		str	r6, [r4, #32]
 277              	.L41:
 278              	.LBB2:
 235:main.c        **** 
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccRuSwul.s 			page 10


 236:main.c        ****     // Main Loop for States
 237:main.c        ****         
 238:main.c        ****     for(;;)
 239:main.c        ****     {   
 240:main.c        ****         
 241:main.c        ****         ultimateDebugging();        // If any of the debugging flags are activated, this will be ca
 279              		.loc 1 241 0
 280 0104 FFF7FEFF 		bl	ultimateDebugging
 281              	.LVL42:
 242:main.c        ****         
 243:main.c        ****         
 244:main.c        ****         // Start button is pressed so quit sensing
 245:main.c        **** 
 246:main.c        ****         /*
 247:main.c        ****         while (beginNavigation == 0) {
 248:main.c        ****             distanceCheck();           
 249:main.c        ****             UART_1_PutString("\n");
 250:main.c        ****             CyDelay(1000); // Check distance once a second.
 251:main.c        ****                 
 252:main.c        ****         }
 253:main.c        ****         */
 254:main.c        ****         
 255:main.c        ****         
 256:main.c        ****         // Enter picking up puck state for the moment FOR TESTING
 257:main.c        ****         //colour_sensing_algorithm = 1;
 258:main.c        ****         //control_photodiode_Write(1);
 259:main.c        ****         //state = STATE_FIND_REQUIRED_PUCK;
 260:main.c        ****         
 261:main.c        ****         
 262:main.c        ****      
 263:main.c        ****         
 264:main.c        ****         //state = STATE_FIND_REQUIRED_PUCK;
 265:main.c        ****         
 266:main.c        ****         //moveUntil(100,FORWARD,GREATER_THAN,SIDE_LEFT,SPEED);
 267:main.c        ****         
 268:main.c        ****         //while(1) {};
 269:main.c        ****         
 270:main.c        ****         
 271:main.c        ****         // state = STATE_LOCATE_BLOCK_AND_PUCKS;
 272:main.c        ****         
 273:main.c        ****         
 274:main.c        ****         //UART_1_PutString("hI");
 275:main.c        ****         
 276:main.c        ****         //changeOrientation(NORTH, SPEED);
 277:main.c        ****         //changeOrientation(WEST, SPEED);
 278:main.c        ****                 
 279:main.c        ****         //state = STATE_DEPOSIT_PUCK;
 280:main.c        ****         //currentPuckStackSize = 2;
 281:main.c        ****         //current_stage = 3;
 282:main.c        ****          
 283:main.c        **** 
 284:main.c        ****         
 285:main.c        ****                
 286:main.c        ****         if (state == STATE_SCAN_PLAN) {              // colour sensing, while switch has not been p
 282              		.loc 1 286 0
 283 0108 8A4B     		ldr	r3, .L45+24
 284 010a 5B68     		ldr	r3, [r3, #4]
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccRuSwul.s 			page 11


 285 010c 012B     		cmp	r3, #1
 286 010e 4AD1     		bne	.L8
 287              	.LBB3:
 287:main.c        ****             
 288:main.c        ****             while(0){
 289:main.c        ****                 moveUntil(400, FORWARD, LESS_THAN, FRONT_LEFT, SPEED);
 290:main.c        ****                 moveDynamic(-450, SPEED);
 291:main.c        ****                 CyDelay(500);   
 292:main.c        ****                 colourSensingInitialise();      // Initialises wall colour sensor against the black
 293:main.c        ****                 CyDelay(500);
 294:main.c        ****                 moveDynamic(170, SPEED);
 295:main.c        ****                 CyDelay(500);
 296:main.c        ****                 
 297:main.c        ****                 for (int i = 0; i < 5; i++) {                       // scan each of the pucks 
 298:main.c        ****                     puckRackColours[i] = colourSensingOutput();
 299:main.c        ****                     CyDelay(500);
 300:main.c        ****                     moveDynamic(61, SPEED);
 301:main.c        ****                     CyDelay(500);
 302:main.c        ****                 }
 303:main.c        ****             
 304:main.c        ****             }
 305:main.c        **** 
 306:main.c        **** 
 307:main.c        ****             
 308:main.c        ****             straightAdjust();
 288              		.loc 1 308 0
 289 0110 FFF7FEFF 		bl	straightAdjust
 290              	.LVL43:
 309:main.c        ****             moveUntil(-100, BACKWARD, LESS_THAN, BACK, SPEED);
 291              		.loc 1 309 0
 292 0114 AA23     		movs	r3, #170
 293 0116 0093     		str	r3, [sp]
 294 0118 0423     		movs	r3, #4
 295 011a 1A46     		mov	r2, r3
 296 011c 0021     		movs	r1, #0
 297 011e 6FF06300 		mvn	r0, #99
 298 0122 FFF7FEFF 		bl	moveUntil
 299              	.LVL44:
 310:main.c        ****             colourSensingInitialise();      // Initialises wall colour sensor against the black wal
 300              		.loc 1 310 0
 301 0126 FFF7FEFF 		bl	colourSensingInitialise
 302              	.LVL45:
 303              	.LBB4:
 311:main.c        ****                         
 312:main.c        ****             for (int i = 0; i < 5; i++) { 
 304              		.loc 1 312 0
 305 012a 0024     		movs	r4, #0
 306 012c 0AE0     		b	.L9
 307              	.LVL46:
 308              	.L10:
 313:main.c        ****                 // scan each of the pucks 
 314:main.c        ****                 //moveUntil(puckRackOffsetsFromWest[i]);
 315:main.c        ****                 puckRackColours[i] = colourSensingOutput();
 309              		.loc 1 315 0 discriminator 3
 310 012e FFF7FEFF 		bl	colourSensingOutput
 311              	.LVL47:
 312 0132 7B4B     		ldr	r3, .L45+4
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccRuSwul.s 			page 12


 313 0134 03EB8403 		add	r3, r3, r4, lsl #2
 314 0138 5862     		str	r0, [r3, #36]
 316:main.c        ****                 CyDelay(500);
 315              		.loc 1 316 0 discriminator 3
 316 013a 4FF4FA70 		mov	r0, #500
 317 013e FFF7FEFF 		bl	CyDelay
 318              	.LVL48:
 312:main.c        ****                 // scan each of the pucks 
 319              		.loc 1 312 0 discriminator 3
 320 0142 0134     		adds	r4, r4, #1
 321              	.LVL49:
 322              	.L9:
 312:main.c        ****                 // scan each of the pucks 
 323              		.loc 1 312 0 is_stmt 0 discriminator 1
 324 0144 042C     		cmp	r4, #4
 325 0146 F2DD     		ble	.L10
 326              	.LBE4:
 317:main.c        **** 
 318:main.c        ****             //straightAdjust();
 319:main.c        ****             }
 320:main.c        ****                        
 321:main.c        ****             UART_1_PutString("Found Colours: \n");
 327              		.loc 1 321 0 is_stmt 1
 328 0148 7B48     		ldr	r0, .L45+28
 329 014a FFF7FEFF 		bl	UART_1_PutString
 330              	.LVL50:
 331              	.LBB5:
 322:main.c        ****             for (int i = 0; i < 5; i++) 
 332              		.loc 1 322 0
 333 014e 0024     		movs	r4, #0
 334              	.LVL51:
 335 0150 0CE0     		b	.L11
 336              	.LVL52:
 337              	.L12:
 323:main.c        ****             {
 324:main.c        ****                 sprintf(output, "%i \n", puckRackColours[i]);    // updates UART showing values of 
 338              		.loc 1 324 0 discriminator 3
 339 0152 734B     		ldr	r3, .L45+4
 340 0154 03EB8403 		add	r3, r3, r4, lsl #2
 341 0158 784D     		ldr	r5, .L45+32
 342 015a 5A6A     		ldr	r2, [r3, #36]
 343 015c 7849     		ldr	r1, .L45+36
 344 015e 2846     		mov	r0, r5
 345 0160 FFF7FEFF 		bl	sprintf
 346              	.LVL53:
 325:main.c        ****                 UART_1_PutString(output);
 347              		.loc 1 325 0 discriminator 3
 348 0164 2846     		mov	r0, r5
 349 0166 FFF7FEFF 		bl	UART_1_PutString
 350              	.LVL54:
 322:main.c        ****             for (int i = 0; i < 5; i++) 
 351              		.loc 1 322 0 discriminator 3
 352 016a 0134     		adds	r4, r4, #1
 353              	.LVL55:
 354              	.L11:
 322:main.c        ****             for (int i = 0; i < 5; i++) 
 355              		.loc 1 322 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccRuSwul.s 			page 13


 356 016c 042C     		cmp	r4, #4
 357 016e F0DD     		ble	.L12
 358              	.LBE5:
 326:main.c        ****             }
 327:main.c        ****             
 328:main.c        ****             
 329:main.c        ****             control_photodiode_Write(CLAW_SENSING);    // changes to claw photodiode
 359              		.loc 1 329 0 is_stmt 1
 360 0170 0120     		movs	r0, #1
 361 0172 FFF7FEFF 		bl	control_photodiode_Write
 362              	.LVL56:
 330:main.c        ****             colour_sensing_algorithm = CLAW_1_ALGORITHM;   // changes it to claw algorithm
 363              		.loc 1 330 0
 364 0176 0122     		movs	r2, #1
 365 0178 694B     		ldr	r3, .L45+4
 366 017a 9A60     		str	r2, [r3, #8]
 367              	.LVL57:
 368              	.LBB6:
 331:main.c        ****                                  
 332:main.c        ****             // THEN WE FILTER THE NO PUCK VALUES:
 333:main.c        ****             int puckConstructionPlanIndex = 0; // Will be used to iterate through the 3 puck colour
 334:main.c        ****             
 335:main.c        ****             // Iterate over all 5 rack slots and place the 3 colours into puckConstructionPlan.
 336:main.c        ****             for (int puckRackIndex = 0; puckRackIndex < 5; puckRackIndex++){
 369              		.loc 1 336 0
 370 017c 0023     		movs	r3, #0
 371              	.LBE6:
 333:main.c        ****             
 372              		.loc 1 333 0
 373 017e 1A46     		mov	r2, r3
 374              	.LBB7:
 375              		.loc 1 336 0
 376 0180 0CE0     		b	.L13
 377              	.LVL58:
 378              	.L15:
 337:main.c        ****                 if (puckRackColours[puckRackIndex] != BLANK && puckConstructionPlanIndex != 3){
 379              		.loc 1 337 0
 380 0182 6749     		ldr	r1, .L45+4
 381 0184 01EB8301 		add	r1, r1, r3, lsl #2
 382 0188 486A     		ldr	r0, [r1, #36]
 383 018a 30B1     		cbz	r0, .L14
 384              		.loc 1 337 0 is_stmt 0 discriminator 1
 385 018c 032A     		cmp	r2, #3
 386 018e 04D0     		beq	.L14
 338:main.c        ****                     puckConstructionPlan[puckConstructionPlanIndex] = puckRackColours[puckRackIndex
 387              		.loc 1 338 0 is_stmt 1
 388 0190 6349     		ldr	r1, .L45+4
 389 0192 01EB8201 		add	r1, r1, r2, lsl #2
 390 0196 8861     		str	r0, [r1, #24]
 339:main.c        ****                     puckConstructionPlanIndex++;
 391              		.loc 1 339 0
 392 0198 0132     		adds	r2, r2, #1
 393              	.LVL59:
 394              	.L14:
 336:main.c        ****                 if (puckRackColours[puckRackIndex] != BLANK && puckConstructionPlanIndex != 3){
 395              		.loc 1 336 0 discriminator 2
 396 019a 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccRuSwul.s 			page 14


 397              	.LVL60:
 398              	.L13:
 336:main.c        ****                 if (puckRackColours[puckRackIndex] != BLANK && puckConstructionPlanIndex != 3){
 399              		.loc 1 336 0 is_stmt 0 discriminator 1
 400 019c 042B     		cmp	r3, #4
 401 019e F0DD     		ble	.L15
 402              	.LBE7:
 340:main.c        ****                 }
 341:main.c        ****             }
 342:main.c        ****                     
 343:main.c        ****             // MOVE into the next state: 
 344:main.c        ****             state = STATE_LOCATE_BLOCK_AND_PUCKS;
 403              		.loc 1 344 0 is_stmt 1
 404 01a0 0222     		movs	r2, #2
 405              	.LVL61:
 406 01a2 644B     		ldr	r3, .L45+24
 407              	.LVL62:
 408 01a4 5A60     		str	r2, [r3, #4]
 409              	.LVL63:
 410              	.L8:
 411              	.LBE3:
 345:main.c        ****             
 346:main.c        ****             /*
 347:main.c        ****             if (!moving){
 348:main.c        ****                 moving = 1;
 349:main.c        ****             if (initialisation){moveBackwardIndefinitely(); initialisation = 0;}
 350:main.c        ****             else {moveForwardIndefinitely();}        
 351:main.c        **** 
 352:main.c        ****             moveAndAngle(SCAN_INITIALISE_HORIZONTAL,PLAN_SCAN_VERTICAL,WEST_ANGLE); // Move beyond 
 353:main.c        ****             
 354:main.c        ****             // Read the black wall
 355:main.c        ****             
 356:main.c        ****             for (currentPuckRackScanningIndex = 0; currentPuckRackScanningIndex <= 4; currentPuckRa
 357:main.c        ****                 moveAndAngle(puckRackOffsetsFromWest[currentPuckRackScanningIndex],PLAN_SCAN_VERTIC
 358:main.c        ****                 puckRackColours[currentPuckRackScanningIndex] = colourSensingOutput();
 359:main.c        ****             }
 360:main.c        ****    
 361:main.c        ****             */
 362:main.c        ****         }
 363:main.c        **** 
 364:main.c        ****     	if (state == STATE_LOCATE_BLOCK_AND_PUCKS){
 412              		.loc 1 364 0
 413 01a6 634B     		ldr	r3, .L45+24
 414 01a8 5B68     		ldr	r3, [r3, #4]
 415 01aa 022B     		cmp	r3, #2
 416 01ac 40F0CE80 		bne	.L16
 417              	.LBB8:
 365:main.c        ****             
 366:main.c        **** 
 367:main.c        ****             
 368:main.c        ****             // move away from home base:
 369:main.c        ****             moveSwivel(-35, SPEED);  
 418              		.loc 1 369 0
 419 01b0 AA21     		movs	r1, #170
 420 01b2 6FF02200 		mvn	r0, #34
 421 01b6 FFF7FEFF 		bl	moveSwivel
 422              	.LVL64:
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccRuSwul.s 			page 15


 370:main.c        ****             moveDynamic(-150, SPEED);
 423              		.loc 1 370 0
 424 01ba AA21     		movs	r1, #170
 425 01bc 6FF09500 		mvn	r0, #149
 426 01c0 FFF7FEFF 		bl	moveDynamic
 427              	.LVL65:
 371:main.c        ****             moveSwivel(35, SPEED);
 428              		.loc 1 371 0
 429 01c4 AA21     		movs	r1, #170
 430 01c6 2320     		movs	r0, #35
 431 01c8 FFF7FEFF 		bl	moveSwivel
 432              	.LVL66:
 372:main.c        ****     
 373:main.c        ****             // Move until construction zone            
 374:main.c        ****             moveUntil(130, FORWARD, LESS_THAN, FRONT_LEFT, SPEED);  // Move to west wall
 433              		.loc 1 374 0
 434 01cc AA24     		movs	r4, #170
 435 01ce 0094     		str	r4, [sp]
 436 01d0 0023     		movs	r3, #0
 437 01d2 0422     		movs	r2, #4
 438 01d4 0121     		movs	r1, #1
 439 01d6 8220     		movs	r0, #130
 440 01d8 FFF7FEFF 		bl	moveUntil
 441              	.LVL67:
 375:main.c        ****             straightAdjust();                                       // straighten against west wall
 442              		.loc 1 375 0
 443 01dc FFF7FEFF 		bl	straightAdjust
 444              	.LVL68:
 376:main.c        ****             
 377:main.c        ****             // SCAN FOR BLOCKS:
 378:main.c        ****             
 379:main.c        ****             distanceSensor(SIDE_LEFT);  // takes how far we are away from home base wall
 445              		.loc 1 379 0
 446 01e0 0220     		movs	r0, #2
 447 01e2 FFF7FEFF 		bl	distanceSensor
 448              	.LVL69:
 380:main.c        ****             int block_check = ARENA_LENGTH - BLOCK_ZONE_SOUTH - WIDTH_SENSOR_TO_SENSOR - ultrasonic
 449              		.loc 1 380 0
 450 01e6 574D     		ldr	r5, .L45+40
 451 01e8 AA68     		ldr	r2, [r5, #8]
 452              	.LVL70:
 381:main.c        ****                 // TAKES our distance from north wall, 
 382:main.c        ****                 // takes distance from arena, takes away 
 383:main.c        ****                 // minus 50 is a tolerance
 384:main.c        ****             
 385:main.c        ****             sprintf(output, "distance from robot to block: %d \t", block_check);
 453              		.loc 1 385 0
 454 01ea 544E     		ldr	r6, .L45+32
 455 01ec C2F50472 		rsb	r2, r2, #528
 456              	.LVL71:
 457 01f0 0232     		adds	r2, r2, #2
 458 01f2 5549     		ldr	r1, .L45+44
 459 01f4 3046     		mov	r0, r6
 460 01f6 FFF7FEFF 		bl	sprintf
 461              	.LVL72:
 386:main.c        ****             UART_1_PutString(output);
 462              		.loc 1 386 0
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccRuSwul.s 			page 16


 463 01fa 3046     		mov	r0, r6
 464 01fc FFF7FEFF 		bl	UART_1_PutString
 465              	.LVL73:
 387:main.c        ****             
 388:main.c        ****             block_check = 350;  // This is a default length that is dynamic
 389:main.c        **** 
 390:main.c        ****             moveUntil(block_check, BACKWARD, LESS_THAN, SIDE_RIGHT, SPEED);   
 466              		.loc 1 390 0
 467 0200 0094     		str	r4, [sp]
 468 0202 0323     		movs	r3, #3
 469 0204 0422     		movs	r2, #4
 470 0206 0021     		movs	r1, #0
 471 0208 4FF4AF70 		mov	r0, #350
 472 020c FFF7FEFF 		bl	moveUntil
 473              	.LVL74:
 391:main.c        ****                                 // this will move backwards until it hits the block or the wall
 392:main.c        ****             blinkLED(GREEN,1000);      // To show it ended at the correct spot
 474              		.loc 1 392 0
 475 0210 4FF47A71 		mov	r1, #1000
 476 0214 0220     		movs	r0, #2
 477 0216 FFF7FEFF 		bl	blinkLED
 478              	.LVL75:
 393:main.c        ****                     
 394:main.c        ****             //straightAdjust();                   // Ensure we are straight to take measurements
 395:main.c        ****                                                 // may need to readjust this 
 396:main.c        ****             
 397:main.c        ****             
 398:main.c        ****             // Move back a bit to find the left side and right side values (adds a bit of tolerance
 399:main.c        ****             moveDynamic(-(BLOCK_WIDTH/2), SPEED);
 479              		.loc 1 399 0
 480 021a 2146     		mov	r1, r4
 481 021c 6FF02C00 		mvn	r0, #44
 482 0220 FFF7FEFF 		bl	moveDynamic
 483              	.LVL76:
 400:main.c        ****             
 401:main.c        ****             //straightAdjust();                   // Ensure we are straight to take measurements
 402:main.c        ****                                                 // may need to readjust this 
 403:main.c        ****             
 404:main.c        ****             distanceSensor(SIDE_RIGHT);
 484              		.loc 1 404 0
 485 0224 0320     		movs	r0, #3
 486 0226 FFF7FEFF 		bl	distanceSensor
 487              	.LVL77:
 405:main.c        ****             CyDelay(60);
 488              		.loc 1 405 0
 489 022a 3C20     		movs	r0, #60
 490 022c FFF7FEFF 		bl	CyDelay
 491              	.LVL78:
 406:main.c        ****             distanceSensor(SIDE_LEFT);
 492              		.loc 1 406 0
 493 0230 0220     		movs	r0, #2
 494 0232 FFF7FEFF 		bl	distanceSensor
 495              	.LVL79:
 407:main.c        ****             CyDelay(60);
 496              		.loc 1 407 0
 497 0236 3C20     		movs	r0, #60
 498 0238 FFF7FEFF 		bl	CyDelay
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccRuSwul.s 			page 17


 499              	.LVL80:
 408:main.c        ****             
 409:main.c        ****             // FAILSAFE if the block is at the very end of west wall:
 410:main.c        ****             distanceSensor(BACK);
 500              		.loc 1 410 0
 501 023c 0420     		movs	r0, #4
 502 023e FFF7FEFF 		bl	distanceSensor
 503              	.LVL81:
 411:main.c        ****             CyDelay(60);
 504              		.loc 1 411 0
 505 0242 3C20     		movs	r0, #60
 506 0244 FFF7FEFF 		bl	CyDelay
 507              	.LVL82:
 412:main.c        ****             
 413:main.c        ****             if (ultrasonic_distances_mm[BACK] < SAFETY_MARGIN + 50) {
 508              		.loc 1 413 0
 509 0248 2869     		ldr	r0, [r5, #16]
 510 024a 7C28     		cmp	r0, #124
 511 024c 10DC     		bgt	.L17
 414:main.c        ****                 // block is " | " this orientation, and close to the side wall
 415:main.c        ****                 
 416:main.c        ****                 // Fill out all the details: 
 417:main.c        ****                 block_location[NORTH] = ARENA_WIDTH - ultrasonic_distances_mm[SIDE_LEFT] - ultrason
 512              		.loc 1 417 0
 513 024e AB68     		ldr	r3, [r5, #8]
 514 0250 C3F59662 		rsb	r2, r3, #1200
 515 0254 D21A     		subs	r2, r2, r3
 516 0256 A2F5EB72 		sub	r2, r2, #470
 517 025a 3149     		ldr	r1, .L45+4
 518 025c 8A63     		str	r2, [r1, #56]
 418:main.c        ****                 block_location[EAST] = 0;
 519              		.loc 1 418 0
 520 025e 0022     		movs	r2, #0
 521 0260 CA63     		str	r2, [r1, #60]
 419:main.c        ****                 block_location[SOUTH] = ultrasonic_distances_mm[SIDE_LEFT] + WIDTH_SENSOR_TO_SENSOR
 522              		.loc 1 419 0
 523 0262 DC33     		adds	r3, r3, #220
 524 0264 EA68     		ldr	r2, [r5, #12]
 525 0266 1344     		add	r3, r3, r2
 526 0268 0B64     		str	r3, [r1, #64]
 420:main.c        ****                 block_location[WEST] = ARENA_WIDTH - BLOCK_WIDTH; 
 527              		.loc 1 420 0
 528 026a 40F25643 		movw	r3, #1110
 529 026e 4B64     		str	r3, [r1, #68]
 530              	.L17:
 421:main.c        ****                 
 422:main.c        ****             }
 423:main.c        ****             if (ultrasonic_distances_mm[BACK] < BLOCK_LENGTH + 50) {
 531              		.loc 1 423 0
 532 0270 B0F5967F 		cmp	r0, #300
 533 0274 11DA     		bge	.L18
 424:main.c        ****                 // block is " -- " this orientation, and close to the side wall 
 425:main.c        ****                 
 426:main.c        ****                 // Fill out all the details: 
 427:main.c        ****                 block_location[NORTH] = ARENA_WIDTH - ultrasonic_distances_mm[SIDE_LEFT] - ultrason
 534              		.loc 1 427 0
 535 0276 3348     		ldr	r0, .L45+40
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccRuSwul.s 			page 18


 536 0278 8368     		ldr	r3, [r0, #8]
 537 027a C3F59662 		rsb	r2, r3, #1200
 538 027e D21A     		subs	r2, r2, r3
 539 0280 A2F5EB72 		sub	r2, r2, #470
 540 0284 2649     		ldr	r1, .L45+4
 541 0286 8A63     		str	r2, [r1, #56]
 428:main.c        ****                 block_location[EAST] = 0;
 542              		.loc 1 428 0
 543 0288 0022     		movs	r2, #0
 544 028a CA63     		str	r2, [r1, #60]
 429:main.c        ****                 block_location[SOUTH] = ultrasonic_distances_mm[SIDE_LEFT] + WIDTH_SENSOR_TO_SENSOR
 545              		.loc 1 429 0
 546 028c DC33     		adds	r3, r3, #220
 547 028e C268     		ldr	r2, [r0, #12]
 548 0290 1344     		add	r3, r3, r2
 549 0292 0B64     		str	r3, [r1, #64]
 430:main.c        ****                 block_location[WEST] = ARENA_WIDTH - BLOCK_LENGTH; 
 550              		.loc 1 430 0
 551 0294 40F2B633 		movw	r3, #950
 552 0298 4B64     		str	r3, [r1, #68]
 553              	.L18:
 431:main.c        ****             }
 432:main.c        ****             
 433:main.c        ****             moveUntil(block_check, BACKWARD, GREATER_THAN, SIDE_RIGHT, SPEED);  
 554              		.loc 1 433 0
 555 029a AA24     		movs	r4, #170
 556 029c 0094     		str	r4, [sp]
 557 029e 0323     		movs	r3, #3
 558 02a0 0522     		movs	r2, #5
 559 02a2 0021     		movs	r1, #0
 560 02a4 4FF4AF70 		mov	r0, #350
 561 02a8 FFF7FEFF 		bl	moveUntil
 562              	.LVL83:
 434:main.c        ****                                 // this will move backwards until no longer hitting the block, or t
 435:main.c        ****             blinkLED(GREEN,1000);      // To show it ended at the correct spot
 563              		.loc 1 435 0
 564 02ac 4FF47A71 		mov	r1, #1000
 565 02b0 0220     		movs	r0, #2
 566 02b2 FFF7FEFF 		bl	blinkLED
 567              	.LVL84:
 436:main.c        ****             
 437:main.c        **** 
 438:main.c        ****             CyDelay(1000);                      // To show it ended at the correct spot
 568              		.loc 1 438 0
 569 02b6 4FF47A70 		mov	r0, #1000
 570 02ba FFF7FEFF 		bl	CyDelay
 571              	.LVL85:
 439:main.c        ****             distanceSensor(FRONT_LEFT);
 572              		.loc 1 439 0
 573 02be 0020     		movs	r0, #0
 574 02c0 FFF7FEFF 		bl	distanceSensor
 575              	.LVL86:
 440:main.c        ****             CyDelay(60);
 576              		.loc 1 440 0
 577 02c4 3C20     		movs	r0, #60
 578 02c6 FFF7FEFF 		bl	CyDelay
 579              	.LVL87:
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccRuSwul.s 			page 19


 441:main.c        ****             distanceSensor(FRONT_RIGHT);        // might run some code to see if theres a differenc
 580              		.loc 1 441 0
 581 02ca 0120     		movs	r0, #1
 582 02cc FFF7FEFF 		bl	distanceSensor
 583              	.LVL88:
 442:main.c        ****             CyDelay(60);
 584              		.loc 1 442 0
 585 02d0 3C20     		movs	r0, #60
 586 02d2 FFF7FEFF 		bl	CyDelay
 587              	.LVL89:
 443:main.c        ****             distanceSensor(SIDE_LEFT);        // might run some code to see if theres a difference 
 588              		.loc 1 443 0
 589 02d6 0220     		movs	r0, #2
 590 02d8 FFF7FEFF 		bl	distanceSensor
 591              	.LVL90:
 444:main.c        ****             CyDelay(60);
 592              		.loc 1 444 0
 593 02dc 3C20     		movs	r0, #60
 594 02de FFF7FEFF 		bl	CyDelay
 595              	.LVL91:
 445:main.c        ****             
 446:main.c        ****             // Block location values:
 447:main.c        ****             block_location[SOUTH] = ultrasonic_distances_mm[SIDE_LEFT] + WIDTH_SENSOR_TO_SENSOR + u
 596              		.loc 1 447 0
 597 02e2 184B     		ldr	r3, .L45+40
 598 02e4 9A68     		ldr	r2, [r3, #8]
 599 02e6 02F1DC01 		add	r1, r2, #220
 600 02ea DA68     		ldr	r2, [r3, #12]
 601 02ec 0A44     		add	r2, r2, r1
 602 02ee 0C49     		ldr	r1, .L45+4
 603 02f0 0A64     		str	r2, [r1, #64]
 448:main.c        ****             block_location[WEST] = ultrasonic_distances_mm[FRONT_LEFT] + DISTANCE_FRONT_SENSOR_TO_S
 604              		.loc 1 448 0
 605 02f2 1B68     		ldr	r3, [r3]
 606 02f4 9633     		adds	r3, r3, #150
 607 02f6 4B64     		str	r3, [r1, #68]
 449:main.c        ****             CyDelay(1000);         
 608              		.loc 1 449 0
 609 02f8 4FF47A70 		mov	r0, #1000
 610 02fc FFF7FEFF 		bl	CyDelay
 611              	.LVL92:
 450:main.c        ****             
 451:main.c        ****             // Start moving forward to find the location of the PUCKS:           
 452:main.c        ****             changeOrientation(EAST, SPEED);                             // No matter where we are t
 612              		.loc 1 452 0
 613 0300 2146     		mov	r1, r4
 614 0302 0120     		movs	r0, #1
 615 0304 FFF7FEFF 		bl	changeOrientation
 616              	.LVL93:
 453:main.c        ****             moveUntil(150, FORWARD, LESS_THAN, FRONT_LEFT, SPEED);
 617              		.loc 1 453 0
 618 0308 0094     		str	r4, [sp]
 619 030a 0023     		movs	r3, #0
 620 030c 0422     		movs	r2, #4
 621 030e 0121     		movs	r1, #1
 622 0310 9620     		movs	r0, #150
 623 0312 FFF7FEFF 		bl	moveUntil
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccRuSwul.s 			page 20


 624              	.LVL94:
 454:main.c        ****             straightAdjust();
 625              		.loc 1 454 0
 626 0316 FFF7FEFF 		bl	straightAdjust
 627              	.LVL95:
 628              	.L19:
 629 031a FEE7     		b	.L19
 630              	.L46:
 631              		.align	2
 632              	.L45:
 633 031c 00000000 		.word	.LC0
 634 0320 00000000 		.word	.LANCHOR0
 635 0324 00000000 		.word	internal_orientation
 636 0328 00000000 		.word	TIH
 637 032c 00000000 		.word	StartIH
 638 0330 18000000 		.word	.LC1
 639 0334 00000000 		.word	.LANCHOR1
 640 0338 38000000 		.word	.LC2
 641 033c 00000000 		.word	output
 642 0340 4C000000 		.word	.LC3
 643 0344 00000000 		.word	ultrasonic_distances_mm
 644 0348 54000000 		.word	.LC4
 645              	.LVL96:
 646              	.L16:
 647              	.LBE8:
 455:main.c        ****             int puck_check = ARENA_LENGTH - PUCK_GRID_FROM_NORTH;
 456:main.c        ****             
 457:main.c        ****             
 458:main.c        ****             while(1) {};
 459:main.c        ****             
 460:main.c        ****             // Check front and back sensors:
 461:main.c        ****             moveUntil(puck_check, LESS_THAN, BACKWARD, SIDE_LEFT, SPEED);   // this will move backw
 462:main.c        ****             CyDelay(1000);
 463:main.c        ****             
 464:main.c        ****             distanceSensor(FRONT_LEFT);
 465:main.c        ****             CyDelay(DELAY);
 466:main.c        ****             distanceSensor(BACK);
 467:main.c        ****             CyDelay(DELAY);
 468:main.c        ****             
 469:main.c        ****             // checking if accidentally detected block:
 470:main.c        ****             // if the distance we are at is less than the block, we can say we didnt detect the blo
 471:main.c        ****             if (ultrasonic_distances_mm[FRONT_LEFT] + DISTANCE_FRONT_SENSOR_TO_SIDE_SENSOR < block_
 472:main.c        ****             {
 473:main.c        ****                 // puck detected
 474:main.c        ****                 // puck detectedDISTANCE_FRONT_SENSOR_TO_SIDE_SENSOR
 475:main.c        ****                 puck_location[EAST] = ultrasonic_distances_mm[FRONT_LEFT] + DISTANCE_FRONT_SENSOR_T
 476:main.c        ****                 puck_location[WEST] = ARENA_WIDTH - puck_location[EAST] - PUCK_GRID_WIDTH;
 477:main.c        ****                 
 478:main.c        ****                 blinkLED(GREEN,1000);   // puck location was succesfully found
 479:main.c        ****             }
 480:main.c        ****             else {
 481:main.c        ****                 // block detected & rescans from opposite side:
 482:main.c        ****                 
 483:main.c        ****                 moveUntil(200, BACKWARD, LESS_THAN, BACK, SPEED);   // This should take us to the o
 484:main.c        ****                 changeOrientation(WEST, SPEED);
 485:main.c        ****                 moveUntil(100, FORWARD, LESS_THAN, FRONT_LEFT, SPEED);
 486:main.c        ****                 straightAdjust();   // adjusts against the wall
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccRuSwul.s 			page 21


 487:main.c        ****                 moveUntil(puck_check, LESS_THAN, BACKWARD, SIDE_RIGHT, SPEED);   // this will move 
 488:main.c        ****                 blinkLED(GREEN,1000);   // Find the edge of the puck zone 
 489:main.c        ****                                 
 490:main.c        ****                 distanceSensor(FRONT_LEFT);
 491:main.c        ****                 CyDelay(DELAY);
 492:main.c        ****                 distanceSensor(BACK);
 493:main.c        ****                 CyDelay(DELAY);
 494:main.c        ****                 
 495:main.c        ****                 
 496:main.c        ****             }
 497:main.c        ****             
 498:main.c        ****             // PUCK has now been found, enter the IF statements to locate and pick up pucks 
 499:main.c        ****             state = STATE_GO_TO_PUCKS;
 500:main.c        **** 	    }     
 501:main.c        ****         
 502:main.c        ****         // Ensure that we are @ east wall facing east at a minimum verticaldistance so we can turn 
 503:main.c        ****         
 504:main.c        ****         if (state == STATE_GO_TO_PUCKS){
 648              		.loc 1 504 0
 649 034c 032B     		cmp	r3, #3
 650 034e 40F0A680 		bne	.L20
 505:main.c        ****             
 506:main.c        ****             if (blockEastClearance && puckEastClearance){
 651              		.loc 1 506 0
 652 0352 BB4B     		ldr	r3, .L47
 653 0354 B3F91020 		ldrsh	r2, [r3, #16]
 654 0358 2AB3     		cbz	r2, .L21
 655              		.loc 1 506 0 is_stmt 0 discriminator 1
 656 035a B3F91430 		ldrsh	r3, [r3, #20]
 657 035e 13B3     		cbz	r3, .L21
 507:main.c        ****                 
 508:main.c        ****                 //moveUntil(CLEARANCE_RADIUS_CENTER_TO_FRONT, BACKWARD, GREATER_THAN, FRONT_LEFT, S
 509:main.c        ****                 moveUntil(CLEARANCE_RADIUS_CENTER_TO_FRONT + 100, BACKWARD, GREATER_THAN, FRONT_LEF
 658              		.loc 1 509 0 is_stmt 1
 659 0360 AA24     		movs	r4, #170
 660 0362 0094     		str	r4, [sp]
 661 0364 0023     		movs	r3, #0
 662 0366 0522     		movs	r2, #5
 663 0368 1946     		mov	r1, r3
 664 036a E620     		movs	r0, #230
 665 036c FFF7FEFF 		bl	moveUntil
 666              	.LVL97:
 510:main.c        ****                 straightAdjust();
 667              		.loc 1 510 0
 668 0370 FFF7FEFF 		bl	straightAdjust
 669              	.LVL98:
 511:main.c        ****                 changeOrientation(NORTH, SPEED);
 670              		.loc 1 511 0
 671 0374 2146     		mov	r1, r4
 672 0376 0020     		movs	r0, #0
 673 0378 FFF7FEFF 		bl	changeOrientation
 674              	.LVL99:
 512:main.c        ****                 straightAdjust();
 675              		.loc 1 512 0
 676 037c FFF7FEFF 		bl	straightAdjust
 677              	.LVL100:
 513:main.c        ****                 moveUntil(CLEARANCE_RADIUS_CENTER_TO_FRONT, FORWARD, LESS_THAN, FRONT_LEFT, SPEED);
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccRuSwul.s 			page 22


 678              		.loc 1 513 0
 679 0380 0094     		str	r4, [sp]
 680 0382 0023     		movs	r3, #0
 681 0384 0422     		movs	r2, #4
 682 0386 0121     		movs	r1, #1
 683 0388 8220     		movs	r0, #130
 684 038a FFF7FEFF 		bl	moveUntil
 685              	.LVL101:
 514:main.c        ****                 //displaceLeft(); Repeatedly call this if below function not implemented
 515:main.c        ****                 //displaceLeftUntil(CLEARANCE_RADIUS_CENTER_TO_BACK,RIGHT);
 516:main.c        ****                 changeOrientation(WEST, SPEED);
 686              		.loc 1 516 0
 687 038e 2146     		mov	r1, r4
 688 0390 0320     		movs	r0, #3
 689 0392 FFF7FEFF 		bl	changeOrientation
 690              	.LVL102:
 517:main.c        ****                 //displaceLeft();
 518:main.c        ****                 //displaceLeftUntil(DISTANCE_PUCKS_FROM_NORTH + WIDTH_SENSOR_TO_CENTER ,RIGHT);
 519:main.c        ****                 moveUntil(DISTANCE_STOPPED_FROM_PUCK, FORWARD, LESS_THAN, FRONT_LEFT, SPEED);
 691              		.loc 1 519 0
 692 0396 0094     		str	r4, [sp]
 693 0398 0023     		movs	r3, #0
 694 039a 0422     		movs	r2, #4
 695 039c 0121     		movs	r1, #1
 696 039e 3220     		movs	r0, #50
 697 03a0 FFF7FEFF 		bl	moveUntil
 698              	.LVL103:
 699 03a4 7BE0     		b	.L20
 700              	.L21:
 520:main.c        ****                 
 521:main.c        ****             }
 522:main.c        ****             
 523:main.c        ****             else if (blockWestClearance && puckWestClearance){
 701              		.loc 1 523 0
 702 03a6 A64B     		ldr	r3, .L47
 703 03a8 B3F91230 		ldrsh	r3, [r3, #18]
 704 03ac 33B3     		cbz	r3, .L22
 705              		.loc 1 523 0 is_stmt 0 discriminator 1
 706 03ae A449     		ldr	r1, .L47
 707 03b0 B1F91610 		ldrsh	r1, [r1, #22]
 708 03b4 11B3     		cbz	r1, .L22
 524:main.c        ****             
 525:main.c        ****                 //moveUntil(CLEARANCE_RADIUS_CENTER_TO_FRONT, BACKWARD, GREATER_THAN, FRONT_LEFT, S
 526:main.c        ****                 moveUntil(CLEARANCE_RADIUS_CENTER_TO_BACK, BACKWARD, LESS_THAN, BACK, SPEED);
 709              		.loc 1 526 0 is_stmt 1
 710 03b6 AA24     		movs	r4, #170
 711 03b8 0094     		str	r4, [sp]
 712 03ba 0423     		movs	r3, #4
 713 03bc 1A46     		mov	r2, r3
 714 03be 0021     		movs	r1, #0
 715 03c0 F020     		movs	r0, #240
 716 03c2 FFF7FEFF 		bl	moveUntil
 717              	.LVL104:
 527:main.c        ****                 straightAdjust();
 718              		.loc 1 527 0
 719 03c6 FFF7FEFF 		bl	straightAdjust
 720              	.LVL105:
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccRuSwul.s 			page 23


 528:main.c        ****                 changeOrientation(NORTH, SPEED);
 721              		.loc 1 528 0
 722 03ca 2146     		mov	r1, r4
 723 03cc 0020     		movs	r0, #0
 724 03ce FFF7FEFF 		bl	changeOrientation
 725              	.LVL106:
 529:main.c        ****                 straightAdjust();
 726              		.loc 1 529 0
 727 03d2 FFF7FEFF 		bl	straightAdjust
 728              	.LVL107:
 530:main.c        ****                 moveUntil(CLEARANCE_RADIUS_CENTER_TO_FRONT, FORWARD, LESS_THAN, FRONT_LEFT, SPEED);
 729              		.loc 1 530 0
 730 03d6 0094     		str	r4, [sp]
 731 03d8 0023     		movs	r3, #0
 732 03da 0422     		movs	r2, #4
 733 03dc 0121     		movs	r1, #1
 734 03de 8220     		movs	r0, #130
 735 03e0 FFF7FEFF 		bl	moveUntil
 736              	.LVL108:
 531:main.c        ****                 //displaceLeft(); Repeatedly call this if below function not implemented
 532:main.c        ****                 //displaceLeftUntil(CLEARANCE_RADIUS_CENTER_TO_BACK,RIGHT);
 533:main.c        ****                 changeOrientation(EAST, SPEED);
 737              		.loc 1 533 0
 738 03e4 2146     		mov	r1, r4
 739 03e6 0120     		movs	r0, #1
 740 03e8 FFF7FEFF 		bl	changeOrientation
 741              	.LVL109:
 534:main.c        ****                 //displaceLeft();
 535:main.c        ****                 //displaceLeftUntil(DISTANCE_PUCKS_FROM_NORTH + WIDTH_SENSOR_TO_CENTER ,RIGHT);
 536:main.c        ****                 moveUntil(DISTANCE_STOPPED_FROM_PUCK, FORWARD, LESS_THAN, FRONT_LEFT, SPEED);
 742              		.loc 1 536 0
 743 03ec 0094     		str	r4, [sp]
 744 03ee 0023     		movs	r3, #0
 745 03f0 0422     		movs	r2, #4
 746 03f2 0121     		movs	r1, #1
 747 03f4 3220     		movs	r0, #50
 748 03f6 FFF7FEFF 		bl	moveUntil
 749              	.LVL110:
 750 03fa 50E0     		b	.L20
 751              	.L22:
 537:main.c        ****                             
 538:main.c        ****             }
 539:main.c        ****             
 540:main.c        ****             
 541:main.c        ****             else if (blockEastClearance && puckWestClearance){
 752              		.loc 1 541 0
 753 03fc 3AB3     		cbz	r2, .L23
 754              		.loc 1 541 0 is_stmt 0 discriminator 1
 755 03fe 904A     		ldr	r2, .L47
 756 0400 B2F91620 		ldrsh	r2, [r2, #22]
 757 0404 1AB3     		cbz	r2, .L23
 542:main.c        **** 
 543:main.c        ****                 moveUntil(block_and_puck_edge_midpoint - DISTANCE_BACK_SENSOR_FROM_CENTER, BACKWARD
 758              		.loc 1 543 0 is_stmt 1
 759 0406 AA24     		movs	r4, #170
 760 0408 0094     		str	r4, [sp]
 761 040a 0423     		movs	r3, #4
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccRuSwul.s 			page 24


 762 040c 1A46     		mov	r2, r3
 763 040e 0021     		movs	r1, #0
 764 0410 4FF48770 		mov	r0, #270
 765 0414 FFF7FEFF 		bl	moveUntil
 766              	.LVL111:
 544:main.c        ****                 straightAdjust();
 767              		.loc 1 544 0
 768 0418 FFF7FEFF 		bl	straightAdjust
 769              	.LVL112:
 545:main.c        ****                 changeOrientation(NORTH, SPEED);
 770              		.loc 1 545 0
 771 041c 2146     		mov	r1, r4
 772 041e 0020     		movs	r0, #0
 773 0420 FFF7FEFF 		bl	changeOrientation
 774              	.LVL113:
 546:main.c        ****                 straightAdjust();
 775              		.loc 1 546 0
 776 0424 FFF7FEFF 		bl	straightAdjust
 777              	.LVL114:
 547:main.c        ****                 moveUntil(CLEARANCE_RADIUS_CENTER_TO_FRONT, FORWARD, LESS_THAN, FRONT_LEFT, SPEED);
 778              		.loc 1 547 0
 779 0428 0094     		str	r4, [sp]
 780 042a 0023     		movs	r3, #0
 781 042c 0422     		movs	r2, #4
 782 042e 0121     		movs	r1, #1
 783 0430 8220     		movs	r0, #130
 784 0432 FFF7FEFF 		bl	moveUntil
 785              	.LVL115:
 548:main.c        ****                 //displaceLeft(); Repeatedly call this if below function not implemented
 549:main.c        ****                 //displaceLeftUntil(CLEARANCE_RADIUS_CENTER_TO_BACK,RIGHT);
 550:main.c        ****                 changeOrientation(EAST, SPEED);
 786              		.loc 1 550 0
 787 0436 2146     		mov	r1, r4
 788 0438 0120     		movs	r0, #1
 789 043a FFF7FEFF 		bl	changeOrientation
 790              	.LVL116:
 551:main.c        ****                 //displaceLeft();
 552:main.c        ****                 //displaceLeftUntil(DISTANCE_PUCKS_FROM_NORTH + WIDTH_SENSOR_TO_CENTER ,RIGHT);
 553:main.c        ****                 moveUntil(DISTANCE_STOPPED_FROM_PUCK, FORWARD, LESS_THAN, FRONT_LEFT, SPEED);
 791              		.loc 1 553 0
 792 043e 0094     		str	r4, [sp]
 793 0440 0023     		movs	r3, #0
 794 0442 0422     		movs	r2, #4
 795 0444 0121     		movs	r1, #1
 796 0446 3220     		movs	r0, #50
 797 0448 FFF7FEFF 		bl	moveUntil
 798              	.LVL117:
 799 044c 27E0     		b	.L20
 800              	.L23:
 554:main.c        ****                 
 555:main.c        ****             }
 556:main.c        ****             
 557:main.c        ****             else if (blockWestClearance && puckEastClearance){
 801              		.loc 1 557 0
 802 044e 33B3     		cbz	r3, .L20
 803              		.loc 1 557 0 is_stmt 0 discriminator 1
 804 0450 7B4B     		ldr	r3, .L47
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccRuSwul.s 			page 25


 805 0452 B3F91430 		ldrsh	r3, [r3, #20]
 806 0456 13B3     		cbz	r3, .L20
 558:main.c        ****                 
 559:main.c        ****                 moveUntil(block_and_puck_edge_midpoint - DISTANCE_BACK_SENSOR_FROM_CENTER, BACKWARD
 807              		.loc 1 559 0 is_stmt 1
 808 0458 AA24     		movs	r4, #170
 809 045a 0094     		str	r4, [sp]
 810 045c 0423     		movs	r3, #4
 811 045e 1A46     		mov	r2, r3
 812 0460 0021     		movs	r1, #0
 813 0462 4FF48770 		mov	r0, #270
 814 0466 FFF7FEFF 		bl	moveUntil
 815              	.LVL118:
 560:main.c        ****                 straightAdjust();
 816              		.loc 1 560 0
 817 046a FFF7FEFF 		bl	straightAdjust
 818              	.LVL119:
 561:main.c        ****                 changeOrientation(NORTH, SPEED);
 819              		.loc 1 561 0
 820 046e 2146     		mov	r1, r4
 821 0470 0020     		movs	r0, #0
 822 0472 FFF7FEFF 		bl	changeOrientation
 823              	.LVL120:
 562:main.c        ****                 straightAdjust();
 824              		.loc 1 562 0
 825 0476 FFF7FEFF 		bl	straightAdjust
 826              	.LVL121:
 563:main.c        ****                 moveUntil(CLEARANCE_RADIUS_CENTER_TO_FRONT, FORWARD, LESS_THAN, FRONT_LEFT, SPEED);
 827              		.loc 1 563 0
 828 047a 0094     		str	r4, [sp]
 829 047c 0023     		movs	r3, #0
 830 047e 0422     		movs	r2, #4
 831 0480 0121     		movs	r1, #1
 832 0482 8220     		movs	r0, #130
 833 0484 FFF7FEFF 		bl	moveUntil
 834              	.LVL122:
 564:main.c        ****                 //displaceLeft(); Repeatedly call this if below function not implemented
 565:main.c        ****                 //displaceLeftUntil(CLEARANCE_RADIUS_CENTER_TO_BACK,RIGHT);
 566:main.c        ****                 changeOrientation(WEST, SPEED);
 835              		.loc 1 566 0
 836 0488 2146     		mov	r1, r4
 837 048a 0320     		movs	r0, #3
 838 048c FFF7FEFF 		bl	changeOrientation
 839              	.LVL123:
 567:main.c        ****                 //displaceLeft();
 568:main.c        ****                 //displaceLeftUntil(DISTANCE_PUCKS_FROM_NORTH + WIDTH_SENSOR_TO_CENTER ,RIGHT);
 569:main.c        ****                 moveUntil(DISTANCE_STOPPED_FROM_PUCK, FORWARD, LESS_THAN, FRONT_LEFT, SPEED);
 840              		.loc 1 569 0
 841 0490 0094     		str	r4, [sp]
 842 0492 0023     		movs	r3, #0
 843 0494 0422     		movs	r2, #4
 844 0496 0121     		movs	r1, #1
 845 0498 3220     		movs	r0, #50
 846 049a FFF7FEFF 		bl	moveUntil
 847              	.LVL124:
 848              	.L20:
 570:main.c        ****                 
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccRuSwul.s 			page 26


 571:main.c        ****             }
 572:main.c        **** 
 573:main.c        ****         }
 574:main.c        ****         
 575:main.c        ****         if (state == STATE_FIND_REQUIRED_PUCK){
 849              		.loc 1 575 0
 850 049e 694B     		ldr	r3, .L47+4
 851 04a0 5B68     		ldr	r3, [r3, #4]
 852 04a2 042B     		cmp	r3, #4
 853 04a4 47D1     		bne	.L24
 854              	.LVL125:
 855              	.LBB9:
 576:main.c        ****         
 577:main.c        ****         int puck_correct = FALSE;   // A flag to determine if the correct puck has been picked up
 578:main.c        ****         int puck_scan;
 579:main.c        ****         
 580:main.c        ****         current_stage = 1;
 856              		.loc 1 580 0
 857 04a6 0123     		movs	r3, #1
 858 04a8 664A     		ldr	r2, .L47+4
 859 04aa 9360     		str	r3, [r2, #8]
 581:main.c        ****         puckConstructionPlan[0] = RED;
 860              		.loc 1 581 0
 861 04ac 644A     		ldr	r2, .L47
 862 04ae 9361     		str	r3, [r2, #24]
 582:main.c        ****     
 583:main.c        ****         // Scanning puck:
 584:main.c        ****             
 585:main.c        ****         safety_override = TRUE;     // DEACTIVATES the safety override so pucks don't interfere  
 863              		.loc 1 585 0
 864 04b0 9364     		str	r3, [r2, #72]
 577:main.c        ****         int puck_scan;
 865              		.loc 1 577 0
 866 04b2 0025     		movs	r5, #0
 586:main.c        **** 
 587:main.c        ****         while (puck_correct == FALSE) 
 867              		.loc 1 587 0
 868 04b4 2AE0     		b	.L26
 869              	.LVL126:
 870              	.L27:
 588:main.c        ****         {
 589:main.c        ****             moveDynamic(50, SPEED_LOW);  // robot moves forward towards puck
 871              		.loc 1 589 0
 872 04b6 4621     		movs	r1, #70
 873 04b8 3220     		movs	r0, #50
 874 04ba FFF7FEFF 		bl	moveDynamic
 875              	.LVL127:
 590:main.c        ****                                     // could replace this with the distance gathered from the ultra
 591:main.c        ****             changeHeightToPuck(ABOVE_1_PUCK);  // arm lowers onto robot
 876              		.loc 1 591 0
 877 04be 0120     		movs	r0, #1
 878 04c0 FFF7FEFF 		bl	changeHeightToPuck
 879              	.LVL128:
 592:main.c        ****             puck_scan = colourSensingOutput();  // colour sensor takes a scan
 880              		.loc 1 592 0
 881 04c4 FFF7FEFF 		bl	colourSensingOutput
 882              	.LVL129:
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccRuSwul.s 			page 27


 883 04c8 0446     		mov	r4, r0
 884              	.LVL130:
 593:main.c        ****             changeHeightToPuck(ABOVE_3_PUCK);  // arm returns to high position
 885              		.loc 1 593 0
 886 04ca 0320     		movs	r0, #3
 887              	.LVL131:
 888 04cc FFF7FEFF 		bl	changeHeightToPuck
 889              	.LVL132:
 594:main.c        ****             moveDynamic(-50, SPEED);   // robot moves backwards
 890              		.loc 1 594 0
 891 04d0 AA21     		movs	r1, #170
 892 04d2 6FF03100 		mvn	r0, #49
 893 04d6 FFF7FEFF 		bl	moveDynamic
 894              	.LVL133:
 595:main.c        ****             if (puck_scan == puckConstructionPlan[current_stage-1]) {puck_correct = TRUE;}         
 895              		.loc 1 595 0
 896 04da 5A4B     		ldr	r3, .L47+4
 897 04dc 9B68     		ldr	r3, [r3, #8]
 898 04de 5A1E     		subs	r2, r3, #1
 899 04e0 574B     		ldr	r3, .L47
 900 04e2 03EB8203 		add	r3, r3, r2, lsl #2
 901 04e6 9B69     		ldr	r3, [r3, #24]
 902 04e8 9C42     		cmp	r4, r3
 903 04ea 0ED0     		beq	.L43
 596:main.c        ****             else 
 597:main.c        ****             {
 598:main.c        ****                 // Bring us to the next puck along: 
 599:main.c        ****                 moveSwivel(45, SPEED);
 904              		.loc 1 599 0
 905 04ec AA21     		movs	r1, #170
 906 04ee 2D20     		movs	r0, #45
 907 04f0 FFF7FEFF 		bl	moveSwivel
 908              	.LVL134:
 600:main.c        ****                 moveDynamic(-30,SPEED);
 909              		.loc 1 600 0
 910 04f4 AA21     		movs	r1, #170
 911 04f6 6FF01D00 		mvn	r0, #29
 912 04fa FFF7FEFF 		bl	moveDynamic
 913              	.LVL135:
 601:main.c        ****                 moveSwivel(-30, SPEED);        
 914              		.loc 1 601 0
 915 04fe AA21     		movs	r1, #170
 916 0500 6FF01D00 		mvn	r0, #29
 917 0504 FFF7FEFF 		bl	moveSwivel
 918              	.LVL136:
 919 0508 00E0     		b	.L26
 920              	.L43:
 595:main.c        ****             else 
 921              		.loc 1 595 0
 922 050a 0125     		movs	r5, #1
 923              	.LVL137:
 924              	.L26:
 587:main.c        ****         {
 925              		.loc 1 587 0
 926 050c 002D     		cmp	r5, #0
 927 050e D2D0     		beq	.L27
 602:main.c        ****             }
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccRuSwul.s 			page 28


 603:main.c        ****         }
 604:main.c        ****                 
 605:main.c        ****         
 606:main.c        ****         
 607:main.c        ****         changeHeightToPuck(GROUND);      // arm lowers to ground
 928              		.loc 1 607 0
 929 0510 0020     		movs	r0, #0
 930 0512 FFF7FEFF 		bl	changeHeightToPuck
 931              	.LVL138:
 608:main.c        ****         //armClose();
 609:main.c        ****         //changeHeightToPuck(1);
 610:main.c        ****         moveUntilPuck(CLAW_GROUND_ALGORITHM);
 932              		.loc 1 610 0
 933 0516 0220     		movs	r0, #2
 934 0518 FFF7FEFF 		bl	moveUntilPuck
 935              	.LVL139:
 611:main.c        ****         //moveDynamic(60);       // robot moves forward
 612:main.c        ****         armClose();                 // claw closes on puck
 936              		.loc 1 612 0
 937 051c FFF7FEFF 		bl	armClose
 938              	.LVL140:
 613:main.c        ****         changeHeightToPuck(3);      // arm lifts up to highest position
 939              		.loc 1 613 0
 940 0520 0320     		movs	r0, #3
 941 0522 FFF7FEFF 		bl	changeHeightToPuck
 942              	.LVL141:
 614:main.c        ****         moveDynamic(-60, SPEED);       // robot moves back away from puck area 
 943              		.loc 1 614 0
 944 0526 AA21     		movs	r1, #170
 945 0528 6FF03B00 		mvn	r0, #59
 946 052c FFF7FEFF 		bl	moveDynamic
 947              	.LVL142:
 615:main.c        ****         
 616:main.c        ****         
 617:main.c        ****         safety_override = FALSE;        // reactivate safety override
 948              		.loc 1 617 0
 949 0530 0022     		movs	r2, #0
 950 0532 434B     		ldr	r3, .L47
 951 0534 9A64     		str	r2, [r3, #72]
 952              	.LVL143:
 953              	.L24:
 954              	.LBE9:
 618:main.c        ****         
 619:main.c        ****                     
 620:main.c        ****         
 621:main.c        ****             
 622:main.c        ****             /*
 623:main.c        ****             int requiredColour = puckConstructionPlan[currentPuckStackSize];
 624:main.c        ****             int puckFound = 0;
 625:main.c        ****             
 626:main.c        ****             
 627:main.c        ****             // Let's assume that we get to the east or west of the puck pile and we are as close to
 628:main.c        ****             if (roundDirection() == NORTH){
 629:main.c        **** 
 630:main.c        ****             }
 631:main.c        ****             else if (roundDirection() == EAST){
 632:main.c        ****                 // Poll ultrasonics, displaceRight until no longer see the pucks
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccRuSwul.s 			page 29


 633:main.c        ****                 // Drive up to the middle puck
 634:main.c        ****                 // We know that we used moveAndAngle() to get to the exact vertical position of the
 635:main.c        ****                 moveForwardIndefinitely();
 636:main.c        ****                 
 637:main.c        ****                 // May need to displaceRight a bit to ensure that we are perfectly centered with th
 638:main.c        ****                 // Now we need to inch forward with the claw lifted
 639:main.c        ****                 // Also store the horizontal location of the pucks based off our current position. 
 640:main.c        ****                 
 641:main.c        ****                 horizontalPuckGrid = currentPosition[0]; // Take our horizontal position as a refer
 642:main.c        ****                 
 643:main.c        ****                 changeHeightToPuck(1); // Lift up enough so we dont hit the pucks when scanning the
 644:main.c        ****                 moveForward(DISTANCE_STOPPED_FROM_PUCK); // Move forward until colour sensor above 
 645:main.c        ****                
 646:main.c        ****                 if (colourSensingOutput() == puckConstructionPlan[currentPuckStackSize]){ 
 647:main.c        ****                     // This is the puck we need
 648:main.c        ****                     moveBackward(DISTANCE_STOPPED_FROM_PUCK); // Reverse to make room for lowering 
 649:main.c        ****                     lowerAndOpen(0); // We are grabbing the pucks from the ground.
 650:main.c        ****                     moveForward(DISTANCE_STOPPED_FROM_PUCK);
 651:main.c        ****                     closeAndRaise(1); // Lift above the height of the ground pucks
 652:main.c        **** 
 653:main.c        ****                 }
 654:main.c        ****                 
 655:main.c        ****                 // If the colour isn't what we need, we could pick it up and drop it somewhere out 
 656:main.c        ****                 else {
 657:main.c        ****                     moveBackward(DISTANCE_STOPPED_FROM_PUCK); // Need to check the next puck
 658:main.c        ****                     displaceLeft(5,22);
 659:main.c        ****                     changeHeightToPuck(1); // Lift up enough so we dont hit the pucks when scanning
 660:main.c        ****                     moveForward(DISTANCE_STOPPED_FROM_PUCK); // Move forward until colour sensor ab
 661:main.c        ****                     
 662:main.c        ****                     // Scan the next puck
 663:main.c        ****                     if (colourSensingOutput() == puckConstructionPlan[currentPuckStackSize]){ 
 664:main.c        ****                         // This is the puck we need
 665:main.c        ****                         moveBackward(DISTANCE_STOPPED_FROM_PUCK); // Reverse to make room for lower
 666:main.c        ****                         lowerAndOpen(0); // We are grabbing the pucks from the ground.
 667:main.c        ****                         moveForward(DISTANCE_STOPPED_FROM_PUCK);
 668:main.c        ****                         closeAndRaise(1); // Lift above the height of the ground pucks
 669:main.c        **** 
 670:main.c        ****                     }
 671:main.c        ****                     
 672:main.c        ****                     else {
 673:main.c        ****                         moveBackward(DISTANCE_STOPPED_FROM_PUCK); // Need to check the next puck
 674:main.c        ****                         displaceLeft(5,22);
 675:main.c        ****                         changeHeightToPuck(1); // Lift up enough so we dont hit the pucks when scan
 676:main.c        ****                         moveForward(DISTANCE_STOPPED_FROM_PUCK); // Move forward until colour senso
 677:main.c        ****                         
 678:main.c        ****                         if (colourSensingOutput() == puckConstructionPlan[currentPuckStackSize]){ 
 679:main.c        ****                             // This is the puck we need
 680:main.c        ****                             moveBackward(DISTANCE_STOPPED_FROM_PUCK); // Reverse to make room for l
 681:main.c        ****                             lowerAndOpen(0); // We are grabbing the pucks from the ground.
 682:main.c        ****                             moveForward(DISTANCE_STOPPED_FROM_PUCK);
 683:main.c        ****                             closeAndRaise(1); // Lift above the height of the ground pucks
 684:main.c        **** 
 685:main.c        ****                         }
 686:main.c        ****                     
 687:main.c        ****                     }
 688:main.c        ****                 }
 689:main.c        ****                 
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccRuSwul.s 			page 30


 690:main.c        ****                 if (colourSensingOutput() == puckConstructionPlan[currentPuckStackSize]){ 
 691:main.c        ****                     // This is the puck we need
 692:main.c        ****                     moveBackward(DISTANCE_STOPPED_FROM_PUCK); // Reverse to make room for lowering 
 693:main.c        ****                     lowerAndOpen(0); // We are grabbing the pucks from the ground.
 694:main.c        ****                     moveForward(DISTANCE_STOPPED_FROM_PUCK);
 695:main.c        ****                     closeAndRaise(1); // Lift above the height of the ground pucks
 696:main.c        **** 
 697:main.c        ****                 }
 698:main.c        ****                 
 699:main.c        ****             }
 700:main.c        ****             
 701:main.c        ****             else if (roundDirection() == WEST){
 702:main.c        ****                 // Poll ultrasonics, displaceRight until no longer see the pucks
 703:main.c        ****                 // Drive up to the middle puck
 704:main.c        ****                 // We know that we used moveAndAngle() to get to the exact vertical position of the
 705:main.c        ****                 moveForwardIndefinitely();
 706:main.c        ****             }
 707:main.c        ****             
 708:main.c        ****             */
 709:main.c        ****             
 710:main.c        ****             /*
 711:main.c        ****             while(!puckFound){
 712:main.c        ****                   
 713:main.c        ****             }
 714:main.c        ****             */
 715:main.c        ****             
 716:main.c        ****             
 717:main.c        ****         }
 718:main.c        ****         
 719:main.c        ****         // Assume that we are currently in the north side of the arena facing the pucks.
 720:main.c        ****         // This state will return us to the south side of the block and face east at the east wall.
 721:main.c        ****         if (state == STATE_RETURN_TO_SOUTH){
 955              		.loc 1 721 0
 956 0536 434B     		ldr	r3, .L47+4
 957 0538 5B68     		ldr	r3, [r3, #4]
 958 053a 052B     		cmp	r3, #5
 959 053c 40F0D880 		bne	.L28
 722:main.c        ****             if (blockEastClearance && puckEastClearance){
 960              		.loc 1 722 0
 961 0540 3F4B     		ldr	r3, .L47
 962 0542 B3F91020 		ldrsh	r2, [r3, #16]
 963 0546 4AB3     		cbz	r2, .L29
 964              		.loc 1 722 0 is_stmt 0 discriminator 1
 965 0548 B3F91430 		ldrsh	r3, [r3, #20]
 966 054c 33B3     		cbz	r3, .L29
 723:main.c        ****                 
 724:main.c        ****                 moveUntil(CLEARANCE_RADIUS_CENTER_TO_BACK - 140, BACKWARD, LESS_THAN, BACK, SPEED);
 967              		.loc 1 724 0 is_stmt 1
 968 054e AA24     		movs	r4, #170
 969 0550 0094     		str	r4, [sp]
 970 0552 0423     		movs	r3, #4
 971 0554 1A46     		mov	r2, r3
 972 0556 0021     		movs	r1, #0
 973 0558 6420     		movs	r0, #100
 974 055a FFF7FEFF 		bl	moveUntil
 975              	.LVL144:
 725:main.c        ****                 // straightAdjust() using back sensor?
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccRuSwul.s 			page 31


 726:main.c        ****                 changeOrientation(NORTH,SPEED);
 976              		.loc 1 726 0
 977 055e 2146     		mov	r1, r4
 978 0560 0020     		movs	r0, #0
 979 0562 FFF7FEFF 		bl	changeOrientation
 980              	.LVL145:
 727:main.c        ****                 straightAdjust();
 981              		.loc 1 727 0
 982 0566 FFF7FEFF 		bl	straightAdjust
 983              	.LVL146:
 728:main.c        ****                 moveUntil(CLEARANCE_RADIUS_CENTER_TO_BACK, BACKWARD, LESS_THAN, BACK, SPEED); // Ma
 984              		.loc 1 728 0
 985 056a 0094     		str	r4, [sp]
 986 056c 0423     		movs	r3, #4
 987 056e 1A46     		mov	r2, r3
 988 0570 0021     		movs	r1, #0
 989 0572 F020     		movs	r0, #240
 990 0574 FFF7FEFF 		bl	moveUntil
 991              	.LVL147:
 729:main.c        ****                 straightAdjust();
 992              		.loc 1 729 0
 993 0578 FFF7FEFF 		bl	straightAdjust
 994              	.LVL148:
 730:main.c        ****                 changeOrientation(EAST,SPEED);
 995              		.loc 1 730 0
 996 057c 2146     		mov	r1, r4
 997 057e 0120     		movs	r0, #1
 998 0580 FFF7FEFF 		bl	changeOrientation
 999              	.LVL149:
 731:main.c        ****                 straightAdjust();
 1000              		.loc 1 731 0
 1001 0584 FFF7FEFF 		bl	straightAdjust
 1002              	.LVL150:
 732:main.c        ****                 moveUntil(CLEARANCE_RADIUS_CENTER_TO_FRONT, FORWARD, LESS_THAN, FRONT_LEFT, SPEED);
 1003              		.loc 1 732 0
 1004 0588 0094     		str	r4, [sp]
 1005 058a 0023     		movs	r3, #0
 1006 058c 0422     		movs	r2, #4
 1007 058e 0121     		movs	r1, #1
 1008 0590 8220     		movs	r0, #130
 1009 0592 FFF7FEFF 		bl	moveUntil
 1010              	.LVL151:
 733:main.c        ****                 straightAdjust();
 1011              		.loc 1 733 0
 1012 0596 FFF7FEFF 		bl	straightAdjust
 1013              	.LVL152:
 1014 059a A6E0     		b	.L30
 1015              	.L29:
 734:main.c        ****                 
 735:main.c        ****             }
 736:main.c        ****             
 737:main.c        ****             else if (blockWestClearance && puckWestClearance){
 1016              		.loc 1 737 0
 1017 059c 284B     		ldr	r3, .L47
 1018 059e B3F91230 		ldrsh	r3, [r3, #18]
 1019 05a2 002B     		cmp	r3, #0
 1020 05a4 50D0     		beq	.L31
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccRuSwul.s 			page 32


 1021              		.loc 1 737 0 is_stmt 0 discriminator 1
 1022 05a6 2649     		ldr	r1, .L47
 1023 05a8 B1F91610 		ldrsh	r1, [r1, #22]
 1024 05ac 0029     		cmp	r1, #0
 1025 05ae 4BD0     		beq	.L31
 738:main.c        ****             
 739:main.c        ****                 moveUntil(CLEARANCE_RADIUS_CENTER_TO_BACK - 140, BACKWARD, LESS_THAN, BACK, SPEED);
 1026              		.loc 1 739 0 is_stmt 1
 1027 05b0 AA24     		movs	r4, #170
 1028 05b2 0094     		str	r4, [sp]
 1029 05b4 0423     		movs	r3, #4
 1030 05b6 1A46     		mov	r2, r3
 1031 05b8 0021     		movs	r1, #0
 1032 05ba 6420     		movs	r0, #100
 1033 05bc FFF7FEFF 		bl	moveUntil
 1034              	.LVL153:
 740:main.c        ****                 // straightAdjust() using back sensor?
 741:main.c        ****                 changeOrientation(NORTH,SPEED);
 1035              		.loc 1 741 0
 1036 05c0 2146     		mov	r1, r4
 1037 05c2 0020     		movs	r0, #0
 1038 05c4 FFF7FEFF 		bl	changeOrientation
 1039              	.LVL154:
 742:main.c        ****                 straightAdjust();
 1040              		.loc 1 742 0
 1041 05c8 FFF7FEFF 		bl	straightAdjust
 1042              	.LVL155:
 743:main.c        ****                 moveUntil(CLEARANCE_RADIUS_CENTER_TO_BACK, BACKWARD, LESS_THAN, BACK, SPEED); // Ma
 1043              		.loc 1 743 0
 1044 05cc 0094     		str	r4, [sp]
 1045 05ce 0423     		movs	r3, #4
 1046 05d0 1A46     		mov	r2, r3
 1047 05d2 0021     		movs	r1, #0
 1048 05d4 F020     		movs	r0, #240
 1049 05d6 FFF7FEFF 		bl	moveUntil
 1050              	.LVL156:
 744:main.c        ****                 straightAdjust();
 1051              		.loc 1 744 0
 1052 05da FFF7FEFF 		bl	straightAdjust
 1053              	.LVL157:
 745:main.c        ****                 changeOrientation(EAST,SPEED);
 1054              		.loc 1 745 0
 1055 05de 2146     		mov	r1, r4
 1056 05e0 0120     		movs	r0, #1
 1057 05e2 FFF7FEFF 		bl	changeOrientation
 1058              	.LVL158:
 746:main.c        ****                 straightAdjust();
 1059              		.loc 1 746 0
 1060 05e6 FFF7FEFF 		bl	straightAdjust
 1061              	.LVL159:
 747:main.c        ****                 moveUntil(CLEARANCE_RADIUS_CENTER_TO_FRONT, FORWARD, LESS_THAN, FRONT_LEFT, SPEED);
 1062              		.loc 1 747 0
 1063 05ea 0094     		str	r4, [sp]
 1064 05ec 0023     		movs	r3, #0
 1065 05ee 0422     		movs	r2, #4
 1066 05f0 0121     		movs	r1, #1
 1067 05f2 8220     		movs	r0, #130
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccRuSwul.s 			page 33


 1068 05f4 FFF7FEFF 		bl	moveUntil
 1069              	.LVL160:
 748:main.c        ****                 straightAdjust();
 1070              		.loc 1 748 0
 1071 05f8 FFF7FEFF 		bl	straightAdjust
 1072              	.LVL161:
 749:main.c        **** 
 750:main.c        ****                 
 751:main.c        ****                 //moveUntil(CLEARANCE_RADIUS_CENTER_TO_FRONT, BACKWARD, GREATER_THAN, FRONT_LEFT, S
 752:main.c        ****                 moveUntil(CLEARANCE_RADIUS_CENTER_TO_BACK, BACKWARD, LESS_THAN, BACK, SPEED);
 1073              		.loc 1 752 0
 1074 05fc 0094     		str	r4, [sp]
 1075 05fe 0423     		movs	r3, #4
 1076 0600 1A46     		mov	r2, r3
 1077 0602 0021     		movs	r1, #0
 1078 0604 F020     		movs	r0, #240
 1079 0606 FFF7FEFF 		bl	moveUntil
 1080              	.LVL162:
 753:main.c        ****                 straightAdjust();
 1081              		.loc 1 753 0
 1082 060a FFF7FEFF 		bl	straightAdjust
 1083              	.LVL163:
 754:main.c        ****                 changeOrientation(NORTH, SPEED);
 1084              		.loc 1 754 0
 1085 060e 2146     		mov	r1, r4
 1086 0610 0020     		movs	r0, #0
 1087 0612 FFF7FEFF 		bl	changeOrientation
 1088              	.LVL164:
 755:main.c        ****                 straightAdjust();
 1089              		.loc 1 755 0
 1090 0616 FFF7FEFF 		bl	straightAdjust
 1091              	.LVL165:
 756:main.c        ****                 moveUntil(CLEARANCE_RADIUS_CENTER_TO_FRONT, FORWARD, LESS_THAN, FRONT_LEFT, SPEED);
 1092              		.loc 1 756 0
 1093 061a 0094     		str	r4, [sp]
 1094 061c 0023     		movs	r3, #0
 1095 061e 0422     		movs	r2, #4
 1096 0620 0121     		movs	r1, #1
 1097 0622 8220     		movs	r0, #130
 1098 0624 FFF7FEFF 		bl	moveUntil
 1099              	.LVL166:
 757:main.c        ****                 //displaceLeft(); Repeatedly call this if below function not implemented
 758:main.c        ****                 //displaceLeftUntil(CLEARANCE_RADIUS_CENTER_TO_BACK,RIGHT);
 759:main.c        ****                 changeOrientation(EAST, SPEED);
 1100              		.loc 1 759 0
 1101 0628 2146     		mov	r1, r4
 1102 062a 0120     		movs	r0, #1
 1103 062c FFF7FEFF 		bl	changeOrientation
 1104              	.LVL167:
 760:main.c        ****                 //displaceLeft();
 761:main.c        ****                 //displaceLeftUntil(DISTANCE_PUCKS_FROM_NORTH + WIDTH_SENSOR_TO_CENTER ,RIGHT);
 762:main.c        ****                 moveUntil(DISTANCE_STOPPED_FROM_PUCK, FORWARD, LESS_THAN, FRONT_LEFT, SPEED);
 1105              		.loc 1 762 0
 1106 0630 0094     		str	r4, [sp]
 1107 0632 0023     		movs	r3, #0
 1108 0634 0422     		movs	r2, #4
 1109 0636 0121     		movs	r1, #1
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccRuSwul.s 			page 34


 1110 0638 3220     		movs	r0, #50
 1111 063a FFF7FEFF 		bl	moveUntil
 1112              	.LVL168:
 1113 063e 54E0     		b	.L30
 1114              	.L48:
 1115              		.align	2
 1116              	.L47:
 1117 0640 00000000 		.word	.LANCHOR0
 1118 0644 00000000 		.word	.LANCHOR1
 1119              	.L31:
 763:main.c        ****                             
 764:main.c        ****             }
 765:main.c        ****             
 766:main.c        ****             
 767:main.c        ****             else if (blockEastClearance && puckWestClearance){
 1120              		.loc 1 767 0
 1121 0648 3AB3     		cbz	r2, .L32
 1122              		.loc 1 767 0 is_stmt 0 discriminator 1
 1123 064a 8A4A     		ldr	r2, .L49
 1124 064c B2F91620 		ldrsh	r2, [r2, #22]
 1125 0650 1AB3     		cbz	r2, .L32
 768:main.c        **** 
 769:main.c        ****                 moveUntil(block_and_puck_edge_midpoint - DISTANCE_BACK_SENSOR_FROM_CENTER, BACKWARD
 1126              		.loc 1 769 0 is_stmt 1
 1127 0652 AA24     		movs	r4, #170
 1128 0654 0094     		str	r4, [sp]
 1129 0656 0423     		movs	r3, #4
 1130 0658 1A46     		mov	r2, r3
 1131 065a 0021     		movs	r1, #0
 1132 065c 4FF48770 		mov	r0, #270
 1133 0660 FFF7FEFF 		bl	moveUntil
 1134              	.LVL169:
 770:main.c        ****                 straightAdjust();
 1135              		.loc 1 770 0
 1136 0664 FFF7FEFF 		bl	straightAdjust
 1137              	.LVL170:
 771:main.c        ****                 changeOrientation(NORTH, SPEED);
 1138              		.loc 1 771 0
 1139 0668 2146     		mov	r1, r4
 1140 066a 0020     		movs	r0, #0
 1141 066c FFF7FEFF 		bl	changeOrientation
 1142              	.LVL171:
 772:main.c        ****                 straightAdjust();
 1143              		.loc 1 772 0
 1144 0670 FFF7FEFF 		bl	straightAdjust
 1145              	.LVL172:
 773:main.c        ****                 moveUntil(CLEARANCE_RADIUS_CENTER_TO_FRONT, FORWARD, LESS_THAN, FRONT_LEFT, SPEED);
 1146              		.loc 1 773 0
 1147 0674 0094     		str	r4, [sp]
 1148 0676 0023     		movs	r3, #0
 1149 0678 0422     		movs	r2, #4
 1150 067a 0121     		movs	r1, #1
 1151 067c 8220     		movs	r0, #130
 1152 067e FFF7FEFF 		bl	moveUntil
 1153              	.LVL173:
 774:main.c        ****                 //displaceLeft(); Repeatedly call this if below function not implemented
 775:main.c        ****                 //displaceLeftUntil(CLEARANCE_RADIUS_CENTER_TO_BACK,RIGHT);
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccRuSwul.s 			page 35


 776:main.c        ****                 changeOrientation(EAST, SPEED);
 1154              		.loc 1 776 0
 1155 0682 2146     		mov	r1, r4
 1156 0684 0120     		movs	r0, #1
 1157 0686 FFF7FEFF 		bl	changeOrientation
 1158              	.LVL174:
 777:main.c        ****                 //displaceLeft();
 778:main.c        ****                 //displaceLeftUntil(DISTANCE_PUCKS_FROM_NORTH + WIDTH_SENSOR_TO_CENTER ,RIGHT);
 779:main.c        ****                 moveUntil(DISTANCE_STOPPED_FROM_PUCK, FORWARD, LESS_THAN, FRONT_LEFT, SPEED);
 1159              		.loc 1 779 0
 1160 068a 0094     		str	r4, [sp]
 1161 068c 0023     		movs	r3, #0
 1162 068e 0422     		movs	r2, #4
 1163 0690 0121     		movs	r1, #1
 1164 0692 3220     		movs	r0, #50
 1165 0694 FFF7FEFF 		bl	moveUntil
 1166              	.LVL175:
 1167 0698 27E0     		b	.L30
 1168              	.L32:
 780:main.c        ****                 
 781:main.c        ****             }
 782:main.c        ****             
 783:main.c        ****             else if (blockWestClearance && puckEastClearance){
 1169              		.loc 1 783 0
 1170 069a 33B3     		cbz	r3, .L30
 1171              		.loc 1 783 0 is_stmt 0 discriminator 1
 1172 069c 754B     		ldr	r3, .L49
 1173 069e B3F91430 		ldrsh	r3, [r3, #20]
 1174 06a2 13B3     		cbz	r3, .L30
 784:main.c        ****                 
 785:main.c        ****                 moveUntil(block_and_puck_edge_midpoint - DISTANCE_BACK_SENSOR_FROM_CENTER, BACKWARD
 1175              		.loc 1 785 0 is_stmt 1
 1176 06a4 AA24     		movs	r4, #170
 1177 06a6 0094     		str	r4, [sp]
 1178 06a8 0423     		movs	r3, #4
 1179 06aa 1A46     		mov	r2, r3
 1180 06ac 0021     		movs	r1, #0
 1181 06ae 4FF48770 		mov	r0, #270
 1182 06b2 FFF7FEFF 		bl	moveUntil
 1183              	.LVL176:
 786:main.c        ****                 straightAdjust();
 1184              		.loc 1 786 0
 1185 06b6 FFF7FEFF 		bl	straightAdjust
 1186              	.LVL177:
 787:main.c        ****                 changeOrientation(NORTH, SPEED);
 1187              		.loc 1 787 0
 1188 06ba 2146     		mov	r1, r4
 1189 06bc 0020     		movs	r0, #0
 1190 06be FFF7FEFF 		bl	changeOrientation
 1191              	.LVL178:
 788:main.c        ****                 straightAdjust();
 1192              		.loc 1 788 0
 1193 06c2 FFF7FEFF 		bl	straightAdjust
 1194              	.LVL179:
 789:main.c        ****                 moveUntil(CLEARANCE_RADIUS_CENTER_TO_FRONT, FORWARD, LESS_THAN, FRONT_LEFT, SPEED);
 1195              		.loc 1 789 0
 1196 06c6 0094     		str	r4, [sp]
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccRuSwul.s 			page 36


 1197 06c8 0023     		movs	r3, #0
 1198 06ca 0422     		movs	r2, #4
 1199 06cc 0121     		movs	r1, #1
 1200 06ce 8220     		movs	r0, #130
 1201 06d0 FFF7FEFF 		bl	moveUntil
 1202              	.LVL180:
 790:main.c        ****                 //displaceLeft(); Repeatedly call this if below function not implemented
 791:main.c        ****                 //displaceLeftUntil(CLEARANCE_RADIUS_CENTER_TO_BACK,RIGHT);
 792:main.c        ****                 changeOrientation(WEST, SPEED);
 1203              		.loc 1 792 0
 1204 06d4 2146     		mov	r1, r4
 1205 06d6 0320     		movs	r0, #3
 1206 06d8 FFF7FEFF 		bl	changeOrientation
 1207              	.LVL181:
 793:main.c        ****                 //displaceLeft();
 794:main.c        ****                 //displaceLeftUntil(DISTANCE_PUCKS_FROM_NORTH + WIDTH_SENSOR_TO_CENTER ,RIGHT);
 795:main.c        ****                 moveUntil(DISTANCE_STOPPED_FROM_PUCK, FORWARD, LESS_THAN, FRONT_LEFT, SPEED);
 1208              		.loc 1 795 0
 1209 06dc 0094     		str	r4, [sp]
 1210 06de 0023     		movs	r3, #0
 1211 06e0 0422     		movs	r2, #4
 1212 06e2 0121     		movs	r1, #1
 1213 06e4 3220     		movs	r0, #50
 1214 06e6 FFF7FEFF 		bl	moveUntil
 1215              	.LVL182:
 1216              	.L30:
 796:main.c        ****                 
 797:main.c        ****             }   
 798:main.c        ****             
 799:main.c        ****             state = STATE_DEPOSIT_PUCK;
 1217              		.loc 1 799 0
 1218 06ea 0622     		movs	r2, #6
 1219 06ec 624B     		ldr	r3, .L49+4
 1220 06ee 5A60     		str	r2, [r3, #4]
 1221              	.L28:
 800:main.c        ****         }
 801:main.c        ****         
 802:main.c        ****         // We choose where we put the puck. Depending if its needed now, later or never.
 803:main.c        ****         if (state == STATE_DEPOSIT_PUCK){
 1222              		.loc 1 803 0
 1223 06f0 614B     		ldr	r3, .L49+4
 1224 06f2 5B68     		ldr	r3, [r3, #4]
 1225 06f4 062B     		cmp	r3, #6
 1226 06f6 40F09D80 		bne	.L33
 1227              	.LBB10:
 804:main.c        ****                 
 805:main.c        ****             
 806:main.c        ****             // Temp grab puck
 807:main.c        ****             control_photodiode_Write(CLAW_SENSING);    // changes to claw photodiode
 1228              		.loc 1 807 0
 1229 06fa 0120     		movs	r0, #1
 1230 06fc FFF7FEFF 		bl	control_photodiode_Write
 1231              	.LVL183:
 808:main.c        ****             colour_sensing_algorithm = CLAW_GROUND_ALGORITHM;   // changes it to claw algorithm
 1232              		.loc 1 808 0
 1233 0700 5C4C     		ldr	r4, .L49
 1234 0702 0223     		movs	r3, #2
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccRuSwul.s 			page 37


 1235 0704 A360     		str	r3, [r4, #8]
 809:main.c        ****             
 810:main.c        ****             armOpen();
 1236              		.loc 1 810 0
 1237 0706 FFF7FEFF 		bl	armOpen
 1238              	.LVL184:
 811:main.c        ****             colourSensingInitialise();
 1239              		.loc 1 811 0
 1240 070a FFF7FEFF 		bl	colourSensingInitialise
 1241              	.LVL185:
 812:main.c        ****             CyDelay(2000);
 1242              		.loc 1 812 0
 1243 070e 4FF4FA60 		mov	r0, #2000
 1244 0712 FFF7FEFF 		bl	CyDelay
 1245              	.LVL186:
 813:main.c        ****             armClose();
 1246              		.loc 1 813 0
 1247 0716 FFF7FEFF 		bl	armClose
 1248              	.LVL187:
 814:main.c        ****             
 815:main.c        ****             
 816:main.c        ****             
 817:main.c        ****             
 818:main.c        ****             int heldColour = colourSensingOutput();
 1249              		.loc 1 818 0
 1250 071a FFF7FEFF 		bl	colourSensingOutput
 1251              	.LVL188:
 819:main.c        ****             //blinkLED(heldColour,500);
 820:main.c        ****             
 821:main.c        ****             
 822:main.c        ****             // TO DELETE
 823:main.c        ****             heldColour = current_stage; // temp checking it can stack with a fixed rgb order for si
 1252              		.loc 1 823 0
 1253 071e 564B     		ldr	r3, .L49+4
 1254 0720 9D68     		ldr	r5, [r3, #8]
 1255              	.LVL189:
 824:main.c        ****             
 825:main.c        ****             
 826:main.c        ****             if (heldColour == puckConstructionPlan[currentPuckStackSize] ) { // The currently held 
 1256              		.loc 1 826 0
 1257 0722 E368     		ldr	r3, [r4, #12]
 1258 0724 04EB8304 		add	r4, r4, r3, lsl #2
 1259 0728 A369     		ldr	r3, [r4, #24]
 1260 072a 9D42     		cmp	r5, r3
 1261 072c 14D1     		bne	.L34
 827:main.c        ****                 moveUntil(HOME_MIDPOINT - DISTANCE_FRONT_SENSOR_FROM_CENTER, BACKWARD, GREATER_THAN
 1262              		.loc 1 827 0
 1263 072e AA24     		movs	r4, #170
 1264 0730 0094     		str	r4, [sp]
 1265 0732 0023     		movs	r3, #0
 1266 0734 0522     		movs	r2, #5
 1267 0736 1946     		mov	r1, r3
 1268 0738 40F22620 		movw	r0, #550
 1269 073c FFF7FEFF 		bl	moveUntil
 1270              	.LVL190:
 828:main.c        ****                 changeOrientation(WEST,SPEED);
 1271              		.loc 1 828 0
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccRuSwul.s 			page 38


 1272 0740 2146     		mov	r1, r4
 1273 0742 0320     		movs	r0, #3
 1274 0744 FFF7FEFF 		bl	changeOrientation
 1275              	.LVL191:
 829:main.c        ****                 moveUntil(CONSTRUCTION_MIDPOINT - DISTANCE_FRONT_SENSOR_FROM_CENTER, FORWARD, LESS_
 1276              		.loc 1 829 0
 1277 0748 0094     		str	r4, [sp]
 1278 074a 0023     		movs	r3, #0
 1279 074c 0422     		movs	r2, #4
 1280 074e 0121     		movs	r1, #1
 1281 0750 FA20     		movs	r0, #250
 1282 0752 FFF7FEFF 		bl	moveUntil
 1283              	.LVL192:
 1284 0756 19E0     		b	.L35
 1285              	.L34:
 830:main.c        ****                 
 831:main.c        ****             }
 832:main.c        ****             else if ( heldColour == puckConstructionPlan[1] || heldColour == puckConstructionPlan[2
 1286              		.loc 1 832 0
 1287 0758 464B     		ldr	r3, .L49
 1288 075a DB69     		ldr	r3, [r3, #28]
 1289 075c 9D42     		cmp	r5, r3
 1290 075e 03D0     		beq	.L36
 1291              		.loc 1 832 0 is_stmt 0 discriminator 1
 1292 0760 444B     		ldr	r3, .L49
 1293 0762 1B6A     		ldr	r3, [r3, #32]
 1294 0764 9D42     		cmp	r5, r3
 1295 0766 09D1     		bne	.L37
 1296              	.L36:
 833:main.c        ****                 moveUntil(ARENA_WIDTH - FIRST_TEMP_DROPOFF + DISTANCE_FRONT_SENSOR_FROM_CENTER, BAC
 1297              		.loc 1 833 0 is_stmt 1
 1298 0768 AA23     		movs	r3, #170
 1299 076a 0093     		str	r3, [sp]
 1300 076c 0023     		movs	r3, #0
 1301 076e 0522     		movs	r2, #5
 1302 0770 1946     		mov	r1, r3
 1303 0772 40F20D20 		movw	r0, #525
 1304 0776 FFF7FEFF 		bl	moveUntil
 1305              	.LVL193:
 1306 077a 07E0     		b	.L35
 1307              	.L37:
 834:main.c        ****             }
 835:main.c        ****             
 836:main.c        ****             else {
 837:main.c        ****                 moveUntil(ARENA_WIDTH-FIRST_DISCARD_ZONE + DISTANCE_FRONT_SENSOR_FROM_CENTER, BACKW
 1308              		.loc 1 837 0
 1309 077c AA23     		movs	r3, #170
 1310 077e 0093     		str	r3, [sp]
 1311 0780 0023     		movs	r3, #0
 1312 0782 0522     		movs	r2, #5
 1313 0784 1946     		mov	r1, r3
 1314 0786 FA20     		movs	r0, #250
 1315 0788 FFF7FEFF 		bl	moveUntil
 1316              	.LVL194:
 1317              	.L35:
 838:main.c        ****             } // Discard the puck so drop it in rubbish pile
 839:main.c        **** 
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccRuSwul.s 			page 39


 840:main.c        ****             changeOrientation(SOUTH,SPEED);    
 1318              		.loc 1 840 0
 1319 078c AA21     		movs	r1, #170
 1320 078e 0220     		movs	r0, #2
 1321 0790 FFF7FEFF 		bl	changeOrientation
 1322              	.LVL195:
 841:main.c        ****             changeHeightToPuck(currentPuckStackSize + 1); // Lift claw above stack to avoid hitting
 1323              		.loc 1 841 0
 1324 0794 374C     		ldr	r4, .L49
 1325 0796 E068     		ldr	r0, [r4, #12]
 1326 0798 0130     		adds	r0, r0, #1
 1327 079a FFF7FEFF 		bl	changeHeightToPuck
 1328              	.LVL196:
 842:main.c        ****             
 843:main.c        ****             moveUntil(CONSTRUCTION_DISTANCE_FROM_WALL, FORWARD, LESS_THAN, FRONT_LEFT, SPEED);
 1329              		.loc 1 843 0
 1330 079e AA23     		movs	r3, #170
 1331 07a0 0093     		str	r3, [sp]
 1332 07a2 0023     		movs	r3, #0
 1333 07a4 0422     		movs	r2, #4
 1334 07a6 0121     		movs	r1, #1
 1335 07a8 5020     		movs	r0, #80
 1336 07aa FFF7FEFF 		bl	moveUntil
 1337              	.LVL197:
 844:main.c        ****             if (heldColour == puckConstructionPlan[currentPuckStackSize]){changeHeightToPuck(curren
 1338              		.loc 1 844 0
 1339 07ae E068     		ldr	r0, [r4, #12]
 1340 07b0 04EB8004 		add	r4, r4, r0, lsl #2
 1341 07b4 A369     		ldr	r3, [r4, #24]
 1342 07b6 9D42     		cmp	r5, r3
 1343 07b8 02D1     		bne	.L38
 1344              		.loc 1 844 0 is_stmt 0 discriminator 1
 1345 07ba FFF7FEFF 		bl	changeHeightToPuck
 1346              	.LVL198:
 1347 07be 02E0     		b	.L39
 1348              	.L38:
 845:main.c        ****             else {changeHeightToPuck(0);}
 1349              		.loc 1 845 0 is_stmt 1
 1350 07c0 0020     		movs	r0, #0
 1351 07c2 FFF7FEFF 		bl	changeHeightToPuck
 1352              	.LVL199:
 1353              	.L39:
 846:main.c        ****             armOpen();
 1354              		.loc 1 846 0
 1355 07c6 FFF7FEFF 		bl	armOpen
 1356              	.LVL200:
 847:main.c        ****             changeHeightToPuck(currentPuckStackSize + 1); // Move higher than stack to avoid hittin
 1357              		.loc 1 847 0
 1358 07ca 2A4B     		ldr	r3, .L49
 1359 07cc D868     		ldr	r0, [r3, #12]
 1360 07ce 0130     		adds	r0, r0, #1
 1361 07d0 FFF7FEFF 		bl	changeHeightToPuck
 1362              	.LVL201:
 848:main.c        ****             
 849:main.c        **** 
 850:main.c        ****             if (current_stage >= 3){state = STATE_PARK_HOME;}        // Returns to home 
 1363              		.loc 1 850 0
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccRuSwul.s 			page 40


 1364 07d4 284B     		ldr	r3, .L49+4
 1365 07d6 9B68     		ldr	r3, [r3, #8]
 1366 07d8 022B     		cmp	r3, #2
 1367 07da 03DD     		ble	.L40
 1368              		.loc 1 850 0 is_stmt 0 discriminator 1
 1369 07dc 0722     		movs	r2, #7
 1370 07de 264B     		ldr	r3, .L49+4
 1371 07e0 5A60     		str	r2, [r3, #4]
 1372 07e2 27E0     		b	.L33
 1373              	.L40:
 851:main.c        ****             else {current_stage++; currentPuckStackSize++;
 1374              		.loc 1 851 0 is_stmt 1
 1375 07e4 244D     		ldr	r5, .L49+4
 1376              	.LVL202:
 1377 07e6 0133     		adds	r3, r3, #1
 1378 07e8 AB60     		str	r3, [r5, #8]
 1379 07ea 224A     		ldr	r2, .L49
 1380 07ec D368     		ldr	r3, [r2, #12]
 1381 07ee 0133     		adds	r3, r3, #1
 1382 07f0 D360     		str	r3, [r2, #12]
 852:main.c        ****             // Need to go back to the east wall facing east.
 853:main.c        ****                 moveUntil(CONSTRUCTION_DISTANCE_CLEAR_FROM_STACK, BACKWARD, GREATER_THAN, FRONT_LEF
 1383              		.loc 1 853 0
 1384 07f2 AA24     		movs	r4, #170
 1385 07f4 0094     		str	r4, [sp]
 1386 07f6 0023     		movs	r3, #0
 1387 07f8 0522     		movs	r2, #5
 1388 07fa 1946     		mov	r1, r3
 1389 07fc D220     		movs	r0, #210
 1390 07fe FFF7FEFF 		bl	moveUntil
 1391              	.LVL203:
 854:main.c        ****                 changeOrientation(WEST,SPEED);
 1392              		.loc 1 854 0
 1393 0802 2146     		mov	r1, r4
 1394 0804 0320     		movs	r0, #3
 1395 0806 FFF7FEFF 		bl	changeOrientation
 1396              	.LVL204:
 855:main.c        ****                 moveUntil(HOME_MIDPOINT - DISTANCE_FRONT_SENSOR_FROM_CENTER, BACKWARD, GREATER_THAN
 1397              		.loc 1 855 0
 1398 080a 0094     		str	r4, [sp]
 1399 080c 0023     		movs	r3, #0
 1400 080e 0522     		movs	r2, #5
 1401 0810 1946     		mov	r1, r3
 1402 0812 40F22620 		movw	r0, #550
 1403 0816 FFF7FEFF 		bl	moveUntil
 1404              	.LVL205:
 856:main.c        ****                 changeOrientation(EAST,SPEED);
 1405              		.loc 1 856 0
 1406 081a 2146     		mov	r1, r4
 1407 081c 0120     		movs	r0, #1
 1408 081e FFF7FEFF 		bl	changeOrientation
 1409              	.LVL206:
 857:main.c        ****                 moveUntil(DISTANCE_FRONT_SENSOR_FROM_CENTER + SAFETY_MARGIN, BACKWARD, GREATER_THAN
 1410              		.loc 1 857 0
 1411 0822 0094     		str	r4, [sp]
 1412 0824 0023     		movs	r3, #0
 1413 0826 0522     		movs	r2, #5
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccRuSwul.s 			page 41


 1414 0828 1946     		mov	r1, r3
 1415 082a 7D20     		movs	r0, #125
 1416 082c FFF7FEFF 		bl	moveUntil
 1417              	.LVL207:
 858:main.c        ****                 
 859:main.c        ****                 
 860:main.c        ****                 //Usually we will check if the next colour we need is in home base already
 861:main.c        ****                 //
 862:main.c        ****                 if ( puckConstructionPlan[currentPuckStackSize] == puckColoursTempPile[0]){
 863:main.c        ****                     
 864:main.c        ****                 }
 865:main.c        ****                 else if(puckConstructionPlan[currentPuckStackSize] == puckColoursTempPile[1]){
 866:main.c        ****                          
 867:main.c        ****                 }
 868:main.c        ****                 
 869:main.c        ****                 
 870:main.c        ****                 //DELETE
 871:main.c        ****                 state = STATE_DEPOSIT_PUCK;
 1418              		.loc 1 871 0
 1419 0830 0623     		movs	r3, #6
 1420 0832 6B60     		str	r3, [r5, #4]
 1421              	.L33:
 1422              	.LBE10:
 872:main.c        ****             }
 873:main.c        ****             
 874:main.c        ****             
 875:main.c        **** 
 876:main.c        ****         }
 877:main.c        ****         
 878:main.c        ****         if (state == STATE_PARK_HOME){
 1423              		.loc 1 878 0
 1424 0834 104B     		ldr	r3, .L49+4
 1425 0836 5B68     		ldr	r3, [r3, #4]
 1426 0838 072B     		cmp	r3, #7
 1427 083a 7FF463AC 		bne	.L41
 879:main.c        ****             
 880:main.c        ****             // When we enter this state we can assume that we have just deposited the final puck on
 881:main.c        ****             // Thus we are facing the stack.
 882:main.c        ****             
 883:main.c        ****             
 884:main.c        ****             moveSwivel(90, SPEED);
 1428              		.loc 1 884 0
 1429 083e AA21     		movs	r1, #170
 1430 0840 5A20     		movs	r0, #90
 1431 0842 FFF7FEFF 		bl	moveSwivel
 1432              	.LVL208:
 885:main.c        ****             straightAdjust();
 1433              		.loc 1 885 0
 1434 0846 FFF7FEFF 		bl	straightAdjust
 1435              	.LVL209:
 886:main.c        ****             moveUntil(HOME_MIDPOINT - DISTANCE_FRONT_SENSOR_FROM_CENTER - 30 , BACKWARD, GREATER_TH
 1436              		.loc 1 886 0
 1437 084a AA24     		movs	r4, #170
 1438 084c 0094     		str	r4, [sp]
 1439 084e 0123     		movs	r3, #1
 1440 0850 0522     		movs	r2, #5
 1441 0852 0021     		movs	r1, #0
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccRuSwul.s 			page 42


 1442 0854 4FF40270 		mov	r0, #520
 1443 0858 FFF7FEFF 		bl	moveUntil
 1444              	.LVL210:
 887:main.c        ****             moveSwivel(90, SPEED);
 1445              		.loc 1 887 0
 1446 085c 2146     		mov	r1, r4
 1447 085e 5A20     		movs	r0, #90
 1448 0860 FFF7FEFF 		bl	moveSwivel
 1449              	.LVL211:
 888:main.c        ****             moveUntil(HOME_PARKING_DISTANCE , BACKWARD, LESS_THAN, BACK, SPEED);
 1450              		.loc 1 888 0
 1451 0864 0094     		str	r4, [sp]
 1452 0866 0423     		movs	r3, #4
 1453 0868 1A46     		mov	r2, r3
 1454 086a 0021     		movs	r1, #0
 1455 086c 2820     		movs	r0, #40
 1456 086e FFF7FEFF 		bl	moveUntil
 1457              	.LVL212:
 1458              	.L42:
 1459 0872 FEE7     		b	.L42
 1460              	.L50:
 1461              		.align	2
 1462              	.L49:
 1463 0874 00000000 		.word	.LANCHOR0
 1464 0878 00000000 		.word	.LANCHOR1
 1465              	.LBE2:
 1466              		.cfi_endproc
 1467              	.LFE66:
 1468              		.size	main, .-main
 1469              		.comm	distance_returned_global,4,4
 1470              		.global	current_stage
 1471              		.global	PLAN_SCAN_VERTICAL
 1472              		.global	moving
 1473              		.global	colour_sensing_algorithm
 1474              		.global	colour_flag
 1475              		.global	idac_value
 1476              		.global	puckWestClearance
 1477              		.global	puckEastClearance
 1478              		.global	blockWestClearance
 1479              		.global	blockEastClearance
 1480              		.global	safety_override
 1481              		.global	puck_location
 1482              		.global	block_location
 1483              		.comm	pathPastBlock,4,4
 1484              		.comm	pathToPucks,4,4
 1485              		.global	beginNavigation
 1486              		.global	horizontalPuckGrid
 1487              		.global	puckColoursTempPile
 1488              		.global	puckConstructionPlan
 1489              		.global	currentPuckStackSize
 1490              		.global	running
 1491              		.global	state
 1492              		.comm	ultrasonic_flag,4,4
 1493              		.comm	initialisation,4,4
 1494              		.comm	output,32,4
 1495              		.comm	turningRightFlag,2,2
 1496              		.comm	turningLeftFlag,2,2
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccRuSwul.s 			page 43


 1497              		.comm	drivingBackwardFlag,2,2
 1498              		.comm	drivingForwardFlag,2,2
 1499              		.comm	puckPileLocation,4,4
 1500              		.global	block_edge_location
 1501              		.global	sweeping
 1502              		.global	puckRackOffsetsFromWest
 1503              		.global	puckRackColours
 1504              		.global	currentPuckRackScanningIndex
 1505              		.comm	driveStraightEnable,4,4
 1506              		.comm	internal_orientation,4,4
 1507              		.section	.rodata
 1508              		.align	2
 1509              		.type	PLAN_SCAN_VERTICAL, %object
 1510              		.size	PLAN_SCAN_VERTICAL, 4
 1511              	PLAN_SCAN_VERTICAL:
 1512 0000 0A000000 		.word	10
 1513              		.data
 1514              		.align	2
 1515              		.set	.LANCHOR1,. + 0
 1516              		.type	colour_flag, %object
 1517              		.size	colour_flag, 4
 1518              	colour_flag:
 1519 0000 01000000 		.word	1
 1520              		.type	state, %object
 1521              		.size	state, 4
 1522              	state:
 1523 0004 01000000 		.word	1
 1524              		.type	current_stage, %object
 1525              		.size	current_stage, 4
 1526              	current_stage:
 1527 0008 01000000 		.word	1
 1528              		.type	running, %object
 1529              		.size	running, 4
 1530              	running:
 1531 000c 01000000 		.word	1
 1532              		.type	puckRackOffsetsFromWest, %object
 1533              		.size	puckRackOffsetsFromWest, 20
 1534              	puckRackOffsetsFromWest:
 1535 0010 D0020000 		.word	720
 1536 0014 94020000 		.word	660
 1537 0018 58020000 		.word	600
 1538 001c 1C020000 		.word	540
 1539 0020 E0010000 		.word	480
 1540              		.section	.rodata.str1.4,"aMS",%progbits,1
 1541              		.align	2
 1542              	.LC0:
 1543 0000 55415254 		.ascii	"UART commencing... \012\000"
 1543      20636F6D 
 1543      6D656E63 
 1543      696E672E 
 1543      2E2E200A 
 1544 0015 000000   		.space	3
 1545              	.LC1:
 1546 0018 556C7472 		.ascii	"Ultrasonic Calibration tests: \012\000"
 1546      61736F6E 
 1546      69632043 
 1546      616C6962 
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccRuSwul.s 			page 44


 1546      72617469 
 1547              	.LC2:
 1548 0038 466F756E 		.ascii	"Found Colours: \012\000"
 1548      6420436F 
 1548      6C6F7572 
 1548      733A200A 
 1548      00
 1549 0049 000000   		.space	3
 1550              	.LC3:
 1551 004c 2569200A 		.ascii	"%i \012\000"
 1551      00
 1552 0051 000000   		.space	3
 1553              	.LC4:
 1554 0054 64697374 		.ascii	"distance from robot to block: %d \011\000"
 1554      616E6365 
 1554      2066726F 
 1554      6D20726F 
 1554      626F7420 
 1555              		.bss
 1556              		.align	2
 1557              		.set	.LANCHOR0,. + 0
 1558              		.type	beginNavigation, %object
 1559              		.size	beginNavigation, 4
 1560              	beginNavigation:
 1561 0000 00000000 		.space	4
 1562              		.type	idac_value, %object
 1563              		.size	idac_value, 4
 1564              	idac_value:
 1565 0004 00000000 		.space	4
 1566              		.type	colour_sensing_algorithm, %object
 1567              		.size	colour_sensing_algorithm, 4
 1568              	colour_sensing_algorithm:
 1569 0008 00000000 		.space	4
 1570              		.type	currentPuckStackSize, %object
 1571              		.size	currentPuckStackSize, 4
 1572              	currentPuckStackSize:
 1573 000c 00000000 		.space	4
 1574              		.type	blockEastClearance, %object
 1575              		.size	blockEastClearance, 2
 1576              	blockEastClearance:
 1577 0010 0000     		.space	2
 1578              		.type	blockWestClearance, %object
 1579              		.size	blockWestClearance, 2
 1580              	blockWestClearance:
 1581 0012 0000     		.space	2
 1582              		.type	puckEastClearance, %object
 1583              		.size	puckEastClearance, 2
 1584              	puckEastClearance:
 1585 0014 0000     		.space	2
 1586              		.type	puckWestClearance, %object
 1587              		.size	puckWestClearance, 2
 1588              	puckWestClearance:
 1589 0016 0000     		.space	2
 1590              		.type	puckConstructionPlan, %object
 1591              		.size	puckConstructionPlan, 12
 1592              	puckConstructionPlan:
 1593 0018 00000000 		.space	12
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccRuSwul.s 			page 45


 1593      00000000 
 1593      00000000 
 1594              		.type	puckRackColours, %object
 1595              		.size	puckRackColours, 20
 1596              	puckRackColours:
 1597 0024 00000000 		.space	20
 1597      00000000 
 1597      00000000 
 1597      00000000 
 1597      00000000 
 1598              		.type	block_location, %object
 1599              		.size	block_location, 16
 1600              	block_location:
 1601 0038 00000000 		.space	16
 1601      00000000 
 1601      00000000 
 1601      00000000 
 1602              		.type	safety_override, %object
 1603              		.size	safety_override, 4
 1604              	safety_override:
 1605 0048 00000000 		.space	4
 1606              		.type	moving, %object
 1607              		.size	moving, 4
 1608              	moving:
 1609 004c 00000000 		.space	4
 1610              		.type	puck_location, %object
 1611              		.size	puck_location, 16
 1612              	puck_location:
 1613 0050 00000000 		.space	16
 1613      00000000 
 1613      00000000 
 1613      00000000 
 1614              		.type	horizontalPuckGrid, %object
 1615              		.size	horizontalPuckGrid, 4
 1616              	horizontalPuckGrid:
 1617 0060 00000000 		.space	4
 1618              		.type	puckColoursTempPile, %object
 1619              		.size	puckColoursTempPile, 8
 1620              	puckColoursTempPile:
 1621 0064 00000000 		.space	8
 1621      00000000 
 1622              		.type	block_edge_location, %object
 1623              		.size	block_edge_location, 16
 1624              	block_edge_location:
 1625 006c 00000000 		.space	16
 1625      00000000 
 1625      00000000 
 1625      00000000 
 1626              		.type	sweeping, %object
 1627              		.size	sweeping, 4
 1628              	sweeping:
 1629 007c 00000000 		.space	4
 1630              		.type	currentPuckRackScanningIndex, %object
 1631              		.size	currentPuckRackScanningIndex, 4
 1632              	currentPuckRackScanningIndex:
 1633 0080 00000000 		.space	4
 1634              		.text
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccRuSwul.s 			page 46


 1635              	.Letext0:
 1636              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 1637              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 1638              		.file 4 "Generated_Source\\PSoC5/core_cm3.h"
 1639              		.file 5 "navigation.h"
 1640              		.file 6 "ultrasonic.h"
 1641              		.file 7 "main.h"
 1642              		.file 8 "Generated_Source\\PSoC5/CyLib.h"
 1643              		.file 9 "colour.h"
 1644              		.file 10 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4
 1645              		.file 11 "Generated_Source\\PSoC5/UART_1.h"
 1646              		.file 12 "Generated_Source\\PSoC5/control_photodiode.h"
 1647              		.file 13 "motor.h"
 1648              		.file 14 "servo.h"
 1649              		.file 15 "Generated_Source\\PSoC5/TIA_1.h"
 1650              		.file 16 "Generated_Source\\PSoC5/ADC.h"
 1651              		.file 17 "Generated_Source\\PSoC5/IDAC8_1.h"
 1652              		.file 18 "Generated_Source\\PSoC5/control_led.h"
 1653              		.file 19 "Generated_Source\\PSoC5/Rack_Servo_PWM.h"
 1654              		.file 20 "Generated_Source\\PSoC5/Gripper_Servo_PWM.h"
 1655              		.file 21 "Generated_Source\\PSoC5/Motor_Left_Driver.h"
 1656              		.file 22 "Generated_Source\\PSoC5/Motor_Right_Driver.h"
 1657              		.file 23 "Generated_Source\\PSoC5/Motor_Left_Decoder.h"
 1658              		.file 24 "Generated_Source\\PSoC5/Motor_Right_Decoder.h"
 1659              		.file 25 "Generated_Source\\PSoC5/Timer_1.h"
 1660              		.file 26 "Generated_Source\\PSoC5/Sonic.h"
 1661              		.file 27 "Generated_Source\\PSoC5/Start.h"
 1662              		.section	.debug_info,"",%progbits
 1663              	.Ldebug_info0:
 1664 0000 75170000 		.4byte	0x1775
 1665 0004 0400     		.2byte	0x4
 1666 0006 00000000 		.4byte	.Ldebug_abbrev0
 1667 000a 04       		.byte	0x4
 1668 000b 01       		.uleb128 0x1
 1669 000c 08070000 		.4byte	.LASF108
 1670 0010 0C       		.byte	0xc
 1671 0011 8A050000 		.4byte	.LASF109
 1672 0015 41060000 		.4byte	.LASF110
 1673 0019 18000000 		.4byte	.Ldebug_ranges0+0x18
 1674 001d 00000000 		.4byte	0
 1675 0021 00000000 		.4byte	.Ldebug_line0
 1676 0025 02       		.uleb128 0x2
 1677 0026 01       		.byte	0x1
 1678 0027 06       		.byte	0x6
 1679 0028 1F040000 		.4byte	.LASF0
 1680 002c 02       		.uleb128 0x2
 1681 002d 01       		.byte	0x1
 1682 002e 08       		.byte	0x8
 1683 002f 74030000 		.4byte	.LASF1
 1684 0033 02       		.uleb128 0x2
 1685 0034 02       		.byte	0x2
 1686 0035 05       		.byte	0x5
 1687 0036 56000000 		.4byte	.LASF2
 1688 003a 02       		.uleb128 0x2
 1689 003b 02       		.byte	0x2
 1690 003c 07       		.byte	0x7
 1691 003d 66050000 		.4byte	.LASF3
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccRuSwul.s 			page 47


 1692 0041 03       		.uleb128 0x3
 1693 0042 24060000 		.4byte	.LASF9
 1694 0046 02       		.byte	0x2
 1695 0047 3F       		.byte	0x3f
 1696 0048 4C000000 		.4byte	0x4c
 1697 004c 02       		.uleb128 0x2
 1698 004d 04       		.byte	0x4
 1699 004e 05       		.byte	0x5
 1700 004f 75020000 		.4byte	.LASF4
 1701 0053 02       		.uleb128 0x2
 1702 0054 04       		.byte	0x4
 1703 0055 07       		.byte	0x7
 1704 0056 99050000 		.4byte	.LASF5
 1705 005a 02       		.uleb128 0x2
 1706 005b 08       		.byte	0x8
 1707 005c 05       		.byte	0x5
 1708 005d 27020000 		.4byte	.LASF6
 1709 0061 02       		.uleb128 0x2
 1710 0062 08       		.byte	0x8
 1711 0063 07       		.byte	0x7
 1712 0064 3F040000 		.4byte	.LASF7
 1713 0068 04       		.uleb128 0x4
 1714 0069 04       		.byte	0x4
 1715 006a 05       		.byte	0x5
 1716 006b 696E7400 		.ascii	"int\000"
 1717 006f 02       		.uleb128 0x2
 1718 0070 04       		.byte	0x4
 1719 0071 07       		.byte	0x7
 1720 0072 68040000 		.4byte	.LASF8
 1721 0076 03       		.uleb128 0x3
 1722 0077 9B000000 		.4byte	.LASF10
 1723 007b 03       		.byte	0x3
 1724 007c 2C       		.byte	0x2c
 1725 007d 41000000 		.4byte	0x41
 1726 0081 02       		.uleb128 0x2
 1727 0082 04       		.byte	0x4
 1728 0083 04       		.byte	0x4
 1729 0084 0E020000 		.4byte	.LASF11
 1730 0088 02       		.uleb128 0x2
 1731 0089 08       		.byte	0x8
 1732 008a 04       		.byte	0x4
 1733 008b DB060000 		.4byte	.LASF12
 1734 008f 02       		.uleb128 0x2
 1735 0090 01       		.byte	0x1
 1736 0091 08       		.byte	0x8
 1737 0092 EB040000 		.4byte	.LASF13
 1738 0096 02       		.uleb128 0x2
 1739 0097 08       		.byte	0x8
 1740 0098 04       		.byte	0x4
 1741 0099 E4000000 		.4byte	.LASF14
 1742 009d 02       		.uleb128 0x2
 1743 009e 04       		.byte	0x4
 1744 009f 07       		.byte	0x7
 1745 00a0 CB060000 		.4byte	.LASF15
 1746 00a4 05       		.uleb128 0x5
 1747 00a5 54494800 		.ascii	"TIH\000"
 1748 00a9 01       		.byte	0x1
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccRuSwul.s 			page 48


 1749 00aa 65       		.byte	0x65
 1750 00ab 00000000 		.4byte	.LFB64
 1751 00af 08000000 		.4byte	.LFE64-.LFB64
 1752 00b3 01       		.uleb128 0x1
 1753 00b4 9C       		.byte	0x9c
 1754 00b5 C3000000 		.4byte	0xc3
 1755 00b9 06       		.uleb128 0x6
 1756 00ba 06000000 		.4byte	.LVL0
 1757 00be 9F150000 		.4byte	0x159f
 1758 00c2 00       		.byte	0
 1759 00c3 07       		.uleb128 0x7
 1760 00c4 91050000 		.4byte	.LASF16
 1761 00c8 01       		.byte	0x1
 1762 00c9 6A       		.byte	0x6a
 1763 00ca 00000000 		.4byte	.LFB65
 1764 00ce 20000000 		.4byte	.LFE65-.LFB65
 1765 00d2 01       		.uleb128 0x1
 1766 00d3 9C       		.byte	0x9c
 1767 00d4 E9000000 		.4byte	0xe9
 1768 00d8 08       		.uleb128 0x8
 1769 00d9 08000000 		.4byte	.LVL1
 1770 00dd AA150000 		.4byte	0x15aa
 1771 00e1 09       		.uleb128 0x9
 1772 00e2 01       		.uleb128 0x1
 1773 00e3 50       		.byte	0x50
 1774 00e4 02       		.uleb128 0x2
 1775 00e5 08       		.byte	0x8
 1776 00e6 64       		.byte	0x64
 1777 00e7 00       		.byte	0
 1778 00e8 00       		.byte	0
 1779 00e9 0A       		.uleb128 0xa
 1780 00ea 02050000 		.4byte	.LASF111
 1781 00ee 01       		.byte	0x1
 1782 00ef 85       		.byte	0x85
 1783 00f0 68000000 		.4byte	0x68
 1784 00f4 00000000 		.4byte	.LFB66
 1785 00f8 7C080000 		.4byte	.LFE66-.LFB66
 1786 00fc 01       		.uleb128 0x1
 1787 00fd 9C       		.byte	0x9c
 1788 00fe 98120000 		.4byte	0x1298
 1789 0102 0B       		.uleb128 0xb
 1790 0103 35020000 		.4byte	.LASF17
 1791 0107 01       		.byte	0x1
 1792 0108 E6       		.byte	0xe6
 1793 0109 68000000 		.4byte	0x68
 1794 010d F401     		.2byte	0x1f4
 1795 010f 0C       		.uleb128 0xc
 1796 0110 04010000 		.4byte	.LBB2
 1797 0114 78070000 		.4byte	.LBE2-.LBB2
 1798 0118 62100000 		.4byte	0x1062
 1799 011c 0D       		.uleb128 0xd
 1800 011d 11000000 		.4byte	.LASF83
 1801 0121 01       		.byte	0x1
 1802 0122 F1       		.byte	0xf1
 1803 0123 68000000 		.4byte	0x68
 1804 0127 2D010000 		.4byte	0x12d
 1805 012b 0E       		.uleb128 0xe
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccRuSwul.s 			page 49


 1806 012c 00       		.byte	0
 1807 012d 0C       		.uleb128 0xc
 1808 012e 10010000 		.4byte	.LBB3
 1809 0132 96000000 		.4byte	.LBE3-.LBB3
 1810 0136 46020000 		.4byte	0x246
 1811 013a 0F       		.uleb128 0xf
 1812 013b 96070000 		.4byte	.LASF18
 1813 013f 01       		.byte	0x1
 1814 0140 4D01     		.2byte	0x14d
 1815 0142 68000000 		.4byte	0x68
 1816 0146 00000000 		.4byte	.LLST0
 1817 014a 0C       		.uleb128 0xc
 1818 014b 2A010000 		.4byte	.LBB4
 1819 014f 1E000000 		.4byte	.LBE4-.LBB4
 1820 0153 80010000 		.4byte	0x180
 1821 0157 10       		.uleb128 0x10
 1822 0158 6900     		.ascii	"i\000"
 1823 015a 01       		.byte	0x1
 1824 015b 3801     		.2byte	0x138
 1825 015d 68000000 		.4byte	0x68
 1826 0161 1F000000 		.4byte	.LLST1
 1827 0165 06       		.uleb128 0x6
 1828 0166 32010000 		.4byte	.LVL47
 1829 016a B5150000 		.4byte	0x15b5
 1830 016e 08       		.uleb128 0x8
 1831 016f 42010000 		.4byte	.LVL48
 1832 0173 AA150000 		.4byte	0x15aa
 1833 0177 09       		.uleb128 0x9
 1834 0178 01       		.uleb128 0x1
 1835 0179 50       		.byte	0x50
 1836 017a 03       		.uleb128 0x3
 1837 017b 0A       		.byte	0xa
 1838 017c F401     		.2byte	0x1f4
 1839 017e 00       		.byte	0
 1840 017f 00       		.byte	0
 1841 0180 0C       		.uleb128 0xc
 1842 0181 4E010000 		.4byte	.LBB5
 1843 0185 22000000 		.4byte	.LBE5-.LBB5
 1844 0189 C9010000 		.4byte	0x1c9
 1845 018d 10       		.uleb128 0x10
 1846 018e 6900     		.ascii	"i\000"
 1847 0190 01       		.byte	0x1
 1848 0191 4201     		.2byte	0x142
 1849 0193 68000000 		.4byte	0x68
 1850 0197 3E000000 		.4byte	.LLST2
 1851 019b 11       		.uleb128 0x11
 1852 019c 64010000 		.4byte	.LVL53
 1853 01a0 C0150000 		.4byte	0x15c0
 1854 01a4 B8010000 		.4byte	0x1b8
 1855 01a8 09       		.uleb128 0x9
 1856 01a9 01       		.uleb128 0x1
 1857 01aa 50       		.byte	0x50
 1858 01ab 02       		.uleb128 0x2
 1859 01ac 75       		.byte	0x75
 1860 01ad 00       		.sleb128 0
 1861 01ae 09       		.uleb128 0x9
 1862 01af 01       		.uleb128 0x1
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccRuSwul.s 			page 50


 1863 01b0 51       		.byte	0x51
 1864 01b1 05       		.uleb128 0x5
 1865 01b2 03       		.byte	0x3
 1866 01b3 4C000000 		.4byte	.LC3
 1867 01b7 00       		.byte	0
 1868 01b8 08       		.uleb128 0x8
 1869 01b9 6A010000 		.4byte	.LVL54
 1870 01bd CB150000 		.4byte	0x15cb
 1871 01c1 09       		.uleb128 0x9
 1872 01c2 01       		.uleb128 0x1
 1873 01c3 50       		.byte	0x50
 1874 01c4 02       		.uleb128 0x2
 1875 01c5 75       		.byte	0x75
 1876 01c6 00       		.sleb128 0
 1877 01c7 00       		.byte	0
 1878 01c8 00       		.byte	0
 1879 01c9 12       		.uleb128 0x12
 1880 01ca 00000000 		.4byte	.Ldebug_ranges0+0
 1881 01ce E3010000 		.4byte	0x1e3
 1882 01d2 0F       		.uleb128 0xf
 1883 01d3 F0000000 		.4byte	.LASF19
 1884 01d7 01       		.byte	0x1
 1885 01d8 5001     		.2byte	0x150
 1886 01da 68000000 		.4byte	0x68
 1887 01de 5D000000 		.4byte	.LLST3
 1888 01e2 00       		.byte	0
 1889 01e3 06       		.uleb128 0x6
 1890 01e4 14010000 		.4byte	.LVL43
 1891 01e8 D6150000 		.4byte	0x15d6
 1892 01ec 11       		.uleb128 0x11
 1893 01ed 26010000 		.4byte	.LVL44
 1894 01f1 E1150000 		.4byte	0x15e1
 1895 01f5 16020000 		.4byte	0x216
 1896 01f9 09       		.uleb128 0x9
 1897 01fa 01       		.uleb128 0x1
 1898 01fb 50       		.byte	0x50
 1899 01fc 02       		.uleb128 0x2
 1900 01fd 09       		.byte	0x9
 1901 01fe 9C       		.byte	0x9c
 1902 01ff 09       		.uleb128 0x9
 1903 0200 01       		.uleb128 0x1
 1904 0201 51       		.byte	0x51
 1905 0202 01       		.uleb128 0x1
 1906 0203 30       		.byte	0x30
 1907 0204 09       		.uleb128 0x9
 1908 0205 01       		.uleb128 0x1
 1909 0206 52       		.byte	0x52
 1910 0207 01       		.uleb128 0x1
 1911 0208 34       		.byte	0x34
 1912 0209 09       		.uleb128 0x9
 1913 020a 01       		.uleb128 0x1
 1914 020b 53       		.byte	0x53
 1915 020c 01       		.uleb128 0x1
 1916 020d 34       		.byte	0x34
 1917 020e 09       		.uleb128 0x9
 1918 020f 02       		.uleb128 0x2
 1919 0210 7D       		.byte	0x7d
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccRuSwul.s 			page 51


 1920 0211 00       		.sleb128 0
 1921 0212 02       		.uleb128 0x2
 1922 0213 08       		.byte	0x8
 1923 0214 AA       		.byte	0xaa
 1924 0215 00       		.byte	0
 1925 0216 06       		.uleb128 0x6
 1926 0217 2A010000 		.4byte	.LVL45
 1927 021b EC150000 		.4byte	0x15ec
 1928 021f 11       		.uleb128 0x11
 1929 0220 4E010000 		.4byte	.LVL50
 1930 0224 CB150000 		.4byte	0x15cb
 1931 0228 36020000 		.4byte	0x236
 1932 022c 09       		.uleb128 0x9
 1933 022d 01       		.uleb128 0x1
 1934 022e 50       		.byte	0x50
 1935 022f 05       		.uleb128 0x5
 1936 0230 03       		.byte	0x3
 1937 0231 38000000 		.4byte	.LC2
 1938 0235 00       		.byte	0
 1939 0236 08       		.uleb128 0x8
 1940 0237 76010000 		.4byte	.LVL56
 1941 023b F7150000 		.4byte	0x15f7
 1942 023f 09       		.uleb128 0x9
 1943 0240 01       		.uleb128 0x1
 1944 0241 50       		.byte	0x50
 1945 0242 01       		.uleb128 0x1
 1946 0243 31       		.byte	0x31
 1947 0244 00       		.byte	0
 1948 0245 00       		.byte	0
 1949 0246 0C       		.uleb128 0xc
 1950 0247 B0010000 		.4byte	.LBB8
 1951 024b 9C010000 		.4byte	.LBE8-.LBB8
 1952 024f 3E050000 		.4byte	0x53e
 1953 0253 0F       		.uleb128 0xf
 1954 0254 0E060000 		.4byte	.LASF20
 1955 0258 01       		.byte	0x1
 1956 0259 7C01     		.2byte	0x17c
 1957 025b 68000000 		.4byte	0x68
 1958 025f 7C000000 		.4byte	.LLST4
 1959 0263 0F       		.uleb128 0xf
 1960 0264 16010000 		.4byte	.LASF21
 1961 0268 01       		.byte	0x1
 1962 0269 C701     		.2byte	0x1c7
 1963 026b 68000000 		.4byte	0x68
 1964 026f B5000000 		.4byte	.LLST5
 1965 0273 11       		.uleb128 0x11
 1966 0274 BA010000 		.4byte	.LVL64
 1967 0278 02160000 		.4byte	0x1602
 1968 027c 8D020000 		.4byte	0x28d
 1969 0280 09       		.uleb128 0x9
 1970 0281 01       		.uleb128 0x1
 1971 0282 50       		.byte	0x50
 1972 0283 02       		.uleb128 0x2
 1973 0284 09       		.byte	0x9
 1974 0285 DD       		.byte	0xdd
 1975 0286 09       		.uleb128 0x9
 1976 0287 01       		.uleb128 0x1
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccRuSwul.s 			page 52


 1977 0288 51       		.byte	0x51
 1978 0289 02       		.uleb128 0x2
 1979 028a 08       		.byte	0x8
 1980 028b AA       		.byte	0xaa
 1981 028c 00       		.byte	0
 1982 028d 11       		.uleb128 0x11
 1983 028e C4010000 		.4byte	.LVL65
 1984 0292 0D160000 		.4byte	0x160d
 1985 0296 A8020000 		.4byte	0x2a8
 1986 029a 09       		.uleb128 0x9
 1987 029b 01       		.uleb128 0x1
 1988 029c 50       		.byte	0x50
 1989 029d 03       		.uleb128 0x3
 1990 029e 0B       		.byte	0xb
 1991 029f 6AFF     		.2byte	0xff6a
 1992 02a1 09       		.uleb128 0x9
 1993 02a2 01       		.uleb128 0x1
 1994 02a3 51       		.byte	0x51
 1995 02a4 02       		.uleb128 0x2
 1996 02a5 08       		.byte	0x8
 1997 02a6 AA       		.byte	0xaa
 1998 02a7 00       		.byte	0
 1999 02a8 11       		.uleb128 0x11
 2000 02a9 CC010000 		.4byte	.LVL66
 2001 02ad 02160000 		.4byte	0x1602
 2002 02b1 C2020000 		.4byte	0x2c2
 2003 02b5 09       		.uleb128 0x9
 2004 02b6 01       		.uleb128 0x1
 2005 02b7 50       		.byte	0x50
 2006 02b8 02       		.uleb128 0x2
 2007 02b9 08       		.byte	0x8
 2008 02ba 23       		.byte	0x23
 2009 02bb 09       		.uleb128 0x9
 2010 02bc 01       		.uleb128 0x1
 2011 02bd 51       		.byte	0x51
 2012 02be 02       		.uleb128 0x2
 2013 02bf 08       		.byte	0x8
 2014 02c0 AA       		.byte	0xaa
 2015 02c1 00       		.byte	0
 2016 02c2 11       		.uleb128 0x11
 2017 02c3 DC010000 		.4byte	.LVL67
 2018 02c7 E1150000 		.4byte	0x15e1
 2019 02cb EC020000 		.4byte	0x2ec
 2020 02cf 09       		.uleb128 0x9
 2021 02d0 01       		.uleb128 0x1
 2022 02d1 50       		.byte	0x50
 2023 02d2 02       		.uleb128 0x2
 2024 02d3 08       		.byte	0x8
 2025 02d4 82       		.byte	0x82
 2026 02d5 09       		.uleb128 0x9
 2027 02d6 01       		.uleb128 0x1
 2028 02d7 51       		.byte	0x51
 2029 02d8 01       		.uleb128 0x1
 2030 02d9 31       		.byte	0x31
 2031 02da 09       		.uleb128 0x9
 2032 02db 01       		.uleb128 0x1
 2033 02dc 52       		.byte	0x52
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccRuSwul.s 			page 53


 2034 02dd 01       		.uleb128 0x1
 2035 02de 34       		.byte	0x34
 2036 02df 09       		.uleb128 0x9
 2037 02e0 01       		.uleb128 0x1
 2038 02e1 53       		.byte	0x53
 2039 02e2 01       		.uleb128 0x1
 2040 02e3 30       		.byte	0x30
 2041 02e4 09       		.uleb128 0x9
 2042 02e5 02       		.uleb128 0x2
 2043 02e6 7D       		.byte	0x7d
 2044 02e7 00       		.sleb128 0
 2045 02e8 02       		.uleb128 0x2
 2046 02e9 74       		.byte	0x74
 2047 02ea 00       		.sleb128 0
 2048 02eb 00       		.byte	0
 2049 02ec 06       		.uleb128 0x6
 2050 02ed E0010000 		.4byte	.LVL68
 2051 02f1 D6150000 		.4byte	0x15d6
 2052 02f5 11       		.uleb128 0x11
 2053 02f6 E6010000 		.4byte	.LVL69
 2054 02fa 18160000 		.4byte	0x1618
 2055 02fe 08030000 		.4byte	0x308
 2056 0302 09       		.uleb128 0x9
 2057 0303 01       		.uleb128 0x1
 2058 0304 50       		.byte	0x50
 2059 0305 01       		.uleb128 0x1
 2060 0306 32       		.byte	0x32
 2061 0307 00       		.byte	0
 2062 0308 11       		.uleb128 0x11
 2063 0309 FA010000 		.4byte	.LVL72
 2064 030d C0150000 		.4byte	0x15c0
 2065 0311 25030000 		.4byte	0x325
 2066 0315 09       		.uleb128 0x9
 2067 0316 01       		.uleb128 0x1
 2068 0317 50       		.byte	0x50
 2069 0318 02       		.uleb128 0x2
 2070 0319 76       		.byte	0x76
 2071 031a 00       		.sleb128 0
 2072 031b 09       		.uleb128 0x9
 2073 031c 01       		.uleb128 0x1
 2074 031d 51       		.byte	0x51
 2075 031e 05       		.uleb128 0x5
 2076 031f 03       		.byte	0x3
 2077 0320 54000000 		.4byte	.LC4
 2078 0324 00       		.byte	0
 2079 0325 11       		.uleb128 0x11
 2080 0326 00020000 		.4byte	.LVL73
 2081 032a CB150000 		.4byte	0x15cb
 2082 032e 39030000 		.4byte	0x339
 2083 0332 09       		.uleb128 0x9
 2084 0333 01       		.uleb128 0x1
 2085 0334 50       		.byte	0x50
 2086 0335 02       		.uleb128 0x2
 2087 0336 76       		.byte	0x76
 2088 0337 00       		.sleb128 0
 2089 0338 00       		.byte	0
 2090 0339 11       		.uleb128 0x11
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccRuSwul.s 			page 54


 2091 033a 10020000 		.4byte	.LVL74
 2092 033e E1150000 		.4byte	0x15e1
 2093 0342 64030000 		.4byte	0x364
 2094 0346 09       		.uleb128 0x9
 2095 0347 01       		.uleb128 0x1
 2096 0348 50       		.byte	0x50
 2097 0349 03       		.uleb128 0x3
 2098 034a 0A       		.byte	0xa
 2099 034b 5E01     		.2byte	0x15e
 2100 034d 09       		.uleb128 0x9
 2101 034e 01       		.uleb128 0x1
 2102 034f 51       		.byte	0x51
 2103 0350 01       		.uleb128 0x1
 2104 0351 30       		.byte	0x30
 2105 0352 09       		.uleb128 0x9
 2106 0353 01       		.uleb128 0x1
 2107 0354 52       		.byte	0x52
 2108 0355 01       		.uleb128 0x1
 2109 0356 34       		.byte	0x34
 2110 0357 09       		.uleb128 0x9
 2111 0358 01       		.uleb128 0x1
 2112 0359 53       		.byte	0x53
 2113 035a 01       		.uleb128 0x1
 2114 035b 33       		.byte	0x33
 2115 035c 09       		.uleb128 0x9
 2116 035d 02       		.uleb128 0x2
 2117 035e 7D       		.byte	0x7d
 2118 035f 00       		.sleb128 0
 2119 0360 02       		.uleb128 0x2
 2120 0361 74       		.byte	0x74
 2121 0362 00       		.sleb128 0
 2122 0363 00       		.byte	0
 2123 0364 11       		.uleb128 0x11
 2124 0365 1A020000 		.4byte	.LVL75
 2125 0369 23160000 		.4byte	0x1623
 2126 036d 7E030000 		.4byte	0x37e
 2127 0371 09       		.uleb128 0x9
 2128 0372 01       		.uleb128 0x1
 2129 0373 50       		.byte	0x50
 2130 0374 01       		.uleb128 0x1
 2131 0375 32       		.byte	0x32
 2132 0376 09       		.uleb128 0x9
 2133 0377 01       		.uleb128 0x1
 2134 0378 51       		.byte	0x51
 2135 0379 03       		.uleb128 0x3
 2136 037a 0A       		.byte	0xa
 2137 037b E803     		.2byte	0x3e8
 2138 037d 00       		.byte	0
 2139 037e 11       		.uleb128 0x11
 2140 037f 24020000 		.4byte	.LVL76
 2141 0383 0D160000 		.4byte	0x160d
 2142 0387 98030000 		.4byte	0x398
 2143 038b 09       		.uleb128 0x9
 2144 038c 01       		.uleb128 0x1
 2145 038d 50       		.byte	0x50
 2146 038e 02       		.uleb128 0x2
 2147 038f 09       		.byte	0x9
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccRuSwul.s 			page 55


 2148 0390 D3       		.byte	0xd3
 2149 0391 09       		.uleb128 0x9
 2150 0392 01       		.uleb128 0x1
 2151 0393 51       		.byte	0x51
 2152 0394 02       		.uleb128 0x2
 2153 0395 74       		.byte	0x74
 2154 0396 00       		.sleb128 0
 2155 0397 00       		.byte	0
 2156 0398 11       		.uleb128 0x11
 2157 0399 2A020000 		.4byte	.LVL77
 2158 039d 18160000 		.4byte	0x1618
 2159 03a1 AB030000 		.4byte	0x3ab
 2160 03a5 09       		.uleb128 0x9
 2161 03a6 01       		.uleb128 0x1
 2162 03a7 50       		.byte	0x50
 2163 03a8 01       		.uleb128 0x1
 2164 03a9 33       		.byte	0x33
 2165 03aa 00       		.byte	0
 2166 03ab 11       		.uleb128 0x11
 2167 03ac 30020000 		.4byte	.LVL78
 2168 03b0 AA150000 		.4byte	0x15aa
 2169 03b4 BF030000 		.4byte	0x3bf
 2170 03b8 09       		.uleb128 0x9
 2171 03b9 01       		.uleb128 0x1
 2172 03ba 50       		.byte	0x50
 2173 03bb 02       		.uleb128 0x2
 2174 03bc 08       		.byte	0x8
 2175 03bd 3C       		.byte	0x3c
 2176 03be 00       		.byte	0
 2177 03bf 11       		.uleb128 0x11
 2178 03c0 36020000 		.4byte	.LVL79
 2179 03c4 18160000 		.4byte	0x1618
 2180 03c8 D2030000 		.4byte	0x3d2
 2181 03cc 09       		.uleb128 0x9
 2182 03cd 01       		.uleb128 0x1
 2183 03ce 50       		.byte	0x50
 2184 03cf 01       		.uleb128 0x1
 2185 03d0 32       		.byte	0x32
 2186 03d1 00       		.byte	0
 2187 03d2 11       		.uleb128 0x11
 2188 03d3 3C020000 		.4byte	.LVL80
 2189 03d7 AA150000 		.4byte	0x15aa
 2190 03db E6030000 		.4byte	0x3e6
 2191 03df 09       		.uleb128 0x9
 2192 03e0 01       		.uleb128 0x1
 2193 03e1 50       		.byte	0x50
 2194 03e2 02       		.uleb128 0x2
 2195 03e3 08       		.byte	0x8
 2196 03e4 3C       		.byte	0x3c
 2197 03e5 00       		.byte	0
 2198 03e6 11       		.uleb128 0x11
 2199 03e7 42020000 		.4byte	.LVL81
 2200 03eb 18160000 		.4byte	0x1618
 2201 03ef F9030000 		.4byte	0x3f9
 2202 03f3 09       		.uleb128 0x9
 2203 03f4 01       		.uleb128 0x1
 2204 03f5 50       		.byte	0x50
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccRuSwul.s 			page 56


 2205 03f6 01       		.uleb128 0x1
 2206 03f7 34       		.byte	0x34
 2207 03f8 00       		.byte	0
 2208 03f9 11       		.uleb128 0x11
 2209 03fa 48020000 		.4byte	.LVL82
 2210 03fe AA150000 		.4byte	0x15aa
 2211 0402 0D040000 		.4byte	0x40d
 2212 0406 09       		.uleb128 0x9
 2213 0407 01       		.uleb128 0x1
 2214 0408 50       		.byte	0x50
 2215 0409 02       		.uleb128 0x2
 2216 040a 08       		.byte	0x8
 2217 040b 3C       		.byte	0x3c
 2218 040c 00       		.byte	0
 2219 040d 11       		.uleb128 0x11
 2220 040e AC020000 		.4byte	.LVL83
 2221 0412 E1150000 		.4byte	0x15e1
 2222 0416 38040000 		.4byte	0x438
 2223 041a 09       		.uleb128 0x9
 2224 041b 01       		.uleb128 0x1
 2225 041c 50       		.byte	0x50
 2226 041d 03       		.uleb128 0x3
 2227 041e 0A       		.byte	0xa
 2228 041f 5E01     		.2byte	0x15e
 2229 0421 09       		.uleb128 0x9
 2230 0422 01       		.uleb128 0x1
 2231 0423 51       		.byte	0x51
 2232 0424 01       		.uleb128 0x1
 2233 0425 30       		.byte	0x30
 2234 0426 09       		.uleb128 0x9
 2235 0427 01       		.uleb128 0x1
 2236 0428 52       		.byte	0x52
 2237 0429 01       		.uleb128 0x1
 2238 042a 35       		.byte	0x35
 2239 042b 09       		.uleb128 0x9
 2240 042c 01       		.uleb128 0x1
 2241 042d 53       		.byte	0x53
 2242 042e 01       		.uleb128 0x1
 2243 042f 33       		.byte	0x33
 2244 0430 09       		.uleb128 0x9
 2245 0431 02       		.uleb128 0x2
 2246 0432 7D       		.byte	0x7d
 2247 0433 00       		.sleb128 0
 2248 0434 02       		.uleb128 0x2
 2249 0435 74       		.byte	0x74
 2250 0436 00       		.sleb128 0
 2251 0437 00       		.byte	0
 2252 0438 11       		.uleb128 0x11
 2253 0439 B6020000 		.4byte	.LVL84
 2254 043d 23160000 		.4byte	0x1623
 2255 0441 52040000 		.4byte	0x452
 2256 0445 09       		.uleb128 0x9
 2257 0446 01       		.uleb128 0x1
 2258 0447 50       		.byte	0x50
 2259 0448 01       		.uleb128 0x1
 2260 0449 32       		.byte	0x32
 2261 044a 09       		.uleb128 0x9
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccRuSwul.s 			page 57


 2262 044b 01       		.uleb128 0x1
 2263 044c 51       		.byte	0x51
 2264 044d 03       		.uleb128 0x3
 2265 044e 0A       		.byte	0xa
 2266 044f E803     		.2byte	0x3e8
 2267 0451 00       		.byte	0
 2268 0452 11       		.uleb128 0x11
 2269 0453 BE020000 		.4byte	.LVL85
 2270 0457 AA150000 		.4byte	0x15aa
 2271 045b 67040000 		.4byte	0x467
 2272 045f 09       		.uleb128 0x9
 2273 0460 01       		.uleb128 0x1
 2274 0461 50       		.byte	0x50
 2275 0462 03       		.uleb128 0x3
 2276 0463 0A       		.byte	0xa
 2277 0464 E803     		.2byte	0x3e8
 2278 0466 00       		.byte	0
 2279 0467 11       		.uleb128 0x11
 2280 0468 C4020000 		.4byte	.LVL86
 2281 046c 18160000 		.4byte	0x1618
 2282 0470 7A040000 		.4byte	0x47a
 2283 0474 09       		.uleb128 0x9
 2284 0475 01       		.uleb128 0x1
 2285 0476 50       		.byte	0x50
 2286 0477 01       		.uleb128 0x1
 2287 0478 30       		.byte	0x30
 2288 0479 00       		.byte	0
 2289 047a 11       		.uleb128 0x11
 2290 047b CA020000 		.4byte	.LVL87
 2291 047f AA150000 		.4byte	0x15aa
 2292 0483 8E040000 		.4byte	0x48e
 2293 0487 09       		.uleb128 0x9
 2294 0488 01       		.uleb128 0x1
 2295 0489 50       		.byte	0x50
 2296 048a 02       		.uleb128 0x2
 2297 048b 08       		.byte	0x8
 2298 048c 3C       		.byte	0x3c
 2299 048d 00       		.byte	0
 2300 048e 11       		.uleb128 0x11
 2301 048f D0020000 		.4byte	.LVL88
 2302 0493 18160000 		.4byte	0x1618
 2303 0497 A1040000 		.4byte	0x4a1
 2304 049b 09       		.uleb128 0x9
 2305 049c 01       		.uleb128 0x1
 2306 049d 50       		.byte	0x50
 2307 049e 01       		.uleb128 0x1
 2308 049f 31       		.byte	0x31
 2309 04a0 00       		.byte	0
 2310 04a1 11       		.uleb128 0x11
 2311 04a2 D6020000 		.4byte	.LVL89
 2312 04a6 AA150000 		.4byte	0x15aa
 2313 04aa B5040000 		.4byte	0x4b5
 2314 04ae 09       		.uleb128 0x9
 2315 04af 01       		.uleb128 0x1
 2316 04b0 50       		.byte	0x50
 2317 04b1 02       		.uleb128 0x2
 2318 04b2 08       		.byte	0x8
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccRuSwul.s 			page 58


 2319 04b3 3C       		.byte	0x3c
 2320 04b4 00       		.byte	0
 2321 04b5 11       		.uleb128 0x11
 2322 04b6 DC020000 		.4byte	.LVL90
 2323 04ba 18160000 		.4byte	0x1618
 2324 04be C8040000 		.4byte	0x4c8
 2325 04c2 09       		.uleb128 0x9
 2326 04c3 01       		.uleb128 0x1
 2327 04c4 50       		.byte	0x50
 2328 04c5 01       		.uleb128 0x1
 2329 04c6 32       		.byte	0x32
 2330 04c7 00       		.byte	0
 2331 04c8 11       		.uleb128 0x11
 2332 04c9 E2020000 		.4byte	.LVL91
 2333 04cd AA150000 		.4byte	0x15aa
 2334 04d1 DC040000 		.4byte	0x4dc
 2335 04d5 09       		.uleb128 0x9
 2336 04d6 01       		.uleb128 0x1
 2337 04d7 50       		.byte	0x50
 2338 04d8 02       		.uleb128 0x2
 2339 04d9 08       		.byte	0x8
 2340 04da 3C       		.byte	0x3c
 2341 04db 00       		.byte	0
 2342 04dc 11       		.uleb128 0x11
 2343 04dd 00030000 		.4byte	.LVL92
 2344 04e1 AA150000 		.4byte	0x15aa
 2345 04e5 F1040000 		.4byte	0x4f1
 2346 04e9 09       		.uleb128 0x9
 2347 04ea 01       		.uleb128 0x1
 2348 04eb 50       		.byte	0x50
 2349 04ec 03       		.uleb128 0x3
 2350 04ed 0A       		.byte	0xa
 2351 04ee E803     		.2byte	0x3e8
 2352 04f0 00       		.byte	0
 2353 04f1 11       		.uleb128 0x11
 2354 04f2 08030000 		.4byte	.LVL93
 2355 04f6 2E160000 		.4byte	0x162e
 2356 04fa 0A050000 		.4byte	0x50a
 2357 04fe 09       		.uleb128 0x9
 2358 04ff 01       		.uleb128 0x1
 2359 0500 50       		.byte	0x50
 2360 0501 01       		.uleb128 0x1
 2361 0502 31       		.byte	0x31
 2362 0503 09       		.uleb128 0x9
 2363 0504 01       		.uleb128 0x1
 2364 0505 51       		.byte	0x51
 2365 0506 02       		.uleb128 0x2
 2366 0507 74       		.byte	0x74
 2367 0508 00       		.sleb128 0
 2368 0509 00       		.byte	0
 2369 050a 11       		.uleb128 0x11
 2370 050b 16030000 		.4byte	.LVL94
 2371 050f E1150000 		.4byte	0x15e1
 2372 0513 34050000 		.4byte	0x534
 2373 0517 09       		.uleb128 0x9
 2374 0518 01       		.uleb128 0x1
 2375 0519 50       		.byte	0x50
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccRuSwul.s 			page 59


 2376 051a 02       		.uleb128 0x2
 2377 051b 08       		.byte	0x8
 2378 051c 96       		.byte	0x96
 2379 051d 09       		.uleb128 0x9
 2380 051e 01       		.uleb128 0x1
 2381 051f 51       		.byte	0x51
 2382 0520 01       		.uleb128 0x1
 2383 0521 31       		.byte	0x31
 2384 0522 09       		.uleb128 0x9
 2385 0523 01       		.uleb128 0x1
 2386 0524 52       		.byte	0x52
 2387 0525 01       		.uleb128 0x1
 2388 0526 34       		.byte	0x34
 2389 0527 09       		.uleb128 0x9
 2390 0528 01       		.uleb128 0x1
 2391 0529 53       		.byte	0x53
 2392 052a 01       		.uleb128 0x1
 2393 052b 30       		.byte	0x30
 2394 052c 09       		.uleb128 0x9
 2395 052d 02       		.uleb128 0x2
 2396 052e 7D       		.byte	0x7d
 2397 052f 00       		.sleb128 0
 2398 0530 02       		.uleb128 0x2
 2399 0531 74       		.byte	0x74
 2400 0532 00       		.sleb128 0
 2401 0533 00       		.byte	0
 2402 0534 06       		.uleb128 0x6
 2403 0535 1A030000 		.4byte	.LVL95
 2404 0539 D6150000 		.4byte	0x15d6
 2405 053d 00       		.byte	0
 2406 053e 0C       		.uleb128 0xc
 2407 053f A6040000 		.4byte	.LBB9
 2408 0543 90000000 		.4byte	.LBE9-.LBB9
 2409 0547 77060000 		.4byte	0x677
 2410 054b 0F       		.uleb128 0xf
 2411 054c D5010000 		.4byte	.LASF22
 2412 0550 01       		.byte	0x1
 2413 0551 4102     		.2byte	0x241
 2414 0553 68000000 		.4byte	0x68
 2415 0557 CB000000 		.4byte	.LLST6
 2416 055b 0F       		.uleb128 0xf
 2417 055c 1A060000 		.4byte	.LASF23
 2418 0560 01       		.byte	0x1
 2419 0561 4202     		.2byte	0x242
 2420 0563 68000000 		.4byte	0x68
 2421 0567 EA000000 		.4byte	.LLST7
 2422 056b 11       		.uleb128 0x11
 2423 056c BE040000 		.4byte	.LVL127
 2424 0570 0D160000 		.4byte	0x160d
 2425 0574 85050000 		.4byte	0x585
 2426 0578 09       		.uleb128 0x9
 2427 0579 01       		.uleb128 0x1
 2428 057a 50       		.byte	0x50
 2429 057b 02       		.uleb128 0x2
 2430 057c 08       		.byte	0x8
 2431 057d 32       		.byte	0x32
 2432 057e 09       		.uleb128 0x9
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccRuSwul.s 			page 60


 2433 057f 01       		.uleb128 0x1
 2434 0580 51       		.byte	0x51
 2435 0581 02       		.uleb128 0x2
 2436 0582 08       		.byte	0x8
 2437 0583 46       		.byte	0x46
 2438 0584 00       		.byte	0
 2439 0585 11       		.uleb128 0x11
 2440 0586 C4040000 		.4byte	.LVL128
 2441 058a 39160000 		.4byte	0x1639
 2442 058e 98050000 		.4byte	0x598
 2443 0592 09       		.uleb128 0x9
 2444 0593 01       		.uleb128 0x1
 2445 0594 50       		.byte	0x50
 2446 0595 01       		.uleb128 0x1
 2447 0596 31       		.byte	0x31
 2448 0597 00       		.byte	0
 2449 0598 06       		.uleb128 0x6
 2450 0599 C8040000 		.4byte	.LVL129
 2451 059d B5150000 		.4byte	0x15b5
 2452 05a1 11       		.uleb128 0x11
 2453 05a2 D0040000 		.4byte	.LVL132
 2454 05a6 39160000 		.4byte	0x1639
 2455 05aa B5050000 		.4byte	0x5b5
 2456 05ae 09       		.uleb128 0x9
 2457 05af 01       		.uleb128 0x1
 2458 05b0 50       		.byte	0x50
 2459 05b1 02       		.uleb128 0x2
 2460 05b2 76       		.byte	0x76
 2461 05b3 00       		.sleb128 0
 2462 05b4 00       		.byte	0
 2463 05b5 11       		.uleb128 0x11
 2464 05b6 DA040000 		.4byte	.LVL133
 2465 05ba 0D160000 		.4byte	0x160d
 2466 05be CF050000 		.4byte	0x5cf
 2467 05c2 09       		.uleb128 0x9
 2468 05c3 01       		.uleb128 0x1
 2469 05c4 50       		.byte	0x50
 2470 05c5 02       		.uleb128 0x2
 2471 05c6 09       		.byte	0x9
 2472 05c7 CE       		.byte	0xce
 2473 05c8 09       		.uleb128 0x9
 2474 05c9 01       		.uleb128 0x1
 2475 05ca 51       		.byte	0x51
 2476 05cb 02       		.uleb128 0x2
 2477 05cc 08       		.byte	0x8
 2478 05cd AA       		.byte	0xaa
 2479 05ce 00       		.byte	0
 2480 05cf 11       		.uleb128 0x11
 2481 05d0 F4040000 		.4byte	.LVL134
 2482 05d4 02160000 		.4byte	0x1602
 2483 05d8 E9050000 		.4byte	0x5e9
 2484 05dc 09       		.uleb128 0x9
 2485 05dd 01       		.uleb128 0x1
 2486 05de 50       		.byte	0x50
 2487 05df 02       		.uleb128 0x2
 2488 05e0 08       		.byte	0x8
 2489 05e1 2D       		.byte	0x2d
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccRuSwul.s 			page 61


 2490 05e2 09       		.uleb128 0x9
 2491 05e3 01       		.uleb128 0x1
 2492 05e4 51       		.byte	0x51
 2493 05e5 02       		.uleb128 0x2
 2494 05e6 08       		.byte	0x8
 2495 05e7 AA       		.byte	0xaa
 2496 05e8 00       		.byte	0
 2497 05e9 11       		.uleb128 0x11
 2498 05ea FE040000 		.4byte	.LVL135
 2499 05ee 0D160000 		.4byte	0x160d
 2500 05f2 03060000 		.4byte	0x603
 2501 05f6 09       		.uleb128 0x9
 2502 05f7 01       		.uleb128 0x1
 2503 05f8 50       		.byte	0x50
 2504 05f9 02       		.uleb128 0x2
 2505 05fa 09       		.byte	0x9
 2506 05fb E2       		.byte	0xe2
 2507 05fc 09       		.uleb128 0x9
 2508 05fd 01       		.uleb128 0x1
 2509 05fe 51       		.byte	0x51
 2510 05ff 02       		.uleb128 0x2
 2511 0600 08       		.byte	0x8
 2512 0601 AA       		.byte	0xaa
 2513 0602 00       		.byte	0
 2514 0603 11       		.uleb128 0x11
 2515 0604 08050000 		.4byte	.LVL136
 2516 0608 02160000 		.4byte	0x1602
 2517 060c 1D060000 		.4byte	0x61d
 2518 0610 09       		.uleb128 0x9
 2519 0611 01       		.uleb128 0x1
 2520 0612 50       		.byte	0x50
 2521 0613 02       		.uleb128 0x2
 2522 0614 09       		.byte	0x9
 2523 0615 E2       		.byte	0xe2
 2524 0616 09       		.uleb128 0x9
 2525 0617 01       		.uleb128 0x1
 2526 0618 51       		.byte	0x51
 2527 0619 02       		.uleb128 0x2
 2528 061a 08       		.byte	0x8
 2529 061b AA       		.byte	0xaa
 2530 061c 00       		.byte	0
 2531 061d 11       		.uleb128 0x11
 2532 061e 16050000 		.4byte	.LVL138
 2533 0622 39160000 		.4byte	0x1639
 2534 0626 30060000 		.4byte	0x630
 2535 062a 09       		.uleb128 0x9
 2536 062b 01       		.uleb128 0x1
 2537 062c 50       		.byte	0x50
 2538 062d 01       		.uleb128 0x1
 2539 062e 30       		.byte	0x30
 2540 062f 00       		.byte	0
 2541 0630 11       		.uleb128 0x11
 2542 0631 1C050000 		.4byte	.LVL139
 2543 0635 44160000 		.4byte	0x1644
 2544 0639 43060000 		.4byte	0x643
 2545 063d 09       		.uleb128 0x9
 2546 063e 01       		.uleb128 0x1
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccRuSwul.s 			page 62


 2547 063f 50       		.byte	0x50
 2548 0640 01       		.uleb128 0x1
 2549 0641 32       		.byte	0x32
 2550 0642 00       		.byte	0
 2551 0643 06       		.uleb128 0x6
 2552 0644 20050000 		.4byte	.LVL140
 2553 0648 4F160000 		.4byte	0x164f
 2554 064c 11       		.uleb128 0x11
 2555 064d 26050000 		.4byte	.LVL141
 2556 0651 39160000 		.4byte	0x1639
 2557 0655 60060000 		.4byte	0x660
 2558 0659 09       		.uleb128 0x9
 2559 065a 01       		.uleb128 0x1
 2560 065b 50       		.byte	0x50
 2561 065c 02       		.uleb128 0x2
 2562 065d 76       		.byte	0x76
 2563 065e 00       		.sleb128 0
 2564 065f 00       		.byte	0
 2565 0660 08       		.uleb128 0x8
 2566 0661 30050000 		.4byte	.LVL142
 2567 0665 0D160000 		.4byte	0x160d
 2568 0669 09       		.uleb128 0x9
 2569 066a 01       		.uleb128 0x1
 2570 066b 50       		.byte	0x50
 2571 066c 02       		.uleb128 0x2
 2572 066d 09       		.byte	0x9
 2573 066e C4       		.byte	0xc4
 2574 066f 09       		.uleb128 0x9
 2575 0670 01       		.uleb128 0x1
 2576 0671 51       		.byte	0x51
 2577 0672 02       		.uleb128 0x2
 2578 0673 08       		.byte	0x8
 2579 0674 AA       		.byte	0xaa
 2580 0675 00       		.byte	0
 2581 0676 00       		.byte	0
 2582 0677 0C       		.uleb128 0xc
 2583 0678 FA060000 		.4byte	.LBB10
 2584 067c 3A010000 		.4byte	.LBE10-.LBB10
 2585 0680 CD080000 		.4byte	0x8cd
 2586 0684 0F       		.uleb128 0xf
 2587 0685 03060000 		.4byte	.LASF24
 2588 0689 01       		.byte	0x1
 2589 068a 3203     		.2byte	0x332
 2590 068c 68000000 		.4byte	0x68
 2591 0690 08010000 		.4byte	.LLST8
 2592 0694 11       		.uleb128 0x11
 2593 0695 00070000 		.4byte	.LVL183
 2594 0699 F7150000 		.4byte	0x15f7
 2595 069d A7060000 		.4byte	0x6a7
 2596 06a1 09       		.uleb128 0x9
 2597 06a2 01       		.uleb128 0x1
 2598 06a3 50       		.byte	0x50
 2599 06a4 01       		.uleb128 0x1
 2600 06a5 31       		.byte	0x31
 2601 06a6 00       		.byte	0
 2602 06a7 06       		.uleb128 0x6
 2603 06a8 0A070000 		.4byte	.LVL184
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccRuSwul.s 			page 63


 2604 06ac 5A160000 		.4byte	0x165a
 2605 06b0 06       		.uleb128 0x6
 2606 06b1 0E070000 		.4byte	.LVL185
 2607 06b5 EC150000 		.4byte	0x15ec
 2608 06b9 11       		.uleb128 0x11
 2609 06ba 16070000 		.4byte	.LVL186
 2610 06be AA150000 		.4byte	0x15aa
 2611 06c2 CE060000 		.4byte	0x6ce
 2612 06c6 09       		.uleb128 0x9
 2613 06c7 01       		.uleb128 0x1
 2614 06c8 50       		.byte	0x50
 2615 06c9 03       		.uleb128 0x3
 2616 06ca 0A       		.byte	0xa
 2617 06cb D007     		.2byte	0x7d0
 2618 06cd 00       		.byte	0
 2619 06ce 06       		.uleb128 0x6
 2620 06cf 1A070000 		.4byte	.LVL187
 2621 06d3 4F160000 		.4byte	0x164f
 2622 06d7 06       		.uleb128 0x6
 2623 06d8 1E070000 		.4byte	.LVL188
 2624 06dc B5150000 		.4byte	0x15b5
 2625 06e0 11       		.uleb128 0x11
 2626 06e1 40070000 		.4byte	.LVL190
 2627 06e5 E1150000 		.4byte	0x15e1
 2628 06e9 0B070000 		.4byte	0x70b
 2629 06ed 09       		.uleb128 0x9
 2630 06ee 01       		.uleb128 0x1
 2631 06ef 50       		.byte	0x50
 2632 06f0 03       		.uleb128 0x3
 2633 06f1 0A       		.byte	0xa
 2634 06f2 2602     		.2byte	0x226
 2635 06f4 09       		.uleb128 0x9
 2636 06f5 01       		.uleb128 0x1
 2637 06f6 51       		.byte	0x51
 2638 06f7 01       		.uleb128 0x1
 2639 06f8 30       		.byte	0x30
 2640 06f9 09       		.uleb128 0x9
 2641 06fa 01       		.uleb128 0x1
 2642 06fb 52       		.byte	0x52
 2643 06fc 01       		.uleb128 0x1
 2644 06fd 35       		.byte	0x35
 2645 06fe 09       		.uleb128 0x9
 2646 06ff 01       		.uleb128 0x1
 2647 0700 53       		.byte	0x53
 2648 0701 01       		.uleb128 0x1
 2649 0702 30       		.byte	0x30
 2650 0703 09       		.uleb128 0x9
 2651 0704 02       		.uleb128 0x2
 2652 0705 7D       		.byte	0x7d
 2653 0706 00       		.sleb128 0
 2654 0707 02       		.uleb128 0x2
 2655 0708 74       		.byte	0x74
 2656 0709 00       		.sleb128 0
 2657 070a 00       		.byte	0
 2658 070b 11       		.uleb128 0x11
 2659 070c 48070000 		.4byte	.LVL191
 2660 0710 2E160000 		.4byte	0x162e
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccRuSwul.s 			page 64


 2661 0714 25070000 		.4byte	0x725
 2662 0718 09       		.uleb128 0x9
 2663 0719 01       		.uleb128 0x1
 2664 071a 50       		.byte	0x50
 2665 071b 02       		.uleb128 0x2
 2666 071c 76       		.byte	0x76
 2667 071d 00       		.sleb128 0
 2668 071e 09       		.uleb128 0x9
 2669 071f 01       		.uleb128 0x1
 2670 0720 51       		.byte	0x51
 2671 0721 02       		.uleb128 0x2
 2672 0722 74       		.byte	0x74
 2673 0723 00       		.sleb128 0
 2674 0724 00       		.byte	0
 2675 0725 11       		.uleb128 0x11
 2676 0726 56070000 		.4byte	.LVL192
 2677 072a E1150000 		.4byte	0x15e1
 2678 072e 4F070000 		.4byte	0x74f
 2679 0732 09       		.uleb128 0x9
 2680 0733 01       		.uleb128 0x1
 2681 0734 50       		.byte	0x50
 2682 0735 02       		.uleb128 0x2
 2683 0736 08       		.byte	0x8
 2684 0737 FA       		.byte	0xfa
 2685 0738 09       		.uleb128 0x9
 2686 0739 01       		.uleb128 0x1
 2687 073a 51       		.byte	0x51
 2688 073b 01       		.uleb128 0x1
 2689 073c 31       		.byte	0x31
 2690 073d 09       		.uleb128 0x9
 2691 073e 01       		.uleb128 0x1
 2692 073f 52       		.byte	0x52
 2693 0740 01       		.uleb128 0x1
 2694 0741 34       		.byte	0x34
 2695 0742 09       		.uleb128 0x9
 2696 0743 01       		.uleb128 0x1
 2697 0744 53       		.byte	0x53
 2698 0745 01       		.uleb128 0x1
 2699 0746 30       		.byte	0x30
 2700 0747 09       		.uleb128 0x9
 2701 0748 02       		.uleb128 0x2
 2702 0749 7D       		.byte	0x7d
 2703 074a 00       		.sleb128 0
 2704 074b 02       		.uleb128 0x2
 2705 074c 74       		.byte	0x74
 2706 074d 00       		.sleb128 0
 2707 074e 00       		.byte	0
 2708 074f 11       		.uleb128 0x11
 2709 0750 7A070000 		.4byte	.LVL193
 2710 0754 E1150000 		.4byte	0x15e1
 2711 0758 7A070000 		.4byte	0x77a
 2712 075c 09       		.uleb128 0x9
 2713 075d 01       		.uleb128 0x1
 2714 075e 50       		.byte	0x50
 2715 075f 03       		.uleb128 0x3
 2716 0760 0A       		.byte	0xa
 2717 0761 0D02     		.2byte	0x20d
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccRuSwul.s 			page 65


 2718 0763 09       		.uleb128 0x9
 2719 0764 01       		.uleb128 0x1
 2720 0765 51       		.byte	0x51
 2721 0766 01       		.uleb128 0x1
 2722 0767 30       		.byte	0x30
 2723 0768 09       		.uleb128 0x9
 2724 0769 01       		.uleb128 0x1
 2725 076a 52       		.byte	0x52
 2726 076b 01       		.uleb128 0x1
 2727 076c 35       		.byte	0x35
 2728 076d 09       		.uleb128 0x9
 2729 076e 01       		.uleb128 0x1
 2730 076f 53       		.byte	0x53
 2731 0770 01       		.uleb128 0x1
 2732 0771 30       		.byte	0x30
 2733 0772 09       		.uleb128 0x9
 2734 0773 02       		.uleb128 0x2
 2735 0774 7D       		.byte	0x7d
 2736 0775 00       		.sleb128 0
 2737 0776 02       		.uleb128 0x2
 2738 0777 08       		.byte	0x8
 2739 0778 AA       		.byte	0xaa
 2740 0779 00       		.byte	0
 2741 077a 11       		.uleb128 0x11
 2742 077b 8C070000 		.4byte	.LVL194
 2743 077f E1150000 		.4byte	0x15e1
 2744 0783 A4070000 		.4byte	0x7a4
 2745 0787 09       		.uleb128 0x9
 2746 0788 01       		.uleb128 0x1
 2747 0789 50       		.byte	0x50
 2748 078a 02       		.uleb128 0x2
 2749 078b 08       		.byte	0x8
 2750 078c FA       		.byte	0xfa
 2751 078d 09       		.uleb128 0x9
 2752 078e 01       		.uleb128 0x1
 2753 078f 51       		.byte	0x51
 2754 0790 01       		.uleb128 0x1
 2755 0791 30       		.byte	0x30
 2756 0792 09       		.uleb128 0x9
 2757 0793 01       		.uleb128 0x1
 2758 0794 52       		.byte	0x52
 2759 0795 01       		.uleb128 0x1
 2760 0796 35       		.byte	0x35
 2761 0797 09       		.uleb128 0x9
 2762 0798 01       		.uleb128 0x1
 2763 0799 53       		.byte	0x53
 2764 079a 01       		.uleb128 0x1
 2765 079b 30       		.byte	0x30
 2766 079c 09       		.uleb128 0x9
 2767 079d 02       		.uleb128 0x2
 2768 079e 7D       		.byte	0x7d
 2769 079f 00       		.sleb128 0
 2770 07a0 02       		.uleb128 0x2
 2771 07a1 08       		.byte	0x8
 2772 07a2 AA       		.byte	0xaa
 2773 07a3 00       		.byte	0
 2774 07a4 11       		.uleb128 0x11
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccRuSwul.s 			page 66


 2775 07a5 94070000 		.4byte	.LVL195
 2776 07a9 2E160000 		.4byte	0x162e
 2777 07ad BD070000 		.4byte	0x7bd
 2778 07b1 09       		.uleb128 0x9
 2779 07b2 01       		.uleb128 0x1
 2780 07b3 50       		.byte	0x50
 2781 07b4 01       		.uleb128 0x1
 2782 07b5 32       		.byte	0x32
 2783 07b6 09       		.uleb128 0x9
 2784 07b7 01       		.uleb128 0x1
 2785 07b8 51       		.byte	0x51
 2786 07b9 02       		.uleb128 0x2
 2787 07ba 08       		.byte	0x8
 2788 07bb AA       		.byte	0xaa
 2789 07bc 00       		.byte	0
 2790 07bd 06       		.uleb128 0x6
 2791 07be 9E070000 		.4byte	.LVL196
 2792 07c2 39160000 		.4byte	0x1639
 2793 07c6 11       		.uleb128 0x11
 2794 07c7 AE070000 		.4byte	.LVL197
 2795 07cb E1150000 		.4byte	0x15e1
 2796 07cf F0070000 		.4byte	0x7f0
 2797 07d3 09       		.uleb128 0x9
 2798 07d4 01       		.uleb128 0x1
 2799 07d5 50       		.byte	0x50
 2800 07d6 02       		.uleb128 0x2
 2801 07d7 08       		.byte	0x8
 2802 07d8 50       		.byte	0x50
 2803 07d9 09       		.uleb128 0x9
 2804 07da 01       		.uleb128 0x1
 2805 07db 51       		.byte	0x51
 2806 07dc 01       		.uleb128 0x1
 2807 07dd 31       		.byte	0x31
 2808 07de 09       		.uleb128 0x9
 2809 07df 01       		.uleb128 0x1
 2810 07e0 52       		.byte	0x52
 2811 07e1 01       		.uleb128 0x1
 2812 07e2 34       		.byte	0x34
 2813 07e3 09       		.uleb128 0x9
 2814 07e4 01       		.uleb128 0x1
 2815 07e5 53       		.byte	0x53
 2816 07e6 01       		.uleb128 0x1
 2817 07e7 30       		.byte	0x30
 2818 07e8 09       		.uleb128 0x9
 2819 07e9 02       		.uleb128 0x2
 2820 07ea 7D       		.byte	0x7d
 2821 07eb 00       		.sleb128 0
 2822 07ec 02       		.uleb128 0x2
 2823 07ed 08       		.byte	0x8
 2824 07ee AA       		.byte	0xaa
 2825 07ef 00       		.byte	0
 2826 07f0 06       		.uleb128 0x6
 2827 07f1 BE070000 		.4byte	.LVL198
 2828 07f5 39160000 		.4byte	0x1639
 2829 07f9 11       		.uleb128 0x11
 2830 07fa C6070000 		.4byte	.LVL199
 2831 07fe 39160000 		.4byte	0x1639
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccRuSwul.s 			page 67


 2832 0802 0C080000 		.4byte	0x80c
 2833 0806 09       		.uleb128 0x9
 2834 0807 01       		.uleb128 0x1
 2835 0808 50       		.byte	0x50
 2836 0809 01       		.uleb128 0x1
 2837 080a 30       		.byte	0x30
 2838 080b 00       		.byte	0
 2839 080c 06       		.uleb128 0x6
 2840 080d CA070000 		.4byte	.LVL200
 2841 0811 5A160000 		.4byte	0x165a
 2842 0815 06       		.uleb128 0x6
 2843 0816 D4070000 		.4byte	.LVL201
 2844 081a 39160000 		.4byte	0x1639
 2845 081e 11       		.uleb128 0x11
 2846 081f 02080000 		.4byte	.LVL203
 2847 0823 E1150000 		.4byte	0x15e1
 2848 0827 48080000 		.4byte	0x848
 2849 082b 09       		.uleb128 0x9
 2850 082c 01       		.uleb128 0x1
 2851 082d 50       		.byte	0x50
 2852 082e 02       		.uleb128 0x2
 2853 082f 08       		.byte	0x8
 2854 0830 D2       		.byte	0xd2
 2855 0831 09       		.uleb128 0x9
 2856 0832 01       		.uleb128 0x1
 2857 0833 51       		.byte	0x51
 2858 0834 01       		.uleb128 0x1
 2859 0835 30       		.byte	0x30
 2860 0836 09       		.uleb128 0x9
 2861 0837 01       		.uleb128 0x1
 2862 0838 52       		.byte	0x52
 2863 0839 01       		.uleb128 0x1
 2864 083a 35       		.byte	0x35
 2865 083b 09       		.uleb128 0x9
 2866 083c 01       		.uleb128 0x1
 2867 083d 53       		.byte	0x53
 2868 083e 01       		.uleb128 0x1
 2869 083f 30       		.byte	0x30
 2870 0840 09       		.uleb128 0x9
 2871 0841 02       		.uleb128 0x2
 2872 0842 7D       		.byte	0x7d
 2873 0843 00       		.sleb128 0
 2874 0844 02       		.uleb128 0x2
 2875 0845 74       		.byte	0x74
 2876 0846 00       		.sleb128 0
 2877 0847 00       		.byte	0
 2878 0848 11       		.uleb128 0x11
 2879 0849 0A080000 		.4byte	.LVL204
 2880 084d 2E160000 		.4byte	0x162e
 2881 0851 62080000 		.4byte	0x862
 2882 0855 09       		.uleb128 0x9
 2883 0856 01       		.uleb128 0x1
 2884 0857 50       		.byte	0x50
 2885 0858 02       		.uleb128 0x2
 2886 0859 76       		.byte	0x76
 2887 085a 00       		.sleb128 0
 2888 085b 09       		.uleb128 0x9
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccRuSwul.s 			page 68


 2889 085c 01       		.uleb128 0x1
 2890 085d 51       		.byte	0x51
 2891 085e 02       		.uleb128 0x2
 2892 085f 74       		.byte	0x74
 2893 0860 00       		.sleb128 0
 2894 0861 00       		.byte	0
 2895 0862 11       		.uleb128 0x11
 2896 0863 1A080000 		.4byte	.LVL205
 2897 0867 E1150000 		.4byte	0x15e1
 2898 086b 8D080000 		.4byte	0x88d
 2899 086f 09       		.uleb128 0x9
 2900 0870 01       		.uleb128 0x1
 2901 0871 50       		.byte	0x50
 2902 0872 03       		.uleb128 0x3
 2903 0873 0A       		.byte	0xa
 2904 0874 2602     		.2byte	0x226
 2905 0876 09       		.uleb128 0x9
 2906 0877 01       		.uleb128 0x1
 2907 0878 51       		.byte	0x51
 2908 0879 01       		.uleb128 0x1
 2909 087a 30       		.byte	0x30
 2910 087b 09       		.uleb128 0x9
 2911 087c 01       		.uleb128 0x1
 2912 087d 52       		.byte	0x52
 2913 087e 01       		.uleb128 0x1
 2914 087f 35       		.byte	0x35
 2915 0880 09       		.uleb128 0x9
 2916 0881 01       		.uleb128 0x1
 2917 0882 53       		.byte	0x53
 2918 0883 01       		.uleb128 0x1
 2919 0884 30       		.byte	0x30
 2920 0885 09       		.uleb128 0x9
 2921 0886 02       		.uleb128 0x2
 2922 0887 7D       		.byte	0x7d
 2923 0888 00       		.sleb128 0
 2924 0889 02       		.uleb128 0x2
 2925 088a 74       		.byte	0x74
 2926 088b 00       		.sleb128 0
 2927 088c 00       		.byte	0
 2928 088d 11       		.uleb128 0x11
 2929 088e 22080000 		.4byte	.LVL206
 2930 0892 2E160000 		.4byte	0x162e
 2931 0896 A6080000 		.4byte	0x8a6
 2932 089a 09       		.uleb128 0x9
 2933 089b 01       		.uleb128 0x1
 2934 089c 50       		.byte	0x50
 2935 089d 01       		.uleb128 0x1
 2936 089e 31       		.byte	0x31
 2937 089f 09       		.uleb128 0x9
 2938 08a0 01       		.uleb128 0x1
 2939 08a1 51       		.byte	0x51
 2940 08a2 02       		.uleb128 0x2
 2941 08a3 74       		.byte	0x74
 2942 08a4 00       		.sleb128 0
 2943 08a5 00       		.byte	0
 2944 08a6 08       		.uleb128 0x8
 2945 08a7 30080000 		.4byte	.LVL207
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccRuSwul.s 			page 69


 2946 08ab E1150000 		.4byte	0x15e1
 2947 08af 09       		.uleb128 0x9
 2948 08b0 01       		.uleb128 0x1
 2949 08b1 50       		.byte	0x50
 2950 08b2 02       		.uleb128 0x2
 2951 08b3 08       		.byte	0x8
 2952 08b4 7D       		.byte	0x7d
 2953 08b5 09       		.uleb128 0x9
 2954 08b6 01       		.uleb128 0x1
 2955 08b7 51       		.byte	0x51
 2956 08b8 01       		.uleb128 0x1
 2957 08b9 30       		.byte	0x30
 2958 08ba 09       		.uleb128 0x9
 2959 08bb 01       		.uleb128 0x1
 2960 08bc 52       		.byte	0x52
 2961 08bd 01       		.uleb128 0x1
 2962 08be 35       		.byte	0x35
 2963 08bf 09       		.uleb128 0x9
 2964 08c0 01       		.uleb128 0x1
 2965 08c1 53       		.byte	0x53
 2966 08c2 01       		.uleb128 0x1
 2967 08c3 30       		.byte	0x30
 2968 08c4 09       		.uleb128 0x9
 2969 08c5 02       		.uleb128 0x2
 2970 08c6 7D       		.byte	0x7d
 2971 08c7 00       		.sleb128 0
 2972 08c8 02       		.uleb128 0x2
 2973 08c9 74       		.byte	0x74
 2974 08ca 00       		.sleb128 0
 2975 08cb 00       		.byte	0
 2976 08cc 00       		.byte	0
 2977 08cd 06       		.uleb128 0x6
 2978 08ce 08010000 		.4byte	.LVL42
 2979 08d2 65160000 		.4byte	0x1665
 2980 08d6 11       		.uleb128 0x11
 2981 08d7 70030000 		.4byte	.LVL97
 2982 08db E1150000 		.4byte	0x15e1
 2983 08df 00090000 		.4byte	0x900
 2984 08e3 09       		.uleb128 0x9
 2985 08e4 01       		.uleb128 0x1
 2986 08e5 50       		.byte	0x50
 2987 08e6 02       		.uleb128 0x2
 2988 08e7 08       		.byte	0x8
 2989 08e8 E6       		.byte	0xe6
 2990 08e9 09       		.uleb128 0x9
 2991 08ea 01       		.uleb128 0x1
 2992 08eb 51       		.byte	0x51
 2993 08ec 01       		.uleb128 0x1
 2994 08ed 30       		.byte	0x30
 2995 08ee 09       		.uleb128 0x9
 2996 08ef 01       		.uleb128 0x1
 2997 08f0 52       		.byte	0x52
 2998 08f1 01       		.uleb128 0x1
 2999 08f2 35       		.byte	0x35
 3000 08f3 09       		.uleb128 0x9
 3001 08f4 01       		.uleb128 0x1
 3002 08f5 53       		.byte	0x53
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccRuSwul.s 			page 70


 3003 08f6 01       		.uleb128 0x1
 3004 08f7 30       		.byte	0x30
 3005 08f8 09       		.uleb128 0x9
 3006 08f9 02       		.uleb128 0x2
 3007 08fa 7D       		.byte	0x7d
 3008 08fb 00       		.sleb128 0
 3009 08fc 02       		.uleb128 0x2
 3010 08fd 74       		.byte	0x74
 3011 08fe 00       		.sleb128 0
 3012 08ff 00       		.byte	0
 3013 0900 06       		.uleb128 0x6
 3014 0901 74030000 		.4byte	.LVL98
 3015 0905 D6150000 		.4byte	0x15d6
 3016 0909 11       		.uleb128 0x11
 3017 090a 7C030000 		.4byte	.LVL99
 3018 090e 2E160000 		.4byte	0x162e
 3019 0912 22090000 		.4byte	0x922
 3020 0916 09       		.uleb128 0x9
 3021 0917 01       		.uleb128 0x1
 3022 0918 50       		.byte	0x50
 3023 0919 01       		.uleb128 0x1
 3024 091a 30       		.byte	0x30
 3025 091b 09       		.uleb128 0x9
 3026 091c 01       		.uleb128 0x1
 3027 091d 51       		.byte	0x51
 3028 091e 02       		.uleb128 0x2
 3029 091f 74       		.byte	0x74
 3030 0920 00       		.sleb128 0
 3031 0921 00       		.byte	0
 3032 0922 06       		.uleb128 0x6
 3033 0923 80030000 		.4byte	.LVL100
 3034 0927 D6150000 		.4byte	0x15d6
 3035 092b 11       		.uleb128 0x11
 3036 092c 8E030000 		.4byte	.LVL101
 3037 0930 E1150000 		.4byte	0x15e1
 3038 0934 55090000 		.4byte	0x955
 3039 0938 09       		.uleb128 0x9
 3040 0939 01       		.uleb128 0x1
 3041 093a 50       		.byte	0x50
 3042 093b 02       		.uleb128 0x2
 3043 093c 08       		.byte	0x8
 3044 093d 82       		.byte	0x82
 3045 093e 09       		.uleb128 0x9
 3046 093f 01       		.uleb128 0x1
 3047 0940 51       		.byte	0x51
 3048 0941 01       		.uleb128 0x1
 3049 0942 31       		.byte	0x31
 3050 0943 09       		.uleb128 0x9
 3051 0944 01       		.uleb128 0x1
 3052 0945 52       		.byte	0x52
 3053 0946 01       		.uleb128 0x1
 3054 0947 34       		.byte	0x34
 3055 0948 09       		.uleb128 0x9
 3056 0949 01       		.uleb128 0x1
 3057 094a 53       		.byte	0x53
 3058 094b 01       		.uleb128 0x1
 3059 094c 30       		.byte	0x30
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccRuSwul.s 			page 71


 3060 094d 09       		.uleb128 0x9
 3061 094e 02       		.uleb128 0x2
 3062 094f 7D       		.byte	0x7d
 3063 0950 00       		.sleb128 0
 3064 0951 02       		.uleb128 0x2
 3065 0952 74       		.byte	0x74
 3066 0953 00       		.sleb128 0
 3067 0954 00       		.byte	0
 3068 0955 11       		.uleb128 0x11
 3069 0956 96030000 		.4byte	.LVL102
 3070 095a 2E160000 		.4byte	0x162e
 3071 095e 6F090000 		.4byte	0x96f
 3072 0962 09       		.uleb128 0x9
 3073 0963 01       		.uleb128 0x1
 3074 0964 50       		.byte	0x50
 3075 0965 02       		.uleb128 0x2
 3076 0966 76       		.byte	0x76
 3077 0967 00       		.sleb128 0
 3078 0968 09       		.uleb128 0x9
 3079 0969 01       		.uleb128 0x1
 3080 096a 51       		.byte	0x51
 3081 096b 02       		.uleb128 0x2
 3082 096c 74       		.byte	0x74
 3083 096d 00       		.sleb128 0
 3084 096e 00       		.byte	0
 3085 096f 11       		.uleb128 0x11
 3086 0970 A4030000 		.4byte	.LVL103
 3087 0974 E1150000 		.4byte	0x15e1
 3088 0978 99090000 		.4byte	0x999
 3089 097c 09       		.uleb128 0x9
 3090 097d 01       		.uleb128 0x1
 3091 097e 50       		.byte	0x50
 3092 097f 02       		.uleb128 0x2
 3093 0980 08       		.byte	0x8
 3094 0981 32       		.byte	0x32
 3095 0982 09       		.uleb128 0x9
 3096 0983 01       		.uleb128 0x1
 3097 0984 51       		.byte	0x51
 3098 0985 01       		.uleb128 0x1
 3099 0986 31       		.byte	0x31
 3100 0987 09       		.uleb128 0x9
 3101 0988 01       		.uleb128 0x1
 3102 0989 52       		.byte	0x52
 3103 098a 01       		.uleb128 0x1
 3104 098b 34       		.byte	0x34
 3105 098c 09       		.uleb128 0x9
 3106 098d 01       		.uleb128 0x1
 3107 098e 53       		.byte	0x53
 3108 098f 01       		.uleb128 0x1
 3109 0990 30       		.byte	0x30
 3110 0991 09       		.uleb128 0x9
 3111 0992 02       		.uleb128 0x2
 3112 0993 7D       		.byte	0x7d
 3113 0994 00       		.sleb128 0
 3114 0995 02       		.uleb128 0x2
 3115 0996 74       		.byte	0x74
 3116 0997 00       		.sleb128 0
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccRuSwul.s 			page 72


 3117 0998 00       		.byte	0
 3118 0999 11       		.uleb128 0x11
 3119 099a C6030000 		.4byte	.LVL104
 3120 099e E1150000 		.4byte	0x15e1
 3121 09a2 C3090000 		.4byte	0x9c3
 3122 09a6 09       		.uleb128 0x9
 3123 09a7 01       		.uleb128 0x1
 3124 09a8 50       		.byte	0x50
 3125 09a9 02       		.uleb128 0x2
 3126 09aa 08       		.byte	0x8
 3127 09ab F0       		.byte	0xf0
 3128 09ac 09       		.uleb128 0x9
 3129 09ad 01       		.uleb128 0x1
 3130 09ae 51       		.byte	0x51
 3131 09af 01       		.uleb128 0x1
 3132 09b0 30       		.byte	0x30
 3133 09b1 09       		.uleb128 0x9
 3134 09b2 01       		.uleb128 0x1
 3135 09b3 52       		.byte	0x52
 3136 09b4 01       		.uleb128 0x1
 3137 09b5 34       		.byte	0x34
 3138 09b6 09       		.uleb128 0x9
 3139 09b7 01       		.uleb128 0x1
 3140 09b8 53       		.byte	0x53
 3141 09b9 01       		.uleb128 0x1
 3142 09ba 34       		.byte	0x34
 3143 09bb 09       		.uleb128 0x9
 3144 09bc 02       		.uleb128 0x2
 3145 09bd 7D       		.byte	0x7d
 3146 09be 00       		.sleb128 0
 3147 09bf 02       		.uleb128 0x2
 3148 09c0 74       		.byte	0x74
 3149 09c1 00       		.sleb128 0
 3150 09c2 00       		.byte	0
 3151 09c3 06       		.uleb128 0x6
 3152 09c4 CA030000 		.4byte	.LVL105
 3153 09c8 D6150000 		.4byte	0x15d6
 3154 09cc 11       		.uleb128 0x11
 3155 09cd D2030000 		.4byte	.LVL106
 3156 09d1 2E160000 		.4byte	0x162e
 3157 09d5 E5090000 		.4byte	0x9e5
 3158 09d9 09       		.uleb128 0x9
 3159 09da 01       		.uleb128 0x1
 3160 09db 50       		.byte	0x50
 3161 09dc 01       		.uleb128 0x1
 3162 09dd 30       		.byte	0x30
 3163 09de 09       		.uleb128 0x9
 3164 09df 01       		.uleb128 0x1
 3165 09e0 51       		.byte	0x51
 3166 09e1 02       		.uleb128 0x2
 3167 09e2 74       		.byte	0x74
 3168 09e3 00       		.sleb128 0
 3169 09e4 00       		.byte	0
 3170 09e5 06       		.uleb128 0x6
 3171 09e6 D6030000 		.4byte	.LVL107
 3172 09ea D6150000 		.4byte	0x15d6
 3173 09ee 11       		.uleb128 0x11
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccRuSwul.s 			page 73


 3174 09ef E4030000 		.4byte	.LVL108
 3175 09f3 E1150000 		.4byte	0x15e1
 3176 09f7 180A0000 		.4byte	0xa18
 3177 09fb 09       		.uleb128 0x9
 3178 09fc 01       		.uleb128 0x1
 3179 09fd 50       		.byte	0x50
 3180 09fe 02       		.uleb128 0x2
 3181 09ff 08       		.byte	0x8
 3182 0a00 82       		.byte	0x82
 3183 0a01 09       		.uleb128 0x9
 3184 0a02 01       		.uleb128 0x1
 3185 0a03 51       		.byte	0x51
 3186 0a04 01       		.uleb128 0x1
 3187 0a05 31       		.byte	0x31
 3188 0a06 09       		.uleb128 0x9
 3189 0a07 01       		.uleb128 0x1
 3190 0a08 52       		.byte	0x52
 3191 0a09 01       		.uleb128 0x1
 3192 0a0a 34       		.byte	0x34
 3193 0a0b 09       		.uleb128 0x9
 3194 0a0c 01       		.uleb128 0x1
 3195 0a0d 53       		.byte	0x53
 3196 0a0e 01       		.uleb128 0x1
 3197 0a0f 30       		.byte	0x30
 3198 0a10 09       		.uleb128 0x9
 3199 0a11 02       		.uleb128 0x2
 3200 0a12 7D       		.byte	0x7d
 3201 0a13 00       		.sleb128 0
 3202 0a14 02       		.uleb128 0x2
 3203 0a15 74       		.byte	0x74
 3204 0a16 00       		.sleb128 0
 3205 0a17 00       		.byte	0
 3206 0a18 11       		.uleb128 0x11
 3207 0a19 EC030000 		.4byte	.LVL109
 3208 0a1d 2E160000 		.4byte	0x162e
 3209 0a21 310A0000 		.4byte	0xa31
 3210 0a25 09       		.uleb128 0x9
 3211 0a26 01       		.uleb128 0x1
 3212 0a27 50       		.byte	0x50
 3213 0a28 01       		.uleb128 0x1
 3214 0a29 31       		.byte	0x31
 3215 0a2a 09       		.uleb128 0x9
 3216 0a2b 01       		.uleb128 0x1
 3217 0a2c 51       		.byte	0x51
 3218 0a2d 02       		.uleb128 0x2
 3219 0a2e 74       		.byte	0x74
 3220 0a2f 00       		.sleb128 0
 3221 0a30 00       		.byte	0
 3222 0a31 11       		.uleb128 0x11
 3223 0a32 FA030000 		.4byte	.LVL110
 3224 0a36 E1150000 		.4byte	0x15e1
 3225 0a3a 5B0A0000 		.4byte	0xa5b
 3226 0a3e 09       		.uleb128 0x9
 3227 0a3f 01       		.uleb128 0x1
 3228 0a40 50       		.byte	0x50
 3229 0a41 02       		.uleb128 0x2
 3230 0a42 08       		.byte	0x8
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccRuSwul.s 			page 74


 3231 0a43 32       		.byte	0x32
 3232 0a44 09       		.uleb128 0x9
 3233 0a45 01       		.uleb128 0x1
 3234 0a46 51       		.byte	0x51
 3235 0a47 01       		.uleb128 0x1
 3236 0a48 31       		.byte	0x31
 3237 0a49 09       		.uleb128 0x9
 3238 0a4a 01       		.uleb128 0x1
 3239 0a4b 52       		.byte	0x52
 3240 0a4c 01       		.uleb128 0x1
 3241 0a4d 34       		.byte	0x34
 3242 0a4e 09       		.uleb128 0x9
 3243 0a4f 01       		.uleb128 0x1
 3244 0a50 53       		.byte	0x53
 3245 0a51 01       		.uleb128 0x1
 3246 0a52 30       		.byte	0x30
 3247 0a53 09       		.uleb128 0x9
 3248 0a54 02       		.uleb128 0x2
 3249 0a55 7D       		.byte	0x7d
 3250 0a56 00       		.sleb128 0
 3251 0a57 02       		.uleb128 0x2
 3252 0a58 74       		.byte	0x74
 3253 0a59 00       		.sleb128 0
 3254 0a5a 00       		.byte	0
 3255 0a5b 11       		.uleb128 0x11
 3256 0a5c 18040000 		.4byte	.LVL111
 3257 0a60 E1150000 		.4byte	0x15e1
 3258 0a64 860A0000 		.4byte	0xa86
 3259 0a68 09       		.uleb128 0x9
 3260 0a69 01       		.uleb128 0x1
 3261 0a6a 50       		.byte	0x50
 3262 0a6b 03       		.uleb128 0x3
 3263 0a6c 0A       		.byte	0xa
 3264 0a6d 0E01     		.2byte	0x10e
 3265 0a6f 09       		.uleb128 0x9
 3266 0a70 01       		.uleb128 0x1
 3267 0a71 51       		.byte	0x51
 3268 0a72 01       		.uleb128 0x1
 3269 0a73 30       		.byte	0x30
 3270 0a74 09       		.uleb128 0x9
 3271 0a75 01       		.uleb128 0x1
 3272 0a76 52       		.byte	0x52
 3273 0a77 01       		.uleb128 0x1
 3274 0a78 34       		.byte	0x34
 3275 0a79 09       		.uleb128 0x9
 3276 0a7a 01       		.uleb128 0x1
 3277 0a7b 53       		.byte	0x53
 3278 0a7c 01       		.uleb128 0x1
 3279 0a7d 34       		.byte	0x34
 3280 0a7e 09       		.uleb128 0x9
 3281 0a7f 02       		.uleb128 0x2
 3282 0a80 7D       		.byte	0x7d
 3283 0a81 00       		.sleb128 0
 3284 0a82 02       		.uleb128 0x2
 3285 0a83 74       		.byte	0x74
 3286 0a84 00       		.sleb128 0
 3287 0a85 00       		.byte	0
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccRuSwul.s 			page 75


 3288 0a86 06       		.uleb128 0x6
 3289 0a87 1C040000 		.4byte	.LVL112
 3290 0a8b D6150000 		.4byte	0x15d6
 3291 0a8f 11       		.uleb128 0x11
 3292 0a90 24040000 		.4byte	.LVL113
 3293 0a94 2E160000 		.4byte	0x162e
 3294 0a98 A80A0000 		.4byte	0xaa8
 3295 0a9c 09       		.uleb128 0x9
 3296 0a9d 01       		.uleb128 0x1
 3297 0a9e 50       		.byte	0x50
 3298 0a9f 01       		.uleb128 0x1
 3299 0aa0 30       		.byte	0x30
 3300 0aa1 09       		.uleb128 0x9
 3301 0aa2 01       		.uleb128 0x1
 3302 0aa3 51       		.byte	0x51
 3303 0aa4 02       		.uleb128 0x2
 3304 0aa5 74       		.byte	0x74
 3305 0aa6 00       		.sleb128 0
 3306 0aa7 00       		.byte	0
 3307 0aa8 06       		.uleb128 0x6
 3308 0aa9 28040000 		.4byte	.LVL114
 3309 0aad D6150000 		.4byte	0x15d6
 3310 0ab1 11       		.uleb128 0x11
 3311 0ab2 36040000 		.4byte	.LVL115
 3312 0ab6 E1150000 		.4byte	0x15e1
 3313 0aba DB0A0000 		.4byte	0xadb
 3314 0abe 09       		.uleb128 0x9
 3315 0abf 01       		.uleb128 0x1
 3316 0ac0 50       		.byte	0x50
 3317 0ac1 02       		.uleb128 0x2
 3318 0ac2 08       		.byte	0x8
 3319 0ac3 82       		.byte	0x82
 3320 0ac4 09       		.uleb128 0x9
 3321 0ac5 01       		.uleb128 0x1
 3322 0ac6 51       		.byte	0x51
 3323 0ac7 01       		.uleb128 0x1
 3324 0ac8 31       		.byte	0x31
 3325 0ac9 09       		.uleb128 0x9
 3326 0aca 01       		.uleb128 0x1
 3327 0acb 52       		.byte	0x52
 3328 0acc 01       		.uleb128 0x1
 3329 0acd 34       		.byte	0x34
 3330 0ace 09       		.uleb128 0x9
 3331 0acf 01       		.uleb128 0x1
 3332 0ad0 53       		.byte	0x53
 3333 0ad1 01       		.uleb128 0x1
 3334 0ad2 30       		.byte	0x30
 3335 0ad3 09       		.uleb128 0x9
 3336 0ad4 02       		.uleb128 0x2
 3337 0ad5 7D       		.byte	0x7d
 3338 0ad6 00       		.sleb128 0
 3339 0ad7 02       		.uleb128 0x2
 3340 0ad8 74       		.byte	0x74
 3341 0ad9 00       		.sleb128 0
 3342 0ada 00       		.byte	0
 3343 0adb 11       		.uleb128 0x11
 3344 0adc 3E040000 		.4byte	.LVL116
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccRuSwul.s 			page 76


 3345 0ae0 2E160000 		.4byte	0x162e
 3346 0ae4 F40A0000 		.4byte	0xaf4
 3347 0ae8 09       		.uleb128 0x9
 3348 0ae9 01       		.uleb128 0x1
 3349 0aea 50       		.byte	0x50
 3350 0aeb 01       		.uleb128 0x1
 3351 0aec 31       		.byte	0x31
 3352 0aed 09       		.uleb128 0x9
 3353 0aee 01       		.uleb128 0x1
 3354 0aef 51       		.byte	0x51
 3355 0af0 02       		.uleb128 0x2
 3356 0af1 74       		.byte	0x74
 3357 0af2 00       		.sleb128 0
 3358 0af3 00       		.byte	0
 3359 0af4 11       		.uleb128 0x11
 3360 0af5 4C040000 		.4byte	.LVL117
 3361 0af9 E1150000 		.4byte	0x15e1
 3362 0afd 1E0B0000 		.4byte	0xb1e
 3363 0b01 09       		.uleb128 0x9
 3364 0b02 01       		.uleb128 0x1
 3365 0b03 50       		.byte	0x50
 3366 0b04 02       		.uleb128 0x2
 3367 0b05 08       		.byte	0x8
 3368 0b06 32       		.byte	0x32
 3369 0b07 09       		.uleb128 0x9
 3370 0b08 01       		.uleb128 0x1
 3371 0b09 51       		.byte	0x51
 3372 0b0a 01       		.uleb128 0x1
 3373 0b0b 31       		.byte	0x31
 3374 0b0c 09       		.uleb128 0x9
 3375 0b0d 01       		.uleb128 0x1
 3376 0b0e 52       		.byte	0x52
 3377 0b0f 01       		.uleb128 0x1
 3378 0b10 34       		.byte	0x34
 3379 0b11 09       		.uleb128 0x9
 3380 0b12 01       		.uleb128 0x1
 3381 0b13 53       		.byte	0x53
 3382 0b14 01       		.uleb128 0x1
 3383 0b15 30       		.byte	0x30
 3384 0b16 09       		.uleb128 0x9
 3385 0b17 02       		.uleb128 0x2
 3386 0b18 7D       		.byte	0x7d
 3387 0b19 00       		.sleb128 0
 3388 0b1a 02       		.uleb128 0x2
 3389 0b1b 74       		.byte	0x74
 3390 0b1c 00       		.sleb128 0
 3391 0b1d 00       		.byte	0
 3392 0b1e 11       		.uleb128 0x11
 3393 0b1f 6A040000 		.4byte	.LVL118
 3394 0b23 E1150000 		.4byte	0x15e1
 3395 0b27 490B0000 		.4byte	0xb49
 3396 0b2b 09       		.uleb128 0x9
 3397 0b2c 01       		.uleb128 0x1
 3398 0b2d 50       		.byte	0x50
 3399 0b2e 03       		.uleb128 0x3
 3400 0b2f 0A       		.byte	0xa
 3401 0b30 0E01     		.2byte	0x10e
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccRuSwul.s 			page 77


 3402 0b32 09       		.uleb128 0x9
 3403 0b33 01       		.uleb128 0x1
 3404 0b34 51       		.byte	0x51
 3405 0b35 01       		.uleb128 0x1
 3406 0b36 30       		.byte	0x30
 3407 0b37 09       		.uleb128 0x9
 3408 0b38 01       		.uleb128 0x1
 3409 0b39 52       		.byte	0x52
 3410 0b3a 01       		.uleb128 0x1
 3411 0b3b 34       		.byte	0x34
 3412 0b3c 09       		.uleb128 0x9
 3413 0b3d 01       		.uleb128 0x1
 3414 0b3e 53       		.byte	0x53
 3415 0b3f 01       		.uleb128 0x1
 3416 0b40 34       		.byte	0x34
 3417 0b41 09       		.uleb128 0x9
 3418 0b42 02       		.uleb128 0x2
 3419 0b43 7D       		.byte	0x7d
 3420 0b44 00       		.sleb128 0
 3421 0b45 02       		.uleb128 0x2
 3422 0b46 74       		.byte	0x74
 3423 0b47 00       		.sleb128 0
 3424 0b48 00       		.byte	0
 3425 0b49 06       		.uleb128 0x6
 3426 0b4a 6E040000 		.4byte	.LVL119
 3427 0b4e D6150000 		.4byte	0x15d6
 3428 0b52 11       		.uleb128 0x11
 3429 0b53 76040000 		.4byte	.LVL120
 3430 0b57 2E160000 		.4byte	0x162e
 3431 0b5b 6B0B0000 		.4byte	0xb6b
 3432 0b5f 09       		.uleb128 0x9
 3433 0b60 01       		.uleb128 0x1
 3434 0b61 50       		.byte	0x50
 3435 0b62 01       		.uleb128 0x1
 3436 0b63 30       		.byte	0x30
 3437 0b64 09       		.uleb128 0x9
 3438 0b65 01       		.uleb128 0x1
 3439 0b66 51       		.byte	0x51
 3440 0b67 02       		.uleb128 0x2
 3441 0b68 74       		.byte	0x74
 3442 0b69 00       		.sleb128 0
 3443 0b6a 00       		.byte	0
 3444 0b6b 06       		.uleb128 0x6
 3445 0b6c 7A040000 		.4byte	.LVL121
 3446 0b70 D6150000 		.4byte	0x15d6
 3447 0b74 11       		.uleb128 0x11
 3448 0b75 88040000 		.4byte	.LVL122
 3449 0b79 E1150000 		.4byte	0x15e1
 3450 0b7d 9E0B0000 		.4byte	0xb9e
 3451 0b81 09       		.uleb128 0x9
 3452 0b82 01       		.uleb128 0x1
 3453 0b83 50       		.byte	0x50
 3454 0b84 02       		.uleb128 0x2
 3455 0b85 08       		.byte	0x8
 3456 0b86 82       		.byte	0x82
 3457 0b87 09       		.uleb128 0x9
 3458 0b88 01       		.uleb128 0x1
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccRuSwul.s 			page 78


 3459 0b89 51       		.byte	0x51
 3460 0b8a 01       		.uleb128 0x1
 3461 0b8b 31       		.byte	0x31
 3462 0b8c 09       		.uleb128 0x9
 3463 0b8d 01       		.uleb128 0x1
 3464 0b8e 52       		.byte	0x52
 3465 0b8f 01       		.uleb128 0x1
 3466 0b90 34       		.byte	0x34
 3467 0b91 09       		.uleb128 0x9
 3468 0b92 01       		.uleb128 0x1
 3469 0b93 53       		.byte	0x53
 3470 0b94 01       		.uleb128 0x1
 3471 0b95 30       		.byte	0x30
 3472 0b96 09       		.uleb128 0x9
 3473 0b97 02       		.uleb128 0x2
 3474 0b98 7D       		.byte	0x7d
 3475 0b99 00       		.sleb128 0
 3476 0b9a 02       		.uleb128 0x2
 3477 0b9b 74       		.byte	0x74
 3478 0b9c 00       		.sleb128 0
 3479 0b9d 00       		.byte	0
 3480 0b9e 11       		.uleb128 0x11
 3481 0b9f 90040000 		.4byte	.LVL123
 3482 0ba3 2E160000 		.4byte	0x162e
 3483 0ba7 B80B0000 		.4byte	0xbb8
 3484 0bab 09       		.uleb128 0x9
 3485 0bac 01       		.uleb128 0x1
 3486 0bad 50       		.byte	0x50
 3487 0bae 02       		.uleb128 0x2
 3488 0baf 76       		.byte	0x76
 3489 0bb0 00       		.sleb128 0
 3490 0bb1 09       		.uleb128 0x9
 3491 0bb2 01       		.uleb128 0x1
 3492 0bb3 51       		.byte	0x51
 3493 0bb4 02       		.uleb128 0x2
 3494 0bb5 74       		.byte	0x74
 3495 0bb6 00       		.sleb128 0
 3496 0bb7 00       		.byte	0
 3497 0bb8 11       		.uleb128 0x11
 3498 0bb9 9E040000 		.4byte	.LVL124
 3499 0bbd E1150000 		.4byte	0x15e1
 3500 0bc1 E20B0000 		.4byte	0xbe2
 3501 0bc5 09       		.uleb128 0x9
 3502 0bc6 01       		.uleb128 0x1
 3503 0bc7 50       		.byte	0x50
 3504 0bc8 02       		.uleb128 0x2
 3505 0bc9 08       		.byte	0x8
 3506 0bca 32       		.byte	0x32
 3507 0bcb 09       		.uleb128 0x9
 3508 0bcc 01       		.uleb128 0x1
 3509 0bcd 51       		.byte	0x51
 3510 0bce 01       		.uleb128 0x1
 3511 0bcf 31       		.byte	0x31
 3512 0bd0 09       		.uleb128 0x9
 3513 0bd1 01       		.uleb128 0x1
 3514 0bd2 52       		.byte	0x52
 3515 0bd3 01       		.uleb128 0x1
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccRuSwul.s 			page 79


 3516 0bd4 34       		.byte	0x34
 3517 0bd5 09       		.uleb128 0x9
 3518 0bd6 01       		.uleb128 0x1
 3519 0bd7 53       		.byte	0x53
 3520 0bd8 01       		.uleb128 0x1
 3521 0bd9 30       		.byte	0x30
 3522 0bda 09       		.uleb128 0x9
 3523 0bdb 02       		.uleb128 0x2
 3524 0bdc 7D       		.byte	0x7d
 3525 0bdd 00       		.sleb128 0
 3526 0bde 02       		.uleb128 0x2
 3527 0bdf 74       		.byte	0x74
 3528 0be0 00       		.sleb128 0
 3529 0be1 00       		.byte	0
 3530 0be2 11       		.uleb128 0x11
 3531 0be3 5E050000 		.4byte	.LVL144
 3532 0be7 E1150000 		.4byte	0x15e1
 3533 0beb 0C0C0000 		.4byte	0xc0c
 3534 0bef 09       		.uleb128 0x9
 3535 0bf0 01       		.uleb128 0x1
 3536 0bf1 50       		.byte	0x50
 3537 0bf2 02       		.uleb128 0x2
 3538 0bf3 08       		.byte	0x8
 3539 0bf4 64       		.byte	0x64
 3540 0bf5 09       		.uleb128 0x9
 3541 0bf6 01       		.uleb128 0x1
 3542 0bf7 51       		.byte	0x51
 3543 0bf8 01       		.uleb128 0x1
 3544 0bf9 30       		.byte	0x30
 3545 0bfa 09       		.uleb128 0x9
 3546 0bfb 01       		.uleb128 0x1
 3547 0bfc 52       		.byte	0x52
 3548 0bfd 01       		.uleb128 0x1
 3549 0bfe 34       		.byte	0x34
 3550 0bff 09       		.uleb128 0x9
 3551 0c00 01       		.uleb128 0x1
 3552 0c01 53       		.byte	0x53
 3553 0c02 01       		.uleb128 0x1
 3554 0c03 34       		.byte	0x34
 3555 0c04 09       		.uleb128 0x9
 3556 0c05 02       		.uleb128 0x2
 3557 0c06 7D       		.byte	0x7d
 3558 0c07 00       		.sleb128 0
 3559 0c08 02       		.uleb128 0x2
 3560 0c09 74       		.byte	0x74
 3561 0c0a 00       		.sleb128 0
 3562 0c0b 00       		.byte	0
 3563 0c0c 11       		.uleb128 0x11
 3564 0c0d 66050000 		.4byte	.LVL145
 3565 0c11 2E160000 		.4byte	0x162e
 3566 0c15 250C0000 		.4byte	0xc25
 3567 0c19 09       		.uleb128 0x9
 3568 0c1a 01       		.uleb128 0x1
 3569 0c1b 50       		.byte	0x50
 3570 0c1c 01       		.uleb128 0x1
 3571 0c1d 30       		.byte	0x30
 3572 0c1e 09       		.uleb128 0x9
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccRuSwul.s 			page 80


 3573 0c1f 01       		.uleb128 0x1
 3574 0c20 51       		.byte	0x51
 3575 0c21 02       		.uleb128 0x2
 3576 0c22 74       		.byte	0x74
 3577 0c23 00       		.sleb128 0
 3578 0c24 00       		.byte	0
 3579 0c25 06       		.uleb128 0x6
 3580 0c26 6A050000 		.4byte	.LVL146
 3581 0c2a D6150000 		.4byte	0x15d6
 3582 0c2e 11       		.uleb128 0x11
 3583 0c2f 78050000 		.4byte	.LVL147
 3584 0c33 E1150000 		.4byte	0x15e1
 3585 0c37 580C0000 		.4byte	0xc58
 3586 0c3b 09       		.uleb128 0x9
 3587 0c3c 01       		.uleb128 0x1
 3588 0c3d 50       		.byte	0x50
 3589 0c3e 02       		.uleb128 0x2
 3590 0c3f 08       		.byte	0x8
 3591 0c40 F0       		.byte	0xf0
 3592 0c41 09       		.uleb128 0x9
 3593 0c42 01       		.uleb128 0x1
 3594 0c43 51       		.byte	0x51
 3595 0c44 01       		.uleb128 0x1
 3596 0c45 30       		.byte	0x30
 3597 0c46 09       		.uleb128 0x9
 3598 0c47 01       		.uleb128 0x1
 3599 0c48 52       		.byte	0x52
 3600 0c49 01       		.uleb128 0x1
 3601 0c4a 34       		.byte	0x34
 3602 0c4b 09       		.uleb128 0x9
 3603 0c4c 01       		.uleb128 0x1
 3604 0c4d 53       		.byte	0x53
 3605 0c4e 01       		.uleb128 0x1
 3606 0c4f 34       		.byte	0x34
 3607 0c50 09       		.uleb128 0x9
 3608 0c51 02       		.uleb128 0x2
 3609 0c52 7D       		.byte	0x7d
 3610 0c53 00       		.sleb128 0
 3611 0c54 02       		.uleb128 0x2
 3612 0c55 74       		.byte	0x74
 3613 0c56 00       		.sleb128 0
 3614 0c57 00       		.byte	0
 3615 0c58 06       		.uleb128 0x6
 3616 0c59 7C050000 		.4byte	.LVL148
 3617 0c5d D6150000 		.4byte	0x15d6
 3618 0c61 11       		.uleb128 0x11
 3619 0c62 84050000 		.4byte	.LVL149
 3620 0c66 2E160000 		.4byte	0x162e
 3621 0c6a 7A0C0000 		.4byte	0xc7a
 3622 0c6e 09       		.uleb128 0x9
 3623 0c6f 01       		.uleb128 0x1
 3624 0c70 50       		.byte	0x50
 3625 0c71 01       		.uleb128 0x1
 3626 0c72 31       		.byte	0x31
 3627 0c73 09       		.uleb128 0x9
 3628 0c74 01       		.uleb128 0x1
 3629 0c75 51       		.byte	0x51
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccRuSwul.s 			page 81


 3630 0c76 02       		.uleb128 0x2
 3631 0c77 74       		.byte	0x74
 3632 0c78 00       		.sleb128 0
 3633 0c79 00       		.byte	0
 3634 0c7a 06       		.uleb128 0x6
 3635 0c7b 88050000 		.4byte	.LVL150
 3636 0c7f D6150000 		.4byte	0x15d6
 3637 0c83 11       		.uleb128 0x11
 3638 0c84 96050000 		.4byte	.LVL151
 3639 0c88 E1150000 		.4byte	0x15e1
 3640 0c8c AD0C0000 		.4byte	0xcad
 3641 0c90 09       		.uleb128 0x9
 3642 0c91 01       		.uleb128 0x1
 3643 0c92 50       		.byte	0x50
 3644 0c93 02       		.uleb128 0x2
 3645 0c94 08       		.byte	0x8
 3646 0c95 82       		.byte	0x82
 3647 0c96 09       		.uleb128 0x9
 3648 0c97 01       		.uleb128 0x1
 3649 0c98 51       		.byte	0x51
 3650 0c99 01       		.uleb128 0x1
 3651 0c9a 31       		.byte	0x31
 3652 0c9b 09       		.uleb128 0x9
 3653 0c9c 01       		.uleb128 0x1
 3654 0c9d 52       		.byte	0x52
 3655 0c9e 01       		.uleb128 0x1
 3656 0c9f 34       		.byte	0x34
 3657 0ca0 09       		.uleb128 0x9
 3658 0ca1 01       		.uleb128 0x1
 3659 0ca2 53       		.byte	0x53
 3660 0ca3 01       		.uleb128 0x1
 3661 0ca4 30       		.byte	0x30
 3662 0ca5 09       		.uleb128 0x9
 3663 0ca6 02       		.uleb128 0x2
 3664 0ca7 7D       		.byte	0x7d
 3665 0ca8 00       		.sleb128 0
 3666 0ca9 02       		.uleb128 0x2
 3667 0caa 74       		.byte	0x74
 3668 0cab 00       		.sleb128 0
 3669 0cac 00       		.byte	0
 3670 0cad 06       		.uleb128 0x6
 3671 0cae 9A050000 		.4byte	.LVL152
 3672 0cb2 D6150000 		.4byte	0x15d6
 3673 0cb6 11       		.uleb128 0x11
 3674 0cb7 C0050000 		.4byte	.LVL153
 3675 0cbb E1150000 		.4byte	0x15e1
 3676 0cbf E00C0000 		.4byte	0xce0
 3677 0cc3 09       		.uleb128 0x9
 3678 0cc4 01       		.uleb128 0x1
 3679 0cc5 50       		.byte	0x50
 3680 0cc6 02       		.uleb128 0x2
 3681 0cc7 08       		.byte	0x8
 3682 0cc8 64       		.byte	0x64
 3683 0cc9 09       		.uleb128 0x9
 3684 0cca 01       		.uleb128 0x1
 3685 0ccb 51       		.byte	0x51
 3686 0ccc 01       		.uleb128 0x1
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccRuSwul.s 			page 82


 3687 0ccd 30       		.byte	0x30
 3688 0cce 09       		.uleb128 0x9
 3689 0ccf 01       		.uleb128 0x1
 3690 0cd0 52       		.byte	0x52
 3691 0cd1 01       		.uleb128 0x1
 3692 0cd2 34       		.byte	0x34
 3693 0cd3 09       		.uleb128 0x9
 3694 0cd4 01       		.uleb128 0x1
 3695 0cd5 53       		.byte	0x53
 3696 0cd6 01       		.uleb128 0x1
 3697 0cd7 34       		.byte	0x34
 3698 0cd8 09       		.uleb128 0x9
 3699 0cd9 02       		.uleb128 0x2
 3700 0cda 7D       		.byte	0x7d
 3701 0cdb 00       		.sleb128 0
 3702 0cdc 02       		.uleb128 0x2
 3703 0cdd 74       		.byte	0x74
 3704 0cde 00       		.sleb128 0
 3705 0cdf 00       		.byte	0
 3706 0ce0 11       		.uleb128 0x11
 3707 0ce1 C8050000 		.4byte	.LVL154
 3708 0ce5 2E160000 		.4byte	0x162e
 3709 0ce9 F90C0000 		.4byte	0xcf9
 3710 0ced 09       		.uleb128 0x9
 3711 0cee 01       		.uleb128 0x1
 3712 0cef 50       		.byte	0x50
 3713 0cf0 01       		.uleb128 0x1
 3714 0cf1 30       		.byte	0x30
 3715 0cf2 09       		.uleb128 0x9
 3716 0cf3 01       		.uleb128 0x1
 3717 0cf4 51       		.byte	0x51
 3718 0cf5 02       		.uleb128 0x2
 3719 0cf6 74       		.byte	0x74
 3720 0cf7 00       		.sleb128 0
 3721 0cf8 00       		.byte	0
 3722 0cf9 06       		.uleb128 0x6
 3723 0cfa CC050000 		.4byte	.LVL155
 3724 0cfe D6150000 		.4byte	0x15d6
 3725 0d02 11       		.uleb128 0x11
 3726 0d03 DA050000 		.4byte	.LVL156
 3727 0d07 E1150000 		.4byte	0x15e1
 3728 0d0b 2C0D0000 		.4byte	0xd2c
 3729 0d0f 09       		.uleb128 0x9
 3730 0d10 01       		.uleb128 0x1
 3731 0d11 50       		.byte	0x50
 3732 0d12 02       		.uleb128 0x2
 3733 0d13 08       		.byte	0x8
 3734 0d14 F0       		.byte	0xf0
 3735 0d15 09       		.uleb128 0x9
 3736 0d16 01       		.uleb128 0x1
 3737 0d17 51       		.byte	0x51
 3738 0d18 01       		.uleb128 0x1
 3739 0d19 30       		.byte	0x30
 3740 0d1a 09       		.uleb128 0x9
 3741 0d1b 01       		.uleb128 0x1
 3742 0d1c 52       		.byte	0x52
 3743 0d1d 01       		.uleb128 0x1
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccRuSwul.s 			page 83


 3744 0d1e 34       		.byte	0x34
 3745 0d1f 09       		.uleb128 0x9
 3746 0d20 01       		.uleb128 0x1
 3747 0d21 53       		.byte	0x53
 3748 0d22 01       		.uleb128 0x1
 3749 0d23 34       		.byte	0x34
 3750 0d24 09       		.uleb128 0x9
 3751 0d25 02       		.uleb128 0x2
 3752 0d26 7D       		.byte	0x7d
 3753 0d27 00       		.sleb128 0
 3754 0d28 02       		.uleb128 0x2
 3755 0d29 74       		.byte	0x74
 3756 0d2a 00       		.sleb128 0
 3757 0d2b 00       		.byte	0
 3758 0d2c 06       		.uleb128 0x6
 3759 0d2d DE050000 		.4byte	.LVL157
 3760 0d31 D6150000 		.4byte	0x15d6
 3761 0d35 11       		.uleb128 0x11
 3762 0d36 E6050000 		.4byte	.LVL158
 3763 0d3a 2E160000 		.4byte	0x162e
 3764 0d3e 4E0D0000 		.4byte	0xd4e
 3765 0d42 09       		.uleb128 0x9
 3766 0d43 01       		.uleb128 0x1
 3767 0d44 50       		.byte	0x50
 3768 0d45 01       		.uleb128 0x1
 3769 0d46 31       		.byte	0x31
 3770 0d47 09       		.uleb128 0x9
 3771 0d48 01       		.uleb128 0x1
 3772 0d49 51       		.byte	0x51
 3773 0d4a 02       		.uleb128 0x2
 3774 0d4b 74       		.byte	0x74
 3775 0d4c 00       		.sleb128 0
 3776 0d4d 00       		.byte	0
 3777 0d4e 06       		.uleb128 0x6
 3778 0d4f EA050000 		.4byte	.LVL159
 3779 0d53 D6150000 		.4byte	0x15d6
 3780 0d57 11       		.uleb128 0x11
 3781 0d58 F8050000 		.4byte	.LVL160
 3782 0d5c E1150000 		.4byte	0x15e1
 3783 0d60 810D0000 		.4byte	0xd81
 3784 0d64 09       		.uleb128 0x9
 3785 0d65 01       		.uleb128 0x1
 3786 0d66 50       		.byte	0x50
 3787 0d67 02       		.uleb128 0x2
 3788 0d68 08       		.byte	0x8
 3789 0d69 82       		.byte	0x82
 3790 0d6a 09       		.uleb128 0x9
 3791 0d6b 01       		.uleb128 0x1
 3792 0d6c 51       		.byte	0x51
 3793 0d6d 01       		.uleb128 0x1
 3794 0d6e 31       		.byte	0x31
 3795 0d6f 09       		.uleb128 0x9
 3796 0d70 01       		.uleb128 0x1
 3797 0d71 52       		.byte	0x52
 3798 0d72 01       		.uleb128 0x1
 3799 0d73 34       		.byte	0x34
 3800 0d74 09       		.uleb128 0x9
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccRuSwul.s 			page 84


 3801 0d75 01       		.uleb128 0x1
 3802 0d76 53       		.byte	0x53
 3803 0d77 01       		.uleb128 0x1
 3804 0d78 30       		.byte	0x30
 3805 0d79 09       		.uleb128 0x9
 3806 0d7a 02       		.uleb128 0x2
 3807 0d7b 7D       		.byte	0x7d
 3808 0d7c 00       		.sleb128 0
 3809 0d7d 02       		.uleb128 0x2
 3810 0d7e 74       		.byte	0x74
 3811 0d7f 00       		.sleb128 0
 3812 0d80 00       		.byte	0
 3813 0d81 06       		.uleb128 0x6
 3814 0d82 FC050000 		.4byte	.LVL161
 3815 0d86 D6150000 		.4byte	0x15d6
 3816 0d8a 11       		.uleb128 0x11
 3817 0d8b 0A060000 		.4byte	.LVL162
 3818 0d8f E1150000 		.4byte	0x15e1
 3819 0d93 B40D0000 		.4byte	0xdb4
 3820 0d97 09       		.uleb128 0x9
 3821 0d98 01       		.uleb128 0x1
 3822 0d99 50       		.byte	0x50
 3823 0d9a 02       		.uleb128 0x2
 3824 0d9b 08       		.byte	0x8
 3825 0d9c F0       		.byte	0xf0
 3826 0d9d 09       		.uleb128 0x9
 3827 0d9e 01       		.uleb128 0x1
 3828 0d9f 51       		.byte	0x51
 3829 0da0 01       		.uleb128 0x1
 3830 0da1 30       		.byte	0x30
 3831 0da2 09       		.uleb128 0x9
 3832 0da3 01       		.uleb128 0x1
 3833 0da4 52       		.byte	0x52
 3834 0da5 01       		.uleb128 0x1
 3835 0da6 34       		.byte	0x34
 3836 0da7 09       		.uleb128 0x9
 3837 0da8 01       		.uleb128 0x1
 3838 0da9 53       		.byte	0x53
 3839 0daa 01       		.uleb128 0x1
 3840 0dab 34       		.byte	0x34
 3841 0dac 09       		.uleb128 0x9
 3842 0dad 02       		.uleb128 0x2
 3843 0dae 7D       		.byte	0x7d
 3844 0daf 00       		.sleb128 0
 3845 0db0 02       		.uleb128 0x2
 3846 0db1 74       		.byte	0x74
 3847 0db2 00       		.sleb128 0
 3848 0db3 00       		.byte	0
 3849 0db4 06       		.uleb128 0x6
 3850 0db5 0E060000 		.4byte	.LVL163
 3851 0db9 D6150000 		.4byte	0x15d6
 3852 0dbd 11       		.uleb128 0x11
 3853 0dbe 16060000 		.4byte	.LVL164
 3854 0dc2 2E160000 		.4byte	0x162e
 3855 0dc6 D60D0000 		.4byte	0xdd6
 3856 0dca 09       		.uleb128 0x9
 3857 0dcb 01       		.uleb128 0x1
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccRuSwul.s 			page 85


 3858 0dcc 50       		.byte	0x50
 3859 0dcd 01       		.uleb128 0x1
 3860 0dce 30       		.byte	0x30
 3861 0dcf 09       		.uleb128 0x9
 3862 0dd0 01       		.uleb128 0x1
 3863 0dd1 51       		.byte	0x51
 3864 0dd2 02       		.uleb128 0x2
 3865 0dd3 74       		.byte	0x74
 3866 0dd4 00       		.sleb128 0
 3867 0dd5 00       		.byte	0
 3868 0dd6 06       		.uleb128 0x6
 3869 0dd7 1A060000 		.4byte	.LVL165
 3870 0ddb D6150000 		.4byte	0x15d6
 3871 0ddf 11       		.uleb128 0x11
 3872 0de0 28060000 		.4byte	.LVL166
 3873 0de4 E1150000 		.4byte	0x15e1
 3874 0de8 090E0000 		.4byte	0xe09
 3875 0dec 09       		.uleb128 0x9
 3876 0ded 01       		.uleb128 0x1
 3877 0dee 50       		.byte	0x50
 3878 0def 02       		.uleb128 0x2
 3879 0df0 08       		.byte	0x8
 3880 0df1 82       		.byte	0x82
 3881 0df2 09       		.uleb128 0x9
 3882 0df3 01       		.uleb128 0x1
 3883 0df4 51       		.byte	0x51
 3884 0df5 01       		.uleb128 0x1
 3885 0df6 31       		.byte	0x31
 3886 0df7 09       		.uleb128 0x9
 3887 0df8 01       		.uleb128 0x1
 3888 0df9 52       		.byte	0x52
 3889 0dfa 01       		.uleb128 0x1
 3890 0dfb 34       		.byte	0x34
 3891 0dfc 09       		.uleb128 0x9
 3892 0dfd 01       		.uleb128 0x1
 3893 0dfe 53       		.byte	0x53
 3894 0dff 01       		.uleb128 0x1
 3895 0e00 30       		.byte	0x30
 3896 0e01 09       		.uleb128 0x9
 3897 0e02 02       		.uleb128 0x2
 3898 0e03 7D       		.byte	0x7d
 3899 0e04 00       		.sleb128 0
 3900 0e05 02       		.uleb128 0x2
 3901 0e06 74       		.byte	0x74
 3902 0e07 00       		.sleb128 0
 3903 0e08 00       		.byte	0
 3904 0e09 11       		.uleb128 0x11
 3905 0e0a 30060000 		.4byte	.LVL167
 3906 0e0e 2E160000 		.4byte	0x162e
 3907 0e12 220E0000 		.4byte	0xe22
 3908 0e16 09       		.uleb128 0x9
 3909 0e17 01       		.uleb128 0x1
 3910 0e18 50       		.byte	0x50
 3911 0e19 01       		.uleb128 0x1
 3912 0e1a 31       		.byte	0x31
 3913 0e1b 09       		.uleb128 0x9
 3914 0e1c 01       		.uleb128 0x1
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccRuSwul.s 			page 86


 3915 0e1d 51       		.byte	0x51
 3916 0e1e 02       		.uleb128 0x2
 3917 0e1f 74       		.byte	0x74
 3918 0e20 00       		.sleb128 0
 3919 0e21 00       		.byte	0
 3920 0e22 11       		.uleb128 0x11
 3921 0e23 3E060000 		.4byte	.LVL168
 3922 0e27 E1150000 		.4byte	0x15e1
 3923 0e2b 4C0E0000 		.4byte	0xe4c
 3924 0e2f 09       		.uleb128 0x9
 3925 0e30 01       		.uleb128 0x1
 3926 0e31 50       		.byte	0x50
 3927 0e32 02       		.uleb128 0x2
 3928 0e33 08       		.byte	0x8
 3929 0e34 32       		.byte	0x32
 3930 0e35 09       		.uleb128 0x9
 3931 0e36 01       		.uleb128 0x1
 3932 0e37 51       		.byte	0x51
 3933 0e38 01       		.uleb128 0x1
 3934 0e39 31       		.byte	0x31
 3935 0e3a 09       		.uleb128 0x9
 3936 0e3b 01       		.uleb128 0x1
 3937 0e3c 52       		.byte	0x52
 3938 0e3d 01       		.uleb128 0x1
 3939 0e3e 34       		.byte	0x34
 3940 0e3f 09       		.uleb128 0x9
 3941 0e40 01       		.uleb128 0x1
 3942 0e41 53       		.byte	0x53
 3943 0e42 01       		.uleb128 0x1
 3944 0e43 30       		.byte	0x30
 3945 0e44 09       		.uleb128 0x9
 3946 0e45 02       		.uleb128 0x2
 3947 0e46 7D       		.byte	0x7d
 3948 0e47 00       		.sleb128 0
 3949 0e48 02       		.uleb128 0x2
 3950 0e49 74       		.byte	0x74
 3951 0e4a 00       		.sleb128 0
 3952 0e4b 00       		.byte	0
 3953 0e4c 11       		.uleb128 0x11
 3954 0e4d 64060000 		.4byte	.LVL169
 3955 0e51 E1150000 		.4byte	0x15e1
 3956 0e55 770E0000 		.4byte	0xe77
 3957 0e59 09       		.uleb128 0x9
 3958 0e5a 01       		.uleb128 0x1
 3959 0e5b 50       		.byte	0x50
 3960 0e5c 03       		.uleb128 0x3
 3961 0e5d 0A       		.byte	0xa
 3962 0e5e 0E01     		.2byte	0x10e
 3963 0e60 09       		.uleb128 0x9
 3964 0e61 01       		.uleb128 0x1
 3965 0e62 51       		.byte	0x51
 3966 0e63 01       		.uleb128 0x1
 3967 0e64 30       		.byte	0x30
 3968 0e65 09       		.uleb128 0x9
 3969 0e66 01       		.uleb128 0x1
 3970 0e67 52       		.byte	0x52
 3971 0e68 01       		.uleb128 0x1
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccRuSwul.s 			page 87


 3972 0e69 34       		.byte	0x34
 3973 0e6a 09       		.uleb128 0x9
 3974 0e6b 01       		.uleb128 0x1
 3975 0e6c 53       		.byte	0x53
 3976 0e6d 01       		.uleb128 0x1
 3977 0e6e 34       		.byte	0x34
 3978 0e6f 09       		.uleb128 0x9
 3979 0e70 02       		.uleb128 0x2
 3980 0e71 7D       		.byte	0x7d
 3981 0e72 00       		.sleb128 0
 3982 0e73 02       		.uleb128 0x2
 3983 0e74 74       		.byte	0x74
 3984 0e75 00       		.sleb128 0
 3985 0e76 00       		.byte	0
 3986 0e77 06       		.uleb128 0x6
 3987 0e78 68060000 		.4byte	.LVL170
 3988 0e7c D6150000 		.4byte	0x15d6
 3989 0e80 11       		.uleb128 0x11
 3990 0e81 70060000 		.4byte	.LVL171
 3991 0e85 2E160000 		.4byte	0x162e
 3992 0e89 990E0000 		.4byte	0xe99
 3993 0e8d 09       		.uleb128 0x9
 3994 0e8e 01       		.uleb128 0x1
 3995 0e8f 50       		.byte	0x50
 3996 0e90 01       		.uleb128 0x1
 3997 0e91 30       		.byte	0x30
 3998 0e92 09       		.uleb128 0x9
 3999 0e93 01       		.uleb128 0x1
 4000 0e94 51       		.byte	0x51
 4001 0e95 02       		.uleb128 0x2
 4002 0e96 74       		.byte	0x74
 4003 0e97 00       		.sleb128 0
 4004 0e98 00       		.byte	0
 4005 0e99 06       		.uleb128 0x6
 4006 0e9a 74060000 		.4byte	.LVL172
 4007 0e9e D6150000 		.4byte	0x15d6
 4008 0ea2 11       		.uleb128 0x11
 4009 0ea3 82060000 		.4byte	.LVL173
 4010 0ea7 E1150000 		.4byte	0x15e1
 4011 0eab CC0E0000 		.4byte	0xecc
 4012 0eaf 09       		.uleb128 0x9
 4013 0eb0 01       		.uleb128 0x1
 4014 0eb1 50       		.byte	0x50
 4015 0eb2 02       		.uleb128 0x2
 4016 0eb3 08       		.byte	0x8
 4017 0eb4 82       		.byte	0x82
 4018 0eb5 09       		.uleb128 0x9
 4019 0eb6 01       		.uleb128 0x1
 4020 0eb7 51       		.byte	0x51
 4021 0eb8 01       		.uleb128 0x1
 4022 0eb9 31       		.byte	0x31
 4023 0eba 09       		.uleb128 0x9
 4024 0ebb 01       		.uleb128 0x1
 4025 0ebc 52       		.byte	0x52
 4026 0ebd 01       		.uleb128 0x1
 4027 0ebe 34       		.byte	0x34
 4028 0ebf 09       		.uleb128 0x9
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccRuSwul.s 			page 88


 4029 0ec0 01       		.uleb128 0x1
 4030 0ec1 53       		.byte	0x53
 4031 0ec2 01       		.uleb128 0x1
 4032 0ec3 30       		.byte	0x30
 4033 0ec4 09       		.uleb128 0x9
 4034 0ec5 02       		.uleb128 0x2
 4035 0ec6 7D       		.byte	0x7d
 4036 0ec7 00       		.sleb128 0
 4037 0ec8 02       		.uleb128 0x2
 4038 0ec9 74       		.byte	0x74
 4039 0eca 00       		.sleb128 0
 4040 0ecb 00       		.byte	0
 4041 0ecc 11       		.uleb128 0x11
 4042 0ecd 8A060000 		.4byte	.LVL174
 4043 0ed1 2E160000 		.4byte	0x162e
 4044 0ed5 E50E0000 		.4byte	0xee5
 4045 0ed9 09       		.uleb128 0x9
 4046 0eda 01       		.uleb128 0x1
 4047 0edb 50       		.byte	0x50
 4048 0edc 01       		.uleb128 0x1
 4049 0edd 31       		.byte	0x31
 4050 0ede 09       		.uleb128 0x9
 4051 0edf 01       		.uleb128 0x1
 4052 0ee0 51       		.byte	0x51
 4053 0ee1 02       		.uleb128 0x2
 4054 0ee2 74       		.byte	0x74
 4055 0ee3 00       		.sleb128 0
 4056 0ee4 00       		.byte	0
 4057 0ee5 11       		.uleb128 0x11
 4058 0ee6 98060000 		.4byte	.LVL175
 4059 0eea E1150000 		.4byte	0x15e1
 4060 0eee 0F0F0000 		.4byte	0xf0f
 4061 0ef2 09       		.uleb128 0x9
 4062 0ef3 01       		.uleb128 0x1
 4063 0ef4 50       		.byte	0x50
 4064 0ef5 02       		.uleb128 0x2
 4065 0ef6 08       		.byte	0x8
 4066 0ef7 32       		.byte	0x32
 4067 0ef8 09       		.uleb128 0x9
 4068 0ef9 01       		.uleb128 0x1
 4069 0efa 51       		.byte	0x51
 4070 0efb 01       		.uleb128 0x1
 4071 0efc 31       		.byte	0x31
 4072 0efd 09       		.uleb128 0x9
 4073 0efe 01       		.uleb128 0x1
 4074 0eff 52       		.byte	0x52
 4075 0f00 01       		.uleb128 0x1
 4076 0f01 34       		.byte	0x34
 4077 0f02 09       		.uleb128 0x9
 4078 0f03 01       		.uleb128 0x1
 4079 0f04 53       		.byte	0x53
 4080 0f05 01       		.uleb128 0x1
 4081 0f06 30       		.byte	0x30
 4082 0f07 09       		.uleb128 0x9
 4083 0f08 02       		.uleb128 0x2
 4084 0f09 7D       		.byte	0x7d
 4085 0f0a 00       		.sleb128 0
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccRuSwul.s 			page 89


 4086 0f0b 02       		.uleb128 0x2
 4087 0f0c 74       		.byte	0x74
 4088 0f0d 00       		.sleb128 0
 4089 0f0e 00       		.byte	0
 4090 0f0f 11       		.uleb128 0x11
 4091 0f10 B6060000 		.4byte	.LVL176
 4092 0f14 E1150000 		.4byte	0x15e1
 4093 0f18 3A0F0000 		.4byte	0xf3a
 4094 0f1c 09       		.uleb128 0x9
 4095 0f1d 01       		.uleb128 0x1
 4096 0f1e 50       		.byte	0x50
 4097 0f1f 03       		.uleb128 0x3
 4098 0f20 0A       		.byte	0xa
 4099 0f21 0E01     		.2byte	0x10e
 4100 0f23 09       		.uleb128 0x9
 4101 0f24 01       		.uleb128 0x1
 4102 0f25 51       		.byte	0x51
 4103 0f26 01       		.uleb128 0x1
 4104 0f27 30       		.byte	0x30
 4105 0f28 09       		.uleb128 0x9
 4106 0f29 01       		.uleb128 0x1
 4107 0f2a 52       		.byte	0x52
 4108 0f2b 01       		.uleb128 0x1
 4109 0f2c 34       		.byte	0x34
 4110 0f2d 09       		.uleb128 0x9
 4111 0f2e 01       		.uleb128 0x1
 4112 0f2f 53       		.byte	0x53
 4113 0f30 01       		.uleb128 0x1
 4114 0f31 34       		.byte	0x34
 4115 0f32 09       		.uleb128 0x9
 4116 0f33 02       		.uleb128 0x2
 4117 0f34 7D       		.byte	0x7d
 4118 0f35 00       		.sleb128 0
 4119 0f36 02       		.uleb128 0x2
 4120 0f37 74       		.byte	0x74
 4121 0f38 00       		.sleb128 0
 4122 0f39 00       		.byte	0
 4123 0f3a 06       		.uleb128 0x6
 4124 0f3b BA060000 		.4byte	.LVL177
 4125 0f3f D6150000 		.4byte	0x15d6
 4126 0f43 11       		.uleb128 0x11
 4127 0f44 C2060000 		.4byte	.LVL178
 4128 0f48 2E160000 		.4byte	0x162e
 4129 0f4c 5C0F0000 		.4byte	0xf5c
 4130 0f50 09       		.uleb128 0x9
 4131 0f51 01       		.uleb128 0x1
 4132 0f52 50       		.byte	0x50
 4133 0f53 01       		.uleb128 0x1
 4134 0f54 30       		.byte	0x30
 4135 0f55 09       		.uleb128 0x9
 4136 0f56 01       		.uleb128 0x1
 4137 0f57 51       		.byte	0x51
 4138 0f58 02       		.uleb128 0x2
 4139 0f59 74       		.byte	0x74
 4140 0f5a 00       		.sleb128 0
 4141 0f5b 00       		.byte	0
 4142 0f5c 06       		.uleb128 0x6
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccRuSwul.s 			page 90


 4143 0f5d C6060000 		.4byte	.LVL179
 4144 0f61 D6150000 		.4byte	0x15d6
 4145 0f65 11       		.uleb128 0x11
 4146 0f66 D4060000 		.4byte	.LVL180
 4147 0f6a E1150000 		.4byte	0x15e1
 4148 0f6e 8F0F0000 		.4byte	0xf8f
 4149 0f72 09       		.uleb128 0x9
 4150 0f73 01       		.uleb128 0x1
 4151 0f74 50       		.byte	0x50
 4152 0f75 02       		.uleb128 0x2
 4153 0f76 08       		.byte	0x8
 4154 0f77 82       		.byte	0x82
 4155 0f78 09       		.uleb128 0x9
 4156 0f79 01       		.uleb128 0x1
 4157 0f7a 51       		.byte	0x51
 4158 0f7b 01       		.uleb128 0x1
 4159 0f7c 31       		.byte	0x31
 4160 0f7d 09       		.uleb128 0x9
 4161 0f7e 01       		.uleb128 0x1
 4162 0f7f 52       		.byte	0x52
 4163 0f80 01       		.uleb128 0x1
 4164 0f81 34       		.byte	0x34
 4165 0f82 09       		.uleb128 0x9
 4166 0f83 01       		.uleb128 0x1
 4167 0f84 53       		.byte	0x53
 4168 0f85 01       		.uleb128 0x1
 4169 0f86 30       		.byte	0x30
 4170 0f87 09       		.uleb128 0x9
 4171 0f88 02       		.uleb128 0x2
 4172 0f89 7D       		.byte	0x7d
 4173 0f8a 00       		.sleb128 0
 4174 0f8b 02       		.uleb128 0x2
 4175 0f8c 74       		.byte	0x74
 4176 0f8d 00       		.sleb128 0
 4177 0f8e 00       		.byte	0
 4178 0f8f 11       		.uleb128 0x11
 4179 0f90 DC060000 		.4byte	.LVL181
 4180 0f94 2E160000 		.4byte	0x162e
 4181 0f98 A90F0000 		.4byte	0xfa9
 4182 0f9c 09       		.uleb128 0x9
 4183 0f9d 01       		.uleb128 0x1
 4184 0f9e 50       		.byte	0x50
 4185 0f9f 02       		.uleb128 0x2
 4186 0fa0 76       		.byte	0x76
 4187 0fa1 00       		.sleb128 0
 4188 0fa2 09       		.uleb128 0x9
 4189 0fa3 01       		.uleb128 0x1
 4190 0fa4 51       		.byte	0x51
 4191 0fa5 02       		.uleb128 0x2
 4192 0fa6 74       		.byte	0x74
 4193 0fa7 00       		.sleb128 0
 4194 0fa8 00       		.byte	0
 4195 0fa9 11       		.uleb128 0x11
 4196 0faa EA060000 		.4byte	.LVL182
 4197 0fae E1150000 		.4byte	0x15e1
 4198 0fb2 D30F0000 		.4byte	0xfd3
 4199 0fb6 09       		.uleb128 0x9
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccRuSwul.s 			page 91


 4200 0fb7 01       		.uleb128 0x1
 4201 0fb8 50       		.byte	0x50
 4202 0fb9 02       		.uleb128 0x2
 4203 0fba 08       		.byte	0x8
 4204 0fbb 32       		.byte	0x32
 4205 0fbc 09       		.uleb128 0x9
 4206 0fbd 01       		.uleb128 0x1
 4207 0fbe 51       		.byte	0x51
 4208 0fbf 01       		.uleb128 0x1
 4209 0fc0 31       		.byte	0x31
 4210 0fc1 09       		.uleb128 0x9
 4211 0fc2 01       		.uleb128 0x1
 4212 0fc3 52       		.byte	0x52
 4213 0fc4 01       		.uleb128 0x1
 4214 0fc5 34       		.byte	0x34
 4215 0fc6 09       		.uleb128 0x9
 4216 0fc7 01       		.uleb128 0x1
 4217 0fc8 53       		.byte	0x53
 4218 0fc9 01       		.uleb128 0x1
 4219 0fca 30       		.byte	0x30
 4220 0fcb 09       		.uleb128 0x9
 4221 0fcc 02       		.uleb128 0x2
 4222 0fcd 7D       		.byte	0x7d
 4223 0fce 00       		.sleb128 0
 4224 0fcf 02       		.uleb128 0x2
 4225 0fd0 74       		.byte	0x74
 4226 0fd1 00       		.sleb128 0
 4227 0fd2 00       		.byte	0
 4228 0fd3 11       		.uleb128 0x11
 4229 0fd4 46080000 		.4byte	.LVL208
 4230 0fd8 02160000 		.4byte	0x1602
 4231 0fdc ED0F0000 		.4byte	0xfed
 4232 0fe0 09       		.uleb128 0x9
 4233 0fe1 01       		.uleb128 0x1
 4234 0fe2 50       		.byte	0x50
 4235 0fe3 02       		.uleb128 0x2
 4236 0fe4 08       		.byte	0x8
 4237 0fe5 5A       		.byte	0x5a
 4238 0fe6 09       		.uleb128 0x9
 4239 0fe7 01       		.uleb128 0x1
 4240 0fe8 51       		.byte	0x51
 4241 0fe9 02       		.uleb128 0x2
 4242 0fea 08       		.byte	0x8
 4243 0feb AA       		.byte	0xaa
 4244 0fec 00       		.byte	0
 4245 0fed 06       		.uleb128 0x6
 4246 0fee 4A080000 		.4byte	.LVL209
 4247 0ff2 D6150000 		.4byte	0x15d6
 4248 0ff6 11       		.uleb128 0x11
 4249 0ff7 5C080000 		.4byte	.LVL210
 4250 0ffb E1150000 		.4byte	0x15e1
 4251 0fff 21100000 		.4byte	0x1021
 4252 1003 09       		.uleb128 0x9
 4253 1004 01       		.uleb128 0x1
 4254 1005 50       		.byte	0x50
 4255 1006 03       		.uleb128 0x3
 4256 1007 0A       		.byte	0xa
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccRuSwul.s 			page 92


 4257 1008 0802     		.2byte	0x208
 4258 100a 09       		.uleb128 0x9
 4259 100b 01       		.uleb128 0x1
 4260 100c 51       		.byte	0x51
 4261 100d 01       		.uleb128 0x1
 4262 100e 30       		.byte	0x30
 4263 100f 09       		.uleb128 0x9
 4264 1010 01       		.uleb128 0x1
 4265 1011 52       		.byte	0x52
 4266 1012 01       		.uleb128 0x1
 4267 1013 35       		.byte	0x35
 4268 1014 09       		.uleb128 0x9
 4269 1015 01       		.uleb128 0x1
 4270 1016 53       		.byte	0x53
 4271 1017 01       		.uleb128 0x1
 4272 1018 31       		.byte	0x31
 4273 1019 09       		.uleb128 0x9
 4274 101a 02       		.uleb128 0x2
 4275 101b 7D       		.byte	0x7d
 4276 101c 00       		.sleb128 0
 4277 101d 02       		.uleb128 0x2
 4278 101e 74       		.byte	0x74
 4279 101f 00       		.sleb128 0
 4280 1020 00       		.byte	0
 4281 1021 11       		.uleb128 0x11
 4282 1022 64080000 		.4byte	.LVL211
 4283 1026 02160000 		.4byte	0x1602
 4284 102a 3B100000 		.4byte	0x103b
 4285 102e 09       		.uleb128 0x9
 4286 102f 01       		.uleb128 0x1
 4287 1030 50       		.byte	0x50
 4288 1031 02       		.uleb128 0x2
 4289 1032 08       		.byte	0x8
 4290 1033 5A       		.byte	0x5a
 4291 1034 09       		.uleb128 0x9
 4292 1035 01       		.uleb128 0x1
 4293 1036 51       		.byte	0x51
 4294 1037 02       		.uleb128 0x2
 4295 1038 74       		.byte	0x74
 4296 1039 00       		.sleb128 0
 4297 103a 00       		.byte	0
 4298 103b 08       		.uleb128 0x8
 4299 103c 72080000 		.4byte	.LVL212
 4300 1040 E1150000 		.4byte	0x15e1
 4301 1044 09       		.uleb128 0x9
 4302 1045 01       		.uleb128 0x1
 4303 1046 50       		.byte	0x50
 4304 1047 02       		.uleb128 0x2
 4305 1048 08       		.byte	0x8
 4306 1049 28       		.byte	0x28
 4307 104a 09       		.uleb128 0x9
 4308 104b 01       		.uleb128 0x1
 4309 104c 51       		.byte	0x51
 4310 104d 01       		.uleb128 0x1
 4311 104e 30       		.byte	0x30
 4312 104f 09       		.uleb128 0x9
 4313 1050 01       		.uleb128 0x1
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccRuSwul.s 			page 93


 4314 1051 52       		.byte	0x52
 4315 1052 01       		.uleb128 0x1
 4316 1053 34       		.byte	0x34
 4317 1054 09       		.uleb128 0x9
 4318 1055 01       		.uleb128 0x1
 4319 1056 53       		.byte	0x53
 4320 1057 01       		.uleb128 0x1
 4321 1058 34       		.byte	0x34
 4322 1059 09       		.uleb128 0x9
 4323 105a 02       		.uleb128 0x2
 4324 105b 7D       		.byte	0x7d
 4325 105c 00       		.sleb128 0
 4326 105d 02       		.uleb128 0x2
 4327 105e 74       		.byte	0x74
 4328 105f 00       		.sleb128 0
 4329 1060 00       		.byte	0
 4330 1061 00       		.byte	0
 4331 1062 06       		.uleb128 0x6
 4332 1063 0A000000 		.4byte	.LVL2
 4333 1067 70160000 		.4byte	0x1670
 4334 106b 06       		.uleb128 0x6
 4335 106c 0E000000 		.4byte	.LVL3
 4336 1070 7B160000 		.4byte	0x167b
 4337 1074 11       		.uleb128 0x11
 4338 1075 14000000 		.4byte	.LVL4
 4339 1079 CB150000 		.4byte	0x15cb
 4340 107d 8B100000 		.4byte	0x108b
 4341 1081 09       		.uleb128 0x9
 4342 1082 01       		.uleb128 0x1
 4343 1083 50       		.byte	0x50
 4344 1084 05       		.uleb128 0x5
 4345 1085 03       		.byte	0x3
 4346 1086 00000000 		.4byte	.LC0
 4347 108a 00       		.byte	0
 4348 108b 06       		.uleb128 0x6
 4349 108c 18000000 		.4byte	.LVL5
 4350 1090 86160000 		.4byte	0x1686
 4351 1094 06       		.uleb128 0x6
 4352 1095 1C000000 		.4byte	.LVL6
 4353 1099 91160000 		.4byte	0x1691
 4354 109d 11       		.uleb128 0x11
 4355 109e 22000000 		.4byte	.LVL7
 4356 10a2 9C160000 		.4byte	0x169c
 4357 10a6 B0100000 		.4byte	0x10b0
 4358 10aa 09       		.uleb128 0x9
 4359 10ab 01       		.uleb128 0x1
 4360 10ac 50       		.byte	0x50
 4361 10ad 01       		.uleb128 0x1
 4362 10ae 30       		.byte	0x30
 4363 10af 00       		.byte	0
 4364 10b0 06       		.uleb128 0x6
 4365 10b1 2A000000 		.4byte	.LVL8
 4366 10b5 A7160000 		.4byte	0x16a7
 4367 10b9 11       		.uleb128 0x11
 4368 10ba 34000000 		.4byte	.LVL9
 4369 10be F7150000 		.4byte	0x15f7
 4370 10c2 CD100000 		.4byte	0x10cd
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccRuSwul.s 			page 94


 4371 10c6 09       		.uleb128 0x9
 4372 10c7 01       		.uleb128 0x1
 4373 10c8 50       		.byte	0x50
 4374 10c9 02       		.uleb128 0x2
 4375 10ca 75       		.byte	0x75
 4376 10cb 00       		.sleb128 0
 4377 10cc 00       		.byte	0
 4378 10cd 11       		.uleb128 0x11
 4379 10ce 3A000000 		.4byte	.LVL10
 4380 10d2 B2160000 		.4byte	0x16b2
 4381 10d6 E0100000 		.4byte	0x10e0
 4382 10da 09       		.uleb128 0x9
 4383 10db 01       		.uleb128 0x1
 4384 10dc 50       		.byte	0x50
 4385 10dd 01       		.uleb128 0x1
 4386 10de 31       		.byte	0x31
 4387 10df 00       		.byte	0
 4388 10e0 11       		.uleb128 0x11
 4389 10e1 42000000 		.4byte	.LVL11
 4390 10e5 AA150000 		.4byte	0x15aa
 4391 10e9 F5100000 		.4byte	0x10f5
 4392 10ed 09       		.uleb128 0x9
 4393 10ee 01       		.uleb128 0x1
 4394 10ef 50       		.byte	0x50
 4395 10f0 03       		.uleb128 0x3
 4396 10f1 0A       		.byte	0xa
 4397 10f2 F401     		.2byte	0x1f4
 4398 10f4 00       		.byte	0
 4399 10f5 11       		.uleb128 0x11
 4400 10f6 48000000 		.4byte	.LVL12
 4401 10fa B2160000 		.4byte	0x16b2
 4402 10fe 08110000 		.4byte	0x1108
 4403 1102 09       		.uleb128 0x9
 4404 1103 01       		.uleb128 0x1
 4405 1104 50       		.byte	0x50
 4406 1105 01       		.uleb128 0x1
 4407 1106 32       		.byte	0x32
 4408 1107 00       		.byte	0
 4409 1108 11       		.uleb128 0x11
 4410 1109 50000000 		.4byte	.LVL13
 4411 110d AA150000 		.4byte	0x15aa
 4412 1111 1D110000 		.4byte	0x111d
 4413 1115 09       		.uleb128 0x9
 4414 1116 01       		.uleb128 0x1
 4415 1117 50       		.byte	0x50
 4416 1118 03       		.uleb128 0x3
 4417 1119 0A       		.byte	0xa
 4418 111a F401     		.2byte	0x1f4
 4419 111c 00       		.byte	0
 4420 111d 11       		.uleb128 0x11
 4421 111e 56000000 		.4byte	.LVL14
 4422 1122 B2160000 		.4byte	0x16b2
 4423 1126 30110000 		.4byte	0x1130
 4424 112a 09       		.uleb128 0x9
 4425 112b 01       		.uleb128 0x1
 4426 112c 50       		.byte	0x50
 4427 112d 01       		.uleb128 0x1
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccRuSwul.s 			page 95


 4428 112e 33       		.byte	0x33
 4429 112f 00       		.byte	0
 4430 1130 11       		.uleb128 0x11
 4431 1131 5E000000 		.4byte	.LVL15
 4432 1135 AA150000 		.4byte	0x15aa
 4433 1139 45110000 		.4byte	0x1145
 4434 113d 09       		.uleb128 0x9
 4435 113e 01       		.uleb128 0x1
 4436 113f 50       		.byte	0x50
 4437 1140 03       		.uleb128 0x3
 4438 1141 0A       		.byte	0xa
 4439 1142 F401     		.2byte	0x1f4
 4440 1144 00       		.byte	0
 4441 1145 11       		.uleb128 0x11
 4442 1146 64000000 		.4byte	.LVL16
 4443 114a B2160000 		.4byte	0x16b2
 4444 114e 59110000 		.4byte	0x1159
 4445 1152 09       		.uleb128 0x9
 4446 1153 01       		.uleb128 0x1
 4447 1154 50       		.byte	0x50
 4448 1155 02       		.uleb128 0x2
 4449 1156 75       		.byte	0x75
 4450 1157 00       		.sleb128 0
 4451 1158 00       		.byte	0
 4452 1159 11       		.uleb128 0x11
 4453 115a 6C000000 		.4byte	.LVL17
 4454 115e AA150000 		.4byte	0x15aa
 4455 1162 6E110000 		.4byte	0x116e
 4456 1166 09       		.uleb128 0x9
 4457 1167 01       		.uleb128 0x1
 4458 1168 50       		.byte	0x50
 4459 1169 03       		.uleb128 0x3
 4460 116a 0A       		.byte	0xa
 4461 116b F401     		.2byte	0x1f4
 4462 116d 00       		.byte	0
 4463 116e 06       		.uleb128 0x6
 4464 116f 70000000 		.4byte	.LVL18
 4465 1173 EC150000 		.4byte	0x15ec
 4466 1177 06       		.uleb128 0x6
 4467 1178 74000000 		.4byte	.LVL19
 4468 117c BD160000 		.4byte	0x16bd
 4469 1180 11       		.uleb128 0x11
 4470 1181 7C000000 		.4byte	.LVL20
 4471 1185 C8160000 		.4byte	0x16c8
 4472 1189 95110000 		.4byte	0x1195
 4473 118d 09       		.uleb128 0x9
 4474 118e 01       		.uleb128 0x1
 4475 118f 50       		.byte	0x50
 4476 1190 03       		.uleb128 0x3
 4477 1191 0A       		.byte	0xa
 4478 1192 E803     		.2byte	0x3e8
 4479 1194 00       		.byte	0
 4480 1195 11       		.uleb128 0x11
 4481 1196 84000000 		.4byte	.LVL21
 4482 119a AA150000 		.4byte	0x15aa
 4483 119e AA110000 		.4byte	0x11aa
 4484 11a2 09       		.uleb128 0x9
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccRuSwul.s 			page 96


 4485 11a3 01       		.uleb128 0x1
 4486 11a4 50       		.byte	0x50
 4487 11a5 03       		.uleb128 0x3
 4488 11a6 0A       		.byte	0xa
 4489 11a7 F401     		.2byte	0x1f4
 4490 11a9 00       		.byte	0
 4491 11aa 06       		.uleb128 0x6
 4492 11ab 88000000 		.4byte	.LVL22
 4493 11af D3160000 		.4byte	0x16d3
 4494 11b3 06       		.uleb128 0x6
 4495 11b4 8C000000 		.4byte	.LVL23
 4496 11b8 DE160000 		.4byte	0x16de
 4497 11bc 11       		.uleb128 0x11
 4498 11bd 94000000 		.4byte	.LVL24
 4499 11c1 E9160000 		.4byte	0x16e9
 4500 11c5 D1110000 		.4byte	0x11d1
 4501 11c9 09       		.uleb128 0x9
 4502 11ca 01       		.uleb128 0x1
 4503 11cb 50       		.byte	0x50
 4504 11cc 03       		.uleb128 0x3
 4505 11cd 0A       		.byte	0xa
 4506 11ce 6004     		.2byte	0x460
 4507 11d0 00       		.byte	0
 4508 11d1 11       		.uleb128 0x11
 4509 11d2 9C000000 		.4byte	.LVL25
 4510 11d6 AA150000 		.4byte	0x15aa
 4511 11da E6110000 		.4byte	0x11e6
 4512 11de 09       		.uleb128 0x9
 4513 11df 01       		.uleb128 0x1
 4514 11e0 50       		.byte	0x50
 4515 11e1 03       		.uleb128 0x3
 4516 11e2 0A       		.byte	0xa
 4517 11e3 F401     		.2byte	0x1f4
 4518 11e5 00       		.byte	0
 4519 11e6 06       		.uleb128 0x6
 4520 11e7 A0000000 		.4byte	.LVL26
 4521 11eb F4160000 		.4byte	0x16f4
 4522 11ef 06       		.uleb128 0x6
 4523 11f0 A4000000 		.4byte	.LVL27
 4524 11f4 FF160000 		.4byte	0x16ff
 4525 11f8 06       		.uleb128 0x6
 4526 11f9 A8000000 		.4byte	.LVL28
 4527 11fd 0A170000 		.4byte	0x170a
 4528 1201 06       		.uleb128 0x6
 4529 1202 AC000000 		.4byte	.LVL29
 4530 1206 15170000 		.4byte	0x1715
 4531 120a 06       		.uleb128 0x6
 4532 120b B0000000 		.4byte	.LVL30
 4533 120f 20170000 		.4byte	0x1720
 4534 1213 06       		.uleb128 0x6
 4535 1214 B4000000 		.4byte	.LVL31
 4536 1218 2B170000 		.4byte	0x172b
 4537 121c 06       		.uleb128 0x6
 4538 121d B8000000 		.4byte	.LVL32
 4539 1221 36170000 		.4byte	0x1736
 4540 1225 06       		.uleb128 0x6
 4541 1226 C2000000 		.4byte	.LVL33
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccRuSwul.s 			page 97


 4542 122a 41170000 		.4byte	0x1741
 4543 122e 06       		.uleb128 0x6
 4544 122f C6000000 		.4byte	.LVL34
 4545 1233 4C170000 		.4byte	0x174c
 4546 1237 11       		.uleb128 0x11
 4547 1238 CC000000 		.4byte	.LVL35
 4548 123c 57170000 		.4byte	0x1757
 4549 1240 4E120000 		.4byte	0x124e
 4550 1244 09       		.uleb128 0x9
 4551 1245 01       		.uleb128 0x1
 4552 1246 50       		.byte	0x50
 4553 1247 05       		.uleb128 0x5
 4554 1248 03       		.byte	0x3
 4555 1249 00000000 		.4byte	TIH
 4556 124d 00       		.byte	0
 4557 124e 11       		.uleb128 0x11
 4558 124f D2000000 		.4byte	.LVL36
 4559 1253 62170000 		.4byte	0x1762
 4560 1257 65120000 		.4byte	0x1265
 4561 125b 09       		.uleb128 0x9
 4562 125c 01       		.uleb128 0x1
 4563 125d 50       		.byte	0x50
 4564 125e 05       		.uleb128 0x5
 4565 125f 03       		.byte	0x3
 4566 1260 00000000 		.4byte	StartIH
 4567 1264 00       		.byte	0
 4568 1265 11       		.uleb128 0x11
 4569 1266 DA000000 		.4byte	.LVL37
 4570 126a CB150000 		.4byte	0x15cb
 4571 126e 7C120000 		.4byte	0x127c
 4572 1272 09       		.uleb128 0x9
 4573 1273 01       		.uleb128 0x1
 4574 1274 50       		.byte	0x50
 4575 1275 05       		.uleb128 0x5
 4576 1276 03       		.byte	0x3
 4577 1277 18000000 		.4byte	.LC1
 4578 127b 00       		.byte	0
 4579 127c 06       		.uleb128 0x6
 4580 127d DE000000 		.4byte	.LVL38
 4581 1281 6D170000 		.4byte	0x176d
 4582 1285 06       		.uleb128 0x6
 4583 1286 E2000000 		.4byte	.LVL39
 4584 128a 6D170000 		.4byte	0x176d
 4585 128e 06       		.uleb128 0x6
 4586 128f E6000000 		.4byte	.LVL40
 4587 1293 6D170000 		.4byte	0x176d
 4588 1297 00       		.byte	0
 4589 1298 13       		.uleb128 0x13
 4590 1299 FB060000 		.4byte	.LASF25
 4591 129d 04       		.byte	0x4
 4592 129e 1207     		.2byte	0x712
 4593 12a0 A4120000 		.4byte	0x12a4
 4594 12a4 14       		.uleb128 0x14
 4595 12a5 76000000 		.4byte	0x76
 4596 12a9 15       		.uleb128 0x15
 4597 12aa 7E020000 		.4byte	.LASF26
 4598 12ae 05       		.byte	0x5
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccRuSwul.s 			page 98


 4599 12af 1B       		.byte	0x1b
 4600 12b0 68000000 		.4byte	0x68
 4601 12b4 05       		.uleb128 0x5
 4602 12b5 03       		.byte	0x3
 4603 12b6 00000000 		.4byte	internal_orientation
 4604 12ba 15       		.uleb128 0x15
 4605 12bb 7D010000 		.4byte	.LASF27
 4606 12bf 06       		.byte	0x6
 4607 12c0 1D       		.byte	0x1d
 4608 12c1 68000000 		.4byte	0x68
 4609 12c5 05       		.uleb128 0x5
 4610 12c6 03       		.byte	0x3
 4611 12c7 00000000 		.4byte	driveStraightEnable
 4612 12cb 15       		.uleb128 0x15
 4613 12cc 16030000 		.4byte	.LASF28
 4614 12d0 01       		.byte	0x1
 4615 12d1 2C       		.byte	0x2c
 4616 12d2 68000000 		.4byte	0x68
 4617 12d6 05       		.uleb128 0x5
 4618 12d7 03       		.byte	0x3
 4619 12d8 00000000 		.4byte	currentPuckRackScanningIndex
 4620 12dc 16       		.uleb128 0x16
 4621 12dd 68000000 		.4byte	0x68
 4622 12e1 EC120000 		.4byte	0x12ec
 4623 12e5 17       		.uleb128 0x17
 4624 12e6 9D000000 		.4byte	0x9d
 4625 12ea 04       		.byte	0x4
 4626 12eb 00       		.byte	0
 4627 12ec 15       		.uleb128 0x15
 4628 12ed 07050000 		.4byte	.LASF29
 4629 12f1 01       		.byte	0x1
 4630 12f2 2A       		.byte	0x2a
 4631 12f3 DC120000 		.4byte	0x12dc
 4632 12f7 05       		.uleb128 0x5
 4633 12f8 03       		.byte	0x3
 4634 12f9 00000000 		.4byte	puckRackColours
 4635 12fd 15       		.uleb128 0x15
 4636 12fe CC000000 		.4byte	.LASF30
 4637 1302 01       		.byte	0x1
 4638 1303 2D       		.byte	0x2d
 4639 1304 DC120000 		.4byte	0x12dc
 4640 1308 05       		.uleb128 0x5
 4641 1309 03       		.byte	0x3
 4642 130a 00000000 		.4byte	puckRackOffsetsFromWest
 4643 130e 15       		.uleb128 0x15
 4644 130f 74010000 		.4byte	.LASF31
 4645 1313 01       		.byte	0x1
 4646 1314 25       		.byte	0x25
 4647 1315 68000000 		.4byte	0x68
 4648 1319 05       		.uleb128 0x5
 4649 131a 03       		.byte	0x3
 4650 131b 00000000 		.4byte	sweeping
 4651 131f 16       		.uleb128 0x16
 4652 1320 81000000 		.4byte	0x81
 4653 1324 2F130000 		.4byte	0x132f
 4654 1328 17       		.uleb128 0x17
 4655 1329 9D000000 		.4byte	0x9d
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccRuSwul.s 			page 99


 4656 132d 03       		.byte	0x3
 4657 132e 00       		.byte	0
 4658 132f 15       		.uleb128 0x15
 4659 1330 2B040000 		.4byte	.LASF32
 4660 1334 01       		.byte	0x1
 4661 1335 26       		.byte	0x26
 4662 1336 1F130000 		.4byte	0x131f
 4663 133a 05       		.uleb128 0x5
 4664 133b 03       		.byte	0x3
 4665 133c 00000000 		.4byte	block_edge_location
 4666 1340 15       		.uleb128 0x15
 4667 1341 F1020000 		.4byte	.LASF33
 4668 1345 07       		.byte	0x7
 4669 1346 B2       		.byte	0xb2
 4670 1347 81000000 		.4byte	0x81
 4671 134b 05       		.uleb128 0x5
 4672 134c 03       		.byte	0x3
 4673 134d 00000000 		.4byte	puckPileLocation
 4674 1351 15       		.uleb128 0x15
 4675 1352 60000000 		.4byte	.LASF34
 4676 1356 06       		.byte	0x6
 4677 1357 25       		.byte	0x25
 4678 1358 33000000 		.4byte	0x33
 4679 135c 05       		.uleb128 0x5
 4680 135d 03       		.byte	0x3
 4681 135e 00000000 		.4byte	drivingForwardFlag
 4682 1362 15       		.uleb128 0x15
 4683 1363 02030000 		.4byte	.LASF35
 4684 1367 06       		.byte	0x6
 4685 1368 26       		.byte	0x26
 4686 1369 33000000 		.4byte	0x33
 4687 136d 05       		.uleb128 0x5
 4688 136e 03       		.byte	0x3
 4689 136f 00000000 		.4byte	drivingBackwardFlag
 4690 1373 15       		.uleb128 0x15
 4691 1374 37000000 		.4byte	.LASF36
 4692 1378 06       		.byte	0x6
 4693 1379 27       		.byte	0x27
 4694 137a 33000000 		.4byte	0x33
 4695 137e 05       		.uleb128 0x5
 4696 137f 03       		.byte	0x3
 4697 1380 00000000 		.4byte	turningLeftFlag
 4698 1384 15       		.uleb128 0x15
 4699 1385 FD010000 		.4byte	.LASF37
 4700 1389 06       		.byte	0x6
 4701 138a 28       		.byte	0x28
 4702 138b 33000000 		.4byte	0x33
 4703 138f 05       		.uleb128 0x5
 4704 1390 03       		.byte	0x3
 4705 1391 00000000 		.4byte	turningRightFlag
 4706 1395 15       		.uleb128 0x15
 4707 1396 CF070000 		.4byte	.LASF38
 4708 139a 06       		.byte	0x6
 4709 139b 2B       		.byte	0x2b
 4710 139c 68000000 		.4byte	0x68
 4711 13a0 05       		.uleb128 0x5
 4712 13a1 03       		.byte	0x3
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccRuSwul.s 			page 100


 4713 13a2 00000000 		.4byte	initialisation
 4714 13a6 16       		.uleb128 0x16
 4715 13a7 8F000000 		.4byte	0x8f
 4716 13ab B6130000 		.4byte	0x13b6
 4717 13af 17       		.uleb128 0x17
 4718 13b0 9D000000 		.4byte	0x9d
 4719 13b4 1F       		.byte	0x1f
 4720 13b5 00       		.byte	0
 4721 13b6 15       		.uleb128 0x15
 4722 13b7 D4060000 		.4byte	.LASF39
 4723 13bb 01       		.byte	0x1
 4724 13bc 20       		.byte	0x20
 4725 13bd A6130000 		.4byte	0x13a6
 4726 13c1 05       		.uleb128 0x5
 4727 13c2 03       		.byte	0x3
 4728 13c3 00000000 		.4byte	output
 4729 13c7 18       		.uleb128 0x18
 4730 13c8 FE000000 		.4byte	.LASF40
 4731 13cc 07       		.byte	0x7
 4732 13cd C3       		.byte	0xc3
 4733 13ce DC120000 		.4byte	0x12dc
 4734 13d2 15       		.uleb128 0x15
 4735 13d3 82030000 		.4byte	.LASF41
 4736 13d7 01       		.byte	0x1
 4737 13d8 53       		.byte	0x53
 4738 13d9 68000000 		.4byte	0x68
 4739 13dd 05       		.uleb128 0x5
 4740 13de 03       		.byte	0x3
 4741 13df 00000000 		.4byte	colour_flag
 4742 13e3 15       		.uleb128 0x15
 4743 13e4 4F030000 		.4byte	.LASF42
 4744 13e8 01       		.byte	0x1
 4745 13e9 23       		.byte	0x23
 4746 13ea 68000000 		.4byte	0x68
 4747 13ee 05       		.uleb128 0x5
 4748 13ef 03       		.byte	0x3
 4749 13f0 00000000 		.4byte	state
 4750 13f4 15       		.uleb128 0x15
 4751 13f5 43050000 		.4byte	.LASF43
 4752 13f9 01       		.byte	0x1
 4753 13fa 59       		.byte	0x59
 4754 13fb 68000000 		.4byte	0x68
 4755 13ff 05       		.uleb128 0x5
 4756 1400 03       		.byte	0x3
 4757 1401 00000000 		.4byte	moving
 4758 1405 15       		.uleb128 0x15
 4759 1406 21010000 		.4byte	.LASF44
 4760 140a 06       		.byte	0x6
 4761 140b 2D       		.byte	0x2d
 4762 140c 68000000 		.4byte	0x68
 4763 1410 05       		.uleb128 0x5
 4764 1411 03       		.byte	0x3
 4765 1412 00000000 		.4byte	ultrasonic_flag
 4766 1416 16       		.uleb128 0x16
 4767 1417 68000000 		.4byte	0x68
 4768 141b 26140000 		.4byte	0x1426
 4769 141f 17       		.uleb128 0x17
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccRuSwul.s 			page 101


 4770 1420 9D000000 		.4byte	0x9d
 4771 1424 02       		.byte	0x2
 4772 1425 00       		.byte	0
 4773 1426 15       		.uleb128 0x15
 4774 1427 D6050000 		.4byte	.LASF45
 4775 142b 01       		.byte	0x1
 4776 142c 2B       		.byte	0x2b
 4777 142d 16140000 		.4byte	0x1416
 4778 1431 05       		.uleb128 0x5
 4779 1432 03       		.byte	0x3
 4780 1433 00000000 		.4byte	puckConstructionPlan
 4781 1437 15       		.uleb128 0x15
 4782 1438 A3040000 		.4byte	.LASF46
 4783 143c 01       		.byte	0x1
 4784 143d 5D       		.byte	0x5d
 4785 143e 68000000 		.4byte	0x68
 4786 1442 05       		.uleb128 0x5
 4787 1443 03       		.byte	0x3
 4788 1444 00000000 		.4byte	current_stage
 4789 1448 15       		.uleb128 0x15
 4790 1449 2A050000 		.4byte	.LASF47
 4791 144d 01       		.byte	0x1
 4792 144e 54       		.byte	0x54
 4793 144f 68000000 		.4byte	0x68
 4794 1453 05       		.uleb128 0x5
 4795 1454 03       		.byte	0x3
 4796 1455 00000000 		.4byte	colour_sensing_algorithm
 4797 1459 15       		.uleb128 0x15
 4798 145a CE020000 		.4byte	.LASF48
 4799 145e 01       		.byte	0x1
 4800 145f 47       		.byte	0x47
 4801 1460 68000000 		.4byte	0x68
 4802 1464 05       		.uleb128 0x5
 4803 1465 03       		.byte	0x3
 4804 1466 00000000 		.4byte	safety_override
 4805 146a 15       		.uleb128 0x15
 4806 146b A6010000 		.4byte	.LASF49
 4807 146f 01       		.byte	0x1
 4808 1470 24       		.byte	0x24
 4809 1471 68000000 		.4byte	0x68
 4810 1475 05       		.uleb128 0x5
 4811 1476 03       		.byte	0x3
 4812 1477 00000000 		.4byte	running
 4813 147b 15       		.uleb128 0x15
 4814 147c 91010000 		.4byte	.LASF50
 4815 1480 01       		.byte	0x1
 4816 1481 29       		.byte	0x29
 4817 1482 68000000 		.4byte	0x68
 4818 1486 05       		.uleb128 0x5
 4819 1487 03       		.byte	0x3
 4820 1488 00000000 		.4byte	currentPuckStackSize
 4821 148c 16       		.uleb128 0x16
 4822 148d 68000000 		.4byte	0x68
 4823 1491 9C140000 		.4byte	0x149c
 4824 1495 17       		.uleb128 0x17
 4825 1496 9D000000 		.4byte	0x9d
 4826 149a 01       		.byte	0x1
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccRuSwul.s 			page 102


 4827 149b 00       		.byte	0
 4828 149c 15       		.uleb128 0x15
 4829 149d A6030000 		.4byte	.LASF51
 4830 14a1 01       		.byte	0x1
 4831 14a2 33       		.byte	0x33
 4832 14a3 8C140000 		.4byte	0x148c
 4833 14a7 05       		.uleb128 0x5
 4834 14a8 03       		.byte	0x3
 4835 14a9 00000000 		.4byte	puckColoursTempPile
 4836 14ad 15       		.uleb128 0x15
 4837 14ae 46010000 		.4byte	.LASF52
 4838 14b2 01       		.byte	0x1
 4839 14b3 35       		.byte	0x35
 4840 14b4 81000000 		.4byte	0x81
 4841 14b8 05       		.uleb128 0x5
 4842 14b9 03       		.byte	0x3
 4843 14ba 00000000 		.4byte	horizontalPuckGrid
 4844 14be 15       		.uleb128 0x15
 4845 14bf A3000000 		.4byte	.LASF53
 4846 14c3 01       		.byte	0x1
 4847 14c4 39       		.byte	0x39
 4848 14c5 68000000 		.4byte	0x68
 4849 14c9 05       		.uleb128 0x5
 4850 14ca 03       		.byte	0x3
 4851 14cb 00000000 		.4byte	beginNavigation
 4852 14cf 15       		.uleb128 0x15
 4853 14d0 B8070000 		.4byte	.LASF54
 4854 14d4 01       		.byte	0x1
 4855 14d5 3A       		.byte	0x3a
 4856 14d6 68000000 		.4byte	0x68
 4857 14da 05       		.uleb128 0x5
 4858 14db 03       		.byte	0x3
 4859 14dc 00000000 		.4byte	pathToPucks
 4860 14e0 15       		.uleb128 0x15
 4861 14e1 58050000 		.4byte	.LASF55
 4862 14e5 01       		.byte	0x1
 4863 14e6 3B       		.byte	0x3b
 4864 14e7 68000000 		.4byte	0x68
 4865 14eb 05       		.uleb128 0x5
 4866 14ec 03       		.byte	0x3
 4867 14ed 00000000 		.4byte	pathPastBlock
 4868 14f1 16       		.uleb128 0x16
 4869 14f2 68000000 		.4byte	0x68
 4870 14f6 01150000 		.4byte	0x1501
 4871 14fa 17       		.uleb128 0x17
 4872 14fb 9D000000 		.4byte	0x9d
 4873 14ff 03       		.byte	0x3
 4874 1500 00       		.byte	0
 4875 1501 15       		.uleb128 0x15
 4876 1502 AE010000 		.4byte	.LASF56
 4877 1506 01       		.byte	0x1
 4878 1507 3C       		.byte	0x3c
 4879 1508 F1140000 		.4byte	0x14f1
 4880 150c 05       		.uleb128 0x5
 4881 150d 03       		.byte	0x3
 4882 150e 00000000 		.4byte	block_location
 4883 1512 15       		.uleb128 0x15
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccRuSwul.s 			page 103


 4884 1513 E0030000 		.4byte	.LASF57
 4885 1517 01       		.byte	0x1
 4886 1518 41       		.byte	0x41
 4887 1519 F1140000 		.4byte	0x14f1
 4888 151d 05       		.uleb128 0x5
 4889 151e 03       		.byte	0x3
 4890 151f 00000000 		.4byte	puck_location
 4891 1523 15       		.uleb128 0x15
 4892 1524 DE020000 		.4byte	.LASF58
 4893 1528 01       		.byte	0x1
 4894 1529 4B       		.byte	0x4b
 4895 152a 33000000 		.4byte	0x33
 4896 152e 05       		.uleb128 0x5
 4897 152f 03       		.byte	0x3
 4898 1530 00000000 		.4byte	blockEastClearance
 4899 1534 15       		.uleb128 0x15
 4900 1535 2E060000 		.4byte	.LASF59
 4901 1539 01       		.byte	0x1
 4902 153a 4C       		.byte	0x4c
 4903 153b 33000000 		.4byte	0x33
 4904 153f 05       		.uleb128 0x5
 4905 1540 03       		.byte	0x3
 4906 1541 00000000 		.4byte	blockWestClearance
 4907 1545 15       		.uleb128 0x15
 4908 1546 AF060000 		.4byte	.LASF60
 4909 154a 01       		.byte	0x1
 4910 154b 4D       		.byte	0x4d
 4911 154c 33000000 		.4byte	0x33
 4912 1550 05       		.uleb128 0x5
 4913 1551 03       		.byte	0x3
 4914 1552 00000000 		.4byte	puckEastClearance
 4915 1556 15       		.uleb128 0x15
 4916 1557 F0040000 		.4byte	.LASF61
 4917 155b 01       		.byte	0x1
 4918 155c 4E       		.byte	0x4e
 4919 155d 33000000 		.4byte	0x33
 4920 1561 05       		.uleb128 0x5
 4921 1562 03       		.byte	0x3
 4922 1563 00000000 		.4byte	puckWestClearance
 4923 1567 15       		.uleb128 0x15
 4924 1568 75040000 		.4byte	.LASF62
 4925 156c 01       		.byte	0x1
 4926 156d 52       		.byte	0x52
 4927 156e 68000000 		.4byte	0x68
 4928 1572 05       		.uleb128 0x5
 4929 1573 03       		.byte	0x3
 4930 1574 00000000 		.4byte	idac_value
 4931 1578 15       		.uleb128 0x15
 4932 1579 17050000 		.4byte	.LASF63
 4933 157d 01       		.byte	0x1
 4934 157e 5B       		.byte	0x5b
 4935 157f 89150000 		.4byte	0x1589
 4936 1583 05       		.uleb128 0x5
 4937 1584 03       		.byte	0x3
 4938 1585 00000000 		.4byte	PLAN_SCAN_VERTICAL
 4939 1589 19       		.uleb128 0x19
 4940 158a 68000000 		.4byte	0x68
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccRuSwul.s 			page 104


 4941 158e 15       		.uleb128 0x15
 4942 158f E2060000 		.4byte	.LASF64
 4943 1593 01       		.byte	0x1
 4944 1594 61       		.byte	0x61
 4945 1595 68000000 		.4byte	0x68
 4946 1599 05       		.uleb128 0x5
 4947 159a 03       		.byte	0x3
 4948 159b 00000000 		.4byte	distance_returned_global
 4949 159f 1A       		.uleb128 0x1a
 4950 15a0 E2010000 		.4byte	.LASF65
 4951 15a4 E2010000 		.4byte	.LASF65
 4952 15a8 06       		.byte	0x6
 4953 15a9 19       		.byte	0x19
 4954 15aa 1A       		.uleb128 0x1a
 4955 15ab B0070000 		.4byte	.LASF66
 4956 15af B0070000 		.4byte	.LASF66
 4957 15b3 08       		.byte	0x8
 4958 15b4 76       		.byte	0x76
 4959 15b5 1A       		.uleb128 0x1a
 4960 15b6 23000000 		.4byte	.LASF67
 4961 15ba 23000000 		.4byte	.LASF67
 4962 15be 09       		.byte	0x9
 4963 15bf 1D       		.byte	0x1d
 4964 15c0 1A       		.uleb128 0x1a
 4965 15c1 EE030000 		.4byte	.LASF68
 4966 15c5 EE030000 		.4byte	.LASF68
 4967 15c9 0A       		.byte	0xa
 4968 15ca E7       		.byte	0xe7
 4969 15cb 1A       		.uleb128 0x1a
 4970 15cc C5050000 		.4byte	.LASF69
 4971 15d0 C5050000 		.4byte	.LASF69
 4972 15d4 0B       		.byte	0xb
 4973 15d5 8B       		.byte	0x8b
 4974 15d6 1A       		.uleb128 0x1a
 4975 15d7 47000000 		.4byte	.LASF70
 4976 15db 47000000 		.4byte	.LASF70
 4977 15df 05       		.byte	0x5
 4978 15e0 10       		.byte	0x10
 4979 15e1 1A       		.uleb128 0x1a
 4980 15e2 C1060000 		.4byte	.LASF71
 4981 15e6 C1060000 		.4byte	.LASF71
 4982 15ea 05       		.byte	0x5
 4983 15eb 12       		.byte	0x12
 4984 15ec 1A       		.uleb128 0x1a
 4985 15ed F6030000 		.4byte	.LASF72
 4986 15f1 F6030000 		.4byte	.LASF72
 4987 15f5 09       		.byte	0x9
 4988 15f6 19       		.byte	0x19
 4989 15f7 1A       		.uleb128 0x1a
 4990 15f8 B5020000 		.4byte	.LASF73
 4991 15fc B5020000 		.4byte	.LASF73
 4992 1600 0C       		.byte	0xc
 4993 1601 2F       		.byte	0x2f
 4994 1602 1A       		.uleb128 0x1a
 4995 1603 C4070000 		.4byte	.LASF74
 4996 1607 C4070000 		.4byte	.LASF74
 4997 160b 0D       		.byte	0xd
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccRuSwul.s 			page 105


 4998 160c 10       		.byte	0x10
 4999 160d 1A       		.uleb128 0x1a
 5000 160e B9050000 		.4byte	.LASF75
 5001 1612 B9050000 		.4byte	.LASF75
 5002 1616 0D       		.byte	0xd
 5003 1617 0E       		.byte	0xe
 5004 1618 1A       		.uleb128 0x1a
 5005 1619 DC040000 		.4byte	.LASF76
 5006 161d DC040000 		.4byte	.LASF76
 5007 1621 06       		.byte	0x6
 5008 1622 16       		.byte	0x16
 5009 1623 1A       		.uleb128 0x1a
 5010 1624 AC020000 		.4byte	.LASF77
 5011 1628 AC020000 		.4byte	.LASF77
 5012 162c 09       		.byte	0x9
 5013 162d 1C       		.byte	0x1c
 5014 162e 1A       		.uleb128 0x1a
 5015 162f 62030000 		.4byte	.LASF78
 5016 1633 62030000 		.4byte	.LASF78
 5017 1637 05       		.byte	0x5
 5018 1638 14       		.byte	0x14
 5019 1639 1A       		.uleb128 0x1a
 5020 163a 14020000 		.4byte	.LASF79
 5021 163e 14020000 		.4byte	.LASF79
 5022 1642 0E       		.byte	0xe
 5023 1643 0F       		.byte	0xf
 5024 1644 1A       		.uleb128 0x1a
 5025 1645 BA030000 		.4byte	.LASF80
 5026 1649 BA030000 		.4byte	.LASF80
 5027 164d 05       		.byte	0x5
 5028 164e 0F       		.byte	0xf
 5029 164f 1A       		.uleb128 0x1a
 5030 1650 08000000 		.4byte	.LASF81
 5031 1654 08000000 		.4byte	.LASF81
 5032 1658 0E       		.byte	0xe
 5033 1659 11       		.byte	0x11
 5034 165a 1A       		.uleb128 0x1a
 5035 165b 00000000 		.4byte	.LASF82
 5036 165f 00000000 		.4byte	.LASF82
 5037 1663 0E       		.byte	0xe
 5038 1664 10       		.byte	0x10
 5039 1665 1A       		.uleb128 0x1a
 5040 1666 11000000 		.4byte	.LASF83
 5041 166a 11000000 		.4byte	.LASF83
 5042 166e 01       		.byte	0x1
 5043 166f F1       		.byte	0xf1
 5044 1670 1A       		.uleb128 0x1a
 5045 1671 D0040000 		.4byte	.LASF84
 5046 1675 D0040000 		.4byte	.LASF84
 5047 1679 0F       		.byte	0xf
 5048 167a 3D       		.byte	0x3d
 5049 167b 1A       		.uleb128 0x1a
 5050 167c 55030000 		.4byte	.LASF85
 5051 1680 55030000 		.4byte	.LASF85
 5052 1684 0B       		.byte	0xb
 5053 1685 54       		.byte	0x54
 5054 1686 1A       		.uleb128 0x1a
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccRuSwul.s 			page 106


 5055 1687 6B020000 		.4byte	.LASF86
 5056 168b 6B020000 		.4byte	.LASF86
 5057 168f 10       		.byte	0x10
 5058 1690 3A       		.byte	0x3a
 5059 1691 1A       		.uleb128 0x1a
 5060 1692 80040000 		.4byte	.LASF87
 5061 1696 80040000 		.4byte	.LASF87
 5062 169a 11       		.byte	0x11
 5063 169b 3C       		.byte	0x3c
 5064 169c 1A       		.uleb128 0x1a
 5065 169d 0E040000 		.4byte	.LASF88
 5066 16a1 0E040000 		.4byte	.LASF88
 5067 16a5 11       		.byte	0x11
 5068 16a6 40       		.byte	0x40
 5069 16a7 1A       		.uleb128 0x1a
 5070 16a8 79050000 		.4byte	.LASF89
 5071 16ac 79050000 		.4byte	.LASF89
 5072 16b0 11       		.byte	0x11
 5073 16b1 41       		.byte	0x41
 5074 16b2 1A       		.uleb128 0x1a
 5075 16b3 56040000 		.4byte	.LASF90
 5076 16b7 56040000 		.4byte	.LASF90
 5077 16bb 12       		.byte	0x12
 5078 16bc 2F       		.byte	0x2f
 5079 16bd 1A       		.uleb128 0x1a
 5080 16be 8E040000 		.4byte	.LASF91
 5081 16c2 8E040000 		.4byte	.LASF91
 5082 16c6 13       		.byte	0x13
 5083 16c7 92       		.byte	0x92
 5084 16c8 1A       		.uleb128 0x1a
 5085 16c9 33030000 		.4byte	.LASF92
 5086 16cd 33030000 		.4byte	.LASF92
 5087 16d1 13       		.byte	0x13
 5088 16d2 C3       		.byte	0xc3
 5089 16d3 1A       		.uleb128 0x1a
 5090 16d4 31010000 		.4byte	.LASF93
 5091 16d8 31010000 		.4byte	.LASF93
 5092 16dc 13       		.byte	0x13
 5093 16dd DC       		.byte	0xdc
 5094 16de 1A       		.uleb128 0x1a
 5095 16df BD010000 		.4byte	.LASF94
 5096 16e3 BD010000 		.4byte	.LASF94
 5097 16e7 14       		.byte	0x14
 5098 16e8 92       		.byte	0x92
 5099 16e9 1A       		.uleb128 0x1a
 5100 16ea B1040000 		.4byte	.LASF95
 5101 16ee B1040000 		.4byte	.LASF95
 5102 16f2 14       		.byte	0x14
 5103 16f3 C3       		.byte	0xc3
 5104 16f4 1A       		.uleb128 0x1a
 5105 16f5 EB050000 		.4byte	.LASF96
 5106 16f9 EB050000 		.4byte	.LASF96
 5107 16fd 14       		.byte	0x14
 5108 16fe DC       		.byte	0xdc
 5109 16ff 1A       		.uleb128 0x1a
 5110 1700 C8030000 		.4byte	.LASF97
 5111 1704 C8030000 		.4byte	.LASF97
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccRuSwul.s 			page 107


 5112 1708 15       		.byte	0x15
 5113 1709 92       		.byte	0x92
 5114 170a 1A       		.uleb128 0x1a
 5115 170b 8E030000 		.4byte	.LASF98
 5116 170f 8E030000 		.4byte	.LASF98
 5117 1713 15       		.byte	0x15
 5118 1714 DC       		.byte	0xdc
 5119 1715 1A       		.uleb128 0x1a
 5120 1716 93020000 		.4byte	.LASF99
 5121 171a 93020000 		.4byte	.LASF99
 5122 171e 16       		.byte	0x16
 5123 171f 92       		.byte	0x92
 5124 1720 1A       		.uleb128 0x1a
 5125 1721 52020000 		.4byte	.LASF100
 5126 1725 52020000 		.4byte	.LASF100
 5127 1729 16       		.byte	0x16
 5128 172a DC       		.byte	0xdc
 5129 172b 1A       		.uleb128 0x1a
 5130 172c B3000000 		.4byte	.LASF101
 5131 1730 B3000000 		.4byte	.LASF101
 5132 1734 17       		.byte	0x17
 5133 1735 48       		.byte	0x48
 5134 1736 1A       		.uleb128 0x1a
 5135 1737 81000000 		.4byte	.LASF102
 5136 173b 81000000 		.4byte	.LASF102
 5137 173f 18       		.byte	0x18
 5138 1740 48       		.byte	0x48
 5139 1741 1A       		.uleb128 0x1a
 5140 1742 4A050000 		.4byte	.LASF103
 5141 1746 4A050000 		.4byte	.LASF103
 5142 174a 19       		.byte	0x19
 5143 174b 5A       		.byte	0x5a
 5144 174c 1A       		.uleb128 0x1a
 5145 174d 59010000 		.4byte	.LASF104
 5146 1751 59010000 		.4byte	.LASF104
 5147 1755 19       		.byte	0x19
 5148 1756 5E       		.byte	0x5e
 5149 1757 1A       		.uleb128 0x1a
 5150 1758 73000000 		.4byte	.LASF105
 5151 175c 73000000 		.4byte	.LASF105
 5152 1760 1A       		.byte	0x1a
 5153 1761 18       		.byte	0x18
 5154 1762 1A       		.uleb128 0x1a
 5155 1763 AB050000 		.4byte	.LASF106
 5156 1767 AB050000 		.4byte	.LASF106
 5157 176b 1B       		.byte	0x1b
 5158 176c 18       		.byte	0x18
 5159 176d 1A       		.uleb128 0x1a
 5160 176e 9B060000 		.4byte	.LASF107
 5161 1772 9B060000 		.4byte	.LASF107
 5162 1776 06       		.byte	0x6
 5163 1777 1A       		.byte	0x1a
 5164 1778 00       		.byte	0
 5165              		.section	.debug_abbrev,"",%progbits
 5166              	.Ldebug_abbrev0:
 5167 0000 01       		.uleb128 0x1
 5168 0001 11       		.uleb128 0x11
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccRuSwul.s 			page 108


 5169 0002 01       		.byte	0x1
 5170 0003 25       		.uleb128 0x25
 5171 0004 0E       		.uleb128 0xe
 5172 0005 13       		.uleb128 0x13
 5173 0006 0B       		.uleb128 0xb
 5174 0007 03       		.uleb128 0x3
 5175 0008 0E       		.uleb128 0xe
 5176 0009 1B       		.uleb128 0x1b
 5177 000a 0E       		.uleb128 0xe
 5178 000b 55       		.uleb128 0x55
 5179 000c 17       		.uleb128 0x17
 5180 000d 11       		.uleb128 0x11
 5181 000e 01       		.uleb128 0x1
 5182 000f 10       		.uleb128 0x10
 5183 0010 17       		.uleb128 0x17
 5184 0011 00       		.byte	0
 5185 0012 00       		.byte	0
 5186 0013 02       		.uleb128 0x2
 5187 0014 24       		.uleb128 0x24
 5188 0015 00       		.byte	0
 5189 0016 0B       		.uleb128 0xb
 5190 0017 0B       		.uleb128 0xb
 5191 0018 3E       		.uleb128 0x3e
 5192 0019 0B       		.uleb128 0xb
 5193 001a 03       		.uleb128 0x3
 5194 001b 0E       		.uleb128 0xe
 5195 001c 00       		.byte	0
 5196 001d 00       		.byte	0
 5197 001e 03       		.uleb128 0x3
 5198 001f 16       		.uleb128 0x16
 5199 0020 00       		.byte	0
 5200 0021 03       		.uleb128 0x3
 5201 0022 0E       		.uleb128 0xe
 5202 0023 3A       		.uleb128 0x3a
 5203 0024 0B       		.uleb128 0xb
 5204 0025 3B       		.uleb128 0x3b
 5205 0026 0B       		.uleb128 0xb
 5206 0027 49       		.uleb128 0x49
 5207 0028 13       		.uleb128 0x13
 5208 0029 00       		.byte	0
 5209 002a 00       		.byte	0
 5210 002b 04       		.uleb128 0x4
 5211 002c 24       		.uleb128 0x24
 5212 002d 00       		.byte	0
 5213 002e 0B       		.uleb128 0xb
 5214 002f 0B       		.uleb128 0xb
 5215 0030 3E       		.uleb128 0x3e
 5216 0031 0B       		.uleb128 0xb
 5217 0032 03       		.uleb128 0x3
 5218 0033 08       		.uleb128 0x8
 5219 0034 00       		.byte	0
 5220 0035 00       		.byte	0
 5221 0036 05       		.uleb128 0x5
 5222 0037 2E       		.uleb128 0x2e
 5223 0038 01       		.byte	0x1
 5224 0039 3F       		.uleb128 0x3f
 5225 003a 19       		.uleb128 0x19
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccRuSwul.s 			page 109


 5226 003b 03       		.uleb128 0x3
 5227 003c 08       		.uleb128 0x8
 5228 003d 3A       		.uleb128 0x3a
 5229 003e 0B       		.uleb128 0xb
 5230 003f 3B       		.uleb128 0x3b
 5231 0040 0B       		.uleb128 0xb
 5232 0041 27       		.uleb128 0x27
 5233 0042 19       		.uleb128 0x19
 5234 0043 11       		.uleb128 0x11
 5235 0044 01       		.uleb128 0x1
 5236 0045 12       		.uleb128 0x12
 5237 0046 06       		.uleb128 0x6
 5238 0047 40       		.uleb128 0x40
 5239 0048 18       		.uleb128 0x18
 5240 0049 9742     		.uleb128 0x2117
 5241 004b 19       		.uleb128 0x19
 5242 004c 01       		.uleb128 0x1
 5243 004d 13       		.uleb128 0x13
 5244 004e 00       		.byte	0
 5245 004f 00       		.byte	0
 5246 0050 06       		.uleb128 0x6
 5247 0051 898201   		.uleb128 0x4109
 5248 0054 00       		.byte	0
 5249 0055 11       		.uleb128 0x11
 5250 0056 01       		.uleb128 0x1
 5251 0057 31       		.uleb128 0x31
 5252 0058 13       		.uleb128 0x13
 5253 0059 00       		.byte	0
 5254 005a 00       		.byte	0
 5255 005b 07       		.uleb128 0x7
 5256 005c 2E       		.uleb128 0x2e
 5257 005d 01       		.byte	0x1
 5258 005e 3F       		.uleb128 0x3f
 5259 005f 19       		.uleb128 0x19
 5260 0060 03       		.uleb128 0x3
 5261 0061 0E       		.uleb128 0xe
 5262 0062 3A       		.uleb128 0x3a
 5263 0063 0B       		.uleb128 0xb
 5264 0064 3B       		.uleb128 0x3b
 5265 0065 0B       		.uleb128 0xb
 5266 0066 27       		.uleb128 0x27
 5267 0067 19       		.uleb128 0x19
 5268 0068 11       		.uleb128 0x11
 5269 0069 01       		.uleb128 0x1
 5270 006a 12       		.uleb128 0x12
 5271 006b 06       		.uleb128 0x6
 5272 006c 40       		.uleb128 0x40
 5273 006d 18       		.uleb128 0x18
 5274 006e 9742     		.uleb128 0x2117
 5275 0070 19       		.uleb128 0x19
 5276 0071 01       		.uleb128 0x1
 5277 0072 13       		.uleb128 0x13
 5278 0073 00       		.byte	0
 5279 0074 00       		.byte	0
 5280 0075 08       		.uleb128 0x8
 5281 0076 898201   		.uleb128 0x4109
 5282 0079 01       		.byte	0x1
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccRuSwul.s 			page 110


 5283 007a 11       		.uleb128 0x11
 5284 007b 01       		.uleb128 0x1
 5285 007c 31       		.uleb128 0x31
 5286 007d 13       		.uleb128 0x13
 5287 007e 00       		.byte	0
 5288 007f 00       		.byte	0
 5289 0080 09       		.uleb128 0x9
 5290 0081 8A8201   		.uleb128 0x410a
 5291 0084 00       		.byte	0
 5292 0085 02       		.uleb128 0x2
 5293 0086 18       		.uleb128 0x18
 5294 0087 9142     		.uleb128 0x2111
 5295 0089 18       		.uleb128 0x18
 5296 008a 00       		.byte	0
 5297 008b 00       		.byte	0
 5298 008c 0A       		.uleb128 0xa
 5299 008d 2E       		.uleb128 0x2e
 5300 008e 01       		.byte	0x1
 5301 008f 3F       		.uleb128 0x3f
 5302 0090 19       		.uleb128 0x19
 5303 0091 03       		.uleb128 0x3
 5304 0092 0E       		.uleb128 0xe
 5305 0093 3A       		.uleb128 0x3a
 5306 0094 0B       		.uleb128 0xb
 5307 0095 3B       		.uleb128 0x3b
 5308 0096 0B       		.uleb128 0xb
 5309 0097 27       		.uleb128 0x27
 5310 0098 19       		.uleb128 0x19
 5311 0099 49       		.uleb128 0x49
 5312 009a 13       		.uleb128 0x13
 5313 009b 8701     		.uleb128 0x87
 5314 009d 19       		.uleb128 0x19
 5315 009e 11       		.uleb128 0x11
 5316 009f 01       		.uleb128 0x1
 5317 00a0 12       		.uleb128 0x12
 5318 00a1 06       		.uleb128 0x6
 5319 00a2 40       		.uleb128 0x40
 5320 00a3 18       		.uleb128 0x18
 5321 00a4 9742     		.uleb128 0x2117
 5322 00a6 19       		.uleb128 0x19
 5323 00a7 01       		.uleb128 0x1
 5324 00a8 13       		.uleb128 0x13
 5325 00a9 00       		.byte	0
 5326 00aa 00       		.byte	0
 5327 00ab 0B       		.uleb128 0xb
 5328 00ac 34       		.uleb128 0x34
 5329 00ad 00       		.byte	0
 5330 00ae 03       		.uleb128 0x3
 5331 00af 0E       		.uleb128 0xe
 5332 00b0 3A       		.uleb128 0x3a
 5333 00b1 0B       		.uleb128 0xb
 5334 00b2 3B       		.uleb128 0x3b
 5335 00b3 0B       		.uleb128 0xb
 5336 00b4 49       		.uleb128 0x49
 5337 00b5 13       		.uleb128 0x13
 5338 00b6 1C       		.uleb128 0x1c
 5339 00b7 05       		.uleb128 0x5
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccRuSwul.s 			page 111


 5340 00b8 00       		.byte	0
 5341 00b9 00       		.byte	0
 5342 00ba 0C       		.uleb128 0xc
 5343 00bb 0B       		.uleb128 0xb
 5344 00bc 01       		.byte	0x1
 5345 00bd 11       		.uleb128 0x11
 5346 00be 01       		.uleb128 0x1
 5347 00bf 12       		.uleb128 0x12
 5348 00c0 06       		.uleb128 0x6
 5349 00c1 01       		.uleb128 0x1
 5350 00c2 13       		.uleb128 0x13
 5351 00c3 00       		.byte	0
 5352 00c4 00       		.byte	0
 5353 00c5 0D       		.uleb128 0xd
 5354 00c6 2E       		.uleb128 0x2e
 5355 00c7 01       		.byte	0x1
 5356 00c8 3F       		.uleb128 0x3f
 5357 00c9 19       		.uleb128 0x19
 5358 00ca 03       		.uleb128 0x3
 5359 00cb 0E       		.uleb128 0xe
 5360 00cc 3A       		.uleb128 0x3a
 5361 00cd 0B       		.uleb128 0xb
 5362 00ce 3B       		.uleb128 0x3b
 5363 00cf 0B       		.uleb128 0xb
 5364 00d0 49       		.uleb128 0x49
 5365 00d1 13       		.uleb128 0x13
 5366 00d2 3C       		.uleb128 0x3c
 5367 00d3 19       		.uleb128 0x19
 5368 00d4 01       		.uleb128 0x1
 5369 00d5 13       		.uleb128 0x13
 5370 00d6 00       		.byte	0
 5371 00d7 00       		.byte	0
 5372 00d8 0E       		.uleb128 0xe
 5373 00d9 18       		.uleb128 0x18
 5374 00da 00       		.byte	0
 5375 00db 00       		.byte	0
 5376 00dc 00       		.byte	0
 5377 00dd 0F       		.uleb128 0xf
 5378 00de 34       		.uleb128 0x34
 5379 00df 00       		.byte	0
 5380 00e0 03       		.uleb128 0x3
 5381 00e1 0E       		.uleb128 0xe
 5382 00e2 3A       		.uleb128 0x3a
 5383 00e3 0B       		.uleb128 0xb
 5384 00e4 3B       		.uleb128 0x3b
 5385 00e5 05       		.uleb128 0x5
 5386 00e6 49       		.uleb128 0x49
 5387 00e7 13       		.uleb128 0x13
 5388 00e8 02       		.uleb128 0x2
 5389 00e9 17       		.uleb128 0x17
 5390 00ea 00       		.byte	0
 5391 00eb 00       		.byte	0
 5392 00ec 10       		.uleb128 0x10
 5393 00ed 34       		.uleb128 0x34
 5394 00ee 00       		.byte	0
 5395 00ef 03       		.uleb128 0x3
 5396 00f0 08       		.uleb128 0x8
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccRuSwul.s 			page 112


 5397 00f1 3A       		.uleb128 0x3a
 5398 00f2 0B       		.uleb128 0xb
 5399 00f3 3B       		.uleb128 0x3b
 5400 00f4 05       		.uleb128 0x5
 5401 00f5 49       		.uleb128 0x49
 5402 00f6 13       		.uleb128 0x13
 5403 00f7 02       		.uleb128 0x2
 5404 00f8 17       		.uleb128 0x17
 5405 00f9 00       		.byte	0
 5406 00fa 00       		.byte	0
 5407 00fb 11       		.uleb128 0x11
 5408 00fc 898201   		.uleb128 0x4109
 5409 00ff 01       		.byte	0x1
 5410 0100 11       		.uleb128 0x11
 5411 0101 01       		.uleb128 0x1
 5412 0102 31       		.uleb128 0x31
 5413 0103 13       		.uleb128 0x13
 5414 0104 01       		.uleb128 0x1
 5415 0105 13       		.uleb128 0x13
 5416 0106 00       		.byte	0
 5417 0107 00       		.byte	0
 5418 0108 12       		.uleb128 0x12
 5419 0109 0B       		.uleb128 0xb
 5420 010a 01       		.byte	0x1
 5421 010b 55       		.uleb128 0x55
 5422 010c 17       		.uleb128 0x17
 5423 010d 01       		.uleb128 0x1
 5424 010e 13       		.uleb128 0x13
 5425 010f 00       		.byte	0
 5426 0110 00       		.byte	0
 5427 0111 13       		.uleb128 0x13
 5428 0112 34       		.uleb128 0x34
 5429 0113 00       		.byte	0
 5430 0114 03       		.uleb128 0x3
 5431 0115 0E       		.uleb128 0xe
 5432 0116 3A       		.uleb128 0x3a
 5433 0117 0B       		.uleb128 0xb
 5434 0118 3B       		.uleb128 0x3b
 5435 0119 05       		.uleb128 0x5
 5436 011a 49       		.uleb128 0x49
 5437 011b 13       		.uleb128 0x13
 5438 011c 3F       		.uleb128 0x3f
 5439 011d 19       		.uleb128 0x19
 5440 011e 3C       		.uleb128 0x3c
 5441 011f 19       		.uleb128 0x19
 5442 0120 00       		.byte	0
 5443 0121 00       		.byte	0
 5444 0122 14       		.uleb128 0x14
 5445 0123 35       		.uleb128 0x35
 5446 0124 00       		.byte	0
 5447 0125 49       		.uleb128 0x49
 5448 0126 13       		.uleb128 0x13
 5449 0127 00       		.byte	0
 5450 0128 00       		.byte	0
 5451 0129 15       		.uleb128 0x15
 5452 012a 34       		.uleb128 0x34
 5453 012b 00       		.byte	0
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccRuSwul.s 			page 113


 5454 012c 03       		.uleb128 0x3
 5455 012d 0E       		.uleb128 0xe
 5456 012e 3A       		.uleb128 0x3a
 5457 012f 0B       		.uleb128 0xb
 5458 0130 3B       		.uleb128 0x3b
 5459 0131 0B       		.uleb128 0xb
 5460 0132 49       		.uleb128 0x49
 5461 0133 13       		.uleb128 0x13
 5462 0134 3F       		.uleb128 0x3f
 5463 0135 19       		.uleb128 0x19
 5464 0136 02       		.uleb128 0x2
 5465 0137 18       		.uleb128 0x18
 5466 0138 00       		.byte	0
 5467 0139 00       		.byte	0
 5468 013a 16       		.uleb128 0x16
 5469 013b 01       		.uleb128 0x1
 5470 013c 01       		.byte	0x1
 5471 013d 49       		.uleb128 0x49
 5472 013e 13       		.uleb128 0x13
 5473 013f 01       		.uleb128 0x1
 5474 0140 13       		.uleb128 0x13
 5475 0141 00       		.byte	0
 5476 0142 00       		.byte	0
 5477 0143 17       		.uleb128 0x17
 5478 0144 21       		.uleb128 0x21
 5479 0145 00       		.byte	0
 5480 0146 49       		.uleb128 0x49
 5481 0147 13       		.uleb128 0x13
 5482 0148 2F       		.uleb128 0x2f
 5483 0149 0B       		.uleb128 0xb
 5484 014a 00       		.byte	0
 5485 014b 00       		.byte	0
 5486 014c 18       		.uleb128 0x18
 5487 014d 34       		.uleb128 0x34
 5488 014e 00       		.byte	0
 5489 014f 03       		.uleb128 0x3
 5490 0150 0E       		.uleb128 0xe
 5491 0151 3A       		.uleb128 0x3a
 5492 0152 0B       		.uleb128 0xb
 5493 0153 3B       		.uleb128 0x3b
 5494 0154 0B       		.uleb128 0xb
 5495 0155 49       		.uleb128 0x49
 5496 0156 13       		.uleb128 0x13
 5497 0157 3F       		.uleb128 0x3f
 5498 0158 19       		.uleb128 0x19
 5499 0159 3C       		.uleb128 0x3c
 5500 015a 19       		.uleb128 0x19
 5501 015b 00       		.byte	0
 5502 015c 00       		.byte	0
 5503 015d 19       		.uleb128 0x19
 5504 015e 26       		.uleb128 0x26
 5505 015f 00       		.byte	0
 5506 0160 49       		.uleb128 0x49
 5507 0161 13       		.uleb128 0x13
 5508 0162 00       		.byte	0
 5509 0163 00       		.byte	0
 5510 0164 1A       		.uleb128 0x1a
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccRuSwul.s 			page 114


 5511 0165 2E       		.uleb128 0x2e
 5512 0166 00       		.byte	0
 5513 0167 3F       		.uleb128 0x3f
 5514 0168 19       		.uleb128 0x19
 5515 0169 3C       		.uleb128 0x3c
 5516 016a 19       		.uleb128 0x19
 5517 016b 6E       		.uleb128 0x6e
 5518 016c 0E       		.uleb128 0xe
 5519 016d 03       		.uleb128 0x3
 5520 016e 0E       		.uleb128 0xe
 5521 016f 3A       		.uleb128 0x3a
 5522 0170 0B       		.uleb128 0xb
 5523 0171 3B       		.uleb128 0x3b
 5524 0172 0B       		.uleb128 0xb
 5525 0173 00       		.byte	0
 5526 0174 00       		.byte	0
 5527 0175 00       		.byte	0
 5528              		.section	.debug_loc,"",%progbits
 5529              	.Ldebug_loc0:
 5530              	.LLST0:
 5531 0000 7C010000 		.4byte	.LVL57
 5532 0004 82010000 		.4byte	.LVL58
 5533 0008 0200     		.2byte	0x2
 5534 000a 30       		.byte	0x30
 5535 000b 9F       		.byte	0x9f
 5536 000c 82010000 		.4byte	.LVL58
 5537 0010 A2010000 		.4byte	.LVL61
 5538 0014 0100     		.2byte	0x1
 5539 0016 52       		.byte	0x52
 5540 0017 00000000 		.4byte	0
 5541 001b 00000000 		.4byte	0
 5542              	.LLST1:
 5543 001f 2A010000 		.4byte	.LVL45
 5544 0023 2E010000 		.4byte	.LVL46
 5545 0027 0200     		.2byte	0x2
 5546 0029 30       		.byte	0x30
 5547 002a 9F       		.byte	0x9f
 5548 002b 2E010000 		.4byte	.LVL46
 5549 002f 50010000 		.4byte	.LVL51
 5550 0033 0100     		.2byte	0x1
 5551 0035 54       		.byte	0x54
 5552 0036 00000000 		.4byte	0
 5553 003a 00000000 		.4byte	0
 5554              	.LLST2:
 5555 003e 4E010000 		.4byte	.LVL50
 5556 0042 52010000 		.4byte	.LVL52
 5557 0046 0200     		.2byte	0x2
 5558 0048 30       		.byte	0x30
 5559 0049 9F       		.byte	0x9f
 5560 004a 52010000 		.4byte	.LVL52
 5561 004e A6010000 		.4byte	.LVL63
 5562 0052 0100     		.2byte	0x1
 5563 0054 54       		.byte	0x54
 5564 0055 00000000 		.4byte	0
 5565 0059 00000000 		.4byte	0
 5566              	.LLST3:
 5567 005d 7C010000 		.4byte	.LVL57
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccRuSwul.s 			page 115


 5568 0061 82010000 		.4byte	.LVL58
 5569 0065 0200     		.2byte	0x2
 5570 0067 30       		.byte	0x30
 5571 0068 9F       		.byte	0x9f
 5572 0069 82010000 		.4byte	.LVL58
 5573 006d A4010000 		.4byte	.LVL62
 5574 0071 0100     		.2byte	0x1
 5575 0073 53       		.byte	0x53
 5576 0074 00000000 		.4byte	0
 5577 0078 00000000 		.4byte	0
 5578              	.LLST4:
 5579 007c EA010000 		.4byte	.LVL70
 5580 0080 F0010000 		.4byte	.LVL71
 5581 0084 0700     		.2byte	0x7
 5582 0086 0A       		.byte	0xa
 5583 0087 1202     		.2byte	0x212
 5584 0089 72       		.byte	0x72
 5585 008a 00       		.sleb128 0
 5586 008b 1C       		.byte	0x1c
 5587 008c 9F       		.byte	0x9f
 5588 008d F0010000 		.4byte	.LVL71
 5589 0091 F9010000 		.4byte	.LVL72-1
 5590 0095 0800     		.2byte	0x8
 5591 0097 0A       		.byte	0xa
 5592 0098 1202     		.2byte	0x212
 5593 009a 75       		.byte	0x75
 5594 009b 08       		.sleb128 8
 5595 009c 06       		.byte	0x6
 5596 009d 1C       		.byte	0x1c
 5597 009e 9F       		.byte	0x9f
 5598 009f 00020000 		.4byte	.LVL73
 5599 00a3 4C030000 		.4byte	.LVL96
 5600 00a7 0400     		.2byte	0x4
 5601 00a9 0A       		.byte	0xa
 5602 00aa 5E01     		.2byte	0x15e
 5603 00ac 9F       		.byte	0x9f
 5604 00ad 00000000 		.4byte	0
 5605 00b1 00000000 		.4byte	0
 5606              	.LLST5:
 5607 00b5 1A030000 		.4byte	.LVL95
 5608 00b9 4C030000 		.4byte	.LVL96
 5609 00bd 0400     		.2byte	0x4
 5610 00bf 0A       		.byte	0xa
 5611 00c0 9D03     		.2byte	0x39d
 5612 00c2 9F       		.byte	0x9f
 5613 00c3 00000000 		.4byte	0
 5614 00c7 00000000 		.4byte	0
 5615              	.LLST6:
 5616 00cb A6040000 		.4byte	.LVL125
 5617 00cf B6040000 		.4byte	.LVL126
 5618 00d3 0200     		.2byte	0x2
 5619 00d5 30       		.byte	0x30
 5620 00d6 9F       		.byte	0x9f
 5621 00d7 B6040000 		.4byte	.LVL126
 5622 00db 36050000 		.4byte	.LVL143
 5623 00df 0100     		.2byte	0x1
 5624 00e1 55       		.byte	0x55
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccRuSwul.s 			page 116


 5625 00e2 00000000 		.4byte	0
 5626 00e6 00000000 		.4byte	0
 5627              	.LLST7:
 5628 00ea CA040000 		.4byte	.LVL130
 5629 00ee CC040000 		.4byte	.LVL131
 5630 00f2 0100     		.2byte	0x1
 5631 00f4 50       		.byte	0x50
 5632 00f5 CC040000 		.4byte	.LVL131
 5633 00f9 0C050000 		.4byte	.LVL137
 5634 00fd 0100     		.2byte	0x1
 5635 00ff 54       		.byte	0x54
 5636 0100 00000000 		.4byte	0
 5637 0104 00000000 		.4byte	0
 5638              	.LLST8:
 5639 0108 22070000 		.4byte	.LVL189
 5640 010c E6070000 		.4byte	.LVL202
 5641 0110 0100     		.2byte	0x1
 5642 0112 55       		.byte	0x55
 5643 0113 00000000 		.4byte	0
 5644 0117 00000000 		.4byte	0
 5645              		.section	.debug_aranges,"",%progbits
 5646 0000 2C000000 		.4byte	0x2c
 5647 0004 0200     		.2byte	0x2
 5648 0006 00000000 		.4byte	.Ldebug_info0
 5649 000a 04       		.byte	0x4
 5650 000b 00       		.byte	0
 5651 000c 0000     		.2byte	0
 5652 000e 0000     		.2byte	0
 5653 0010 00000000 		.4byte	.LFB64
 5654 0014 08000000 		.4byte	.LFE64-.LFB64
 5655 0018 00000000 		.4byte	.LFB65
 5656 001c 20000000 		.4byte	.LFE65-.LFB65
 5657 0020 00000000 		.4byte	.LFB66
 5658 0024 7C080000 		.4byte	.LFE66-.LFB66
 5659 0028 00000000 		.4byte	0
 5660 002c 00000000 		.4byte	0
 5661              		.section	.debug_ranges,"",%progbits
 5662              	.Ldebug_ranges0:
 5663 0000 7C010000 		.4byte	.LBB6
 5664 0004 7E010000 		.4byte	.LBE6
 5665 0008 80010000 		.4byte	.LBB7
 5666 000c A0010000 		.4byte	.LBE7
 5667 0010 00000000 		.4byte	0
 5668 0014 00000000 		.4byte	0
 5669 0018 00000000 		.4byte	.LFB64
 5670 001c 08000000 		.4byte	.LFE64
 5671 0020 00000000 		.4byte	.LFB65
 5672 0024 20000000 		.4byte	.LFE65
 5673 0028 00000000 		.4byte	.LFB66
 5674 002c 7C080000 		.4byte	.LFE66
 5675 0030 00000000 		.4byte	0
 5676 0034 00000000 		.4byte	0
 5677              		.section	.debug_line,"",%progbits
 5678              	.Ldebug_line0:
 5679 0000 E8040000 		.section	.debug_str,"MS",%progbits,1
 5679      02000D03 
 5679      00000201 
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccRuSwul.s 			page 117


 5679      FB0E0D00 
 5679      01010101 
 5680              	.LASF82:
 5681 0000 61726D4F 		.ascii	"armOpen\000"
 5681      70656E00 
 5682              	.LASF81:
 5683 0008 61726D43 		.ascii	"armClose\000"
 5683      6C6F7365 
 5683      00
 5684              	.LASF83:
 5685 0011 756C7469 		.ascii	"ultimateDebugging\000"
 5685      6D617465 
 5685      44656275 
 5685      6767696E 
 5685      6700
 5686              	.LASF67:
 5687 0023 636F6C6F 		.ascii	"colourSensingOutput\000"
 5687      75725365 
 5687      6E73696E 
 5687      674F7574 
 5687      70757400 
 5688              	.LASF36:
 5689 0037 7475726E 		.ascii	"turningLeftFlag\000"
 5689      696E674C 
 5689      65667446 
 5689      6C616700 
 5690              	.LASF70:
 5691 0047 73747261 		.ascii	"straightAdjust\000"
 5691      69676874 
 5691      41646A75 
 5691      737400
 5692              	.LASF2:
 5693 0056 73686F72 		.ascii	"short int\000"
 5693      7420696E 
 5693      7400
 5694              	.LASF34:
 5695 0060 64726976 		.ascii	"drivingForwardFlag\000"
 5695      696E6746 
 5695      6F727761 
 5695      7264466C 
 5695      616700
 5696              	.LASF105:
 5697 0073 536F6E69 		.ascii	"Sonic_StartEx\000"
 5697      635F5374 
 5697      61727445 
 5697      7800
 5698              	.LASF102:
 5699 0081 4D6F746F 		.ascii	"Motor_Right_Decoder_Start\000"
 5699      725F5269 
 5699      6768745F 
 5699      4465636F 
 5699      6465725F 
 5700              	.LASF10:
 5701 009b 696E7433 		.ascii	"int32_t\000"
 5701      325F7400 
 5702              	.LASF53:
 5703 00a3 62656769 		.ascii	"beginNavigation\000"
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccRuSwul.s 			page 118


 5703      6E4E6176 
 5703      69676174 
 5703      696F6E00 
 5704              	.LASF101:
 5705 00b3 4D6F746F 		.ascii	"Motor_Left_Decoder_Start\000"
 5705      725F4C65 
 5705      66745F44 
 5705      65636F64 
 5705      65725F53 
 5706              	.LASF30:
 5707 00cc 7075636B 		.ascii	"puckRackOffsetsFromWest\000"
 5707      5261636B 
 5707      4F666673 
 5707      65747346 
 5707      726F6D57 
 5708              	.LASF14:
 5709 00e4 6C6F6E67 		.ascii	"long double\000"
 5709      20646F75 
 5709      626C6500 
 5710              	.LASF19:
 5711 00f0 7075636B 		.ascii	"puckRackIndex\000"
 5711      5261636B 
 5711      496E6465 
 5711      7800
 5712              	.LASF40:
 5713 00fe 756C7472 		.ascii	"ultrasonic_distances_mm\000"
 5713      61736F6E 
 5713      69635F64 
 5713      69737461 
 5713      6E636573 
 5714              	.LASF21:
 5715 0116 7075636B 		.ascii	"puck_check\000"
 5715      5F636865 
 5715      636B00
 5716              	.LASF44:
 5717 0121 756C7472 		.ascii	"ultrasonic_flag\000"
 5717      61736F6E 
 5717      69635F66 
 5717      6C616700 
 5718              	.LASF93:
 5719 0131 5261636B 		.ascii	"Rack_Servo_PWM_Sleep\000"
 5719      5F536572 
 5719      766F5F50 
 5719      574D5F53 
 5719      6C656570 
 5720              	.LASF52:
 5721 0146 686F7269 		.ascii	"horizontalPuckGrid\000"
 5721      7A6F6E74 
 5721      616C5075 
 5721      636B4772 
 5721      696400
 5722              	.LASF104:
 5723 0159 54696D65 		.ascii	"Timer_1_ReadStatusRegister\000"
 5723      725F315F 
 5723      52656164 
 5723      53746174 
 5723      75735265 
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccRuSwul.s 			page 119


 5724              	.LASF31:
 5725 0174 73776565 		.ascii	"sweeping\000"
 5725      70696E67 
 5725      00
 5726              	.LASF27:
 5727 017d 64726976 		.ascii	"driveStraightEnable\000"
 5727      65537472 
 5727      61696768 
 5727      74456E61 
 5727      626C6500 
 5728              	.LASF50:
 5729 0191 63757272 		.ascii	"currentPuckStackSize\000"
 5729      656E7450 
 5729      75636B53 
 5729      7461636B 
 5729      53697A65 
 5730              	.LASF49:
 5731 01a6 72756E6E 		.ascii	"running\000"
 5731      696E6700 
 5732              	.LASF56:
 5733 01ae 626C6F63 		.ascii	"block_location\000"
 5733      6B5F6C6F 
 5733      63617469 
 5733      6F6E00
 5734              	.LASF94:
 5735 01bd 47726970 		.ascii	"Gripper_Servo_PWM_Start\000"
 5735      7065725F 
 5735      53657276 
 5735      6F5F5057 
 5735      4D5F5374 
 5736              	.LASF22:
 5737 01d5 7075636B 		.ascii	"puck_correct\000"
 5737      5F636F72 
 5737      72656374 
 5737      00
 5738              	.LASF65:
 5739 01e2 756C7472 		.ascii	"ultrasonicInterruptHandler\000"
 5739      61736F6E 
 5739      6963496E 
 5739      74657272 
 5739      75707448 
 5740              	.LASF37:
 5741 01fd 7475726E 		.ascii	"turningRightFlag\000"
 5741      696E6752 
 5741      69676874 
 5741      466C6167 
 5741      00
 5742              	.LASF11:
 5743 020e 666C6F61 		.ascii	"float\000"
 5743      7400
 5744              	.LASF79:
 5745 0214 6368616E 		.ascii	"changeHeightToPuck\000"
 5745      67654865 
 5745      69676874 
 5745      546F5075 
 5745      636B00
 5746              	.LASF6:
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccRuSwul.s 			page 120


 5747 0227 6C6F6E67 		.ascii	"long long int\000"
 5747      206C6F6E 
 5747      6720696E 
 5747      7400
 5748              	.LASF17:
 5749 0235 626C6F63 		.ascii	"block_and_puck_edge_midpoint\000"
 5749      6B5F616E 
 5749      645F7075 
 5749      636B5F65 
 5749      6467655F 
 5750              	.LASF100:
 5751 0252 4D6F746F 		.ascii	"Motor_Right_Driver_Sleep\000"
 5751      725F5269 
 5751      6768745F 
 5751      44726976 
 5751      65725F53 
 5752              	.LASF86:
 5753 026b 4144435F 		.ascii	"ADC_Start\000"
 5753      53746172 
 5753      7400
 5754              	.LASF4:
 5755 0275 6C6F6E67 		.ascii	"long int\000"
 5755      20696E74 
 5755      00
 5756              	.LASF26:
 5757 027e 696E7465 		.ascii	"internal_orientation\000"
 5757      726E616C 
 5757      5F6F7269 
 5757      656E7461 
 5757      74696F6E 
 5758              	.LASF99:
 5759 0293 4D6F746F 		.ascii	"Motor_Right_Driver_Start\000"
 5759      725F5269 
 5759      6768745F 
 5759      44726976 
 5759      65725F53 
 5760              	.LASF77:
 5761 02ac 626C696E 		.ascii	"blinkLED\000"
 5761      6B4C4544 
 5761      00
 5762              	.LASF73:
 5763 02b5 636F6E74 		.ascii	"control_photodiode_Write\000"
 5763      726F6C5F 
 5763      70686F74 
 5763      6F64696F 
 5763      64655F57 
 5764              	.LASF48:
 5765 02ce 73616665 		.ascii	"safety_override\000"
 5765      74795F6F 
 5765      76657272 
 5765      69646500 
 5766              	.LASF58:
 5767 02de 626C6F63 		.ascii	"blockEastClearance\000"
 5767      6B456173 
 5767      74436C65 
 5767      6172616E 
 5767      636500
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccRuSwul.s 			page 121


 5768              	.LASF33:
 5769 02f1 7075636B 		.ascii	"puckPileLocation\000"
 5769      50696C65 
 5769      4C6F6361 
 5769      74696F6E 
 5769      00
 5770              	.LASF35:
 5771 0302 64726976 		.ascii	"drivingBackwardFlag\000"
 5771      696E6742 
 5771      61636B77 
 5771      61726446 
 5771      6C616700 
 5772              	.LASF28:
 5773 0316 63757272 		.ascii	"currentPuckRackScanningIndex\000"
 5773      656E7450 
 5773      75636B52 
 5773      61636B53 
 5773      63616E6E 
 5774              	.LASF92:
 5775 0333 5261636B 		.ascii	"Rack_Servo_PWM_WriteCompare\000"
 5775      5F536572 
 5775      766F5F50 
 5775      574D5F57 
 5775      72697465 
 5776              	.LASF42:
 5777 034f 73746174 		.ascii	"state\000"
 5777      6500
 5778              	.LASF85:
 5779 0355 55415254 		.ascii	"UART_1_Start\000"
 5779      5F315F53 
 5779      74617274 
 5779      00
 5780              	.LASF78:
 5781 0362 6368616E 		.ascii	"changeOrientation\000"
 5781      67654F72 
 5781      69656E74 
 5781      6174696F 
 5781      6E00
 5782              	.LASF1:
 5783 0374 756E7369 		.ascii	"unsigned char\000"
 5783      676E6564 
 5783      20636861 
 5783      7200
 5784              	.LASF41:
 5785 0382 636F6C6F 		.ascii	"colour_flag\000"
 5785      75725F66 
 5785      6C616700 
 5786              	.LASF98:
 5787 038e 4D6F746F 		.ascii	"Motor_Left_Driver_Sleep\000"
 5787      725F4C65 
 5787      66745F44 
 5787      72697665 
 5787      725F536C 
 5788              	.LASF51:
 5789 03a6 7075636B 		.ascii	"puckColoursTempPile\000"
 5789      436F6C6F 
 5789      75727354 
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccRuSwul.s 			page 122


 5789      656D7050 
 5789      696C6500 
 5790              	.LASF80:
 5791 03ba 6D6F7665 		.ascii	"moveUntilPuck\000"
 5791      556E7469 
 5791      6C507563 
 5791      6B00
 5792              	.LASF97:
 5793 03c8 4D6F746F 		.ascii	"Motor_Left_Driver_Start\000"
 5793      725F4C65 
 5793      66745F44 
 5793      72697665 
 5793      725F5374 
 5794              	.LASF57:
 5795 03e0 7075636B 		.ascii	"puck_location\000"
 5795      5F6C6F63 
 5795      6174696F 
 5795      6E00
 5796              	.LASF68:
 5797 03ee 73707269 		.ascii	"sprintf\000"
 5797      6E746600 
 5798              	.LASF72:
 5799 03f6 636F6C6F 		.ascii	"colourSensingInitialise\000"
 5799      75725365 
 5799      6E73696E 
 5799      67496E69 
 5799      7469616C 
 5800              	.LASF88:
 5801 040e 49444143 		.ascii	"IDAC8_1_SetRange\000"
 5801      385F315F 
 5801      53657452 
 5801      616E6765 
 5801      00
 5802              	.LASF0:
 5803 041f 7369676E 		.ascii	"signed char\000"
 5803      65642063 
 5803      68617200 
 5804              	.LASF32:
 5805 042b 626C6F63 		.ascii	"block_edge_location\000"
 5805      6B5F6564 
 5805      67655F6C 
 5805      6F636174 
 5805      696F6E00 
 5806              	.LASF7:
 5807 043f 6C6F6E67 		.ascii	"long long unsigned int\000"
 5807      206C6F6E 
 5807      6720756E 
 5807      7369676E 
 5807      65642069 
 5808              	.LASF90:
 5809 0456 636F6E74 		.ascii	"control_led_Write\000"
 5809      726F6C5F 
 5809      6C65645F 
 5809      57726974 
 5809      6500
 5810              	.LASF8:
 5811 0468 756E7369 		.ascii	"unsigned int\000"
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccRuSwul.s 			page 123


 5811      676E6564 
 5811      20696E74 
 5811      00
 5812              	.LASF62:
 5813 0475 69646163 		.ascii	"idac_value\000"
 5813      5F76616C 
 5813      756500
 5814              	.LASF87:
 5815 0480 49444143 		.ascii	"IDAC8_1_Start\000"
 5815      385F315F 
 5815      53746172 
 5815      7400
 5816              	.LASF91:
 5817 048e 5261636B 		.ascii	"Rack_Servo_PWM_Start\000"
 5817      5F536572 
 5817      766F5F50 
 5817      574D5F53 
 5817      74617274 
 5818              	.LASF46:
 5819 04a3 63757272 		.ascii	"current_stage\000"
 5819      656E745F 
 5819      73746167 
 5819      6500
 5820              	.LASF95:
 5821 04b1 47726970 		.ascii	"Gripper_Servo_PWM_WriteCompare\000"
 5821      7065725F 
 5821      53657276 
 5821      6F5F5057 
 5821      4D5F5772 
 5822              	.LASF84:
 5823 04d0 5449415F 		.ascii	"TIA_1_Start\000"
 5823      315F5374 
 5823      61727400 
 5824              	.LASF76:
 5825 04dc 64697374 		.ascii	"distanceSensor\000"
 5825      616E6365 
 5825      53656E73 
 5825      6F7200
 5826              	.LASF13:
 5827 04eb 63686172 		.ascii	"char\000"
 5827      00
 5828              	.LASF61:
 5829 04f0 7075636B 		.ascii	"puckWestClearance\000"
 5829      57657374 
 5829      436C6561 
 5829      72616E63 
 5829      6500
 5830              	.LASF111:
 5831 0502 6D61696E 		.ascii	"main\000"
 5831      00
 5832              	.LASF29:
 5833 0507 7075636B 		.ascii	"puckRackColours\000"
 5833      5261636B 
 5833      436F6C6F 
 5833      75727300 
 5834              	.LASF63:
 5835 0517 504C414E 		.ascii	"PLAN_SCAN_VERTICAL\000"
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccRuSwul.s 			page 124


 5835      5F534341 
 5835      4E5F5645 
 5835      52544943 
 5835      414C00
 5836              	.LASF47:
 5837 052a 636F6C6F 		.ascii	"colour_sensing_algorithm\000"
 5837      75725F73 
 5837      656E7369 
 5837      6E675F61 
 5837      6C676F72 
 5838              	.LASF43:
 5839 0543 6D6F7669 		.ascii	"moving\000"
 5839      6E6700
 5840              	.LASF103:
 5841 054a 54696D65 		.ascii	"Timer_1_Start\000"
 5841      725F315F 
 5841      53746172 
 5841      7400
 5842              	.LASF55:
 5843 0558 70617468 		.ascii	"pathPastBlock\000"
 5843      50617374 
 5843      426C6F63 
 5843      6B00
 5844              	.LASF3:
 5845 0566 73686F72 		.ascii	"short unsigned int\000"
 5845      7420756E 
 5845      7369676E 
 5845      65642069 
 5845      6E7400
 5846              	.LASF89:
 5847 0579 49444143 		.ascii	"IDAC8_1_SetValue\000"
 5847      385F315F 
 5847      53657456 
 5847      616C7565 
 5847      00
 5848              	.LASF109:
 5849 058a 6D61696E 		.ascii	"main.c\000"
 5849      2E6300
 5850              	.LASF16:
 5851 0591 53746172 		.ascii	"StartIH\000"
 5851      74494800 
 5852              	.LASF5:
 5853 0599 6C6F6E67 		.ascii	"long unsigned int\000"
 5853      20756E73 
 5853      69676E65 
 5853      6420696E 
 5853      7400
 5854              	.LASF106:
 5855 05ab 53746172 		.ascii	"Start_StartEx\000"
 5855      745F5374 
 5855      61727445 
 5855      7800
 5856              	.LASF75:
 5857 05b9 6D6F7665 		.ascii	"moveDynamic\000"
 5857      44796E61 
 5857      6D696300 
 5858              	.LASF69:
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccRuSwul.s 			page 125


 5859 05c5 55415254 		.ascii	"UART_1_PutString\000"
 5859      5F315F50 
 5859      75745374 
 5859      72696E67 
 5859      00
 5860              	.LASF45:
 5861 05d6 7075636B 		.ascii	"puckConstructionPlan\000"
 5861      436F6E73 
 5861      74727563 
 5861      74696F6E 
 5861      506C616E 
 5862              	.LASF96:
 5863 05eb 47726970 		.ascii	"Gripper_Servo_PWM_Sleep\000"
 5863      7065725F 
 5863      53657276 
 5863      6F5F5057 
 5863      4D5F536C 
 5864              	.LASF24:
 5865 0603 68656C64 		.ascii	"heldColour\000"
 5865      436F6C6F 
 5865      757200
 5866              	.LASF20:
 5867 060e 626C6F63 		.ascii	"block_check\000"
 5867      6B5F6368 
 5867      65636B00 
 5868              	.LASF23:
 5869 061a 7075636B 		.ascii	"puck_scan\000"
 5869      5F736361 
 5869      6E00
 5870              	.LASF9:
 5871 0624 5F5F696E 		.ascii	"__int32_t\000"
 5871      7433325F 
 5871      7400
 5872              	.LASF59:
 5873 062e 626C6F63 		.ascii	"blockWestClearance\000"
 5873      6B576573 
 5873      74436C65 
 5873      6172616E 
 5873      636500
 5874              	.LASF110:
 5875 0641 433A5C55 		.ascii	"C:\\Users\\Misha\\Documents\\PSoC Creator\\ECE3091_"
 5875      73657273 
 5875      5C4D6973 
 5875      68615C44 
 5875      6F63756D 
 5876 066f 47726F75 		.ascii	"Group17\\Group17RobotReal\\Group17Robot.cydsn\000"
 5876      7031375C 
 5876      47726F75 
 5876      70313752 
 5876      6F626F74 
 5877              	.LASF107:
 5878 069b 73616665 		.ascii	"safetyDistanceCheck\000"
 5878      74794469 
 5878      7374616E 
 5878      63654368 
 5878      65636B00 
 5879              	.LASF60:
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccRuSwul.s 			page 126


 5880 06af 7075636B 		.ascii	"puckEastClearance\000"
 5880      45617374 
 5880      436C6561 
 5880      72616E63 
 5880      6500
 5881              	.LASF71:
 5882 06c1 6D6F7665 		.ascii	"moveUntil\000"
 5882      556E7469 
 5882      6C00
 5883              	.LASF15:
 5884 06cb 73697A65 		.ascii	"sizetype\000"
 5884      74797065 
 5884      00
 5885              	.LASF39:
 5886 06d4 6F757470 		.ascii	"output\000"
 5886      757400
 5887              	.LASF12:
 5888 06db 646F7562 		.ascii	"double\000"
 5888      6C6500
 5889              	.LASF64:
 5890 06e2 64697374 		.ascii	"distance_returned_global\000"
 5890      616E6365 
 5890      5F726574 
 5890      75726E65 
 5890      645F676C 
 5891              	.LASF25:
 5892 06fb 49544D5F 		.ascii	"ITM_RxBuffer\000"
 5892      52784275 
 5892      66666572 
 5892      00
 5893              	.LASF108:
 5894 0708 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 5894      43313120 
 5894      352E342E 
 5894      31203230 
 5894      31363036 
 5895 073b 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 5895      20726576 
 5895      6973696F 
 5895      6E203233 
 5895      37373135 
 5896 076e 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 5896      66756E63 
 5896      74696F6E 
 5896      2D736563 
 5896      74696F6E 
 5897              	.LASF18:
 5898 0796 7075636B 		.ascii	"puckConstructionPlanIndex\000"
 5898      436F6E73 
 5898      74727563 
 5898      74696F6E 
 5898      506C616E 
 5899              	.LASF66:
 5900 07b0 43794465 		.ascii	"CyDelay\000"
 5900      6C617900 
 5901              	.LASF54:
 5902 07b8 70617468 		.ascii	"pathToPucks\000"
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccRuSwul.s 			page 127


 5902      546F5075 
 5902      636B7300 
 5903              	.LASF74:
 5904 07c4 6D6F7665 		.ascii	"moveSwivel\000"
 5904      53776976 
 5904      656C00
 5905              	.LASF38:
 5906 07cf 696E6974 		.ascii	"initialisation\000"
 5906      69616C69 
 5906      73617469 
 5906      6F6E00
 5907              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
