ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccNOUgCR.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.Encoder_Counts_1_IH,"ax",%progbits
  20              		.align	2
  21              		.global	Encoder_Counts_1_IH
  22              		.thumb
  23              		.thumb_func
  24              		.type	Encoder_Counts_1_IH, %function
  25              	Encoder_Counts_1_IH:
  26              	.LFB64:
  27              		.file 1 "main.c"
   1:main.c        **** 
   2:main.c        **** /* ========================================
   3:main.c        ****  *
   4:main.c        ****  * Copyright YOUR COMPANY, THE YEAR
   5:main.c        ****  * All Rights Reserved
   6:main.c        ****  * UNPUBLISHED, LICENSED SOFTWARE.
   7:main.c        ****  *
   8:main.c        ****  * CONFIDENTIAL AND PROPRIETARY INFORMATION
   9:main.c        ****  * WHICH IS THE PROPERTY OF your company.
  10:main.c        ****  *
  11:main.c        ****  * ========================================
  12:main.c        **** */
  13:main.c        **** 
  14:main.c        **** #include "project.h"
  15:main.c        **** 
  16:main.c        **** // * C LIBRARIES * // 
  17:main.c        **** #include <stdio.h>
  18:main.c        **** #include <math.h>
  19:main.c        **** 
  20:main.c        **** // * OUR LIBRARIES * //
  21:main.c        **** #include "main.h"
  22:main.c        **** #include "colour.h"
  23:main.c        **** #include "ultrasonic.h" 
  24:main.c        **** #include "dcmotor.h"
  25:main.c        **** #include "servo.h"
  26:main.c        **** 
  27:main.c        **** 
  28:main.c        **** 
  29:main.c        **** //global variable currentPosition and currentOrientation (in main). Declare as externs in 
  30:main.c        **** //dcmotor, I guess
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccNOUgCR.s 			page 2


  31:main.c        **** float currentPosition[2] = {0,0};
  32:main.c        **** float desiredPosition[2];
  33:main.c        **** int currentOrientation = 90; //in degrees (convert to radians when needed)- 90 assuming we start fa
  34:main.c        **** int desiredOrientation;
  35:main.c        **** int M1_FD; //The four values shown here will be the duty cycles of the motors
  36:main.c        **** int M1_BD; //There are times when parts of the code (such as the driftCorrect function)
  37:main.c        **** int M2_FD; //need to know about the duty cycles. So we make the duty cycles a globally 
  38:main.c        **** int M2_BD; //known variable
  39:main.c        **** short int motor1Enable = 0; //These two will be on if the motors are on
  40:main.c        **** short int motor2Enable = 0;
  41:main.c        **** int M1_FD; //The four values shown here will be the duty cycles of the motors
  42:main.c        **** int M1_BD; //There are times when parts of the code (such as the driftCorrect function)
  43:main.c        **** int M2_FD; //need to know about the duty cycles. So we make the duty cycles a globally 
  44:main.c        **** int M2_BD; //known variable
  45:main.c        **** int motor1EncoderCounts; //These two variables will allow the entire program to keep 
  46:main.c        **** int motor2EncoderCounts; //track of how many turns the motors have spun 
  47:main.c        **** short int moveNow = 1; //This is a flag that lets the main program tell the moving functions
  48:main.c        **** //whether we want the robot to be moving or not. For example, when we need to operate servos
  49:main.c        **** //the main program would set moveNow to FALSE.
  50:main.c        **** 
  51:main.c        **** //The four flags below let the rest of the program know if the robot is trying to drive 
  52:main.c        **** //forward or back, turn left or right. At the start of every motion, turn these flags on
  53:main.c        **** //at the end turn them off.
  54:main.c        **** short int drivingForwardFlag = 0;
  55:main.c        **** short int drivingBackwardFlag = 0;
  56:main.c        **** short int turningLeftFlag = 0;
  57:main.c        **** short int turningRightFlag = 0;
  58:main.c        **** 
  59:main.c        **** //These flags will be used by the main program to allow the robot to move in certain directions
  60:main.c        **** short int moveLeftAllowed;
  61:main.c        **** short int moveRightAllowed;
  62:main.c        **** short int moveForwardAllowed;
  63:main.c        **** short int moveBackwardAllowed;
  64:main.c        **** 
  65:main.c        **** //Interrupt service routines for dcmotor function
  66:main.c        **** CY_ISR(Encoder_Counts_1_IH){
  28              		.loc 1 66 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 08B5     		push	{r3, lr}
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 3, -8
  35              		.cfi_offset 14, -4
  67:main.c        ****     stopMotor1AndUpdate();
  36              		.loc 1 67 0
  37 0002 FFF7FEFF 		bl	stopMotor1AndUpdate
  38              	.LVL0:
  39 0006 08BD     		pop	{r3, pc}
  40              		.cfi_endproc
  41              	.LFE64:
  42              		.size	Encoder_Counts_1_IH, .-Encoder_Counts_1_IH
  43              		.section	.text.Encoder_Counts_2_IH,"ax",%progbits
  44              		.align	2
  45              		.global	Encoder_Counts_2_IH
  46              		.thumb
  47              		.thumb_func
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccNOUgCR.s 			page 3


  48              		.type	Encoder_Counts_2_IH, %function
  49              	Encoder_Counts_2_IH:
  50              	.LFB65:
  68:main.c        **** }
  69:main.c        **** 
  70:main.c        **** CY_ISR(Encoder_Counts_2_IH){
  51              		.loc 1 70 0
  52              		.cfi_startproc
  53              		@ args = 0, pretend = 0, frame = 0
  54              		@ frame_needed = 0, uses_anonymous_args = 0
  55 0000 08B5     		push	{r3, lr}
  56              		.cfi_def_cfa_offset 8
  57              		.cfi_offset 3, -8
  58              		.cfi_offset 14, -4
  71:main.c        ****     stopMotor2AndUpdate();
  59              		.loc 1 71 0
  60 0002 FFF7FEFF 		bl	stopMotor2AndUpdate
  61              	.LVL1:
  62 0006 08BD     		pop	{r3, pc}
  63              		.cfi_endproc
  64              	.LFE65:
  65              		.size	Encoder_Counts_2_IH, .-Encoder_Counts_2_IH
  66              		.section	.text.Drift_Check_IH,"ax",%progbits
  67              		.align	2
  68              		.global	Drift_Check_IH
  69              		.thumb
  70              		.thumb_func
  71              		.type	Drift_Check_IH, %function
  72              	Drift_Check_IH:
  73              	.LFB66:
  72:main.c        **** }
  73:main.c        **** 
  74:main.c        **** CY_ISR(Drift_Check_IH){    
  74              		.loc 1 74 0
  75              		.cfi_startproc
  76              		@ args = 0, pretend = 0, frame = 0
  77              		@ frame_needed = 0, uses_anonymous_args = 0
  78 0000 08B5     		push	{r3, lr}
  79              		.cfi_def_cfa_offset 8
  80              		.cfi_offset 3, -8
  81              		.cfi_offset 14, -4
  75:main.c        ****     Drift_Check_Timer_ReadStatusRegister(); //Clears the interrupt
  82              		.loc 1 75 0
  83 0002 FFF7FEFF 		bl	Drift_Check_Timer_ReadStatusRegister
  84              	.LVL2:
  76:main.c        ****     Drift_Check_Timer_Stop(); //Stops the timer
  85              		.loc 1 76 0
  86 0006 FFF7FEFF 		bl	Drift_Check_Timer_Stop
  87              	.LVL3:
  77:main.c        ****     motor1EncoderCounts = Motor_1_Encoder_Counts_ReadCounter();
  88              		.loc 1 77 0
  89 000a FFF7FEFF 		bl	Motor_1_Encoder_Counts_ReadCounter
  90              	.LVL4:
  91 000e 044B     		ldr	r3, .L7
  92 0010 1860     		str	r0, [r3]
  78:main.c        ****     motor2EncoderCounts = Motor_2_Encoder_Counts_ReadCounter();
  93              		.loc 1 78 0
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccNOUgCR.s 			page 4


  94 0012 FFF7FEFF 		bl	Motor_2_Encoder_Counts_ReadCounter
  95              	.LVL5:
  96 0016 034B     		ldr	r3, .L7+4
  97 0018 1860     		str	r0, [r3]
  79:main.c        ****     driftCorrect(); //Does checking
  98              		.loc 1 79 0
  99 001a FFF7FEFF 		bl	driftCorrect
 100              	.LVL6:
 101 001e 08BD     		pop	{r3, pc}
 102              	.L8:
 103              		.align	2
 104              	.L7:
 105 0020 00000000 		.word	motor1EncoderCounts
 106 0024 00000000 		.word	motor2EncoderCounts
 107              		.cfi_endproc
 108              	.LFE66:
 109              		.size	Drift_Check_IH, .-Drift_Check_IH
 110              		.section	.text.TIH,"ax",%progbits
 111              		.align	2
 112              		.global	TIH
 113              		.thumb
 114              		.thumb_func
 115              		.type	TIH, %function
 116              	TIH:
 117              	.LFB67:
  80:main.c        **** }
  81:main.c        **** 
  82:main.c        **** // * VARIABLES * //
  83:main.c        **** int idac_value = 0;
  84:main.c        **** 
  85:main.c        **** int colour_flag = 1;
  86:main.c        **** int ColourSensingAlgorithm = 0;      // Determines which colour sensing algorithm to use:
  87:main.c        ****                                                 // 0: Wall algorithm
  88:main.c        ****                                                 // 1: Claw algorithm
  89:main.c        ****                                                 // 2: old algorithm
  90:main.c        **** 
  91:main.c        **** 
  92:main.c        **** 
  93:main.c        **** extern float ultrasonic_distances[5];
  94:main.c        **** int beginNavigation = 0;
  95:main.c        **** 
  96:main.c        **** int state = STATE_SCAN_PLAN;
  97:main.c        **** 
  98:main.c        **** int running = 1;
  99:main.c        **** 
 100:main.c        **** int sweeping = 0;
 101:main.c        **** 
 102:main.c        **** int pathToPucks;
 103:main.c        **** int pathPastBlock;
 104:main.c        **** 
 105:main.c        **** int moving = 0; // Temp to stop while loop from repeated runs of scanning plan code
 106:main.c        **** 
 107:main.c        **** const int PLAN_SCAN_VERTICAL = 10; // Set to ultrasonic distance at the home base 
 108:main.c        **** 
 109:main.c        **** float block_edge_location[4] = {0,0,0,0}; // N E S W
 110:main.c        **** 
 111:main.c        **** int current_stage = 1;      // There are 3 stages, we start at 1
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccNOUgCR.s 			page 5


 112:main.c        **** 
 113:main.c        **** // Puck Construction Scanning
 114:main.c        **** int puckRackColours[5] = {0,0,0,0,0}; // 5 slots in puck rack.
 115:main.c        **** int currentPuckRackScanningIndex = 0;
 116:main.c        **** int puckRackOffsetsFromWest[5] = {PUCK_RACK_0_WEST_DISTANCE,
 117:main.c        ****                                 PUCK_RACK_1_WEST_DISTANCE,
 118:main.c        ****                                 PUCK_RACK_2_WEST_DISTANCE,
 119:main.c        ****                                 PUCK_RACK_3_WEST_DISTANCE,
 120:main.c        ****                                 PUCK_RACK_4_WEST_DISTANCE };
 121:main.c        **** 
 122:main.c        **** 
 123:main.c        **** // * INTERRUPT HANDLING * // 
 124:main.c        **** CY_ISR(TIH)                             // Ultrasonic ISR Definition
 125:main.c        **** {
 118              		.loc 1 125 0
 119              		.cfi_startproc
 120              		@ args = 0, pretend = 0, frame = 0
 121              		@ frame_needed = 0, uses_anonymous_args = 0
 122 0000 08B5     		push	{r3, lr}
 123              		.cfi_def_cfa_offset 8
 124              		.cfi_offset 3, -8
 125              		.cfi_offset 14, -4
 126:main.c        ****     ultrasonicInterruptHandler();
 126              		.loc 1 126 0
 127 0002 FFF7FEFF 		bl	ultrasonicInterruptHandler
 128              	.LVL7:
 129 0006 08BD     		pop	{r3, pc}
 130              		.cfi_endproc
 131              	.LFE67:
 132              		.size	TIH, .-TIH
 133              		.section	.text.StartIH,"ax",%progbits
 134              		.align	2
 135              		.global	StartIH
 136              		.thumb
 137              		.thumb_func
 138              		.type	StartIH, %function
 139              	StartIH:
 140              	.LFB68:
 127:main.c        **** }
 128:main.c        **** 
 129:main.c        **** CY_ISR(StartIH)                             // Ultrasonic ISR Definition
 130:main.c        **** {
 141              		.loc 1 130 0
 142              		.cfi_startproc
 143              		@ args = 0, pretend = 0, frame = 0
 144              		@ frame_needed = 0, uses_anonymous_args = 0
 145 0000 08B5     		push	{r3, lr}
 146              		.cfi_def_cfa_offset 8
 147              		.cfi_offset 3, -8
 148              		.cfi_offset 14, -4
 131:main.c        ****     CyDelay(100);
 149              		.loc 1 131 0
 150 0002 6420     		movs	r0, #100
 151 0004 FFF7FEFF 		bl	CyDelay
 152              	.LVL8:
 132:main.c        ****     
 133:main.c        ****     beginNavigation = 1;
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccNOUgCR.s 			page 6


 153              		.loc 1 133 0
 154 0008 0122     		movs	r2, #1
 155 000a 034B     		ldr	r3, .L13
 156 000c 1A60     		str	r2, [r3]
 134:main.c        ****     colour_flag = 0; 
 157              		.loc 1 134 0
 158 000e 0022     		movs	r2, #0
 159 0010 024B     		ldr	r3, .L13+4
 160 0012 1A60     		str	r2, [r3]
 161 0014 08BD     		pop	{r3, pc}
 162              	.L14:
 163 0016 00BF     		.align	2
 164              	.L13:
 165 0018 00000000 		.word	.LANCHOR0
 166 001c 00000000 		.word	.LANCHOR1
 167              		.cfi_endproc
 168              	.LFE68:
 169              		.size	StartIH, .-StartIH
 170              		.section	.text.main,"ax",%progbits
 171              		.align	2
 172              		.global	main
 173              		.thumb
 174              		.thumb_func
 175              		.type	main, %function
 176              	main:
 177              	.LFB69:
 135:main.c        **** }
 136:main.c        ****                     
 137:main.c        **** int main(void)
 138:main.c        **** {
 178              		.loc 1 138 0
 179              		.cfi_startproc
 180              		@ args = 0, pretend = 0, frame = 0
 181              		@ frame_needed = 0, uses_anonymous_args = 0
 182 0000 38B5     		push	{r3, r4, r5, lr}
 183              		.cfi_def_cfa_offset 16
 184              		.cfi_offset 3, -16
 185              		.cfi_offset 4, -12
 186              		.cfi_offset 5, -8
 187              		.cfi_offset 14, -4
 139:main.c        ****     CyGlobalIntEnable; /* Enable global interrupts. */
 188              		.loc 1 139 0
 189              		.syntax unified
 190              	@ 139 "main.c" 1
 191 0002 62B6     		CPSIE   i
 192              	@ 0 "" 2
 140:main.c        **** 
 141:main.c        ****     /* Place your initialization/startup code here (e.g. MyInst_Start()) */
 142:main.c        ****     TIA_1_Start();
 193              		.loc 1 142 0
 194              		.thumb
 195              		.syntax unified
 196 0004 FFF7FEFF 		bl	TIA_1_Start
 197              	.LVL9:
 143:main.c        ****     UART_1_Start();
 198              		.loc 1 143 0
 199 0008 FFF7FEFF 		bl	UART_1_Start
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccNOUgCR.s 			page 7


 200              	.LVL10:
 144:main.c        ****     UART_1_PutString("UART commencing... \n");
 201              		.loc 1 144 0
 202 000c 4848     		ldr	r0, .L24
 203 000e FFF7FEFF 		bl	UART_1_PutString
 204              	.LVL11:
 145:main.c        ****     ADC_Start();
 205              		.loc 1 145 0
 206 0012 FFF7FEFF 		bl	ADC_Start
 207              	.LVL12:
 146:main.c        ****     IDAC8_1_Start();
 208              		.loc 1 146 0
 209 0016 FFF7FEFF 		bl	IDAC8_1_Start
 210              	.LVL13:
 147:main.c        ****     
 148:main.c        ****     // IDAC initialisation: 
 149:main.c        ****     IDAC8_1_SetRange(IDAC8_1_RANGE_32uA);       // Sets the range between 0 and 32uA
 211              		.loc 1 149 0
 212 001a 0020     		movs	r0, #0
 213 001c FFF7FEFF 		bl	IDAC8_1_SetRange
 214              	.LVL14:
 150:main.c        ****     IDAC8_1_SetValue(idac_value);               // set a value between 0 and 255
 215              		.loc 1 150 0
 216 0020 444D     		ldr	r5, .L24+4
 217 0022 2879     		ldrb	r0, [r5, #4]	@ zero_extendqisi2
 218 0024 FFF7FEFF 		bl	IDAC8_1_SetValue
 219              	.LVL15:
 151:main.c        ****     
 152:main.c        ****      // Colour Sensing Initialisation & Debugging:
 153:main.c        ****     int colour_calibration = TRUE;                    // Do we want to calibrate the sensor? 
 154:main.c        ****     extern char output[32];   
 155:main.c        ****       
 156:main.c        ****     // ServoDebugging
 157:main.c        ****     int servo_testing = FALSE;
 158:main.c        ****     
 159:main.c        ****     
 160:main.c        ****     
 161:main.c        ****     // Ultrasonic Initialisation: 
 162:main.c        ****     
 163:main.c        ****         
 164:main.c        ****     // Timer and ISR instantiation
 165:main.c        ****     Timer_1_Start();
 220              		.loc 1 165 0
 221 0028 FFF7FEFF 		bl	Timer_1_Start
 222              	.LVL16:
 166:main.c        ****     Timer_1_ReadStatusRegister();
 223              		.loc 1 166 0
 224 002c FFF7FEFF 		bl	Timer_1_ReadStatusRegister
 225              	.LVL17:
 167:main.c        ****     Sonic_StartEx(TIH);
 226              		.loc 1 167 0
 227 0030 4148     		ldr	r0, .L24+8
 228 0032 FFF7FEFF 		bl	Sonic_StartEx
 229              	.LVL18:
 168:main.c        ****     Start_StartEx(StartIH);
 230              		.loc 1 168 0
 231 0036 4148     		ldr	r0, .L24+12
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccNOUgCR.s 			page 8


 232 0038 FFF7FEFF 		bl	Start_StartEx
 233              	.LVL19:
 169:main.c        ****     beginNavigation = 0;
 234              		.loc 1 169 0
 235 003c 0024     		movs	r4, #0
 236 003e 2C60     		str	r4, [r5]
 237              	.LVL20:
 170:main.c        ****     int tmp = 0;
 171:main.c        ****     
 172:main.c        ****     //Initialising DC motors
 173:main.c        ****     Motor_1_driver_Start();
 238              		.loc 1 173 0
 239 0040 FFF7FEFF 		bl	Motor_1_driver_Start
 240              	.LVL21:
 174:main.c        ****     Motor_2_driver_Start();
 241              		.loc 1 174 0
 242 0044 FFF7FEFF 		bl	Motor_2_driver_Start
 243              	.LVL22:
 175:main.c        ****     motorDutyCycleUpdate(0,0,0,0);//Have the motors stand still
 244              		.loc 1 175 0
 245 0048 0020     		movs	r0, #0
 246 004a 0346     		mov	r3, r0
 247 004c 0246     		mov	r2, r0
 248 004e 0146     		mov	r1, r0
 249 0050 FFF7FEFF 		bl	motorDutyCycleUpdate
 250              	.LVL23:
 176:main.c        ****     
 177:main.c        ****     //Initialising counters
 178:main.c        ****     Motor_1_Encoder_Counts_Start();
 251              		.loc 1 178 0
 252 0054 FFF7FEFF 		bl	Motor_1_Encoder_Counts_Start
 253              	.LVL24:
 179:main.c        ****     Motor_2_Encoder_Counts_Start();
 254              		.loc 1 179 0
 255 0058 FFF7FEFF 		bl	Motor_2_Encoder_Counts_Start
 256              	.LVL25:
 180:main.c        ****     
 181:main.c        ****     //Initialising timers
 182:main.c        ****     Drift_Check_Timer_Start();
 257              		.loc 1 182 0
 258 005c FFF7FEFF 		bl	Drift_Check_Timer_Start
 259              	.LVL26:
 183:main.c        ****     
 184:main.c        ****     //Starts and enables the interrupts for the motor encoder counts
 185:main.c        ****     Encoder_Counts_1_Interrupt_StartEx(Encoder_Counts_1_IH); 
 260              		.loc 1 185 0
 261 0060 3748     		ldr	r0, .L24+16
 262 0062 FFF7FEFF 		bl	Encoder_Counts_1_Interrupt_StartEx
 263              	.LVL27:
 186:main.c        ****     Encoder_Counts_2_Interrupt_StartEx(Encoder_Counts_2_IH);
 264              		.loc 1 186 0
 265 0066 3748     		ldr	r0, .L24+20
 266 0068 FFF7FEFF 		bl	Encoder_Counts_2_Interrupt_StartEx
 267              	.LVL28:
 187:main.c        ****     Drift_Check_Interrupt_StartEx(Drift_Check_IH);		
 268              		.loc 1 187 0
 269 006c 3648     		ldr	r0, .L24+24
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccNOUgCR.s 			page 9


 270 006e FFF7FEFF 		bl	Drift_Check_Interrupt_StartEx
 271              	.LVL29:
 188:main.c        ****     
 189:main.c        ****     //Servos for the arm initialisation
 190:main.c        ****     
 191:main.c        ****    
 192:main.c        ****     Rack_Servo_PWM_Start();
 272              		.loc 1 192 0
 273 0072 FFF7FEFF 		bl	Rack_Servo_PWM_Start
 274              	.LVL30:
 193:main.c        ****     Rack_Servo_PWM_WriteCompare(1000); //This is the up arm pos
 275              		.loc 1 193 0
 276 0076 4FF47A70 		mov	r0, #1000
 277 007a FFF7FEFF 		bl	Rack_Servo_PWM_WriteCompare
 278              	.LVL31:
 194:main.c        ****     CyDelay(500);
 279              		.loc 1 194 0
 280 007e 4FF4FA70 		mov	r0, #500
 281 0082 FFF7FEFF 		bl	CyDelay
 282              	.LVL32:
 195:main.c        ****     Rack_Servo_PWM_Sleep();
 283              		.loc 1 195 0
 284 0086 FFF7FEFF 		bl	Rack_Servo_PWM_Sleep
 285              	.LVL33:
 196:main.c        ****     
 197:main.c        ****     Gripper_Servo_PWM_Start();
 286              		.loc 1 197 0
 287 008a FFF7FEFF 		bl	Gripper_Servo_PWM_Start
 288              	.LVL34:
 198:main.c        ****     Gripper_Servo_PWM_WriteCompare(1250); //This is the closed gripper pos
 289              		.loc 1 198 0
 290 008e 40F2E240 		movw	r0, #1250
 291 0092 FFF7FEFF 		bl	Gripper_Servo_PWM_WriteCompare
 292              	.LVL35:
 199:main.c        ****     CyDelay(500);
 293              		.loc 1 199 0
 294 0096 4FF4FA70 		mov	r0, #500
 295 009a FFF7FEFF 		bl	CyDelay
 296              	.LVL36:
 200:main.c        ****     Gripper_Servo_PWM_Sleep();
 297              		.loc 1 200 0
 298 009e FFF7FEFF 		bl	Gripper_Servo_PWM_Sleep
 299              	.LVL37:
 201:main.c        **** 
 202:main.c        ****     // Main Loop for States
 203:main.c        ****         
 204:main.c        ****     for(;;)
 205:main.c        ****     {   
 206:main.c        ****         // Start button is pressed so quit sensing
 207:main.c        **** 
 208:main.c        ****         /*
 209:main.c        ****         while (beginNavigation == 0) {
 210:main.c        ****             distanceCheck();           
 211:main.c        ****             UART_1_PutString("\n");
 212:main.c        ****             CyDelay(1000); // Check distance once a second.
 213:main.c        ****                 
 214:main.c        ****         }
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccNOUgCR.s 			page 10


 215:main.c        ****         */
 216:main.c        ****         
 217:main.c        ****         
 218:main.c        ****             control_photodiode_Write(1);            // controls which photodiode is being used: 
 300              		.loc 1 218 0
 301 00a2 0120     		movs	r0, #1
 302 00a4 FFF7FEFF 		bl	control_photodiode_Write
 303              	.LVL38:
 219:main.c        ****                                                             // 0: wall
 220:main.c        ****                                                             // 1: claw
 221:main.c        ****             control_led_Write(1);   CyDelay(1000);  // Ensures all the RGBs are working
 304              		.loc 1 221 0
 305 00a8 0120     		movs	r0, #1
 306 00aa FFF7FEFF 		bl	control_led_Write
 307              	.LVL39:
 308 00ae 4FF47A70 		mov	r0, #1000
 309 00b2 FFF7FEFF 		bl	CyDelay
 310              	.LVL40:
 222:main.c        ****             control_led_Write(2);   CyDelay(1000);
 311              		.loc 1 222 0
 312 00b6 0220     		movs	r0, #2
 313 00b8 FFF7FEFF 		bl	control_led_Write
 314              	.LVL41:
 315 00bc 4FF47A70 		mov	r0, #1000
 316 00c0 FFF7FEFF 		bl	CyDelay
 317              	.LVL42:
 223:main.c        ****             control_led_Write(3);   CyDelay(1000);
 318              		.loc 1 223 0
 319 00c4 0320     		movs	r0, #3
 320 00c6 FFF7FEFF 		bl	control_led_Write
 321              	.LVL43:
 322 00ca 4FF47A70 		mov	r0, #1000
 323 00ce FFF7FEFF 		bl	CyDelay
 324              	.LVL44:
 224:main.c        ****             control_led_Write(0);   CyDelay(500);
 325              		.loc 1 224 0
 326 00d2 2046     		mov	r0, r4
 327 00d4 FFF7FEFF 		bl	control_led_Write
 328              	.LVL45:
 329 00d8 4FF4FA70 		mov	r0, #500
 330 00dc FFF7FEFF 		bl	CyDelay
 331              	.LVL46:
 225:main.c        ****             ColourSensingInitialise();                  // Initialises the colour sensor
 332              		.loc 1 225 0
 333 00e0 FFF7FEFF 		bl	ColourSensingInitialise
 334              	.LVL47:
 226:main.c        ****         
 227:main.c        **** 
 228:main.c        ****         if (state == STATE_SCAN_PLAN) {              // colour sensing, while switch has not been p
 335              		.loc 1 228 0
 336 00e4 194B     		ldr	r3, .L24+28
 337 00e6 5B68     		ldr	r3, [r3, #4]
 338 00e8 012B     		cmp	r3, #1
 339 00ea 1DD1     		bne	.L17
 340 00ec 2346     		mov	r3, r4
 341              	.L16:
 342              	.LVL48:
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccNOUgCR.s 			page 11


 343              	.LBB2:
 229:main.c        ****             
 230:main.c        ****             // Colour Calibration: 
 231:main.c        ****             if (colour_calibration)
 232:main.c        ****             {
 233:main.c        ****                 int lock = FALSE;
 234:main.c        ****                 do 
 235:main.c        ****                     {   
 236:main.c        ****                         if (lock == FALSE) 
 344              		.loc 1 236 0
 345 00ee CBB9     		cbnz	r3, .L18
 237:main.c        ****                         {
 238:main.c        ****                             
 239:main.c        ****                             changeHeightToPuck(1);
 346              		.loc 1 239 0
 347 00f0 0120     		movs	r0, #1
 348 00f2 FFF7FEFF 		bl	changeHeightToPuck
 349              	.LVL49:
 240:main.c        **** 
 241:main.c        ****                             UART_1_PutString("Count \t BLANK \t RED \t GREEN \t BLUE \t \n");
 350              		.loc 1 241 0
 351 00f6 1648     		ldr	r0, .L24+32
 352 00f8 FFF7FEFF 		bl	UART_1_PutString
 353              	.LVL50:
 354              	.LBB3:
 242:main.c        ****                             for (int i = 0; i < 50; i++)
 355              		.loc 1 242 0
 356 00fc 0024     		movs	r4, #0
 357 00fe 0EE0     		b	.L19
 358              	.LVL51:
 359              	.L20:
 243:main.c        ****                             {
 244:main.c        ****                             sprintf(output, "%d \t", i);
 360              		.loc 1 244 0 discriminator 3
 361 0100 144D     		ldr	r5, .L24+36
 362 0102 2246     		mov	r2, r4
 363 0104 1449     		ldr	r1, .L24+40
 364 0106 2846     		mov	r0, r5
 365 0108 FFF7FEFF 		bl	sprintf
 366              	.LVL52:
 245:main.c        ****                             UART_1_PutString(output);
 367              		.loc 1 245 0 discriminator 3
 368 010c 2846     		mov	r0, r5
 369 010e FFF7FEFF 		bl	UART_1_PutString
 370              	.LVL53:
 246:main.c        ****                             ColourSensingCalibration(); 
 371              		.loc 1 246 0 discriminator 3
 372 0112 FFF7FEFF 		bl	ColourSensingCalibration
 373              	.LVL54:
 247:main.c        ****                             UART_1_PutString("\n");
 374              		.loc 1 247 0 discriminator 3
 375 0116 1148     		ldr	r0, .L24+44
 376 0118 FFF7FEFF 		bl	UART_1_PutString
 377              	.LVL55:
 242:main.c        ****                             {
 378              		.loc 1 242 0 discriminator 3
 379 011c 0134     		adds	r4, r4, #1
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccNOUgCR.s 			page 12


 380              	.LVL56:
 381              	.L19:
 242:main.c        ****                             {
 382              		.loc 1 242 0 is_stmt 0 discriminator 1
 383 011e 312C     		cmp	r4, #49
 384 0120 EEDD     		ble	.L20
 385              	.LBE3:
 248:main.c        ****                             }         
 249:main.c        ****                             lock = TRUE;    
 386              		.loc 1 249 0 is_stmt 1
 387 0122 0123     		movs	r3, #1
 388              	.LVL57:
 389              	.L18:
 250:main.c        ****                         }
 251:main.c        ****                 } while (lock == TRUE);    
 390              		.loc 1 251 0
 391 0124 002B     		cmp	r3, #0
 392 0126 E2D1     		bne	.L16
 393              	.LVL58:
 394              	.L17:
 395              	.LBE2:
 252:main.c        ****             }
 253:main.c        ****             
 254:main.c        ****             // Servo Testing: 
 255:main.c        ****             
 256:main.c        ****             if (servo_testing) 
 257:main.c        ****             {
 258:main.c        ****                 int lock = FALSE;
 259:main.c        ****                 do 
 260:main.c        ****                     {   
 261:main.c        ****                         if (lock == FALSE) 
 262:main.c        ****                         {
 263:main.c        ****                             UART_1_PutString("Servo Testing: ");
 264:main.c        ****                             
 265:main.c        ****                             armMoving();
 266:main.c        ****                             
 267:main.c        ****                             
 268:main.c        ****                             for(int i = 0; i < 4; i++)
 269:main.c        ****                             {
 270:main.c        ****                                 changeHeightToPuck(i);
 271:main.c        ****                                 CyDelay(1000);
 272:main.c        ****                             }
 273:main.c        **** 
 274:main.c        ****                             lock = TRUE;    
 275:main.c        ****                         }
 276:main.c        ****                 } while (lock == TRUE);    
 277:main.c        ****             }    
 278:main.c        ****                 
 279:main.c        ****                 
 280:main.c        ****             }
 281:main.c        ****             
 282:main.c        ****             
 283:main.c        ****             while(1)
 284:main.c        ****             {
 285:main.c        ****             ColourSensingDebug();
 396              		.loc 1 285 0 discriminator 1
 397 0128 FFF7FEFF 		bl	ColourSensingDebug
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccNOUgCR.s 			page 13


 398              	.LVL59:
 399 012c FCE7     		b	.L17
 400              	.L25:
 401 012e 00BF     		.align	2
 402              	.L24:
 403 0130 00000000 		.word	.LC0
 404 0134 00000000 		.word	.LANCHOR0
 405 0138 00000000 		.word	TIH
 406 013c 00000000 		.word	StartIH
 407 0140 00000000 		.word	Encoder_Counts_1_IH
 408 0144 00000000 		.word	Encoder_Counts_2_IH
 409 0148 00000000 		.word	Drift_Check_IH
 410 014c 00000000 		.word	.LANCHOR1
 411 0150 18000000 		.word	.LC1
 412 0154 00000000 		.word	output
 413 0158 40000000 		.word	.LC2
 414 015c 48000000 		.word	.LC3
 415              		.cfi_endproc
 416              	.LFE69:
 417              		.size	main, .-main
 418              		.section	.text.armMoving,"ax",%progbits
 419              		.align	2
 420              		.global	armMoving
 421              		.thumb
 422              		.thumb_func
 423              		.type	armMoving, %function
 424              	armMoving:
 425              	.LFB70:
 286:main.c        ****             }
 287:main.c        ****             
 288:main.c        ****             
 289:main.c        ****             
 290:main.c        ****             
 291:main.c        ****             
 292:main.c        ****             /*
 293:main.c        ****             if (!moving){
 294:main.c        ****                 moving = 1;
 295:main.c        ****             if (initialisation){moveBackwardIndefinitely(); initialisation = 0;}
 296:main.c        ****             else {moveForwardIndefinitely();}        
 297:main.c        ****            
 298:main.c        ****             
 299:main.c        ****             moveAndAngle(SCAN_INITIALISE_HORIZONTAL,PLAN_SCAN_VERTICAL,WEST_ANGLE); // Move beyond 
 300:main.c        ****             
 301:main.c        ****             for (currentPuckRackScanningIndex = 0; currentPuckRackScanningIndex <= 4; currentPuckRa
 302:main.c        ****                 moveAndAngle(puckRackOffsetsFromWest[currentPuckRackScanningIndex],PLAN_SCAN_VERTIC
 303:main.c        ****                 puckRackColours[currentPuckRackScanningIndex] = takeColourMeasurement();
 304:main.c        ****             }
 305:main.c        ****             */
 306:main.c        ****         }
 307:main.c        ****         
 308:main.c        ****         
 309:main.c        **** 
 310:main.c        ****     	if (state == STATE_LOCATE_BLOCK_AND_PUCKS){
 311:main.c        ****             
 312:main.c        ****             // Finding where the boundaries of the block are
 313:main.c        ****     		// Sweep across WEST to EAST until discrepancy
 314:main.c        ****             // But first sense the construction plan and then drive to wall and turn around to prep
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccNOUgCR.s 			page 14


 315:main.c        ****             
 316:main.c        ****             /*
 317:main.c        ****     		moveForwardIndefinitely();
 318:main.c        ****     		turnRight(180); // Now facing EAST wall
 319:main.c        ****     		moveForwardIndefinitely(); // Do this until we get to EAST wall
 320:main.c        ****             */
 321:main.c        ****             
 322:main.c        ****             moveAndAngle(20,20,EAST_ANGLE); // Move to a position near construction base in an EAST
 323:main.c        ****             
 324:main.c        ****             // Will now know the boundaries of the block.
 325:main.c        ****             // Figure out direction we want to travel
 326:main.c        ****             
 327:main.c        ****             if (block_edge_location[WEST] >= WIDTH_SENSOR_TO_SENSOR + SAFETY_MARGIN){
 328:main.c        ****                 pathPastBlock = WEST;
 329:main.c        ****             }
 330:main.c        ****             else {pathPastBlock = EAST;}
 331:main.c        ****             
 332:main.c        ****             // Calculate puck position here too, then make a decision as to whether
 333:main.c        ****             // pathToPucks = ... ;
 334:main.c        **** 
 335:main.c        ****             state = STATE_GO_TO_PUCKS;
 336:main.c        **** 	}
 337:main.c        ****         
 338:main.c        ****         
 339:main.c        **** 
 340:main.c        ****         if (state == STATE_GO_TO_PUCKS){
 341:main.c        ****             if (pathPastBlock == WEST){
 342:main.c        ****                 if (pathToPucks != WEST) {
 343:main.c        ****                     moveAndAngle(SAFETY_MARGIN / 2 + WIDTH_SENSOR_TO_SENSOR / 2, ARENA_LENGTH - FRO
 344:main.c        ****                 }
 345:main.c        ****                 else {moveAndAngle(SAFETY_MARGIN / 2 + WIDTH_SENSOR_TO_SENSOR / 2, ARENA_LENGTH - F
 346:main.c        ****             }
 347:main.c        ****             else {
 348:main.c        ****                 if (pathToPucks != EAST) {
 349:main.c        ****                     moveAndAngle(ARENA_WIDTH - SAFETY_MARGIN / 2 - WIDTH_SENSOR_TO_SENSOR / 2, AREN
 350:main.c        ****                 }
 351:main.c        ****                 else {moveAndAngle(ARENA_WIDTH - SAFETY_MARGIN / 2 - WIDTH_SENSOR_TO_SENSOR / 2, AR
 352:main.c        ****             }
 353:main.c        ****             
 354:main.c        ****             // We are now in front of the pucks
 355:main.c        ****             state = STATE_FIND_REQUIRED_PUCK;
 356:main.c        ****         }
 357:main.c        ****         
 358:main.c        ****         
 359:main.c        ****         
 360:main.c        ****         if (state == STATE_FIND_REQUIRED_PUCK){
 361:main.c        ****                
 362:main.c        ****         }
 363:main.c        ****         
 364:main.c        ****         if (state == STATE_DEPOSIT_PUCK){
 365:main.c        ****             moveAndAngle(CONSTRUCTION_MIDPOINT,CONSTRUCTION_DISTANCE_FROM_WALL, SOUTH_ANGLE); // Ta
 366:main.c        ****             
 367:main.c        ****             lowerAndOpen(current_stage);
 368:main.c        ****             changeHeightToPuck(current_stage + 1); // Lift claw above stack to avoid hitting the st
 369:main.c        ****             
 370:main.c        ****             current_stage++;
 371:main.c        ****             
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccNOUgCR.s 			page 15


 372:main.c        ****             if (current_stage == 3){state = STATE_PARK_HOME;}        // Returns to home 
 373:main.c        ****             
 374:main.c        ****         }
 375:main.c        ****         
 376:main.c        ****         if (state == STATE_PARK_HOME){
 377:main.c        ****             moveAndAngle(HOME_MIDPOINT, HOME_PARKING_DISTANCE, NORTH_ANGLE); // Should reverse into
 378:main.c        ****             
 379:main.c        ****             // Run code to stop robot entirely.
 380:main.c        ****         }
 381:main.c        ****         
 382:main.c        ****         
 383:main.c        **** }
 384:main.c        **** 
 385:main.c        **** void armMoving(void){
 426              		.loc 1 385 0
 427              		.cfi_startproc
 428              		@ args = 0, pretend = 0, frame = 0
 429              		@ frame_needed = 0, uses_anonymous_args = 0
 430 0000 38B5     		push	{r3, r4, r5, lr}
 431              		.cfi_def_cfa_offset 16
 432              		.cfi_offset 3, -16
 433              		.cfi_offset 4, -12
 434              		.cfi_offset 5, -8
 435              		.cfi_offset 14, -4
 436              	.LVL60:
 386:main.c        ****     
 387:main.c        ****     int puck_correct = FALSE;   // A flag to determine if the correct puck has been picked up
 388:main.c        ****     int puck_scan;
 389:main.c        ****     
 390:main.c        ****     puckRackColours[1] = RED;
 437              		.loc 1 390 0
 438 0002 0122     		movs	r2, #1
 439 0004 0D4B     		ldr	r3, .L32
 440 0006 DA60     		str	r2, [r3, #12]
 391:main.c        ****     
 392:main.c        **** // States
 393:main.c        ****     // moving
 394:main.c        ****     changeHeightToPuck(3);  // Arm has to be lifted to highest position
 441              		.loc 1 394 0
 442 0008 0320     		movs	r0, #3
 443 000a FFF7FEFF 		bl	changeHeightToPuck
 444              	.LVL61:
 387:main.c        ****     int puck_scan;
 445              		.loc 1 387 0
 446 000e 0025     		movs	r5, #0
 395:main.c        ****         // THIS WILL be ensured by always returning the claw to the highest position after completi
 396:main.c        ****         
 397:main.c        ****     // Scanning puck:
 398:main.c        ****     while (puck_correct == FALSE) 
 447              		.loc 1 398 0
 448 0010 11E0     		b	.L27
 449              	.LVL62:
 450              	.L29:
 399:main.c        ****     {
 400:main.c        ****                                 // robot moves forward towards puck
 401:main.c        ****         changeHeightToPuck(1);  // arm lowers onto robot
 451              		.loc 1 401 0
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccNOUgCR.s 			page 16


 452 0012 0120     		movs	r0, #1
 453 0014 FFF7FEFF 		bl	changeHeightToPuck
 454              	.LVL63:
 402:main.c        ****         puck_scan = colourSensingOutput();  // colour sensor takes a scan
 455              		.loc 1 402 0
 456 0018 FFF7FEFF 		bl	colourSensingOutput
 457              	.LVL64:
 458 001c 0446     		mov	r4, r0
 459              	.LVL65:
 403:main.c        ****         changeHeightToPuck(3);  // arm returns to high position
 460              		.loc 1 403 0
 461 001e 0320     		movs	r0, #3
 462              	.LVL66:
 463 0020 FFF7FEFF 		bl	changeHeightToPuck
 464              	.LVL67:
 404:main.c        ****                                 // robot moves backwards
 405:main.c        ****         if (puck_scan == puckRackColours[current_stage]) {puck_correct = TRUE;}
 465              		.loc 1 405 0
 466 0024 064B     		ldr	r3, .L32+4
 467 0026 9A68     		ldr	r2, [r3, #8]
 468 0028 044B     		ldr	r3, .L32
 469 002a 03EB8203 		add	r3, r3, r2, lsl #2
 470 002e 9B68     		ldr	r3, [r3, #8]
 471 0030 9C42     		cmp	r4, r3
 472 0032 00D1     		bne	.L27
 473 0034 0125     		movs	r5, #1
 474              	.LVL68:
 475              	.L27:
 398:main.c        ****     {
 476              		.loc 1 398 0
 477 0036 002D     		cmp	r5, #0
 478 0038 EBD0     		beq	.L29
 406:main.c        ****                                 // if colour == true:
 407:main.c        ****                                     // enter picking up puck from 
 408:main.c        ****         else 
 409:main.c        ****         {
 410:main.c        ****                                 // if colour == false
 411:main.c        ****                                     // robot translates to side to see next puck, and performs scan
 412:main.c        ****         }
 413:main.c        ****     }
 414:main.c        ****     
 415:main.c        ****     /*
 416:main.c        ****     
 417:main.c        ****     // Picking Up puck from pile:
 418:main.c        ****     changeHeightToPuck(0);      // arm lowers to ground
 419:main.c        ****                                 // robot moves forward
 420:main.c        ****     armClose();                 // claw closes on puck
 421:main.c        ****     changeHeightToPuck(3);      // arm lifts up to highest position
 422:main.c        ****                                 // robot moves back away from puck area   
 423:main.c        ****       
 424:main.c        ****     
 425:main.c        ****     // Deposition puck in construction zone:
 426:main.c        ****                                 // arm will be in highest position from moving
 427:main.c        ****         changeHeightToPuck(current_stage-1);    // arm moves to position of stacking pucks         
 428:main.c        ****                                                 // stage 1st = ground/0
 429:main.c        ****                                                 // stage 2nd = 1
 430:main.c        ****                                                 // stage 3rd = 2
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccNOUgCR.s 			page 17


 431:main.c        ****         armOpen();              // gripper releases puck
 432:main.c        ****         changeHeightToPuck(3);  // arm moves back to highest position availabe
 433:main.c        ****                                 // robot moves away 
 434:main.c        ****     */
 435:main.c        ****     
 436:main.c        **** }
 479              		.loc 1 436 0
 480 003a 38BD     		pop	{r3, r4, r5, pc}
 481              	.LVL69:
 482              	.L33:
 483              		.align	2
 484              	.L32:
 485 003c 00000000 		.word	.LANCHOR0
 486 0040 00000000 		.word	.LANCHOR1
 487              		.cfi_endproc
 488              	.LFE70:
 489              		.size	armMoving, .-armMoving
 490              		.global	current_stage
 491              		.global	PLAN_SCAN_VERTICAL
 492              		.global	moving
 493              		.comm	pathPastBlock,4,4
 494              		.comm	pathToPucks,4,4
 495              		.global	running
 496              		.global	state
 497              		.global	beginNavigation
 498              		.global	ColourSensingAlgorithm
 499              		.global	colour_flag
 500              		.global	idac_value
 501              		.comm	moveBackwardAllowed,2,2
 502              		.comm	moveForwardAllowed,2,2
 503              		.comm	moveRightAllowed,2,2
 504              		.comm	moveLeftAllowed,2,2
 505              		.global	turningRightFlag
 506              		.global	turningLeftFlag
 507              		.global	drivingBackwardFlag
 508              		.global	drivingForwardFlag
 509              		.global	moveNow
 510              		.comm	motor2EncoderCounts,4,4
 511              		.comm	motor1EncoderCounts,4,4
 512              		.global	motor2Enable
 513              		.global	motor1Enable
 514              		.comm	M2_BD,4,4
 515              		.comm	M2_FD,4,4
 516              		.comm	M1_BD,4,4
 517              		.comm	M1_FD,4,4
 518              		.comm	desiredOrientation,4,4
 519              		.global	currentOrientation
 520              		.comm	desiredPosition,8,4
 521              		.global	currentPosition
 522              		.comm	initialisation,4,4
 523              		.comm	output,32,4
 524              		.comm	puckPileLocation,4,4
 525              		.global	block_edge_location
 526              		.global	sweeping
 527              		.global	puckRackOffsetsFromWest
 528              		.global	puckRackColours
 529              		.global	currentPuckRackScanningIndex
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccNOUgCR.s 			page 18


 530              		.comm	driveStraightEnable,4,4
 531              		.section	.rodata
 532              		.align	2
 533              		.type	PLAN_SCAN_VERTICAL, %object
 534              		.size	PLAN_SCAN_VERTICAL, 4
 535              	PLAN_SCAN_VERTICAL:
 536 0000 0A000000 		.word	10
 537              		.data
 538              		.align	2
 539              		.set	.LANCHOR1,. + 0
 540              		.type	colour_flag, %object
 541              		.size	colour_flag, 4
 542              	colour_flag:
 543 0000 01000000 		.word	1
 544              		.type	state, %object
 545              		.size	state, 4
 546              	state:
 547 0004 01000000 		.word	1
 548              		.type	current_stage, %object
 549              		.size	current_stage, 4
 550              	current_stage:
 551 0008 01000000 		.word	1
 552              		.type	running, %object
 553              		.size	running, 4
 554              	running:
 555 000c 01000000 		.word	1
 556              		.type	moveNow, %object
 557              		.size	moveNow, 2
 558              	moveNow:
 559 0010 0100     		.short	1
 560 0012 0000     		.space	2
 561              		.type	currentOrientation, %object
 562              		.size	currentOrientation, 4
 563              	currentOrientation:
 564 0014 5A000000 		.word	90
 565              		.type	puckRackOffsetsFromWest, %object
 566              		.size	puckRackOffsetsFromWest, 20
 567              	puckRackOffsetsFromWest:
 568 0018 48000000 		.word	72
 569 001c 42000000 		.word	66
 570 0020 3C000000 		.word	60
 571 0024 36000000 		.word	54
 572 0028 30000000 		.word	48
 573              		.section	.rodata.str1.4,"aMS",%progbits,1
 574              		.align	2
 575              	.LC0:
 576 0000 55415254 		.ascii	"UART commencing... \012\000"
 576      20636F6D 
 576      6D656E63 
 576      696E672E 
 576      2E2E200A 
 577 0015 000000   		.space	3
 578              	.LC1:
 579 0018 436F756E 		.ascii	"Count \011 BLANK \011 RED \011 GREEN \011 BLUE \011"
 579      74200920 
 579      424C414E 
 579      4B200920 
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccNOUgCR.s 			page 19


 579      52454420 
 580 003c 200A00   		.ascii	" \012\000"
 581 003f 00       		.space	1
 582              	.LC2:
 583 0040 25642009 		.ascii	"%d \011\000"
 583      00
 584 0045 000000   		.space	3
 585              	.LC3:
 586 0048 0A00     		.ascii	"\012\000"
 587              		.bss
 588              		.align	2
 589              		.set	.LANCHOR0,. + 0
 590              		.type	beginNavigation, %object
 591              		.size	beginNavigation, 4
 592              	beginNavigation:
 593 0000 00000000 		.space	4
 594              		.type	idac_value, %object
 595              		.size	idac_value, 4
 596              	idac_value:
 597 0004 00000000 		.space	4
 598              		.type	puckRackColours, %object
 599              		.size	puckRackColours, 20
 600              	puckRackColours:
 601 0008 00000000 		.space	20
 601      00000000 
 601      00000000 
 601      00000000 
 601      00000000 
 602              		.type	moving, %object
 603              		.size	moving, 4
 604              	moving:
 605 001c 00000000 		.space	4
 606              		.type	ColourSensingAlgorithm, %object
 607              		.size	ColourSensingAlgorithm, 4
 608              	ColourSensingAlgorithm:
 609 0020 00000000 		.space	4
 610              		.type	turningRightFlag, %object
 611              		.size	turningRightFlag, 2
 612              	turningRightFlag:
 613 0024 0000     		.space	2
 614              		.type	turningLeftFlag, %object
 615              		.size	turningLeftFlag, 2
 616              	turningLeftFlag:
 617 0026 0000     		.space	2
 618              		.type	drivingBackwardFlag, %object
 619              		.size	drivingBackwardFlag, 2
 620              	drivingBackwardFlag:
 621 0028 0000     		.space	2
 622              		.type	drivingForwardFlag, %object
 623              		.size	drivingForwardFlag, 2
 624              	drivingForwardFlag:
 625 002a 0000     		.space	2
 626              		.type	motor2Enable, %object
 627              		.size	motor2Enable, 2
 628              	motor2Enable:
 629 002c 0000     		.space	2
 630              		.type	motor1Enable, %object
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccNOUgCR.s 			page 20


 631              		.size	motor1Enable, 2
 632              	motor1Enable:
 633 002e 0000     		.space	2
 634              		.type	currentPosition, %object
 635              		.size	currentPosition, 8
 636              	currentPosition:
 637 0030 00000000 		.space	8
 637      00000000 
 638              		.type	block_edge_location, %object
 639              		.size	block_edge_location, 16
 640              	block_edge_location:
 641 0038 00000000 		.space	16
 641      00000000 
 641      00000000 
 641      00000000 
 642              		.type	sweeping, %object
 643              		.size	sweeping, 4
 644              	sweeping:
 645 0048 00000000 		.space	4
 646              		.type	currentPuckRackScanningIndex, %object
 647              		.size	currentPuckRackScanningIndex, 4
 648              	currentPuckRackScanningIndex:
 649 004c 00000000 		.space	4
 650              		.text
 651              	.Letext0:
 652              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 653              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 654              		.file 4 "Generated_Source\\PSoC5/core_cm3.h"
 655              		.file 5 "ultrasonic.h"
 656              		.file 6 "main.h"
 657              		.file 7 "dcmotor.h"
 658              		.file 8 "Generated_Source\\PSoC5/Drift_Check_Timer.h"
 659              		.file 9 "Generated_Source\\PSoC5/Motor_1_Encoder_Counts.h"
 660              		.file 10 "Generated_Source\\PSoC5/Motor_2_Encoder_Counts.h"
 661              		.file 11 "Generated_Source\\PSoC5/CyLib.h"
 662              		.file 12 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4
 663              		.file 13 "Generated_Source\\PSoC5/UART_1.h"
 664              		.file 14 "colour.h"
 665              		.file 15 "servo.h"
 666              		.file 16 "Generated_Source\\PSoC5/TIA_1.h"
 667              		.file 17 "Generated_Source\\PSoC5/ADC.h"
 668              		.file 18 "Generated_Source\\PSoC5/IDAC8_1.h"
 669              		.file 19 "Generated_Source\\PSoC5/Timer_1.h"
 670              		.file 20 "Generated_Source\\PSoC5/Sonic.h"
 671              		.file 21 "Generated_Source\\PSoC5/Start.h"
 672              		.file 22 "Generated_Source\\PSoC5/Motor_1_driver.h"
 673              		.file 23 "Generated_Source\\PSoC5/Motor_2_driver.h"
 674              		.file 24 "Generated_Source\\PSoC5/Encoder_Counts_1_Interrupt.h"
 675              		.file 25 "Generated_Source\\PSoC5/Encoder_Counts_2_Interrupt.h"
 676              		.file 26 "Generated_Source\\PSoC5/Drift_Check_Interrupt.h"
 677              		.file 27 "Generated_Source\\PSoC5/Rack_Servo_PWM.h"
 678              		.file 28 "Generated_Source\\PSoC5/Gripper_Servo_PWM.h"
 679              		.file 29 "Generated_Source\\PSoC5/control_photodiode.h"
 680              		.file 30 "Generated_Source\\PSoC5/control_led.h"
 681              		.section	.debug_info,"",%progbits
 682              	.Ldebug_info0:
 683 0000 0E0A0000 		.4byte	0xa0e
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccNOUgCR.s 			page 21


 684 0004 0400     		.2byte	0x4
 685 0006 00000000 		.4byte	.Ldebug_abbrev0
 686 000a 04       		.byte	0x4
 687 000b 01       		.uleb128 0x1
 688 000c 21070000 		.4byte	.LASF111
 689 0010 0C       		.byte	0xc
 690 0011 EA050000 		.4byte	.LASF112
 691 0015 83060000 		.4byte	.LASF113
 692 0019 00000000 		.4byte	.Ldebug_ranges0+0
 693 001d 00000000 		.4byte	0
 694 0021 00000000 		.4byte	.Ldebug_line0
 695 0025 02       		.uleb128 0x2
 696 0026 01       		.byte	0x1
 697 0027 06       		.byte	0x6
 698 0028 4A000000 		.4byte	.LASF0
 699 002c 02       		.uleb128 0x2
 700 002d 01       		.byte	0x1
 701 002e 08       		.byte	0x8
 702 002f 20040000 		.4byte	.LASF1
 703 0033 02       		.uleb128 0x2
 704 0034 02       		.byte	0x2
 705 0035 05       		.byte	0x5
 706 0036 7A000000 		.4byte	.LASF2
 707 003a 02       		.uleb128 0x2
 708 003b 02       		.byte	0x2
 709 003c 07       		.byte	0x7
 710 003d C6050000 		.4byte	.LASF3
 711 0041 03       		.uleb128 0x3
 712 0042 69060000 		.4byte	.LASF9
 713 0046 02       		.byte	0x2
 714 0047 3F       		.byte	0x3f
 715 0048 4C000000 		.4byte	0x4c
 716 004c 02       		.uleb128 0x2
 717 004d 04       		.byte	0x4
 718 004e 05       		.byte	0x5
 719 004f 47030000 		.4byte	.LASF4
 720 0053 02       		.uleb128 0x2
 721 0054 04       		.byte	0x4
 722 0055 07       		.byte	0x7
 723 0056 F1050000 		.4byte	.LASF5
 724 005a 02       		.uleb128 0x2
 725 005b 08       		.byte	0x8
 726 005c 05       		.byte	0x5
 727 005d D9020000 		.4byte	.LASF6
 728 0061 02       		.uleb128 0x2
 729 0062 08       		.byte	0x8
 730 0063 07       		.byte	0x7
 731 0064 6D040000 		.4byte	.LASF7
 732 0068 04       		.uleb128 0x4
 733 0069 04       		.byte	0x4
 734 006a 05       		.byte	0x5
 735 006b 696E7400 		.ascii	"int\000"
 736 006f 02       		.uleb128 0x2
 737 0070 04       		.byte	0x4
 738 0071 07       		.byte	0x7
 739 0072 B7040000 		.4byte	.LASF8
 740 0076 03       		.uleb128 0x3
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccNOUgCR.s 			page 22


 741 0077 67050000 		.4byte	.LASF10
 742 007b 03       		.byte	0x3
 743 007c 2C       		.byte	0x2c
 744 007d 41000000 		.4byte	0x41
 745 0081 02       		.uleb128 0x2
 746 0082 04       		.byte	0x4
 747 0083 04       		.byte	0x4
 748 0084 C0020000 		.4byte	.LASF11
 749 0088 02       		.uleb128 0x2
 750 0089 08       		.byte	0x8
 751 008a 04       		.byte	0x4
 752 008b 11060000 		.4byte	.LASF12
 753 008f 02       		.uleb128 0x2
 754 0090 01       		.byte	0x1
 755 0091 08       		.byte	0x8
 756 0092 5C050000 		.4byte	.LASF13
 757 0096 02       		.uleb128 0x2
 758 0097 08       		.byte	0x8
 759 0098 04       		.byte	0x4
 760 0099 14040000 		.4byte	.LASF14
 761 009d 02       		.uleb128 0x2
 762 009e 04       		.byte	0x4
 763 009f 07       		.byte	0x7
 764 00a0 ED060000 		.4byte	.LASF15
 765 00a4 05       		.uleb128 0x5
 766 00a5 29060000 		.4byte	.LASF16
 767 00a9 01       		.byte	0x1
 768 00aa 42       		.byte	0x42
 769 00ab 00000000 		.4byte	.LFB64
 770 00af 08000000 		.4byte	.LFE64-.LFB64
 771 00b3 01       		.uleb128 0x1
 772 00b4 9C       		.byte	0x9c
 773 00b5 C3000000 		.4byte	0xc3
 774 00b9 06       		.uleb128 0x6
 775 00ba 06000000 		.4byte	.LVL0
 776 00be 38080000 		.4byte	0x838
 777 00c2 00       		.byte	0
 778 00c3 05       		.uleb128 0x5
 779 00c4 36000000 		.4byte	.LASF17
 780 00c8 01       		.byte	0x1
 781 00c9 46       		.byte	0x46
 782 00ca 00000000 		.4byte	.LFB65
 783 00ce 08000000 		.4byte	.LFE65-.LFB65
 784 00d2 01       		.uleb128 0x1
 785 00d3 9C       		.byte	0x9c
 786 00d4 E2000000 		.4byte	0xe2
 787 00d8 06       		.uleb128 0x6
 788 00d9 06000000 		.4byte	.LVL1
 789 00dd 43080000 		.4byte	0x843
 790 00e1 00       		.byte	0
 791 00e2 05       		.uleb128 0x5
 792 00e3 50060000 		.4byte	.LASF18
 793 00e7 01       		.byte	0x1
 794 00e8 4A       		.byte	0x4a
 795 00e9 00000000 		.4byte	.LFB66
 796 00ed 28000000 		.4byte	.LFE66-.LFB66
 797 00f1 01       		.uleb128 0x1
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccNOUgCR.s 			page 23


 798 00f2 9C       		.byte	0x9c
 799 00f3 25010000 		.4byte	0x125
 800 00f7 06       		.uleb128 0x6
 801 00f8 06000000 		.4byte	.LVL2
 802 00fc 4E080000 		.4byte	0x84e
 803 0100 06       		.uleb128 0x6
 804 0101 0A000000 		.4byte	.LVL3
 805 0105 59080000 		.4byte	0x859
 806 0109 06       		.uleb128 0x6
 807 010a 0E000000 		.4byte	.LVL4
 808 010e 64080000 		.4byte	0x864
 809 0112 06       		.uleb128 0x6
 810 0113 16000000 		.4byte	.LVL5
 811 0117 6F080000 		.4byte	0x86f
 812 011b 06       		.uleb128 0x6
 813 011c 1E000000 		.4byte	.LVL6
 814 0120 7A080000 		.4byte	0x87a
 815 0124 00       		.byte	0
 816 0125 07       		.uleb128 0x7
 817 0126 54494800 		.ascii	"TIH\000"
 818 012a 01       		.byte	0x1
 819 012b 7C       		.byte	0x7c
 820 012c 00000000 		.4byte	.LFB67
 821 0130 08000000 		.4byte	.LFE67-.LFB67
 822 0134 01       		.uleb128 0x1
 823 0135 9C       		.byte	0x9c
 824 0136 44010000 		.4byte	0x144
 825 013a 06       		.uleb128 0x6
 826 013b 06000000 		.4byte	.LVL7
 827 013f 85080000 		.4byte	0x885
 828 0143 00       		.byte	0
 829 0144 05       		.uleb128 0x5
 830 0145 53010000 		.4byte	.LASF19
 831 0149 01       		.byte	0x1
 832 014a 81       		.byte	0x81
 833 014b 00000000 		.4byte	.LFB68
 834 014f 20000000 		.4byte	.LFE68-.LFB68
 835 0153 01       		.uleb128 0x1
 836 0154 9C       		.byte	0x9c
 837 0155 6A010000 		.4byte	0x16a
 838 0159 08       		.uleb128 0x8
 839 015a 08000000 		.4byte	.LVL8
 840 015e 90080000 		.4byte	0x890
 841 0162 09       		.uleb128 0x9
 842 0163 01       		.uleb128 0x1
 843 0164 50       		.byte	0x50
 844 0165 02       		.uleb128 0x2
 845 0166 08       		.byte	0x8
 846 0167 64       		.byte	0x64
 847 0168 00       		.byte	0
 848 0169 00       		.byte	0
 849 016a 0A       		.uleb128 0xa
 850 016b DC000000 		.4byte	.LASF114
 851 016f 01       		.byte	0x1
 852 0170 89       		.byte	0x89
 853 0171 68000000 		.4byte	0x68
 854 0175 00000000 		.4byte	.LFB69
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccNOUgCR.s 			page 24


 855 0179 60010000 		.4byte	.LFE69-.LFB69
 856 017d 01       		.uleb128 0x1
 857 017e 9C       		.byte	0x9c
 858 017f B4040000 		.4byte	0x4b4
 859 0183 0B       		.uleb128 0xb
 860 0184 C9000000 		.4byte	.LASF20
 861 0188 01       		.byte	0x1
 862 0189 99       		.byte	0x99
 863 018a 68000000 		.4byte	0x68
 864 018e 01       		.byte	0x1
 865 018f 0C       		.uleb128 0xc
 866 0190 F6060000 		.4byte	.LASF26
 867 0194 01       		.byte	0x1
 868 0195 9A       		.byte	0x9a
 869 0196 B4040000 		.4byte	0x4b4
 870 019a 0B       		.uleb128 0xb
 871 019b A9040000 		.4byte	.LASF21
 872 019f 01       		.byte	0x1
 873 01a0 9D       		.byte	0x9d
 874 01a1 68000000 		.4byte	0x68
 875 01a5 00       		.byte	0
 876 01a6 0D       		.uleb128 0xd
 877 01a7 746D7000 		.ascii	"tmp\000"
 878 01ab 01       		.byte	0x1
 879 01ac AA       		.byte	0xaa
 880 01ad 68000000 		.4byte	0x68
 881 01b1 00       		.byte	0
 882 01b2 0E       		.uleb128 0xe
 883 01b3 EE000000 		.4byte	.LBB2
 884 01b7 3A000000 		.4byte	.LBE2-.LBB2
 885 01bb 63020000 		.4byte	0x263
 886 01bf 0F       		.uleb128 0xf
 887 01c0 6F050000 		.4byte	.LASF22
 888 01c4 01       		.byte	0x1
 889 01c5 E9       		.byte	0xe9
 890 01c6 68000000 		.4byte	0x68
 891 01ca 00000000 		.4byte	.LLST0
 892 01ce 0E       		.uleb128 0xe
 893 01cf FC000000 		.4byte	.LBB3
 894 01d3 26000000 		.4byte	.LBE3-.LBB3
 895 01d7 3C020000 		.4byte	0x23c
 896 01db 10       		.uleb128 0x10
 897 01dc 6900     		.ascii	"i\000"
 898 01de 01       		.byte	0x1
 899 01df F2       		.byte	0xf2
 900 01e0 68000000 		.4byte	0x68
 901 01e4 1E000000 		.4byte	.LLST1
 902 01e8 11       		.uleb128 0x11
 903 01e9 0C010000 		.4byte	.LVL52
 904 01ed 9B080000 		.4byte	0x89b
 905 01f1 0B020000 		.4byte	0x20b
 906 01f5 09       		.uleb128 0x9
 907 01f6 01       		.uleb128 0x1
 908 01f7 50       		.byte	0x50
 909 01f8 02       		.uleb128 0x2
 910 01f9 75       		.byte	0x75
 911 01fa 00       		.sleb128 0
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccNOUgCR.s 			page 25


 912 01fb 09       		.uleb128 0x9
 913 01fc 01       		.uleb128 0x1
 914 01fd 51       		.byte	0x51
 915 01fe 05       		.uleb128 0x5
 916 01ff 03       		.byte	0x3
 917 0200 40000000 		.4byte	.LC2
 918 0204 09       		.uleb128 0x9
 919 0205 01       		.uleb128 0x1
 920 0206 52       		.byte	0x52
 921 0207 02       		.uleb128 0x2
 922 0208 74       		.byte	0x74
 923 0209 00       		.sleb128 0
 924 020a 00       		.byte	0
 925 020b 11       		.uleb128 0x11
 926 020c 12010000 		.4byte	.LVL53
 927 0210 A6080000 		.4byte	0x8a6
 928 0214 1F020000 		.4byte	0x21f
 929 0218 09       		.uleb128 0x9
 930 0219 01       		.uleb128 0x1
 931 021a 50       		.byte	0x50
 932 021b 02       		.uleb128 0x2
 933 021c 75       		.byte	0x75
 934 021d 00       		.sleb128 0
 935 021e 00       		.byte	0
 936 021f 06       		.uleb128 0x6
 937 0220 16010000 		.4byte	.LVL54
 938 0224 B1080000 		.4byte	0x8b1
 939 0228 08       		.uleb128 0x8
 940 0229 1C010000 		.4byte	.LVL55
 941 022d A6080000 		.4byte	0x8a6
 942 0231 09       		.uleb128 0x9
 943 0232 01       		.uleb128 0x1
 944 0233 50       		.byte	0x50
 945 0234 05       		.uleb128 0x5
 946 0235 03       		.byte	0x3
 947 0236 48000000 		.4byte	.LC3
 948 023a 00       		.byte	0
 949 023b 00       		.byte	0
 950 023c 11       		.uleb128 0x11
 951 023d F6000000 		.4byte	.LVL49
 952 0241 BC080000 		.4byte	0x8bc
 953 0245 4F020000 		.4byte	0x24f
 954 0249 09       		.uleb128 0x9
 955 024a 01       		.uleb128 0x1
 956 024b 50       		.byte	0x50
 957 024c 01       		.uleb128 0x1
 958 024d 31       		.byte	0x31
 959 024e 00       		.byte	0
 960 024f 08       		.uleb128 0x8
 961 0250 FC000000 		.4byte	.LVL50
 962 0254 A6080000 		.4byte	0x8a6
 963 0258 09       		.uleb128 0x9
 964 0259 01       		.uleb128 0x1
 965 025a 50       		.byte	0x50
 966 025b 05       		.uleb128 0x5
 967 025c 03       		.byte	0x3
 968 025d 18000000 		.4byte	.LC1
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccNOUgCR.s 			page 26


 969 0261 00       		.byte	0
 970 0262 00       		.byte	0
 971 0263 06       		.uleb128 0x6
 972 0264 08000000 		.4byte	.LVL9
 973 0268 C7080000 		.4byte	0x8c7
 974 026c 06       		.uleb128 0x6
 975 026d 0C000000 		.4byte	.LVL10
 976 0271 D2080000 		.4byte	0x8d2
 977 0275 11       		.uleb128 0x11
 978 0276 12000000 		.4byte	.LVL11
 979 027a A6080000 		.4byte	0x8a6
 980 027e 8C020000 		.4byte	0x28c
 981 0282 09       		.uleb128 0x9
 982 0283 01       		.uleb128 0x1
 983 0284 50       		.byte	0x50
 984 0285 05       		.uleb128 0x5
 985 0286 03       		.byte	0x3
 986 0287 00000000 		.4byte	.LC0
 987 028b 00       		.byte	0
 988 028c 06       		.uleb128 0x6
 989 028d 16000000 		.4byte	.LVL12
 990 0291 DD080000 		.4byte	0x8dd
 991 0295 06       		.uleb128 0x6
 992 0296 1A000000 		.4byte	.LVL13
 993 029a E8080000 		.4byte	0x8e8
 994 029e 11       		.uleb128 0x11
 995 029f 20000000 		.4byte	.LVL14
 996 02a3 F3080000 		.4byte	0x8f3
 997 02a7 B1020000 		.4byte	0x2b1
 998 02ab 09       		.uleb128 0x9
 999 02ac 01       		.uleb128 0x1
 1000 02ad 50       		.byte	0x50
 1001 02ae 01       		.uleb128 0x1
 1002 02af 30       		.byte	0x30
 1003 02b0 00       		.byte	0
 1004 02b1 06       		.uleb128 0x6
 1005 02b2 28000000 		.4byte	.LVL15
 1006 02b6 FE080000 		.4byte	0x8fe
 1007 02ba 06       		.uleb128 0x6
 1008 02bb 2C000000 		.4byte	.LVL16
 1009 02bf 09090000 		.4byte	0x909
 1010 02c3 06       		.uleb128 0x6
 1011 02c4 30000000 		.4byte	.LVL17
 1012 02c8 14090000 		.4byte	0x914
 1013 02cc 11       		.uleb128 0x11
 1014 02cd 36000000 		.4byte	.LVL18
 1015 02d1 1F090000 		.4byte	0x91f
 1016 02d5 E3020000 		.4byte	0x2e3
 1017 02d9 09       		.uleb128 0x9
 1018 02da 01       		.uleb128 0x1
 1019 02db 50       		.byte	0x50
 1020 02dc 05       		.uleb128 0x5
 1021 02dd 03       		.byte	0x3
 1022 02de 00000000 		.4byte	TIH
 1023 02e2 00       		.byte	0
 1024 02e3 11       		.uleb128 0x11
 1025 02e4 3C000000 		.4byte	.LVL19
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccNOUgCR.s 			page 27


 1026 02e8 2A090000 		.4byte	0x92a
 1027 02ec FA020000 		.4byte	0x2fa
 1028 02f0 09       		.uleb128 0x9
 1029 02f1 01       		.uleb128 0x1
 1030 02f2 50       		.byte	0x50
 1031 02f3 05       		.uleb128 0x5
 1032 02f4 03       		.byte	0x3
 1033 02f5 00000000 		.4byte	StartIH
 1034 02f9 00       		.byte	0
 1035 02fa 06       		.uleb128 0x6
 1036 02fb 44000000 		.4byte	.LVL21
 1037 02ff 35090000 		.4byte	0x935
 1038 0303 06       		.uleb128 0x6
 1039 0304 48000000 		.4byte	.LVL22
 1040 0308 40090000 		.4byte	0x940
 1041 030c 06       		.uleb128 0x6
 1042 030d 54000000 		.4byte	.LVL23
 1043 0311 4B090000 		.4byte	0x94b
 1044 0315 06       		.uleb128 0x6
 1045 0316 58000000 		.4byte	.LVL24
 1046 031a 56090000 		.4byte	0x956
 1047 031e 06       		.uleb128 0x6
 1048 031f 5C000000 		.4byte	.LVL25
 1049 0323 61090000 		.4byte	0x961
 1050 0327 06       		.uleb128 0x6
 1051 0328 60000000 		.4byte	.LVL26
 1052 032c 6C090000 		.4byte	0x96c
 1053 0330 11       		.uleb128 0x11
 1054 0331 66000000 		.4byte	.LVL27
 1055 0335 77090000 		.4byte	0x977
 1056 0339 47030000 		.4byte	0x347
 1057 033d 09       		.uleb128 0x9
 1058 033e 01       		.uleb128 0x1
 1059 033f 50       		.byte	0x50
 1060 0340 05       		.uleb128 0x5
 1061 0341 03       		.byte	0x3
 1062 0342 00000000 		.4byte	Encoder_Counts_1_IH
 1063 0346 00       		.byte	0
 1064 0347 11       		.uleb128 0x11
 1065 0348 6C000000 		.4byte	.LVL28
 1066 034c 82090000 		.4byte	0x982
 1067 0350 5E030000 		.4byte	0x35e
 1068 0354 09       		.uleb128 0x9
 1069 0355 01       		.uleb128 0x1
 1070 0356 50       		.byte	0x50
 1071 0357 05       		.uleb128 0x5
 1072 0358 03       		.byte	0x3
 1073 0359 00000000 		.4byte	Encoder_Counts_2_IH
 1074 035d 00       		.byte	0
 1075 035e 11       		.uleb128 0x11
 1076 035f 72000000 		.4byte	.LVL29
 1077 0363 8D090000 		.4byte	0x98d
 1078 0367 75030000 		.4byte	0x375
 1079 036b 09       		.uleb128 0x9
 1080 036c 01       		.uleb128 0x1
 1081 036d 50       		.byte	0x50
 1082 036e 05       		.uleb128 0x5
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccNOUgCR.s 			page 28


 1083 036f 03       		.byte	0x3
 1084 0370 00000000 		.4byte	Drift_Check_IH
 1085 0374 00       		.byte	0
 1086 0375 06       		.uleb128 0x6
 1087 0376 76000000 		.4byte	.LVL30
 1088 037a 98090000 		.4byte	0x998
 1089 037e 11       		.uleb128 0x11
 1090 037f 7E000000 		.4byte	.LVL31
 1091 0383 A3090000 		.4byte	0x9a3
 1092 0387 93030000 		.4byte	0x393
 1093 038b 09       		.uleb128 0x9
 1094 038c 01       		.uleb128 0x1
 1095 038d 50       		.byte	0x50
 1096 038e 03       		.uleb128 0x3
 1097 038f 0A       		.byte	0xa
 1098 0390 E803     		.2byte	0x3e8
 1099 0392 00       		.byte	0
 1100 0393 11       		.uleb128 0x11
 1101 0394 86000000 		.4byte	.LVL32
 1102 0398 90080000 		.4byte	0x890
 1103 039c A8030000 		.4byte	0x3a8
 1104 03a0 09       		.uleb128 0x9
 1105 03a1 01       		.uleb128 0x1
 1106 03a2 50       		.byte	0x50
 1107 03a3 03       		.uleb128 0x3
 1108 03a4 0A       		.byte	0xa
 1109 03a5 F401     		.2byte	0x1f4
 1110 03a7 00       		.byte	0
 1111 03a8 06       		.uleb128 0x6
 1112 03a9 8A000000 		.4byte	.LVL33
 1113 03ad AE090000 		.4byte	0x9ae
 1114 03b1 06       		.uleb128 0x6
 1115 03b2 8E000000 		.4byte	.LVL34
 1116 03b6 B9090000 		.4byte	0x9b9
 1117 03ba 11       		.uleb128 0x11
 1118 03bb 96000000 		.4byte	.LVL35
 1119 03bf C4090000 		.4byte	0x9c4
 1120 03c3 CF030000 		.4byte	0x3cf
 1121 03c7 09       		.uleb128 0x9
 1122 03c8 01       		.uleb128 0x1
 1123 03c9 50       		.byte	0x50
 1124 03ca 03       		.uleb128 0x3
 1125 03cb 0A       		.byte	0xa
 1126 03cc E204     		.2byte	0x4e2
 1127 03ce 00       		.byte	0
 1128 03cf 11       		.uleb128 0x11
 1129 03d0 9E000000 		.4byte	.LVL36
 1130 03d4 90080000 		.4byte	0x890
 1131 03d8 E4030000 		.4byte	0x3e4
 1132 03dc 09       		.uleb128 0x9
 1133 03dd 01       		.uleb128 0x1
 1134 03de 50       		.byte	0x50
 1135 03df 03       		.uleb128 0x3
 1136 03e0 0A       		.byte	0xa
 1137 03e1 F401     		.2byte	0x1f4
 1138 03e3 00       		.byte	0
 1139 03e4 06       		.uleb128 0x6
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccNOUgCR.s 			page 29


 1140 03e5 A2000000 		.4byte	.LVL37
 1141 03e9 CF090000 		.4byte	0x9cf
 1142 03ed 11       		.uleb128 0x11
 1143 03ee A8000000 		.4byte	.LVL38
 1144 03f2 DA090000 		.4byte	0x9da
 1145 03f6 00040000 		.4byte	0x400
 1146 03fa 09       		.uleb128 0x9
 1147 03fb 01       		.uleb128 0x1
 1148 03fc 50       		.byte	0x50
 1149 03fd 01       		.uleb128 0x1
 1150 03fe 31       		.byte	0x31
 1151 03ff 00       		.byte	0
 1152 0400 11       		.uleb128 0x11
 1153 0401 AE000000 		.4byte	.LVL39
 1154 0405 E5090000 		.4byte	0x9e5
 1155 0409 13040000 		.4byte	0x413
 1156 040d 09       		.uleb128 0x9
 1157 040e 01       		.uleb128 0x1
 1158 040f 50       		.byte	0x50
 1159 0410 01       		.uleb128 0x1
 1160 0411 31       		.byte	0x31
 1161 0412 00       		.byte	0
 1162 0413 11       		.uleb128 0x11
 1163 0414 B6000000 		.4byte	.LVL40
 1164 0418 90080000 		.4byte	0x890
 1165 041c 28040000 		.4byte	0x428
 1166 0420 09       		.uleb128 0x9
 1167 0421 01       		.uleb128 0x1
 1168 0422 50       		.byte	0x50
 1169 0423 03       		.uleb128 0x3
 1170 0424 0A       		.byte	0xa
 1171 0425 E803     		.2byte	0x3e8
 1172 0427 00       		.byte	0
 1173 0428 11       		.uleb128 0x11
 1174 0429 BC000000 		.4byte	.LVL41
 1175 042d E5090000 		.4byte	0x9e5
 1176 0431 3B040000 		.4byte	0x43b
 1177 0435 09       		.uleb128 0x9
 1178 0436 01       		.uleb128 0x1
 1179 0437 50       		.byte	0x50
 1180 0438 01       		.uleb128 0x1
 1181 0439 32       		.byte	0x32
 1182 043a 00       		.byte	0
 1183 043b 11       		.uleb128 0x11
 1184 043c C4000000 		.4byte	.LVL42
 1185 0440 90080000 		.4byte	0x890
 1186 0444 50040000 		.4byte	0x450
 1187 0448 09       		.uleb128 0x9
 1188 0449 01       		.uleb128 0x1
 1189 044a 50       		.byte	0x50
 1190 044b 03       		.uleb128 0x3
 1191 044c 0A       		.byte	0xa
 1192 044d E803     		.2byte	0x3e8
 1193 044f 00       		.byte	0
 1194 0450 11       		.uleb128 0x11
 1195 0451 CA000000 		.4byte	.LVL43
 1196 0455 E5090000 		.4byte	0x9e5
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccNOUgCR.s 			page 30


 1197 0459 63040000 		.4byte	0x463
 1198 045d 09       		.uleb128 0x9
 1199 045e 01       		.uleb128 0x1
 1200 045f 50       		.byte	0x50
 1201 0460 01       		.uleb128 0x1
 1202 0461 33       		.byte	0x33
 1203 0462 00       		.byte	0
 1204 0463 11       		.uleb128 0x11
 1205 0464 D2000000 		.4byte	.LVL44
 1206 0468 90080000 		.4byte	0x890
 1207 046c 78040000 		.4byte	0x478
 1208 0470 09       		.uleb128 0x9
 1209 0471 01       		.uleb128 0x1
 1210 0472 50       		.byte	0x50
 1211 0473 03       		.uleb128 0x3
 1212 0474 0A       		.byte	0xa
 1213 0475 E803     		.2byte	0x3e8
 1214 0477 00       		.byte	0
 1215 0478 11       		.uleb128 0x11
 1216 0479 D8000000 		.4byte	.LVL45
 1217 047d E5090000 		.4byte	0x9e5
 1218 0481 8C040000 		.4byte	0x48c
 1219 0485 09       		.uleb128 0x9
 1220 0486 01       		.uleb128 0x1
 1221 0487 50       		.byte	0x50
 1222 0488 02       		.uleb128 0x2
 1223 0489 74       		.byte	0x74
 1224 048a 00       		.sleb128 0
 1225 048b 00       		.byte	0
 1226 048c 11       		.uleb128 0x11
 1227 048d E0000000 		.4byte	.LVL46
 1228 0491 90080000 		.4byte	0x890
 1229 0495 A1040000 		.4byte	0x4a1
 1230 0499 09       		.uleb128 0x9
 1231 049a 01       		.uleb128 0x1
 1232 049b 50       		.byte	0x50
 1233 049c 03       		.uleb128 0x3
 1234 049d 0A       		.byte	0xa
 1235 049e F401     		.2byte	0x1f4
 1236 04a0 00       		.byte	0
 1237 04a1 06       		.uleb128 0x6
 1238 04a2 E4000000 		.4byte	.LVL47
 1239 04a6 F0090000 		.4byte	0x9f0
 1240 04aa 06       		.uleb128 0x6
 1241 04ab 2C010000 		.4byte	.LVL59
 1242 04af FB090000 		.4byte	0x9fb
 1243 04b3 00       		.byte	0
 1244 04b4 12       		.uleb128 0x12
 1245 04b5 8F000000 		.4byte	0x8f
 1246 04b9 C4040000 		.4byte	0x4c4
 1247 04bd 13       		.uleb128 0x13
 1248 04be 9D000000 		.4byte	0x9d
 1249 04c2 1F       		.byte	0x1f
 1250 04c3 00       		.byte	0
 1251 04c4 14       		.uleb128 0x14
 1252 04c5 47040000 		.4byte	.LASF23
 1253 04c9 01       		.byte	0x1
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccNOUgCR.s 			page 31


 1254 04ca 8101     		.2byte	0x181
 1255 04cc 00000000 		.4byte	.LFB70
 1256 04d0 44000000 		.4byte	.LFE70-.LFB70
 1257 04d4 01       		.uleb128 0x1
 1258 04d5 9C       		.byte	0x9c
 1259 04d6 39050000 		.4byte	0x539
 1260 04da 15       		.uleb128 0x15
 1261 04db 29000000 		.4byte	.LASF24
 1262 04df 01       		.byte	0x1
 1263 04e0 8301     		.2byte	0x183
 1264 04e2 68000000 		.4byte	0x68
 1265 04e6 3D000000 		.4byte	.LLST2
 1266 04ea 15       		.uleb128 0x15
 1267 04eb 5F060000 		.4byte	.LASF25
 1268 04ef 01       		.byte	0x1
 1269 04f0 8401     		.2byte	0x184
 1270 04f2 68000000 		.4byte	0x68
 1271 04f6 5C000000 		.4byte	.LLST3
 1272 04fa 11       		.uleb128 0x11
 1273 04fb 0E000000 		.4byte	.LVL61
 1274 04ff BC080000 		.4byte	0x8bc
 1275 0503 0D050000 		.4byte	0x50d
 1276 0507 09       		.uleb128 0x9
 1277 0508 01       		.uleb128 0x1
 1278 0509 50       		.byte	0x50
 1279 050a 01       		.uleb128 0x1
 1280 050b 33       		.byte	0x33
 1281 050c 00       		.byte	0
 1282 050d 11       		.uleb128 0x11
 1283 050e 18000000 		.4byte	.LVL63
 1284 0512 BC080000 		.4byte	0x8bc
 1285 0516 20050000 		.4byte	0x520
 1286 051a 09       		.uleb128 0x9
 1287 051b 01       		.uleb128 0x1
 1288 051c 50       		.byte	0x50
 1289 051d 01       		.uleb128 0x1
 1290 051e 31       		.byte	0x31
 1291 051f 00       		.byte	0
 1292 0520 06       		.uleb128 0x6
 1293 0521 1C000000 		.4byte	.LVL64
 1294 0525 060A0000 		.4byte	0xa06
 1295 0529 08       		.uleb128 0x8
 1296 052a 24000000 		.4byte	.LVL67
 1297 052e BC080000 		.4byte	0x8bc
 1298 0532 09       		.uleb128 0x9
 1299 0533 01       		.uleb128 0x1
 1300 0534 50       		.byte	0x50
 1301 0535 01       		.uleb128 0x1
 1302 0536 33       		.byte	0x33
 1303 0537 00       		.byte	0
 1304 0538 00       		.byte	0
 1305 0539 16       		.uleb128 0x16
 1306 053a 14070000 		.4byte	.LASF27
 1307 053e 04       		.byte	0x4
 1308 053f 1207     		.2byte	0x712
 1309 0541 45050000 		.4byte	0x545
 1310 0545 17       		.uleb128 0x17
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccNOUgCR.s 			page 32


 1311 0546 76000000 		.4byte	0x76
 1312 054a 18       		.uleb128 0x18
 1313 054b 23020000 		.4byte	.LASF28
 1314 054f 05       		.byte	0x5
 1315 0550 1C       		.byte	0x1c
 1316 0551 68000000 		.4byte	0x68
 1317 0555 05       		.uleb128 0x5
 1318 0556 03       		.byte	0x3
 1319 0557 00000000 		.4byte	driveStraightEnable
 1320 055b 18       		.uleb128 0x18
 1321 055c AB030000 		.4byte	.LASF29
 1322 0560 01       		.byte	0x1
 1323 0561 73       		.byte	0x73
 1324 0562 68000000 		.4byte	0x68
 1325 0566 05       		.uleb128 0x5
 1326 0567 03       		.byte	0x3
 1327 0568 00000000 		.4byte	currentPuckRackScanningIndex
 1328 056c 12       		.uleb128 0x12
 1329 056d 68000000 		.4byte	0x68
 1330 0571 7C050000 		.4byte	0x57c
 1331 0575 13       		.uleb128 0x13
 1332 0576 9D000000 		.4byte	0x9d
 1333 057a 04       		.byte	0x4
 1334 057b 00       		.byte	0
 1335 057c 18       		.uleb128 0x18
 1336 057d 73060000 		.4byte	.LASF30
 1337 0581 01       		.byte	0x1
 1338 0582 72       		.byte	0x72
 1339 0583 6C050000 		.4byte	0x56c
 1340 0587 05       		.uleb128 0x5
 1341 0588 03       		.byte	0x3
 1342 0589 00000000 		.4byte	puckRackColours
 1343 058d 18       		.uleb128 0x18
 1344 058e 37020000 		.4byte	.LASF31
 1345 0592 01       		.byte	0x1
 1346 0593 74       		.byte	0x74
 1347 0594 6C050000 		.4byte	0x56c
 1348 0598 05       		.uleb128 0x5
 1349 0599 03       		.byte	0x3
 1350 059a 00000000 		.4byte	puckRackOffsetsFromWest
 1351 059e 18       		.uleb128 0x18
 1352 059f 53050000 		.4byte	.LASF32
 1353 05a3 01       		.byte	0x1
 1354 05a4 64       		.byte	0x64
 1355 05a5 68000000 		.4byte	0x68
 1356 05a9 05       		.uleb128 0x5
 1357 05aa 03       		.byte	0x3
 1358 05ab 00000000 		.4byte	sweeping
 1359 05af 12       		.uleb128 0x12
 1360 05b0 81000000 		.4byte	0x81
 1361 05b4 BF050000 		.4byte	0x5bf
 1362 05b8 13       		.uleb128 0x13
 1363 05b9 9D000000 		.4byte	0x9d
 1364 05bd 03       		.byte	0x3
 1365 05be 00       		.byte	0
 1366 05bf 18       		.uleb128 0x18
 1367 05c0 59040000 		.4byte	.LASF33
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccNOUgCR.s 			page 33


 1368 05c4 01       		.byte	0x1
 1369 05c5 6D       		.byte	0x6d
 1370 05c6 AF050000 		.4byte	0x5af
 1371 05ca 05       		.uleb128 0x5
 1372 05cb 03       		.byte	0x3
 1373 05cc 00000000 		.4byte	block_edge_location
 1374 05d0 18       		.uleb128 0x18
 1375 05d1 7D030000 		.4byte	.LASF34
 1376 05d5 06       		.byte	0x6
 1377 05d6 77       		.byte	0x77
 1378 05d7 81000000 		.4byte	0x81
 1379 05db 05       		.uleb128 0x5
 1380 05dc 03       		.byte	0x3
 1381 05dd 00000000 		.4byte	puckPileLocation
 1382 05e1 18       		.uleb128 0x18
 1383 05e2 0B080000 		.4byte	.LASF35
 1384 05e6 05       		.byte	0x5
 1385 05e7 25       		.byte	0x25
 1386 05e8 68000000 		.4byte	0x68
 1387 05ec 05       		.uleb128 0x5
 1388 05ed 03       		.byte	0x3
 1389 05ee 00000000 		.4byte	initialisation
 1390 05f2 18       		.uleb128 0x18
 1391 05f3 F6060000 		.4byte	.LASF26
 1392 05f7 01       		.byte	0x1
 1393 05f8 9A       		.byte	0x9a
 1394 05f9 B4040000 		.4byte	0x4b4
 1395 05fd 05       		.uleb128 0x5
 1396 05fe 03       		.byte	0x3
 1397 05ff 00000000 		.4byte	output
 1398 0603 18       		.uleb128 0x18
 1399 0604 3D060000 		.4byte	.LASF36
 1400 0608 01       		.byte	0x1
 1401 0609 60       		.byte	0x60
 1402 060a 68000000 		.4byte	0x68
 1403 060e 05       		.uleb128 0x5
 1404 060f 03       		.byte	0x3
 1405 0610 00000000 		.4byte	state
 1406 0614 18       		.uleb128 0x18
 1407 0615 87050000 		.4byte	.LASF37
 1408 0619 01       		.byte	0x1
 1409 061a 69       		.byte	0x69
 1410 061b 68000000 		.4byte	0x68
 1411 061f 05       		.uleb128 0x5
 1412 0620 03       		.byte	0x3
 1413 0621 00000000 		.4byte	moving
 1414 0625 12       		.uleb128 0x12
 1415 0626 81000000 		.4byte	0x81
 1416 062a 35060000 		.4byte	0x635
 1417 062e 13       		.uleb128 0x13
 1418 062f 9D000000 		.4byte	0x9d
 1419 0633 01       		.byte	0x1
 1420 0634 00       		.byte	0
 1421 0635 18       		.uleb128 0x18
 1422 0636 98000000 		.4byte	.LASF38
 1423 063a 01       		.byte	0x1
 1424 063b 1F       		.byte	0x1f
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccNOUgCR.s 			page 34


 1425 063c 25060000 		.4byte	0x625
 1426 0640 05       		.uleb128 0x5
 1427 0641 03       		.byte	0x3
 1428 0642 00000000 		.4byte	currentPosition
 1429 0646 18       		.uleb128 0x18
 1430 0647 B0050000 		.4byte	.LASF39
 1431 064b 01       		.byte	0x1
 1432 064c 20       		.byte	0x20
 1433 064d 25060000 		.4byte	0x625
 1434 0651 05       		.uleb128 0x5
 1435 0652 03       		.byte	0x3
 1436 0653 00000000 		.4byte	desiredPosition
 1437 0657 18       		.uleb128 0x18
 1438 0658 F4040000 		.4byte	.LASF40
 1439 065c 01       		.byte	0x1
 1440 065d 21       		.byte	0x21
 1441 065e 68000000 		.4byte	0x68
 1442 0662 05       		.uleb128 0x5
 1443 0663 03       		.byte	0x3
 1444 0664 00000000 		.4byte	currentOrientation
 1445 0668 18       		.uleb128 0x18
 1446 0669 1D010000 		.4byte	.LASF41
 1447 066d 01       		.byte	0x1
 1448 066e 22       		.byte	0x22
 1449 066f 68000000 		.4byte	0x68
 1450 0673 05       		.uleb128 0x5
 1451 0674 03       		.byte	0x3
 1452 0675 00000000 		.4byte	desiredOrientation
 1453 0679 18       		.uleb128 0x18
 1454 067a C0050000 		.4byte	.LASF42
 1455 067e 01       		.byte	0x1
 1456 067f 29       		.byte	0x29
 1457 0680 68000000 		.4byte	0x68
 1458 0684 05       		.uleb128 0x5
 1459 0685 03       		.byte	0x3
 1460 0686 00000000 		.4byte	M1_FD
 1461 068a 18       		.uleb128 0x18
 1462 068b 61050000 		.4byte	.LASF43
 1463 068f 01       		.byte	0x1
 1464 0690 2A       		.byte	0x2a
 1465 0691 68000000 		.4byte	0x68
 1466 0695 05       		.uleb128 0x5
 1467 0696 03       		.byte	0x3
 1468 0697 00000000 		.4byte	M1_BD
 1469 069b 18       		.uleb128 0x18
 1470 069c 05080000 		.4byte	.LASF44
 1471 06a0 01       		.byte	0x1
 1472 06a1 2B       		.byte	0x2b
 1473 06a2 68000000 		.4byte	0x68
 1474 06a6 05       		.uleb128 0x5
 1475 06a7 03       		.byte	0x3
 1476 06a8 00000000 		.4byte	M2_FD
 1477 06ac 18       		.uleb128 0x18
 1478 06ad 0E070000 		.4byte	.LASF45
 1479 06b1 01       		.byte	0x1
 1480 06b2 2C       		.byte	0x2c
 1481 06b3 68000000 		.4byte	0x68
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccNOUgCR.s 			page 35


 1482 06b7 05       		.uleb128 0x5
 1483 06b8 03       		.byte	0x3
 1484 06b9 00000000 		.4byte	M2_BD
 1485 06bd 18       		.uleb128 0x18
 1486 06be 6F020000 		.4byte	.LASF46
 1487 06c2 01       		.byte	0x1
 1488 06c3 27       		.byte	0x27
 1489 06c4 33000000 		.4byte	0x33
 1490 06c8 05       		.uleb128 0x5
 1491 06c9 03       		.byte	0x3
 1492 06ca 00000000 		.4byte	motor1Enable
 1493 06ce 18       		.uleb128 0x18
 1494 06cf 43060000 		.4byte	.LASF47
 1495 06d3 01       		.byte	0x1
 1496 06d4 28       		.byte	0x28
 1497 06d5 33000000 		.4byte	0x33
 1498 06d9 05       		.uleb128 0x5
 1499 06da 03       		.byte	0x3
 1500 06db 00000000 		.4byte	motor2Enable
 1501 06df 18       		.uleb128 0x18
 1502 06e0 F1000000 		.4byte	.LASF48
 1503 06e4 01       		.byte	0x1
 1504 06e5 2D       		.byte	0x2d
 1505 06e6 68000000 		.4byte	0x68
 1506 06ea 05       		.uleb128 0x5
 1507 06eb 03       		.byte	0x3
 1508 06ec 00000000 		.4byte	motor1EncoderCounts
 1509 06f0 18       		.uleb128 0x18
 1510 06f1 00000000 		.4byte	.LASF49
 1511 06f5 01       		.byte	0x1
 1512 06f6 2E       		.byte	0x2e
 1513 06f7 68000000 		.4byte	0x68
 1514 06fb 05       		.uleb128 0x5
 1515 06fc 03       		.byte	0x3
 1516 06fd 00000000 		.4byte	motor2EncoderCounts
 1517 0701 18       		.uleb128 0x18
 1518 0702 51040000 		.4byte	.LASF50
 1519 0706 01       		.byte	0x1
 1520 0707 2F       		.byte	0x2f
 1521 0708 33000000 		.4byte	0x33
 1522 070c 05       		.uleb128 0x5
 1523 070d 03       		.byte	0x3
 1524 070e 00000000 		.4byte	moveNow
 1525 0712 18       		.uleb128 0x18
 1526 0713 B6000000 		.4byte	.LASF51
 1527 0717 01       		.byte	0x1
 1528 0718 36       		.byte	0x36
 1529 0719 33000000 		.4byte	0x33
 1530 071d 05       		.uleb128 0x5
 1531 071e 03       		.byte	0x3
 1532 071f 00000000 		.4byte	drivingForwardFlag
 1533 0723 18       		.uleb128 0x18
 1534 0724 69030000 		.4byte	.LASF52
 1535 0728 01       		.byte	0x1
 1536 0729 37       		.byte	0x37
 1537 072a 33000000 		.4byte	0x33
 1538 072e 05       		.uleb128 0x5
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccNOUgCR.s 			page 36


 1539 072f 03       		.byte	0x3
 1540 0730 00000000 		.4byte	drivingBackwardFlag
 1541 0734 18       		.uleb128 0x18
 1542 0735 6A000000 		.4byte	.LASF53
 1543 0739 01       		.byte	0x1
 1544 073a 38       		.byte	0x38
 1545 073b 33000000 		.4byte	0x33
 1546 073f 05       		.uleb128 0x5
 1547 0740 03       		.byte	0x3
 1548 0741 00000000 		.4byte	turningLeftFlag
 1549 0745 18       		.uleb128 0x18
 1550 0746 AF020000 		.4byte	.LASF54
 1551 074a 01       		.byte	0x1
 1552 074b 39       		.byte	0x39
 1553 074c 33000000 		.4byte	0x33
 1554 0750 05       		.uleb128 0x5
 1555 0751 03       		.byte	0x3
 1556 0752 00000000 		.4byte	turningRightFlag
 1557 0756 18       		.uleb128 0x18
 1558 0757 DD060000 		.4byte	.LASF55
 1559 075b 01       		.byte	0x1
 1560 075c 3C       		.byte	0x3c
 1561 075d 33000000 		.4byte	0x33
 1562 0761 05       		.uleb128 0x5
 1563 0762 03       		.byte	0x3
 1564 0763 00000000 		.4byte	moveLeftAllowed
 1565 0767 18       		.uleb128 0x18
 1566 0768 FD060000 		.4byte	.LASF56
 1567 076c 01       		.byte	0x1
 1568 076d 3D       		.byte	0x3d
 1569 076e 33000000 		.4byte	0x33
 1570 0772 05       		.uleb128 0x5
 1571 0773 03       		.byte	0x3
 1572 0774 00000000 		.4byte	moveRightAllowed
 1573 0778 18       		.uleb128 0x18
 1574 0779 07050000 		.4byte	.LASF57
 1575 077d 01       		.byte	0x1
 1576 077e 3E       		.byte	0x3e
 1577 077f 33000000 		.4byte	0x33
 1578 0783 05       		.uleb128 0x5
 1579 0784 03       		.byte	0x3
 1580 0785 00000000 		.4byte	moveForwardAllowed
 1581 0789 18       		.uleb128 0x18
 1582 078a 91010000 		.4byte	.LASF58
 1583 078e 01       		.byte	0x1
 1584 078f 3F       		.byte	0x3f
 1585 0790 33000000 		.4byte	0x33
 1586 0794 05       		.uleb128 0x5
 1587 0795 03       		.byte	0x3
 1588 0796 00000000 		.4byte	moveBackwardAllowed
 1589 079a 18       		.uleb128 0x18
 1590 079b C4040000 		.4byte	.LASF59
 1591 079f 01       		.byte	0x1
 1592 07a0 53       		.byte	0x53
 1593 07a1 68000000 		.4byte	0x68
 1594 07a5 05       		.uleb128 0x5
 1595 07a6 03       		.byte	0x3
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccNOUgCR.s 			page 37


 1596 07a7 00000000 		.4byte	idac_value
 1597 07ab 18       		.uleb128 0x18
 1598 07ac 08040000 		.4byte	.LASF60
 1599 07b0 01       		.byte	0x1
 1600 07b1 55       		.byte	0x55
 1601 07b2 68000000 		.4byte	0x68
 1602 07b6 05       		.uleb128 0x5
 1603 07b7 03       		.byte	0x3
 1604 07b8 00000000 		.4byte	colour_flag
 1605 07bc 18       		.uleb128 0x18
 1606 07bd CF040000 		.4byte	.LASF61
 1607 07c1 01       		.byte	0x1
 1608 07c2 56       		.byte	0x56
 1609 07c3 68000000 		.4byte	0x68
 1610 07c7 05       		.uleb128 0x5
 1611 07c8 03       		.byte	0x3
 1612 07c9 00000000 		.4byte	ColourSensingAlgorithm
 1613 07cd 18       		.uleb128 0x18
 1614 07ce E1000000 		.4byte	.LASF62
 1615 07d2 01       		.byte	0x1
 1616 07d3 5E       		.byte	0x5e
 1617 07d4 68000000 		.4byte	0x68
 1618 07d8 05       		.uleb128 0x5
 1619 07d9 03       		.byte	0x3
 1620 07da 00000000 		.4byte	beginNavigation
 1621 07de 18       		.uleb128 0x18
 1622 07df 67020000 		.4byte	.LASF63
 1623 07e3 01       		.byte	0x1
 1624 07e4 62       		.byte	0x62
 1625 07e5 68000000 		.4byte	0x68
 1626 07e9 05       		.uleb128 0x5
 1627 07ea 03       		.byte	0x3
 1628 07eb 00000000 		.4byte	running
 1629 07ef 18       		.uleb128 0x18
 1630 07f0 E4070000 		.4byte	.LASF64
 1631 07f4 01       		.byte	0x1
 1632 07f5 66       		.byte	0x66
 1633 07f6 68000000 		.4byte	0x68
 1634 07fa 05       		.uleb128 0x5
 1635 07fb 03       		.byte	0x3
 1636 07fc 00000000 		.4byte	pathToPucks
 1637 0800 18       		.uleb128 0x18
 1638 0801 2F030000 		.4byte	.LASF65
 1639 0805 01       		.byte	0x1
 1640 0806 67       		.byte	0x67
 1641 0807 68000000 		.4byte	0x68
 1642 080b 05       		.uleb128 0x5
 1643 080c 03       		.byte	0x3
 1644 080d 00000000 		.4byte	pathPastBlock
 1645 0811 18       		.uleb128 0x18
 1646 0812 74050000 		.4byte	.LASF66
 1647 0816 01       		.byte	0x1
 1648 0817 6B       		.byte	0x6b
 1649 0818 22080000 		.4byte	0x822
 1650 081c 05       		.uleb128 0x5
 1651 081d 03       		.byte	0x3
 1652 081e 00000000 		.4byte	PLAN_SCAN_VERTICAL
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccNOUgCR.s 			page 38


 1653 0822 19       		.uleb128 0x19
 1654 0823 68000000 		.4byte	0x68
 1655 0827 18       		.uleb128 0x18
 1656 0828 1A050000 		.4byte	.LASF67
 1657 082c 01       		.byte	0x1
 1658 082d 6F       		.byte	0x6f
 1659 082e 68000000 		.4byte	0x68
 1660 0832 05       		.uleb128 0x5
 1661 0833 03       		.byte	0x3
 1662 0834 00000000 		.4byte	current_stage
 1663 0838 1A       		.uleb128 0x1a
 1664 0839 8E050000 		.4byte	.LASF68
 1665 083d 8E050000 		.4byte	.LASF68
 1666 0841 07       		.byte	0x7
 1667 0842 1C       		.byte	0x1c
 1668 0843 1A       		.uleb128 0x1a
 1669 0844 84000000 		.4byte	.LASF69
 1670 0848 84000000 		.4byte	.LASF69
 1671 084c 07       		.byte	0x7
 1672 084d 1D       		.byte	0x1d
 1673 084e 1A       		.uleb128 0x1a
 1674 084f 0A030000 		.4byte	.LASF70
 1675 0853 0A030000 		.4byte	.LASF70
 1676 0857 08       		.byte	0x8
 1677 0858 5E       		.byte	0x5e
 1678 0859 1A       		.uleb128 0x1a
 1679 085a E4030000 		.4byte	.LASF71
 1680 085e E4030000 		.4byte	.LASF71
 1681 0862 08       		.byte	0x8
 1682 0863 5B       		.byte	0x5b
 1683 0864 1A       		.uleb128 0x1a
 1684 0865 2F080000 		.4byte	.LASF72
 1685 0869 2F080000 		.4byte	.LASF72
 1686 086d 09       		.byte	0x9
 1687 086e 5D       		.byte	0x5d
 1688 086f 1A       		.uleb128 0x1a
 1689 0870 30010000 		.4byte	.LASF73
 1690 0874 30010000 		.4byte	.LASF73
 1691 0878 0A       		.byte	0xa
 1692 0879 5D       		.byte	0x5d
 1693 087a 1A       		.uleb128 0x1a
 1694 087b A5010000 		.4byte	.LASF74
 1695 087f A5010000 		.4byte	.LASF74
 1696 0883 07       		.byte	0x7
 1697 0884 11       		.byte	0x11
 1698 0885 1A       		.uleb128 0x1a
 1699 0886 94020000 		.4byte	.LASF75
 1700 088a 94020000 		.4byte	.LASF75
 1701 088e 05       		.byte	0x5
 1702 088f 18       		.byte	0x18
 1703 0890 1A       		.uleb128 0x1a
 1704 0891 C7070000 		.4byte	.LASF76
 1705 0895 C7070000 		.4byte	.LASF76
 1706 0899 0B       		.byte	0xb
 1707 089a 76       		.byte	0x76
 1708 089b 1A       		.uleb128 0x1a
 1709 089c 2E040000 		.4byte	.LASF77
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccNOUgCR.s 			page 39


 1710 08a0 2E040000 		.4byte	.LASF77
 1711 08a4 0C       		.byte	0xc
 1712 08a5 E7       		.byte	0xe7
 1713 08a6 1A       		.uleb128 0x1a
 1714 08a7 18060000 		.4byte	.LASF78
 1715 08ab 18060000 		.4byte	.LASF78
 1716 08af 0D       		.byte	0xd
 1717 08b0 8B       		.byte	0x8b
 1718 08b1 1A       		.uleb128 0x1a
 1719 08b2 5B010000 		.4byte	.LASF79
 1720 08b6 5B010000 		.4byte	.LASF79
 1721 08ba 0E       		.byte	0xe
 1722 08bb 18       		.byte	0x18
 1723 08bc 1A       		.uleb128 0x1a
 1724 08bd C6020000 		.4byte	.LASF80
 1725 08c1 C6020000 		.4byte	.LASF80
 1726 08c5 0F       		.byte	0xf
 1727 08c6 18       		.byte	0x18
 1728 08c7 1A       		.uleb128 0x1a
 1729 08c8 47050000 		.4byte	.LASF81
 1730 08cc 47050000 		.4byte	.LASF81
 1731 08d0 10       		.byte	0x10
 1732 08d1 3D       		.byte	0x3d
 1733 08d2 1A       		.uleb128 0x1a
 1734 08d3 FB030000 		.4byte	.LASF82
 1735 08d7 FB030000 		.4byte	.LASF82
 1736 08db 0D       		.byte	0xd
 1737 08dc 54       		.byte	0x54
 1738 08dd 1A       		.uleb128 0x1a
 1739 08de 3D030000 		.4byte	.LASF83
 1740 08e2 3D030000 		.4byte	.LASF83
 1741 08e6 11       		.byte	0x11
 1742 08e7 3A       		.byte	0x3a
 1743 08e8 1A       		.uleb128 0x1a
 1744 08e9 E6040000 		.4byte	.LASF84
 1745 08ed E6040000 		.4byte	.LASF84
 1746 08f1 12       		.byte	0x12
 1747 08f2 3C       		.byte	0x3c
 1748 08f3 1A       		.uleb128 0x1a
 1749 08f4 36040000 		.4byte	.LASF85
 1750 08f8 36040000 		.4byte	.LASF85
 1751 08fc 12       		.byte	0x12
 1752 08fd 40       		.byte	0x40
 1753 08fe 1A       		.uleb128 0x1a
 1754 08ff D9050000 		.4byte	.LASF86
 1755 0903 D9050000 		.4byte	.LASF86
 1756 0907 12       		.byte	0x12
 1757 0908 41       		.byte	0x41
 1758 0909 1A       		.uleb128 0x1a
 1759 090a A2050000 		.4byte	.LASF87
 1760 090e A2050000 		.4byte	.LASF87
 1761 0912 13       		.byte	0x13
 1762 0913 5A       		.byte	0x5a
 1763 0914 1A       		.uleb128 0x1a
 1764 0915 B2010000 		.4byte	.LASF88
 1765 0919 B2010000 		.4byte	.LASF88
 1766 091d 13       		.byte	0x13
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccNOUgCR.s 			page 40


 1767 091e 5E       		.byte	0x5e
 1768 091f 1A       		.uleb128 0x1a
 1769 0920 A8000000 		.4byte	.LASF89
 1770 0924 A8000000 		.4byte	.LASF89
 1771 0928 14       		.byte	0x14
 1772 0929 18       		.byte	0x18
 1773 092a 1A       		.uleb128 0x1a
 1774 092b 03060000 		.4byte	.LASF90
 1775 092f 03060000 		.4byte	.LASF90
 1776 0933 15       		.byte	0x15
 1777 0934 18       		.byte	0x18
 1778 0935 1A       		.uleb128 0x1a
 1779 0936 CF070000 		.4byte	.LASF91
 1780 093a CF070000 		.4byte	.LASF91
 1781 093e 16       		.byte	0x16
 1782 093f 92       		.byte	0x92
 1783 0940 1A       		.uleb128 0x1a
 1784 0941 F0070000 		.4byte	.LASF92
 1785 0945 F0070000 		.4byte	.LASF92
 1786 0949 17       		.byte	0x17
 1787 094a 92       		.byte	0x92
 1788 094b 1A       		.uleb128 0x1a
 1789 094c 14000000 		.4byte	.LASF93
 1790 0950 14000000 		.4byte	.LASF93
 1791 0954 07       		.byte	0x7
 1792 0955 10       		.byte	0x10
 1793 0956 1A       		.uleb128 0x1a
 1794 0957 74010000 		.4byte	.LASF94
 1795 095b 74010000 		.4byte	.LASF94
 1796 095f 09       		.byte	0x9
 1797 0960 4F       		.byte	0x4f
 1798 0961 1A       		.uleb128 0x1a
 1799 0962 8E030000 		.4byte	.LASF95
 1800 0966 8E030000 		.4byte	.LASF95
 1801 096a 0A       		.byte	0xa
 1802 096b 4F       		.byte	0x4f
 1803 096c 1A       		.uleb128 0x1a
 1804 096d AF070000 		.4byte	.LASF96
 1805 0971 AF070000 		.4byte	.LASF96
 1806 0975 08       		.byte	0x8
 1807 0976 5A       		.byte	0x5a
 1808 0977 1A       		.uleb128 0x1a
 1809 0978 E2010000 		.4byte	.LASF97
 1810 097c E2010000 		.4byte	.LASF97
 1811 0980 18       		.byte	0x18
 1812 0981 18       		.byte	0x18
 1813 0982 1A       		.uleb128 0x1a
 1814 0983 E7020000 		.4byte	.LASF98
 1815 0987 E7020000 		.4byte	.LASF98
 1816 098b 19       		.byte	0x19
 1817 098c 18       		.byte	0x18
 1818 098d 1A       		.uleb128 0x1a
 1819 098e 05020000 		.4byte	.LASF99
 1820 0992 05020000 		.4byte	.LASF99
 1821 0996 1A       		.byte	0x1a
 1822 0997 18       		.byte	0x18
 1823 0998 1A       		.uleb128 0x1a
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccNOUgCR.s 			page 41


 1824 0999 CD010000 		.4byte	.LASF100
 1825 099d CD010000 		.4byte	.LASF100
 1826 09a1 1B       		.byte	0x1b
 1827 09a2 92       		.byte	0x92
 1828 09a3 1A       		.uleb128 0x1a
 1829 09a4 C8030000 		.4byte	.LASF101
 1830 09a8 C8030000 		.4byte	.LASF101
 1831 09ac 1B       		.byte	0x1b
 1832 09ad C3       		.byte	0xc3
 1833 09ae 1A       		.uleb128 0x1a
 1834 09af 1A080000 		.4byte	.LASF102
 1835 09b3 1A080000 		.4byte	.LASF102
 1836 09b7 1B       		.byte	0x1b
 1837 09b8 DC       		.byte	0xdc
 1838 09b9 1A       		.uleb128 0x1a
 1839 09ba 7C020000 		.4byte	.LASF103
 1840 09be 7C020000 		.4byte	.LASF103
 1841 09c2 1C       		.byte	0x1c
 1842 09c3 92       		.byte	0x92
 1843 09c4 1A       		.uleb128 0x1a
 1844 09c5 28050000 		.4byte	.LASF104
 1845 09c9 28050000 		.4byte	.LASF104
 1846 09cd 1C       		.byte	0x1c
 1847 09ce C3       		.byte	0xc3
 1848 09cf 1A       		.uleb128 0x1a
 1849 09d0 4F020000 		.4byte	.LASF105
 1850 09d4 4F020000 		.4byte	.LASF105
 1851 09d8 1C       		.byte	0x1c
 1852 09d9 DC       		.byte	0xdc
 1853 09da 1A       		.uleb128 0x1a
 1854 09db 50030000 		.4byte	.LASF106
 1855 09df 50030000 		.4byte	.LASF106
 1856 09e3 1D       		.byte	0x1d
 1857 09e4 2F       		.byte	0x2f
 1858 09e5 1A       		.uleb128 0x1a
 1859 09e6 97040000 		.4byte	.LASF107
 1860 09ea 97040000 		.4byte	.LASF107
 1861 09ee 1E       		.byte	0x1e
 1862 09ef 2F       		.byte	0x2f
 1863 09f0 1A       		.uleb128 0x1a
 1864 09f1 05010000 		.4byte	.LASF108
 1865 09f5 05010000 		.4byte	.LASF108
 1866 09f9 0E       		.byte	0xe
 1867 09fa 17       		.byte	0x17
 1868 09fb 1A       		.uleb128 0x1a
 1869 09fc 84040000 		.4byte	.LASF109
 1870 0a00 84040000 		.4byte	.LASF109
 1871 0a04 0E       		.byte	0xe
 1872 0a05 19       		.byte	0x19
 1873 0a06 1A       		.uleb128 0x1a
 1874 0a07 56000000 		.4byte	.LASF110
 1875 0a0b 56000000 		.4byte	.LASF110
 1876 0a0f 0E       		.byte	0xe
 1877 0a10 1A       		.byte	0x1a
 1878 0a11 00       		.byte	0
 1879              		.section	.debug_abbrev,"",%progbits
 1880              	.Ldebug_abbrev0:
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccNOUgCR.s 			page 42


 1881 0000 01       		.uleb128 0x1
 1882 0001 11       		.uleb128 0x11
 1883 0002 01       		.byte	0x1
 1884 0003 25       		.uleb128 0x25
 1885 0004 0E       		.uleb128 0xe
 1886 0005 13       		.uleb128 0x13
 1887 0006 0B       		.uleb128 0xb
 1888 0007 03       		.uleb128 0x3
 1889 0008 0E       		.uleb128 0xe
 1890 0009 1B       		.uleb128 0x1b
 1891 000a 0E       		.uleb128 0xe
 1892 000b 55       		.uleb128 0x55
 1893 000c 17       		.uleb128 0x17
 1894 000d 11       		.uleb128 0x11
 1895 000e 01       		.uleb128 0x1
 1896 000f 10       		.uleb128 0x10
 1897 0010 17       		.uleb128 0x17
 1898 0011 00       		.byte	0
 1899 0012 00       		.byte	0
 1900 0013 02       		.uleb128 0x2
 1901 0014 24       		.uleb128 0x24
 1902 0015 00       		.byte	0
 1903 0016 0B       		.uleb128 0xb
 1904 0017 0B       		.uleb128 0xb
 1905 0018 3E       		.uleb128 0x3e
 1906 0019 0B       		.uleb128 0xb
 1907 001a 03       		.uleb128 0x3
 1908 001b 0E       		.uleb128 0xe
 1909 001c 00       		.byte	0
 1910 001d 00       		.byte	0
 1911 001e 03       		.uleb128 0x3
 1912 001f 16       		.uleb128 0x16
 1913 0020 00       		.byte	0
 1914 0021 03       		.uleb128 0x3
 1915 0022 0E       		.uleb128 0xe
 1916 0023 3A       		.uleb128 0x3a
 1917 0024 0B       		.uleb128 0xb
 1918 0025 3B       		.uleb128 0x3b
 1919 0026 0B       		.uleb128 0xb
 1920 0027 49       		.uleb128 0x49
 1921 0028 13       		.uleb128 0x13
 1922 0029 00       		.byte	0
 1923 002a 00       		.byte	0
 1924 002b 04       		.uleb128 0x4
 1925 002c 24       		.uleb128 0x24
 1926 002d 00       		.byte	0
 1927 002e 0B       		.uleb128 0xb
 1928 002f 0B       		.uleb128 0xb
 1929 0030 3E       		.uleb128 0x3e
 1930 0031 0B       		.uleb128 0xb
 1931 0032 03       		.uleb128 0x3
 1932 0033 08       		.uleb128 0x8
 1933 0034 00       		.byte	0
 1934 0035 00       		.byte	0
 1935 0036 05       		.uleb128 0x5
 1936 0037 2E       		.uleb128 0x2e
 1937 0038 01       		.byte	0x1
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccNOUgCR.s 			page 43


 1938 0039 3F       		.uleb128 0x3f
 1939 003a 19       		.uleb128 0x19
 1940 003b 03       		.uleb128 0x3
 1941 003c 0E       		.uleb128 0xe
 1942 003d 3A       		.uleb128 0x3a
 1943 003e 0B       		.uleb128 0xb
 1944 003f 3B       		.uleb128 0x3b
 1945 0040 0B       		.uleb128 0xb
 1946 0041 27       		.uleb128 0x27
 1947 0042 19       		.uleb128 0x19
 1948 0043 11       		.uleb128 0x11
 1949 0044 01       		.uleb128 0x1
 1950 0045 12       		.uleb128 0x12
 1951 0046 06       		.uleb128 0x6
 1952 0047 40       		.uleb128 0x40
 1953 0048 18       		.uleb128 0x18
 1954 0049 9742     		.uleb128 0x2117
 1955 004b 19       		.uleb128 0x19
 1956 004c 01       		.uleb128 0x1
 1957 004d 13       		.uleb128 0x13
 1958 004e 00       		.byte	0
 1959 004f 00       		.byte	0
 1960 0050 06       		.uleb128 0x6
 1961 0051 898201   		.uleb128 0x4109
 1962 0054 00       		.byte	0
 1963 0055 11       		.uleb128 0x11
 1964 0056 01       		.uleb128 0x1
 1965 0057 31       		.uleb128 0x31
 1966 0058 13       		.uleb128 0x13
 1967 0059 00       		.byte	0
 1968 005a 00       		.byte	0
 1969 005b 07       		.uleb128 0x7
 1970 005c 2E       		.uleb128 0x2e
 1971 005d 01       		.byte	0x1
 1972 005e 3F       		.uleb128 0x3f
 1973 005f 19       		.uleb128 0x19
 1974 0060 03       		.uleb128 0x3
 1975 0061 08       		.uleb128 0x8
 1976 0062 3A       		.uleb128 0x3a
 1977 0063 0B       		.uleb128 0xb
 1978 0064 3B       		.uleb128 0x3b
 1979 0065 0B       		.uleb128 0xb
 1980 0066 27       		.uleb128 0x27
 1981 0067 19       		.uleb128 0x19
 1982 0068 11       		.uleb128 0x11
 1983 0069 01       		.uleb128 0x1
 1984 006a 12       		.uleb128 0x12
 1985 006b 06       		.uleb128 0x6
 1986 006c 40       		.uleb128 0x40
 1987 006d 18       		.uleb128 0x18
 1988 006e 9742     		.uleb128 0x2117
 1989 0070 19       		.uleb128 0x19
 1990 0071 01       		.uleb128 0x1
 1991 0072 13       		.uleb128 0x13
 1992 0073 00       		.byte	0
 1993 0074 00       		.byte	0
 1994 0075 08       		.uleb128 0x8
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccNOUgCR.s 			page 44


 1995 0076 898201   		.uleb128 0x4109
 1996 0079 01       		.byte	0x1
 1997 007a 11       		.uleb128 0x11
 1998 007b 01       		.uleb128 0x1
 1999 007c 31       		.uleb128 0x31
 2000 007d 13       		.uleb128 0x13
 2001 007e 00       		.byte	0
 2002 007f 00       		.byte	0
 2003 0080 09       		.uleb128 0x9
 2004 0081 8A8201   		.uleb128 0x410a
 2005 0084 00       		.byte	0
 2006 0085 02       		.uleb128 0x2
 2007 0086 18       		.uleb128 0x18
 2008 0087 9142     		.uleb128 0x2111
 2009 0089 18       		.uleb128 0x18
 2010 008a 00       		.byte	0
 2011 008b 00       		.byte	0
 2012 008c 0A       		.uleb128 0xa
 2013 008d 2E       		.uleb128 0x2e
 2014 008e 01       		.byte	0x1
 2015 008f 3F       		.uleb128 0x3f
 2016 0090 19       		.uleb128 0x19
 2017 0091 03       		.uleb128 0x3
 2018 0092 0E       		.uleb128 0xe
 2019 0093 3A       		.uleb128 0x3a
 2020 0094 0B       		.uleb128 0xb
 2021 0095 3B       		.uleb128 0x3b
 2022 0096 0B       		.uleb128 0xb
 2023 0097 27       		.uleb128 0x27
 2024 0098 19       		.uleb128 0x19
 2025 0099 49       		.uleb128 0x49
 2026 009a 13       		.uleb128 0x13
 2027 009b 8701     		.uleb128 0x87
 2028 009d 19       		.uleb128 0x19
 2029 009e 11       		.uleb128 0x11
 2030 009f 01       		.uleb128 0x1
 2031 00a0 12       		.uleb128 0x12
 2032 00a1 06       		.uleb128 0x6
 2033 00a2 40       		.uleb128 0x40
 2034 00a3 18       		.uleb128 0x18
 2035 00a4 9742     		.uleb128 0x2117
 2036 00a6 19       		.uleb128 0x19
 2037 00a7 01       		.uleb128 0x1
 2038 00a8 13       		.uleb128 0x13
 2039 00a9 00       		.byte	0
 2040 00aa 00       		.byte	0
 2041 00ab 0B       		.uleb128 0xb
 2042 00ac 34       		.uleb128 0x34
 2043 00ad 00       		.byte	0
 2044 00ae 03       		.uleb128 0x3
 2045 00af 0E       		.uleb128 0xe
 2046 00b0 3A       		.uleb128 0x3a
 2047 00b1 0B       		.uleb128 0xb
 2048 00b2 3B       		.uleb128 0x3b
 2049 00b3 0B       		.uleb128 0xb
 2050 00b4 49       		.uleb128 0x49
 2051 00b5 13       		.uleb128 0x13
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccNOUgCR.s 			page 45


 2052 00b6 1C       		.uleb128 0x1c
 2053 00b7 0B       		.uleb128 0xb
 2054 00b8 00       		.byte	0
 2055 00b9 00       		.byte	0
 2056 00ba 0C       		.uleb128 0xc
 2057 00bb 34       		.uleb128 0x34
 2058 00bc 00       		.byte	0
 2059 00bd 03       		.uleb128 0x3
 2060 00be 0E       		.uleb128 0xe
 2061 00bf 3A       		.uleb128 0x3a
 2062 00c0 0B       		.uleb128 0xb
 2063 00c1 3B       		.uleb128 0x3b
 2064 00c2 0B       		.uleb128 0xb
 2065 00c3 49       		.uleb128 0x49
 2066 00c4 13       		.uleb128 0x13
 2067 00c5 3F       		.uleb128 0x3f
 2068 00c6 19       		.uleb128 0x19
 2069 00c7 3C       		.uleb128 0x3c
 2070 00c8 19       		.uleb128 0x19
 2071 00c9 00       		.byte	0
 2072 00ca 00       		.byte	0
 2073 00cb 0D       		.uleb128 0xd
 2074 00cc 34       		.uleb128 0x34
 2075 00cd 00       		.byte	0
 2076 00ce 03       		.uleb128 0x3
 2077 00cf 08       		.uleb128 0x8
 2078 00d0 3A       		.uleb128 0x3a
 2079 00d1 0B       		.uleb128 0xb
 2080 00d2 3B       		.uleb128 0x3b
 2081 00d3 0B       		.uleb128 0xb
 2082 00d4 49       		.uleb128 0x49
 2083 00d5 13       		.uleb128 0x13
 2084 00d6 1C       		.uleb128 0x1c
 2085 00d7 0B       		.uleb128 0xb
 2086 00d8 00       		.byte	0
 2087 00d9 00       		.byte	0
 2088 00da 0E       		.uleb128 0xe
 2089 00db 0B       		.uleb128 0xb
 2090 00dc 01       		.byte	0x1
 2091 00dd 11       		.uleb128 0x11
 2092 00de 01       		.uleb128 0x1
 2093 00df 12       		.uleb128 0x12
 2094 00e0 06       		.uleb128 0x6
 2095 00e1 01       		.uleb128 0x1
 2096 00e2 13       		.uleb128 0x13
 2097 00e3 00       		.byte	0
 2098 00e4 00       		.byte	0
 2099 00e5 0F       		.uleb128 0xf
 2100 00e6 34       		.uleb128 0x34
 2101 00e7 00       		.byte	0
 2102 00e8 03       		.uleb128 0x3
 2103 00e9 0E       		.uleb128 0xe
 2104 00ea 3A       		.uleb128 0x3a
 2105 00eb 0B       		.uleb128 0xb
 2106 00ec 3B       		.uleb128 0x3b
 2107 00ed 0B       		.uleb128 0xb
 2108 00ee 49       		.uleb128 0x49
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccNOUgCR.s 			page 46


 2109 00ef 13       		.uleb128 0x13
 2110 00f0 02       		.uleb128 0x2
 2111 00f1 17       		.uleb128 0x17
 2112 00f2 00       		.byte	0
 2113 00f3 00       		.byte	0
 2114 00f4 10       		.uleb128 0x10
 2115 00f5 34       		.uleb128 0x34
 2116 00f6 00       		.byte	0
 2117 00f7 03       		.uleb128 0x3
 2118 00f8 08       		.uleb128 0x8
 2119 00f9 3A       		.uleb128 0x3a
 2120 00fa 0B       		.uleb128 0xb
 2121 00fb 3B       		.uleb128 0x3b
 2122 00fc 0B       		.uleb128 0xb
 2123 00fd 49       		.uleb128 0x49
 2124 00fe 13       		.uleb128 0x13
 2125 00ff 02       		.uleb128 0x2
 2126 0100 17       		.uleb128 0x17
 2127 0101 00       		.byte	0
 2128 0102 00       		.byte	0
 2129 0103 11       		.uleb128 0x11
 2130 0104 898201   		.uleb128 0x4109
 2131 0107 01       		.byte	0x1
 2132 0108 11       		.uleb128 0x11
 2133 0109 01       		.uleb128 0x1
 2134 010a 31       		.uleb128 0x31
 2135 010b 13       		.uleb128 0x13
 2136 010c 01       		.uleb128 0x1
 2137 010d 13       		.uleb128 0x13
 2138 010e 00       		.byte	0
 2139 010f 00       		.byte	0
 2140 0110 12       		.uleb128 0x12
 2141 0111 01       		.uleb128 0x1
 2142 0112 01       		.byte	0x1
 2143 0113 49       		.uleb128 0x49
 2144 0114 13       		.uleb128 0x13
 2145 0115 01       		.uleb128 0x1
 2146 0116 13       		.uleb128 0x13
 2147 0117 00       		.byte	0
 2148 0118 00       		.byte	0
 2149 0119 13       		.uleb128 0x13
 2150 011a 21       		.uleb128 0x21
 2151 011b 00       		.byte	0
 2152 011c 49       		.uleb128 0x49
 2153 011d 13       		.uleb128 0x13
 2154 011e 2F       		.uleb128 0x2f
 2155 011f 0B       		.uleb128 0xb
 2156 0120 00       		.byte	0
 2157 0121 00       		.byte	0
 2158 0122 14       		.uleb128 0x14
 2159 0123 2E       		.uleb128 0x2e
 2160 0124 01       		.byte	0x1
 2161 0125 3F       		.uleb128 0x3f
 2162 0126 19       		.uleb128 0x19
 2163 0127 03       		.uleb128 0x3
 2164 0128 0E       		.uleb128 0xe
 2165 0129 3A       		.uleb128 0x3a
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccNOUgCR.s 			page 47


 2166 012a 0B       		.uleb128 0xb
 2167 012b 3B       		.uleb128 0x3b
 2168 012c 05       		.uleb128 0x5
 2169 012d 27       		.uleb128 0x27
 2170 012e 19       		.uleb128 0x19
 2171 012f 11       		.uleb128 0x11
 2172 0130 01       		.uleb128 0x1
 2173 0131 12       		.uleb128 0x12
 2174 0132 06       		.uleb128 0x6
 2175 0133 40       		.uleb128 0x40
 2176 0134 18       		.uleb128 0x18
 2177 0135 9742     		.uleb128 0x2117
 2178 0137 19       		.uleb128 0x19
 2179 0138 01       		.uleb128 0x1
 2180 0139 13       		.uleb128 0x13
 2181 013a 00       		.byte	0
 2182 013b 00       		.byte	0
 2183 013c 15       		.uleb128 0x15
 2184 013d 34       		.uleb128 0x34
 2185 013e 00       		.byte	0
 2186 013f 03       		.uleb128 0x3
 2187 0140 0E       		.uleb128 0xe
 2188 0141 3A       		.uleb128 0x3a
 2189 0142 0B       		.uleb128 0xb
 2190 0143 3B       		.uleb128 0x3b
 2191 0144 05       		.uleb128 0x5
 2192 0145 49       		.uleb128 0x49
 2193 0146 13       		.uleb128 0x13
 2194 0147 02       		.uleb128 0x2
 2195 0148 17       		.uleb128 0x17
 2196 0149 00       		.byte	0
 2197 014a 00       		.byte	0
 2198 014b 16       		.uleb128 0x16
 2199 014c 34       		.uleb128 0x34
 2200 014d 00       		.byte	0
 2201 014e 03       		.uleb128 0x3
 2202 014f 0E       		.uleb128 0xe
 2203 0150 3A       		.uleb128 0x3a
 2204 0151 0B       		.uleb128 0xb
 2205 0152 3B       		.uleb128 0x3b
 2206 0153 05       		.uleb128 0x5
 2207 0154 49       		.uleb128 0x49
 2208 0155 13       		.uleb128 0x13
 2209 0156 3F       		.uleb128 0x3f
 2210 0157 19       		.uleb128 0x19
 2211 0158 3C       		.uleb128 0x3c
 2212 0159 19       		.uleb128 0x19
 2213 015a 00       		.byte	0
 2214 015b 00       		.byte	0
 2215 015c 17       		.uleb128 0x17
 2216 015d 35       		.uleb128 0x35
 2217 015e 00       		.byte	0
 2218 015f 49       		.uleb128 0x49
 2219 0160 13       		.uleb128 0x13
 2220 0161 00       		.byte	0
 2221 0162 00       		.byte	0
 2222 0163 18       		.uleb128 0x18
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccNOUgCR.s 			page 48


 2223 0164 34       		.uleb128 0x34
 2224 0165 00       		.byte	0
 2225 0166 03       		.uleb128 0x3
 2226 0167 0E       		.uleb128 0xe
 2227 0168 3A       		.uleb128 0x3a
 2228 0169 0B       		.uleb128 0xb
 2229 016a 3B       		.uleb128 0x3b
 2230 016b 0B       		.uleb128 0xb
 2231 016c 49       		.uleb128 0x49
 2232 016d 13       		.uleb128 0x13
 2233 016e 3F       		.uleb128 0x3f
 2234 016f 19       		.uleb128 0x19
 2235 0170 02       		.uleb128 0x2
 2236 0171 18       		.uleb128 0x18
 2237 0172 00       		.byte	0
 2238 0173 00       		.byte	0
 2239 0174 19       		.uleb128 0x19
 2240 0175 26       		.uleb128 0x26
 2241 0176 00       		.byte	0
 2242 0177 49       		.uleb128 0x49
 2243 0178 13       		.uleb128 0x13
 2244 0179 00       		.byte	0
 2245 017a 00       		.byte	0
 2246 017b 1A       		.uleb128 0x1a
 2247 017c 2E       		.uleb128 0x2e
 2248 017d 00       		.byte	0
 2249 017e 3F       		.uleb128 0x3f
 2250 017f 19       		.uleb128 0x19
 2251 0180 3C       		.uleb128 0x3c
 2252 0181 19       		.uleb128 0x19
 2253 0182 6E       		.uleb128 0x6e
 2254 0183 0E       		.uleb128 0xe
 2255 0184 03       		.uleb128 0x3
 2256 0185 0E       		.uleb128 0xe
 2257 0186 3A       		.uleb128 0x3a
 2258 0187 0B       		.uleb128 0xb
 2259 0188 3B       		.uleb128 0x3b
 2260 0189 0B       		.uleb128 0xb
 2261 018a 00       		.byte	0
 2262 018b 00       		.byte	0
 2263 018c 00       		.byte	0
 2264              		.section	.debug_loc,"",%progbits
 2265              	.Ldebug_loc0:
 2266              	.LLST0:
 2267 0000 EE000000 		.4byte	.LVL48
 2268 0004 F5000000 		.4byte	.LVL49-1
 2269 0008 0100     		.2byte	0x1
 2270 000a 53       		.byte	0x53
 2271 000b 24010000 		.4byte	.LVL57
 2272 000f 28010000 		.4byte	.LVL58
 2273 0013 0100     		.2byte	0x1
 2274 0015 53       		.byte	0x53
 2275 0016 00000000 		.4byte	0
 2276 001a 00000000 		.4byte	0
 2277              	.LLST1:
 2278 001e FC000000 		.4byte	.LVL50
 2279 0022 00010000 		.4byte	.LVL51
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccNOUgCR.s 			page 49


 2280 0026 0200     		.2byte	0x2
 2281 0028 30       		.byte	0x30
 2282 0029 9F       		.byte	0x9f
 2283 002a 00010000 		.4byte	.LVL51
 2284 002e 24010000 		.4byte	.LVL57
 2285 0032 0100     		.2byte	0x1
 2286 0034 54       		.byte	0x54
 2287 0035 00000000 		.4byte	0
 2288 0039 00000000 		.4byte	0
 2289              	.LLST2:
 2290 003d 02000000 		.4byte	.LVL60
 2291 0041 12000000 		.4byte	.LVL62
 2292 0045 0200     		.2byte	0x2
 2293 0047 30       		.byte	0x30
 2294 0048 9F       		.byte	0x9f
 2295 0049 12000000 		.4byte	.LVL62
 2296 004d 3C000000 		.4byte	.LVL69
 2297 0051 0100     		.2byte	0x1
 2298 0053 55       		.byte	0x55
 2299 0054 00000000 		.4byte	0
 2300 0058 00000000 		.4byte	0
 2301              	.LLST3:
 2302 005c 1E000000 		.4byte	.LVL65
 2303 0060 20000000 		.4byte	.LVL66
 2304 0064 0100     		.2byte	0x1
 2305 0066 50       		.byte	0x50
 2306 0067 20000000 		.4byte	.LVL66
 2307 006b 36000000 		.4byte	.LVL68
 2308 006f 0100     		.2byte	0x1
 2309 0071 54       		.byte	0x54
 2310 0072 00000000 		.4byte	0
 2311 0076 00000000 		.4byte	0
 2312              		.section	.debug_aranges,"",%progbits
 2313 0000 4C000000 		.4byte	0x4c
 2314 0004 0200     		.2byte	0x2
 2315 0006 00000000 		.4byte	.Ldebug_info0
 2316 000a 04       		.byte	0x4
 2317 000b 00       		.byte	0
 2318 000c 0000     		.2byte	0
 2319 000e 0000     		.2byte	0
 2320 0010 00000000 		.4byte	.LFB64
 2321 0014 08000000 		.4byte	.LFE64-.LFB64
 2322 0018 00000000 		.4byte	.LFB65
 2323 001c 08000000 		.4byte	.LFE65-.LFB65
 2324 0020 00000000 		.4byte	.LFB66
 2325 0024 28000000 		.4byte	.LFE66-.LFB66
 2326 0028 00000000 		.4byte	.LFB67
 2327 002c 08000000 		.4byte	.LFE67-.LFB67
 2328 0030 00000000 		.4byte	.LFB68
 2329 0034 20000000 		.4byte	.LFE68-.LFB68
 2330 0038 00000000 		.4byte	.LFB69
 2331 003c 60010000 		.4byte	.LFE69-.LFB69
 2332 0040 00000000 		.4byte	.LFB70
 2333 0044 44000000 		.4byte	.LFE70-.LFB70
 2334 0048 00000000 		.4byte	0
 2335 004c 00000000 		.4byte	0
 2336              		.section	.debug_ranges,"",%progbits
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccNOUgCR.s 			page 50


 2337              	.Ldebug_ranges0:
 2338 0000 00000000 		.4byte	.LFB64
 2339 0004 08000000 		.4byte	.LFE64
 2340 0008 00000000 		.4byte	.LFB65
 2341 000c 08000000 		.4byte	.LFE65
 2342 0010 00000000 		.4byte	.LFB66
 2343 0014 28000000 		.4byte	.LFE66
 2344 0018 00000000 		.4byte	.LFB67
 2345 001c 08000000 		.4byte	.LFE67
 2346 0020 00000000 		.4byte	.LFB68
 2347 0024 20000000 		.4byte	.LFE68
 2348 0028 00000000 		.4byte	.LFB69
 2349 002c 60010000 		.4byte	.LFE69
 2350 0030 00000000 		.4byte	.LFB70
 2351 0034 44000000 		.4byte	.LFE70
 2352 0038 00000000 		.4byte	0
 2353 003c 00000000 		.4byte	0
 2354              		.section	.debug_line,"",%progbits
 2355              	.Ldebug_line0:
 2356 0000 5A040000 		.section	.debug_str,"MS",%progbits,1
 2356      02007103 
 2356      00000201 
 2356      FB0E0D00 
 2356      01010101 
 2357              	.LASF49:
 2358 0000 6D6F746F 		.ascii	"motor2EncoderCounts\000"
 2358      7232456E 
 2358      636F6465 
 2358      72436F75 
 2358      6E747300 
 2359              	.LASF93:
 2360 0014 6D6F746F 		.ascii	"motorDutyCycleUpdate\000"
 2360      72447574 
 2360      79437963 
 2360      6C655570 
 2360      64617465 
 2361              	.LASF24:
 2362 0029 7075636B 		.ascii	"puck_correct\000"
 2362      5F636F72 
 2362      72656374 
 2362      00
 2363              	.LASF17:
 2364 0036 456E636F 		.ascii	"Encoder_Counts_2_IH\000"
 2364      6465725F 
 2364      436F756E 
 2364      74735F32 
 2364      5F494800 
 2365              	.LASF0:
 2366 004a 7369676E 		.ascii	"signed char\000"
 2366      65642063 
 2366      68617200 
 2367              	.LASF110:
 2368 0056 636F6C6F 		.ascii	"colourSensingOutput\000"
 2368      75725365 
 2368      6E73696E 
 2368      674F7574 
 2368      70757400 
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccNOUgCR.s 			page 51


 2369              	.LASF53:
 2370 006a 7475726E 		.ascii	"turningLeftFlag\000"
 2370      696E674C 
 2370      65667446 
 2370      6C616700 
 2371              	.LASF2:
 2372 007a 73686F72 		.ascii	"short int\000"
 2372      7420696E 
 2372      7400
 2373              	.LASF69:
 2374 0084 73746F70 		.ascii	"stopMotor2AndUpdate\000"
 2374      4D6F746F 
 2374      7232416E 
 2374      64557064 
 2374      61746500 
 2375              	.LASF38:
 2376 0098 63757272 		.ascii	"currentPosition\000"
 2376      656E7450 
 2376      6F736974 
 2376      696F6E00 
 2377              	.LASF89:
 2378 00a8 536F6E69 		.ascii	"Sonic_StartEx\000"
 2378      635F5374 
 2378      61727445 
 2378      7800
 2379              	.LASF51:
 2380 00b6 64726976 		.ascii	"drivingForwardFlag\000"
 2380      696E6746 
 2380      6F727761 
 2380      7264466C 
 2380      616700
 2381              	.LASF20:
 2382 00c9 636F6C6F 		.ascii	"colour_calibration\000"
 2382      75725F63 
 2382      616C6962 
 2382      72617469 
 2382      6F6E00
 2383              	.LASF114:
 2384 00dc 6D61696E 		.ascii	"main\000"
 2384      00
 2385              	.LASF62:
 2386 00e1 62656769 		.ascii	"beginNavigation\000"
 2386      6E4E6176 
 2386      69676174 
 2386      696F6E00 
 2387              	.LASF48:
 2388 00f1 6D6F746F 		.ascii	"motor1EncoderCounts\000"
 2388      7231456E 
 2388      636F6465 
 2388      72436F75 
 2388      6E747300 
 2389              	.LASF108:
 2390 0105 436F6C6F 		.ascii	"ColourSensingInitialise\000"
 2390      75725365 
 2390      6E73696E 
 2390      67496E69 
 2390      7469616C 
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccNOUgCR.s 			page 52


 2391              	.LASF41:
 2392 011d 64657369 		.ascii	"desiredOrientation\000"
 2392      7265644F 
 2392      7269656E 
 2392      74617469 
 2392      6F6E00
 2393              	.LASF73:
 2394 0130 4D6F746F 		.ascii	"Motor_2_Encoder_Counts_ReadCounter\000"
 2394      725F325F 
 2394      456E636F 
 2394      6465725F 
 2394      436F756E 
 2395              	.LASF19:
 2396 0153 53746172 		.ascii	"StartIH\000"
 2396      74494800 
 2397              	.LASF79:
 2398 015b 436F6C6F 		.ascii	"ColourSensingCalibration\000"
 2398      75725365 
 2398      6E73696E 
 2398      6743616C 
 2398      69627261 
 2399              	.LASF94:
 2400 0174 4D6F746F 		.ascii	"Motor_1_Encoder_Counts_Start\000"
 2400      725F315F 
 2400      456E636F 
 2400      6465725F 
 2400      436F756E 
 2401              	.LASF58:
 2402 0191 6D6F7665 		.ascii	"moveBackwardAllowed\000"
 2402      4261636B 
 2402      77617264 
 2402      416C6C6F 
 2402      77656400 
 2403              	.LASF74:
 2404 01a5 64726966 		.ascii	"driftCorrect\000"
 2404      74436F72 
 2404      72656374 
 2404      00
 2405              	.LASF88:
 2406 01b2 54696D65 		.ascii	"Timer_1_ReadStatusRegister\000"
 2406      725F315F 
 2406      52656164 
 2406      53746174 
 2406      75735265 
 2407              	.LASF100:
 2408 01cd 5261636B 		.ascii	"Rack_Servo_PWM_Start\000"
 2408      5F536572 
 2408      766F5F50 
 2408      574D5F53 
 2408      74617274 
 2409              	.LASF97:
 2410 01e2 456E636F 		.ascii	"Encoder_Counts_1_Interrupt_StartEx\000"
 2410      6465725F 
 2410      436F756E 
 2410      74735F31 
 2410      5F496E74 
 2411              	.LASF99:
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccNOUgCR.s 			page 53


 2412 0205 44726966 		.ascii	"Drift_Check_Interrupt_StartEx\000"
 2412      745F4368 
 2412      65636B5F 
 2412      496E7465 
 2412      72727570 
 2413              	.LASF28:
 2414 0223 64726976 		.ascii	"driveStraightEnable\000"
 2414      65537472 
 2414      61696768 
 2414      74456E61 
 2414      626C6500 
 2415              	.LASF31:
 2416 0237 7075636B 		.ascii	"puckRackOffsetsFromWest\000"
 2416      5261636B 
 2416      4F666673 
 2416      65747346 
 2416      726F6D57 
 2417              	.LASF105:
 2418 024f 47726970 		.ascii	"Gripper_Servo_PWM_Sleep\000"
 2418      7065725F 
 2418      53657276 
 2418      6F5F5057 
 2418      4D5F536C 
 2419              	.LASF63:
 2420 0267 72756E6E 		.ascii	"running\000"
 2420      696E6700 
 2421              	.LASF46:
 2422 026f 6D6F746F 		.ascii	"motor1Enable\000"
 2422      7231456E 
 2422      61626C65 
 2422      00
 2423              	.LASF103:
 2424 027c 47726970 		.ascii	"Gripper_Servo_PWM_Start\000"
 2424      7065725F 
 2424      53657276 
 2424      6F5F5057 
 2424      4D5F5374 
 2425              	.LASF75:
 2426 0294 756C7472 		.ascii	"ultrasonicInterruptHandler\000"
 2426      61736F6E 
 2426      6963496E 
 2426      74657272 
 2426      75707448 
 2427              	.LASF54:
 2428 02af 7475726E 		.ascii	"turningRightFlag\000"
 2428      696E6752 
 2428      69676874 
 2428      466C6167 
 2428      00
 2429              	.LASF11:
 2430 02c0 666C6F61 		.ascii	"float\000"
 2430      7400
 2431              	.LASF80:
 2432 02c6 6368616E 		.ascii	"changeHeightToPuck\000"
 2432      67654865 
 2432      69676874 
 2432      546F5075 
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccNOUgCR.s 			page 54


 2432      636B00
 2433              	.LASF6:
 2434 02d9 6C6F6E67 		.ascii	"long long int\000"
 2434      206C6F6E 
 2434      6720696E 
 2434      7400
 2435              	.LASF98:
 2436 02e7 456E636F 		.ascii	"Encoder_Counts_2_Interrupt_StartEx\000"
 2436      6465725F 
 2436      436F756E 
 2436      74735F32 
 2436      5F496E74 
 2437              	.LASF70:
 2438 030a 44726966 		.ascii	"Drift_Check_Timer_ReadStatusRegister\000"
 2438      745F4368 
 2438      65636B5F 
 2438      54696D65 
 2438      725F5265 
 2439              	.LASF65:
 2440 032f 70617468 		.ascii	"pathPastBlock\000"
 2440      50617374 
 2440      426C6F63 
 2440      6B00
 2441              	.LASF83:
 2442 033d 4144435F 		.ascii	"ADC_Start\000"
 2442      53746172 
 2442      7400
 2443              	.LASF4:
 2444 0347 6C6F6E67 		.ascii	"long int\000"
 2444      20696E74 
 2444      00
 2445              	.LASF106:
 2446 0350 636F6E74 		.ascii	"control_photodiode_Write\000"
 2446      726F6C5F 
 2446      70686F74 
 2446      6F64696F 
 2446      64655F57 
 2447              	.LASF52:
 2448 0369 64726976 		.ascii	"drivingBackwardFlag\000"
 2448      696E6742 
 2448      61636B77 
 2448      61726446 
 2448      6C616700 
 2449              	.LASF34:
 2450 037d 7075636B 		.ascii	"puckPileLocation\000"
 2450      50696C65 
 2450      4C6F6361 
 2450      74696F6E 
 2450      00
 2451              	.LASF95:
 2452 038e 4D6F746F 		.ascii	"Motor_2_Encoder_Counts_Start\000"
 2452      725F325F 
 2452      456E636F 
 2452      6465725F 
 2452      436F756E 
 2453              	.LASF29:
 2454 03ab 63757272 		.ascii	"currentPuckRackScanningIndex\000"
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccNOUgCR.s 			page 55


 2454      656E7450 
 2454      75636B52 
 2454      61636B53 
 2454      63616E6E 
 2455              	.LASF101:
 2456 03c8 5261636B 		.ascii	"Rack_Servo_PWM_WriteCompare\000"
 2456      5F536572 
 2456      766F5F50 
 2456      574D5F57 
 2456      72697465 
 2457              	.LASF71:
 2458 03e4 44726966 		.ascii	"Drift_Check_Timer_Stop\000"
 2458      745F4368 
 2458      65636B5F 
 2458      54696D65 
 2458      725F5374 
 2459              	.LASF82:
 2460 03fb 55415254 		.ascii	"UART_1_Start\000"
 2460      5F315F53 
 2460      74617274 
 2460      00
 2461              	.LASF60:
 2462 0408 636F6C6F 		.ascii	"colour_flag\000"
 2462      75725F66 
 2462      6C616700 
 2463              	.LASF14:
 2464 0414 6C6F6E67 		.ascii	"long double\000"
 2464      20646F75 
 2464      626C6500 
 2465              	.LASF1:
 2466 0420 756E7369 		.ascii	"unsigned char\000"
 2466      676E6564 
 2466      20636861 
 2466      7200
 2467              	.LASF77:
 2468 042e 73707269 		.ascii	"sprintf\000"
 2468      6E746600 
 2469              	.LASF85:
 2470 0436 49444143 		.ascii	"IDAC8_1_SetRange\000"
 2470      385F315F 
 2470      53657452 
 2470      616E6765 
 2470      00
 2471              	.LASF23:
 2472 0447 61726D4D 		.ascii	"armMoving\000"
 2472      6F76696E 
 2472      6700
 2473              	.LASF50:
 2474 0451 6D6F7665 		.ascii	"moveNow\000"
 2474      4E6F7700 
 2475              	.LASF33:
 2476 0459 626C6F63 		.ascii	"block_edge_location\000"
 2476      6B5F6564 
 2476      67655F6C 
 2476      6F636174 
 2476      696F6E00 
 2477              	.LASF7:
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccNOUgCR.s 			page 56


 2478 046d 6C6F6E67 		.ascii	"long long unsigned int\000"
 2478      206C6F6E 
 2478      6720756E 
 2478      7369676E 
 2478      65642069 
 2479              	.LASF109:
 2480 0484 436F6C6F 		.ascii	"ColourSensingDebug\000"
 2480      75725365 
 2480      6E73696E 
 2480      67446562 
 2480      756700
 2481              	.LASF107:
 2482 0497 636F6E74 		.ascii	"control_led_Write\000"
 2482      726F6C5F 
 2482      6C65645F 
 2482      57726974 
 2482      6500
 2483              	.LASF21:
 2484 04a9 73657276 		.ascii	"servo_testing\000"
 2484      6F5F7465 
 2484      7374696E 
 2484      6700
 2485              	.LASF8:
 2486 04b7 756E7369 		.ascii	"unsigned int\000"
 2486      676E6564 
 2486      20696E74 
 2486      00
 2487              	.LASF59:
 2488 04c4 69646163 		.ascii	"idac_value\000"
 2488      5F76616C 
 2488      756500
 2489              	.LASF61:
 2490 04cf 436F6C6F 		.ascii	"ColourSensingAlgorithm\000"
 2490      75725365 
 2490      6E73696E 
 2490      67416C67 
 2490      6F726974 
 2491              	.LASF84:
 2492 04e6 49444143 		.ascii	"IDAC8_1_Start\000"
 2492      385F315F 
 2492      53746172 
 2492      7400
 2493              	.LASF40:
 2494 04f4 63757272 		.ascii	"currentOrientation\000"
 2494      656E744F 
 2494      7269656E 
 2494      74617469 
 2494      6F6E00
 2495              	.LASF57:
 2496 0507 6D6F7665 		.ascii	"moveForwardAllowed\000"
 2496      466F7277 
 2496      61726441 
 2496      6C6C6F77 
 2496      656400
 2497              	.LASF67:
 2498 051a 63757272 		.ascii	"current_stage\000"
 2498      656E745F 
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccNOUgCR.s 			page 57


 2498      73746167 
 2498      6500
 2499              	.LASF104:
 2500 0528 47726970 		.ascii	"Gripper_Servo_PWM_WriteCompare\000"
 2500      7065725F 
 2500      53657276 
 2500      6F5F5057 
 2500      4D5F5772 
 2501              	.LASF81:
 2502 0547 5449415F 		.ascii	"TIA_1_Start\000"
 2502      315F5374 
 2502      61727400 
 2503              	.LASF32:
 2504 0553 73776565 		.ascii	"sweeping\000"
 2504      70696E67 
 2504      00
 2505              	.LASF13:
 2506 055c 63686172 		.ascii	"char\000"
 2506      00
 2507              	.LASF43:
 2508 0561 4D315F42 		.ascii	"M1_BD\000"
 2508      4400
 2509              	.LASF10:
 2510 0567 696E7433 		.ascii	"int32_t\000"
 2510      325F7400 
 2511              	.LASF22:
 2512 056f 6C6F636B 		.ascii	"lock\000"
 2512      00
 2513              	.LASF66:
 2514 0574 504C414E 		.ascii	"PLAN_SCAN_VERTICAL\000"
 2514      5F534341 
 2514      4E5F5645 
 2514      52544943 
 2514      414C00
 2515              	.LASF37:
 2516 0587 6D6F7669 		.ascii	"moving\000"
 2516      6E6700
 2517              	.LASF68:
 2518 058e 73746F70 		.ascii	"stopMotor1AndUpdate\000"
 2518      4D6F746F 
 2518      7231416E 
 2518      64557064 
 2518      61746500 
 2519              	.LASF87:
 2520 05a2 54696D65 		.ascii	"Timer_1_Start\000"
 2520      725F315F 
 2520      53746172 
 2520      7400
 2521              	.LASF39:
 2522 05b0 64657369 		.ascii	"desiredPosition\000"
 2522      72656450 
 2522      6F736974 
 2522      696F6E00 
 2523              	.LASF42:
 2524 05c0 4D315F46 		.ascii	"M1_FD\000"
 2524      4400
 2525              	.LASF3:
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccNOUgCR.s 			page 58


 2526 05c6 73686F72 		.ascii	"short unsigned int\000"
 2526      7420756E 
 2526      7369676E 
 2526      65642069 
 2526      6E7400
 2527              	.LASF86:
 2528 05d9 49444143 		.ascii	"IDAC8_1_SetValue\000"
 2528      385F315F 
 2528      53657456 
 2528      616C7565 
 2528      00
 2529              	.LASF112:
 2530 05ea 6D61696E 		.ascii	"main.c\000"
 2530      2E6300
 2531              	.LASF5:
 2532 05f1 6C6F6E67 		.ascii	"long unsigned int\000"
 2532      20756E73 
 2532      69676E65 
 2532      6420696E 
 2532      7400
 2533              	.LASF90:
 2534 0603 53746172 		.ascii	"Start_StartEx\000"
 2534      745F5374 
 2534      61727445 
 2534      7800
 2535              	.LASF12:
 2536 0611 646F7562 		.ascii	"double\000"
 2536      6C6500
 2537              	.LASF78:
 2538 0618 55415254 		.ascii	"UART_1_PutString\000"
 2538      5F315F50 
 2538      75745374 
 2538      72696E67 
 2538      00
 2539              	.LASF16:
 2540 0629 456E636F 		.ascii	"Encoder_Counts_1_IH\000"
 2540      6465725F 
 2540      436F756E 
 2540      74735F31 
 2540      5F494800 
 2541              	.LASF36:
 2542 063d 73746174 		.ascii	"state\000"
 2542      6500
 2543              	.LASF47:
 2544 0643 6D6F746F 		.ascii	"motor2Enable\000"
 2544      7232456E 
 2544      61626C65 
 2544      00
 2545              	.LASF18:
 2546 0650 44726966 		.ascii	"Drift_Check_IH\000"
 2546      745F4368 
 2546      65636B5F 
 2546      494800
 2547              	.LASF25:
 2548 065f 7075636B 		.ascii	"puck_scan\000"
 2548      5F736361 
 2548      6E00
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccNOUgCR.s 			page 59


 2549              	.LASF9:
 2550 0669 5F5F696E 		.ascii	"__int32_t\000"
 2550      7433325F 
 2550      7400
 2551              	.LASF30:
 2552 0673 7075636B 		.ascii	"puckRackColours\000"
 2552      5261636B 
 2552      436F6C6F 
 2552      75727300 
 2553              	.LASF113:
 2554 0683 433A5C55 		.ascii	"C:\\Users\\Misha\\Documents\\PSoC Creator\\ECE3091_"
 2554      73657273 
 2554      5C4D6973 
 2554      68615C44 
 2554      6F63756D 
 2555 06b1 47726F75 		.ascii	"Group17\\Group17RobotReal\\Group17Robot.cydsn\000"
 2555      7031375C 
 2555      47726F75 
 2555      70313752 
 2555      6F626F74 
 2556              	.LASF55:
 2557 06dd 6D6F7665 		.ascii	"moveLeftAllowed\000"
 2557      4C656674 
 2557      416C6C6F 
 2557      77656400 
 2558              	.LASF15:
 2559 06ed 73697A65 		.ascii	"sizetype\000"
 2559      74797065 
 2559      00
 2560              	.LASF26:
 2561 06f6 6F757470 		.ascii	"output\000"
 2561      757400
 2562              	.LASF56:
 2563 06fd 6D6F7665 		.ascii	"moveRightAllowed\000"
 2563      52696768 
 2563      74416C6C 
 2563      6F776564 
 2563      00
 2564              	.LASF45:
 2565 070e 4D325F42 		.ascii	"M2_BD\000"
 2565      4400
 2566              	.LASF27:
 2567 0714 49544D5F 		.ascii	"ITM_RxBuffer\000"
 2567      52784275 
 2567      66666572 
 2567      00
 2568              	.LASF111:
 2569 0721 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 2569      43313120 
 2569      352E342E 
 2569      31203230 
 2569      31363036 
 2570 0754 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 2570      20726576 
 2570      6973696F 
 2570      6E203233 
 2570      37373135 
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccNOUgCR.s 			page 60


 2571 0787 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 2571      66756E63 
 2571      74696F6E 
 2571      2D736563 
 2571      74696F6E 
 2572              	.LASF96:
 2573 07af 44726966 		.ascii	"Drift_Check_Timer_Start\000"
 2573      745F4368 
 2573      65636B5F 
 2573      54696D65 
 2573      725F5374 
 2574              	.LASF76:
 2575 07c7 43794465 		.ascii	"CyDelay\000"
 2575      6C617900 
 2576              	.LASF91:
 2577 07cf 4D6F746F 		.ascii	"Motor_1_driver_Start\000"
 2577      725F315F 
 2577      64726976 
 2577      65725F53 
 2577      74617274 
 2578              	.LASF64:
 2579 07e4 70617468 		.ascii	"pathToPucks\000"
 2579      546F5075 
 2579      636B7300 
 2580              	.LASF92:
 2581 07f0 4D6F746F 		.ascii	"Motor_2_driver_Start\000"
 2581      725F325F 
 2581      64726976 
 2581      65725F53 
 2581      74617274 
 2582              	.LASF44:
 2583 0805 4D325F46 		.ascii	"M2_FD\000"
 2583      4400
 2584              	.LASF35:
 2585 080b 696E6974 		.ascii	"initialisation\000"
 2585      69616C69 
 2585      73617469 
 2585      6F6E00
 2586              	.LASF102:
 2587 081a 5261636B 		.ascii	"Rack_Servo_PWM_Sleep\000"
 2587      5F536572 
 2587      766F5F50 
 2587      574D5F53 
 2587      6C656570 
 2588              	.LASF72:
 2589 082f 4D6F746F 		.ascii	"Motor_1_Encoder_Counts_ReadCounter\000"
 2589      725F315F 
 2589      456E636F 
 2589      6465725F 
 2589      436F756E 
 2590              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
