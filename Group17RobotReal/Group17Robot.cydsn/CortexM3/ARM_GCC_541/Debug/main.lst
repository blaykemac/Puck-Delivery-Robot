ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccg9Xjeg.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.TIH,"ax",%progbits
  20              		.align	2
  21              		.global	TIH
  22              		.thumb
  23              		.thumb_func
  24              		.type	TIH, %function
  25              	TIH:
  26              	.LFB64:
  27              		.file 1 "main.c"
   1:main.c        **** 
   2:main.c        **** /* ========================================
   3:main.c        ****  *
   4:main.c        ****  * Copyright Group 17, 2019
   5:main.c        ****  * All Rights Reserved
   6:main.c        ****  * UNPUBLISHED, LICENSED SOFTWARE.
   7:main.c        ****  *
   8:main.c        ****  * CONFIDENTIAL AND PROPRIETARY INFORMATION
   9:main.c        ****  * WHICH IS THE PROPERTY OF Blayke, Misha, Nidhin.
  10:main.c        ****  *
  11:main.c        ****  * ========================================
  12:main.c        **** */
  13:main.c        **** 
  14:main.c        **** // * PSOC LIBRARY * //
  15:main.c        **** #include "project.h"
  16:main.c        **** 
  17:main.c        **** // * C LIBRARIES * // 
  18:main.c        **** #include <stdlib.h>
  19:main.c        **** #include <stdio.h>
  20:main.c        **** #include <math.h>
  21:main.c        **** 
  22:main.c        **** // * OUR LIBRARIES * //
  23:main.c        **** #include "main.h"
  24:main.c        **** #include "colour.h"
  25:main.c        **** #include "ultrasonic.h" 
  26:main.c        **** #include "servo.h"
  27:main.c        **** #include "mishamotor.h"
  28:main.c        **** #include "customMath.h"
  29:main.c        **** #include "navigation.h"
  30:main.c        **** 
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccg9Xjeg.s 			page 2


  31:main.c        **** 
  32:main.c        **** extern char output[32];   
  33:main.c        **** 
  34:main.c        **** // * STATE VARIABLES * //
  35:main.c        **** int state = STATE_SCAN_PLAN;
  36:main.c        **** int running = 1;
  37:main.c        **** int sweeping = 0;
  38:main.c        **** float block_edge_location[4] = {0,0,0,0}; // N E S W edge positions respectively
  39:main.c        **** 
  40:main.c        **** // * PUCK CONSTRUCTION VARIABLES * //
  41:main.c        **** int currentPuckStackSize = 0; // How many pucks are currently on the construction plate
  42:main.c        **** int puckRackColours[5] = {BLANK,BLANK,BLANK,BLANK,BLANK}; // 5 slots in puck rack.
  43:main.c        **** int puckConstructionPlan[3] = {BLANK,BLANK,BLANK};
  44:main.c        **** int currentPuckRackScanningIndex = 0;
  45:main.c        **** int puckRackOffsetsFromWest[5] = {PUCK_RACK_0_WEST_DISTANCE,
  46:main.c        ****                                 PUCK_RACK_1_WEST_DISTANCE,
  47:main.c        ****                                 PUCK_RACK_2_WEST_DISTANCE,
  48:main.c        ****                                 PUCK_RACK_3_WEST_DISTANCE,
  49:main.c        ****                                 PUCK_RACK_4_WEST_DISTANCE };
  50:main.c        **** 
  51:main.c        **** float horizontalPuckGrid = 0;
  52:main.c        **** 
  53:main.c        **** // * NAVIGATION AND POSITION VARIABLES * //
  54:main.c        **** 
  55:main.c        **** int beginNavigation = 0; // Allow us to break out of the intial phase when powered up
  56:main.c        **** 
  57:main.c        **** int pathToPucks; // This will give us a corridor that we should initially take when trying to go to
  58:main.c        **** int pathPastBlock;
  59:main.c        **** int block_location[4] = {0,0,0,0};      // The block location values
  60:main.c        ****                                         //#define NORTH 0
  61:main.c        ****                                         //#define EAST 1
  62:main.c        ****                                         //#define SOUTH 2
  63:main.c        ****                                         //#define WEST 3
  64:main.c        **** int puck_location[4] = {0,0,0,0};       // The block location values
  65:main.c        ****                                         //#define NORTH 0
  66:main.c        ****                                         //#define EAST 1
  67:main.c        ****                                         //#define SOUTH 2
  68:main.c        ****                                         //#define WEST 3
  69:main.c        **** 
  70:main.c        **** int safety_override = FALSE;            
  71:main.c        **** 
  72:main.c        **** // These block clearance variables are only true if we have enough room either side of the block to
  73:main.c        **** // And only true for the puck clearance variables if there is enough room to be able to turn at the
  74:main.c        **** short int blockEastClearance = 0;
  75:main.c        **** short int blockWestClearance = 0;
  76:main.c        **** short int puckEastClearance = 0;
  77:main.c        **** short int puckWestClearance = 0;
  78:main.c        **** 
  79:main.c        **** // * COLOUR VARIABLES * //
  80:main.c        **** 
  81:main.c        **** int idac_value = 0;  
  82:main.c        **** int colour_flag = 1;                    // sets which photodiode to use 
  83:main.c        **** int colour_sensing_algorithm = 0;      // Determines which colour sensing algorithm to use:
  84:main.c        ****                                                 // 0: Wall algorithm
  85:main.c        ****                                             // 1: Claw algorithm
  86:main.c        ****                                                 // 2: old algorithm
  87:main.c        **** 
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccg9Xjeg.s 			page 3


  88:main.c        **** int moving = 0; // Temp to stop while loop from repeated runs of scanning plan code
  89:main.c        **** 
  90:main.c        **** const int PLAN_SCAN_VERTICAL = 10; // Set to ultrasonic distance at the home base 
  91:main.c        **** 
  92:main.c        **** int current_stage = 1;      // There are 3 stages, we start at 1
  93:main.c        **** 
  94:main.c        **** 
  95:main.c        **** // GLOBAL VARIABLE
  96:main.c        **** int distance_returned_global;
  97:main.c        **** 
  98:main.c        **** 
  99:main.c        **** // * INTERRUPT HANDLING * // 
 100:main.c        **** CY_ISR(TIH)                             // Ultrasonic ISR Definition
 101:main.c        **** {
  28              		.loc 1 101 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 08B5     		push	{r3, lr}
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 3, -8
  35              		.cfi_offset 14, -4
 102:main.c        ****     ultrasonicInterruptHandler();
  36              		.loc 1 102 0
  37 0002 FFF7FEFF 		bl	ultrasonicInterruptHandler
  38              	.LVL0:
  39 0006 08BD     		pop	{r3, pc}
  40              		.cfi_endproc
  41              	.LFE64:
  42              		.size	TIH, .-TIH
  43              		.section	.text.StartIH,"ax",%progbits
  44              		.align	2
  45              		.global	StartIH
  46              		.thumb
  47              		.thumb_func
  48              		.type	StartIH, %function
  49              	StartIH:
  50              	.LFB65:
 103:main.c        **** }
 104:main.c        **** 
 105:main.c        **** CY_ISR(StartIH)                             // Ultrasonic ISR Definition
 106:main.c        **** {
  51              		.loc 1 106 0
  52              		.cfi_startproc
  53              		@ args = 0, pretend = 0, frame = 0
  54              		@ frame_needed = 0, uses_anonymous_args = 0
  55 0000 08B5     		push	{r3, lr}
  56              		.cfi_def_cfa_offset 8
  57              		.cfi_offset 3, -8
  58              		.cfi_offset 14, -4
 107:main.c        ****     CyDelay(100);
  59              		.loc 1 107 0
  60 0002 6420     		movs	r0, #100
  61 0004 FFF7FEFF 		bl	CyDelay
  62              	.LVL1:
 108:main.c        ****     
 109:main.c        ****     beginNavigation = 1;
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccg9Xjeg.s 			page 4


  63              		.loc 1 109 0
  64 0008 0122     		movs	r2, #1
  65 000a 034B     		ldr	r3, .L5
  66 000c 1A60     		str	r2, [r3]
 110:main.c        ****     colour_flag = 0; 
  67              		.loc 1 110 0
  68 000e 0022     		movs	r2, #0
  69 0010 024B     		ldr	r3, .L5+4
  70 0012 1A60     		str	r2, [r3]
  71 0014 08BD     		pop	{r3, pc}
  72              	.L6:
  73 0016 00BF     		.align	2
  74              	.L5:
  75 0018 00000000 		.word	.LANCHOR0
  76 001c 00000000 		.word	.LANCHOR1
  77              		.cfi_endproc
  78              	.LFE65:
  79              		.size	StartIH, .-StartIH
  80              		.section	.text.main,"ax",%progbits
  81              		.align	2
  82              		.global	main
  83              		.thumb
  84              		.thumb_func
  85              		.type	main, %function
  86              	main:
  87              	.LFB66:
 111:main.c        **** }
 112:main.c        ****  
 113:main.c        **** //Interrupt service routines for dcmotor function
 114:main.c        **** /*
 115:main.c        **** CY_ISR(Encoder_Counts_1_IH){
 116:main.c        ****     stopMotor1AndUpdate();
 117:main.c        **** }
 118:main.c        **** 
 119:main.c        **** CY_ISR(Encoder_Counts_2_IH){
 120:main.c        ****     stopMotor2AndUpdate();
 121:main.c        **** }
 122:main.c        **** 
 123:main.c        **** CY_ISR(Drift_Check_IH){    
 124:main.c        ****     Drift_Check_Timer_ReadStatusRegister(); //Clears the interrupt
 125:main.c        ****     Drift_Check_Timer_Stop(); //Stops the timer
 126:main.c        ****     motor1EncoderCounts = Motor_1_Encoder_Counts_ReadCounter();
 127:main.c        ****     motor2EncoderCounts = Motor_2_Encoder_Counts_ReadCounter();
 128:main.c        ****     driftCorrect(); //Does checking
 129:main.c        **** }
 130:main.c        **** */
 131:main.c        **** 
 132:main.c        **** int main(void)
 133:main.c        **** {
  88              		.loc 1 133 0
  89              		.cfi_startproc
  90              		@ args = 0, pretend = 0, frame = 0
  91              		@ frame_needed = 0, uses_anonymous_args = 0
  92 0000 70B5     		push	{r4, r5, r6, lr}
  93              		.cfi_def_cfa_offset 16
  94              		.cfi_offset 4, -16
  95              		.cfi_offset 5, -12
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccg9Xjeg.s 			page 5


  96              		.cfi_offset 6, -8
  97              		.cfi_offset 14, -4
  98 0002 82B0     		sub	sp, sp, #8
  99              		.cfi_def_cfa_offset 24
 134:main.c        ****     CyGlobalIntEnable; /* Enable global interrupts. */
 100              		.loc 1 134 0
 101              		.syntax unified
 102              	@ 134 "main.c" 1
 103 0004 62B6     		CPSIE   i
 104              	@ 0 "" 2
 135:main.c        **** 
 136:main.c        ****     
 137:main.c        ****     TIA_1_Start();
 105              		.loc 1 137 0
 106              		.thumb
 107              		.syntax unified
 108 0006 FFF7FEFF 		bl	TIA_1_Start
 109              	.LVL2:
 138:main.c        ****     UART_1_Start();
 110              		.loc 1 138 0
 111 000a FFF7FEFF 		bl	UART_1_Start
 112              	.LVL3:
 139:main.c        ****     UART_1_PutString("UART commencing... \n");
 113              		.loc 1 139 0
 114 000e 9748     		ldr	r0, .L26
 115 0010 FFF7FEFF 		bl	UART_1_PutString
 116              	.LVL4:
 140:main.c        ****     ADC_Start();
 117              		.loc 1 140 0
 118 0014 FFF7FEFF 		bl	ADC_Start
 119              	.LVL5:
 141:main.c        ****     IDAC8_1_Start();
 120              		.loc 1 141 0
 121 0018 FFF7FEFF 		bl	IDAC8_1_Start
 122              	.LVL6:
 142:main.c        ****     
 143:main.c        ****     // DEBUGGING:
 144:main.c        ****     int colour_calibration = FALSE;             // Do we want to calibrate the sensor? 
 145:main.c        ****     int servo_testing = FALSE;                  // Do the servos need to be tested?      
 146:main.c        ****     int motor_testing = FALSE;
 147:main.c        ****     int ultrasonic_testing = FALSE;  
 148:main.c        ****     
 149:main.c        ****     
 150:main.c        ****     // IDAC initialisation: 
 151:main.c        ****     IDAC8_1_SetRange(IDAC8_1_RANGE_32uA);       // Sets the range between 0 and 32uA
 123              		.loc 1 151 0
 124 001c 0020     		movs	r0, #0
 125 001e FFF7FEFF 		bl	IDAC8_1_SetRange
 126              	.LVL7:
 152:main.c        ****     IDAC8_1_SetValue(idac_value);               // set a value between 0 and 255
 127              		.loc 1 152 0
 128 0022 934D     		ldr	r5, .L26+4
 129 0024 2879     		ldrb	r0, [r5, #4]	@ zero_extendqisi2
 130 0026 FFF7FEFF 		bl	IDAC8_1_SetValue
 131              	.LVL8:
 153:main.c        ****     
 154:main.c        ****     // Colour Sensing Initialisation & Debugging:
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccg9Xjeg.s 			page 6


 155:main.c        ****     colour_sensing_algorithm = 0;
 132              		.loc 1 155 0
 133 002a 0024     		movs	r4, #0
 134 002c AC60     		str	r4, [r5, #8]
 156:main.c        ****     control_photodiode_Write(colour_sensing_algorithm);            // controls which photodiode is 
 135              		.loc 1 156 0
 136 002e 2046     		mov	r0, r4
 137 0030 FFF7FEFF 		bl	control_photodiode_Write
 138              	.LVL9:
 157:main.c        ****                                                 // 0: wall
 158:main.c        ****                                                 // 1: claw
 159:main.c        ****     control_led_Write(1);   CyDelay(500);  // Ensures all the RGBs are working
 139              		.loc 1 159 0
 140 0034 0120     		movs	r0, #1
 141 0036 FFF7FEFF 		bl	control_led_Write
 142              	.LVL10:
 143 003a 4FF4FA70 		mov	r0, #500
 144 003e FFF7FEFF 		bl	CyDelay
 145              	.LVL11:
 160:main.c        ****     control_led_Write(2);   CyDelay(500);
 146              		.loc 1 160 0
 147 0042 0220     		movs	r0, #2
 148 0044 FFF7FEFF 		bl	control_led_Write
 149              	.LVL12:
 150 0048 4FF4FA70 		mov	r0, #500
 151 004c FFF7FEFF 		bl	CyDelay
 152              	.LVL13:
 161:main.c        ****     control_led_Write(3);   CyDelay(500);
 153              		.loc 1 161 0
 154 0050 0320     		movs	r0, #3
 155 0052 FFF7FEFF 		bl	control_led_Write
 156              	.LVL14:
 157 0056 4FF4FA70 		mov	r0, #500
 158 005a FFF7FEFF 		bl	CyDelay
 159              	.LVL15:
 162:main.c        ****     control_led_Write(0);   CyDelay(500);
 160              		.loc 1 162 0
 161 005e 2046     		mov	r0, r4
 162 0060 FFF7FEFF 		bl	control_led_Write
 163              	.LVL16:
 164 0064 4FF4FA70 		mov	r0, #500
 165 0068 FFF7FEFF 		bl	CyDelay
 166              	.LVL17:
 163:main.c        ****     colourSensingInitialise();                  // Initialises the colour sensor
 167              		.loc 1 163 0
 168 006c FFF7FEFF 		bl	colourSensingInitialise
 169              	.LVL18:
 164:main.c        ****     
 165:main.c        **** 
 166:main.c        ****     //Servos for the arm instatination
 167:main.c        ****     Rack_Servo_PWM_Start();
 170              		.loc 1 167 0
 171 0070 FFF7FEFF 		bl	Rack_Servo_PWM_Start
 172              	.LVL19:
 168:main.c        ****     Rack_Servo_PWM_WriteCompare(1000);          // BRINGs rack to highest position, so not to mess 
 173              		.loc 1 168 0
 174 0074 4FF47A70 		mov	r0, #1000
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccg9Xjeg.s 			page 7


 175 0078 FFF7FEFF 		bl	Rack_Servo_PWM_WriteCompare
 176              	.LVL20:
 169:main.c        ****     CyDelay(500);
 177              		.loc 1 169 0
 178 007c 4FF4FA70 		mov	r0, #500
 179 0080 FFF7FEFF 		bl	CyDelay
 180              	.LVL21:
 170:main.c        ****     Rack_Servo_PWM_Sleep();
 181              		.loc 1 170 0
 182 0084 FFF7FEFF 		bl	Rack_Servo_PWM_Sleep
 183              	.LVL22:
 171:main.c        ****     
 172:main.c        ****     Gripper_Servo_PWM_Start();
 184              		.loc 1 172 0
 185 0088 FFF7FEFF 		bl	Gripper_Servo_PWM_Start
 186              	.LVL23:
 173:main.c        ****     Gripper_Servo_PWM_WriteCompare(1120);       //This is the open gripper position
 187              		.loc 1 173 0
 188 008c 4FF48C60 		mov	r0, #1120
 189 0090 FFF7FEFF 		bl	Gripper_Servo_PWM_WriteCompare
 190              	.LVL24:
 174:main.c        ****     CyDelay(500);
 191              		.loc 1 174 0
 192 0094 4FF4FA70 		mov	r0, #500
 193 0098 FFF7FEFF 		bl	CyDelay
 194              	.LVL25:
 175:main.c        ****     Gripper_Servo_PWM_Sleep();
 195              		.loc 1 175 0
 196 009c FFF7FEFF 		bl	Gripper_Servo_PWM_Sleep
 197              	.LVL26:
 176:main.c        ****     
 177:main.c        ****     // Misha Motors Initialisation:
 178:main.c        ****     Motor_Left_Driver_Start();
 198              		.loc 1 178 0
 199 00a0 FFF7FEFF 		bl	Motor_Left_Driver_Start
 200              	.LVL27:
 179:main.c        ****     Motor_Left_Driver_Sleep();                  // Puts motor to sleep
 201              		.loc 1 179 0
 202 00a4 FFF7FEFF 		bl	Motor_Left_Driver_Sleep
 203              	.LVL28:
 180:main.c        ****     Motor_Right_Driver_Start();
 204              		.loc 1 180 0
 205 00a8 FFF7FEFF 		bl	Motor_Right_Driver_Start
 206              	.LVL29:
 181:main.c        ****     Motor_Right_Driver_Sleep();                 // Puts motor to sleep
 207              		.loc 1 181 0
 208 00ac FFF7FEFF 		bl	Motor_Right_Driver_Sleep
 209              	.LVL30:
 182:main.c        ****     
 183:main.c        ****     Motor_Left_Decoder_Start();
 210              		.loc 1 183 0
 211 00b0 FFF7FEFF 		bl	Motor_Left_Decoder_Start
 212              	.LVL31:
 184:main.c        ****     Motor_Right_Decoder_Start();
 213              		.loc 1 184 0
 214 00b4 FFF7FEFF 		bl	Motor_Right_Decoder_Start
 215              	.LVL32:
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccg9Xjeg.s 			page 8


 185:main.c        ****     
 186:main.c        ****     internal_orientation = WEST;                // robot initial starts in the East direction
 216              		.loc 1 186 0
 217 00b8 0322     		movs	r2, #3
 218 00ba 6E4B     		ldr	r3, .L26+8
 219 00bc 1A60     		str	r2, [r3]
 187:main.c        ****    
 188:main.c        ****     // Timer and ISR instantiation
 189:main.c        ****     Timer_1_Start();                
 220              		.loc 1 189 0
 221 00be FFF7FEFF 		bl	Timer_1_Start
 222              	.LVL33:
 190:main.c        ****     Timer_1_ReadStatusRegister();
 223              		.loc 1 190 0
 224 00c2 FFF7FEFF 		bl	Timer_1_ReadStatusRegister
 225              	.LVL34:
 191:main.c        ****     Sonic_StartEx(TIH);
 226              		.loc 1 191 0
 227 00c6 6C48     		ldr	r0, .L26+12
 228 00c8 FFF7FEFF 		bl	Sonic_StartEx
 229              	.LVL35:
 192:main.c        ****     Start_StartEx(StartIH);
 230              		.loc 1 192 0
 231 00cc 6B48     		ldr	r0, .L26+16
 232 00ce FFF7FEFF 		bl	Start_StartEx
 233              	.LVL36:
 193:main.c        ****     beginNavigation = 0;
 234              		.loc 1 193 0
 235 00d2 2C60     		str	r4, [r5]
 194:main.c        ****     
 195:main.c        ****     // Ultrasonic Initialisation & Calibration:
 196:main.c        ****     // The ultrasonics take several test measurements to ensure they are working
 197:main.c        ****         
 198:main.c        ****     UART_1_PutString("Ultrasonic Calibration tests: \n");
 236              		.loc 1 198 0
 237 00d4 6A48     		ldr	r0, .L26+20
 238 00d6 FFF7FEFF 		bl	UART_1_PutString
 239              	.LVL37:
 199:main.c        ****     safetyDistanceCheck();
 240              		.loc 1 199 0
 241 00da FFF7FEFF 		bl	safetyDistanceCheck
 242              	.LVL38:
 200:main.c        ****     safetyDistanceCheck();
 243              		.loc 1 200 0
 244 00de FFF7FEFF 		bl	safetyDistanceCheck
 245              	.LVL39:
 201:main.c        ****     safetyDistanceCheck();
 246              		.loc 1 201 0
 247 00e2 FFF7FEFF 		bl	safetyDistanceCheck
 248              	.LVL40:
 249              	.LBB2:
 202:main.c        ****     
 203:main.c        ****     /*  OLD CODE FROM NIDHIN:
 204:main.c        ****     //Initialising DC motors
 205:main.c        ****     Motor_1_driver_Start();
 206:main.c        ****     Motor_2_driver_Start();
 207:main.c        ****     motorDutyCycleUpdate(0,0,0,0);//Have the motors stand still
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccg9Xjeg.s 			page 9


 208:main.c        ****     
 209:main.c        ****     
 210:main.c        ****     //Initialising counters
 211:main.c        ****     Motor_1_Encoder_Counts_Start();
 212:main.c        ****     Motor_2_Encoder_Counts_Start();
 213:main.c        ****     
 214:main.c        ****     //Initialising timers
 215:main.c        ****     Drift_Check_Timer_Start();
 216:main.c        ****     
 217:main.c        ****     //Starts and enables the interrupts for the motor encoder counts
 218:main.c        ****     Encoder_Counts_1_Interrupt_StartEx(Encoder_Counts_1_IH); 
 219:main.c        ****     Encoder_Counts_2_Interrupt_StartEx(Encoder_Counts_2_IH);
 220:main.c        ****     Drift_Check_Interrupt_StartEx(Drift_Check_IH);		
 221:main.c        ****     */
 222:main.c        **** 
 223:main.c        ****     // Main Loop for States
 224:main.c        ****         
 225:main.c        ****     for(;;)
 226:main.c        ****     {   
 227:main.c        ****         
 228:main.c        **** 
 229:main.c        **** 
 230:main.c        ****         // Start button is pressed so quit sensing
 231:main.c        **** 
 232:main.c        ****         /*
 233:main.c        ****         while (beginNavigation == 0) {
 234:main.c        ****             distanceCheck();           
 235:main.c        ****             UART_1_PutString("\n");
 236:main.c        ****             CyDelay(1000); // Check distance once a second.
 237:main.c        ****                 
 238:main.c        ****         }
 239:main.c        ****         */
 240:main.c        ****         
 241:main.c        ****         
 242:main.c        ****         // Enter picking up puck state for the moment FOR TESTING
 243:main.c        ****         //colour_sensing_algorithm = 1;
 244:main.c        ****         //control_photodiode_Write(1);
 245:main.c        ****         //state = STATE_FIND_REQUIRED_PUCK;
 246:main.c        ****         
 247:main.c        ****         // Colour Calibration: 
 248:main.c        ****         if (colour_calibration)
 249:main.c        ****         {
 250:main.c        ****             int lock = FALSE;   
 251:main.c        ****             do 
 252:main.c        ****                 {   
 253:main.c        ****                     if (lock == FALSE) 
 254:main.c        ****                     {
 255:main.c        ****                         
 256:main.c        ****                         control_photodiode_Write(CLAW_SENSING); 
 257:main.c        ****                         changeHeightToPuck(0);
 258:main.c        **** 
 259:main.c        ****                         UART_1_PutString("Count \t BLANK \t RED \t GREEN \t BLUE \t \n");
 260:main.c        ****                         for (int i = 0; i < 50; i++)
 261:main.c        ****                         {
 262:main.c        ****                         sprintf(output, "%d \t", i);
 263:main.c        ****                         UART_1_PutString(output);
 264:main.c        ****                         colourSensingCalibration(); 
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccg9Xjeg.s 			page 10


 265:main.c        ****                         UART_1_PutString("\n");
 266:main.c        ****                         }         
 267:main.c        ****                         lock = TRUE;    
 268:main.c        ****                     }
 269:main.c        ****             } while (lock == TRUE);    
 270:main.c        ****         }
 271:main.c        ****         
 272:main.c        ****         // Servo Testing:
 273:main.c        ****         if (servo_testing) 
 274:main.c        ****         {
 275:main.c        ****             int lock = FALSE;
 276:main.c        ****             do 
 277:main.c        ****                 {   
 278:main.c        ****                     if (lock == FALSE) 
 279:main.c        ****                     {
 280:main.c        ****                         UART_1_PutString("Servo Testing: ");
 281:main.c        ****                         
 282:main.c        ****                         armMoving();
 283:main.c        ****                         
 284:main.c        ****                         
 285:main.c        ****                         for(int i = 0; i < 4; i++)
 286:main.c        ****                         {
 287:main.c        ****                             changeHeightToPuck(i);
 288:main.c        ****                             CyDelay(1000);
 289:main.c        ****                         }
 290:main.c        **** 
 291:main.c        ****                         lock = TRUE;    
 292:main.c        ****                     }
 293:main.c        ****             } while (lock == TRUE);    
 294:main.c        ****         }    
 295:main.c        ****                 
 296:main.c        ****         // Motor Testing: 
 297:main.c        ****         if (motor_testing)
 298:main.c        ****         {
 299:main.c        ****             int lock = FALSE;
 300:main.c        ****             do 
 301:main.c        ****                 {   
 302:main.c        ****                     if (lock == FALSE) 
 303:main.c        ****                     {
 304:main.c        ****                         UART_1_PutString("Motor Testing: \n");
 305:main.c        **** 
 306:main.c        ****                         //mishaMoveForward();
 307:main.c        ****                         //mishaMoveBackward();
 308:main.c        ****                         //mishaMoveDynamic(-300);
 309:main.c        ****                         
 310:main.c        ****                         mishaSwivel(-180, SPEED);
 311:main.c        ****                         
 312:main.c        ****                         lock = TRUE;    
 313:main.c        ****                     }
 314:main.c        ****             } while (lock == TRUE);    
 315:main.c        ****         }    
 316:main.c        ****         
 317:main.c        ****         // Ultrasonic Testing:
 318:main.c        ****         
 319:main.c        ****         if (ultrasonic_testing) 
 320:main.c        ****         {
 321:main.c        ****             int lock = FALSE;
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccg9Xjeg.s 			page 11


 322:main.c        ****             do 
 323:main.c        ****                 {   
 324:main.c        ****                     if (lock == FALSE) 
 325:main.c        ****                     {
 326:main.c        ****                         UART_1_PutString("Ultrasonic Testing: \n");
 327:main.c        ****                         
 328:main.c        ****                         //armMoving();
 329:main.c        ****                         //straightAdjust();
 330:main.c        ****                         
 331:main.c        ****                         int dick = 2;
 332:main.c        ****                         while(0) {
 333:main.c        ****                             distanceSensor(dick);
 334:main.c        ****                             CyDelay(500);
 335:main.c        ****                             sprintf(output, "%d \t %d \t %d \t %d \t %d \n", ultrasonic_distances_m
 336:main.c        ****                                                      ultrasonic_distances_mm[1],
 337:main.c        ****                                                      ultrasonic_distances_mm[2],
 338:main.c        ****                                                         ultrasonic_distances_mm[3],
 339:main.c        ****                                                         ultrasonic_distances_mm[4]);
 340:main.c        ****                             UART_1_PutString(output);
 341:main.c        ****                         }
 342:main.c        ****                         // 0 gave front left    // front left
 343:main.c        ****                         // 1 gave front right   // front right 
 344:main.c        ****                         // 2 gave back sensor   // side left now??? 
 345:main.c        ****                         // 3 gave side right    // side right 
 346:main.c        ****                         // 4 gave back sensor   // back sensor
 347:main.c        ****                         
 348:main.c        ****                         while(0) {
 349:main.c        ****                             for (int i = 0; i < 5; i++)
 350:main.c        ****                             {
 351:main.c        ****                                 distanceSensor(i);
 352:main.c        ****                                 CyDelay(100);
 353:main.c        ****                                 sprintf(output, "%d \t", ultrasonic_distances_mm[i]);
 354:main.c        ****                                 UART_1_PutString(output);
 355:main.c        ****                             }
 356:main.c        ****                             UART_1_PutString("\n");
 357:main.c        ****                         }
 358:main.c        ****                         
 359:main.c        ****                         
 360:main.c        ****                         
 361:main.c        ****                         
 362:main.c        ****                         // TEST FIRING
 363:main.c        ****                         for (int i = 0; i < 5; i++)
 364:main.c        ****                             {
 365:main.c        ****                                 distanceSensor(i);
 366:main.c        ****                                 CyDelay(100);
 367:main.c        ****                                 sprintf(output, "%d \t", ultrasonic_distances_mm[i]);
 368:main.c        ****                                 UART_1_PutString(output);
 369:main.c        ****                             }
 370:main.c        ****                         UART_1_PutString("\n");
 371:main.c        ****                         
 372:main.c        ****                         
 373:main.c        ****                         moveUntil(150, FORWARD, LESS_THAN, FRONT_LEFT, SPEED);              // shou
 374:main.c        ****                         straightAdjust();
 375:main.c        ****                         
 376:main.c        ****                         
 377:main.c        ****                         /*
 378:main.c        ****                         for (int i = 0; i < 5; i++)
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccg9Xjeg.s 			page 12


 379:main.c        ****                         {
 380:main.c        ****                             sprintf(output, "%d: \t", i);       
 381:main.c        ****                             UART_1_PutString(output);
 382:main.c        ****                         }
 383:main.c        ****                         UART_1_PutString("\n");   
 384:main.c        ****                         
 385:main.c        ****                         
 386:main.c        ****                         for (int i = 0; i < 50; i++) {
 387:main.c        ****                         distanceCheck();
 388:main.c        ****                         CyDelay(200);
 389:main.c        ****                         }
 390:main.c        ****                         
 391:main.c        ****                         */
 392:main.c        ****                         
 393:main.c        ****                         //straightAdjust();
 394:main.c        ****                         
 395:main.c        ****                         
 396:main.c        ****                         lock = TRUE;    
 397:main.c        ****                     }
 398:main.c        ****             } while (lock == TRUE);    
 399:main.c        ****         }    
 400:main.c        **** 
 401:main.c        ****         // FORCING STATE:
 402:main.c        ****         // Manual state set for testing
 403:main.c        ****         
 404:main.c        ****         //state = STATE_GO_TO_PUCKS;
 405:main.c        ****         currentPuckStackSize = 2;
 250              		.loc 1 405 0
 251 00e6 0222     		movs	r2, #2
 252 00e8 EA60     		str	r2, [r5, #12]
 406:main.c        ****         current_stage = 3;
 253              		.loc 1 406 0
 254 00ea 6649     		ldr	r1, .L26+24
 255 00ec 0320     		movs	r0, #3
 256 00ee 4860     		str	r0, [r1, #4]
 407:main.c        ****         blockEastClearance = 0;
 257              		.loc 1 407 0
 258 00f0 2046     		mov	r0, r4
 259 00f2 2C82     		strh	r4, [r5, #16]	@ movhi
 408:main.c        ****         blockWestClearance = 1;
 260              		.loc 1 408 0
 261 00f4 0124     		movs	r4, #1
 262 00f6 6C82     		strh	r4, [r5, #18]	@ movhi
 409:main.c        ****         puckEastClearance = 1;
 263              		.loc 1 409 0
 264 00f8 AC82     		strh	r4, [r5, #20]	@ movhi
 410:main.c        ****         puckWestClearance = 0;
 265              		.loc 1 410 0
 266 00fa E882     		strh	r0, [r5, #22]	@ movhi
 267              	.LVL41:
 411:main.c        ****         int block_and_puck_edge_midpoint = 500; // take the midpoint between inner edge between the
 412:main.c        ****         
 413:main.c        ****         
 414:main.c        ****         //state = STATE_FIND_REQUIRED_PUCK;
 415:main.c        ****         
 416:main.c        ****         //moveUntil(100,FORWARD,GREATER_THAN,SIDE_LEFT,SPEED);
 417:main.c        ****         
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccg9Xjeg.s 			page 13


 418:main.c        ****         //while(1) {};
 419:main.c        ****         
 420:main.c        ****         
 421:main.c        ****         state = STATE_LOCATE_BLOCK_AND_PUCKS;
 268              		.loc 1 421 0
 269 00fc 8A60     		str	r2, [r1, #8]
 270              	.LBB3:
 422:main.c        ****         
 423:main.c        ****         
 424:main.c        ****         //UART_1_PutString("hI");
 425:main.c        ****         
 426:main.c        ****         //changeOrientation(NORTH, SPEED);
 427:main.c        ****         //changeOrientation(WEST, SPEED);
 428:main.c        ****                 
 429:main.c        ****         //state = STATE_DEPOSIT_PUCK;
 430:main.c        ****         //currentPuckStackSize = 2;
 431:main.c        ****         //current_stage = 3;
 432:main.c        ****          
 433:main.c        **** 
 434:main.c        ****         
 435:main.c        ****                
 436:main.c        ****         if (state == STATE_SCAN_PLAN) {              // colour sensing, while switch has not been p
 437:main.c        ****             
 438:main.c        ****             while(0){
 439:main.c        ****                 moveUntil(400, FORWARD, LESS_THAN, FRONT_LEFT, SPEED);
 440:main.c        ****                 mishaMoveDynamic(-450, SPEED);
 441:main.c        ****                 CyDelay(500);   
 442:main.c        ****                 colourSensingInitialise();      // Initialises wall colour sensor against the black
 443:main.c        ****                 CyDelay(500);
 444:main.c        ****                 mishaMoveDynamic(170, SPEED);
 445:main.c        ****                 CyDelay(500);
 446:main.c        ****                 
 447:main.c        ****                 for (int i = 0; i < 5; i++) {                       // scan each of the pucks 
 448:main.c        ****                     puckRackColours[i] = colourSensingOutput();
 449:main.c        ****                     CyDelay(500);
 450:main.c        ****                     mishaMoveDynamic(61, SPEED);
 451:main.c        ****                     CyDelay(500);
 452:main.c        ****                 }
 453:main.c        ****             
 454:main.c        ****             }
 455:main.c        **** 
 456:main.c        **** 
 457:main.c        ****             
 458:main.c        ****             straightAdjust();
 459:main.c        ****             moveUntil(-100, BACKWARD, LESS_THAN, BACK, SPEED);
 460:main.c        ****             colourSensingInitialise();      // Initialises wall colour sensor against the black wal
 461:main.c        ****                         
 462:main.c        ****             for (int i = 0; i < 5; i++) { 
 463:main.c        ****                 // scan each of the pucks 
 464:main.c        ****                 //moveUntil(puckRackOffsetsFromWest[i]);
 465:main.c        ****                 puckRackColours[i] = colourSensingOutput();
 466:main.c        ****                 CyDelay(500);
 467:main.c        **** 
 468:main.c        ****             //straightAdjust();
 469:main.c        ****             }
 470:main.c        ****                        
 471:main.c        ****             UART_1_PutString("Found Colours: \n");
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccg9Xjeg.s 			page 14


 472:main.c        ****             for (int i = 0; i < 5; i++) 
 473:main.c        ****             {
 474:main.c        ****                 sprintf(output, "%i \n", puckRackColours[i]);    // updates UART showing values of 
 475:main.c        ****                 UART_1_PutString(output);
 476:main.c        ****             }
 477:main.c        ****             
 478:main.c        ****             
 479:main.c        ****             control_photodiode_Write(1);    // changes to claw photodiode
 480:main.c        ****             colour_sensing_algorithm = 1;   // changes it to claw algorithm
 481:main.c        ****                        
 482:main.c        ****             //while(1) {}
 483:main.c        ****             
 484:main.c        ****             // THEN WE FILTER THE NO PUCK VALUES:
 485:main.c        ****             int puckConstructionPlanIndex = 0; // Will be used to iterate through the 3 puck colour
 486:main.c        ****             
 487:main.c        ****             // Iterate over all 5 rack slots and place the 3 colours into puckConstructionPlan.
 488:main.c        ****             for (int puckRackIndex = 0; puckRackIndex < 5; puckRackIndex++){
 489:main.c        ****                 if (puckRackColours[puckRackIndex] != BLANK && puckConstructionPlanIndex != 3){
 490:main.c        ****                     puckConstructionPlan[puckConstructionPlanIndex] = puckRackColours[puckRackIndex
 491:main.c        ****                     puckConstructionPlanIndex++;
 492:main.c        ****                 }
 493:main.c        ****             }
 494:main.c        ****                     
 495:main.c        ****             // MOVE into the next state: 
 496:main.c        ****             state = STATE_LOCATE_BLOCK_AND_PUCKS;
 497:main.c        ****             
 498:main.c        ****             /*
 499:main.c        ****             if (!moving){
 500:main.c        ****                 moving = 1;
 501:main.c        ****             if (initialisation){moveBackwardIndefinitely(); initialisation = 0;}
 502:main.c        ****             else {moveForwardIndefinitely();}        
 503:main.c        **** 
 504:main.c        ****             moveAndAngle(SCAN_INITIALISE_HORIZONTAL,PLAN_SCAN_VERTICAL,WEST_ANGLE); // Move beyond 
 505:main.c        ****             
 506:main.c        ****             // Read the black wall
 507:main.c        ****             
 508:main.c        ****             for (currentPuckRackScanningIndex = 0; currentPuckRackScanningIndex <= 4; currentPuckRa
 509:main.c        ****                 moveAndAngle(puckRackOffsetsFromWest[currentPuckRackScanningIndex],PLAN_SCAN_VERTIC
 510:main.c        ****                 puckRackColours[currentPuckRackScanningIndex] = colourSensingOutput();
 511:main.c        ****             }
 512:main.c        ****    
 513:main.c        ****             */
 514:main.c        ****         }
 515:main.c        **** 
 516:main.c        ****     	if (state == STATE_LOCATE_BLOCK_AND_PUCKS){
 517:main.c        ****             
 518:main.c        **** 
 519:main.c        ****             
 520:main.c        ****             // move away from home base:
 521:main.c        ****             mishaSwivel(-45, SPEED);  
 271              		.loc 1 521 0
 272 00fe AA21     		movs	r1, #170
 273 0100 6FF02C00 		mvn	r0, #44
 274 0104 FFF7FEFF 		bl	mishaSwivel
 275              	.LVL42:
 522:main.c        ****             mishaMoveDynamic(-150, SPEED);
 276              		.loc 1 522 0
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccg9Xjeg.s 			page 15


 277 0108 AA21     		movs	r1, #170
 278 010a 6FF09500 		mvn	r0, #149
 279 010e FFF7FEFF 		bl	mishaMoveDynamic
 280              	.LVL43:
 523:main.c        ****             mishaSwivel(45, SPEED);
 281              		.loc 1 523 0
 282 0112 AA21     		movs	r1, #170
 283 0114 2D20     		movs	r0, #45
 284 0116 FFF7FEFF 		bl	mishaSwivel
 285              	.LVL44:
 524:main.c        ****     
 525:main.c        ****             // Move until construction zone            
 526:main.c        ****             moveUntil(130, FORWARD, LESS_THAN, FRONT_LEFT, SPEED);  // Move to west wall
 286              		.loc 1 526 0
 287 011a AA24     		movs	r4, #170
 288 011c 0094     		str	r4, [sp]
 289 011e 0023     		movs	r3, #0
 290 0120 0422     		movs	r2, #4
 291 0122 0121     		movs	r1, #1
 292 0124 8220     		movs	r0, #130
 293 0126 FFF7FEFF 		bl	moveUntil
 294              	.LVL45:
 527:main.c        ****             straightAdjust();                                       // straighten against west wall
 295              		.loc 1 527 0
 296 012a FFF7FEFF 		bl	straightAdjust
 297              	.LVL46:
 528:main.c        ****             
 529:main.c        ****             // SCAN FOR BLOCKS:
 530:main.c        ****             
 531:main.c        ****             distanceSensor(SIDE_LEFT);  // takes how far we are away from home base wall
 298              		.loc 1 531 0
 299 012e 0220     		movs	r0, #2
 300 0130 FFF7FEFF 		bl	distanceSensor
 301              	.LVL47:
 532:main.c        ****             int block_check = ARENA_LENGTH - BLOCK_ZONE_SOUTH - WIDTH_SENSOR_TO_SENSOR - ultrasonic
 302              		.loc 1 532 0
 303 0134 544D     		ldr	r5, .L26+28
 304 0136 AA68     		ldr	r2, [r5, #8]
 305              	.LVL48:
 533:main.c        ****                 // TAKES our distance from north wall, 
 534:main.c        ****                 // takes distance from arena, takes away 
 535:main.c        ****                 // minus 50 is a tolerance
 536:main.c        ****             
 537:main.c        ****             sprintf(output, "distance from robot to block: %d \t", block_check);
 306              		.loc 1 537 0
 307 0138 544E     		ldr	r6, .L26+32
 308 013a C2F50472 		rsb	r2, r2, #528
 309              	.LVL49:
 310 013e 0232     		adds	r2, r2, #2
 311 0140 5349     		ldr	r1, .L26+36
 312 0142 3046     		mov	r0, r6
 313 0144 FFF7FEFF 		bl	sprintf
 314              	.LVL50:
 538:main.c        ****             UART_1_PutString(output);
 315              		.loc 1 538 0
 316 0148 3046     		mov	r0, r6
 317 014a FFF7FEFF 		bl	UART_1_PutString
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccg9Xjeg.s 			page 16


 318              	.LVL51:
 539:main.c        ****             
 540:main.c        ****             block_check = 350;  // This is a default length that is dynamic
 541:main.c        **** 
 542:main.c        ****             moveUntil(block_check, BACKWARD, LESS_THAN, SIDE_RIGHT, SPEED);   
 319              		.loc 1 542 0
 320 014e 0094     		str	r4, [sp]
 321 0150 0323     		movs	r3, #3
 322 0152 0422     		movs	r2, #4
 323 0154 0021     		movs	r1, #0
 324 0156 4FF4AF70 		mov	r0, #350
 325 015a FFF7FEFF 		bl	moveUntil
 326              	.LVL52:
 543:main.c        ****                                 // this will move backwards until it hits the block or the wall
 544:main.c        ****             blinkLED(GREEN,1000);      // To show it ended at the correct spot
 327              		.loc 1 544 0
 328 015e 4FF47A71 		mov	r1, #1000
 329 0162 0220     		movs	r0, #2
 330 0164 FFF7FEFF 		bl	blinkLED
 331              	.LVL53:
 545:main.c        ****                     
 546:main.c        ****             //straightAdjust();                   // Ensure we are straight to take measurements
 547:main.c        ****                                                 // may need to readjust this 
 548:main.c        ****             
 549:main.c        ****             
 550:main.c        ****             // Move back a bit to find the left side and right side values (adds a bit of tolerance
 551:main.c        ****             mishaMoveDynamic(-(BLOCK_WIDTH/2), SPEED);
 332              		.loc 1 551 0
 333 0168 2146     		mov	r1, r4
 334 016a 6FF02C00 		mvn	r0, #44
 335 016e FFF7FEFF 		bl	mishaMoveDynamic
 336              	.LVL54:
 552:main.c        ****             
 553:main.c        ****             //straightAdjust();                   // Ensure we are straight to take measurements
 554:main.c        ****                                                 // may need to readjust this 
 555:main.c        ****             
 556:main.c        ****             distanceSensor(SIDE_RIGHT);
 337              		.loc 1 556 0
 338 0172 0320     		movs	r0, #3
 339 0174 FFF7FEFF 		bl	distanceSensor
 340              	.LVL55:
 557:main.c        ****             CyDelay(60);
 341              		.loc 1 557 0
 342 0178 3C20     		movs	r0, #60
 343 017a FFF7FEFF 		bl	CyDelay
 344              	.LVL56:
 558:main.c        ****             distanceSensor(SIDE_LEFT);
 345              		.loc 1 558 0
 346 017e 0220     		movs	r0, #2
 347 0180 FFF7FEFF 		bl	distanceSensor
 348              	.LVL57:
 559:main.c        ****             CyDelay(60);
 349              		.loc 1 559 0
 350 0184 3C20     		movs	r0, #60
 351 0186 FFF7FEFF 		bl	CyDelay
 352              	.LVL58:
 560:main.c        ****             
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccg9Xjeg.s 			page 17


 561:main.c        ****             // FAILSAFE if the block is at the very end of west wall:
 562:main.c        ****             distanceSensor(BACK);
 353              		.loc 1 562 0
 354 018a 0420     		movs	r0, #4
 355 018c FFF7FEFF 		bl	distanceSensor
 356              	.LVL59:
 563:main.c        ****             CyDelay(60);
 357              		.loc 1 563 0
 358 0190 3C20     		movs	r0, #60
 359 0192 FFF7FEFF 		bl	CyDelay
 360              	.LVL60:
 564:main.c        ****             
 565:main.c        ****             if (ultrasonic_distances_mm[BACK] < SAFETY_MARGIN + 50) {
 361              		.loc 1 565 0
 362 0196 2869     		ldr	r0, [r5, #16]
 363 0198 7C28     		cmp	r0, #124
 364 019a 10DC     		bgt	.L9
 566:main.c        ****                 // block is " | " this orientation, and close to the side wall
 567:main.c        ****                 
 568:main.c        ****                 // Fill out all the details: 
 569:main.c        ****                 block_location[NORTH] = ARENA_WIDTH - ultrasonic_distances_mm[SIDE_LEFT] - ultrason
 365              		.loc 1 569 0
 366 019c AB68     		ldr	r3, [r5, #8]
 367 019e C3F59662 		rsb	r2, r3, #1200
 368 01a2 D21A     		subs	r2, r2, r3
 369 01a4 A2F5EB72 		sub	r2, r2, #470
 370 01a8 3149     		ldr	r1, .L26+4
 371 01aa 8A61     		str	r2, [r1, #24]
 570:main.c        ****                 block_location[EAST] = 0;
 372              		.loc 1 570 0
 373 01ac 0022     		movs	r2, #0
 374 01ae CA61     		str	r2, [r1, #28]
 571:main.c        ****                 block_location[SOUTH] = ultrasonic_distances_mm[SIDE_LEFT] + WIDTH_SENSOR_TO_SENSOR
 375              		.loc 1 571 0
 376 01b0 DC33     		adds	r3, r3, #220
 377 01b2 EA68     		ldr	r2, [r5, #12]
 378 01b4 1344     		add	r3, r3, r2
 379 01b6 0B62     		str	r3, [r1, #32]
 572:main.c        ****                 block_location[WEST] = ARENA_WIDTH - BLOCK_WIDTH; 
 380              		.loc 1 572 0
 381 01b8 40F25643 		movw	r3, #1110
 382 01bc 4B62     		str	r3, [r1, #36]
 383              	.L9:
 573:main.c        ****                 
 574:main.c        ****             }
 575:main.c        ****             if (ultrasonic_distances_mm[BACK] < BLOCK_LENGTH + 50) {
 384              		.loc 1 575 0
 385 01be B0F5967F 		cmp	r0, #300
 386 01c2 11DA     		bge	.L10
 576:main.c        ****                 // block is " -- " this orientation, and close to the side wall 
 577:main.c        ****                 
 578:main.c        ****                 // Fill out all the details: 
 579:main.c        ****                 block_location[NORTH] = ARENA_WIDTH - ultrasonic_distances_mm[SIDE_LEFT] - ultrason
 387              		.loc 1 579 0
 388 01c4 3048     		ldr	r0, .L26+28
 389 01c6 8368     		ldr	r3, [r0, #8]
 390 01c8 C3F59662 		rsb	r2, r3, #1200
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccg9Xjeg.s 			page 18


 391 01cc D21A     		subs	r2, r2, r3
 392 01ce A2F5EB72 		sub	r2, r2, #470
 393 01d2 2749     		ldr	r1, .L26+4
 394 01d4 8A61     		str	r2, [r1, #24]
 580:main.c        ****                 block_location[EAST] = 0;
 395              		.loc 1 580 0
 396 01d6 0022     		movs	r2, #0
 397 01d8 CA61     		str	r2, [r1, #28]
 581:main.c        ****                 block_location[SOUTH] = ultrasonic_distances_mm[SIDE_LEFT] + WIDTH_SENSOR_TO_SENSOR
 398              		.loc 1 581 0
 399 01da DC33     		adds	r3, r3, #220
 400 01dc C268     		ldr	r2, [r0, #12]
 401 01de 1344     		add	r3, r3, r2
 402 01e0 0B62     		str	r3, [r1, #32]
 582:main.c        ****                 block_location[WEST] = ARENA_WIDTH - BLOCK_LENGTH; 
 403              		.loc 1 582 0
 404 01e2 40F2B633 		movw	r3, #950
 405 01e6 4B62     		str	r3, [r1, #36]
 406              	.L10:
 583:main.c        ****             }
 584:main.c        ****             
 585:main.c        ****             moveUntil(block_check, BACKWARD, GREATER_THAN, SIDE_RIGHT, SPEED);  
 407              		.loc 1 585 0
 408 01e8 AA24     		movs	r4, #170
 409 01ea 0094     		str	r4, [sp]
 410 01ec 0323     		movs	r3, #3
 411 01ee 0522     		movs	r2, #5
 412 01f0 0021     		movs	r1, #0
 413 01f2 4FF4AF70 		mov	r0, #350
 414 01f6 FFF7FEFF 		bl	moveUntil
 415              	.LVL61:
 586:main.c        ****                                 // this will move backwards until no longer hitting the block, or t
 587:main.c        ****             blinkLED(GREEN,1000);      // To show it ended at the correct spot
 416              		.loc 1 587 0
 417 01fa 4FF47A71 		mov	r1, #1000
 418 01fe 0220     		movs	r0, #2
 419 0200 FFF7FEFF 		bl	blinkLED
 420              	.LVL62:
 588:main.c        ****             
 589:main.c        **** 
 590:main.c        ****             CyDelay(1000);                      // To show it ended at the correct spot
 421              		.loc 1 590 0
 422 0204 4FF47A70 		mov	r0, #1000
 423 0208 FFF7FEFF 		bl	CyDelay
 424              	.LVL63:
 591:main.c        ****             distanceSensor(FRONT_LEFT);
 425              		.loc 1 591 0
 426 020c 0020     		movs	r0, #0
 427 020e FFF7FEFF 		bl	distanceSensor
 428              	.LVL64:
 592:main.c        ****             CyDelay(60);
 429              		.loc 1 592 0
 430 0212 3C20     		movs	r0, #60
 431 0214 FFF7FEFF 		bl	CyDelay
 432              	.LVL65:
 593:main.c        ****             distanceSensor(FRONT_RIGHT);        // might run some code to see if theres a differenc
 433              		.loc 1 593 0
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccg9Xjeg.s 			page 19


 434 0218 0120     		movs	r0, #1
 435 021a FFF7FEFF 		bl	distanceSensor
 436              	.LVL66:
 594:main.c        ****             CyDelay(60);
 437              		.loc 1 594 0
 438 021e 3C20     		movs	r0, #60
 439 0220 FFF7FEFF 		bl	CyDelay
 440              	.LVL67:
 595:main.c        ****             distanceSensor(SIDE_LEFT);        // might run some code to see if theres a difference 
 441              		.loc 1 595 0
 442 0224 0220     		movs	r0, #2
 443 0226 FFF7FEFF 		bl	distanceSensor
 444              	.LVL68:
 596:main.c        ****             CyDelay(60);
 445              		.loc 1 596 0
 446 022a 3C20     		movs	r0, #60
 447 022c FFF7FEFF 		bl	CyDelay
 448              	.LVL69:
 597:main.c        ****             
 598:main.c        ****             // Block location values:
 599:main.c        ****             block_location[SOUTH] = ultrasonic_distances_mm[SIDE_LEFT] + WIDTH_SENSOR_TO_SENSOR + u
 449              		.loc 1 599 0
 450 0230 154B     		ldr	r3, .L26+28
 451 0232 9A68     		ldr	r2, [r3, #8]
 452 0234 02F1DC01 		add	r1, r2, #220
 453 0238 DA68     		ldr	r2, [r3, #12]
 454 023a 0A44     		add	r2, r2, r1
 455 023c 0C49     		ldr	r1, .L26+4
 456 023e 0A62     		str	r2, [r1, #32]
 600:main.c        ****             block_location[WEST] = ultrasonic_distances_mm[FRONT_LEFT] + DISTANCE_FRONT_SENSOR_TO_S
 457              		.loc 1 600 0
 458 0240 1B68     		ldr	r3, [r3]
 459 0242 9633     		adds	r3, r3, #150
 460 0244 4B62     		str	r3, [r1, #36]
 601:main.c        ****             CyDelay(1000);         
 461              		.loc 1 601 0
 462 0246 4FF47A70 		mov	r0, #1000
 463 024a FFF7FEFF 		bl	CyDelay
 464              	.LVL70:
 602:main.c        ****             
 603:main.c        ****             // Start moving forward to find the location of the PUCKS:           
 604:main.c        ****             changeOrientation(EAST, SPEED);                             // No matter where we are t
 465              		.loc 1 604 0
 466 024e 2146     		mov	r1, r4
 467 0250 0120     		movs	r0, #1
 468 0252 FFF7FEFF 		bl	changeOrientation
 469              	.LVL71:
 605:main.c        ****             moveUntil(150, FORWARD, LESS_THAN, FRONT_LEFT, SPEED);
 470              		.loc 1 605 0
 471 0256 0094     		str	r4, [sp]
 472 0258 0023     		movs	r3, #0
 473 025a 0422     		movs	r2, #4
 474 025c 0121     		movs	r1, #1
 475 025e 9620     		movs	r0, #150
 476 0260 FFF7FEFF 		bl	moveUntil
 477              	.LVL72:
 606:main.c        ****             straightAdjust();
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccg9Xjeg.s 			page 20


 478              		.loc 1 606 0
 479 0264 FFF7FEFF 		bl	straightAdjust
 480              	.LVL73:
 481              	.L11:
 482 0268 FEE7     		b	.L11
 483              	.L27:
 484 026a 00BF     		.align	2
 485              	.L26:
 486 026c 00000000 		.word	.LC0
 487 0270 00000000 		.word	.LANCHOR0
 488 0274 00000000 		.word	internal_orientation
 489 0278 00000000 		.word	TIH
 490 027c 00000000 		.word	StartIH
 491 0280 18000000 		.word	.LC1
 492 0284 00000000 		.word	.LANCHOR1
 493 0288 00000000 		.word	ultrasonic_distances_mm
 494 028c 00000000 		.word	output
 495 0290 38000000 		.word	.LC2
 496              	.LBE3:
 497              	.LBE2:
 498              		.cfi_endproc
 499              	.LFE66:
 500              		.size	main, .-main
 501              		.comm	distance_returned_global,4,4
 502              		.global	current_stage
 503              		.global	PLAN_SCAN_VERTICAL
 504              		.global	moving
 505              		.global	colour_sensing_algorithm
 506              		.global	colour_flag
 507              		.global	idac_value
 508              		.global	puckWestClearance
 509              		.global	puckEastClearance
 510              		.global	blockWestClearance
 511              		.global	blockEastClearance
 512              		.global	safety_override
 513              		.global	puck_location
 514              		.global	block_location
 515              		.comm	pathPastBlock,4,4
 516              		.comm	pathToPucks,4,4
 517              		.global	beginNavigation
 518              		.global	horizontalPuckGrid
 519              		.global	puckConstructionPlan
 520              		.global	currentPuckStackSize
 521              		.global	running
 522              		.global	state
 523              		.comm	ultrasonic_flag,4,4
 524              		.comm	initialisation,4,4
 525              		.comm	output,32,4
 526              		.comm	turningRightFlag,2,2
 527              		.comm	turningLeftFlag,2,2
 528              		.comm	drivingBackwardFlag,2,2
 529              		.comm	drivingForwardFlag,2,2
 530              		.comm	puckPileLocation,4,4
 531              		.global	block_edge_location
 532              		.global	sweeping
 533              		.global	puckRackOffsetsFromWest
 534              		.global	puckRackColours
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccg9Xjeg.s 			page 21


 535              		.global	currentPuckRackScanningIndex
 536              		.comm	driveStraightEnable,4,4
 537              		.comm	internal_orientation,4,4
 538              		.section	.rodata
 539              		.align	2
 540              		.type	PLAN_SCAN_VERTICAL, %object
 541              		.size	PLAN_SCAN_VERTICAL, 4
 542              	PLAN_SCAN_VERTICAL:
 543 0000 0A000000 		.word	10
 544              		.data
 545              		.align	2
 546              		.set	.LANCHOR1,. + 0
 547              		.type	colour_flag, %object
 548              		.size	colour_flag, 4
 549              	colour_flag:
 550 0000 01000000 		.word	1
 551              		.type	current_stage, %object
 552              		.size	current_stage, 4
 553              	current_stage:
 554 0004 01000000 		.word	1
 555              		.type	state, %object
 556              		.size	state, 4
 557              	state:
 558 0008 01000000 		.word	1
 559              		.type	running, %object
 560              		.size	running, 4
 561              	running:
 562 000c 01000000 		.word	1
 563              		.type	puckRackOffsetsFromWest, %object
 564              		.size	puckRackOffsetsFromWest, 20
 565              	puckRackOffsetsFromWest:
 566 0010 D0020000 		.word	720
 567 0014 94020000 		.word	660
 568 0018 58020000 		.word	600
 569 001c 1C020000 		.word	540
 570 0020 E0010000 		.word	480
 571              		.section	.rodata.str1.4,"aMS",%progbits,1
 572              		.align	2
 573              	.LC0:
 574 0000 55415254 		.ascii	"UART commencing... \012\000"
 574      20636F6D 
 574      6D656E63 
 574      696E672E 
 574      2E2E200A 
 575 0015 000000   		.space	3
 576              	.LC1:
 577 0018 556C7472 		.ascii	"Ultrasonic Calibration tests: \012\000"
 577      61736F6E 
 577      69632043 
 577      616C6962 
 577      72617469 
 578              	.LC2:
 579 0038 64697374 		.ascii	"distance from robot to block: %d \011\000"
 579      616E6365 
 579      2066726F 
 579      6D20726F 
 579      626F7420 
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccg9Xjeg.s 			page 22


 580              		.bss
 581              		.align	2
 582              		.set	.LANCHOR0,. + 0
 583              		.type	beginNavigation, %object
 584              		.size	beginNavigation, 4
 585              	beginNavigation:
 586 0000 00000000 		.space	4
 587              		.type	idac_value, %object
 588              		.size	idac_value, 4
 589              	idac_value:
 590 0004 00000000 		.space	4
 591              		.type	colour_sensing_algorithm, %object
 592              		.size	colour_sensing_algorithm, 4
 593              	colour_sensing_algorithm:
 594 0008 00000000 		.space	4
 595              		.type	currentPuckStackSize, %object
 596              		.size	currentPuckStackSize, 4
 597              	currentPuckStackSize:
 598 000c 00000000 		.space	4
 599              		.type	blockEastClearance, %object
 600              		.size	blockEastClearance, 2
 601              	blockEastClearance:
 602 0010 0000     		.space	2
 603              		.type	blockWestClearance, %object
 604              		.size	blockWestClearance, 2
 605              	blockWestClearance:
 606 0012 0000     		.space	2
 607              		.type	puckEastClearance, %object
 608              		.size	puckEastClearance, 2
 609              	puckEastClearance:
 610 0014 0000     		.space	2
 611              		.type	puckWestClearance, %object
 612              		.size	puckWestClearance, 2
 613              	puckWestClearance:
 614 0016 0000     		.space	2
 615              		.type	block_location, %object
 616              		.size	block_location, 16
 617              	block_location:
 618 0018 00000000 		.space	16
 618      00000000 
 618      00000000 
 618      00000000 
 619              		.type	puckConstructionPlan, %object
 620              		.size	puckConstructionPlan, 12
 621              	puckConstructionPlan:
 622 0028 00000000 		.space	12
 622      00000000 
 622      00000000 
 623              		.type	safety_override, %object
 624              		.size	safety_override, 4
 625              	safety_override:
 626 0034 00000000 		.space	4
 627              		.type	moving, %object
 628              		.size	moving, 4
 629              	moving:
 630 0038 00000000 		.space	4
 631              		.type	puck_location, %object
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccg9Xjeg.s 			page 23


 632              		.size	puck_location, 16
 633              	puck_location:
 634 003c 00000000 		.space	16
 634      00000000 
 634      00000000 
 634      00000000 
 635              		.type	horizontalPuckGrid, %object
 636              		.size	horizontalPuckGrid, 4
 637              	horizontalPuckGrid:
 638 004c 00000000 		.space	4
 639              		.type	block_edge_location, %object
 640              		.size	block_edge_location, 16
 641              	block_edge_location:
 642 0050 00000000 		.space	16
 642      00000000 
 642      00000000 
 642      00000000 
 643              		.type	sweeping, %object
 644              		.size	sweeping, 4
 645              	sweeping:
 646 0060 00000000 		.space	4
 647              		.type	puckRackColours, %object
 648              		.size	puckRackColours, 20
 649              	puckRackColours:
 650 0064 00000000 		.space	20
 650      00000000 
 650      00000000 
 650      00000000 
 650      00000000 
 651              		.type	currentPuckRackScanningIndex, %object
 652              		.size	currentPuckRackScanningIndex, 4
 653              	currentPuckRackScanningIndex:
 654 0078 00000000 		.space	4
 655              		.text
 656              	.Letext0:
 657              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 658              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 659              		.file 4 "Generated_Source\\PSoC5/core_cm3.h"
 660              		.file 5 "navigation.h"
 661              		.file 6 "ultrasonic.h"
 662              		.file 7 "main.h"
 663              		.file 8 "Generated_Source\\PSoC5/CyLib.h"
 664              		.file 9 "mishamotor.h"
 665              		.file 10 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4
 666              		.file 11 "Generated_Source\\PSoC5/UART_1.h"
 667              		.file 12 "colour.h"
 668              		.file 13 "Generated_Source\\PSoC5/TIA_1.h"
 669              		.file 14 "Generated_Source\\PSoC5/ADC.h"
 670              		.file 15 "Generated_Source\\PSoC5/IDAC8_1.h"
 671              		.file 16 "Generated_Source\\PSoC5/control_photodiode.h"
 672              		.file 17 "Generated_Source\\PSoC5/control_led.h"
 673              		.file 18 "Generated_Source\\PSoC5/Rack_Servo_PWM.h"
 674              		.file 19 "Generated_Source\\PSoC5/Gripper_Servo_PWM.h"
 675              		.file 20 "Generated_Source\\PSoC5/Motor_Left_Driver.h"
 676              		.file 21 "Generated_Source\\PSoC5/Motor_Right_Driver.h"
 677              		.file 22 "Generated_Source\\PSoC5/Motor_Left_Decoder.h"
 678              		.file 23 "Generated_Source\\PSoC5/Motor_Right_Decoder.h"
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccg9Xjeg.s 			page 24


 679              		.file 24 "Generated_Source\\PSoC5/Timer_1.h"
 680              		.file 25 "Generated_Source\\PSoC5/Sonic.h"
 681              		.file 26 "Generated_Source\\PSoC5/Start.h"
 682              		.section	.debug_info,"",%progbits
 683              	.Ldebug_info0:
 684 0000 F00A0000 		.4byte	0xaf0
 685 0004 0400     		.2byte	0x4
 686 0006 00000000 		.4byte	.Ldebug_abbrev0
 687 000a 04       		.byte	0x4
 688 000b 01       		.uleb128 0x1
 689 000c BF060000 		.4byte	.LASF100
 690 0010 0C       		.byte	0xc
 691 0011 5C050000 		.4byte	.LASF101
 692 0015 F1050000 		.4byte	.LASF102
 693 0019 00000000 		.4byte	.Ldebug_ranges0+0
 694 001d 00000000 		.4byte	0
 695 0021 00000000 		.4byte	.Ldebug_line0
 696 0025 02       		.uleb128 0x2
 697 0026 01       		.byte	0x1
 698 0027 06       		.byte	0x6
 699 0028 F5030000 		.4byte	.LASF0
 700 002c 02       		.uleb128 0x2
 701 002d 01       		.byte	0x1
 702 002e 08       		.byte	0x8
 703 002f 6C030000 		.4byte	.LASF1
 704 0033 02       		.uleb128 0x2
 705 0034 02       		.byte	0x2
 706 0035 05       		.byte	0x5
 707 0036 44000000 		.4byte	.LASF2
 708 003a 02       		.uleb128 0x2
 709 003b 02       		.byte	0x2
 710 003c 07       		.byte	0x7
 711 003d 38050000 		.4byte	.LASF3
 712 0041 03       		.uleb128 0x3
 713 0042 D4050000 		.4byte	.LASF9
 714 0046 02       		.byte	0x2
 715 0047 3F       		.byte	0x3f
 716 0048 4C000000 		.4byte	0x4c
 717 004c 02       		.uleb128 0x2
 718 004d 04       		.byte	0x4
 719 004e 05       		.byte	0x5
 720 004f 73020000 		.4byte	.LASF4
 721 0053 02       		.uleb128 0x2
 722 0054 04       		.byte	0x4
 723 0055 07       		.byte	0x7
 724 0056 63050000 		.4byte	.LASF5
 725 005a 02       		.uleb128 0x2
 726 005b 08       		.byte	0x8
 727 005c 05       		.byte	0x5
 728 005d 25020000 		.4byte	.LASF6
 729 0061 02       		.uleb128 0x2
 730 0062 08       		.byte	0x8
 731 0063 07       		.byte	0x7
 732 0064 15040000 		.4byte	.LASF7
 733 0068 04       		.uleb128 0x4
 734 0069 04       		.byte	0x4
 735 006a 05       		.byte	0x5
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccg9Xjeg.s 			page 25


 736 006b 696E7400 		.ascii	"int\000"
 737 006f 02       		.uleb128 0x2
 738 0070 04       		.byte	0x4
 739 0071 07       		.byte	0x7
 740 0072 4C040000 		.4byte	.LASF8
 741 0076 03       		.uleb128 0x3
 742 0077 9C000000 		.4byte	.LASF10
 743 007b 03       		.byte	0x3
 744 007c 2C       		.byte	0x2c
 745 007d 41000000 		.4byte	0x41
 746 0081 02       		.uleb128 0x2
 747 0082 04       		.byte	0x4
 748 0083 04       		.byte	0x4
 749 0084 1F020000 		.4byte	.LASF11
 750 0088 02       		.uleb128 0x2
 751 0089 08       		.byte	0x8
 752 008a 04       		.byte	0x4
 753 008b 83050000 		.4byte	.LASF12
 754 008f 02       		.uleb128 0x2
 755 0090 01       		.byte	0x1
 756 0091 08       		.byte	0x8
 757 0092 CF040000 		.4byte	.LASF13
 758 0096 02       		.uleb128 0x2
 759 0097 08       		.byte	0x8
 760 0098 04       		.byte	0x4
 761 0099 E5000000 		.4byte	.LASF14
 762 009d 02       		.uleb128 0x2
 763 009e 04       		.byte	0x4
 764 009f 07       		.byte	0x7
 765 00a0 7B060000 		.4byte	.LASF15
 766 00a4 05       		.uleb128 0x5
 767 00a5 54494800 		.ascii	"TIH\000"
 768 00a9 01       		.byte	0x1
 769 00aa 64       		.byte	0x64
 770 00ab 00000000 		.4byte	.LFB64
 771 00af 08000000 		.4byte	.LFE64-.LFB64
 772 00b3 01       		.uleb128 0x1
 773 00b4 9C       		.byte	0x9c
 774 00b5 C3000000 		.4byte	0xc3
 775 00b9 06       		.uleb128 0x6
 776 00ba 06000000 		.4byte	.LVL0
 777 00be 5C090000 		.4byte	0x95c
 778 00c2 00       		.byte	0
 779 00c3 07       		.uleb128 0x7
 780 00c4 F1000000 		.4byte	.LASF16
 781 00c8 01       		.byte	0x1
 782 00c9 69       		.byte	0x69
 783 00ca 00000000 		.4byte	.LFB65
 784 00ce 20000000 		.4byte	.LFE65-.LFB65
 785 00d2 01       		.uleb128 0x1
 786 00d3 9C       		.byte	0x9c
 787 00d4 E9000000 		.4byte	0xe9
 788 00d8 08       		.uleb128 0x8
 789 00d9 08000000 		.4byte	.LVL1
 790 00dd 67090000 		.4byte	0x967
 791 00e1 09       		.uleb128 0x9
 792 00e2 01       		.uleb128 0x1
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccg9Xjeg.s 			page 26


 793 00e3 50       		.byte	0x50
 794 00e4 02       		.uleb128 0x2
 795 00e5 08       		.byte	0x8
 796 00e6 64       		.byte	0x64
 797 00e7 00       		.byte	0
 798 00e8 00       		.byte	0
 799 00e9 0A       		.uleb128 0xa
 800 00ea D4040000 		.4byte	.LASF103
 801 00ee 01       		.byte	0x1
 802 00ef 84       		.byte	0x84
 803 00f0 68000000 		.4byte	0x68
 804 00f4 00000000 		.4byte	.LFB66
 805 00f8 94020000 		.4byte	.LFE66-.LFB66
 806 00fc 01       		.uleb128 0x1
 807 00fd 9C       		.byte	0x9c
 808 00fe 76060000 		.4byte	0x676
 809 0102 0B       		.uleb128 0xb
 810 0103 89000000 		.4byte	.LASF17
 811 0107 01       		.byte	0x1
 812 0108 90       		.byte	0x90
 813 0109 68000000 		.4byte	0x68
 814 010d 00       		.byte	0
 815 010e 0B       		.uleb128 0xb
 816 010f 3E040000 		.4byte	.LASF18
 817 0113 01       		.byte	0x1
 818 0114 91       		.byte	0x91
 819 0115 68000000 		.4byte	0x68
 820 0119 00       		.byte	0
 821 011a 0B       		.uleb128 0xb
 822 011b 8B060000 		.4byte	.LASF19
 823 011f 01       		.byte	0x1
 824 0120 92       		.byte	0x92
 825 0121 68000000 		.4byte	0x68
 826 0125 00       		.byte	0
 827 0126 0B       		.uleb128 0xb
 828 0127 12000000 		.4byte	.LASF20
 829 012b 01       		.byte	0x1
 830 012c 93       		.byte	0x93
 831 012d 68000000 		.4byte	0x68
 832 0131 00       		.byte	0
 833 0132 0C       		.uleb128 0xc
 834 0133 E6000000 		.4byte	.LBB2
 835 0137 AE010000 		.4byte	.LBE2-.LBB2
 836 013b 40040000 		.4byte	0x440
 837 013f 0D       		.uleb128 0xd
 838 0140 33020000 		.4byte	.LASF21
 839 0144 01       		.byte	0x1
 840 0145 9B01     		.2byte	0x19b
 841 0147 68000000 		.4byte	0x68
 842 014b F401     		.2byte	0x1f4
 843 014d 0E       		.uleb128 0xe
 844 014e FE000000 		.4byte	.LBB3
 845 0152 96010000 		.4byte	.LBE3-.LBB3
 846 0156 0F       		.uleb128 0xf
 847 0157 C8050000 		.4byte	.LASF22
 848 015b 01       		.byte	0x1
 849 015c 1402     		.2byte	0x214
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccg9Xjeg.s 			page 27


 850 015e 68000000 		.4byte	0x68
 851 0162 00000000 		.4byte	.LLST0
 852 0166 0D       		.uleb128 0xd
 853 0167 11010000 		.4byte	.LASF23
 854 016b 01       		.byte	0x1
 855 016c 5F02     		.2byte	0x25f
 856 016e 68000000 		.4byte	0x68
 857 0172 9D03     		.2byte	0x39d
 858 0174 10       		.uleb128 0x10
 859 0175 08010000 		.4byte	.LVL42
 860 0179 72090000 		.4byte	0x972
 861 017d 8E010000 		.4byte	0x18e
 862 0181 09       		.uleb128 0x9
 863 0182 01       		.uleb128 0x1
 864 0183 50       		.byte	0x50
 865 0184 02       		.uleb128 0x2
 866 0185 09       		.byte	0x9
 867 0186 D3       		.byte	0xd3
 868 0187 09       		.uleb128 0x9
 869 0188 01       		.uleb128 0x1
 870 0189 51       		.byte	0x51
 871 018a 02       		.uleb128 0x2
 872 018b 08       		.byte	0x8
 873 018c AA       		.byte	0xaa
 874 018d 00       		.byte	0
 875 018e 10       		.uleb128 0x10
 876 018f 12010000 		.4byte	.LVL43
 877 0193 7D090000 		.4byte	0x97d
 878 0197 A9010000 		.4byte	0x1a9
 879 019b 09       		.uleb128 0x9
 880 019c 01       		.uleb128 0x1
 881 019d 50       		.byte	0x50
 882 019e 03       		.uleb128 0x3
 883 019f 0B       		.byte	0xb
 884 01a0 6AFF     		.2byte	0xff6a
 885 01a2 09       		.uleb128 0x9
 886 01a3 01       		.uleb128 0x1
 887 01a4 51       		.byte	0x51
 888 01a5 02       		.uleb128 0x2
 889 01a6 08       		.byte	0x8
 890 01a7 AA       		.byte	0xaa
 891 01a8 00       		.byte	0
 892 01a9 10       		.uleb128 0x10
 893 01aa 1A010000 		.4byte	.LVL44
 894 01ae 72090000 		.4byte	0x972
 895 01b2 C3010000 		.4byte	0x1c3
 896 01b6 09       		.uleb128 0x9
 897 01b7 01       		.uleb128 0x1
 898 01b8 50       		.byte	0x50
 899 01b9 02       		.uleb128 0x2
 900 01ba 08       		.byte	0x8
 901 01bb 2D       		.byte	0x2d
 902 01bc 09       		.uleb128 0x9
 903 01bd 01       		.uleb128 0x1
 904 01be 51       		.byte	0x51
 905 01bf 02       		.uleb128 0x2
 906 01c0 08       		.byte	0x8
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccg9Xjeg.s 			page 28


 907 01c1 AA       		.byte	0xaa
 908 01c2 00       		.byte	0
 909 01c3 10       		.uleb128 0x10
 910 01c4 2A010000 		.4byte	.LVL45
 911 01c8 88090000 		.4byte	0x988
 912 01cc ED010000 		.4byte	0x1ed
 913 01d0 09       		.uleb128 0x9
 914 01d1 01       		.uleb128 0x1
 915 01d2 50       		.byte	0x50
 916 01d3 02       		.uleb128 0x2
 917 01d4 08       		.byte	0x8
 918 01d5 82       		.byte	0x82
 919 01d6 09       		.uleb128 0x9
 920 01d7 01       		.uleb128 0x1
 921 01d8 51       		.byte	0x51
 922 01d9 01       		.uleb128 0x1
 923 01da 31       		.byte	0x31
 924 01db 09       		.uleb128 0x9
 925 01dc 01       		.uleb128 0x1
 926 01dd 52       		.byte	0x52
 927 01de 01       		.uleb128 0x1
 928 01df 34       		.byte	0x34
 929 01e0 09       		.uleb128 0x9
 930 01e1 01       		.uleb128 0x1
 931 01e2 53       		.byte	0x53
 932 01e3 01       		.uleb128 0x1
 933 01e4 30       		.byte	0x30
 934 01e5 09       		.uleb128 0x9
 935 01e6 02       		.uleb128 0x2
 936 01e7 7D       		.byte	0x7d
 937 01e8 00       		.sleb128 0
 938 01e9 02       		.uleb128 0x2
 939 01ea 74       		.byte	0x74
 940 01eb 00       		.sleb128 0
 941 01ec 00       		.byte	0
 942 01ed 06       		.uleb128 0x6
 943 01ee 2E010000 		.4byte	.LVL46
 944 01f2 93090000 		.4byte	0x993
 945 01f6 10       		.uleb128 0x10
 946 01f7 34010000 		.4byte	.LVL47
 947 01fb 9E090000 		.4byte	0x99e
 948 01ff 09020000 		.4byte	0x209
 949 0203 09       		.uleb128 0x9
 950 0204 01       		.uleb128 0x1
 951 0205 50       		.byte	0x50
 952 0206 01       		.uleb128 0x1
 953 0207 32       		.byte	0x32
 954 0208 00       		.byte	0
 955 0209 10       		.uleb128 0x10
 956 020a 48010000 		.4byte	.LVL50
 957 020e A9090000 		.4byte	0x9a9
 958 0212 26020000 		.4byte	0x226
 959 0216 09       		.uleb128 0x9
 960 0217 01       		.uleb128 0x1
 961 0218 50       		.byte	0x50
 962 0219 02       		.uleb128 0x2
 963 021a 76       		.byte	0x76
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccg9Xjeg.s 			page 29


 964 021b 00       		.sleb128 0
 965 021c 09       		.uleb128 0x9
 966 021d 01       		.uleb128 0x1
 967 021e 51       		.byte	0x51
 968 021f 05       		.uleb128 0x5
 969 0220 03       		.byte	0x3
 970 0221 38000000 		.4byte	.LC2
 971 0225 00       		.byte	0
 972 0226 10       		.uleb128 0x10
 973 0227 4E010000 		.4byte	.LVL51
 974 022b B4090000 		.4byte	0x9b4
 975 022f 3A020000 		.4byte	0x23a
 976 0233 09       		.uleb128 0x9
 977 0234 01       		.uleb128 0x1
 978 0235 50       		.byte	0x50
 979 0236 02       		.uleb128 0x2
 980 0237 76       		.byte	0x76
 981 0238 00       		.sleb128 0
 982 0239 00       		.byte	0
 983 023a 10       		.uleb128 0x10
 984 023b 5E010000 		.4byte	.LVL52
 985 023f 88090000 		.4byte	0x988
 986 0243 65020000 		.4byte	0x265
 987 0247 09       		.uleb128 0x9
 988 0248 01       		.uleb128 0x1
 989 0249 50       		.byte	0x50
 990 024a 03       		.uleb128 0x3
 991 024b 0A       		.byte	0xa
 992 024c 5E01     		.2byte	0x15e
 993 024e 09       		.uleb128 0x9
 994 024f 01       		.uleb128 0x1
 995 0250 51       		.byte	0x51
 996 0251 01       		.uleb128 0x1
 997 0252 30       		.byte	0x30
 998 0253 09       		.uleb128 0x9
 999 0254 01       		.uleb128 0x1
 1000 0255 52       		.byte	0x52
 1001 0256 01       		.uleb128 0x1
 1002 0257 34       		.byte	0x34
 1003 0258 09       		.uleb128 0x9
 1004 0259 01       		.uleb128 0x1
 1005 025a 53       		.byte	0x53
 1006 025b 01       		.uleb128 0x1
 1007 025c 33       		.byte	0x33
 1008 025d 09       		.uleb128 0x9
 1009 025e 02       		.uleb128 0x2
 1010 025f 7D       		.byte	0x7d
 1011 0260 00       		.sleb128 0
 1012 0261 02       		.uleb128 0x2
 1013 0262 74       		.byte	0x74
 1014 0263 00       		.sleb128 0
 1015 0264 00       		.byte	0
 1016 0265 10       		.uleb128 0x10
 1017 0266 68010000 		.4byte	.LVL53
 1018 026a BF090000 		.4byte	0x9bf
 1019 026e 7F020000 		.4byte	0x27f
 1020 0272 09       		.uleb128 0x9
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccg9Xjeg.s 			page 30


 1021 0273 01       		.uleb128 0x1
 1022 0274 50       		.byte	0x50
 1023 0275 01       		.uleb128 0x1
 1024 0276 32       		.byte	0x32
 1025 0277 09       		.uleb128 0x9
 1026 0278 01       		.uleb128 0x1
 1027 0279 51       		.byte	0x51
 1028 027a 03       		.uleb128 0x3
 1029 027b 0A       		.byte	0xa
 1030 027c E803     		.2byte	0x3e8
 1031 027e 00       		.byte	0
 1032 027f 10       		.uleb128 0x10
 1033 0280 72010000 		.4byte	.LVL54
 1034 0284 7D090000 		.4byte	0x97d
 1035 0288 99020000 		.4byte	0x299
 1036 028c 09       		.uleb128 0x9
 1037 028d 01       		.uleb128 0x1
 1038 028e 50       		.byte	0x50
 1039 028f 02       		.uleb128 0x2
 1040 0290 09       		.byte	0x9
 1041 0291 D3       		.byte	0xd3
 1042 0292 09       		.uleb128 0x9
 1043 0293 01       		.uleb128 0x1
 1044 0294 51       		.byte	0x51
 1045 0295 02       		.uleb128 0x2
 1046 0296 74       		.byte	0x74
 1047 0297 00       		.sleb128 0
 1048 0298 00       		.byte	0
 1049 0299 10       		.uleb128 0x10
 1050 029a 78010000 		.4byte	.LVL55
 1051 029e 9E090000 		.4byte	0x99e
 1052 02a2 AC020000 		.4byte	0x2ac
 1053 02a6 09       		.uleb128 0x9
 1054 02a7 01       		.uleb128 0x1
 1055 02a8 50       		.byte	0x50
 1056 02a9 01       		.uleb128 0x1
 1057 02aa 33       		.byte	0x33
 1058 02ab 00       		.byte	0
 1059 02ac 10       		.uleb128 0x10
 1060 02ad 7E010000 		.4byte	.LVL56
 1061 02b1 67090000 		.4byte	0x967
 1062 02b5 C0020000 		.4byte	0x2c0
 1063 02b9 09       		.uleb128 0x9
 1064 02ba 01       		.uleb128 0x1
 1065 02bb 50       		.byte	0x50
 1066 02bc 02       		.uleb128 0x2
 1067 02bd 08       		.byte	0x8
 1068 02be 3C       		.byte	0x3c
 1069 02bf 00       		.byte	0
 1070 02c0 10       		.uleb128 0x10
 1071 02c1 84010000 		.4byte	.LVL57
 1072 02c5 9E090000 		.4byte	0x99e
 1073 02c9 D3020000 		.4byte	0x2d3
 1074 02cd 09       		.uleb128 0x9
 1075 02ce 01       		.uleb128 0x1
 1076 02cf 50       		.byte	0x50
 1077 02d0 01       		.uleb128 0x1
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccg9Xjeg.s 			page 31


 1078 02d1 32       		.byte	0x32
 1079 02d2 00       		.byte	0
 1080 02d3 10       		.uleb128 0x10
 1081 02d4 8A010000 		.4byte	.LVL58
 1082 02d8 67090000 		.4byte	0x967
 1083 02dc E7020000 		.4byte	0x2e7
 1084 02e0 09       		.uleb128 0x9
 1085 02e1 01       		.uleb128 0x1
 1086 02e2 50       		.byte	0x50
 1087 02e3 02       		.uleb128 0x2
 1088 02e4 08       		.byte	0x8
 1089 02e5 3C       		.byte	0x3c
 1090 02e6 00       		.byte	0
 1091 02e7 10       		.uleb128 0x10
 1092 02e8 90010000 		.4byte	.LVL59
 1093 02ec 9E090000 		.4byte	0x99e
 1094 02f0 FA020000 		.4byte	0x2fa
 1095 02f4 09       		.uleb128 0x9
 1096 02f5 01       		.uleb128 0x1
 1097 02f6 50       		.byte	0x50
 1098 02f7 01       		.uleb128 0x1
 1099 02f8 34       		.byte	0x34
 1100 02f9 00       		.byte	0
 1101 02fa 10       		.uleb128 0x10
 1102 02fb 96010000 		.4byte	.LVL60
 1103 02ff 67090000 		.4byte	0x967
 1104 0303 0E030000 		.4byte	0x30e
 1105 0307 09       		.uleb128 0x9
 1106 0308 01       		.uleb128 0x1
 1107 0309 50       		.byte	0x50
 1108 030a 02       		.uleb128 0x2
 1109 030b 08       		.byte	0x8
 1110 030c 3C       		.byte	0x3c
 1111 030d 00       		.byte	0
 1112 030e 10       		.uleb128 0x10
 1113 030f FA010000 		.4byte	.LVL61
 1114 0313 88090000 		.4byte	0x988
 1115 0317 39030000 		.4byte	0x339
 1116 031b 09       		.uleb128 0x9
 1117 031c 01       		.uleb128 0x1
 1118 031d 50       		.byte	0x50
 1119 031e 03       		.uleb128 0x3
 1120 031f 0A       		.byte	0xa
 1121 0320 5E01     		.2byte	0x15e
 1122 0322 09       		.uleb128 0x9
 1123 0323 01       		.uleb128 0x1
 1124 0324 51       		.byte	0x51
 1125 0325 01       		.uleb128 0x1
 1126 0326 30       		.byte	0x30
 1127 0327 09       		.uleb128 0x9
 1128 0328 01       		.uleb128 0x1
 1129 0329 52       		.byte	0x52
 1130 032a 01       		.uleb128 0x1
 1131 032b 35       		.byte	0x35
 1132 032c 09       		.uleb128 0x9
 1133 032d 01       		.uleb128 0x1
 1134 032e 53       		.byte	0x53
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccg9Xjeg.s 			page 32


 1135 032f 01       		.uleb128 0x1
 1136 0330 33       		.byte	0x33
 1137 0331 09       		.uleb128 0x9
 1138 0332 02       		.uleb128 0x2
 1139 0333 7D       		.byte	0x7d
 1140 0334 00       		.sleb128 0
 1141 0335 02       		.uleb128 0x2
 1142 0336 74       		.byte	0x74
 1143 0337 00       		.sleb128 0
 1144 0338 00       		.byte	0
 1145 0339 10       		.uleb128 0x10
 1146 033a 04020000 		.4byte	.LVL62
 1147 033e BF090000 		.4byte	0x9bf
 1148 0342 53030000 		.4byte	0x353
 1149 0346 09       		.uleb128 0x9
 1150 0347 01       		.uleb128 0x1
 1151 0348 50       		.byte	0x50
 1152 0349 01       		.uleb128 0x1
 1153 034a 32       		.byte	0x32
 1154 034b 09       		.uleb128 0x9
 1155 034c 01       		.uleb128 0x1
 1156 034d 51       		.byte	0x51
 1157 034e 03       		.uleb128 0x3
 1158 034f 0A       		.byte	0xa
 1159 0350 E803     		.2byte	0x3e8
 1160 0352 00       		.byte	0
 1161 0353 10       		.uleb128 0x10
 1162 0354 0C020000 		.4byte	.LVL63
 1163 0358 67090000 		.4byte	0x967
 1164 035c 68030000 		.4byte	0x368
 1165 0360 09       		.uleb128 0x9
 1166 0361 01       		.uleb128 0x1
 1167 0362 50       		.byte	0x50
 1168 0363 03       		.uleb128 0x3
 1169 0364 0A       		.byte	0xa
 1170 0365 E803     		.2byte	0x3e8
 1171 0367 00       		.byte	0
 1172 0368 10       		.uleb128 0x10
 1173 0369 12020000 		.4byte	.LVL64
 1174 036d 9E090000 		.4byte	0x99e
 1175 0371 7B030000 		.4byte	0x37b
 1176 0375 09       		.uleb128 0x9
 1177 0376 01       		.uleb128 0x1
 1178 0377 50       		.byte	0x50
 1179 0378 01       		.uleb128 0x1
 1180 0379 30       		.byte	0x30
 1181 037a 00       		.byte	0
 1182 037b 10       		.uleb128 0x10
 1183 037c 18020000 		.4byte	.LVL65
 1184 0380 67090000 		.4byte	0x967
 1185 0384 8F030000 		.4byte	0x38f
 1186 0388 09       		.uleb128 0x9
 1187 0389 01       		.uleb128 0x1
 1188 038a 50       		.byte	0x50
 1189 038b 02       		.uleb128 0x2
 1190 038c 08       		.byte	0x8
 1191 038d 3C       		.byte	0x3c
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccg9Xjeg.s 			page 33


 1192 038e 00       		.byte	0
 1193 038f 10       		.uleb128 0x10
 1194 0390 1E020000 		.4byte	.LVL66
 1195 0394 9E090000 		.4byte	0x99e
 1196 0398 A2030000 		.4byte	0x3a2
 1197 039c 09       		.uleb128 0x9
 1198 039d 01       		.uleb128 0x1
 1199 039e 50       		.byte	0x50
 1200 039f 01       		.uleb128 0x1
 1201 03a0 31       		.byte	0x31
 1202 03a1 00       		.byte	0
 1203 03a2 10       		.uleb128 0x10
 1204 03a3 24020000 		.4byte	.LVL67
 1205 03a7 67090000 		.4byte	0x967
 1206 03ab B6030000 		.4byte	0x3b6
 1207 03af 09       		.uleb128 0x9
 1208 03b0 01       		.uleb128 0x1
 1209 03b1 50       		.byte	0x50
 1210 03b2 02       		.uleb128 0x2
 1211 03b3 08       		.byte	0x8
 1212 03b4 3C       		.byte	0x3c
 1213 03b5 00       		.byte	0
 1214 03b6 10       		.uleb128 0x10
 1215 03b7 2A020000 		.4byte	.LVL68
 1216 03bb 9E090000 		.4byte	0x99e
 1217 03bf C9030000 		.4byte	0x3c9
 1218 03c3 09       		.uleb128 0x9
 1219 03c4 01       		.uleb128 0x1
 1220 03c5 50       		.byte	0x50
 1221 03c6 01       		.uleb128 0x1
 1222 03c7 32       		.byte	0x32
 1223 03c8 00       		.byte	0
 1224 03c9 10       		.uleb128 0x10
 1225 03ca 30020000 		.4byte	.LVL69
 1226 03ce 67090000 		.4byte	0x967
 1227 03d2 DD030000 		.4byte	0x3dd
 1228 03d6 09       		.uleb128 0x9
 1229 03d7 01       		.uleb128 0x1
 1230 03d8 50       		.byte	0x50
 1231 03d9 02       		.uleb128 0x2
 1232 03da 08       		.byte	0x8
 1233 03db 3C       		.byte	0x3c
 1234 03dc 00       		.byte	0
 1235 03dd 10       		.uleb128 0x10
 1236 03de 4E020000 		.4byte	.LVL70
 1237 03e2 67090000 		.4byte	0x967
 1238 03e6 F2030000 		.4byte	0x3f2
 1239 03ea 09       		.uleb128 0x9
 1240 03eb 01       		.uleb128 0x1
 1241 03ec 50       		.byte	0x50
 1242 03ed 03       		.uleb128 0x3
 1243 03ee 0A       		.byte	0xa
 1244 03ef E803     		.2byte	0x3e8
 1245 03f1 00       		.byte	0
 1246 03f2 10       		.uleb128 0x10
 1247 03f3 56020000 		.4byte	.LVL71
 1248 03f7 CA090000 		.4byte	0x9ca
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccg9Xjeg.s 			page 34


 1249 03fb 0B040000 		.4byte	0x40b
 1250 03ff 09       		.uleb128 0x9
 1251 0400 01       		.uleb128 0x1
 1252 0401 50       		.byte	0x50
 1253 0402 01       		.uleb128 0x1
 1254 0403 31       		.byte	0x31
 1255 0404 09       		.uleb128 0x9
 1256 0405 01       		.uleb128 0x1
 1257 0406 51       		.byte	0x51
 1258 0407 02       		.uleb128 0x2
 1259 0408 74       		.byte	0x74
 1260 0409 00       		.sleb128 0
 1261 040a 00       		.byte	0
 1262 040b 10       		.uleb128 0x10
 1263 040c 64020000 		.4byte	.LVL72
 1264 0410 88090000 		.4byte	0x988
 1265 0414 35040000 		.4byte	0x435
 1266 0418 09       		.uleb128 0x9
 1267 0419 01       		.uleb128 0x1
 1268 041a 50       		.byte	0x50
 1269 041b 02       		.uleb128 0x2
 1270 041c 08       		.byte	0x8
 1271 041d 96       		.byte	0x96
 1272 041e 09       		.uleb128 0x9
 1273 041f 01       		.uleb128 0x1
 1274 0420 51       		.byte	0x51
 1275 0421 01       		.uleb128 0x1
 1276 0422 31       		.byte	0x31
 1277 0423 09       		.uleb128 0x9
 1278 0424 01       		.uleb128 0x1
 1279 0425 52       		.byte	0x52
 1280 0426 01       		.uleb128 0x1
 1281 0427 34       		.byte	0x34
 1282 0428 09       		.uleb128 0x9
 1283 0429 01       		.uleb128 0x1
 1284 042a 53       		.byte	0x53
 1285 042b 01       		.uleb128 0x1
 1286 042c 30       		.byte	0x30
 1287 042d 09       		.uleb128 0x9
 1288 042e 02       		.uleb128 0x2
 1289 042f 7D       		.byte	0x7d
 1290 0430 00       		.sleb128 0
 1291 0431 02       		.uleb128 0x2
 1292 0432 74       		.byte	0x74
 1293 0433 00       		.sleb128 0
 1294 0434 00       		.byte	0
 1295 0435 06       		.uleb128 0x6
 1296 0436 68020000 		.4byte	.LVL73
 1297 043a 93090000 		.4byte	0x993
 1298 043e 00       		.byte	0
 1299 043f 00       		.byte	0
 1300 0440 06       		.uleb128 0x6
 1301 0441 0A000000 		.4byte	.LVL2
 1302 0445 D5090000 		.4byte	0x9d5
 1303 0449 06       		.uleb128 0x6
 1304 044a 0E000000 		.4byte	.LVL3
 1305 044e E0090000 		.4byte	0x9e0
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccg9Xjeg.s 			page 35


 1306 0452 10       		.uleb128 0x10
 1307 0453 14000000 		.4byte	.LVL4
 1308 0457 B4090000 		.4byte	0x9b4
 1309 045b 69040000 		.4byte	0x469
 1310 045f 09       		.uleb128 0x9
 1311 0460 01       		.uleb128 0x1
 1312 0461 50       		.byte	0x50
 1313 0462 05       		.uleb128 0x5
 1314 0463 03       		.byte	0x3
 1315 0464 00000000 		.4byte	.LC0
 1316 0468 00       		.byte	0
 1317 0469 06       		.uleb128 0x6
 1318 046a 18000000 		.4byte	.LVL5
 1319 046e EB090000 		.4byte	0x9eb
 1320 0472 06       		.uleb128 0x6
 1321 0473 1C000000 		.4byte	.LVL6
 1322 0477 F6090000 		.4byte	0x9f6
 1323 047b 10       		.uleb128 0x10
 1324 047c 22000000 		.4byte	.LVL7
 1325 0480 010A0000 		.4byte	0xa01
 1326 0484 8E040000 		.4byte	0x48e
 1327 0488 09       		.uleb128 0x9
 1328 0489 01       		.uleb128 0x1
 1329 048a 50       		.byte	0x50
 1330 048b 01       		.uleb128 0x1
 1331 048c 30       		.byte	0x30
 1332 048d 00       		.byte	0
 1333 048e 06       		.uleb128 0x6
 1334 048f 2A000000 		.4byte	.LVL8
 1335 0493 0C0A0000 		.4byte	0xa0c
 1336 0497 10       		.uleb128 0x10
 1337 0498 34000000 		.4byte	.LVL9
 1338 049c 170A0000 		.4byte	0xa17
 1339 04a0 AB040000 		.4byte	0x4ab
 1340 04a4 09       		.uleb128 0x9
 1341 04a5 01       		.uleb128 0x1
 1342 04a6 50       		.byte	0x50
 1343 04a7 02       		.uleb128 0x2
 1344 04a8 74       		.byte	0x74
 1345 04a9 00       		.sleb128 0
 1346 04aa 00       		.byte	0
 1347 04ab 10       		.uleb128 0x10
 1348 04ac 3A000000 		.4byte	.LVL10
 1349 04b0 220A0000 		.4byte	0xa22
 1350 04b4 BE040000 		.4byte	0x4be
 1351 04b8 09       		.uleb128 0x9
 1352 04b9 01       		.uleb128 0x1
 1353 04ba 50       		.byte	0x50
 1354 04bb 01       		.uleb128 0x1
 1355 04bc 31       		.byte	0x31
 1356 04bd 00       		.byte	0
 1357 04be 10       		.uleb128 0x10
 1358 04bf 42000000 		.4byte	.LVL11
 1359 04c3 67090000 		.4byte	0x967
 1360 04c7 D3040000 		.4byte	0x4d3
 1361 04cb 09       		.uleb128 0x9
 1362 04cc 01       		.uleb128 0x1
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccg9Xjeg.s 			page 36


 1363 04cd 50       		.byte	0x50
 1364 04ce 03       		.uleb128 0x3
 1365 04cf 0A       		.byte	0xa
 1366 04d0 F401     		.2byte	0x1f4
 1367 04d2 00       		.byte	0
 1368 04d3 10       		.uleb128 0x10
 1369 04d4 48000000 		.4byte	.LVL12
 1370 04d8 220A0000 		.4byte	0xa22
 1371 04dc E6040000 		.4byte	0x4e6
 1372 04e0 09       		.uleb128 0x9
 1373 04e1 01       		.uleb128 0x1
 1374 04e2 50       		.byte	0x50
 1375 04e3 01       		.uleb128 0x1
 1376 04e4 32       		.byte	0x32
 1377 04e5 00       		.byte	0
 1378 04e6 10       		.uleb128 0x10
 1379 04e7 50000000 		.4byte	.LVL13
 1380 04eb 67090000 		.4byte	0x967
 1381 04ef FB040000 		.4byte	0x4fb
 1382 04f3 09       		.uleb128 0x9
 1383 04f4 01       		.uleb128 0x1
 1384 04f5 50       		.byte	0x50
 1385 04f6 03       		.uleb128 0x3
 1386 04f7 0A       		.byte	0xa
 1387 04f8 F401     		.2byte	0x1f4
 1388 04fa 00       		.byte	0
 1389 04fb 10       		.uleb128 0x10
 1390 04fc 56000000 		.4byte	.LVL14
 1391 0500 220A0000 		.4byte	0xa22
 1392 0504 0E050000 		.4byte	0x50e
 1393 0508 09       		.uleb128 0x9
 1394 0509 01       		.uleb128 0x1
 1395 050a 50       		.byte	0x50
 1396 050b 01       		.uleb128 0x1
 1397 050c 33       		.byte	0x33
 1398 050d 00       		.byte	0
 1399 050e 10       		.uleb128 0x10
 1400 050f 5E000000 		.4byte	.LVL15
 1401 0513 67090000 		.4byte	0x967
 1402 0517 23050000 		.4byte	0x523
 1403 051b 09       		.uleb128 0x9
 1404 051c 01       		.uleb128 0x1
 1405 051d 50       		.byte	0x50
 1406 051e 03       		.uleb128 0x3
 1407 051f 0A       		.byte	0xa
 1408 0520 F401     		.2byte	0x1f4
 1409 0522 00       		.byte	0
 1410 0523 10       		.uleb128 0x10
 1411 0524 64000000 		.4byte	.LVL16
 1412 0528 220A0000 		.4byte	0xa22
 1413 052c 37050000 		.4byte	0x537
 1414 0530 09       		.uleb128 0x9
 1415 0531 01       		.uleb128 0x1
 1416 0532 50       		.byte	0x50
 1417 0533 02       		.uleb128 0x2
 1418 0534 74       		.byte	0x74
 1419 0535 00       		.sleb128 0
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccg9Xjeg.s 			page 37


 1420 0536 00       		.byte	0
 1421 0537 10       		.uleb128 0x10
 1422 0538 6C000000 		.4byte	.LVL17
 1423 053c 67090000 		.4byte	0x967
 1424 0540 4C050000 		.4byte	0x54c
 1425 0544 09       		.uleb128 0x9
 1426 0545 01       		.uleb128 0x1
 1427 0546 50       		.byte	0x50
 1428 0547 03       		.uleb128 0x3
 1429 0548 0A       		.byte	0xa
 1430 0549 F401     		.2byte	0x1f4
 1431 054b 00       		.byte	0
 1432 054c 06       		.uleb128 0x6
 1433 054d 70000000 		.4byte	.LVL18
 1434 0551 2D0A0000 		.4byte	0xa2d
 1435 0555 06       		.uleb128 0x6
 1436 0556 74000000 		.4byte	.LVL19
 1437 055a 380A0000 		.4byte	0xa38
 1438 055e 10       		.uleb128 0x10
 1439 055f 7C000000 		.4byte	.LVL20
 1440 0563 430A0000 		.4byte	0xa43
 1441 0567 73050000 		.4byte	0x573
 1442 056b 09       		.uleb128 0x9
 1443 056c 01       		.uleb128 0x1
 1444 056d 50       		.byte	0x50
 1445 056e 03       		.uleb128 0x3
 1446 056f 0A       		.byte	0xa
 1447 0570 E803     		.2byte	0x3e8
 1448 0572 00       		.byte	0
 1449 0573 10       		.uleb128 0x10
 1450 0574 84000000 		.4byte	.LVL21
 1451 0578 67090000 		.4byte	0x967
 1452 057c 88050000 		.4byte	0x588
 1453 0580 09       		.uleb128 0x9
 1454 0581 01       		.uleb128 0x1
 1455 0582 50       		.byte	0x50
 1456 0583 03       		.uleb128 0x3
 1457 0584 0A       		.byte	0xa
 1458 0585 F401     		.2byte	0x1f4
 1459 0587 00       		.byte	0
 1460 0588 06       		.uleb128 0x6
 1461 0589 88000000 		.4byte	.LVL22
 1462 058d 4E0A0000 		.4byte	0xa4e
 1463 0591 06       		.uleb128 0x6
 1464 0592 8C000000 		.4byte	.LVL23
 1465 0596 590A0000 		.4byte	0xa59
 1466 059a 10       		.uleb128 0x10
 1467 059b 94000000 		.4byte	.LVL24
 1468 059f 640A0000 		.4byte	0xa64
 1469 05a3 AF050000 		.4byte	0x5af
 1470 05a7 09       		.uleb128 0x9
 1471 05a8 01       		.uleb128 0x1
 1472 05a9 50       		.byte	0x50
 1473 05aa 03       		.uleb128 0x3
 1474 05ab 0A       		.byte	0xa
 1475 05ac 6004     		.2byte	0x460
 1476 05ae 00       		.byte	0
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccg9Xjeg.s 			page 38


 1477 05af 10       		.uleb128 0x10
 1478 05b0 9C000000 		.4byte	.LVL25
 1479 05b4 67090000 		.4byte	0x967
 1480 05b8 C4050000 		.4byte	0x5c4
 1481 05bc 09       		.uleb128 0x9
 1482 05bd 01       		.uleb128 0x1
 1483 05be 50       		.byte	0x50
 1484 05bf 03       		.uleb128 0x3
 1485 05c0 0A       		.byte	0xa
 1486 05c1 F401     		.2byte	0x1f4
 1487 05c3 00       		.byte	0
 1488 05c4 06       		.uleb128 0x6
 1489 05c5 A0000000 		.4byte	.LVL26
 1490 05c9 6F0A0000 		.4byte	0xa6f
 1491 05cd 06       		.uleb128 0x6
 1492 05ce A4000000 		.4byte	.LVL27
 1493 05d2 7A0A0000 		.4byte	0xa7a
 1494 05d6 06       		.uleb128 0x6
 1495 05d7 A8000000 		.4byte	.LVL28
 1496 05db 850A0000 		.4byte	0xa85
 1497 05df 06       		.uleb128 0x6
 1498 05e0 AC000000 		.4byte	.LVL29
 1499 05e4 900A0000 		.4byte	0xa90
 1500 05e8 06       		.uleb128 0x6
 1501 05e9 B0000000 		.4byte	.LVL30
 1502 05ed 9B0A0000 		.4byte	0xa9b
 1503 05f1 06       		.uleb128 0x6
 1504 05f2 B4000000 		.4byte	.LVL31
 1505 05f6 A60A0000 		.4byte	0xaa6
 1506 05fa 06       		.uleb128 0x6
 1507 05fb B8000000 		.4byte	.LVL32
 1508 05ff B10A0000 		.4byte	0xab1
 1509 0603 06       		.uleb128 0x6
 1510 0604 C2000000 		.4byte	.LVL33
 1511 0608 BC0A0000 		.4byte	0xabc
 1512 060c 06       		.uleb128 0x6
 1513 060d C6000000 		.4byte	.LVL34
 1514 0611 C70A0000 		.4byte	0xac7
 1515 0615 10       		.uleb128 0x10
 1516 0616 CC000000 		.4byte	.LVL35
 1517 061a D20A0000 		.4byte	0xad2
 1518 061e 2C060000 		.4byte	0x62c
 1519 0622 09       		.uleb128 0x9
 1520 0623 01       		.uleb128 0x1
 1521 0624 50       		.byte	0x50
 1522 0625 05       		.uleb128 0x5
 1523 0626 03       		.byte	0x3
 1524 0627 00000000 		.4byte	TIH
 1525 062b 00       		.byte	0
 1526 062c 10       		.uleb128 0x10
 1527 062d D2000000 		.4byte	.LVL36
 1528 0631 DD0A0000 		.4byte	0xadd
 1529 0635 43060000 		.4byte	0x643
 1530 0639 09       		.uleb128 0x9
 1531 063a 01       		.uleb128 0x1
 1532 063b 50       		.byte	0x50
 1533 063c 05       		.uleb128 0x5
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccg9Xjeg.s 			page 39


 1534 063d 03       		.byte	0x3
 1535 063e 00000000 		.4byte	StartIH
 1536 0642 00       		.byte	0
 1537 0643 10       		.uleb128 0x10
 1538 0644 DA000000 		.4byte	.LVL37
 1539 0648 B4090000 		.4byte	0x9b4
 1540 064c 5A060000 		.4byte	0x65a
 1541 0650 09       		.uleb128 0x9
 1542 0651 01       		.uleb128 0x1
 1543 0652 50       		.byte	0x50
 1544 0653 05       		.uleb128 0x5
 1545 0654 03       		.byte	0x3
 1546 0655 18000000 		.4byte	.LC1
 1547 0659 00       		.byte	0
 1548 065a 06       		.uleb128 0x6
 1549 065b DE000000 		.4byte	.LVL38
 1550 065f E80A0000 		.4byte	0xae8
 1551 0663 06       		.uleb128 0x6
 1552 0664 E2000000 		.4byte	.LVL39
 1553 0668 E80A0000 		.4byte	0xae8
 1554 066c 06       		.uleb128 0x6
 1555 066d E6000000 		.4byte	.LVL40
 1556 0671 E80A0000 		.4byte	0xae8
 1557 0675 00       		.byte	0
 1558 0676 11       		.uleb128 0x11
 1559 0677 B2060000 		.4byte	.LASF24
 1560 067b 04       		.byte	0x4
 1561 067c 1207     		.2byte	0x712
 1562 067e 82060000 		.4byte	0x682
 1563 0682 12       		.uleb128 0x12
 1564 0683 76000000 		.4byte	0x76
 1565 0687 13       		.uleb128 0x13
 1566 0688 7C020000 		.4byte	.LASF25
 1567 068c 05       		.byte	0x5
 1568 068d 1B       		.byte	0x1b
 1569 068e 68000000 		.4byte	0x68
 1570 0692 05       		.uleb128 0x5
 1571 0693 03       		.byte	0x3
 1572 0694 00000000 		.4byte	internal_orientation
 1573 0698 13       		.uleb128 0x13
 1574 0699 89010000 		.4byte	.LASF26
 1575 069d 06       		.byte	0x6
 1576 069e 1D       		.byte	0x1d
 1577 069f 68000000 		.4byte	0x68
 1578 06a3 05       		.uleb128 0x5
 1579 06a4 03       		.byte	0x3
 1580 06a5 00000000 		.4byte	driveStraightEnable
 1581 06a9 13       		.uleb128 0x13
 1582 06aa 20030000 		.4byte	.LASF27
 1583 06ae 01       		.byte	0x1
 1584 06af 2C       		.byte	0x2c
 1585 06b0 68000000 		.4byte	0x68
 1586 06b4 05       		.uleb128 0x5
 1587 06b5 03       		.byte	0x3
 1588 06b6 00000000 		.4byte	currentPuckRackScanningIndex
 1589 06ba 14       		.uleb128 0x14
 1590 06bb 68000000 		.4byte	0x68
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccg9Xjeg.s 			page 40


 1591 06bf CA060000 		.4byte	0x6ca
 1592 06c3 15       		.uleb128 0x15
 1593 06c4 9D000000 		.4byte	0x9d
 1594 06c8 04       		.byte	0x4
 1595 06c9 00       		.byte	0
 1596 06ca 13       		.uleb128 0x13
 1597 06cb D9040000 		.4byte	.LASF28
 1598 06cf 01       		.byte	0x1
 1599 06d0 2A       		.byte	0x2a
 1600 06d1 BA060000 		.4byte	0x6ba
 1601 06d5 05       		.uleb128 0x5
 1602 06d6 03       		.byte	0x3
 1603 06d7 00000000 		.4byte	puckRackColours
 1604 06db 13       		.uleb128 0x13
 1605 06dc CD000000 		.4byte	.LASF29
 1606 06e0 01       		.byte	0x1
 1607 06e1 2D       		.byte	0x2d
 1608 06e2 BA060000 		.4byte	0x6ba
 1609 06e6 05       		.uleb128 0x5
 1610 06e7 03       		.byte	0x3
 1611 06e8 00000000 		.4byte	puckRackOffsetsFromWest
 1612 06ec 13       		.uleb128 0x13
 1613 06ed 80010000 		.4byte	.LASF30
 1614 06f1 01       		.byte	0x1
 1615 06f2 25       		.byte	0x25
 1616 06f3 68000000 		.4byte	0x68
 1617 06f7 05       		.uleb128 0x5
 1618 06f8 03       		.byte	0x3
 1619 06f9 00000000 		.4byte	sweeping
 1620 06fd 14       		.uleb128 0x14
 1621 06fe 81000000 		.4byte	0x81
 1622 0702 0D070000 		.4byte	0x70d
 1623 0706 15       		.uleb128 0x15
 1624 0707 9D000000 		.4byte	0x9d
 1625 070b 03       		.byte	0x3
 1626 070c 00       		.byte	0
 1627 070d 13       		.uleb128 0x13
 1628 070e 01040000 		.4byte	.LASF31
 1629 0712 01       		.byte	0x1
 1630 0713 26       		.byte	0x26
 1631 0714 FD060000 		.4byte	0x6fd
 1632 0718 05       		.uleb128 0x5
 1633 0719 03       		.byte	0x3
 1634 071a 00000000 		.4byte	block_edge_location
 1635 071e 13       		.uleb128 0x13
 1636 071f FB020000 		.4byte	.LASF32
 1637 0723 07       		.byte	0x7
 1638 0724 AC       		.byte	0xac
 1639 0725 81000000 		.4byte	0x81
 1640 0729 05       		.uleb128 0x5
 1641 072a 03       		.byte	0x3
 1642 072b 00000000 		.4byte	puckPileLocation
 1643 072f 13       		.uleb128 0x13
 1644 0730 4E000000 		.4byte	.LASF33
 1645 0734 06       		.byte	0x6
 1646 0735 25       		.byte	0x25
 1647 0736 33000000 		.4byte	0x33
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccg9Xjeg.s 			page 41


 1648 073a 05       		.uleb128 0x5
 1649 073b 03       		.byte	0x3
 1650 073c 00000000 		.4byte	drivingForwardFlag
 1651 0740 13       		.uleb128 0x13
 1652 0741 0C030000 		.4byte	.LASF34
 1653 0745 06       		.byte	0x6
 1654 0746 26       		.byte	0x26
 1655 0747 33000000 		.4byte	0x33
 1656 074b 05       		.uleb128 0x5
 1657 074c 03       		.byte	0x3
 1658 074d 00000000 		.4byte	drivingBackwardFlag
 1659 0751 13       		.uleb128 0x13
 1660 0752 25000000 		.4byte	.LASF35
 1661 0756 06       		.byte	0x6
 1662 0757 27       		.byte	0x27
 1663 0758 33000000 		.4byte	0x33
 1664 075c 05       		.uleb128 0x5
 1665 075d 03       		.byte	0x3
 1666 075e 00000000 		.4byte	turningLeftFlag
 1667 0762 13       		.uleb128 0x13
 1668 0763 0E020000 		.4byte	.LASF36
 1669 0767 06       		.byte	0x6
 1670 0768 28       		.byte	0x28
 1671 0769 33000000 		.4byte	0x33
 1672 076d 05       		.uleb128 0x5
 1673 076e 03       		.byte	0x3
 1674 076f 00000000 		.4byte	turningRightFlag
 1675 0773 13       		.uleb128 0x13
 1676 0774 61070000 		.4byte	.LASF37
 1677 0778 06       		.byte	0x6
 1678 0779 2B       		.byte	0x2b
 1679 077a 68000000 		.4byte	0x68
 1680 077e 05       		.uleb128 0x5
 1681 077f 03       		.byte	0x3
 1682 0780 00000000 		.4byte	initialisation
 1683 0784 14       		.uleb128 0x14
 1684 0785 8F000000 		.4byte	0x8f
 1685 0789 94070000 		.4byte	0x794
 1686 078d 15       		.uleb128 0x15
 1687 078e 9D000000 		.4byte	0x9d
 1688 0792 1F       		.byte	0x1f
 1689 0793 00       		.byte	0
 1690 0794 13       		.uleb128 0x13
 1691 0795 84060000 		.4byte	.LASF38
 1692 0799 01       		.byte	0x1
 1693 079a 20       		.byte	0x20
 1694 079b 84070000 		.4byte	0x784
 1695 079f 05       		.uleb128 0x5
 1696 07a0 03       		.byte	0x3
 1697 07a1 00000000 		.4byte	output
 1698 07a5 16       		.uleb128 0x16
 1699 07a6 F9000000 		.4byte	.LASF39
 1700 07aa 07       		.byte	0x7
 1701 07ab BD       		.byte	0xbd
 1702 07ac BA060000 		.4byte	0x6ba
 1703 07b0 13       		.uleb128 0x13
 1704 07b1 7A030000 		.4byte	.LASF40
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccg9Xjeg.s 			page 42


 1705 07b5 01       		.byte	0x1
 1706 07b6 52       		.byte	0x52
 1707 07b7 68000000 		.4byte	0x68
 1708 07bb 05       		.uleb128 0x5
 1709 07bc 03       		.byte	0x3
 1710 07bd 00000000 		.4byte	colour_flag
 1711 07c1 13       		.uleb128 0x13
 1712 07c2 59030000 		.4byte	.LASF41
 1713 07c6 01       		.byte	0x1
 1714 07c7 23       		.byte	0x23
 1715 07c8 68000000 		.4byte	0x68
 1716 07cc 05       		.uleb128 0x5
 1717 07cd 03       		.byte	0x3
 1718 07ce 00000000 		.4byte	state
 1719 07d2 13       		.uleb128 0x13
 1720 07d3 15050000 		.4byte	.LASF42
 1721 07d7 01       		.byte	0x1
 1722 07d8 58       		.byte	0x58
 1723 07d9 68000000 		.4byte	0x68
 1724 07dd 05       		.uleb128 0x5
 1725 07de 03       		.byte	0x3
 1726 07df 00000000 		.4byte	moving
 1727 07e3 13       		.uleb128 0x13
 1728 07e4 1C010000 		.4byte	.LASF43
 1729 07e8 06       		.byte	0x6
 1730 07e9 2D       		.byte	0x2d
 1731 07ea 68000000 		.4byte	0x68
 1732 07ee 05       		.uleb128 0x5
 1733 07ef 03       		.byte	0x3
 1734 07f0 00000000 		.4byte	ultrasonic_flag
 1735 07f4 14       		.uleb128 0x14
 1736 07f5 68000000 		.4byte	0x68
 1737 07f9 04080000 		.4byte	0x804
 1738 07fd 15       		.uleb128 0x15
 1739 07fe 9D000000 		.4byte	0x9d
 1740 0802 02       		.byte	0x2
 1741 0803 00       		.byte	0
 1742 0804 13       		.uleb128 0x13
 1743 0805 9B050000 		.4byte	.LASF44
 1744 0809 01       		.byte	0x1
 1745 080a 2B       		.byte	0x2b
 1746 080b F4070000 		.4byte	0x7f4
 1747 080f 05       		.uleb128 0x5
 1748 0810 03       		.byte	0x3
 1749 0811 00000000 		.4byte	puckConstructionPlan
 1750 0815 13       		.uleb128 0x13
 1751 0816 87040000 		.4byte	.LASF45
 1752 081a 01       		.byte	0x1
 1753 081b 5C       		.byte	0x5c
 1754 081c 68000000 		.4byte	0x68
 1755 0820 05       		.uleb128 0x5
 1756 0821 03       		.byte	0x3
 1757 0822 00000000 		.4byte	current_stage
 1758 0826 13       		.uleb128 0x13
 1759 0827 FC040000 		.4byte	.LASF46
 1760 082b 01       		.byte	0x1
 1761 082c 53       		.byte	0x53
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccg9Xjeg.s 			page 43


 1762 082d 68000000 		.4byte	0x68
 1763 0831 05       		.uleb128 0x5
 1764 0832 03       		.byte	0x3
 1765 0833 00000000 		.4byte	colour_sensing_algorithm
 1766 0837 13       		.uleb128 0x13
 1767 0838 EB020000 		.4byte	.LASF47
 1768 083c 01       		.byte	0x1
 1769 083d 46       		.byte	0x46
 1770 083e 68000000 		.4byte	0x68
 1771 0842 05       		.uleb128 0x5
 1772 0843 03       		.byte	0x3
 1773 0844 00000000 		.4byte	safety_override
 1774 0848 13       		.uleb128 0x13
 1775 0849 B2010000 		.4byte	.LASF48
 1776 084d 01       		.byte	0x1
 1777 084e 24       		.byte	0x24
 1778 084f 68000000 		.4byte	0x68
 1779 0853 05       		.uleb128 0x5
 1780 0854 03       		.byte	0x3
 1781 0855 00000000 		.4byte	running
 1782 0859 13       		.uleb128 0x13
 1783 085a 9D010000 		.4byte	.LASF49
 1784 085e 01       		.byte	0x1
 1785 085f 29       		.byte	0x29
 1786 0860 68000000 		.4byte	0x68
 1787 0864 05       		.uleb128 0x5
 1788 0865 03       		.byte	0x3
 1789 0866 00000000 		.4byte	currentPuckStackSize
 1790 086a 13       		.uleb128 0x13
 1791 086b 52010000 		.4byte	.LASF50
 1792 086f 01       		.byte	0x1
 1793 0870 33       		.byte	0x33
 1794 0871 81000000 		.4byte	0x81
 1795 0875 05       		.uleb128 0x5
 1796 0876 03       		.byte	0x3
 1797 0877 00000000 		.4byte	horizontalPuckGrid
 1798 087b 13       		.uleb128 0x13
 1799 087c A4000000 		.4byte	.LASF51
 1800 0880 01       		.byte	0x1
 1801 0881 37       		.byte	0x37
 1802 0882 68000000 		.4byte	0x68
 1803 0886 05       		.uleb128 0x5
 1804 0887 03       		.byte	0x3
 1805 0888 00000000 		.4byte	beginNavigation
 1806 088c 13       		.uleb128 0x13
 1807 088d 55070000 		.4byte	.LASF52
 1808 0891 01       		.byte	0x1
 1809 0892 39       		.byte	0x39
 1810 0893 68000000 		.4byte	0x68
 1811 0897 05       		.uleb128 0x5
 1812 0898 03       		.byte	0x3
 1813 0899 00000000 		.4byte	pathToPucks
 1814 089d 13       		.uleb128 0x13
 1815 089e 2A050000 		.4byte	.LASF53
 1816 08a2 01       		.byte	0x1
 1817 08a3 3A       		.byte	0x3a
 1818 08a4 68000000 		.4byte	0x68
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccg9Xjeg.s 			page 44


 1819 08a8 05       		.uleb128 0x5
 1820 08a9 03       		.byte	0x3
 1821 08aa 00000000 		.4byte	pathPastBlock
 1822 08ae 14       		.uleb128 0x14
 1823 08af 68000000 		.4byte	0x68
 1824 08b3 BE080000 		.4byte	0x8be
 1825 08b7 15       		.uleb128 0x15
 1826 08b8 9D000000 		.4byte	0x9d
 1827 08bc 03       		.byte	0x3
 1828 08bd 00       		.byte	0
 1829 08be 13       		.uleb128 0x13
 1830 08bf BA010000 		.4byte	.LASF54
 1831 08c3 01       		.byte	0x1
 1832 08c4 3B       		.byte	0x3b
 1833 08c5 AE080000 		.4byte	0x8ae
 1834 08c9 05       		.uleb128 0x5
 1835 08ca 03       		.byte	0x3
 1836 08cb 00000000 		.4byte	block_location
 1837 08cf 13       		.uleb128 0x13
 1838 08d0 B6030000 		.4byte	.LASF55
 1839 08d4 01       		.byte	0x1
 1840 08d5 40       		.byte	0x40
 1841 08d6 AE080000 		.4byte	0x8ae
 1842 08da 05       		.uleb128 0x5
 1843 08db 03       		.byte	0x3
 1844 08dc 00000000 		.4byte	puck_location
 1845 08e0 13       		.uleb128 0x13
 1846 08e1 D8020000 		.4byte	.LASF56
 1847 08e5 01       		.byte	0x1
 1848 08e6 4A       		.byte	0x4a
 1849 08e7 33000000 		.4byte	0x33
 1850 08eb 05       		.uleb128 0x5
 1851 08ec 03       		.byte	0x3
 1852 08ed 00000000 		.4byte	blockEastClearance
 1853 08f1 13       		.uleb128 0x13
 1854 08f2 DE050000 		.4byte	.LASF57
 1855 08f6 01       		.byte	0x1
 1856 08f7 4B       		.byte	0x4b
 1857 08f8 33000000 		.4byte	0x33
 1858 08fc 05       		.uleb128 0x5
 1859 08fd 03       		.byte	0x3
 1860 08fe 00000000 		.4byte	blockWestClearance
 1861 0902 13       		.uleb128 0x13
 1862 0903 5F060000 		.4byte	.LASF58
 1863 0907 01       		.byte	0x1
 1864 0908 4C       		.byte	0x4c
 1865 0909 33000000 		.4byte	0x33
 1866 090d 05       		.uleb128 0x5
 1867 090e 03       		.byte	0x3
 1868 090f 00000000 		.4byte	puckEastClearance
 1869 0913 13       		.uleb128 0x13
 1870 0914 E1010000 		.4byte	.LASF59
 1871 0918 01       		.byte	0x1
 1872 0919 4D       		.byte	0x4d
 1873 091a 33000000 		.4byte	0x33
 1874 091e 05       		.uleb128 0x5
 1875 091f 03       		.byte	0x3
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccg9Xjeg.s 			page 45


 1876 0920 00000000 		.4byte	puckWestClearance
 1877 0924 13       		.uleb128 0x13
 1878 0925 59040000 		.4byte	.LASF60
 1879 0929 01       		.byte	0x1
 1880 092a 51       		.byte	0x51
 1881 092b 68000000 		.4byte	0x68
 1882 092f 05       		.uleb128 0x5
 1883 0930 03       		.byte	0x3
 1884 0931 00000000 		.4byte	idac_value
 1885 0935 13       		.uleb128 0x13
 1886 0936 E9040000 		.4byte	.LASF61
 1887 093a 01       		.byte	0x1
 1888 093b 5A       		.byte	0x5a
 1889 093c 46090000 		.4byte	0x946
 1890 0940 05       		.uleb128 0x5
 1891 0941 03       		.byte	0x3
 1892 0942 00000000 		.4byte	PLAN_SCAN_VERTICAL
 1893 0946 17       		.uleb128 0x17
 1894 0947 68000000 		.4byte	0x68
 1895 094b 13       		.uleb128 0x13
 1896 094c 99060000 		.4byte	.LASF62
 1897 0950 01       		.byte	0x1
 1898 0951 60       		.byte	0x60
 1899 0952 68000000 		.4byte	0x68
 1900 0956 05       		.uleb128 0x5
 1901 0957 03       		.byte	0x3
 1902 0958 00000000 		.4byte	distance_returned_global
 1903 095c 18       		.uleb128 0x18
 1904 095d F3010000 		.4byte	.LASF63
 1905 0961 F3010000 		.4byte	.LASF63
 1906 0965 06       		.byte	0x6
 1907 0966 19       		.byte	0x19
 1908 0967 18       		.uleb128 0x18
 1909 0968 4D070000 		.4byte	.LASF64
 1910 096c 4D070000 		.4byte	.LASF64
 1911 0970 08       		.byte	0x8
 1912 0971 76       		.byte	0x76
 1913 0972 18       		.uleb128 0x18
 1914 0973 CC020000 		.4byte	.LASF65
 1915 0977 CC020000 		.4byte	.LASF65
 1916 097b 09       		.byte	0x9
 1917 097c 10       		.byte	0x10
 1918 097d 18       		.uleb128 0x18
 1919 097e 2C010000 		.4byte	.LASF66
 1920 0982 2C010000 		.4byte	.LASF66
 1921 0986 09       		.byte	0x9
 1922 0987 0E       		.byte	0xe
 1923 0988 18       		.uleb128 0x18
 1924 0989 71060000 		.4byte	.LASF67
 1925 098d 71060000 		.4byte	.LASF67
 1926 0991 05       		.byte	0x5
 1927 0992 12       		.byte	0x12
 1928 0993 18       		.uleb128 0x18
 1929 0994 35000000 		.4byte	.LASF68
 1930 0998 35000000 		.4byte	.LASF68
 1931 099c 05       		.byte	0x5
 1932 099d 10       		.byte	0x10
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccg9Xjeg.s 			page 46


 1933 099e 18       		.uleb128 0x18
 1934 099f C0040000 		.4byte	.LASF69
 1935 09a3 C0040000 		.4byte	.LASF69
 1936 09a7 06       		.byte	0x6
 1937 09a8 16       		.byte	0x16
 1938 09a9 18       		.uleb128 0x18
 1939 09aa C4030000 		.4byte	.LASF70
 1940 09ae C4030000 		.4byte	.LASF70
 1941 09b2 0A       		.byte	0xa
 1942 09b3 E7       		.byte	0xe7
 1943 09b4 18       		.uleb128 0x18
 1944 09b5 8A050000 		.4byte	.LASF71
 1945 09b9 8A050000 		.4byte	.LASF71
 1946 09bd 0B       		.byte	0xb
 1947 09be 8B       		.byte	0x8b
 1948 09bf 18       		.uleb128 0x18
 1949 09c0 AA020000 		.4byte	.LASF72
 1950 09c4 AA020000 		.4byte	.LASF72
 1951 09c8 0C       		.byte	0xc
 1952 09c9 1C       		.byte	0x1c
 1953 09ca 18       		.uleb128 0x18
 1954 09cb 00000000 		.4byte	.LASF73
 1955 09cf 00000000 		.4byte	.LASF73
 1956 09d3 05       		.byte	0x5
 1957 09d4 14       		.byte	0x14
 1958 09d5 18       		.uleb128 0x18
 1959 09d6 B4040000 		.4byte	.LASF74
 1960 09da B4040000 		.4byte	.LASF74
 1961 09de 0D       		.byte	0xd
 1962 09df 3D       		.byte	0x3d
 1963 09e0 18       		.uleb128 0x18
 1964 09e1 5F030000 		.4byte	.LASF75
 1965 09e5 5F030000 		.4byte	.LASF75
 1966 09e9 0B       		.byte	0xb
 1967 09ea 54       		.byte	0x54
 1968 09eb 18       		.uleb128 0x18
 1969 09ec 69020000 		.4byte	.LASF76
 1970 09f0 69020000 		.4byte	.LASF76
 1971 09f4 0E       		.byte	0xe
 1972 09f5 3A       		.byte	0x3a
 1973 09f6 18       		.uleb128 0x18
 1974 09f7 64040000 		.4byte	.LASF77
 1975 09fb 64040000 		.4byte	.LASF77
 1976 09ff 0F       		.byte	0xf
 1977 0a00 3C       		.byte	0x3c
 1978 0a01 18       		.uleb128 0x18
 1979 0a02 E4030000 		.4byte	.LASF78
 1980 0a06 E4030000 		.4byte	.LASF78
 1981 0a0a 0F       		.byte	0xf
 1982 0a0b 40       		.byte	0x40
 1983 0a0c 18       		.uleb128 0x18
 1984 0a0d 4B050000 		.4byte	.LASF79
 1985 0a11 4B050000 		.4byte	.LASF79
 1986 0a15 0F       		.byte	0xf
 1987 0a16 41       		.byte	0x41
 1988 0a17 18       		.uleb128 0x18
 1989 0a18 B3020000 		.4byte	.LASF80
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccg9Xjeg.s 			page 47


 1990 0a1c B3020000 		.4byte	.LASF80
 1991 0a20 10       		.byte	0x10
 1992 0a21 2F       		.byte	0x2f
 1993 0a22 18       		.uleb128 0x18
 1994 0a23 2C040000 		.4byte	.LASF81
 1995 0a27 2C040000 		.4byte	.LASF81
 1996 0a2b 11       		.byte	0x11
 1997 0a2c 2F       		.byte	0x2f
 1998 0a2d 18       		.uleb128 0x18
 1999 0a2e CC030000 		.4byte	.LASF82
 2000 0a32 CC030000 		.4byte	.LASF82
 2001 0a36 0C       		.byte	0xc
 2002 0a37 19       		.byte	0x19
 2003 0a38 18       		.uleb128 0x18
 2004 0a39 72040000 		.4byte	.LASF83
 2005 0a3d 72040000 		.4byte	.LASF83
 2006 0a41 12       		.byte	0x12
 2007 0a42 92       		.byte	0x92
 2008 0a43 18       		.uleb128 0x18
 2009 0a44 3D030000 		.4byte	.LASF84
 2010 0a48 3D030000 		.4byte	.LASF84
 2011 0a4c 12       		.byte	0x12
 2012 0a4d C3       		.byte	0xc3
 2013 0a4e 18       		.uleb128 0x18
 2014 0a4f 3D010000 		.4byte	.LASF85
 2015 0a53 3D010000 		.4byte	.LASF85
 2016 0a57 12       		.byte	0x12
 2017 0a58 DC       		.byte	0xdc
 2018 0a59 18       		.uleb128 0x18
 2019 0a5a C9010000 		.4byte	.LASF86
 2020 0a5e C9010000 		.4byte	.LASF86
 2021 0a62 13       		.byte	0x13
 2022 0a63 92       		.byte	0x92
 2023 0a64 18       		.uleb128 0x18
 2024 0a65 95040000 		.4byte	.LASF87
 2025 0a69 95040000 		.4byte	.LASF87
 2026 0a6d 13       		.byte	0x13
 2027 0a6e C3       		.byte	0xc3
 2028 0a6f 18       		.uleb128 0x18
 2029 0a70 B0050000 		.4byte	.LASF88
 2030 0a74 B0050000 		.4byte	.LASF88
 2031 0a78 13       		.byte	0x13
 2032 0a79 DC       		.byte	0xdc
 2033 0a7a 18       		.uleb128 0x18
 2034 0a7b 9E030000 		.4byte	.LASF89
 2035 0a7f 9E030000 		.4byte	.LASF89
 2036 0a83 14       		.byte	0x14
 2037 0a84 92       		.byte	0x92
 2038 0a85 18       		.uleb128 0x18
 2039 0a86 86030000 		.4byte	.LASF90
 2040 0a8a 86030000 		.4byte	.LASF90
 2041 0a8e 14       		.byte	0x14
 2042 0a8f DC       		.byte	0xdc
 2043 0a90 18       		.uleb128 0x18
 2044 0a91 91020000 		.4byte	.LASF91
 2045 0a95 91020000 		.4byte	.LASF91
 2046 0a99 15       		.byte	0x15
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccg9Xjeg.s 			page 48


 2047 0a9a 92       		.byte	0x92
 2048 0a9b 18       		.uleb128 0x18
 2049 0a9c 50020000 		.4byte	.LASF92
 2050 0aa0 50020000 		.4byte	.LASF92
 2051 0aa4 15       		.byte	0x15
 2052 0aa5 DC       		.byte	0xdc
 2053 0aa6 18       		.uleb128 0x18
 2054 0aa7 B4000000 		.4byte	.LASF93
 2055 0aab B4000000 		.4byte	.LASF93
 2056 0aaf 16       		.byte	0x16
 2057 0ab0 48       		.byte	0x48
 2058 0ab1 18       		.uleb128 0x18
 2059 0ab2 6F000000 		.4byte	.LASF94
 2060 0ab6 6F000000 		.4byte	.LASF94
 2061 0aba 17       		.byte	0x17
 2062 0abb 48       		.byte	0x48
 2063 0abc 18       		.uleb128 0x18
 2064 0abd 1C050000 		.4byte	.LASF95
 2065 0ac1 1C050000 		.4byte	.LASF95
 2066 0ac5 18       		.byte	0x18
 2067 0ac6 5A       		.byte	0x5a
 2068 0ac7 18       		.uleb128 0x18
 2069 0ac8 65010000 		.4byte	.LASF96
 2070 0acc 65010000 		.4byte	.LASF96
 2071 0ad0 18       		.byte	0x18
 2072 0ad1 5E       		.byte	0x5e
 2073 0ad2 18       		.uleb128 0x18
 2074 0ad3 61000000 		.4byte	.LASF97
 2075 0ad7 61000000 		.4byte	.LASF97
 2076 0adb 19       		.byte	0x19
 2077 0adc 18       		.byte	0x18
 2078 0add 18       		.uleb128 0x18
 2079 0ade 75050000 		.4byte	.LASF98
 2080 0ae2 75050000 		.4byte	.LASF98
 2081 0ae6 1A       		.byte	0x1a
 2082 0ae7 18       		.byte	0x18
 2083 0ae8 18       		.uleb128 0x18
 2084 0ae9 4B060000 		.4byte	.LASF99
 2085 0aed 4B060000 		.4byte	.LASF99
 2086 0af1 06       		.byte	0x6
 2087 0af2 1A       		.byte	0x1a
 2088 0af3 00       		.byte	0
 2089              		.section	.debug_abbrev,"",%progbits
 2090              	.Ldebug_abbrev0:
 2091 0000 01       		.uleb128 0x1
 2092 0001 11       		.uleb128 0x11
 2093 0002 01       		.byte	0x1
 2094 0003 25       		.uleb128 0x25
 2095 0004 0E       		.uleb128 0xe
 2096 0005 13       		.uleb128 0x13
 2097 0006 0B       		.uleb128 0xb
 2098 0007 03       		.uleb128 0x3
 2099 0008 0E       		.uleb128 0xe
 2100 0009 1B       		.uleb128 0x1b
 2101 000a 0E       		.uleb128 0xe
 2102 000b 55       		.uleb128 0x55
 2103 000c 17       		.uleb128 0x17
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccg9Xjeg.s 			page 49


 2104 000d 11       		.uleb128 0x11
 2105 000e 01       		.uleb128 0x1
 2106 000f 10       		.uleb128 0x10
 2107 0010 17       		.uleb128 0x17
 2108 0011 00       		.byte	0
 2109 0012 00       		.byte	0
 2110 0013 02       		.uleb128 0x2
 2111 0014 24       		.uleb128 0x24
 2112 0015 00       		.byte	0
 2113 0016 0B       		.uleb128 0xb
 2114 0017 0B       		.uleb128 0xb
 2115 0018 3E       		.uleb128 0x3e
 2116 0019 0B       		.uleb128 0xb
 2117 001a 03       		.uleb128 0x3
 2118 001b 0E       		.uleb128 0xe
 2119 001c 00       		.byte	0
 2120 001d 00       		.byte	0
 2121 001e 03       		.uleb128 0x3
 2122 001f 16       		.uleb128 0x16
 2123 0020 00       		.byte	0
 2124 0021 03       		.uleb128 0x3
 2125 0022 0E       		.uleb128 0xe
 2126 0023 3A       		.uleb128 0x3a
 2127 0024 0B       		.uleb128 0xb
 2128 0025 3B       		.uleb128 0x3b
 2129 0026 0B       		.uleb128 0xb
 2130 0027 49       		.uleb128 0x49
 2131 0028 13       		.uleb128 0x13
 2132 0029 00       		.byte	0
 2133 002a 00       		.byte	0
 2134 002b 04       		.uleb128 0x4
 2135 002c 24       		.uleb128 0x24
 2136 002d 00       		.byte	0
 2137 002e 0B       		.uleb128 0xb
 2138 002f 0B       		.uleb128 0xb
 2139 0030 3E       		.uleb128 0x3e
 2140 0031 0B       		.uleb128 0xb
 2141 0032 03       		.uleb128 0x3
 2142 0033 08       		.uleb128 0x8
 2143 0034 00       		.byte	0
 2144 0035 00       		.byte	0
 2145 0036 05       		.uleb128 0x5
 2146 0037 2E       		.uleb128 0x2e
 2147 0038 01       		.byte	0x1
 2148 0039 3F       		.uleb128 0x3f
 2149 003a 19       		.uleb128 0x19
 2150 003b 03       		.uleb128 0x3
 2151 003c 08       		.uleb128 0x8
 2152 003d 3A       		.uleb128 0x3a
 2153 003e 0B       		.uleb128 0xb
 2154 003f 3B       		.uleb128 0x3b
 2155 0040 0B       		.uleb128 0xb
 2156 0041 27       		.uleb128 0x27
 2157 0042 19       		.uleb128 0x19
 2158 0043 11       		.uleb128 0x11
 2159 0044 01       		.uleb128 0x1
 2160 0045 12       		.uleb128 0x12
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccg9Xjeg.s 			page 50


 2161 0046 06       		.uleb128 0x6
 2162 0047 40       		.uleb128 0x40
 2163 0048 18       		.uleb128 0x18
 2164 0049 9742     		.uleb128 0x2117
 2165 004b 19       		.uleb128 0x19
 2166 004c 01       		.uleb128 0x1
 2167 004d 13       		.uleb128 0x13
 2168 004e 00       		.byte	0
 2169 004f 00       		.byte	0
 2170 0050 06       		.uleb128 0x6
 2171 0051 898201   		.uleb128 0x4109
 2172 0054 00       		.byte	0
 2173 0055 11       		.uleb128 0x11
 2174 0056 01       		.uleb128 0x1
 2175 0057 31       		.uleb128 0x31
 2176 0058 13       		.uleb128 0x13
 2177 0059 00       		.byte	0
 2178 005a 00       		.byte	0
 2179 005b 07       		.uleb128 0x7
 2180 005c 2E       		.uleb128 0x2e
 2181 005d 01       		.byte	0x1
 2182 005e 3F       		.uleb128 0x3f
 2183 005f 19       		.uleb128 0x19
 2184 0060 03       		.uleb128 0x3
 2185 0061 0E       		.uleb128 0xe
 2186 0062 3A       		.uleb128 0x3a
 2187 0063 0B       		.uleb128 0xb
 2188 0064 3B       		.uleb128 0x3b
 2189 0065 0B       		.uleb128 0xb
 2190 0066 27       		.uleb128 0x27
 2191 0067 19       		.uleb128 0x19
 2192 0068 11       		.uleb128 0x11
 2193 0069 01       		.uleb128 0x1
 2194 006a 12       		.uleb128 0x12
 2195 006b 06       		.uleb128 0x6
 2196 006c 40       		.uleb128 0x40
 2197 006d 18       		.uleb128 0x18
 2198 006e 9742     		.uleb128 0x2117
 2199 0070 19       		.uleb128 0x19
 2200 0071 01       		.uleb128 0x1
 2201 0072 13       		.uleb128 0x13
 2202 0073 00       		.byte	0
 2203 0074 00       		.byte	0
 2204 0075 08       		.uleb128 0x8
 2205 0076 898201   		.uleb128 0x4109
 2206 0079 01       		.byte	0x1
 2207 007a 11       		.uleb128 0x11
 2208 007b 01       		.uleb128 0x1
 2209 007c 31       		.uleb128 0x31
 2210 007d 13       		.uleb128 0x13
 2211 007e 00       		.byte	0
 2212 007f 00       		.byte	0
 2213 0080 09       		.uleb128 0x9
 2214 0081 8A8201   		.uleb128 0x410a
 2215 0084 00       		.byte	0
 2216 0085 02       		.uleb128 0x2
 2217 0086 18       		.uleb128 0x18
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccg9Xjeg.s 			page 51


 2218 0087 9142     		.uleb128 0x2111
 2219 0089 18       		.uleb128 0x18
 2220 008a 00       		.byte	0
 2221 008b 00       		.byte	0
 2222 008c 0A       		.uleb128 0xa
 2223 008d 2E       		.uleb128 0x2e
 2224 008e 01       		.byte	0x1
 2225 008f 3F       		.uleb128 0x3f
 2226 0090 19       		.uleb128 0x19
 2227 0091 03       		.uleb128 0x3
 2228 0092 0E       		.uleb128 0xe
 2229 0093 3A       		.uleb128 0x3a
 2230 0094 0B       		.uleb128 0xb
 2231 0095 3B       		.uleb128 0x3b
 2232 0096 0B       		.uleb128 0xb
 2233 0097 27       		.uleb128 0x27
 2234 0098 19       		.uleb128 0x19
 2235 0099 49       		.uleb128 0x49
 2236 009a 13       		.uleb128 0x13
 2237 009b 8701     		.uleb128 0x87
 2238 009d 19       		.uleb128 0x19
 2239 009e 11       		.uleb128 0x11
 2240 009f 01       		.uleb128 0x1
 2241 00a0 12       		.uleb128 0x12
 2242 00a1 06       		.uleb128 0x6
 2243 00a2 40       		.uleb128 0x40
 2244 00a3 18       		.uleb128 0x18
 2245 00a4 9742     		.uleb128 0x2117
 2246 00a6 19       		.uleb128 0x19
 2247 00a7 01       		.uleb128 0x1
 2248 00a8 13       		.uleb128 0x13
 2249 00a9 00       		.byte	0
 2250 00aa 00       		.byte	0
 2251 00ab 0B       		.uleb128 0xb
 2252 00ac 34       		.uleb128 0x34
 2253 00ad 00       		.byte	0
 2254 00ae 03       		.uleb128 0x3
 2255 00af 0E       		.uleb128 0xe
 2256 00b0 3A       		.uleb128 0x3a
 2257 00b1 0B       		.uleb128 0xb
 2258 00b2 3B       		.uleb128 0x3b
 2259 00b3 0B       		.uleb128 0xb
 2260 00b4 49       		.uleb128 0x49
 2261 00b5 13       		.uleb128 0x13
 2262 00b6 1C       		.uleb128 0x1c
 2263 00b7 0B       		.uleb128 0xb
 2264 00b8 00       		.byte	0
 2265 00b9 00       		.byte	0
 2266 00ba 0C       		.uleb128 0xc
 2267 00bb 0B       		.uleb128 0xb
 2268 00bc 01       		.byte	0x1
 2269 00bd 11       		.uleb128 0x11
 2270 00be 01       		.uleb128 0x1
 2271 00bf 12       		.uleb128 0x12
 2272 00c0 06       		.uleb128 0x6
 2273 00c1 01       		.uleb128 0x1
 2274 00c2 13       		.uleb128 0x13
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccg9Xjeg.s 			page 52


 2275 00c3 00       		.byte	0
 2276 00c4 00       		.byte	0
 2277 00c5 0D       		.uleb128 0xd
 2278 00c6 34       		.uleb128 0x34
 2279 00c7 00       		.byte	0
 2280 00c8 03       		.uleb128 0x3
 2281 00c9 0E       		.uleb128 0xe
 2282 00ca 3A       		.uleb128 0x3a
 2283 00cb 0B       		.uleb128 0xb
 2284 00cc 3B       		.uleb128 0x3b
 2285 00cd 05       		.uleb128 0x5
 2286 00ce 49       		.uleb128 0x49
 2287 00cf 13       		.uleb128 0x13
 2288 00d0 1C       		.uleb128 0x1c
 2289 00d1 05       		.uleb128 0x5
 2290 00d2 00       		.byte	0
 2291 00d3 00       		.byte	0
 2292 00d4 0E       		.uleb128 0xe
 2293 00d5 0B       		.uleb128 0xb
 2294 00d6 01       		.byte	0x1
 2295 00d7 11       		.uleb128 0x11
 2296 00d8 01       		.uleb128 0x1
 2297 00d9 12       		.uleb128 0x12
 2298 00da 06       		.uleb128 0x6
 2299 00db 00       		.byte	0
 2300 00dc 00       		.byte	0
 2301 00dd 0F       		.uleb128 0xf
 2302 00de 34       		.uleb128 0x34
 2303 00df 00       		.byte	0
 2304 00e0 03       		.uleb128 0x3
 2305 00e1 0E       		.uleb128 0xe
 2306 00e2 3A       		.uleb128 0x3a
 2307 00e3 0B       		.uleb128 0xb
 2308 00e4 3B       		.uleb128 0x3b
 2309 00e5 05       		.uleb128 0x5
 2310 00e6 49       		.uleb128 0x49
 2311 00e7 13       		.uleb128 0x13
 2312 00e8 02       		.uleb128 0x2
 2313 00e9 17       		.uleb128 0x17
 2314 00ea 00       		.byte	0
 2315 00eb 00       		.byte	0
 2316 00ec 10       		.uleb128 0x10
 2317 00ed 898201   		.uleb128 0x4109
 2318 00f0 01       		.byte	0x1
 2319 00f1 11       		.uleb128 0x11
 2320 00f2 01       		.uleb128 0x1
 2321 00f3 31       		.uleb128 0x31
 2322 00f4 13       		.uleb128 0x13
 2323 00f5 01       		.uleb128 0x1
 2324 00f6 13       		.uleb128 0x13
 2325 00f7 00       		.byte	0
 2326 00f8 00       		.byte	0
 2327 00f9 11       		.uleb128 0x11
 2328 00fa 34       		.uleb128 0x34
 2329 00fb 00       		.byte	0
 2330 00fc 03       		.uleb128 0x3
 2331 00fd 0E       		.uleb128 0xe
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccg9Xjeg.s 			page 53


 2332 00fe 3A       		.uleb128 0x3a
 2333 00ff 0B       		.uleb128 0xb
 2334 0100 3B       		.uleb128 0x3b
 2335 0101 05       		.uleb128 0x5
 2336 0102 49       		.uleb128 0x49
 2337 0103 13       		.uleb128 0x13
 2338 0104 3F       		.uleb128 0x3f
 2339 0105 19       		.uleb128 0x19
 2340 0106 3C       		.uleb128 0x3c
 2341 0107 19       		.uleb128 0x19
 2342 0108 00       		.byte	0
 2343 0109 00       		.byte	0
 2344 010a 12       		.uleb128 0x12
 2345 010b 35       		.uleb128 0x35
 2346 010c 00       		.byte	0
 2347 010d 49       		.uleb128 0x49
 2348 010e 13       		.uleb128 0x13
 2349 010f 00       		.byte	0
 2350 0110 00       		.byte	0
 2351 0111 13       		.uleb128 0x13
 2352 0112 34       		.uleb128 0x34
 2353 0113 00       		.byte	0
 2354 0114 03       		.uleb128 0x3
 2355 0115 0E       		.uleb128 0xe
 2356 0116 3A       		.uleb128 0x3a
 2357 0117 0B       		.uleb128 0xb
 2358 0118 3B       		.uleb128 0x3b
 2359 0119 0B       		.uleb128 0xb
 2360 011a 49       		.uleb128 0x49
 2361 011b 13       		.uleb128 0x13
 2362 011c 3F       		.uleb128 0x3f
 2363 011d 19       		.uleb128 0x19
 2364 011e 02       		.uleb128 0x2
 2365 011f 18       		.uleb128 0x18
 2366 0120 00       		.byte	0
 2367 0121 00       		.byte	0
 2368 0122 14       		.uleb128 0x14
 2369 0123 01       		.uleb128 0x1
 2370 0124 01       		.byte	0x1
 2371 0125 49       		.uleb128 0x49
 2372 0126 13       		.uleb128 0x13
 2373 0127 01       		.uleb128 0x1
 2374 0128 13       		.uleb128 0x13
 2375 0129 00       		.byte	0
 2376 012a 00       		.byte	0
 2377 012b 15       		.uleb128 0x15
 2378 012c 21       		.uleb128 0x21
 2379 012d 00       		.byte	0
 2380 012e 49       		.uleb128 0x49
 2381 012f 13       		.uleb128 0x13
 2382 0130 2F       		.uleb128 0x2f
 2383 0131 0B       		.uleb128 0xb
 2384 0132 00       		.byte	0
 2385 0133 00       		.byte	0
 2386 0134 16       		.uleb128 0x16
 2387 0135 34       		.uleb128 0x34
 2388 0136 00       		.byte	0
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccg9Xjeg.s 			page 54


 2389 0137 03       		.uleb128 0x3
 2390 0138 0E       		.uleb128 0xe
 2391 0139 3A       		.uleb128 0x3a
 2392 013a 0B       		.uleb128 0xb
 2393 013b 3B       		.uleb128 0x3b
 2394 013c 0B       		.uleb128 0xb
 2395 013d 49       		.uleb128 0x49
 2396 013e 13       		.uleb128 0x13
 2397 013f 3F       		.uleb128 0x3f
 2398 0140 19       		.uleb128 0x19
 2399 0141 3C       		.uleb128 0x3c
 2400 0142 19       		.uleb128 0x19
 2401 0143 00       		.byte	0
 2402 0144 00       		.byte	0
 2403 0145 17       		.uleb128 0x17
 2404 0146 26       		.uleb128 0x26
 2405 0147 00       		.byte	0
 2406 0148 49       		.uleb128 0x49
 2407 0149 13       		.uleb128 0x13
 2408 014a 00       		.byte	0
 2409 014b 00       		.byte	0
 2410 014c 18       		.uleb128 0x18
 2411 014d 2E       		.uleb128 0x2e
 2412 014e 00       		.byte	0
 2413 014f 3F       		.uleb128 0x3f
 2414 0150 19       		.uleb128 0x19
 2415 0151 3C       		.uleb128 0x3c
 2416 0152 19       		.uleb128 0x19
 2417 0153 6E       		.uleb128 0x6e
 2418 0154 0E       		.uleb128 0xe
 2419 0155 03       		.uleb128 0x3
 2420 0156 0E       		.uleb128 0xe
 2421 0157 3A       		.uleb128 0x3a
 2422 0158 0B       		.uleb128 0xb
 2423 0159 3B       		.uleb128 0x3b
 2424 015a 0B       		.uleb128 0xb
 2425 015b 00       		.byte	0
 2426 015c 00       		.byte	0
 2427 015d 00       		.byte	0
 2428              		.section	.debug_loc,"",%progbits
 2429              	.Ldebug_loc0:
 2430              	.LLST0:
 2431 0000 38010000 		.4byte	.LVL48
 2432 0004 3E010000 		.4byte	.LVL49
 2433 0008 0700     		.2byte	0x7
 2434 000a 0A       		.byte	0xa
 2435 000b 1202     		.2byte	0x212
 2436 000d 72       		.byte	0x72
 2437 000e 00       		.sleb128 0
 2438 000f 1C       		.byte	0x1c
 2439 0010 9F       		.byte	0x9f
 2440 0011 3E010000 		.4byte	.LVL49
 2441 0015 47010000 		.4byte	.LVL50-1
 2442 0019 0800     		.2byte	0x8
 2443 001b 0A       		.byte	0xa
 2444 001c 1202     		.2byte	0x212
 2445 001e 75       		.byte	0x75
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccg9Xjeg.s 			page 55


 2446 001f 08       		.sleb128 8
 2447 0020 06       		.byte	0x6
 2448 0021 1C       		.byte	0x1c
 2449 0022 9F       		.byte	0x9f
 2450 0023 4E010000 		.4byte	.LVL51
 2451 0027 94020000 		.4byte	.LFE66
 2452 002b 0400     		.2byte	0x4
 2453 002d 0A       		.byte	0xa
 2454 002e 5E01     		.2byte	0x15e
 2455 0030 9F       		.byte	0x9f
 2456 0031 00000000 		.4byte	0
 2457 0035 00000000 		.4byte	0
 2458              		.section	.debug_aranges,"",%progbits
 2459 0000 2C000000 		.4byte	0x2c
 2460 0004 0200     		.2byte	0x2
 2461 0006 00000000 		.4byte	.Ldebug_info0
 2462 000a 04       		.byte	0x4
 2463 000b 00       		.byte	0
 2464 000c 0000     		.2byte	0
 2465 000e 0000     		.2byte	0
 2466 0010 00000000 		.4byte	.LFB64
 2467 0014 08000000 		.4byte	.LFE64-.LFB64
 2468 0018 00000000 		.4byte	.LFB65
 2469 001c 20000000 		.4byte	.LFE65-.LFB65
 2470 0020 00000000 		.4byte	.LFB66
 2471 0024 94020000 		.4byte	.LFE66-.LFB66
 2472 0028 00000000 		.4byte	0
 2473 002c 00000000 		.4byte	0
 2474              		.section	.debug_ranges,"",%progbits
 2475              	.Ldebug_ranges0:
 2476 0000 00000000 		.4byte	.LFB64
 2477 0004 08000000 		.4byte	.LFE64
 2478 0008 00000000 		.4byte	.LFB65
 2479 000c 20000000 		.4byte	.LFE65
 2480 0010 00000000 		.4byte	.LFB66
 2481 0014 94020000 		.4byte	.LFE66
 2482 0018 00000000 		.4byte	0
 2483 001c 00000000 		.4byte	0
 2484              		.section	.debug_line,"",%progbits
 2485              	.Ldebug_line0:
 2486 0000 A4030000 		.section	.debug_str,"MS",%progbits,1
 2486      02000703 
 2486      00000201 
 2486      FB0E0D00 
 2486      01010101 
 2487              	.LASF73:
 2488 0000 6368616E 		.ascii	"changeOrientation\000"
 2488      67654F72 
 2488      69656E74 
 2488      6174696F 
 2488      6E00
 2489              	.LASF20:
 2490 0012 756C7472 		.ascii	"ultrasonic_testing\000"
 2490      61736F6E 
 2490      69635F74 
 2490      65737469 
 2490      6E6700
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccg9Xjeg.s 			page 56


 2491              	.LASF35:
 2492 0025 7475726E 		.ascii	"turningLeftFlag\000"
 2492      696E674C 
 2492      65667446 
 2492      6C616700 
 2493              	.LASF68:
 2494 0035 73747261 		.ascii	"straightAdjust\000"
 2494      69676874 
 2494      41646A75 
 2494      737400
 2495              	.LASF2:
 2496 0044 73686F72 		.ascii	"short int\000"
 2496      7420696E 
 2496      7400
 2497              	.LASF33:
 2498 004e 64726976 		.ascii	"drivingForwardFlag\000"
 2498      696E6746 
 2498      6F727761 
 2498      7264466C 
 2498      616700
 2499              	.LASF97:
 2500 0061 536F6E69 		.ascii	"Sonic_StartEx\000"
 2500      635F5374 
 2500      61727445 
 2500      7800
 2501              	.LASF94:
 2502 006f 4D6F746F 		.ascii	"Motor_Right_Decoder_Start\000"
 2502      725F5269 
 2502      6768745F 
 2502      4465636F 
 2502      6465725F 
 2503              	.LASF17:
 2504 0089 636F6C6F 		.ascii	"colour_calibration\000"
 2504      75725F63 
 2504      616C6962 
 2504      72617469 
 2504      6F6E00
 2505              	.LASF10:
 2506 009c 696E7433 		.ascii	"int32_t\000"
 2506      325F7400 
 2507              	.LASF51:
 2508 00a4 62656769 		.ascii	"beginNavigation\000"
 2508      6E4E6176 
 2508      69676174 
 2508      696F6E00 
 2509              	.LASF93:
 2510 00b4 4D6F746F 		.ascii	"Motor_Left_Decoder_Start\000"
 2510      725F4C65 
 2510      66745F44 
 2510      65636F64 
 2510      65725F53 
 2511              	.LASF29:
 2512 00cd 7075636B 		.ascii	"puckRackOffsetsFromWest\000"
 2512      5261636B 
 2512      4F666673 
 2512      65747346 
 2512      726F6D57 
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccg9Xjeg.s 			page 57


 2513              	.LASF14:
 2514 00e5 6C6F6E67 		.ascii	"long double\000"
 2514      20646F75 
 2514      626C6500 
 2515              	.LASF16:
 2516 00f1 53746172 		.ascii	"StartIH\000"
 2516      74494800 
 2517              	.LASF39:
 2518 00f9 756C7472 		.ascii	"ultrasonic_distances_mm\000"
 2518      61736F6E 
 2518      69635F64 
 2518      69737461 
 2518      6E636573 
 2519              	.LASF23:
 2520 0111 7075636B 		.ascii	"puck_check\000"
 2520      5F636865 
 2520      636B00
 2521              	.LASF43:
 2522 011c 756C7472 		.ascii	"ultrasonic_flag\000"
 2522      61736F6E 
 2522      69635F66 
 2522      6C616700 
 2523              	.LASF66:
 2524 012c 6D697368 		.ascii	"mishaMoveDynamic\000"
 2524      614D6F76 
 2524      6544796E 
 2524      616D6963 
 2524      00
 2525              	.LASF85:
 2526 013d 5261636B 		.ascii	"Rack_Servo_PWM_Sleep\000"
 2526      5F536572 
 2526      766F5F50 
 2526      574D5F53 
 2526      6C656570 
 2527              	.LASF50:
 2528 0152 686F7269 		.ascii	"horizontalPuckGrid\000"
 2528      7A6F6E74 
 2528      616C5075 
 2528      636B4772 
 2528      696400
 2529              	.LASF96:
 2530 0165 54696D65 		.ascii	"Timer_1_ReadStatusRegister\000"
 2530      725F315F 
 2530      52656164 
 2530      53746174 
 2530      75735265 
 2531              	.LASF30:
 2532 0180 73776565 		.ascii	"sweeping\000"
 2532      70696E67 
 2532      00
 2533              	.LASF26:
 2534 0189 64726976 		.ascii	"driveStraightEnable\000"
 2534      65537472 
 2534      61696768 
 2534      74456E61 
 2534      626C6500 
 2535              	.LASF49:
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccg9Xjeg.s 			page 58


 2536 019d 63757272 		.ascii	"currentPuckStackSize\000"
 2536      656E7450 
 2536      75636B53 
 2536      7461636B 
 2536      53697A65 
 2537              	.LASF48:
 2538 01b2 72756E6E 		.ascii	"running\000"
 2538      696E6700 
 2539              	.LASF54:
 2540 01ba 626C6F63 		.ascii	"block_location\000"
 2540      6B5F6C6F 
 2540      63617469 
 2540      6F6E00
 2541              	.LASF86:
 2542 01c9 47726970 		.ascii	"Gripper_Servo_PWM_Start\000"
 2542      7065725F 
 2542      53657276 
 2542      6F5F5057 
 2542      4D5F5374 
 2543              	.LASF59:
 2544 01e1 7075636B 		.ascii	"puckWestClearance\000"
 2544      57657374 
 2544      436C6561 
 2544      72616E63 
 2544      6500
 2545              	.LASF63:
 2546 01f3 756C7472 		.ascii	"ultrasonicInterruptHandler\000"
 2546      61736F6E 
 2546      6963496E 
 2546      74657272 
 2546      75707448 
 2547              	.LASF36:
 2548 020e 7475726E 		.ascii	"turningRightFlag\000"
 2548      696E6752 
 2548      69676874 
 2548      466C6167 
 2548      00
 2549              	.LASF11:
 2550 021f 666C6F61 		.ascii	"float\000"
 2550      7400
 2551              	.LASF6:
 2552 0225 6C6F6E67 		.ascii	"long long int\000"
 2552      206C6F6E 
 2552      6720696E 
 2552      7400
 2553              	.LASF21:
 2554 0233 626C6F63 		.ascii	"block_and_puck_edge_midpoint\000"
 2554      6B5F616E 
 2554      645F7075 
 2554      636B5F65 
 2554      6467655F 
 2555              	.LASF92:
 2556 0250 4D6F746F 		.ascii	"Motor_Right_Driver_Sleep\000"
 2556      725F5269 
 2556      6768745F 
 2556      44726976 
 2556      65725F53 
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccg9Xjeg.s 			page 59


 2557              	.LASF76:
 2558 0269 4144435F 		.ascii	"ADC_Start\000"
 2558      53746172 
 2558      7400
 2559              	.LASF4:
 2560 0273 6C6F6E67 		.ascii	"long int\000"
 2560      20696E74 
 2560      00
 2561              	.LASF25:
 2562 027c 696E7465 		.ascii	"internal_orientation\000"
 2562      726E616C 
 2562      5F6F7269 
 2562      656E7461 
 2562      74696F6E 
 2563              	.LASF91:
 2564 0291 4D6F746F 		.ascii	"Motor_Right_Driver_Start\000"
 2564      725F5269 
 2564      6768745F 
 2564      44726976 
 2564      65725F53 
 2565              	.LASF72:
 2566 02aa 626C696E 		.ascii	"blinkLED\000"
 2566      6B4C4544 
 2566      00
 2567              	.LASF80:
 2568 02b3 636F6E74 		.ascii	"control_photodiode_Write\000"
 2568      726F6C5F 
 2568      70686F74 
 2568      6F64696F 
 2568      64655F57 
 2569              	.LASF65:
 2570 02cc 6D697368 		.ascii	"mishaSwivel\000"
 2570      61537769 
 2570      76656C00 
 2571              	.LASF56:
 2572 02d8 626C6F63 		.ascii	"blockEastClearance\000"
 2572      6B456173 
 2572      74436C65 
 2572      6172616E 
 2572      636500
 2573              	.LASF47:
 2574 02eb 73616665 		.ascii	"safety_override\000"
 2574      74795F6F 
 2574      76657272 
 2574      69646500 
 2575              	.LASF32:
 2576 02fb 7075636B 		.ascii	"puckPileLocation\000"
 2576      50696C65 
 2576      4C6F6361 
 2576      74696F6E 
 2576      00
 2577              	.LASF34:
 2578 030c 64726976 		.ascii	"drivingBackwardFlag\000"
 2578      696E6742 
 2578      61636B77 
 2578      61726446 
 2578      6C616700 
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccg9Xjeg.s 			page 60


 2579              	.LASF27:
 2580 0320 63757272 		.ascii	"currentPuckRackScanningIndex\000"
 2580      656E7450 
 2580      75636B52 
 2580      61636B53 
 2580      63616E6E 
 2581              	.LASF84:
 2582 033d 5261636B 		.ascii	"Rack_Servo_PWM_WriteCompare\000"
 2582      5F536572 
 2582      766F5F50 
 2582      574D5F57 
 2582      72697465 
 2583              	.LASF41:
 2584 0359 73746174 		.ascii	"state\000"
 2584      6500
 2585              	.LASF75:
 2586 035f 55415254 		.ascii	"UART_1_Start\000"
 2586      5F315F53 
 2586      74617274 
 2586      00
 2587              	.LASF1:
 2588 036c 756E7369 		.ascii	"unsigned char\000"
 2588      676E6564 
 2588      20636861 
 2588      7200
 2589              	.LASF40:
 2590 037a 636F6C6F 		.ascii	"colour_flag\000"
 2590      75725F66 
 2590      6C616700 
 2591              	.LASF90:
 2592 0386 4D6F746F 		.ascii	"Motor_Left_Driver_Sleep\000"
 2592      725F4C65 
 2592      66745F44 
 2592      72697665 
 2592      725F536C 
 2593              	.LASF89:
 2594 039e 4D6F746F 		.ascii	"Motor_Left_Driver_Start\000"
 2594      725F4C65 
 2594      66745F44 
 2594      72697665 
 2594      725F5374 
 2595              	.LASF55:
 2596 03b6 7075636B 		.ascii	"puck_location\000"
 2596      5F6C6F63 
 2596      6174696F 
 2596      6E00
 2597              	.LASF70:
 2598 03c4 73707269 		.ascii	"sprintf\000"
 2598      6E746600 
 2599              	.LASF82:
 2600 03cc 636F6C6F 		.ascii	"colourSensingInitialise\000"
 2600      75725365 
 2600      6E73696E 
 2600      67496E69 
 2600      7469616C 
 2601              	.LASF78:
 2602 03e4 49444143 		.ascii	"IDAC8_1_SetRange\000"
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccg9Xjeg.s 			page 61


 2602      385F315F 
 2602      53657452 
 2602      616E6765 
 2602      00
 2603              	.LASF0:
 2604 03f5 7369676E 		.ascii	"signed char\000"
 2604      65642063 
 2604      68617200 
 2605              	.LASF31:
 2606 0401 626C6F63 		.ascii	"block_edge_location\000"
 2606      6B5F6564 
 2606      67655F6C 
 2606      6F636174 
 2606      696F6E00 
 2607              	.LASF7:
 2608 0415 6C6F6E67 		.ascii	"long long unsigned int\000"
 2608      206C6F6E 
 2608      6720756E 
 2608      7369676E 
 2608      65642069 
 2609              	.LASF81:
 2610 042c 636F6E74 		.ascii	"control_led_Write\000"
 2610      726F6C5F 
 2610      6C65645F 
 2610      57726974 
 2610      6500
 2611              	.LASF18:
 2612 043e 73657276 		.ascii	"servo_testing\000"
 2612      6F5F7465 
 2612      7374696E 
 2612      6700
 2613              	.LASF8:
 2614 044c 756E7369 		.ascii	"unsigned int\000"
 2614      676E6564 
 2614      20696E74 
 2614      00
 2615              	.LASF60:
 2616 0459 69646163 		.ascii	"idac_value\000"
 2616      5F76616C 
 2616      756500
 2617              	.LASF77:
 2618 0464 49444143 		.ascii	"IDAC8_1_Start\000"
 2618      385F315F 
 2618      53746172 
 2618      7400
 2619              	.LASF83:
 2620 0472 5261636B 		.ascii	"Rack_Servo_PWM_Start\000"
 2620      5F536572 
 2620      766F5F50 
 2620      574D5F53 
 2620      74617274 
 2621              	.LASF45:
 2622 0487 63757272 		.ascii	"current_stage\000"
 2622      656E745F 
 2622      73746167 
 2622      6500
 2623              	.LASF87:
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccg9Xjeg.s 			page 62


 2624 0495 47726970 		.ascii	"Gripper_Servo_PWM_WriteCompare\000"
 2624      7065725F 
 2624      53657276 
 2624      6F5F5057 
 2624      4D5F5772 
 2625              	.LASF74:
 2626 04b4 5449415F 		.ascii	"TIA_1_Start\000"
 2626      315F5374 
 2626      61727400 
 2627              	.LASF69:
 2628 04c0 64697374 		.ascii	"distanceSensor\000"
 2628      616E6365 
 2628      53656E73 
 2628      6F7200
 2629              	.LASF13:
 2630 04cf 63686172 		.ascii	"char\000"
 2630      00
 2631              	.LASF103:
 2632 04d4 6D61696E 		.ascii	"main\000"
 2632      00
 2633              	.LASF28:
 2634 04d9 7075636B 		.ascii	"puckRackColours\000"
 2634      5261636B 
 2634      436F6C6F 
 2634      75727300 
 2635              	.LASF61:
 2636 04e9 504C414E 		.ascii	"PLAN_SCAN_VERTICAL\000"
 2636      5F534341 
 2636      4E5F5645 
 2636      52544943 
 2636      414C00
 2637              	.LASF46:
 2638 04fc 636F6C6F 		.ascii	"colour_sensing_algorithm\000"
 2638      75725F73 
 2638      656E7369 
 2638      6E675F61 
 2638      6C676F72 
 2639              	.LASF42:
 2640 0515 6D6F7669 		.ascii	"moving\000"
 2640      6E6700
 2641              	.LASF95:
 2642 051c 54696D65 		.ascii	"Timer_1_Start\000"
 2642      725F315F 
 2642      53746172 
 2642      7400
 2643              	.LASF53:
 2644 052a 70617468 		.ascii	"pathPastBlock\000"
 2644      50617374 
 2644      426C6F63 
 2644      6B00
 2645              	.LASF3:
 2646 0538 73686F72 		.ascii	"short unsigned int\000"
 2646      7420756E 
 2646      7369676E 
 2646      65642069 
 2646      6E7400
 2647              	.LASF79:
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccg9Xjeg.s 			page 63


 2648 054b 49444143 		.ascii	"IDAC8_1_SetValue\000"
 2648      385F315F 
 2648      53657456 
 2648      616C7565 
 2648      00
 2649              	.LASF101:
 2650 055c 6D61696E 		.ascii	"main.c\000"
 2650      2E6300
 2651              	.LASF5:
 2652 0563 6C6F6E67 		.ascii	"long unsigned int\000"
 2652      20756E73 
 2652      69676E65 
 2652      6420696E 
 2652      7400
 2653              	.LASF98:
 2654 0575 53746172 		.ascii	"Start_StartEx\000"
 2654      745F5374 
 2654      61727445 
 2654      7800
 2655              	.LASF12:
 2656 0583 646F7562 		.ascii	"double\000"
 2656      6C6500
 2657              	.LASF71:
 2658 058a 55415254 		.ascii	"UART_1_PutString\000"
 2658      5F315F50 
 2658      75745374 
 2658      72696E67 
 2658      00
 2659              	.LASF44:
 2660 059b 7075636B 		.ascii	"puckConstructionPlan\000"
 2660      436F6E73 
 2660      74727563 
 2660      74696F6E 
 2660      506C616E 
 2661              	.LASF88:
 2662 05b0 47726970 		.ascii	"Gripper_Servo_PWM_Sleep\000"
 2662      7065725F 
 2662      53657276 
 2662      6F5F5057 
 2662      4D5F536C 
 2663              	.LASF22:
 2664 05c8 626C6F63 		.ascii	"block_check\000"
 2664      6B5F6368 
 2664      65636B00 
 2665              	.LASF9:
 2666 05d4 5F5F696E 		.ascii	"__int32_t\000"
 2666      7433325F 
 2666      7400
 2667              	.LASF57:
 2668 05de 626C6F63 		.ascii	"blockWestClearance\000"
 2668      6B576573 
 2668      74436C65 
 2668      6172616E 
 2668      636500
 2669              	.LASF102:
 2670 05f1 433A5C55 		.ascii	"C:\\Users\\Misha\\Documents\\PSoC Creator\\ECE3091_"
 2670      73657273 
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccg9Xjeg.s 			page 64


 2670      5C4D6973 
 2670      68615C44 
 2670      6F63756D 
 2671 061f 47726F75 		.ascii	"Group17\\Group17RobotReal\\Group17Robot.cydsn\000"
 2671      7031375C 
 2671      47726F75 
 2671      70313752 
 2671      6F626F74 
 2672              	.LASF99:
 2673 064b 73616665 		.ascii	"safetyDistanceCheck\000"
 2673      74794469 
 2673      7374616E 
 2673      63654368 
 2673      65636B00 
 2674              	.LASF58:
 2675 065f 7075636B 		.ascii	"puckEastClearance\000"
 2675      45617374 
 2675      436C6561 
 2675      72616E63 
 2675      6500
 2676              	.LASF67:
 2677 0671 6D6F7665 		.ascii	"moveUntil\000"
 2677      556E7469 
 2677      6C00
 2678              	.LASF15:
 2679 067b 73697A65 		.ascii	"sizetype\000"
 2679      74797065 
 2679      00
 2680              	.LASF38:
 2681 0684 6F757470 		.ascii	"output\000"
 2681      757400
 2682              	.LASF19:
 2683 068b 6D6F746F 		.ascii	"motor_testing\000"
 2683      725F7465 
 2683      7374696E 
 2683      6700
 2684              	.LASF62:
 2685 0699 64697374 		.ascii	"distance_returned_global\000"
 2685      616E6365 
 2685      5F726574 
 2685      75726E65 
 2685      645F676C 
 2686              	.LASF24:
 2687 06b2 49544D5F 		.ascii	"ITM_RxBuffer\000"
 2687      52784275 
 2687      66666572 
 2687      00
 2688              	.LASF100:
 2689 06bf 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 2689      43313120 
 2689      352E342E 
 2689      31203230 
 2689      31363036 
 2690 06f2 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 2690      20726576 
 2690      6973696F 
 2690      6E203233 
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccg9Xjeg.s 			page 65


 2690      37373135 
 2691 0725 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 2691      66756E63 
 2691      74696F6E 
 2691      2D736563 
 2691      74696F6E 
 2692              	.LASF64:
 2693 074d 43794465 		.ascii	"CyDelay\000"
 2693      6C617900 
 2694              	.LASF52:
 2695 0755 70617468 		.ascii	"pathToPucks\000"
 2695      546F5075 
 2695      636B7300 
 2696              	.LASF37:
 2697 0761 696E6974 		.ascii	"initialisation\000"
 2697      69616C69 
 2697      73617469 
 2697      6F6E00
 2698              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
