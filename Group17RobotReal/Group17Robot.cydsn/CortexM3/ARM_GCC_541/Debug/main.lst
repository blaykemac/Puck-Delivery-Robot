ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\ccPjNvhl.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.Encoder_Counts_1_IH,"ax",%progbits
  20              		.align	2
  21              		.global	Encoder_Counts_1_IH
  22              		.thumb
  23              		.thumb_func
  24              		.type	Encoder_Counts_1_IH, %function
  25              	Encoder_Counts_1_IH:
  26              	.LFB64:
  27              		.file 1 "main.c"
   1:main.c        **** 
   2:main.c        **** /* ========================================
   3:main.c        ****  *
   4:main.c        ****  * Copyright YOUR COMPANY, THE YEAR
   5:main.c        ****  * All Rights Reserved
   6:main.c        ****  * UNPUBLISHED, LICENSED SOFTWARE.
   7:main.c        ****  *
   8:main.c        ****  * CONFIDENTIAL AND PROPRIETARY INFORMATION
   9:main.c        ****  * WHICH IS THE PROPERTY OF your company.
  10:main.c        ****  *
  11:main.c        ****  * ========================================
  12:main.c        **** */
  13:main.c        **** 
  14:main.c        **** #include "project.h"
  15:main.c        **** 
  16:main.c        **** // * C LIBRARIES * // 
  17:main.c        **** #include <stdio.h>
  18:main.c        **** #include <math.h>
  19:main.c        **** 
  20:main.c        **** // * OUR LIBRARIES * //
  21:main.c        **** #include "main.h"
  22:main.c        **** #include "colour.h"
  23:main.c        **** #include "ultrasonic.h" 
  24:main.c        **** #include "dcmotor.h"
  25:main.c        **** #include "servo.h"
  26:main.c        **** 
  27:main.c        **** 
  28:main.c        **** 
  29:main.c        **** //global variable currentPosition and currentOrientation (in main). Declare as externs in 
  30:main.c        **** //dcmotor, I guess
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\ccPjNvhl.s 			page 2


  31:main.c        **** float currentPosition[2] = {0,0};
  32:main.c        **** float desiredPosition[2];
  33:main.c        **** int currentOrientation = 90; //in degrees (convert to radians when needed)- 90 assuming we start fa
  34:main.c        **** int desiredOrientation;
  35:main.c        **** int M1_FD; //The four values shown here will be the duty cycles of the motors
  36:main.c        **** int M1_BD; //There are times when parts of the code (such as the driftCorrect function)
  37:main.c        **** int M2_FD; //need to know about the duty cycles. So we make the duty cycles a globally 
  38:main.c        **** int M2_BD; //known variable
  39:main.c        **** short int motor1Enable = 0; //These two will be on if the motors are on
  40:main.c        **** short int motor2Enable = 0;
  41:main.c        **** int M1_FD; //The four values shown here will be the duty cycles of the motors
  42:main.c        **** int M1_BD; //There are times when parts of the code (such as the driftCorrect function)
  43:main.c        **** int M2_FD; //need to know about the duty cycles. So we make the duty cycles a globally 
  44:main.c        **** int M2_BD; //known variable
  45:main.c        **** int motor1EncoderCounts; //These two variables will allow the entire program to keep 
  46:main.c        **** int motor2EncoderCounts; //track of how many turns the motors have spun 
  47:main.c        **** short int moveNow = 1; //This is a flag that lets the main program tell the moving functions
  48:main.c        **** //whether we want the robot to be moving or not. For example, when we need to operate servos
  49:main.c        **** //the main program would set moveNow to FALSE.
  50:main.c        **** 
  51:main.c        **** //The four flags below let the rest of the program know if the robot is trying to drive 
  52:main.c        **** //forward or back, turn left or right. At the start of every motion, turn these flags on
  53:main.c        **** //at the end turn them off.
  54:main.c        **** short int drivingForwardFlag = 0;
  55:main.c        **** short int drivingBackwardFlag = 0;
  56:main.c        **** short int turningLeftFlag = 0;
  57:main.c        **** short int turningRightFlag = 0;
  58:main.c        **** 
  59:main.c        **** //These flags will be used by the main program to allow the robot to move in certain directions
  60:main.c        **** short int moveLeftAllowed;
  61:main.c        **** short int moveRightAllowed;
  62:main.c        **** short int moveForwardAllowed;
  63:main.c        **** short int moveBackwardAllowed;
  64:main.c        **** 
  65:main.c        **** //Interrupt service routines for dcmotor function
  66:main.c        **** CY_ISR(Encoder_Counts_1_IH){
  28              		.loc 1 66 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 08B5     		push	{r3, lr}
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 3, -8
  35              		.cfi_offset 14, -4
  67:main.c        ****     stopMotor1AndUpdate();
  36              		.loc 1 67 0
  37 0002 FFF7FEFF 		bl	stopMotor1AndUpdate
  38              	.LVL0:
  39 0006 08BD     		pop	{r3, pc}
  40              		.cfi_endproc
  41              	.LFE64:
  42              		.size	Encoder_Counts_1_IH, .-Encoder_Counts_1_IH
  43              		.section	.text.Encoder_Counts_2_IH,"ax",%progbits
  44              		.align	2
  45              		.global	Encoder_Counts_2_IH
  46              		.thumb
  47              		.thumb_func
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\ccPjNvhl.s 			page 3


  48              		.type	Encoder_Counts_2_IH, %function
  49              	Encoder_Counts_2_IH:
  50              	.LFB65:
  68:main.c        **** }
  69:main.c        **** 
  70:main.c        **** CY_ISR(Encoder_Counts_2_IH){
  51              		.loc 1 70 0
  52              		.cfi_startproc
  53              		@ args = 0, pretend = 0, frame = 0
  54              		@ frame_needed = 0, uses_anonymous_args = 0
  55 0000 08B5     		push	{r3, lr}
  56              		.cfi_def_cfa_offset 8
  57              		.cfi_offset 3, -8
  58              		.cfi_offset 14, -4
  71:main.c        ****     stopMotor2AndUpdate();
  59              		.loc 1 71 0
  60 0002 FFF7FEFF 		bl	stopMotor2AndUpdate
  61              	.LVL1:
  62 0006 08BD     		pop	{r3, pc}
  63              		.cfi_endproc
  64              	.LFE65:
  65              		.size	Encoder_Counts_2_IH, .-Encoder_Counts_2_IH
  66              		.section	.text.Drift_Check_IH,"ax",%progbits
  67              		.align	2
  68              		.global	Drift_Check_IH
  69              		.thumb
  70              		.thumb_func
  71              		.type	Drift_Check_IH, %function
  72              	Drift_Check_IH:
  73              	.LFB66:
  72:main.c        **** }
  73:main.c        **** 
  74:main.c        **** CY_ISR(Drift_Check_IH){    
  74              		.loc 1 74 0
  75              		.cfi_startproc
  76              		@ args = 0, pretend = 0, frame = 0
  77              		@ frame_needed = 0, uses_anonymous_args = 0
  78 0000 08B5     		push	{r3, lr}
  79              		.cfi_def_cfa_offset 8
  80              		.cfi_offset 3, -8
  81              		.cfi_offset 14, -4
  75:main.c        ****     Drift_Check_Timer_ReadStatusRegister(); //Clears the interrupt
  82              		.loc 1 75 0
  83 0002 FFF7FEFF 		bl	Drift_Check_Timer_ReadStatusRegister
  84              	.LVL2:
  76:main.c        ****     Drift_Check_Timer_Stop(); //Stops the timer
  85              		.loc 1 76 0
  86 0006 FFF7FEFF 		bl	Drift_Check_Timer_Stop
  87              	.LVL3:
  77:main.c        ****     motor1EncoderCounts = Motor_1_Encoder_Counts_ReadCounter();
  88              		.loc 1 77 0
  89 000a FFF7FEFF 		bl	Motor_1_Encoder_Counts_ReadCounter
  90              	.LVL4:
  91 000e 044B     		ldr	r3, .L7
  92 0010 1860     		str	r0, [r3]
  78:main.c        ****     motor2EncoderCounts = Motor_2_Encoder_Counts_ReadCounter();
  93              		.loc 1 78 0
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\ccPjNvhl.s 			page 4


  94 0012 FFF7FEFF 		bl	Motor_2_Encoder_Counts_ReadCounter
  95              	.LVL5:
  96 0016 034B     		ldr	r3, .L7+4
  97 0018 1860     		str	r0, [r3]
  79:main.c        ****     driftCorrect(); //Does checking
  98              		.loc 1 79 0
  99 001a FFF7FEFF 		bl	driftCorrect
 100              	.LVL6:
 101 001e 08BD     		pop	{r3, pc}
 102              	.L8:
 103              		.align	2
 104              	.L7:
 105 0020 00000000 		.word	motor1EncoderCounts
 106 0024 00000000 		.word	motor2EncoderCounts
 107              		.cfi_endproc
 108              	.LFE66:
 109              		.size	Drift_Check_IH, .-Drift_Check_IH
 110              		.section	.text.TIH,"ax",%progbits
 111              		.align	2
 112              		.global	TIH
 113              		.thumb
 114              		.thumb_func
 115              		.type	TIH, %function
 116              	TIH:
 117              	.LFB67:
  80:main.c        **** }
  81:main.c        **** 
  82:main.c        **** // * VARIABLES * //
  83:main.c        **** int idac_value = 0;
  84:main.c        **** 
  85:main.c        **** 
  86:main.c        **** 
  87:main.c        **** int colour_flag = 1;                    // sets which photodiode to use 
  88:main.c        **** int ColourSensingAlgorithm = 0;      // Determines which colour sensing algorithm to use:
  89:main.c        ****                                                 // 0: Wall algorithm
  90:main.c        ****                                                 // 1: Claw algorithm
  91:main.c        ****                                                 // 2: old algorithm
  92:main.c        **** 
  93:main.c        **** 
  94:main.c        **** 
  95:main.c        **** extern float ultrasonic_distances[5];
  96:main.c        **** int beginNavigation = 0;
  97:main.c        **** 
  98:main.c        **** int state = STATE_SCAN_PLAN;
  99:main.c        **** 
 100:main.c        **** int running = 1;
 101:main.c        **** 
 102:main.c        **** int sweeping = 0;
 103:main.c        **** 
 104:main.c        **** int pathToPucks;
 105:main.c        **** int pathPastBlock;
 106:main.c        **** 
 107:main.c        **** float block_edge_location[4] = {0,0,0,0}; // N E S W
 108:main.c        **** 
 109:main.c        **** int currentPuckStackSize = 0;
 110:main.c        **** 
 111:main.c        **** // Puck Construction Scanning
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\ccPjNvhl.s 			page 5


 112:main.c        **** int puckRackColours[5] = {0,0,0,0,0}; // 5 slots in puck rack.
 113:main.c        **** int currentPuckRackScanningIndex = 0;
 114:main.c        **** int puckRackOffsetsFromWest[5] = {PUCK_RACK_0_WEST_DISTANCE,
 115:main.c        ****                                 PUCK_RACK_1_WEST_DISTANCE,
 116:main.c        ****                                 PUCK_RACK_2_WEST_DISTANCE,
 117:main.c        ****                                 PUCK_RACK_3_WEST_DISTANCE,
 118:main.c        ****                                 PUCK_RACK_4_WEST_DISTANCE };
 119:main.c        **** 
 120:main.c        **** 
 121:main.c        **** // * INTERRUPT HANDLING * // 
 122:main.c        **** CY_ISR(TIH)                             // Ultrasonic ISR Definition
 123:main.c        **** {
 118              		.loc 1 123 0
 119              		.cfi_startproc
 120              		@ args = 0, pretend = 0, frame = 0
 121              		@ frame_needed = 0, uses_anonymous_args = 0
 122 0000 08B5     		push	{r3, lr}
 123              		.cfi_def_cfa_offset 8
 124              		.cfi_offset 3, -8
 125              		.cfi_offset 14, -4
 124:main.c        ****     ultrasonicInterruptHandler();
 126              		.loc 1 124 0
 127 0002 FFF7FEFF 		bl	ultrasonicInterruptHandler
 128              	.LVL7:
 129 0006 08BD     		pop	{r3, pc}
 130              		.cfi_endproc
 131              	.LFE67:
 132              		.size	TIH, .-TIH
 133              		.section	.text.StartIH,"ax",%progbits
 134              		.align	2
 135              		.global	StartIH
 136              		.thumb
 137              		.thumb_func
 138              		.type	StartIH, %function
 139              	StartIH:
 140              	.LFB68:
 125:main.c        **** }
 126:main.c        **** 
 127:main.c        **** CY_ISR(StartIH)                             // Ultrasonic ISR Definition
 128:main.c        **** {
 141              		.loc 1 128 0
 142              		.cfi_startproc
 143              		@ args = 0, pretend = 0, frame = 0
 144              		@ frame_needed = 0, uses_anonymous_args = 0
 145 0000 08B5     		push	{r3, lr}
 146              		.cfi_def_cfa_offset 8
 147              		.cfi_offset 3, -8
 148              		.cfi_offset 14, -4
 129:main.c        ****     CyDelay(100);
 149              		.loc 1 129 0
 150 0002 6420     		movs	r0, #100
 151 0004 FFF7FEFF 		bl	CyDelay
 152              	.LVL8:
 130:main.c        ****     
 131:main.c        ****     beginNavigation = 1;
 153              		.loc 1 131 0
 154 0008 0122     		movs	r2, #1
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\ccPjNvhl.s 			page 6


 155 000a 034B     		ldr	r3, .L13
 156 000c 1A60     		str	r2, [r3]
 132:main.c        ****     colour_flag = 0; 
 157              		.loc 1 132 0
 158 000e 0022     		movs	r2, #0
 159 0010 024B     		ldr	r3, .L13+4
 160 0012 1A60     		str	r2, [r3]
 161 0014 08BD     		pop	{r3, pc}
 162              	.L14:
 163 0016 00BF     		.align	2
 164              	.L13:
 165 0018 00000000 		.word	.LANCHOR0
 166 001c 00000000 		.word	.LANCHOR1
 167              		.cfi_endproc
 168              	.LFE68:
 169              		.size	StartIH, .-StartIH
 170              		.global	__aeabi_fcmpge
 171              		.section	.text.main,"ax",%progbits
 172              		.align	2
 173              		.global	main
 174              		.thumb
 175              		.thumb_func
 176              		.type	main, %function
 177              	main:
 178              	.LFB69:
 133:main.c        **** }
 134:main.c        ****                     
 135:main.c        **** int main(void)
 136:main.c        **** {
 179              		.loc 1 136 0
 180              		.cfi_startproc
 181              		@ args = 0, pretend = 0, frame = 0
 182              		@ frame_needed = 0, uses_anonymous_args = 0
 183 0000 10B5     		push	{r4, lr}
 184              		.cfi_def_cfa_offset 8
 185              		.cfi_offset 4, -8
 186              		.cfi_offset 14, -4
 137:main.c        ****     CyGlobalIntEnable; /* Enable global interrupts. */
 187              		.loc 1 137 0
 188              		.syntax unified
 189              	@ 137 "main.c" 1
 190 0002 62B6     		CPSIE   i
 191              	@ 0 "" 2
 138:main.c        **** 
 139:main.c        ****     /* Place your initialization/startup code here (e.g. MyInst_Start()) */
 140:main.c        ****     TIA_1_Start();
 192              		.loc 1 140 0
 193              		.thumb
 194              		.syntax unified
 195 0004 FFF7FEFF 		bl	TIA_1_Start
 196              	.LVL9:
 141:main.c        ****     UART_1_Start();
 197              		.loc 1 141 0
 198 0008 FFF7FEFF 		bl	UART_1_Start
 199              	.LVL10:
 142:main.c        ****     UART_1_PutString("UART commencing... \n");
 200              		.loc 1 142 0
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\ccPjNvhl.s 			page 7


 201 000c 6248     		ldr	r0, .L33
 202 000e FFF7FEFF 		bl	UART_1_PutString
 203              	.LVL11:
 143:main.c        ****     ADC_Start();
 204              		.loc 1 143 0
 205 0012 FFF7FEFF 		bl	ADC_Start
 206              	.LVL12:
 144:main.c        ****     IDAC8_1_Start();
 207              		.loc 1 144 0
 208 0016 FFF7FEFF 		bl	IDAC8_1_Start
 209              	.LVL13:
 145:main.c        ****     
 146:main.c        ****     // IDAC initialisation: 
 147:main.c        ****     IDAC8_1_SetRange(IDAC8_1_RANGE_32uA);       // Sets the range between 0 and 32uA
 210              		.loc 1 147 0
 211 001a 0020     		movs	r0, #0
 212 001c FFF7FEFF 		bl	IDAC8_1_SetRange
 213              	.LVL14:
 148:main.c        ****     IDAC8_1_SetValue(idac_value);               // set a value between 0 and 255
 214              		.loc 1 148 0
 215 0020 5E4C     		ldr	r4, .L33+4
 216 0022 2079     		ldrb	r0, [r4, #4]	@ zero_extendqisi2
 217 0024 FFF7FEFF 		bl	IDAC8_1_SetValue
 218              	.LVL15:
 149:main.c        ****     
 150:main.c        ****      // Colour Sensing Initialisation & Debugging:
 151:main.c        ****     int calibrate = FALSE;                    // Do we want to calibrate the sensor? 
 152:main.c        ****     extern char output[32];   
 153:main.c        ****     
 154:main.c        **** 
 155:main.c        ****     
 156:main.c        ****     // Ultrasonic Initialisation: 
 157:main.c        ****     
 158:main.c        ****         
 159:main.c        ****     // Timer and ISR instantiation
 160:main.c        ****     Timer_1_Start();
 219              		.loc 1 160 0
 220 0028 FFF7FEFF 		bl	Timer_1_Start
 221              	.LVL16:
 161:main.c        ****     Timer_1_ReadStatusRegister();
 222              		.loc 1 161 0
 223 002c FFF7FEFF 		bl	Timer_1_ReadStatusRegister
 224              	.LVL17:
 162:main.c        ****     Sonic_StartEx(TIH);
 225              		.loc 1 162 0
 226 0030 5B48     		ldr	r0, .L33+8
 227 0032 FFF7FEFF 		bl	Sonic_StartEx
 228              	.LVL18:
 163:main.c        ****     Start_StartEx(StartIH);
 229              		.loc 1 163 0
 230 0036 5B48     		ldr	r0, .L33+12
 231 0038 FFF7FEFF 		bl	Start_StartEx
 232              	.LVL19:
 164:main.c        ****     beginNavigation = 0;
 233              		.loc 1 164 0
 234 003c 0023     		movs	r3, #0
 235 003e 2360     		str	r3, [r4]
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\ccPjNvhl.s 			page 8


 236              	.LVL20:
 165:main.c        ****     int tmp = 0;
 166:main.c        ****     
 167:main.c        ****     //Initialising DC motors
 168:main.c        ****     Motor_1_driver_Start();
 237              		.loc 1 168 0
 238 0040 FFF7FEFF 		bl	Motor_1_driver_Start
 239              	.LVL21:
 169:main.c        ****     Motor_2_driver_Start();
 240              		.loc 1 169 0
 241 0044 FFF7FEFF 		bl	Motor_2_driver_Start
 242              	.LVL22:
 170:main.c        ****     motorDutyCycleUpdate(0,0,0,0);//Have the motors stand still
 243              		.loc 1 170 0
 244 0048 0020     		movs	r0, #0
 245 004a 0346     		mov	r3, r0
 246 004c 0246     		mov	r2, r0
 247 004e 0146     		mov	r1, r0
 248 0050 FFF7FEFF 		bl	motorDutyCycleUpdate
 249              	.LVL23:
 171:main.c        ****     
 172:main.c        ****     //Initialising counters
 173:main.c        ****     Motor_1_Encoder_Counts_Start();
 250              		.loc 1 173 0
 251 0054 FFF7FEFF 		bl	Motor_1_Encoder_Counts_Start
 252              	.LVL24:
 174:main.c        ****     Motor_2_Encoder_Counts_Start();
 253              		.loc 1 174 0
 254 0058 FFF7FEFF 		bl	Motor_2_Encoder_Counts_Start
 255              	.LVL25:
 175:main.c        ****     
 176:main.c        ****     //Initialising timers
 177:main.c        ****     Drift_Check_Timer_Start();
 256              		.loc 1 177 0
 257 005c FFF7FEFF 		bl	Drift_Check_Timer_Start
 258              	.LVL26:
 178:main.c        ****     
 179:main.c        ****     //Starts and enables the interrupts for the motor encoder counts
 180:main.c        ****     Encoder_Counts_1_Interrupt_StartEx(Encoder_Counts_1_IH); 
 259              		.loc 1 180 0
 260 0060 5148     		ldr	r0, .L33+16
 261 0062 FFF7FEFF 		bl	Encoder_Counts_1_Interrupt_StartEx
 262              	.LVL27:
 181:main.c        ****     Encoder_Counts_2_Interrupt_StartEx(Encoder_Counts_2_IH);
 263              		.loc 1 181 0
 264 0066 5148     		ldr	r0, .L33+20
 265 0068 FFF7FEFF 		bl	Encoder_Counts_2_Interrupt_StartEx
 266              	.LVL28:
 182:main.c        ****     Drift_Check_Interrupt_StartEx(Drift_Check_IH);		
 267              		.loc 1 182 0
 268 006c 5048     		ldr	r0, .L33+24
 269 006e FFF7FEFF 		bl	Drift_Check_Interrupt_StartEx
 270              	.LVL29:
 183:main.c        ****     
 184:main.c        ****     //Servos for the arm initialisation
 185:main.c        ****     //Gripper_Servo_PWM_WriteCompare(1250); //This is the closed gripper pos
 186:main.c        ****     //Rack_Servo_PWM_WriteCompare(1000); //This is the up arm pos
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\ccPjNvhl.s 			page 9


 187:main.c        ****    
 188:main.c        ****     Rack_Servo_PWM_Start();
 271              		.loc 1 188 0
 272 0072 FFF7FEFF 		bl	Rack_Servo_PWM_Start
 273              	.LVL30:
 189:main.c        ****     Gripper_Servo_PWM_Start();
 274              		.loc 1 189 0
 275 0076 FFF7FEFF 		bl	Gripper_Servo_PWM_Start
 276              	.LVL31:
 277              	.L28:
 278              	.LBB2:
 190:main.c        ****     
 191:main.c        **** 
 192:main.c        ****     // Main Loop for States
 193:main.c        ****         
 194:main.c        ****     for(;;)
 195:main.c        ****     {   
 196:main.c        ****         // Start button is pressed so quit sensing
 197:main.c        **** 
 198:main.c        ****         /*
 199:main.c        ****         while (beginNavigation == 0) {
 200:main.c        ****             distanceCheck();           
 201:main.c        ****             UART_1_PutString("\n");
 202:main.c        ****             CyDelay(1000); // Check distance once a second.
 203:main.c        ****                 
 204:main.c        ****         }
 205:main.c        ****         
 206:main.c        ****         */
 207:main.c        ****         
 208:main.c        ****         
 209:main.c        ****             control_led_Write(1);   CyDelay(1000);  // Ensures all the RGBs are working
 279              		.loc 1 209 0
 280 007a 0120     		movs	r0, #1
 281 007c FFF7FEFF 		bl	control_led_Write
 282              	.LVL32:
 283 0080 4FF47A70 		mov	r0, #1000
 284 0084 FFF7FEFF 		bl	CyDelay
 285              	.LVL33:
 210:main.c        ****             control_led_Write(2);   CyDelay(1000);
 286              		.loc 1 210 0
 287 0088 0220     		movs	r0, #2
 288 008a FFF7FEFF 		bl	control_led_Write
 289              	.LVL34:
 290 008e 4FF47A70 		mov	r0, #1000
 291 0092 FFF7FEFF 		bl	CyDelay
 292              	.LVL35:
 211:main.c        ****             control_led_Write(3);   CyDelay(1000);
 293              		.loc 1 211 0
 294 0096 0320     		movs	r0, #3
 295 0098 FFF7FEFF 		bl	control_led_Write
 296              	.LVL36:
 297 009c 4FF47A70 		mov	r0, #1000
 298 00a0 FFF7FEFF 		bl	CyDelay
 299              	.LVL37:
 212:main.c        ****             control_led_Write(0);   CyDelay(500);
 300              		.loc 1 212 0
 301 00a4 0020     		movs	r0, #0
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\ccPjNvhl.s 			page 10


 302 00a6 FFF7FEFF 		bl	control_led_Write
 303              	.LVL38:
 304 00aa 4FF4FA70 		mov	r0, #500
 305 00ae FFF7FEFF 		bl	CyDelay
 306              	.LVL39:
 213:main.c        ****             ColourSensingInitialise();                  // Initialises the colour sensor
 307              		.loc 1 213 0
 308 00b2 FFF7FEFF 		bl	ColourSensingInitialise
 309              	.LVL40:
 214:main.c        ****         
 215:main.c        **** 
 216:main.c        ****         while (state == STATE_SCAN_PLAN) {              // colour sensing, while switch has not bee
 310              		.loc 1 216 0
 311 00b6 01E0     		b	.L16
 312              	.L17:
 217:main.c        ****             
 218:main.c        ****             
 219:main.c        ****             
 220:main.c        ****             if (calibrate)
 221:main.c        ****             {
 222:main.c        ****                 int lock = FALSE;
 223:main.c        ****                 do 
 224:main.c        ****                     {   
 225:main.c        ****                         if (lock == FALSE) 
 226:main.c        ****                         {
 227:main.c        ****                             UART_1_PutString("Count \t BLANK \t RED \t GREEN \t BLUE \t \n");
 228:main.c        ****                             for (int i = 0; i < 50; i++)
 229:main.c        ****                             {
 230:main.c        ****                             sprintf(output, "%d \t", i);
 231:main.c        ****                             UART_1_PutString(output);
 232:main.c        ****                             ColourSensingCalibration(); 
 233:main.c        ****                             UART_1_PutString("\n");
 234:main.c        ****                             }         
 235:main.c        ****                         lock = TRUE;    
 236:main.c        ****                         }
 237:main.c        ****                 } while (lock == TRUE);    
 238:main.c        ****             }
 239:main.c        ****             
 240:main.c        ****             
 241:main.c        ****             ColourSensingDebug();
 313              		.loc 1 241 0
 314 00b8 FFF7FEFF 		bl	ColourSensingDebug
 315              	.LVL41:
 316              	.L16:
 216:main.c        ****             
 317              		.loc 1 216 0
 318 00bc 3D4B     		ldr	r3, .L33+28
 319 00be 5B68     		ldr	r3, [r3, #4]
 320 00c0 012B     		cmp	r3, #1
 321 00c2 F9D0     		beq	.L17
 242:main.c        ****             
 243:main.c        ****             
 244:main.c        ****             /*
 245:main.c        ****             if (initialisation){moveBackwardIndefinitely();}
 246:main.c        ****             else {moveForwardIndefinitely();}        
 247:main.c        ****             
 248:main.c        ****             //puckRackColours[currentPuckRackScanningIndex] = ColourSensingOutput();
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\ccPjNvhl.s 			page 11


 249:main.c        ****             currentPuckRackScanningIndex++;
 250:main.c        ****             if (currentPuckRackScanningIndex == 4) {state = STATE_LOCATE_BLOCK_AND_PUCKS;}
 251:main.c        ****             */
 252:main.c        **** 
 253:main.c        ****         }
 254:main.c        **** 
 255:main.c        ****     	if (state == STATE_LOCATE_BLOCK_AND_PUCKS){
 322              		.loc 1 255 0
 323 00c4 022B     		cmp	r3, #2
 324 00c6 17D1     		bne	.L18
 256:main.c        ****             
 257:main.c        ****             // Finding where the boundaries of the block are
 258:main.c        ****     		// Sweep across WEST to EAST until discrepancy
 259:main.c        ****             // But first sense the construction plan and then drive to wall and turn around to prep
 260:main.c        ****             
 261:main.c        ****             
 262:main.c        ****     		moveForwardIndefinitely();
 325              		.loc 1 262 0
 326 00c8 FFF7FEFF 		bl	moveForwardIndefinitely
 327              	.LVL42:
 263:main.c        ****     		turnRight(180); // Now facing EAST wall
 328              		.loc 1 263 0
 329 00cc 3A48     		ldr	r0, .L33+32
 330 00ce FFF7FEFF 		bl	turnRight
 331              	.LVL43:
 264:main.c        ****     		moveForwardIndefinitely(); // Do this until we get to EAST wall
 332              		.loc 1 264 0
 333 00d2 FFF7FEFF 		bl	moveForwardIndefinitely
 334              	.LVL44:
 265:main.c        ****             
 266:main.c        ****             
 267:main.c        ****             // Will now know the boundaries of the block.
 268:main.c        ****             // Figure out direction we want to travel
 269:main.c        ****             
 270:main.c        ****             if (block_edge_location[WEST] >= WIDTH_SENSOR_TO_SENSOR + SAFETY_MARGIN){
 335              		.loc 1 270 0
 336 00d6 4FF08441 		mov	r1, #1107296256
 337 00da 304B     		ldr	r3, .L33+4
 338 00dc 5869     		ldr	r0, [r3, #20]	@ float
 339 00de FFF7FEFF 		bl	__aeabi_fcmpge
 340              	.LVL45:
 341 00e2 18B1     		cbz	r0, .L31
 271:main.c        ****                 pathPastBlock = WEST;
 342              		.loc 1 271 0
 343 00e4 0322     		movs	r2, #3
 344 00e6 354B     		ldr	r3, .L33+36
 345 00e8 1A60     		str	r2, [r3]
 346 00ea 02E0     		b	.L21
 347              	.L31:
 272:main.c        ****             }
 273:main.c        ****             else {pathPastBlock = EAST;}
 348              		.loc 1 273 0
 349 00ec 0122     		movs	r2, #1
 350 00ee 334B     		ldr	r3, .L33+36
 351 00f0 1A60     		str	r2, [r3]
 352              	.L21:
 274:main.c        ****             
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\ccPjNvhl.s 			page 12


 275:main.c        ****             // Calculate puck position here too, then make a decision as to whether
 276:main.c        ****             // pathToPucks = ... ;
 277:main.c        **** 
 278:main.c        ****             state = STATE_GO_TO_PUCKS;
 353              		.loc 1 278 0
 354 00f2 0322     		movs	r2, #3
 355 00f4 2F4B     		ldr	r3, .L33+28
 356 00f6 5A60     		str	r2, [r3, #4]
 357              	.L18:
 279:main.c        **** 	}
 280:main.c        ****         
 281:main.c        ****         
 282:main.c        **** 
 283:main.c        ****         if (state == STATE_GO_TO_PUCKS){
 358              		.loc 1 283 0
 359 00f8 2E4B     		ldr	r3, .L33+28
 360 00fa 5B68     		ldr	r3, [r3, #4]
 361 00fc 032B     		cmp	r3, #3
 362 00fe 25D1     		bne	.L22
 284:main.c        ****             if (pathPastBlock == WEST){
 363              		.loc 1 284 0
 364 0100 2E4B     		ldr	r3, .L33+36
 365 0102 1B68     		ldr	r3, [r3]
 366 0104 032B     		cmp	r3, #3
 367 0106 0FD1     		bne	.L23
 285:main.c        ****                 if (pathToPucks != WEST) {
 368              		.loc 1 285 0
 369 0108 2D4B     		ldr	r3, .L33+40
 370 010a 1B68     		ldr	r3, [r3]
 371 010c 032B     		cmp	r3, #3
 372 010e 05D0     		beq	.L24
 286:main.c        ****                     moveAndAngle(SAFETY_MARGIN / 2 + WIDTH_SENSOR_TO_SENSOR / 2, ARENA_LENGTH - FRO
 373              		.loc 1 286 0
 374 0110 0022     		movs	r2, #0
 375 0112 8221     		movs	r1, #130
 376 0114 1020     		movs	r0, #16
 377 0116 FFF7FEFF 		bl	moveAndAngle
 378              	.LVL46:
 379 011a 14E0     		b	.L25
 380              	.L24:
 287:main.c        ****                 }
 288:main.c        ****                 else {moveAndAngle(SAFETY_MARGIN / 2 + WIDTH_SENSOR_TO_SENSOR / 2, ARENA_LENGTH - F
 381              		.loc 1 288 0
 382 011c 5A22     		movs	r2, #90
 383 011e 6621     		movs	r1, #102
 384 0120 1020     		movs	r0, #16
 385 0122 FFF7FEFF 		bl	moveAndAngle
 386              	.LVL47:
 387 0126 0EE0     		b	.L25
 388              	.L23:
 289:main.c        ****             }
 290:main.c        ****             else {
 291:main.c        ****                 if (pathToPucks != EAST) {
 389              		.loc 1 291 0
 390 0128 254B     		ldr	r3, .L33+40
 391 012a 1B68     		ldr	r3, [r3]
 392 012c 012B     		cmp	r3, #1
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\ccPjNvhl.s 			page 13


 393 012e 05D0     		beq	.L26
 292:main.c        ****                     moveAndAngle(ARENA_WIDTH - SAFETY_MARGIN / 2 - WIDTH_SENSOR_TO_SENSOR / 2, AREN
 394              		.loc 1 292 0
 395 0130 B422     		movs	r2, #180
 396 0132 8221     		movs	r1, #130
 397 0134 6820     		movs	r0, #104
 398 0136 FFF7FEFF 		bl	moveAndAngle
 399              	.LVL48:
 400 013a 04E0     		b	.L25
 401              	.L26:
 293:main.c        ****                 }
 294:main.c        ****                 else {moveAndAngle(ARENA_WIDTH - SAFETY_MARGIN / 2 - WIDTH_SENSOR_TO_SENSOR / 2, AR
 402              		.loc 1 294 0
 403 013c 5A22     		movs	r2, #90
 404 013e 6621     		movs	r1, #102
 405 0140 6820     		movs	r0, #104
 406 0142 FFF7FEFF 		bl	moveAndAngle
 407              	.LVL49:
 408              	.L25:
 295:main.c        ****             }
 296:main.c        ****             
 297:main.c        ****             // We are now in front of the pucks
 298:main.c        ****             state = STATE_FIND_REQUIRED_PUCK;
 409              		.loc 1 298 0
 410 0146 0422     		movs	r2, #4
 411 0148 1A4B     		ldr	r3, .L33+28
 412 014a 5A60     		str	r2, [r3, #4]
 413              	.L22:
 299:main.c        ****         }
 300:main.c        ****         
 301:main.c        ****         
 302:main.c        ****         
 303:main.c        ****         if (state == STATE_FIND_REQUIRED_PUCK){
 304:main.c        ****                
 305:main.c        ****         }
 306:main.c        ****         
 307:main.c        ****         if (state == STATE_DEPOSIT_PUCK){
 414              		.loc 1 307 0
 415 014c 194B     		ldr	r3, .L33+28
 416 014e 5B68     		ldr	r3, [r3, #4]
 417 0150 052B     		cmp	r3, #5
 418 0152 15D1     		bne	.L27
 308:main.c        ****             moveAndAngle(CONSTRUCTION_MIDPOINT,CONSTRUCTION_DISTANCE_FROM_WALL, SOUTH_ANGLE); // Ta
 419              		.loc 1 308 0
 420 0154 4FF48772 		mov	r2, #270
 421 0158 0521     		movs	r1, #5
 422 015a 1E20     		movs	r0, #30
 423 015c FFF7FEFF 		bl	moveAndAngle
 424              	.LVL50:
 309:main.c        ****             lowerAndOpen(currentPuckStackSize);
 425              		.loc 1 309 0
 426 0160 0E4C     		ldr	r4, .L33+4
 427 0162 A069     		ldr	r0, [r4, #24]
 428 0164 FFF7FEFF 		bl	lowerAndOpen
 429              	.LVL51:
 310:main.c        ****             changeHeightToPuck(currentPuckStackSize + 1); // Lift claw above stack to avoid hitting
 430              		.loc 1 310 0
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\ccPjNvhl.s 			page 14


 431 0168 A069     		ldr	r0, [r4, #24]
 432 016a 0130     		adds	r0, r0, #1
 433 016c FFF7FEFF 		bl	changeHeightToPuck
 434              	.LVL52:
 311:main.c        ****             
 312:main.c        ****             currentPuckStackSize++;
 435              		.loc 1 312 0
 436 0170 A369     		ldr	r3, [r4, #24]
 437 0172 0133     		adds	r3, r3, #1
 438 0174 A361     		str	r3, [r4, #24]
 313:main.c        ****             
 314:main.c        ****             if (currentPuckStackSize == 3){state = STATE_PARK_HOME;}
 439              		.loc 1 314 0
 440 0176 032B     		cmp	r3, #3
 441 0178 02D1     		bne	.L27
 442              		.loc 1 314 0 is_stmt 0 discriminator 1
 443 017a 0622     		movs	r2, #6
 444 017c 0D4B     		ldr	r3, .L33+28
 445 017e 5A60     		str	r2, [r3, #4]
 446              	.L27:
 315:main.c        ****             
 316:main.c        ****         }
 317:main.c        ****         
 318:main.c        ****         if (state == STATE_PARK_HOME){
 447              		.loc 1 318 0 is_stmt 1
 448 0180 0C4B     		ldr	r3, .L33+28
 449 0182 5B68     		ldr	r3, [r3, #4]
 450 0184 062B     		cmp	r3, #6
 451 0186 7FF478AF 		bne	.L28
 319:main.c        ****             moveAndAngle(HOME_MIDPOINT, HOME_PARKING_DISTANCE, NORTH_ANGLE); // Should reverse into
 452              		.loc 1 319 0
 453 018a 5A22     		movs	r2, #90
 454 018c 0321     		movs	r1, #3
 455 018e 3C20     		movs	r0, #60
 456 0190 FFF7FEFF 		bl	moveAndAngle
 457              	.LVL53:
 458 0194 71E7     		b	.L28
 459              	.L34:
 460 0196 00BF     		.align	2
 461              	.L33:
 462 0198 00000000 		.word	.LC0
 463 019c 00000000 		.word	.LANCHOR0
 464 01a0 00000000 		.word	TIH
 465 01a4 00000000 		.word	StartIH
 466 01a8 00000000 		.word	Encoder_Counts_1_IH
 467 01ac 00000000 		.word	Encoder_Counts_2_IH
 468 01b0 00000000 		.word	Drift_Check_IH
 469 01b4 00000000 		.word	.LANCHOR1
 470 01b8 00003443 		.word	1127481344
 471 01bc 00000000 		.word	pathPastBlock
 472 01c0 00000000 		.word	pathToPucks
 473              	.LBE2:
 474              		.cfi_endproc
 475              	.LFE69:
 476              		.size	main, .-main
 477              		.global	currentPuckStackSize
 478              		.comm	pathPastBlock,4,4
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\ccPjNvhl.s 			page 15


 479              		.comm	pathToPucks,4,4
 480              		.global	running
 481              		.global	state
 482              		.global	beginNavigation
 483              		.global	ColourSensingAlgorithm
 484              		.global	colour_flag
 485              		.global	idac_value
 486              		.comm	moveBackwardAllowed,2,2
 487              		.comm	moveForwardAllowed,2,2
 488              		.comm	moveRightAllowed,2,2
 489              		.comm	moveLeftAllowed,2,2
 490              		.global	turningRightFlag
 491              		.global	turningLeftFlag
 492              		.global	drivingBackwardFlag
 493              		.global	drivingForwardFlag
 494              		.global	moveNow
 495              		.comm	motor2EncoderCounts,4,4
 496              		.comm	motor1EncoderCounts,4,4
 497              		.global	motor2Enable
 498              		.global	motor1Enable
 499              		.comm	M2_BD,4,4
 500              		.comm	M2_FD,4,4
 501              		.comm	M1_BD,4,4
 502              		.comm	M1_FD,4,4
 503              		.comm	desiredOrientation,4,4
 504              		.global	currentOrientation
 505              		.comm	desiredPosition,8,4
 506              		.global	currentPosition
 507              		.comm	initialisation,4,4
 508              		.comm	output,32,4
 509              		.comm	puckPileLocation,4,4
 510              		.global	block_edge_location
 511              		.global	sweeping
 512              		.global	puckRackOffsetsFromWest
 513              		.global	puckRackColours
 514              		.global	currentPuckRackScanningIndex
 515              		.comm	driveStraightEnable,4,4
 516              		.data
 517              		.align	2
 518              		.set	.LANCHOR1,. + 0
 519              		.type	colour_flag, %object
 520              		.size	colour_flag, 4
 521              	colour_flag:
 522 0000 01000000 		.word	1
 523              		.type	state, %object
 524              		.size	state, 4
 525              	state:
 526 0004 01000000 		.word	1
 527              		.type	running, %object
 528              		.size	running, 4
 529              	running:
 530 0008 01000000 		.word	1
 531              		.type	moveNow, %object
 532              		.size	moveNow, 2
 533              	moveNow:
 534 000c 0100     		.short	1
 535 000e 0000     		.space	2
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\ccPjNvhl.s 			page 16


 536              		.type	currentOrientation, %object
 537              		.size	currentOrientation, 4
 538              	currentOrientation:
 539 0010 5A000000 		.word	90
 540              		.type	puckRackOffsetsFromWest, %object
 541              		.size	puckRackOffsetsFromWest, 20
 542              	puckRackOffsetsFromWest:
 543 0014 48000000 		.word	72
 544 0018 42000000 		.word	66
 545 001c 3C000000 		.word	60
 546 0020 36000000 		.word	54
 547 0024 30000000 		.word	48
 548              		.section	.rodata.str1.4,"aMS",%progbits,1
 549              		.align	2
 550              	.LC0:
 551 0000 55415254 		.ascii	"UART commencing... \012\000"
 551      20636F6D 
 551      6D656E63 
 551      696E672E 
 551      2E2E200A 
 552              		.bss
 553              		.align	2
 554              		.set	.LANCHOR0,. + 0
 555              		.type	beginNavigation, %object
 556              		.size	beginNavigation, 4
 557              	beginNavigation:
 558 0000 00000000 		.space	4
 559              		.type	idac_value, %object
 560              		.size	idac_value, 4
 561              	idac_value:
 562 0004 00000000 		.space	4
 563              		.type	block_edge_location, %object
 564              		.size	block_edge_location, 16
 565              	block_edge_location:
 566 0008 00000000 		.space	16
 566      00000000 
 566      00000000 
 566      00000000 
 567              		.type	currentPuckStackSize, %object
 568              		.size	currentPuckStackSize, 4
 569              	currentPuckStackSize:
 570 0018 00000000 		.space	4
 571              		.type	ColourSensingAlgorithm, %object
 572              		.size	ColourSensingAlgorithm, 4
 573              	ColourSensingAlgorithm:
 574 001c 00000000 		.space	4
 575              		.type	turningRightFlag, %object
 576              		.size	turningRightFlag, 2
 577              	turningRightFlag:
 578 0020 0000     		.space	2
 579              		.type	turningLeftFlag, %object
 580              		.size	turningLeftFlag, 2
 581              	turningLeftFlag:
 582 0022 0000     		.space	2
 583              		.type	drivingBackwardFlag, %object
 584              		.size	drivingBackwardFlag, 2
 585              	drivingBackwardFlag:
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\ccPjNvhl.s 			page 17


 586 0024 0000     		.space	2
 587              		.type	drivingForwardFlag, %object
 588              		.size	drivingForwardFlag, 2
 589              	drivingForwardFlag:
 590 0026 0000     		.space	2
 591              		.type	motor2Enable, %object
 592              		.size	motor2Enable, 2
 593              	motor2Enable:
 594 0028 0000     		.space	2
 595              		.type	motor1Enable, %object
 596              		.size	motor1Enable, 2
 597              	motor1Enable:
 598 002a 0000     		.space	2
 599              		.type	currentPosition, %object
 600              		.size	currentPosition, 8
 601              	currentPosition:
 602 002c 00000000 		.space	8
 602      00000000 
 603              		.type	sweeping, %object
 604              		.size	sweeping, 4
 605              	sweeping:
 606 0034 00000000 		.space	4
 607              		.type	puckRackColours, %object
 608              		.size	puckRackColours, 20
 609              	puckRackColours:
 610 0038 00000000 		.space	20
 610      00000000 
 610      00000000 
 610      00000000 
 610      00000000 
 611              		.type	currentPuckRackScanningIndex, %object
 612              		.size	currentPuckRackScanningIndex, 4
 613              	currentPuckRackScanningIndex:
 614 004c 00000000 		.space	4
 615              		.text
 616              	.Letext0:
 617              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 618              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 619              		.file 4 "Generated_Source\\PSoC5/core_cm3.h"
 620              		.file 5 "ultrasonic.h"
 621              		.file 6 "main.h"
 622              		.file 7 "dcmotor.h"
 623              		.file 8 "Generated_Source\\PSoC5/Drift_Check_Timer.h"
 624              		.file 9 "Generated_Source\\PSoC5/Motor_1_Encoder_Counts.h"
 625              		.file 10 "Generated_Source\\PSoC5/Motor_2_Encoder_Counts.h"
 626              		.file 11 "Generated_Source\\PSoC5/CyLib.h"
 627              		.file 12 "Generated_Source\\PSoC5/control_led.h"
 628              		.file 13 "colour.h"
 629              		.file 14 "servo.h"
 630              		.file 15 "Generated_Source\\PSoC5/TIA_1.h"
 631              		.file 16 "Generated_Source\\PSoC5/UART_1.h"
 632              		.file 17 "Generated_Source\\PSoC5/ADC.h"
 633              		.file 18 "Generated_Source\\PSoC5/IDAC8_1.h"
 634              		.file 19 "Generated_Source\\PSoC5/Timer_1.h"
 635              		.file 20 "Generated_Source\\PSoC5/Sonic.h"
 636              		.file 21 "Generated_Source\\PSoC5/Start.h"
 637              		.file 22 "Generated_Source\\PSoC5/Motor_1_driver.h"
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\ccPjNvhl.s 			page 18


 638              		.file 23 "Generated_Source\\PSoC5/Motor_2_driver.h"
 639              		.file 24 "Generated_Source\\PSoC5/Encoder_Counts_1_Interrupt.h"
 640              		.file 25 "Generated_Source\\PSoC5/Encoder_Counts_2_Interrupt.h"
 641              		.file 26 "Generated_Source\\PSoC5/Drift_Check_Interrupt.h"
 642              		.file 27 "Generated_Source\\PSoC5/Rack_Servo_PWM.h"
 643              		.file 28 "Generated_Source\\PSoC5/Gripper_Servo_PWM.h"
 644              		.section	.debug_info,"",%progbits
 645              	.Ldebug_info0:
 646 0000 12090000 		.4byte	0x912
 647 0004 0400     		.2byte	0x4
 648 0006 00000000 		.4byte	.Ldebug_abbrev0
 649 000a 04       		.byte	0x4
 650 000b 01       		.uleb128 0x1
 651 000c 7B060000 		.4byte	.LASF100
 652 0010 0C       		.byte	0xc
 653 0011 7E050000 		.4byte	.LASF101
 654 0015 B9030000 		.4byte	.LASF102
 655 0019 00000000 		.4byte	.Ldebug_ranges0+0
 656 001d 00000000 		.4byte	0
 657 0021 00000000 		.4byte	.Ldebug_line0
 658 0025 02       		.uleb128 0x2
 659 0026 01       		.byte	0x1
 660 0027 06       		.byte	0x6
 661 0028 55000000 		.4byte	.LASF0
 662 002c 02       		.uleb128 0x2
 663 002d 01       		.byte	0x1
 664 002e 08       		.byte	0x8
 665 002f 9A030000 		.4byte	.LASF1
 666 0033 02       		.uleb128 0x2
 667 0034 02       		.byte	0x2
 668 0035 05       		.byte	0x5
 669 0036 71000000 		.4byte	.LASF2
 670 003a 02       		.uleb128 0x2
 671 003b 02       		.byte	0x2
 672 003c 07       		.byte	0x7
 673 003d DD040000 		.4byte	.LASF3
 674 0041 03       		.uleb128 0x3
 675 0042 13060000 		.4byte	.LASF9
 676 0046 02       		.byte	0x2
 677 0047 3F       		.byte	0x3f
 678 0048 4C000000 		.4byte	0x4c
 679 004c 02       		.uleb128 0x2
 680 004d 04       		.byte	0x4
 681 004e 05       		.byte	0x5
 682 004f 0A050000 		.4byte	.LASF4
 683 0053 02       		.uleb128 0x2
 684 0054 04       		.byte	0x4
 685 0055 07       		.byte	0x7
 686 0056 E3020000 		.4byte	.LASF5
 687 005a 02       		.uleb128 0x2
 688 005b 08       		.byte	0x8
 689 005c 05       		.byte	0x5
 690 005d 8D020000 		.4byte	.LASF6
 691 0061 02       		.uleb128 0x2
 692 0062 08       		.byte	0x8
 693 0063 07       		.byte	0x7
 694 0064 3E040000 		.4byte	.LASF7
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\ccPjNvhl.s 			page 19


 695 0068 04       		.uleb128 0x4
 696 0069 04       		.byte	0x4
 697 006a 05       		.byte	0x5
 698 006b 696E7400 		.ascii	"int\000"
 699 006f 02       		.uleb128 0x2
 700 0070 04       		.byte	0x4
 701 0071 07       		.byte	0x7
 702 0072 7A040000 		.4byte	.LASF8
 703 0076 03       		.uleb128 0x3
 704 0077 19050000 		.4byte	.LASF10
 705 007b 03       		.byte	0x3
 706 007c 2C       		.byte	0x2c
 707 007d 41000000 		.4byte	0x41
 708 0081 02       		.uleb128 0x2
 709 0082 04       		.byte	0x4
 710 0083 04       		.byte	0x4
 711 0084 74020000 		.4byte	.LASF11
 712 0088 02       		.uleb128 0x2
 713 0089 08       		.byte	0x8
 714 008a 04       		.byte	0x4
 715 008b A0050000 		.4byte	.LASF12
 716 008f 02       		.uleb128 0x2
 717 0090 01       		.byte	0x1
 718 0091 08       		.byte	0x8
 719 0092 05050000 		.4byte	.LASF13
 720 0096 02       		.uleb128 0x2
 721 0097 08       		.byte	0x8
 722 0098 04       		.byte	0x4
 723 0099 81030000 		.4byte	.LASF14
 724 009d 02       		.uleb128 0x2
 725 009e 04       		.byte	0x4
 726 009f 07       		.byte	0x7
 727 00a0 47060000 		.4byte	.LASF15
 728 00a4 05       		.uleb128 0x5
 729 00a5 B8050000 		.4byte	.LASF16
 730 00a9 01       		.byte	0x1
 731 00aa 42       		.byte	0x42
 732 00ab 00000000 		.4byte	.LFB64
 733 00af 08000000 		.4byte	.LFE64-.LFB64
 734 00b3 01       		.uleb128 0x1
 735 00b4 9C       		.byte	0x9c
 736 00b5 C3000000 		.4byte	0xc3
 737 00b9 06       		.uleb128 0x6
 738 00ba 06000000 		.4byte	.LVL0
 739 00be 68070000 		.4byte	0x768
 740 00c2 00       		.byte	0
 741 00c3 05       		.uleb128 0x5
 742 00c4 41000000 		.4byte	.LASF17
 743 00c8 01       		.byte	0x1
 744 00c9 46       		.byte	0x46
 745 00ca 00000000 		.4byte	.LFB65
 746 00ce 08000000 		.4byte	.LFE65-.LFB65
 747 00d2 01       		.uleb128 0x1
 748 00d3 9C       		.byte	0x9c
 749 00d4 E2000000 		.4byte	0xe2
 750 00d8 06       		.uleb128 0x6
 751 00d9 06000000 		.4byte	.LVL1
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\ccPjNvhl.s 			page 20


 752 00dd 73070000 		.4byte	0x773
 753 00e1 00       		.byte	0
 754 00e2 05       		.uleb128 0x5
 755 00e3 DF050000 		.4byte	.LASF18
 756 00e7 01       		.byte	0x1
 757 00e8 4A       		.byte	0x4a
 758 00e9 00000000 		.4byte	.LFB66
 759 00ed 28000000 		.4byte	.LFE66-.LFB66
 760 00f1 01       		.uleb128 0x1
 761 00f2 9C       		.byte	0x9c
 762 00f3 25010000 		.4byte	0x125
 763 00f7 06       		.uleb128 0x6
 764 00f8 06000000 		.4byte	.LVL2
 765 00fc 7E070000 		.4byte	0x77e
 766 0100 06       		.uleb128 0x6
 767 0101 0A000000 		.4byte	.LVL3
 768 0105 89070000 		.4byte	0x789
 769 0109 06       		.uleb128 0x6
 770 010a 0E000000 		.4byte	.LVL4
 771 010e 94070000 		.4byte	0x794
 772 0112 06       		.uleb128 0x6
 773 0113 16000000 		.4byte	.LVL5
 774 0117 9F070000 		.4byte	0x79f
 775 011b 06       		.uleb128 0x6
 776 011c 1E000000 		.4byte	.LVL6
 777 0120 AA070000 		.4byte	0x7aa
 778 0124 00       		.byte	0
 779 0125 07       		.uleb128 0x7
 780 0126 54494800 		.ascii	"TIH\000"
 781 012a 01       		.byte	0x1
 782 012b 7A       		.byte	0x7a
 783 012c 00000000 		.4byte	.LFB67
 784 0130 08000000 		.4byte	.LFE67-.LFB67
 785 0134 01       		.uleb128 0x1
 786 0135 9C       		.byte	0x9c
 787 0136 44010000 		.4byte	0x144
 788 013a 06       		.uleb128 0x6
 789 013b 06000000 		.4byte	.LVL7
 790 013f B5070000 		.4byte	0x7b5
 791 0143 00       		.byte	0
 792 0144 05       		.uleb128 0x5
 793 0145 37010000 		.4byte	.LASF19
 794 0149 01       		.byte	0x1
 795 014a 7F       		.byte	0x7f
 796 014b 00000000 		.4byte	.LFB68
 797 014f 20000000 		.4byte	.LFE68-.LFB68
 798 0153 01       		.uleb128 0x1
 799 0154 9C       		.byte	0x9c
 800 0155 6A010000 		.4byte	0x16a
 801 0159 08       		.uleb128 0x8
 802 015a 08000000 		.4byte	.LVL8
 803 015e C0070000 		.4byte	0x7c0
 804 0162 09       		.uleb128 0x9
 805 0163 01       		.uleb128 0x1
 806 0164 50       		.byte	0x50
 807 0165 02       		.uleb128 0x2
 808 0166 08       		.byte	0x8
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\ccPjNvhl.s 			page 21


 809 0167 64       		.byte	0x64
 810 0168 00       		.byte	0
 811 0169 00       		.byte	0
 812 016a 0A       		.uleb128 0xa
 813 016b C0000000 		.4byte	.LASF103
 814 016f 01       		.byte	0x1
 815 0170 87       		.byte	0x87
 816 0171 68000000 		.4byte	0x68
 817 0175 00000000 		.4byte	.LFB69
 818 0179 C4010000 		.4byte	.LFE69-.LFB69
 819 017d 01       		.uleb128 0x1
 820 017e 9C       		.byte	0x9c
 821 017f 80040000 		.4byte	0x480
 822 0183 0B       		.uleb128 0xb
 823 0184 6B030000 		.4byte	.LASF20
 824 0188 01       		.byte	0x1
 825 0189 97       		.byte	0x97
 826 018a 68000000 		.4byte	0x68
 827 018e 00       		.byte	0
 828 018f 0C       		.uleb128 0xc
 829 0190 50060000 		.4byte	.LASF21
 830 0194 01       		.byte	0x1
 831 0195 98       		.byte	0x98
 832 0196 80040000 		.4byte	0x480
 833 019a 0D       		.uleb128 0xd
 834 019b 746D7000 		.ascii	"tmp\000"
 835 019f 01       		.byte	0x1
 836 01a0 A5       		.byte	0xa5
 837 01a1 68000000 		.4byte	0x68
 838 01a5 00       		.byte	0
 839 01a6 0E       		.uleb128 0xe
 840 01a7 7A000000 		.4byte	.LBB2
 841 01ab 4A010000 		.4byte	.LBE2-.LBB2
 842 01af 5B030000 		.4byte	0x35b
 843 01b3 0F       		.uleb128 0xf
 844 01b4 E9000000 		.4byte	.LASF71
 845 01b8 01       		.byte	0x1
 846 01b9 D5       		.byte	0xd5
 847 01ba 68000000 		.4byte	0x68
 848 01be C4010000 		.4byte	0x1c4
 849 01c2 10       		.uleb128 0x10
 850 01c3 00       		.byte	0
 851 01c4 11       		.uleb128 0x11
 852 01c5 80000000 		.4byte	.LVL32
 853 01c9 CB070000 		.4byte	0x7cb
 854 01cd D7010000 		.4byte	0x1d7
 855 01d1 09       		.uleb128 0x9
 856 01d2 01       		.uleb128 0x1
 857 01d3 50       		.byte	0x50
 858 01d4 01       		.uleb128 0x1
 859 01d5 31       		.byte	0x31
 860 01d6 00       		.byte	0
 861 01d7 11       		.uleb128 0x11
 862 01d8 88000000 		.4byte	.LVL33
 863 01dc C0070000 		.4byte	0x7c0
 864 01e0 EC010000 		.4byte	0x1ec
 865 01e4 09       		.uleb128 0x9
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\ccPjNvhl.s 			page 22


 866 01e5 01       		.uleb128 0x1
 867 01e6 50       		.byte	0x50
 868 01e7 03       		.uleb128 0x3
 869 01e8 0A       		.byte	0xa
 870 01e9 E803     		.2byte	0x3e8
 871 01eb 00       		.byte	0
 872 01ec 11       		.uleb128 0x11
 873 01ed 8E000000 		.4byte	.LVL34
 874 01f1 CB070000 		.4byte	0x7cb
 875 01f5 FF010000 		.4byte	0x1ff
 876 01f9 09       		.uleb128 0x9
 877 01fa 01       		.uleb128 0x1
 878 01fb 50       		.byte	0x50
 879 01fc 01       		.uleb128 0x1
 880 01fd 32       		.byte	0x32
 881 01fe 00       		.byte	0
 882 01ff 11       		.uleb128 0x11
 883 0200 96000000 		.4byte	.LVL35
 884 0204 C0070000 		.4byte	0x7c0
 885 0208 14020000 		.4byte	0x214
 886 020c 09       		.uleb128 0x9
 887 020d 01       		.uleb128 0x1
 888 020e 50       		.byte	0x50
 889 020f 03       		.uleb128 0x3
 890 0210 0A       		.byte	0xa
 891 0211 E803     		.2byte	0x3e8
 892 0213 00       		.byte	0
 893 0214 11       		.uleb128 0x11
 894 0215 9C000000 		.4byte	.LVL36
 895 0219 CB070000 		.4byte	0x7cb
 896 021d 27020000 		.4byte	0x227
 897 0221 09       		.uleb128 0x9
 898 0222 01       		.uleb128 0x1
 899 0223 50       		.byte	0x50
 900 0224 01       		.uleb128 0x1
 901 0225 33       		.byte	0x33
 902 0226 00       		.byte	0
 903 0227 11       		.uleb128 0x11
 904 0228 A4000000 		.4byte	.LVL37
 905 022c C0070000 		.4byte	0x7c0
 906 0230 3C020000 		.4byte	0x23c
 907 0234 09       		.uleb128 0x9
 908 0235 01       		.uleb128 0x1
 909 0236 50       		.byte	0x50
 910 0237 03       		.uleb128 0x3
 911 0238 0A       		.byte	0xa
 912 0239 E803     		.2byte	0x3e8
 913 023b 00       		.byte	0
 914 023c 11       		.uleb128 0x11
 915 023d AA000000 		.4byte	.LVL38
 916 0241 CB070000 		.4byte	0x7cb
 917 0245 4F020000 		.4byte	0x24f
 918 0249 09       		.uleb128 0x9
 919 024a 01       		.uleb128 0x1
 920 024b 50       		.byte	0x50
 921 024c 01       		.uleb128 0x1
 922 024d 30       		.byte	0x30
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\ccPjNvhl.s 			page 23


 923 024e 00       		.byte	0
 924 024f 11       		.uleb128 0x11
 925 0250 B2000000 		.4byte	.LVL39
 926 0254 C0070000 		.4byte	0x7c0
 927 0258 64020000 		.4byte	0x264
 928 025c 09       		.uleb128 0x9
 929 025d 01       		.uleb128 0x1
 930 025e 50       		.byte	0x50
 931 025f 03       		.uleb128 0x3
 932 0260 0A       		.byte	0xa
 933 0261 F401     		.2byte	0x1f4
 934 0263 00       		.byte	0
 935 0264 06       		.uleb128 0x6
 936 0265 B6000000 		.4byte	.LVL40
 937 0269 D6070000 		.4byte	0x7d6
 938 026d 06       		.uleb128 0x6
 939 026e BC000000 		.4byte	.LVL41
 940 0272 E1070000 		.4byte	0x7e1
 941 0276 06       		.uleb128 0x6
 942 0277 CC000000 		.4byte	.LVL42
 943 027b EC070000 		.4byte	0x7ec
 944 027f 06       		.uleb128 0x6
 945 0280 D2000000 		.4byte	.LVL43
 946 0284 F7070000 		.4byte	0x7f7
 947 0288 06       		.uleb128 0x6
 948 0289 D6000000 		.4byte	.LVL44
 949 028d EC070000 		.4byte	0x7ec
 950 0291 11       		.uleb128 0x11
 951 0292 1A010000 		.4byte	.LVL46
 952 0296 02080000 		.4byte	0x802
 953 029a AF020000 		.4byte	0x2af
 954 029e 09       		.uleb128 0x9
 955 029f 01       		.uleb128 0x1
 956 02a0 50       		.byte	0x50
 957 02a1 01       		.uleb128 0x1
 958 02a2 40       		.byte	0x40
 959 02a3 09       		.uleb128 0x9
 960 02a4 01       		.uleb128 0x1
 961 02a5 51       		.byte	0x51
 962 02a6 02       		.uleb128 0x2
 963 02a7 08       		.byte	0x8
 964 02a8 82       		.byte	0x82
 965 02a9 09       		.uleb128 0x9
 966 02aa 01       		.uleb128 0x1
 967 02ab 52       		.byte	0x52
 968 02ac 01       		.uleb128 0x1
 969 02ad 30       		.byte	0x30
 970 02ae 00       		.byte	0
 971 02af 11       		.uleb128 0x11
 972 02b0 26010000 		.4byte	.LVL47
 973 02b4 02080000 		.4byte	0x802
 974 02b8 CE020000 		.4byte	0x2ce
 975 02bc 09       		.uleb128 0x9
 976 02bd 01       		.uleb128 0x1
 977 02be 50       		.byte	0x50
 978 02bf 01       		.uleb128 0x1
 979 02c0 40       		.byte	0x40
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\ccPjNvhl.s 			page 24


 980 02c1 09       		.uleb128 0x9
 981 02c2 01       		.uleb128 0x1
 982 02c3 51       		.byte	0x51
 983 02c4 02       		.uleb128 0x2
 984 02c5 08       		.byte	0x8
 985 02c6 66       		.byte	0x66
 986 02c7 09       		.uleb128 0x9
 987 02c8 01       		.uleb128 0x1
 988 02c9 52       		.byte	0x52
 989 02ca 02       		.uleb128 0x2
 990 02cb 08       		.byte	0x8
 991 02cc 5A       		.byte	0x5a
 992 02cd 00       		.byte	0
 993 02ce 11       		.uleb128 0x11
 994 02cf 3A010000 		.4byte	.LVL48
 995 02d3 02080000 		.4byte	0x802
 996 02d7 EE020000 		.4byte	0x2ee
 997 02db 09       		.uleb128 0x9
 998 02dc 01       		.uleb128 0x1
 999 02dd 50       		.byte	0x50
 1000 02de 02       		.uleb128 0x2
 1001 02df 08       		.byte	0x8
 1002 02e0 68       		.byte	0x68
 1003 02e1 09       		.uleb128 0x9
 1004 02e2 01       		.uleb128 0x1
 1005 02e3 51       		.byte	0x51
 1006 02e4 02       		.uleb128 0x2
 1007 02e5 08       		.byte	0x8
 1008 02e6 82       		.byte	0x82
 1009 02e7 09       		.uleb128 0x9
 1010 02e8 01       		.uleb128 0x1
 1011 02e9 52       		.byte	0x52
 1012 02ea 02       		.uleb128 0x2
 1013 02eb 08       		.byte	0x8
 1014 02ec B4       		.byte	0xb4
 1015 02ed 00       		.byte	0
 1016 02ee 11       		.uleb128 0x11
 1017 02ef 46010000 		.4byte	.LVL49
 1018 02f3 02080000 		.4byte	0x802
 1019 02f7 0E030000 		.4byte	0x30e
 1020 02fb 09       		.uleb128 0x9
 1021 02fc 01       		.uleb128 0x1
 1022 02fd 50       		.byte	0x50
 1023 02fe 02       		.uleb128 0x2
 1024 02ff 08       		.byte	0x8
 1025 0300 68       		.byte	0x68
 1026 0301 09       		.uleb128 0x9
 1027 0302 01       		.uleb128 0x1
 1028 0303 51       		.byte	0x51
 1029 0304 02       		.uleb128 0x2
 1030 0305 08       		.byte	0x8
 1031 0306 66       		.byte	0x66
 1032 0307 09       		.uleb128 0x9
 1033 0308 01       		.uleb128 0x1
 1034 0309 52       		.byte	0x52
 1035 030a 02       		.uleb128 0x2
 1036 030b 08       		.byte	0x8
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\ccPjNvhl.s 			page 25


 1037 030c 5A       		.byte	0x5a
 1038 030d 00       		.byte	0
 1039 030e 11       		.uleb128 0x11
 1040 030f 60010000 		.4byte	.LVL50
 1041 0313 02080000 		.4byte	0x802
 1042 0317 2D030000 		.4byte	0x32d
 1043 031b 09       		.uleb128 0x9
 1044 031c 01       		.uleb128 0x1
 1045 031d 50       		.byte	0x50
 1046 031e 01       		.uleb128 0x1
 1047 031f 4E       		.byte	0x4e
 1048 0320 09       		.uleb128 0x9
 1049 0321 01       		.uleb128 0x1
 1050 0322 51       		.byte	0x51
 1051 0323 01       		.uleb128 0x1
 1052 0324 35       		.byte	0x35
 1053 0325 09       		.uleb128 0x9
 1054 0326 01       		.uleb128 0x1
 1055 0327 52       		.byte	0x52
 1056 0328 03       		.uleb128 0x3
 1057 0329 0A       		.byte	0xa
 1058 032a 0E01     		.2byte	0x10e
 1059 032c 00       		.byte	0
 1060 032d 06       		.uleb128 0x6
 1061 032e 68010000 		.4byte	.LVL51
 1062 0332 0D080000 		.4byte	0x80d
 1063 0336 06       		.uleb128 0x6
 1064 0337 70010000 		.4byte	.LVL52
 1065 033b 18080000 		.4byte	0x818
 1066 033f 08       		.uleb128 0x8
 1067 0340 94010000 		.4byte	.LVL53
 1068 0344 02080000 		.4byte	0x802
 1069 0348 09       		.uleb128 0x9
 1070 0349 01       		.uleb128 0x1
 1071 034a 50       		.byte	0x50
 1072 034b 02       		.uleb128 0x2
 1073 034c 08       		.byte	0x8
 1074 034d 3C       		.byte	0x3c
 1075 034e 09       		.uleb128 0x9
 1076 034f 01       		.uleb128 0x1
 1077 0350 51       		.byte	0x51
 1078 0351 01       		.uleb128 0x1
 1079 0352 33       		.byte	0x33
 1080 0353 09       		.uleb128 0x9
 1081 0354 01       		.uleb128 0x1
 1082 0355 52       		.byte	0x52
 1083 0356 02       		.uleb128 0x2
 1084 0357 08       		.byte	0x8
 1085 0358 5A       		.byte	0x5a
 1086 0359 00       		.byte	0
 1087 035a 00       		.byte	0
 1088 035b 06       		.uleb128 0x6
 1089 035c 08000000 		.4byte	.LVL9
 1090 0360 23080000 		.4byte	0x823
 1091 0364 06       		.uleb128 0x6
 1092 0365 0C000000 		.4byte	.LVL10
 1093 0369 2E080000 		.4byte	0x82e
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\ccPjNvhl.s 			page 26


 1094 036d 11       		.uleb128 0x11
 1095 036e 12000000 		.4byte	.LVL11
 1096 0372 39080000 		.4byte	0x839
 1097 0376 84030000 		.4byte	0x384
 1098 037a 09       		.uleb128 0x9
 1099 037b 01       		.uleb128 0x1
 1100 037c 50       		.byte	0x50
 1101 037d 05       		.uleb128 0x5
 1102 037e 03       		.byte	0x3
 1103 037f 00000000 		.4byte	.LC0
 1104 0383 00       		.byte	0
 1105 0384 06       		.uleb128 0x6
 1106 0385 16000000 		.4byte	.LVL12
 1107 0389 44080000 		.4byte	0x844
 1108 038d 06       		.uleb128 0x6
 1109 038e 1A000000 		.4byte	.LVL13
 1110 0392 4F080000 		.4byte	0x84f
 1111 0396 11       		.uleb128 0x11
 1112 0397 20000000 		.4byte	.LVL14
 1113 039b 5A080000 		.4byte	0x85a
 1114 039f A9030000 		.4byte	0x3a9
 1115 03a3 09       		.uleb128 0x9
 1116 03a4 01       		.uleb128 0x1
 1117 03a5 50       		.byte	0x50
 1118 03a6 01       		.uleb128 0x1
 1119 03a7 30       		.byte	0x30
 1120 03a8 00       		.byte	0
 1121 03a9 06       		.uleb128 0x6
 1122 03aa 28000000 		.4byte	.LVL15
 1123 03ae 65080000 		.4byte	0x865
 1124 03b2 06       		.uleb128 0x6
 1125 03b3 2C000000 		.4byte	.LVL16
 1126 03b7 70080000 		.4byte	0x870
 1127 03bb 06       		.uleb128 0x6
 1128 03bc 30000000 		.4byte	.LVL17
 1129 03c0 7B080000 		.4byte	0x87b
 1130 03c4 11       		.uleb128 0x11
 1131 03c5 36000000 		.4byte	.LVL18
 1132 03c9 86080000 		.4byte	0x886
 1133 03cd DB030000 		.4byte	0x3db
 1134 03d1 09       		.uleb128 0x9
 1135 03d2 01       		.uleb128 0x1
 1136 03d3 50       		.byte	0x50
 1137 03d4 05       		.uleb128 0x5
 1138 03d5 03       		.byte	0x3
 1139 03d6 00000000 		.4byte	TIH
 1140 03da 00       		.byte	0
 1141 03db 11       		.uleb128 0x11
 1142 03dc 3C000000 		.4byte	.LVL19
 1143 03e0 91080000 		.4byte	0x891
 1144 03e4 F2030000 		.4byte	0x3f2
 1145 03e8 09       		.uleb128 0x9
 1146 03e9 01       		.uleb128 0x1
 1147 03ea 50       		.byte	0x50
 1148 03eb 05       		.uleb128 0x5
 1149 03ec 03       		.byte	0x3
 1150 03ed 00000000 		.4byte	StartIH
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\ccPjNvhl.s 			page 27


 1151 03f1 00       		.byte	0
 1152 03f2 06       		.uleb128 0x6
 1153 03f3 44000000 		.4byte	.LVL21
 1154 03f7 9C080000 		.4byte	0x89c
 1155 03fb 06       		.uleb128 0x6
 1156 03fc 48000000 		.4byte	.LVL22
 1157 0400 A7080000 		.4byte	0x8a7
 1158 0404 06       		.uleb128 0x6
 1159 0405 54000000 		.4byte	.LVL23
 1160 0409 B2080000 		.4byte	0x8b2
 1161 040d 06       		.uleb128 0x6
 1162 040e 58000000 		.4byte	.LVL24
 1163 0412 BD080000 		.4byte	0x8bd
 1164 0416 06       		.uleb128 0x6
 1165 0417 5C000000 		.4byte	.LVL25
 1166 041b C8080000 		.4byte	0x8c8
 1167 041f 06       		.uleb128 0x6
 1168 0420 60000000 		.4byte	.LVL26
 1169 0424 D3080000 		.4byte	0x8d3
 1170 0428 11       		.uleb128 0x11
 1171 0429 66000000 		.4byte	.LVL27
 1172 042d DE080000 		.4byte	0x8de
 1173 0431 3F040000 		.4byte	0x43f
 1174 0435 09       		.uleb128 0x9
 1175 0436 01       		.uleb128 0x1
 1176 0437 50       		.byte	0x50
 1177 0438 05       		.uleb128 0x5
 1178 0439 03       		.byte	0x3
 1179 043a 00000000 		.4byte	Encoder_Counts_1_IH
 1180 043e 00       		.byte	0
 1181 043f 11       		.uleb128 0x11
 1182 0440 6C000000 		.4byte	.LVL28
 1183 0444 E9080000 		.4byte	0x8e9
 1184 0448 56040000 		.4byte	0x456
 1185 044c 09       		.uleb128 0x9
 1186 044d 01       		.uleb128 0x1
 1187 044e 50       		.byte	0x50
 1188 044f 05       		.uleb128 0x5
 1189 0450 03       		.byte	0x3
 1190 0451 00000000 		.4byte	Encoder_Counts_2_IH
 1191 0455 00       		.byte	0
 1192 0456 11       		.uleb128 0x11
 1193 0457 72000000 		.4byte	.LVL29
 1194 045b F4080000 		.4byte	0x8f4
 1195 045f 6D040000 		.4byte	0x46d
 1196 0463 09       		.uleb128 0x9
 1197 0464 01       		.uleb128 0x1
 1198 0465 50       		.byte	0x50
 1199 0466 05       		.uleb128 0x5
 1200 0467 03       		.byte	0x3
 1201 0468 00000000 		.4byte	Drift_Check_IH
 1202 046c 00       		.byte	0
 1203 046d 06       		.uleb128 0x6
 1204 046e 76000000 		.4byte	.LVL30
 1205 0472 FF080000 		.4byte	0x8ff
 1206 0476 06       		.uleb128 0x6
 1207 0477 7A000000 		.4byte	.LVL31
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\ccPjNvhl.s 			page 28


 1208 047b 0A090000 		.4byte	0x90a
 1209 047f 00       		.byte	0
 1210 0480 12       		.uleb128 0x12
 1211 0481 8F000000 		.4byte	0x8f
 1212 0485 90040000 		.4byte	0x490
 1213 0489 13       		.uleb128 0x13
 1214 048a 9D000000 		.4byte	0x9d
 1215 048e 1F       		.byte	0x1f
 1216 048f 00       		.byte	0
 1217 0490 14       		.uleb128 0x14
 1218 0491 6E060000 		.4byte	.LASF22
 1219 0495 04       		.byte	0x4
 1220 0496 1207     		.2byte	0x712
 1221 0498 9C040000 		.4byte	0x49c
 1222 049c 15       		.uleb128 0x15
 1223 049d 76000000 		.4byte	0x76
 1224 04a1 16       		.uleb128 0x16
 1225 04a2 21050000 		.4byte	.LASF23
 1226 04a6 05       		.byte	0x5
 1227 04a7 1D       		.byte	0x1d
 1228 04a8 68000000 		.4byte	0x68
 1229 04ac 05       		.uleb128 0x5
 1230 04ad 03       		.byte	0x3
 1231 04ae 00000000 		.4byte	driveStraightEnable
 1232 04b2 16       		.uleb128 0x16
 1233 04b3 37030000 		.4byte	.LASF24
 1234 04b7 01       		.byte	0x1
 1235 04b8 71       		.byte	0x71
 1236 04b9 68000000 		.4byte	0x68
 1237 04bd 05       		.uleb128 0x5
 1238 04be 03       		.byte	0x3
 1239 04bf 00000000 		.4byte	currentPuckRackScanningIndex
 1240 04c3 12       		.uleb128 0x12
 1241 04c4 68000000 		.4byte	0x68
 1242 04c8 D3040000 		.4byte	0x4d3
 1243 04cc 13       		.uleb128 0x13
 1244 04cd 9D000000 		.4byte	0x9d
 1245 04d1 04       		.byte	0x4
 1246 04d2 00       		.byte	0
 1247 04d3 16       		.uleb128 0x16
 1248 04d4 1D060000 		.4byte	.LASF25
 1249 04d8 01       		.byte	0x1
 1250 04d9 70       		.byte	0x70
 1251 04da C3040000 		.4byte	0x4c3
 1252 04de 05       		.uleb128 0x5
 1253 04df 03       		.byte	0x3
 1254 04e0 00000000 		.4byte	puckRackColours
 1255 04e4 16       		.uleb128 0x16
 1256 04e5 3F010000 		.4byte	.LASF26
 1257 04e9 01       		.byte	0x1
 1258 04ea 72       		.byte	0x72
 1259 04eb C3040000 		.4byte	0x4c3
 1260 04ef 05       		.uleb128 0x5
 1261 04f0 03       		.byte	0x3
 1262 04f1 00000000 		.4byte	puckRackOffsetsFromWest
 1263 04f5 16       		.uleb128 0x16
 1264 04f6 FC040000 		.4byte	.LASF27
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\ccPjNvhl.s 			page 29


 1265 04fa 01       		.byte	0x1
 1266 04fb 66       		.byte	0x66
 1267 04fc 68000000 		.4byte	0x68
 1268 0500 05       		.uleb128 0x5
 1269 0501 03       		.byte	0x3
 1270 0502 00000000 		.4byte	sweeping
 1271 0506 12       		.uleb128 0x12
 1272 0507 81000000 		.4byte	0x81
 1273 050b 16050000 		.4byte	0x516
 1274 050f 13       		.uleb128 0x13
 1275 0510 9D000000 		.4byte	0x9d
 1276 0514 03       		.byte	0x3
 1277 0515 00       		.byte	0
 1278 0516 16       		.uleb128 0x16
 1279 0517 2A040000 		.4byte	.LASF28
 1280 051b 01       		.byte	0x1
 1281 051c 6B       		.byte	0x6b
 1282 051d 06050000 		.4byte	0x506
 1283 0521 05       		.uleb128 0x5
 1284 0522 03       		.byte	0x3
 1285 0523 00000000 		.4byte	block_edge_location
 1286 0527 16       		.uleb128 0x16
 1287 0528 09030000 		.4byte	.LASF29
 1288 052c 06       		.byte	0x6
 1289 052d 75       		.byte	0x75
 1290 052e 81000000 		.4byte	0x81
 1291 0532 05       		.uleb128 0x5
 1292 0533 03       		.byte	0x3
 1293 0534 00000000 		.4byte	puckPileLocation
 1294 0538 16       		.uleb128 0x16
 1295 0539 4D070000 		.4byte	.LASF30
 1296 053d 05       		.byte	0x5
 1297 053e 25       		.byte	0x25
 1298 053f 68000000 		.4byte	0x68
 1299 0543 05       		.uleb128 0x5
 1300 0544 03       		.byte	0x3
 1301 0545 00000000 		.4byte	initialisation
 1302 0549 16       		.uleb128 0x16
 1303 054a 50060000 		.4byte	.LASF21
 1304 054e 01       		.byte	0x1
 1305 054f 98       		.byte	0x98
 1306 0550 80040000 		.4byte	0x480
 1307 0554 05       		.uleb128 0x5
 1308 0555 03       		.byte	0x3
 1309 0556 00000000 		.4byte	output
 1310 055a 16       		.uleb128 0x16
 1311 055b CC050000 		.4byte	.LASF31
 1312 055f 01       		.byte	0x1
 1313 0560 62       		.byte	0x62
 1314 0561 68000000 		.4byte	0x68
 1315 0565 05       		.uleb128 0x5
 1316 0566 03       		.byte	0x3
 1317 0567 00000000 		.4byte	state
 1318 056b 12       		.uleb128 0x12
 1319 056c 81000000 		.4byte	0x81
 1320 0570 7B050000 		.4byte	0x57b
 1321 0574 13       		.uleb128 0x13
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\ccPjNvhl.s 			page 30


 1322 0575 9D000000 		.4byte	0x9d
 1323 0579 01       		.byte	0x1
 1324 057a 00       		.byte	0
 1325 057b 16       		.uleb128 0x16
 1326 057c 8F000000 		.4byte	.LASF32
 1327 0580 01       		.byte	0x1
 1328 0581 1F       		.byte	0x1f
 1329 0582 6B050000 		.4byte	0x56b
 1330 0586 05       		.uleb128 0x5
 1331 0587 03       		.byte	0x3
 1332 0588 00000000 		.4byte	currentPosition
 1333 058c 16       		.uleb128 0x16
 1334 058d 57050000 		.4byte	.LASF33
 1335 0591 01       		.byte	0x1
 1336 0592 20       		.byte	0x20
 1337 0593 6B050000 		.4byte	0x56b
 1338 0597 05       		.uleb128 0x5
 1339 0598 03       		.byte	0x3
 1340 0599 00000000 		.4byte	desiredPosition
 1341 059d 16       		.uleb128 0x16
 1342 059e B7040000 		.4byte	.LASF34
 1343 05a2 01       		.byte	0x1
 1344 05a3 21       		.byte	0x21
 1345 05a4 68000000 		.4byte	0x68
 1346 05a8 05       		.uleb128 0x5
 1347 05a9 03       		.byte	0x3
 1348 05aa 00000000 		.4byte	currentOrientation
 1349 05ae 16       		.uleb128 0x16
 1350 05af 01010000 		.4byte	.LASF35
 1351 05b3 01       		.byte	0x1
 1352 05b4 22       		.byte	0x22
 1353 05b5 68000000 		.4byte	0x68
 1354 05b9 05       		.uleb128 0x5
 1355 05ba 03       		.byte	0x3
 1356 05bb 00000000 		.4byte	desiredOrientation
 1357 05bf 16       		.uleb128 0x16
 1358 05c0 67050000 		.4byte	.LASF36
 1359 05c4 01       		.byte	0x1
 1360 05c5 29       		.byte	0x29
 1361 05c6 68000000 		.4byte	0x68
 1362 05ca 05       		.uleb128 0x5
 1363 05cb 03       		.byte	0x3
 1364 05cc 00000000 		.4byte	M1_FD
 1365 05d0 16       		.uleb128 0x16
 1366 05d1 13050000 		.4byte	.LASF37
 1367 05d5 01       		.byte	0x1
 1368 05d6 2A       		.byte	0x2a
 1369 05d7 68000000 		.4byte	0x68
 1370 05db 05       		.uleb128 0x5
 1371 05dc 03       		.byte	0x3
 1372 05dd 00000000 		.4byte	M1_BD
 1373 05e1 16       		.uleb128 0x16
 1374 05e2 47070000 		.4byte	.LASF38
 1375 05e6 01       		.byte	0x1
 1376 05e7 2B       		.byte	0x2b
 1377 05e8 68000000 		.4byte	0x68
 1378 05ec 05       		.uleb128 0x5
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\ccPjNvhl.s 			page 31


 1379 05ed 03       		.byte	0x3
 1380 05ee 00000000 		.4byte	M2_FD
 1381 05f2 16       		.uleb128 0x16
 1382 05f3 68060000 		.4byte	.LASF39
 1383 05f7 01       		.byte	0x1
 1384 05f8 2C       		.byte	0x2c
 1385 05f9 68000000 		.4byte	0x68
 1386 05fd 05       		.uleb128 0x5
 1387 05fe 03       		.byte	0x3
 1388 05ff 00000000 		.4byte	M2_BD
 1389 0603 16       		.uleb128 0x16
 1390 0604 23020000 		.4byte	.LASF40
 1391 0608 01       		.byte	0x1
 1392 0609 27       		.byte	0x27
 1393 060a 33000000 		.4byte	0x33
 1394 060e 05       		.uleb128 0x5
 1395 060f 03       		.byte	0x3
 1396 0610 00000000 		.4byte	motor1Enable
 1397 0614 16       		.uleb128 0x16
 1398 0615 D2050000 		.4byte	.LASF41
 1399 0619 01       		.byte	0x1
 1400 061a 28       		.byte	0x28
 1401 061b 33000000 		.4byte	0x33
 1402 061f 05       		.uleb128 0x5
 1403 0620 03       		.byte	0x3
 1404 0621 00000000 		.4byte	motor2Enable
 1405 0625 16       		.uleb128 0x16
 1406 0626 D5000000 		.4byte	.LASF42
 1407 062a 01       		.byte	0x1
 1408 062b 2D       		.byte	0x2d
 1409 062c 68000000 		.4byte	0x68
 1410 0630 05       		.uleb128 0x5
 1411 0631 03       		.byte	0x3
 1412 0632 00000000 		.4byte	motor1EncoderCounts
 1413 0636 16       		.uleb128 0x16
 1414 0637 00000000 		.4byte	.LASF43
 1415 063b 01       		.byte	0x1
 1416 063c 2E       		.byte	0x2e
 1417 063d 68000000 		.4byte	0x68
 1418 0641 05       		.uleb128 0x5
 1419 0642 03       		.byte	0x3
 1420 0643 00000000 		.4byte	motor2EncoderCounts
 1421 0647 16       		.uleb128 0x16
 1422 0648 22040000 		.4byte	.LASF44
 1423 064c 01       		.byte	0x1
 1424 064d 2F       		.byte	0x2f
 1425 064e 33000000 		.4byte	0x33
 1426 0652 05       		.uleb128 0x5
 1427 0653 03       		.byte	0x3
 1428 0654 00000000 		.4byte	moveNow
 1429 0658 16       		.uleb128 0x16
 1430 0659 AD000000 		.4byte	.LASF45
 1431 065d 01       		.byte	0x1
 1432 065e 36       		.byte	0x36
 1433 065f 33000000 		.4byte	0x33
 1434 0663 05       		.uleb128 0x5
 1435 0664 03       		.byte	0x3
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\ccPjNvhl.s 			page 32


 1436 0665 00000000 		.4byte	drivingForwardFlag
 1437 0669 16       		.uleb128 0x16
 1438 066a F5020000 		.4byte	.LASF46
 1439 066e 01       		.byte	0x1
 1440 066f 37       		.byte	0x37
 1441 0670 33000000 		.4byte	0x33
 1442 0674 05       		.uleb128 0x5
 1443 0675 03       		.byte	0x3
 1444 0676 00000000 		.4byte	drivingBackwardFlag
 1445 067a 16       		.uleb128 0x16
 1446 067b 61000000 		.4byte	.LASF47
 1447 067f 01       		.byte	0x1
 1448 0680 38       		.byte	0x38
 1449 0681 33000000 		.4byte	0x33
 1450 0685 05       		.uleb128 0x5
 1451 0686 03       		.byte	0x3
 1452 0687 00000000 		.4byte	turningLeftFlag
 1453 068b 16       		.uleb128 0x16
 1454 068c 63020000 		.4byte	.LASF48
 1455 0690 01       		.byte	0x1
 1456 0691 39       		.byte	0x39
 1457 0692 33000000 		.4byte	0x33
 1458 0696 05       		.uleb128 0x5
 1459 0697 03       		.byte	0x3
 1460 0698 00000000 		.4byte	turningRightFlag
 1461 069c 16       		.uleb128 0x16
 1462 069d 2D060000 		.4byte	.LASF49
 1463 06a1 01       		.byte	0x1
 1464 06a2 3C       		.byte	0x3c
 1465 06a3 33000000 		.4byte	0x33
 1466 06a7 05       		.uleb128 0x5
 1467 06a8 03       		.byte	0x3
 1468 06a9 00000000 		.4byte	moveLeftAllowed
 1469 06ad 16       		.uleb128 0x16
 1470 06ae 57060000 		.4byte	.LASF50
 1471 06b2 01       		.byte	0x1
 1472 06b3 3D       		.byte	0x3d
 1473 06b4 33000000 		.4byte	0x33
 1474 06b8 05       		.uleb128 0x5
 1475 06b9 03       		.byte	0x3
 1476 06ba 00000000 		.4byte	moveRightAllowed
 1477 06be 16       		.uleb128 0x16
 1478 06bf CA040000 		.4byte	.LASF51
 1479 06c3 01       		.byte	0x1
 1480 06c4 3E       		.byte	0x3e
 1481 06c5 33000000 		.4byte	0x33
 1482 06c9 05       		.uleb128 0x5
 1483 06ca 03       		.byte	0x3
 1484 06cb 00000000 		.4byte	moveForwardAllowed
 1485 06cf 16       		.uleb128 0x16
 1486 06d0 74010000 		.4byte	.LASF52
 1487 06d4 01       		.byte	0x1
 1488 06d5 3F       		.byte	0x3f
 1489 06d6 33000000 		.4byte	0x33
 1490 06da 05       		.uleb128 0x5
 1491 06db 03       		.byte	0x3
 1492 06dc 00000000 		.4byte	moveBackwardAllowed
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\ccPjNvhl.s 			page 33


 1493 06e0 16       		.uleb128 0x16
 1494 06e1 87040000 		.4byte	.LASF53
 1495 06e5 01       		.byte	0x1
 1496 06e6 53       		.byte	0x53
 1497 06e7 68000000 		.4byte	0x68
 1498 06eb 05       		.uleb128 0x5
 1499 06ec 03       		.byte	0x3
 1500 06ed 00000000 		.4byte	idac_value
 1501 06f1 16       		.uleb128 0x16
 1502 06f2 75030000 		.4byte	.LASF54
 1503 06f6 01       		.byte	0x1
 1504 06f7 57       		.byte	0x57
 1505 06f8 68000000 		.4byte	0x68
 1506 06fc 05       		.uleb128 0x5
 1507 06fd 03       		.byte	0x3
 1508 06fe 00000000 		.4byte	colour_flag
 1509 0702 16       		.uleb128 0x16
 1510 0703 92040000 		.4byte	.LASF55
 1511 0707 01       		.byte	0x1
 1512 0708 58       		.byte	0x58
 1513 0709 68000000 		.4byte	0x68
 1514 070d 05       		.uleb128 0x5
 1515 070e 03       		.byte	0x3
 1516 070f 00000000 		.4byte	ColourSensingAlgorithm
 1517 0713 16       		.uleb128 0x16
 1518 0714 C5000000 		.4byte	.LASF56
 1519 0718 01       		.byte	0x1
 1520 0719 60       		.byte	0x60
 1521 071a 68000000 		.4byte	0x68
 1522 071e 05       		.uleb128 0x5
 1523 071f 03       		.byte	0x3
 1524 0720 00000000 		.4byte	beginNavigation
 1525 0724 16       		.uleb128 0x16
 1526 0725 1B020000 		.4byte	.LASF57
 1527 0729 01       		.byte	0x1
 1528 072a 64       		.byte	0x64
 1529 072b 68000000 		.4byte	0x68
 1530 072f 05       		.uleb128 0x5
 1531 0730 03       		.byte	0x3
 1532 0731 00000000 		.4byte	running
 1533 0735 16       		.uleb128 0x16
 1534 0736 26070000 		.4byte	.LASF58
 1535 073a 01       		.byte	0x1
 1536 073b 68       		.byte	0x68
 1537 073c 68000000 		.4byte	0x68
 1538 0740 05       		.uleb128 0x5
 1539 0741 03       		.byte	0x3
 1540 0742 00000000 		.4byte	pathToPucks
 1541 0746 16       		.uleb128 0x16
 1542 0747 BE020000 		.4byte	.LASF59
 1543 074b 01       		.byte	0x1
 1544 074c 69       		.byte	0x69
 1545 074d 68000000 		.4byte	0x68
 1546 0751 05       		.uleb128 0x5
 1547 0752 03       		.byte	0x3
 1548 0753 00000000 		.4byte	pathPastBlock
 1549 0757 16       		.uleb128 0x16
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\ccPjNvhl.s 			page 34


 1550 0758 06020000 		.4byte	.LASF60
 1551 075c 01       		.byte	0x1
 1552 075d 6D       		.byte	0x6d
 1553 075e 68000000 		.4byte	0x68
 1554 0762 05       		.uleb128 0x5
 1555 0763 03       		.byte	0x3
 1556 0764 00000000 		.4byte	currentPuckStackSize
 1557 0768 17       		.uleb128 0x17
 1558 0769 35050000 		.4byte	.LASF61
 1559 076d 35050000 		.4byte	.LASF61
 1560 0771 07       		.byte	0x7
 1561 0772 1C       		.byte	0x1c
 1562 0773 17       		.uleb128 0x17
 1563 0774 7B000000 		.4byte	.LASF62
 1564 0778 7B000000 		.4byte	.LASF62
 1565 077c 07       		.byte	0x7
 1566 077d 1D       		.byte	0x1d
 1567 077e 17       		.uleb128 0x17
 1568 077f EE050000 		.4byte	.LASF63
 1569 0783 EE050000 		.4byte	.LASF63
 1570 0787 08       		.byte	0x8
 1571 0788 5E       		.byte	0x5e
 1572 0789 17       		.uleb128 0x17
 1573 078a 54030000 		.4byte	.LASF64
 1574 078e 54030000 		.4byte	.LASF64
 1575 0792 08       		.byte	0x8
 1576 0793 5B       		.byte	0x5b
 1577 0794 17       		.uleb128 0x17
 1578 0795 74070000 		.4byte	.LASF65
 1579 0799 74070000 		.4byte	.LASF65
 1580 079d 09       		.byte	0x9
 1581 079e 5D       		.byte	0x5d
 1582 079f 17       		.uleb128 0x17
 1583 07a0 14010000 		.4byte	.LASF66
 1584 07a4 14010000 		.4byte	.LASF66
 1585 07a8 0A       		.byte	0xa
 1586 07a9 5D       		.byte	0x5d
 1587 07aa 17       		.uleb128 0x17
 1588 07ab 88010000 		.4byte	.LASF67
 1589 07af 88010000 		.4byte	.LASF67
 1590 07b3 07       		.byte	0x7
 1591 07b4 11       		.byte	0x11
 1592 07b5 17       		.uleb128 0x17
 1593 07b6 48020000 		.4byte	.LASF68
 1594 07ba 48020000 		.4byte	.LASF68
 1595 07be 05       		.byte	0x5
 1596 07bf 18       		.byte	0x18
 1597 07c0 17       		.uleb128 0x17
 1598 07c1 09070000 		.4byte	.LASF69
 1599 07c5 09070000 		.4byte	.LASF69
 1600 07c9 0B       		.byte	0xb
 1601 07ca 76       		.byte	0x76
 1602 07cb 17       		.uleb128 0x17
 1603 07cc 68040000 		.4byte	.LASF70
 1604 07d0 68040000 		.4byte	.LASF70
 1605 07d4 0C       		.byte	0xc
 1606 07d5 2F       		.byte	0x2f
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\ccPjNvhl.s 			page 35


 1607 07d6 17       		.uleb128 0x17
 1608 07d7 E9000000 		.4byte	.LASF71
 1609 07db E9000000 		.4byte	.LASF71
 1610 07df 01       		.byte	0x1
 1611 07e0 D5       		.byte	0xd5
 1612 07e1 17       		.uleb128 0x17
 1613 07e2 55040000 		.4byte	.LASF72
 1614 07e6 55040000 		.4byte	.LASF72
 1615 07ea 0D       		.byte	0xd
 1616 07eb 19       		.byte	0x19
 1617 07ec 17       		.uleb128 0x17
 1618 07ed 29000000 		.4byte	.LASF73
 1619 07f1 29000000 		.4byte	.LASF73
 1620 07f5 07       		.byte	0x7
 1621 07f6 14       		.byte	0x14
 1622 07f7 17       		.uleb128 0x17
 1623 07f8 3D060000 		.4byte	.LASF74
 1624 07fc 3D060000 		.4byte	.LASF74
 1625 0800 07       		.byte	0x7
 1626 0801 18       		.byte	0x18
 1627 0802 17       		.uleb128 0x17
 1628 0803 85050000 		.4byte	.LASF75
 1629 0807 85050000 		.4byte	.LASF75
 1630 080b 07       		.byte	0x7
 1631 080c 1E       		.byte	0x1e
 1632 080d 17       		.uleb128 0x17
 1633 080e D6020000 		.4byte	.LASF76
 1634 0812 D6020000 		.4byte	.LASF76
 1635 0816 0E       		.byte	0xe
 1636 0817 14       		.byte	0x14
 1637 0818 17       		.uleb128 0x17
 1638 0819 7A020000 		.4byte	.LASF77
 1639 081d 7A020000 		.4byte	.LASF77
 1640 0821 0E       		.byte	0xe
 1641 0822 13       		.byte	0x13
 1642 0823 17       		.uleb128 0x17
 1643 0824 F0040000 		.4byte	.LASF78
 1644 0828 F0040000 		.4byte	.LASF78
 1645 082c 0F       		.byte	0xf
 1646 082d 3D       		.byte	0x3d
 1647 082e 17       		.uleb128 0x17
 1648 082f 8D030000 		.4byte	.LASF79
 1649 0833 8D030000 		.4byte	.LASF79
 1650 0837 10       		.byte	0x10
 1651 0838 54       		.byte	0x54
 1652 0839 17       		.uleb128 0x17
 1653 083a A7050000 		.4byte	.LASF80
 1654 083e A7050000 		.4byte	.LASF80
 1655 0842 10       		.byte	0x10
 1656 0843 8B       		.byte	0x8b
 1657 0844 17       		.uleb128 0x17
 1658 0845 CC020000 		.4byte	.LASF81
 1659 0849 CC020000 		.4byte	.LASF81
 1660 084d 11       		.byte	0x11
 1661 084e 3A       		.byte	0x3a
 1662 084f 17       		.uleb128 0x17
 1663 0850 A9040000 		.4byte	.LASF82
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\ccPjNvhl.s 			page 36


 1664 0854 A9040000 		.4byte	.LASF82
 1665 0858 12       		.byte	0x12
 1666 0859 3C       		.byte	0x3c
 1667 085a 17       		.uleb128 0x17
 1668 085b A8030000 		.4byte	.LASF83
 1669 085f A8030000 		.4byte	.LASF83
 1670 0863 12       		.byte	0x12
 1671 0864 40       		.byte	0x40
 1672 0865 17       		.uleb128 0x17
 1673 0866 6D050000 		.4byte	.LASF84
 1674 086a 6D050000 		.4byte	.LASF84
 1675 086e 12       		.byte	0x12
 1676 086f 41       		.byte	0x41
 1677 0870 17       		.uleb128 0x17
 1678 0871 49050000 		.4byte	.LASF85
 1679 0875 49050000 		.4byte	.LASF85
 1680 0879 13       		.byte	0x13
 1681 087a 5A       		.byte	0x5a
 1682 087b 17       		.uleb128 0x17
 1683 087c 95010000 		.4byte	.LASF86
 1684 0880 95010000 		.4byte	.LASF86
 1685 0884 13       		.byte	0x13
 1686 0885 5E       		.byte	0x5e
 1687 0886 17       		.uleb128 0x17
 1688 0887 9F000000 		.4byte	.LASF87
 1689 088b 9F000000 		.4byte	.LASF87
 1690 088f 14       		.byte	0x14
 1691 0890 18       		.byte	0x18
 1692 0891 17       		.uleb128 0x17
 1693 0892 92050000 		.4byte	.LASF88
 1694 0896 92050000 		.4byte	.LASF88
 1695 089a 15       		.byte	0x15
 1696 089b 18       		.byte	0x18
 1697 089c 17       		.uleb128 0x17
 1698 089d 11070000 		.4byte	.LASF89
 1699 08a1 11070000 		.4byte	.LASF89
 1700 08a5 16       		.byte	0x16
 1701 08a6 92       		.byte	0x92
 1702 08a7 17       		.uleb128 0x17
 1703 08a8 32070000 		.4byte	.LASF90
 1704 08ac 32070000 		.4byte	.LASF90
 1705 08b0 17       		.byte	0x17
 1706 08b1 92       		.byte	0x92
 1707 08b2 17       		.uleb128 0x17
 1708 08b3 14000000 		.4byte	.LASF91
 1709 08b7 14000000 		.4byte	.LASF91
 1710 08bb 07       		.byte	0x7
 1711 08bc 10       		.byte	0x10
 1712 08bd 17       		.uleb128 0x17
 1713 08be 57010000 		.4byte	.LASF92
 1714 08c2 57010000 		.4byte	.LASF92
 1715 08c6 09       		.byte	0x9
 1716 08c7 4F       		.byte	0x4f
 1717 08c8 17       		.uleb128 0x17
 1718 08c9 1A030000 		.4byte	.LASF93
 1719 08cd 1A030000 		.4byte	.LASF93
 1720 08d1 0A       		.byte	0xa
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\ccPjNvhl.s 			page 37


 1721 08d2 4F       		.byte	0x4f
 1722 08d3 17       		.uleb128 0x17
 1723 08d4 5C070000 		.4byte	.LASF94
 1724 08d8 5C070000 		.4byte	.LASF94
 1725 08dc 08       		.byte	0x8
 1726 08dd 5A       		.byte	0x5a
 1727 08de 17       		.uleb128 0x17
 1728 08df C5010000 		.4byte	.LASF95
 1729 08e3 C5010000 		.4byte	.LASF95
 1730 08e7 18       		.byte	0x18
 1731 08e8 18       		.byte	0x18
 1732 08e9 17       		.uleb128 0x17
 1733 08ea 9B020000 		.4byte	.LASF96
 1734 08ee 9B020000 		.4byte	.LASF96
 1735 08f2 19       		.byte	0x19
 1736 08f3 18       		.byte	0x18
 1737 08f4 17       		.uleb128 0x17
 1738 08f5 E8010000 		.4byte	.LASF97
 1739 08f9 E8010000 		.4byte	.LASF97
 1740 08fd 1A       		.byte	0x1a
 1741 08fe 18       		.byte	0x18
 1742 08ff 17       		.uleb128 0x17
 1743 0900 B0010000 		.4byte	.LASF98
 1744 0904 B0010000 		.4byte	.LASF98
 1745 0908 1B       		.byte	0x1b
 1746 0909 92       		.byte	0x92
 1747 090a 17       		.uleb128 0x17
 1748 090b 30020000 		.4byte	.LASF99
 1749 090f 30020000 		.4byte	.LASF99
 1750 0913 1C       		.byte	0x1c
 1751 0914 92       		.byte	0x92
 1752 0915 00       		.byte	0
 1753              		.section	.debug_abbrev,"",%progbits
 1754              	.Ldebug_abbrev0:
 1755 0000 01       		.uleb128 0x1
 1756 0001 11       		.uleb128 0x11
 1757 0002 01       		.byte	0x1
 1758 0003 25       		.uleb128 0x25
 1759 0004 0E       		.uleb128 0xe
 1760 0005 13       		.uleb128 0x13
 1761 0006 0B       		.uleb128 0xb
 1762 0007 03       		.uleb128 0x3
 1763 0008 0E       		.uleb128 0xe
 1764 0009 1B       		.uleb128 0x1b
 1765 000a 0E       		.uleb128 0xe
 1766 000b 55       		.uleb128 0x55
 1767 000c 17       		.uleb128 0x17
 1768 000d 11       		.uleb128 0x11
 1769 000e 01       		.uleb128 0x1
 1770 000f 10       		.uleb128 0x10
 1771 0010 17       		.uleb128 0x17
 1772 0011 00       		.byte	0
 1773 0012 00       		.byte	0
 1774 0013 02       		.uleb128 0x2
 1775 0014 24       		.uleb128 0x24
 1776 0015 00       		.byte	0
 1777 0016 0B       		.uleb128 0xb
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\ccPjNvhl.s 			page 38


 1778 0017 0B       		.uleb128 0xb
 1779 0018 3E       		.uleb128 0x3e
 1780 0019 0B       		.uleb128 0xb
 1781 001a 03       		.uleb128 0x3
 1782 001b 0E       		.uleb128 0xe
 1783 001c 00       		.byte	0
 1784 001d 00       		.byte	0
 1785 001e 03       		.uleb128 0x3
 1786 001f 16       		.uleb128 0x16
 1787 0020 00       		.byte	0
 1788 0021 03       		.uleb128 0x3
 1789 0022 0E       		.uleb128 0xe
 1790 0023 3A       		.uleb128 0x3a
 1791 0024 0B       		.uleb128 0xb
 1792 0025 3B       		.uleb128 0x3b
 1793 0026 0B       		.uleb128 0xb
 1794 0027 49       		.uleb128 0x49
 1795 0028 13       		.uleb128 0x13
 1796 0029 00       		.byte	0
 1797 002a 00       		.byte	0
 1798 002b 04       		.uleb128 0x4
 1799 002c 24       		.uleb128 0x24
 1800 002d 00       		.byte	0
 1801 002e 0B       		.uleb128 0xb
 1802 002f 0B       		.uleb128 0xb
 1803 0030 3E       		.uleb128 0x3e
 1804 0031 0B       		.uleb128 0xb
 1805 0032 03       		.uleb128 0x3
 1806 0033 08       		.uleb128 0x8
 1807 0034 00       		.byte	0
 1808 0035 00       		.byte	0
 1809 0036 05       		.uleb128 0x5
 1810 0037 2E       		.uleb128 0x2e
 1811 0038 01       		.byte	0x1
 1812 0039 3F       		.uleb128 0x3f
 1813 003a 19       		.uleb128 0x19
 1814 003b 03       		.uleb128 0x3
 1815 003c 0E       		.uleb128 0xe
 1816 003d 3A       		.uleb128 0x3a
 1817 003e 0B       		.uleb128 0xb
 1818 003f 3B       		.uleb128 0x3b
 1819 0040 0B       		.uleb128 0xb
 1820 0041 27       		.uleb128 0x27
 1821 0042 19       		.uleb128 0x19
 1822 0043 11       		.uleb128 0x11
 1823 0044 01       		.uleb128 0x1
 1824 0045 12       		.uleb128 0x12
 1825 0046 06       		.uleb128 0x6
 1826 0047 40       		.uleb128 0x40
 1827 0048 18       		.uleb128 0x18
 1828 0049 9742     		.uleb128 0x2117
 1829 004b 19       		.uleb128 0x19
 1830 004c 01       		.uleb128 0x1
 1831 004d 13       		.uleb128 0x13
 1832 004e 00       		.byte	0
 1833 004f 00       		.byte	0
 1834 0050 06       		.uleb128 0x6
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\ccPjNvhl.s 			page 39


 1835 0051 898201   		.uleb128 0x4109
 1836 0054 00       		.byte	0
 1837 0055 11       		.uleb128 0x11
 1838 0056 01       		.uleb128 0x1
 1839 0057 31       		.uleb128 0x31
 1840 0058 13       		.uleb128 0x13
 1841 0059 00       		.byte	0
 1842 005a 00       		.byte	0
 1843 005b 07       		.uleb128 0x7
 1844 005c 2E       		.uleb128 0x2e
 1845 005d 01       		.byte	0x1
 1846 005e 3F       		.uleb128 0x3f
 1847 005f 19       		.uleb128 0x19
 1848 0060 03       		.uleb128 0x3
 1849 0061 08       		.uleb128 0x8
 1850 0062 3A       		.uleb128 0x3a
 1851 0063 0B       		.uleb128 0xb
 1852 0064 3B       		.uleb128 0x3b
 1853 0065 0B       		.uleb128 0xb
 1854 0066 27       		.uleb128 0x27
 1855 0067 19       		.uleb128 0x19
 1856 0068 11       		.uleb128 0x11
 1857 0069 01       		.uleb128 0x1
 1858 006a 12       		.uleb128 0x12
 1859 006b 06       		.uleb128 0x6
 1860 006c 40       		.uleb128 0x40
 1861 006d 18       		.uleb128 0x18
 1862 006e 9742     		.uleb128 0x2117
 1863 0070 19       		.uleb128 0x19
 1864 0071 01       		.uleb128 0x1
 1865 0072 13       		.uleb128 0x13
 1866 0073 00       		.byte	0
 1867 0074 00       		.byte	0
 1868 0075 08       		.uleb128 0x8
 1869 0076 898201   		.uleb128 0x4109
 1870 0079 01       		.byte	0x1
 1871 007a 11       		.uleb128 0x11
 1872 007b 01       		.uleb128 0x1
 1873 007c 31       		.uleb128 0x31
 1874 007d 13       		.uleb128 0x13
 1875 007e 00       		.byte	0
 1876 007f 00       		.byte	0
 1877 0080 09       		.uleb128 0x9
 1878 0081 8A8201   		.uleb128 0x410a
 1879 0084 00       		.byte	0
 1880 0085 02       		.uleb128 0x2
 1881 0086 18       		.uleb128 0x18
 1882 0087 9142     		.uleb128 0x2111
 1883 0089 18       		.uleb128 0x18
 1884 008a 00       		.byte	0
 1885 008b 00       		.byte	0
 1886 008c 0A       		.uleb128 0xa
 1887 008d 2E       		.uleb128 0x2e
 1888 008e 01       		.byte	0x1
 1889 008f 3F       		.uleb128 0x3f
 1890 0090 19       		.uleb128 0x19
 1891 0091 03       		.uleb128 0x3
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\ccPjNvhl.s 			page 40


 1892 0092 0E       		.uleb128 0xe
 1893 0093 3A       		.uleb128 0x3a
 1894 0094 0B       		.uleb128 0xb
 1895 0095 3B       		.uleb128 0x3b
 1896 0096 0B       		.uleb128 0xb
 1897 0097 27       		.uleb128 0x27
 1898 0098 19       		.uleb128 0x19
 1899 0099 49       		.uleb128 0x49
 1900 009a 13       		.uleb128 0x13
 1901 009b 8701     		.uleb128 0x87
 1902 009d 19       		.uleb128 0x19
 1903 009e 11       		.uleb128 0x11
 1904 009f 01       		.uleb128 0x1
 1905 00a0 12       		.uleb128 0x12
 1906 00a1 06       		.uleb128 0x6
 1907 00a2 40       		.uleb128 0x40
 1908 00a3 18       		.uleb128 0x18
 1909 00a4 9642     		.uleb128 0x2116
 1910 00a6 19       		.uleb128 0x19
 1911 00a7 01       		.uleb128 0x1
 1912 00a8 13       		.uleb128 0x13
 1913 00a9 00       		.byte	0
 1914 00aa 00       		.byte	0
 1915 00ab 0B       		.uleb128 0xb
 1916 00ac 34       		.uleb128 0x34
 1917 00ad 00       		.byte	0
 1918 00ae 03       		.uleb128 0x3
 1919 00af 0E       		.uleb128 0xe
 1920 00b0 3A       		.uleb128 0x3a
 1921 00b1 0B       		.uleb128 0xb
 1922 00b2 3B       		.uleb128 0x3b
 1923 00b3 0B       		.uleb128 0xb
 1924 00b4 49       		.uleb128 0x49
 1925 00b5 13       		.uleb128 0x13
 1926 00b6 1C       		.uleb128 0x1c
 1927 00b7 0B       		.uleb128 0xb
 1928 00b8 00       		.byte	0
 1929 00b9 00       		.byte	0
 1930 00ba 0C       		.uleb128 0xc
 1931 00bb 34       		.uleb128 0x34
 1932 00bc 00       		.byte	0
 1933 00bd 03       		.uleb128 0x3
 1934 00be 0E       		.uleb128 0xe
 1935 00bf 3A       		.uleb128 0x3a
 1936 00c0 0B       		.uleb128 0xb
 1937 00c1 3B       		.uleb128 0x3b
 1938 00c2 0B       		.uleb128 0xb
 1939 00c3 49       		.uleb128 0x49
 1940 00c4 13       		.uleb128 0x13
 1941 00c5 3F       		.uleb128 0x3f
 1942 00c6 19       		.uleb128 0x19
 1943 00c7 3C       		.uleb128 0x3c
 1944 00c8 19       		.uleb128 0x19
 1945 00c9 00       		.byte	0
 1946 00ca 00       		.byte	0
 1947 00cb 0D       		.uleb128 0xd
 1948 00cc 34       		.uleb128 0x34
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\ccPjNvhl.s 			page 41


 1949 00cd 00       		.byte	0
 1950 00ce 03       		.uleb128 0x3
 1951 00cf 08       		.uleb128 0x8
 1952 00d0 3A       		.uleb128 0x3a
 1953 00d1 0B       		.uleb128 0xb
 1954 00d2 3B       		.uleb128 0x3b
 1955 00d3 0B       		.uleb128 0xb
 1956 00d4 49       		.uleb128 0x49
 1957 00d5 13       		.uleb128 0x13
 1958 00d6 1C       		.uleb128 0x1c
 1959 00d7 0B       		.uleb128 0xb
 1960 00d8 00       		.byte	0
 1961 00d9 00       		.byte	0
 1962 00da 0E       		.uleb128 0xe
 1963 00db 0B       		.uleb128 0xb
 1964 00dc 01       		.byte	0x1
 1965 00dd 11       		.uleb128 0x11
 1966 00de 01       		.uleb128 0x1
 1967 00df 12       		.uleb128 0x12
 1968 00e0 06       		.uleb128 0x6
 1969 00e1 01       		.uleb128 0x1
 1970 00e2 13       		.uleb128 0x13
 1971 00e3 00       		.byte	0
 1972 00e4 00       		.byte	0
 1973 00e5 0F       		.uleb128 0xf
 1974 00e6 2E       		.uleb128 0x2e
 1975 00e7 01       		.byte	0x1
 1976 00e8 3F       		.uleb128 0x3f
 1977 00e9 19       		.uleb128 0x19
 1978 00ea 03       		.uleb128 0x3
 1979 00eb 0E       		.uleb128 0xe
 1980 00ec 3A       		.uleb128 0x3a
 1981 00ed 0B       		.uleb128 0xb
 1982 00ee 3B       		.uleb128 0x3b
 1983 00ef 0B       		.uleb128 0xb
 1984 00f0 49       		.uleb128 0x49
 1985 00f1 13       		.uleb128 0x13
 1986 00f2 3C       		.uleb128 0x3c
 1987 00f3 19       		.uleb128 0x19
 1988 00f4 01       		.uleb128 0x1
 1989 00f5 13       		.uleb128 0x13
 1990 00f6 00       		.byte	0
 1991 00f7 00       		.byte	0
 1992 00f8 10       		.uleb128 0x10
 1993 00f9 18       		.uleb128 0x18
 1994 00fa 00       		.byte	0
 1995 00fb 00       		.byte	0
 1996 00fc 00       		.byte	0
 1997 00fd 11       		.uleb128 0x11
 1998 00fe 898201   		.uleb128 0x4109
 1999 0101 01       		.byte	0x1
 2000 0102 11       		.uleb128 0x11
 2001 0103 01       		.uleb128 0x1
 2002 0104 31       		.uleb128 0x31
 2003 0105 13       		.uleb128 0x13
 2004 0106 01       		.uleb128 0x1
 2005 0107 13       		.uleb128 0x13
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\ccPjNvhl.s 			page 42


 2006 0108 00       		.byte	0
 2007 0109 00       		.byte	0
 2008 010a 12       		.uleb128 0x12
 2009 010b 01       		.uleb128 0x1
 2010 010c 01       		.byte	0x1
 2011 010d 49       		.uleb128 0x49
 2012 010e 13       		.uleb128 0x13
 2013 010f 01       		.uleb128 0x1
 2014 0110 13       		.uleb128 0x13
 2015 0111 00       		.byte	0
 2016 0112 00       		.byte	0
 2017 0113 13       		.uleb128 0x13
 2018 0114 21       		.uleb128 0x21
 2019 0115 00       		.byte	0
 2020 0116 49       		.uleb128 0x49
 2021 0117 13       		.uleb128 0x13
 2022 0118 2F       		.uleb128 0x2f
 2023 0119 0B       		.uleb128 0xb
 2024 011a 00       		.byte	0
 2025 011b 00       		.byte	0
 2026 011c 14       		.uleb128 0x14
 2027 011d 34       		.uleb128 0x34
 2028 011e 00       		.byte	0
 2029 011f 03       		.uleb128 0x3
 2030 0120 0E       		.uleb128 0xe
 2031 0121 3A       		.uleb128 0x3a
 2032 0122 0B       		.uleb128 0xb
 2033 0123 3B       		.uleb128 0x3b
 2034 0124 05       		.uleb128 0x5
 2035 0125 49       		.uleb128 0x49
 2036 0126 13       		.uleb128 0x13
 2037 0127 3F       		.uleb128 0x3f
 2038 0128 19       		.uleb128 0x19
 2039 0129 3C       		.uleb128 0x3c
 2040 012a 19       		.uleb128 0x19
 2041 012b 00       		.byte	0
 2042 012c 00       		.byte	0
 2043 012d 15       		.uleb128 0x15
 2044 012e 35       		.uleb128 0x35
 2045 012f 00       		.byte	0
 2046 0130 49       		.uleb128 0x49
 2047 0131 13       		.uleb128 0x13
 2048 0132 00       		.byte	0
 2049 0133 00       		.byte	0
 2050 0134 16       		.uleb128 0x16
 2051 0135 34       		.uleb128 0x34
 2052 0136 00       		.byte	0
 2053 0137 03       		.uleb128 0x3
 2054 0138 0E       		.uleb128 0xe
 2055 0139 3A       		.uleb128 0x3a
 2056 013a 0B       		.uleb128 0xb
 2057 013b 3B       		.uleb128 0x3b
 2058 013c 0B       		.uleb128 0xb
 2059 013d 49       		.uleb128 0x49
 2060 013e 13       		.uleb128 0x13
 2061 013f 3F       		.uleb128 0x3f
 2062 0140 19       		.uleb128 0x19
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\ccPjNvhl.s 			page 43


 2063 0141 02       		.uleb128 0x2
 2064 0142 18       		.uleb128 0x18
 2065 0143 00       		.byte	0
 2066 0144 00       		.byte	0
 2067 0145 17       		.uleb128 0x17
 2068 0146 2E       		.uleb128 0x2e
 2069 0147 00       		.byte	0
 2070 0148 3F       		.uleb128 0x3f
 2071 0149 19       		.uleb128 0x19
 2072 014a 3C       		.uleb128 0x3c
 2073 014b 19       		.uleb128 0x19
 2074 014c 6E       		.uleb128 0x6e
 2075 014d 0E       		.uleb128 0xe
 2076 014e 03       		.uleb128 0x3
 2077 014f 0E       		.uleb128 0xe
 2078 0150 3A       		.uleb128 0x3a
 2079 0151 0B       		.uleb128 0xb
 2080 0152 3B       		.uleb128 0x3b
 2081 0153 0B       		.uleb128 0xb
 2082 0154 00       		.byte	0
 2083 0155 00       		.byte	0
 2084 0156 00       		.byte	0
 2085              		.section	.debug_aranges,"",%progbits
 2086 0000 44000000 		.4byte	0x44
 2087 0004 0200     		.2byte	0x2
 2088 0006 00000000 		.4byte	.Ldebug_info0
 2089 000a 04       		.byte	0x4
 2090 000b 00       		.byte	0
 2091 000c 0000     		.2byte	0
 2092 000e 0000     		.2byte	0
 2093 0010 00000000 		.4byte	.LFB64
 2094 0014 08000000 		.4byte	.LFE64-.LFB64
 2095 0018 00000000 		.4byte	.LFB65
 2096 001c 08000000 		.4byte	.LFE65-.LFB65
 2097 0020 00000000 		.4byte	.LFB66
 2098 0024 28000000 		.4byte	.LFE66-.LFB66
 2099 0028 00000000 		.4byte	.LFB67
 2100 002c 08000000 		.4byte	.LFE67-.LFB67
 2101 0030 00000000 		.4byte	.LFB68
 2102 0034 20000000 		.4byte	.LFE68-.LFB68
 2103 0038 00000000 		.4byte	.LFB69
 2104 003c C4010000 		.4byte	.LFE69-.LFB69
 2105 0040 00000000 		.4byte	0
 2106 0044 00000000 		.4byte	0
 2107              		.section	.debug_ranges,"",%progbits
 2108              	.Ldebug_ranges0:
 2109 0000 00000000 		.4byte	.LFB64
 2110 0004 08000000 		.4byte	.LFE64
 2111 0008 00000000 		.4byte	.LFB65
 2112 000c 08000000 		.4byte	.LFE65
 2113 0010 00000000 		.4byte	.LFB66
 2114 0014 28000000 		.4byte	.LFE66
 2115 0018 00000000 		.4byte	.LFB67
 2116 001c 08000000 		.4byte	.LFE67
 2117 0020 00000000 		.4byte	.LFB68
 2118 0024 20000000 		.4byte	.LFE68
 2119 0028 00000000 		.4byte	.LFB69
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\ccPjNvhl.s 			page 44


 2120 002c C4010000 		.4byte	.LFE69
 2121 0030 00000000 		.4byte	0
 2122 0034 00000000 		.4byte	0
 2123              		.section	.debug_line,"",%progbits
 2124              	.Ldebug_line0:
 2125 0000 A3030000 		.section	.debug_str,"MS",%progbits,1
 2125      0200E602 
 2125      00000201 
 2125      FB0E0D00 
 2125      01010101 
 2126              	.LASF43:
 2127 0000 6D6F746F 		.ascii	"motor2EncoderCounts\000"
 2127      7232456E 
 2127      636F6465 
 2127      72436F75 
 2127      6E747300 
 2128              	.LASF91:
 2129 0014 6D6F746F 		.ascii	"motorDutyCycleUpdate\000"
 2129      72447574 
 2129      79437963 
 2129      6C655570 
 2129      64617465 
 2130              	.LASF73:
 2131 0029 6D6F7665 		.ascii	"moveForwardIndefinitely\000"
 2131      466F7277 
 2131      61726449 
 2131      6E646566 
 2131      696E6974 
 2132              	.LASF17:
 2133 0041 456E636F 		.ascii	"Encoder_Counts_2_IH\000"
 2133      6465725F 
 2133      436F756E 
 2133      74735F32 
 2133      5F494800 
 2134              	.LASF0:
 2135 0055 7369676E 		.ascii	"signed char\000"
 2135      65642063 
 2135      68617200 
 2136              	.LASF47:
 2137 0061 7475726E 		.ascii	"turningLeftFlag\000"
 2137      696E674C 
 2137      65667446 
 2137      6C616700 
 2138              	.LASF2:
 2139 0071 73686F72 		.ascii	"short int\000"
 2139      7420696E 
 2139      7400
 2140              	.LASF62:
 2141 007b 73746F70 		.ascii	"stopMotor2AndUpdate\000"
 2141      4D6F746F 
 2141      7232416E 
 2141      64557064 
 2141      61746500 
 2142              	.LASF32:
 2143 008f 63757272 		.ascii	"currentPosition\000"
 2143      656E7450 
 2143      6F736974 
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\ccPjNvhl.s 			page 45


 2143      696F6E00 
 2144              	.LASF87:
 2145 009f 536F6E69 		.ascii	"Sonic_StartEx\000"
 2145      635F5374 
 2145      61727445 
 2145      7800
 2146              	.LASF45:
 2147 00ad 64726976 		.ascii	"drivingForwardFlag\000"
 2147      696E6746 
 2147      6F727761 
 2147      7264466C 
 2147      616700
 2148              	.LASF103:
 2149 00c0 6D61696E 		.ascii	"main\000"
 2149      00
 2150              	.LASF56:
 2151 00c5 62656769 		.ascii	"beginNavigation\000"
 2151      6E4E6176 
 2151      69676174 
 2151      696F6E00 
 2152              	.LASF42:
 2153 00d5 6D6F746F 		.ascii	"motor1EncoderCounts\000"
 2153      7231456E 
 2153      636F6465 
 2153      72436F75 
 2153      6E747300 
 2154              	.LASF71:
 2155 00e9 436F6C6F 		.ascii	"ColourSensingInitialise\000"
 2155      75725365 
 2155      6E73696E 
 2155      67496E69 
 2155      7469616C 
 2156              	.LASF35:
 2157 0101 64657369 		.ascii	"desiredOrientation\000"
 2157      7265644F 
 2157      7269656E 
 2157      74617469 
 2157      6F6E00
 2158              	.LASF66:
 2159 0114 4D6F746F 		.ascii	"Motor_2_Encoder_Counts_ReadCounter\000"
 2159      725F325F 
 2159      456E636F 
 2159      6465725F 
 2159      436F756E 
 2160              	.LASF19:
 2161 0137 53746172 		.ascii	"StartIH\000"
 2161      74494800 
 2162              	.LASF26:
 2163 013f 7075636B 		.ascii	"puckRackOffsetsFromWest\000"
 2163      5261636B 
 2163      4F666673 
 2163      65747346 
 2163      726F6D57 
 2164              	.LASF92:
 2165 0157 4D6F746F 		.ascii	"Motor_1_Encoder_Counts_Start\000"
 2165      725F315F 
 2165      456E636F 
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\ccPjNvhl.s 			page 46


 2165      6465725F 
 2165      436F756E 
 2166              	.LASF52:
 2167 0174 6D6F7665 		.ascii	"moveBackwardAllowed\000"
 2167      4261636B 
 2167      77617264 
 2167      416C6C6F 
 2167      77656400 
 2168              	.LASF67:
 2169 0188 64726966 		.ascii	"driftCorrect\000"
 2169      74436F72 
 2169      72656374 
 2169      00
 2170              	.LASF86:
 2171 0195 54696D65 		.ascii	"Timer_1_ReadStatusRegister\000"
 2171      725F315F 
 2171      52656164 
 2171      53746174 
 2171      75735265 
 2172              	.LASF98:
 2173 01b0 5261636B 		.ascii	"Rack_Servo_PWM_Start\000"
 2173      5F536572 
 2173      766F5F50 
 2173      574D5F53 
 2173      74617274 
 2174              	.LASF95:
 2175 01c5 456E636F 		.ascii	"Encoder_Counts_1_Interrupt_StartEx\000"
 2175      6465725F 
 2175      436F756E 
 2175      74735F31 
 2175      5F496E74 
 2176              	.LASF97:
 2177 01e8 44726966 		.ascii	"Drift_Check_Interrupt_StartEx\000"
 2177      745F4368 
 2177      65636B5F 
 2177      496E7465 
 2177      72727570 
 2178              	.LASF60:
 2179 0206 63757272 		.ascii	"currentPuckStackSize\000"
 2179      656E7450 
 2179      75636B53 
 2179      7461636B 
 2179      53697A65 
 2180              	.LASF57:
 2181 021b 72756E6E 		.ascii	"running\000"
 2181      696E6700 
 2182              	.LASF40:
 2183 0223 6D6F746F 		.ascii	"motor1Enable\000"
 2183      7231456E 
 2183      61626C65 
 2183      00
 2184              	.LASF99:
 2185 0230 47726970 		.ascii	"Gripper_Servo_PWM_Start\000"
 2185      7065725F 
 2185      53657276 
 2185      6F5F5057 
 2185      4D5F5374 
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\ccPjNvhl.s 			page 47


 2186              	.LASF68:
 2187 0248 756C7472 		.ascii	"ultrasonicInterruptHandler\000"
 2187      61736F6E 
 2187      6963496E 
 2187      74657272 
 2187      75707448 
 2188              	.LASF48:
 2189 0263 7475726E 		.ascii	"turningRightFlag\000"
 2189      696E6752 
 2189      69676874 
 2189      466C6167 
 2189      00
 2190              	.LASF11:
 2191 0274 666C6F61 		.ascii	"float\000"
 2191      7400
 2192              	.LASF77:
 2193 027a 6368616E 		.ascii	"changeHeightToPuck\000"
 2193      67654865 
 2193      69676874 
 2193      546F5075 
 2193      636B00
 2194              	.LASF6:
 2195 028d 6C6F6E67 		.ascii	"long long int\000"
 2195      206C6F6E 
 2195      6720696E 
 2195      7400
 2196              	.LASF96:
 2197 029b 456E636F 		.ascii	"Encoder_Counts_2_Interrupt_StartEx\000"
 2197      6465725F 
 2197      436F756E 
 2197      74735F32 
 2197      5F496E74 
 2198              	.LASF59:
 2199 02be 70617468 		.ascii	"pathPastBlock\000"
 2199      50617374 
 2199      426C6F63 
 2199      6B00
 2200              	.LASF81:
 2201 02cc 4144435F 		.ascii	"ADC_Start\000"
 2201      53746172 
 2201      7400
 2202              	.LASF76:
 2203 02d6 6C6F7765 		.ascii	"lowerAndOpen\000"
 2203      72416E64 
 2203      4F70656E 
 2203      00
 2204              	.LASF5:
 2205 02e3 6C6F6E67 		.ascii	"long unsigned int\000"
 2205      20756E73 
 2205      69676E65 
 2205      6420696E 
 2205      7400
 2206              	.LASF46:
 2207 02f5 64726976 		.ascii	"drivingBackwardFlag\000"
 2207      696E6742 
 2207      61636B77 
 2207      61726446 
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\ccPjNvhl.s 			page 48


 2207      6C616700 
 2208              	.LASF29:
 2209 0309 7075636B 		.ascii	"puckPileLocation\000"
 2209      50696C65 
 2209      4C6F6361 
 2209      74696F6E 
 2209      00
 2210              	.LASF93:
 2211 031a 4D6F746F 		.ascii	"Motor_2_Encoder_Counts_Start\000"
 2211      725F325F 
 2211      456E636F 
 2211      6465725F 
 2211      436F756E 
 2212              	.LASF24:
 2213 0337 63757272 		.ascii	"currentPuckRackScanningIndex\000"
 2213      656E7450 
 2213      75636B52 
 2213      61636B53 
 2213      63616E6E 
 2214              	.LASF64:
 2215 0354 44726966 		.ascii	"Drift_Check_Timer_Stop\000"
 2215      745F4368 
 2215      65636B5F 
 2215      54696D65 
 2215      725F5374 
 2216              	.LASF20:
 2217 036b 63616C69 		.ascii	"calibrate\000"
 2217      62726174 
 2217      6500
 2218              	.LASF54:
 2219 0375 636F6C6F 		.ascii	"colour_flag\000"
 2219      75725F66 
 2219      6C616700 
 2220              	.LASF14:
 2221 0381 6C6F6E67 		.ascii	"long double\000"
 2221      20646F75 
 2221      626C6500 
 2222              	.LASF79:
 2223 038d 55415254 		.ascii	"UART_1_Start\000"
 2223      5F315F53 
 2223      74617274 
 2223      00
 2224              	.LASF1:
 2225 039a 756E7369 		.ascii	"unsigned char\000"
 2225      676E6564 
 2225      20636861 
 2225      7200
 2226              	.LASF83:
 2227 03a8 49444143 		.ascii	"IDAC8_1_SetRange\000"
 2227      385F315F 
 2227      53657452 
 2227      616E6765 
 2227      00
 2228              	.LASF102:
 2229 03b9 5C5C6164 		.ascii	"\\\\ad.monash.edu\\home\\User026\\bamcg3\\Documents"
 2229      2E6D6F6E 
 2229      6173682E 
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\ccPjNvhl.s 			page 49


 2229      6564755C 
 2229      686F6D65 
 2230 03e6 5C476974 		.ascii	"\\GitHub\\ECE3091_Group17\\Group17RobotReal\\Group1"
 2230      4875625C 
 2230      45434533 
 2230      3039315F 
 2230      47726F75 
 2231 0415 37526F62 		.ascii	"7Robot.cydsn\000"
 2231      6F742E63 
 2231      7964736E 
 2231      00
 2232              	.LASF44:
 2233 0422 6D6F7665 		.ascii	"moveNow\000"
 2233      4E6F7700 
 2234              	.LASF28:
 2235 042a 626C6F63 		.ascii	"block_edge_location\000"
 2235      6B5F6564 
 2235      67655F6C 
 2235      6F636174 
 2235      696F6E00 
 2236              	.LASF7:
 2237 043e 6C6F6E67 		.ascii	"long long unsigned int\000"
 2237      206C6F6E 
 2237      6720756E 
 2237      7369676E 
 2237      65642069 
 2238              	.LASF72:
 2239 0455 436F6C6F 		.ascii	"ColourSensingDebug\000"
 2239      75725365 
 2239      6E73696E 
 2239      67446562 
 2239      756700
 2240              	.LASF70:
 2241 0468 636F6E74 		.ascii	"control_led_Write\000"
 2241      726F6C5F 
 2241      6C65645F 
 2241      57726974 
 2241      6500
 2242              	.LASF8:
 2243 047a 756E7369 		.ascii	"unsigned int\000"
 2243      676E6564 
 2243      20696E74 
 2243      00
 2244              	.LASF53:
 2245 0487 69646163 		.ascii	"idac_value\000"
 2245      5F76616C 
 2245      756500
 2246              	.LASF55:
 2247 0492 436F6C6F 		.ascii	"ColourSensingAlgorithm\000"
 2247      75725365 
 2247      6E73696E 
 2247      67416C67 
 2247      6F726974 
 2248              	.LASF82:
 2249 04a9 49444143 		.ascii	"IDAC8_1_Start\000"
 2249      385F315F 
 2249      53746172 
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\ccPjNvhl.s 			page 50


 2249      7400
 2250              	.LASF34:
 2251 04b7 63757272 		.ascii	"currentOrientation\000"
 2251      656E744F 
 2251      7269656E 
 2251      74617469 
 2251      6F6E00
 2252              	.LASF51:
 2253 04ca 6D6F7665 		.ascii	"moveForwardAllowed\000"
 2253      466F7277 
 2253      61726441 
 2253      6C6C6F77 
 2253      656400
 2254              	.LASF3:
 2255 04dd 73686F72 		.ascii	"short unsigned int\000"
 2255      7420756E 
 2255      7369676E 
 2255      65642069 
 2255      6E7400
 2256              	.LASF78:
 2257 04f0 5449415F 		.ascii	"TIA_1_Start\000"
 2257      315F5374 
 2257      61727400 
 2258              	.LASF27:
 2259 04fc 73776565 		.ascii	"sweeping\000"
 2259      70696E67 
 2259      00
 2260              	.LASF13:
 2261 0505 63686172 		.ascii	"char\000"
 2261      00
 2262              	.LASF4:
 2263 050a 6C6F6E67 		.ascii	"long int\000"
 2263      20696E74 
 2263      00
 2264              	.LASF37:
 2265 0513 4D315F42 		.ascii	"M1_BD\000"
 2265      4400
 2266              	.LASF10:
 2267 0519 696E7433 		.ascii	"int32_t\000"
 2267      325F7400 
 2268              	.LASF23:
 2269 0521 64726976 		.ascii	"driveStraightEnable\000"
 2269      65537472 
 2269      61696768 
 2269      74456E61 
 2269      626C6500 
 2270              	.LASF61:
 2271 0535 73746F70 		.ascii	"stopMotor1AndUpdate\000"
 2271      4D6F746F 
 2271      7231416E 
 2271      64557064 
 2271      61746500 
 2272              	.LASF85:
 2273 0549 54696D65 		.ascii	"Timer_1_Start\000"
 2273      725F315F 
 2273      53746172 
 2273      7400
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\ccPjNvhl.s 			page 51


 2274              	.LASF33:
 2275 0557 64657369 		.ascii	"desiredPosition\000"
 2275      72656450 
 2275      6F736974 
 2275      696F6E00 
 2276              	.LASF36:
 2277 0567 4D315F46 		.ascii	"M1_FD\000"
 2277      4400
 2278              	.LASF84:
 2279 056d 49444143 		.ascii	"IDAC8_1_SetValue\000"
 2279      385F315F 
 2279      53657456 
 2279      616C7565 
 2279      00
 2280              	.LASF101:
 2281 057e 6D61696E 		.ascii	"main.c\000"
 2281      2E6300
 2282              	.LASF75:
 2283 0585 6D6F7665 		.ascii	"moveAndAngle\000"
 2283      416E6441 
 2283      6E676C65 
 2283      00
 2284              	.LASF88:
 2285 0592 53746172 		.ascii	"Start_StartEx\000"
 2285      745F5374 
 2285      61727445 
 2285      7800
 2286              	.LASF12:
 2287 05a0 646F7562 		.ascii	"double\000"
 2287      6C6500
 2288              	.LASF80:
 2289 05a7 55415254 		.ascii	"UART_1_PutString\000"
 2289      5F315F50 
 2289      75745374 
 2289      72696E67 
 2289      00
 2290              	.LASF16:
 2291 05b8 456E636F 		.ascii	"Encoder_Counts_1_IH\000"
 2291      6465725F 
 2291      436F756E 
 2291      74735F31 
 2291      5F494800 
 2292              	.LASF31:
 2293 05cc 73746174 		.ascii	"state\000"
 2293      6500
 2294              	.LASF41:
 2295 05d2 6D6F746F 		.ascii	"motor2Enable\000"
 2295      7232456E 
 2295      61626C65 
 2295      00
 2296              	.LASF18:
 2297 05df 44726966 		.ascii	"Drift_Check_IH\000"
 2297      745F4368 
 2297      65636B5F 
 2297      494800
 2298              	.LASF63:
 2299 05ee 44726966 		.ascii	"Drift_Check_Timer_ReadStatusRegister\000"
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\ccPjNvhl.s 			page 52


 2299      745F4368 
 2299      65636B5F 
 2299      54696D65 
 2299      725F5265 
 2300              	.LASF9:
 2301 0613 5F5F696E 		.ascii	"__int32_t\000"
 2301      7433325F 
 2301      7400
 2302              	.LASF25:
 2303 061d 7075636B 		.ascii	"puckRackColours\000"
 2303      5261636B 
 2303      436F6C6F 
 2303      75727300 
 2304              	.LASF49:
 2305 062d 6D6F7665 		.ascii	"moveLeftAllowed\000"
 2305      4C656674 
 2305      416C6C6F 
 2305      77656400 
 2306              	.LASF74:
 2307 063d 7475726E 		.ascii	"turnRight\000"
 2307      52696768 
 2307      7400
 2308              	.LASF15:
 2309 0647 73697A65 		.ascii	"sizetype\000"
 2309      74797065 
 2309      00
 2310              	.LASF21:
 2311 0650 6F757470 		.ascii	"output\000"
 2311      757400
 2312              	.LASF50:
 2313 0657 6D6F7665 		.ascii	"moveRightAllowed\000"
 2313      52696768 
 2313      74416C6C 
 2313      6F776564 
 2313      00
 2314              	.LASF39:
 2315 0668 4D325F42 		.ascii	"M2_BD\000"
 2315      4400
 2316              	.LASF22:
 2317 066e 49544D5F 		.ascii	"ITM_RxBuffer\000"
 2317      52784275 
 2317      66666572 
 2317      00
 2318              	.LASF100:
 2319 067b 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 2319      43313120 
 2319      352E342E 
 2319      31203230 
 2319      31363036 
 2320 06ae 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 2320      20726576 
 2320      6973696F 
 2320      6E203233 
 2320      37373135 
 2321 06e1 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 2321      66756E63 
 2321      74696F6E 
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\ccPjNvhl.s 			page 53


 2321      2D736563 
 2321      74696F6E 
 2322              	.LASF69:
 2323 0709 43794465 		.ascii	"CyDelay\000"
 2323      6C617900 
 2324              	.LASF89:
 2325 0711 4D6F746F 		.ascii	"Motor_1_driver_Start\000"
 2325      725F315F 
 2325      64726976 
 2325      65725F53 
 2325      74617274 
 2326              	.LASF58:
 2327 0726 70617468 		.ascii	"pathToPucks\000"
 2327      546F5075 
 2327      636B7300 
 2328              	.LASF90:
 2329 0732 4D6F746F 		.ascii	"Motor_2_driver_Start\000"
 2329      725F325F 
 2329      64726976 
 2329      65725F53 
 2329      74617274 
 2330              	.LASF38:
 2331 0747 4D325F46 		.ascii	"M2_FD\000"
 2331      4400
 2332              	.LASF30:
 2333 074d 696E6974 		.ascii	"initialisation\000"
 2333      69616C69 
 2333      73617469 
 2333      6F6E00
 2334              	.LASF94:
 2335 075c 44726966 		.ascii	"Drift_Check_Timer_Start\000"
 2335      745F4368 
 2335      65636B5F 
 2335      54696D65 
 2335      725F5374 
 2336              	.LASF65:
 2337 0774 4D6F746F 		.ascii	"Motor_1_Encoder_Counts_ReadCounter\000"
 2337      725F315F 
 2337      456E636F 
 2337      6465725F 
 2337      436F756E 
 2338              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
