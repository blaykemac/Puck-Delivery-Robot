<<<<<<< HEAD
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\ccd2vam3.s 			page 1
=======
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccSUHQYZ.s 			page 1
>>>>>>> 43f63c8a9e8b878c8e2eedec6e73ca6054b7b41d


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.TIH,"ax",%progbits
  20              		.align	2
  21              		.global	TIH
  22              		.thumb
  23              		.thumb_func
  24              		.type	TIH, %function
  25              	TIH:
  26              	.LFB64:
  27              		.file 1 "main.c"
   1:main.c        **** 
   2:main.c        **** /* ========================================
   3:main.c        ****  *
   4:main.c        ****  * Copyright Group 17, 2019
   5:main.c        ****  * All Rights Reserved
   6:main.c        ****  * UNPUBLISHED, LICENSED SOFTWARE.
   7:main.c        ****  *
   8:main.c        ****  * CONFIDENTIAL AND PROPRIETARY INFORMATION
   9:main.c        ****  * WHICH IS THE PROPERTY OF Blayke, Misha, Nidhin.
  10:main.c        ****  *
  11:main.c        ****  * ========================================
  12:main.c        **** */
  13:main.c        **** 
  14:main.c        **** // * PSOC LIBRARY * //
  15:main.c        **** #include "project.h"
  16:main.c        **** 
  17:main.c        **** // * C LIBRARIES * // 
  18:main.c        **** #include <stdlib.h>
  19:main.c        **** #include <stdio.h>
  20:main.c        **** #include <math.h>
  21:main.c        **** 
  22:main.c        **** // * OUR LIBRARIES * //
  23:main.c        **** #include "main.h"
  24:main.c        **** #include "colour.h"
  25:main.c        **** #include "ultrasonic.h" 
  26:main.c        **** #include "servo.h"
  27:main.c        **** #include "mishamotor.h"
  28:main.c        **** #include "customMath.h"
  29:main.c        **** #include "navigation.h"
  30:main.c        **** 
<<<<<<< HEAD
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\ccd2vam3.s 			page 2
=======
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccSUHQYZ.s 			page 2
>>>>>>> 43f63c8a9e8b878c8e2eedec6e73ca6054b7b41d


  31:main.c        **** 
  32:main.c        **** extern char output[32];   
  33:main.c        **** 
  34:main.c        **** // * STATE VARIABLES * //
  35:main.c        **** int state = STATE_SCAN_PLAN;
  36:main.c        **** int running = 1;
  37:main.c        **** int sweeping = 0;
  38:main.c        **** float block_edge_location[4] = {0,0,0,0}; // N E S W edge positions respectively
  39:main.c        **** 
  40:main.c        **** // * PUCK CONSTRUCTION VARIABLES * //
  41:main.c        **** int currentPuckStackSize = 0; // How many pucks are currently on the construction plate
  42:main.c        **** int puckRackColours[5] = {BLANK,BLANK,BLANK,BLANK,BLANK}; // 5 slots in puck rack.
  43:main.c        **** int puckConstructionPlan[3] = {BLANK,BLANK,BLANK};
  44:main.c        **** int currentPuckRackScanningIndex = 0;
  45:main.c        **** int puckRackOffsetsFromWest[5] = {PUCK_RACK_0_WEST_DISTANCE,
  46:main.c        ****                                 PUCK_RACK_1_WEST_DISTANCE,
  47:main.c        ****                                 PUCK_RACK_2_WEST_DISTANCE,
  48:main.c        ****                                 PUCK_RACK_3_WEST_DISTANCE,
  49:main.c        ****                                 PUCK_RACK_4_WEST_DISTANCE };
  50:main.c        **** 
  51:main.c        **** float horizontalPuckGrid = 0;
  52:main.c        **** 
  53:main.c        **** // * NAVIGATION AND POSITION VARIABLES * //
  54:main.c        **** 
  55:main.c        **** int beginNavigation = 0; // Allow us to break out of the intial phase when powered up
  56:main.c        **** 
  57:main.c        **** int pathToPucks; // This will give us a corridor that we should initially take when trying to go to
  58:main.c        **** int pathPastBlock;
  59:main.c        **** 
  60:main.c        **** // These block clearance variables are only true if we have enough room either side of the block to
  61:main.c        **** // And only true for the puck clearance variables if there is enough room to be able to turn at the
  62:main.c        **** short int blockEastClearance = 0;
  63:main.c        **** short int blockWestClearance = 0;
  64:main.c        **** short int puckEastClearance = 0;
  65:main.c        **** short int puckWestClearance = 0;
  66:main.c        **** 
  67:main.c        **** float currentPosition[2] = {0,0};
  68:main.c        **** float desiredPosition[2];
  69:main.c        **** int currentOrientation = 90; //in degrees (convert to radians when needed)- 90 assuming we start fa
  70:main.c        **** int desiredOrientation;
  71:main.c        **** 
  72:main.c        **** short int moveNow = 1; //This is a flag that lets the main program tell the moving functions
  73:main.c        **** //whethe we want the robot to be moving or not. For example, when we need to operate servos
  74:main.c        **** //the main program would set moveNow to FALSE.
  75:main.c        **** 
  76:main.c        **** //The four flags below let the rest of the program know if the robot is trying to drive 
  77:main.c        **** //forward or back, turn left or right. At the start of every motion, turn these flags on
  78:main.c        **** //at the end turn them off.
  79:main.c        **** short int drivingForwardFlag = 0;
  80:main.c        **** short int drivingBackwardFlag = 0;
  81:main.c        **** short int turningLeftFlag = 0;
  82:main.c        **** short int turningRightFlag = 0;
  83:main.c        **** 
  84:main.c        **** //These flags will be used by the main program to allow the robot to move in certain directions
  85:main.c        **** short int moveLeftAllowed;
  86:main.c        **** short int moveRightAllowed;
  87:main.c        **** short int moveForwardAllowed;
<<<<<<< HEAD
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\ccd2vam3.s 			page 3
=======
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccSUHQYZ.s 			page 3
>>>>>>> 43f63c8a9e8b878c8e2eedec6e73ca6054b7b41d


  88:main.c        **** short int moveBackwardAllowed;
  89:main.c        **** 
  90:main.c        **** 
  91:main.c        **** // * COLOUR VARIABLES * //
  92:main.c        **** 
  93:main.c        **** int idac_value = 0;  
  94:main.c        **** int colour_flag = 1;                    // sets which photodiode to use 
  95:main.c        **** int colour_sensing_algorithm = 0;      // Determines which colour sensing algorithm to use:
  96:main.c        ****                                                 // 0: Wall algorithm
  97:main.c        ****                                             // 1: Claw algorithm
  98:main.c        ****                                                 // 2: old algorithm
  99:main.c        **** 
 100:main.c        **** int moving = 0; // Temp to stop while loop from repeated runs of scanning plan code
 101:main.c        **** 
 102:main.c        **** const int PLAN_SCAN_VERTICAL = 10; // Set to ultrasonic distance at the home base 
 103:main.c        **** 
 104:main.c        **** int current_stage = 1;      // There are 3 stages, we start at 1
 105:main.c        **** 
 106:main.c        **** 
 107:main.c        **** // GLOBAL VARIABLE
 108:main.c        **** int distance_returned_global;
 109:main.c        **** 
 110:main.c        **** 
 111:main.c        **** // * INTERRUPT HANDLING * // 
 112:main.c        **** CY_ISR(TIH)                             // Ultrasonic ISR Definition
 113:main.c        **** {
  28              		.loc 1 113 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 08B5     		push	{r3, lr}
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 3, -8
  35              		.cfi_offset 14, -4
 114:main.c        ****     ultrasonicInterruptHandler();
  36              		.loc 1 114 0
  37 0002 FFF7FEFF 		bl	ultrasonicInterruptHandler
  38              	.LVL0:
  39 0006 08BD     		pop	{r3, pc}
  40              		.cfi_endproc
  41              	.LFE64:
  42              		.size	TIH, .-TIH
  43              		.section	.text.StartIH,"ax",%progbits
  44              		.align	2
  45              		.global	StartIH
  46              		.thumb
  47              		.thumb_func
  48              		.type	StartIH, %function
  49              	StartIH:
  50              	.LFB65:
 115:main.c        **** }
 116:main.c        **** 
 117:main.c        **** CY_ISR(StartIH)                             // Ultrasonic ISR Definition
 118:main.c        **** {
  51              		.loc 1 118 0
  52              		.cfi_startproc
  53              		@ args = 0, pretend = 0, frame = 0
<<<<<<< HEAD
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\ccd2vam3.s 			page 4
=======
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccSUHQYZ.s 			page 4
>>>>>>> 43f63c8a9e8b878c8e2eedec6e73ca6054b7b41d


  54              		@ frame_needed = 0, uses_anonymous_args = 0
  55 0000 08B5     		push	{r3, lr}
  56              		.cfi_def_cfa_offset 8
  57              		.cfi_offset 3, -8
  58              		.cfi_offset 14, -4
 119:main.c        ****     CyDelay(100);
  59              		.loc 1 119 0
  60 0002 6420     		movs	r0, #100
  61 0004 FFF7FEFF 		bl	CyDelay
  62              	.LVL1:
 120:main.c        ****     
 121:main.c        ****     beginNavigation = 1;
  63              		.loc 1 121 0
  64 0008 0122     		movs	r2, #1
  65 000a 034B     		ldr	r3, .L5
  66 000c 1A60     		str	r2, [r3]
 122:main.c        ****     colour_flag = 0; 
  67              		.loc 1 122 0
  68 000e 0022     		movs	r2, #0
  69 0010 024B     		ldr	r3, .L5+4
  70 0012 1A60     		str	r2, [r3]
  71 0014 08BD     		pop	{r3, pc}
  72              	.L6:
  73 0016 00BF     		.align	2
  74              	.L5:
  75 0018 00000000 		.word	.LANCHOR0
  76 001c 00000000 		.word	.LANCHOR1
  77              		.cfi_endproc
  78              	.LFE65:
  79              		.size	StartIH, .-StartIH
  80              		.section	.text.main,"ax",%progbits
  81              		.align	2
  82              		.global	main
  83              		.thumb
  84              		.thumb_func
  85              		.type	main, %function
  86              	main:
  87              	.LFB66:
 123:main.c        **** }
 124:main.c        ****  
 125:main.c        **** //Interrupt service routines for dcmotor function
 126:main.c        **** /*
 127:main.c        **** CY_ISR(Encoder_Counts_1_IH){
 128:main.c        ****     stopMotor1AndUpdate();
 129:main.c        **** }
 130:main.c        **** 
 131:main.c        **** CY_ISR(Encoder_Counts_2_IH){
 132:main.c        ****     stopMotor2AndUpdate();
 133:main.c        **** }
 134:main.c        **** 
 135:main.c        **** CY_ISR(Drift_Check_IH){    
 136:main.c        ****     Drift_Check_Timer_ReadStatusRegister(); //Clears the interrupt
 137:main.c        ****     Drift_Check_Timer_Stop(); //Stops the timer
 138:main.c        ****     motor1EncoderCounts = Motor_1_Encoder_Counts_ReadCounter();
 139:main.c        ****     motor2EncoderCounts = Motor_2_Encoder_Counts_ReadCounter();
 140:main.c        ****     driftCorrect(); //Does checking
 141:main.c        **** }
<<<<<<< HEAD
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\ccd2vam3.s 			page 5
=======
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccSUHQYZ.s 			page 5
>>>>>>> 43f63c8a9e8b878c8e2eedec6e73ca6054b7b41d


 142:main.c        **** */
 143:main.c        **** 
 144:main.c        **** int main(void)
 145:main.c        **** {
  88              		.loc 1 145 0
  89              		.cfi_startproc
  90              		@ args = 0, pretend = 0, frame = 0
  91              		@ frame_needed = 0, uses_anonymous_args = 0
  92 0000 70B5     		push	{r4, r5, r6, lr}
  93              		.cfi_def_cfa_offset 16
  94              		.cfi_offset 4, -16
  95              		.cfi_offset 5, -12
  96              		.cfi_offset 6, -8
  97              		.cfi_offset 14, -4
  98 0002 82B0     		sub	sp, sp, #8
  99              		.cfi_def_cfa_offset 24
 146:main.c        ****     CyGlobalIntEnable; /* Enable global interrupts. */
 100              		.loc 1 146 0
 101              		.syntax unified
 102              	@ 146 "main.c" 1
 103 0004 62B6     		CPSIE   i
 104              	@ 0 "" 2
 147:main.c        **** 
 148:main.c        ****     
 149:main.c        ****     TIA_1_Start();
 105              		.loc 1 149 0
 106              		.thumb
 107              		.syntax unified
 108 0006 FFF7FEFF 		bl	TIA_1_Start
 109              	.LVL2:
 150:main.c        ****     UART_1_Start();
 110              		.loc 1 150 0
 111 000a FFF7FEFF 		bl	UART_1_Start
 112              	.LVL3:
 151:main.c        ****     UART_1_PutString("UART commencing... \n");
 113              		.loc 1 151 0
<<<<<<< HEAD
 114 000e 6148     		ldr	r0, .L23
=======
 114 000e A648     		ldr	r0, .L24
>>>>>>> 43f63c8a9e8b878c8e2eedec6e73ca6054b7b41d
 115 0010 FFF7FEFF 		bl	UART_1_PutString
 116              	.LVL4:
 152:main.c        ****     ADC_Start();
 117              		.loc 1 152 0
 118 0014 FFF7FEFF 		bl	ADC_Start
 119              	.LVL5:
 153:main.c        ****     IDAC8_1_Start();
 120              		.loc 1 153 0
 121 0018 FFF7FEFF 		bl	IDAC8_1_Start
 122              	.LVL6:
 154:main.c        ****     
 155:main.c        ****     // DEBUGGING:
 156:main.c        ****     int colour_calibration = FALSE;             // Do we want to calibrate the sensor? 
 157:main.c        ****     int servo_testing = FALSE;                  // Do the servos need to be tested?      
 158:main.c        ****     int motor_testing = FALSE;
 159:main.c        ****     int ultrasonic_testing = FALSE;  
 160:main.c        ****     
 161:main.c        ****     
 162:main.c        ****     // IDAC initialisation: 
 163:main.c        ****     IDAC8_1_SetRange(IDAC8_1_RANGE_32uA);       // Sets the range between 0 and 32uA
<<<<<<< HEAD
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\ccd2vam3.s 			page 6
=======
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccSUHQYZ.s 			page 6
>>>>>>> 43f63c8a9e8b878c8e2eedec6e73ca6054b7b41d


 123              		.loc 1 163 0
 124 001c 0020     		movs	r0, #0
 125 001e FFF7FEFF 		bl	IDAC8_1_SetRange
 126              	.LVL7:
 164:main.c        ****     IDAC8_1_SetValue(idac_value);               // set a value between 0 and 255
 127              		.loc 1 164 0
<<<<<<< HEAD
 128 0022 5D4D     		ldr	r5, .L23+4
=======
 128 0022 A24D     		ldr	r5, .L24+4
>>>>>>> 43f63c8a9e8b878c8e2eedec6e73ca6054b7b41d
 129 0024 2879     		ldrb	r0, [r5, #4]	@ zero_extendqisi2
 130 0026 FFF7FEFF 		bl	IDAC8_1_SetValue
 131              	.LVL8:
 165:main.c        ****     
 166:main.c        ****     // Colour Sensing Initialisation & Debugging:
 167:main.c        ****     colour_sensing_algorithm = 0;
 132              		.loc 1 167 0
 133 002a 0024     		movs	r4, #0
 134 002c AC60     		str	r4, [r5, #8]
 168:main.c        ****     control_photodiode_Write(colour_sensing_algorithm);            // controls which photodiode is 
 135              		.loc 1 168 0
 136 002e 2046     		mov	r0, r4
 137 0030 FFF7FEFF 		bl	control_photodiode_Write
 138              	.LVL9:
 169:main.c        ****                                                 // 0: wall
 170:main.c        ****                                                 // 1: claw
 171:main.c        ****     control_led_Write(1);   CyDelay(500);  // Ensures all the RGBs are working
 139              		.loc 1 171 0
 140 0034 0120     		movs	r0, #1
 141 0036 FFF7FEFF 		bl	control_led_Write
 142              	.LVL10:
 143 003a 4FF4FA70 		mov	r0, #500
 144 003e FFF7FEFF 		bl	CyDelay
 145              	.LVL11:
 172:main.c        ****     control_led_Write(2);   CyDelay(500);
 146              		.loc 1 172 0
 147 0042 0220     		movs	r0, #2
 148 0044 FFF7FEFF 		bl	control_led_Write
 149              	.LVL12:
 150 0048 4FF4FA70 		mov	r0, #500
 151 004c FFF7FEFF 		bl	CyDelay
 152              	.LVL13:
 173:main.c        ****     control_led_Write(3);   CyDelay(500);
 153              		.loc 1 173 0
 154 0050 0320     		movs	r0, #3
 155 0052 FFF7FEFF 		bl	control_led_Write
 156              	.LVL14:
 157 0056 4FF4FA70 		mov	r0, #500
 158 005a FFF7FEFF 		bl	CyDelay
 159              	.LVL15:
 174:main.c        ****     control_led_Write(0);   CyDelay(500);
 160              		.loc 1 174 0
 161 005e 2046     		mov	r0, r4
 162 0060 FFF7FEFF 		bl	control_led_Write
 163              	.LVL16:
 164 0064 4FF4FA70 		mov	r0, #500
 165 0068 FFF7FEFF 		bl	CyDelay
 166              	.LVL17:
 175:main.c        ****     colourSensingInitialise();                  // Initialises the colour sensor
 167              		.loc 1 175 0
<<<<<<< HEAD
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\ccd2vam3.s 			page 7
=======
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccSUHQYZ.s 			page 7
>>>>>>> 43f63c8a9e8b878c8e2eedec6e73ca6054b7b41d


 168 006c FFF7FEFF 		bl	colourSensingInitialise
 169              	.LVL18:
 176:main.c        ****     
 177:main.c        **** 
 178:main.c        ****     //Servos for the arm instatination
 179:main.c        ****     Rack_Servo_PWM_Start();
 170              		.loc 1 179 0
 171 0070 FFF7FEFF 		bl	Rack_Servo_PWM_Start
 172              	.LVL19:
 180:main.c        ****     Rack_Servo_PWM_WriteCompare(1000);          // BRINGs rack to highest position, so not to mess 
 173              		.loc 1 180 0
 174 0074 4FF47A70 		mov	r0, #1000
 175 0078 FFF7FEFF 		bl	Rack_Servo_PWM_WriteCompare
 176              	.LVL20:
 181:main.c        ****     CyDelay(500);
 177              		.loc 1 181 0
 178 007c 4FF4FA70 		mov	r0, #500
 179 0080 FFF7FEFF 		bl	CyDelay
 180              	.LVL21:
 182:main.c        ****     Rack_Servo_PWM_Sleep();
 181              		.loc 1 182 0
 182 0084 FFF7FEFF 		bl	Rack_Servo_PWM_Sleep
 183              	.LVL22:
 183:main.c        ****     
 184:main.c        ****     Gripper_Servo_PWM_Start();
 184              		.loc 1 184 0
 185 0088 FFF7FEFF 		bl	Gripper_Servo_PWM_Start
 186              	.LVL23:
 185:main.c        ****     Gripper_Servo_PWM_WriteCompare(1120);       //This is the open gripper position
 187              		.loc 1 185 0
 188 008c 4FF48C60 		mov	r0, #1120
 189 0090 FFF7FEFF 		bl	Gripper_Servo_PWM_WriteCompare
 190              	.LVL24:
 186:main.c        ****     CyDelay(500);
 191              		.loc 1 186 0
 192 0094 4FF4FA70 		mov	r0, #500
 193 0098 FFF7FEFF 		bl	CyDelay
 194              	.LVL25:
 187:main.c        ****     Gripper_Servo_PWM_Sleep();
 195              		.loc 1 187 0
 196 009c FFF7FEFF 		bl	Gripper_Servo_PWM_Sleep
 197              	.LVL26:
 188:main.c        ****     
 189:main.c        ****     // Misha Motors Initialisation:
 190:main.c        ****     Motor_Left_Driver_Start();
 198              		.loc 1 190 0
 199 00a0 FFF7FEFF 		bl	Motor_Left_Driver_Start
 200              	.LVL27:
 191:main.c        ****     Motor_Left_Driver_Sleep();                  // Puts motor to sleep
 201              		.loc 1 191 0
 202 00a4 FFF7FEFF 		bl	Motor_Left_Driver_Sleep
 203              	.LVL28:
 192:main.c        ****     Motor_Right_Driver_Start();
 204              		.loc 1 192 0
 205 00a8 FFF7FEFF 		bl	Motor_Right_Driver_Start
 206              	.LVL29:
 193:main.c        ****     Motor_Right_Driver_Sleep();                 // Puts motor to sleep
<<<<<<< HEAD
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\ccd2vam3.s 			page 8
=======
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccSUHQYZ.s 			page 8
>>>>>>> 43f63c8a9e8b878c8e2eedec6e73ca6054b7b41d


 207              		.loc 1 193 0
 208 00ac FFF7FEFF 		bl	Motor_Right_Driver_Sleep
 209              	.LVL30:
 194:main.c        ****     
 195:main.c        ****     Motor_Left_Decoder_Start();
 210              		.loc 1 195 0
 211 00b0 FFF7FEFF 		bl	Motor_Left_Decoder_Start
 212              	.LVL31:
 196:main.c        ****     Motor_Right_Decoder_Start();
 213              		.loc 1 196 0
 214 00b4 FFF7FEFF 		bl	Motor_Right_Decoder_Start
 215              	.LVL32:
<<<<<<< HEAD
 197:main.c        ****    
 198:main.c        ****     // Timer and ISR instantiation
 199:main.c        ****     Timer_1_Start();
 216              		.loc 1 199 0
 217 00b8 FFF7FEFF 		bl	Timer_1_Start
 218              	.LVL33:
 200:main.c        ****     Timer_1_ReadStatusRegister();
 219              		.loc 1 200 0
 220 00bc FFF7FEFF 		bl	Timer_1_ReadStatusRegister
 221              	.LVL34:
 201:main.c        ****     Sonic_StartEx(TIH);
 222              		.loc 1 201 0
 223 00c0 3648     		ldr	r0, .L23+8
 224 00c2 FFF7FEFF 		bl	Sonic_StartEx
 225              	.LVL35:
 202:main.c        ****     Start_StartEx(StartIH);
 226              		.loc 1 202 0
 227 00c6 3648     		ldr	r0, .L23+12
 228 00c8 FFF7FEFF 		bl	Start_StartEx
 229              	.LVL36:
 203:main.c        ****     beginNavigation = 0;
 230              		.loc 1 203 0
 231 00cc 2C60     		str	r4, [r5]
 204:main.c        ****     
 205:main.c        ****     // Ultrasonic Initialisation & Calibration:
 206:main.c        ****     // The ultrasonics take several test measurements to ensure they are working
 207:main.c        ****         
 208:main.c        ****     UART_1_PutString("Ultrasonic Calibration tests: \n");
 232              		.loc 1 208 0
 233 00ce 3548     		ldr	r0, .L23+16
 234 00d0 FFF7FEFF 		bl	UART_1_PutString
 235              	.LVL37:
 236              	.LBB2:
 209:main.c        ****     for(int j = 0; j < 3; j++) 
 237              		.loc 1 209 0
 238 00d4 2546     		mov	r5, r4
 239 00d6 19E0     		b	.L8
 240              	.LVL38:
 241              	.L9:
 242              	.LBB3:
 210:main.c        ****     {
 211:main.c        ****         for (int i = 0; i < 5; i++)
 212:main.c        ****         {
 213:main.c        ****             distanceSensor(i);
 243              		.loc 1 213 0 discriminator 3
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\ccd2vam3.s 			page 9


 244 00d8 2046     		mov	r0, r4
 245 00da FFF7FEFF 		bl	distanceSensor
 246              	.LVL39:
 214:main.c        ****             CyDelay(100);
 247              		.loc 1 214 0 discriminator 3
 248 00de 6420     		movs	r0, #100
 249 00e0 FFF7FEFF 		bl	CyDelay
 250              	.LVL40:
 215:main.c        ****             sprintf(output, "%d \t", ultrasonic_distances_mm[i]);
 251              		.loc 1 215 0 discriminator 3
 252 00e4 304E     		ldr	r6, .L23+20
 253 00e6 314B     		ldr	r3, .L23+24
 254 00e8 53F82420 		ldr	r2, [r3, r4, lsl #2]
 255 00ec 3049     		ldr	r1, .L23+28
 256 00ee 3046     		mov	r0, r6
 257 00f0 FFF7FEFF 		bl	sprintf
 258              	.LVL41:
 216:main.c        ****             UART_1_PutString(output);
 259              		.loc 1 216 0 discriminator 3
 260 00f4 3046     		mov	r0, r6
 261 00f6 FFF7FEFF 		bl	UART_1_PutString
 262              	.LVL42:
 211:main.c        ****         {
 263              		.loc 1 211 0 discriminator 3
 264 00fa 0134     		adds	r4, r4, #1
 265              	.LVL43:
 266 00fc 00E0     		b	.L10
 267              	.LVL44:
 268              	.L20:
 269              	.LBE3:
 270 00fe 0024     		movs	r4, #0
 271              	.L10:
 272              	.LVL45:
 273              	.LBB4:
 211:main.c        ****         {
 274              		.loc 1 211 0 is_stmt 0 discriminator 1
 275 0100 042C     		cmp	r4, #4
 276 0102 E9DD     		ble	.L9
 277              	.LBE4:
 217:main.c        ****         }
 218:main.c        ****         UART_1_PutString("\n\n");
 278              		.loc 1 218 0 is_stmt 1 discriminator 2
 279 0104 2B48     		ldr	r0, .L23+32
 280 0106 FFF7FEFF 		bl	UART_1_PutString
 281              	.LVL46:
 209:main.c        ****     {
 282              		.loc 1 209 0 discriminator 2
 283 010a 0135     		adds	r5, r5, #1
 284              	.LVL47:
 285              	.L8:
 209:main.c        ****     {
 286              		.loc 1 209 0 is_stmt 0 discriminator 1
 287 010c 022D     		cmp	r5, #2
 288 010e F6DD     		ble	.L20
 289              	.L18:
 290              	.LBE2:
 219:main.c        ****     }
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\ccd2vam3.s 			page 10


 220:main.c        ****     
 221:main.c        ****     /*  OLD CODE FROM NIDHIN:
 222:main.c        ****     //Initialising DC motors
 223:main.c        ****     Motor_1_driver_Start();
 224:main.c        ****     Motor_2_driver_Start();
 225:main.c        ****     motorDutyCycleUpdate(0,0,0,0);//Have the motors stand still
 226:main.c        ****     
 227:main.c        ****     
 228:main.c        ****     //Initialising counters
 229:main.c        ****     Motor_1_Encoder_Counts_Start();
 230:main.c        ****     Motor_2_Encoder_Counts_Start();
 231:main.c        ****     
 232:main.c        ****     //Initialising timers
 233:main.c        ****     Drift_Check_Timer_Start();
 234:main.c        ****     
 235:main.c        ****     //Starts and enables the interrupts for the motor encoder counts
 236:main.c        ****     Encoder_Counts_1_Interrupt_StartEx(Encoder_Counts_1_IH); 
 237:main.c        ****     Encoder_Counts_2_Interrupt_StartEx(Encoder_Counts_2_IH);
 238:main.c        ****     Drift_Check_Interrupt_StartEx(Drift_Check_IH);		
 239:main.c        ****     */
 240:main.c        **** 
 241:main.c        ****     // Main Loop for States
 242:main.c        ****         
 243:main.c        ****     for(;;)
 244:main.c        ****     {   
 245:main.c        ****         
 246:main.c        **** 
 247:main.c        **** 
 248:main.c        ****         // Start button is pressed so quit sensing
 249:main.c        **** 
 250:main.c        ****         /*
 251:main.c        ****         while (beginNavigation == 0) {
 252:main.c        ****             distanceCheck();           
 253:main.c        ****             UART_1_PutString("\n");
 254:main.c        ****             CyDelay(1000); // Check distance once a second.
 255:main.c        ****                 
 256:main.c        ****         }
 257:main.c        ****         */
 258:main.c        ****         
 259:main.c        ****         
 260:main.c        ****         // Enter picking up puck state for the moment FOR TESTING
 261:main.c        ****         //colour_sensing_algorithm = 1;
 262:main.c        ****         //control_photodiode_Write(1);
 263:main.c        ****         //state = STATE_FIND_REQUIRED_PUCK;
 264:main.c        ****         
 265:main.c        ****         // Colour Calibration: 
 266:main.c        ****         if (colour_calibration)
 267:main.c        ****         {
 268:main.c        ****             int lock = FALSE;   
 269:main.c        ****             do 
 270:main.c        ****                 {   
 271:main.c        ****                     if (lock == FALSE) 
 272:main.c        ****                     {
 273:main.c        ****                         
 274:main.c        ****                         control_photodiode_Write(1);    // Claw
 275:main.c        ****                         changeHeightToPuck(0);
 276:main.c        **** 
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\ccd2vam3.s 			page 11


 277:main.c        ****                         UART_1_PutString("Count \t BLANK \t RED \t GREEN \t BLUE \t \n");
 278:main.c        ****                         for (int i = 0; i < 50; i++)
 279:main.c        ****                         {
 280:main.c        ****                         sprintf(output, "%d \t", i);
 281:main.c        ****                         UART_1_PutString(output);
 282:main.c        ****                         colourSensingCalibration(); 
 283:main.c        ****                         UART_1_PutString("\n");
 284:main.c        ****                         }         
 285:main.c        ****                         lock = TRUE;    
 286:main.c        ****                     }
 287:main.c        ****             } while (lock == TRUE);    
 288:main.c        ****         }
 289:main.c        ****         
 290:main.c        ****         // Servo Testing:
 291:main.c        ****         if (servo_testing) 
 292:main.c        ****         {
 293:main.c        ****             int lock = FALSE;
 294:main.c        ****             do 
 295:main.c        ****                 {   
 296:main.c        ****                     if (lock == FALSE) 
 297:main.c        ****                     {
 298:main.c        ****                         UART_1_PutString("Servo Testing: ");
 299:main.c        ****                         
 300:main.c        ****                         armMoving();
 301:main.c        ****                         
 302:main.c        ****                         
 303:main.c        ****                         for(int i = 0; i < 4; i++)
 304:main.c        ****                         {
 305:main.c        ****                             changeHeightToPuck(i);
 306:main.c        ****                             CyDelay(1000);
 307:main.c        ****                         }
 308:main.c        **** 
 309:main.c        ****                         lock = TRUE;    
 310:main.c        ****                     }
 311:main.c        ****             } while (lock == TRUE);    
 312:main.c        ****         }    
 313:main.c        ****                 
 314:main.c        ****         // Motor Testing: 
 315:main.c        ****         if (motor_testing)
 316:main.c        ****         {
 317:main.c        ****             int lock = FALSE;
 318:main.c        ****             do 
 319:main.c        ****                 {   
 320:main.c        ****                     if (lock == FALSE) 
 321:main.c        ****                     {
 322:main.c        ****                         UART_1_PutString("Motor Testing: \n");
 323:main.c        **** 
 324:main.c        ****                         //mishaMoveForward();
 325:main.c        ****                         //mishaMoveBackward();
 326:main.c        ****                         //mishaMoveDynamic(-300);
 327:main.c        ****                         
 328:main.c        ****                         mishaSwivel(-180, SPEED);
 329:main.c        ****                         
 330:main.c        ****                         lock = TRUE;    
 331:main.c        ****                     }
 332:main.c        ****             } while (lock == TRUE);    
 333:main.c        ****         }    
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\ccd2vam3.s 			page 12


 334:main.c        ****         
 335:main.c        ****         // Ultrasonic Testing:
 336:main.c        ****         
 337:main.c        ****         if (ultrasonic_testing) 
 338:main.c        ****         {
 339:main.c        ****             int lock = FALSE;
 340:main.c        ****             do 
 341:main.c        ****                 {   
 342:main.c        ****                     if (lock == FALSE) 
 343:main.c        ****                     {
 344:main.c        ****                         UART_1_PutString("Ultrasonic Testing: \n");
 345:main.c        ****                         
 346:main.c        ****                         //armMoving();
 347:main.c        ****                         //straightAdjust();
 348:main.c        ****                         
 349:main.c        ****                         int dick = 2;
 350:main.c        ****                         while(0) {
 351:main.c        ****                             distanceSensor(dick);
 352:main.c        ****                             CyDelay(500);
 353:main.c        ****                             sprintf(output, "%d \t %d \t %d \t %d \t %d \n", ultrasonic_distances_m
 354:main.c        ****                                                      ultrasonic_distances_mm[1],
 355:main.c        ****                                                      ultrasonic_distances_mm[2],
 356:main.c        ****                                                         ultrasonic_distances_mm[3],
 357:main.c        ****                                                         ultrasonic_distances_mm[4]);
 358:main.c        ****                             UART_1_PutString(output);
 359:main.c        ****                         }
 360:main.c        ****                         // 0 gave front left    // front left
 361:main.c        ****                         // 1 gave front right   // front right 
 362:main.c        ****                         // 2 gave back sensor   // side left now??? 
 363:main.c        ****                         // 3 gave side right    // side right 
 364:main.c        ****                         // 4 gave back sensor   // back sensor
 365:main.c        ****                         
 366:main.c        ****                         while(0) {
 367:main.c        ****                             for (int i = 0; i < 5; i++)
 368:main.c        ****                             {
 369:main.c        ****                                 distanceSensor(i);
 370:main.c        ****                                 CyDelay(100);
 371:main.c        ****                                 sprintf(output, "%d \t", ultrasonic_distances_mm[i]);
 372:main.c        ****                                 UART_1_PutString(output);
 373:main.c        ****                             }
 374:main.c        ****                             UART_1_PutString("\n");
 375:main.c        ****                         }
 376:main.c        ****                         
 377:main.c        ****                         
 378:main.c        ****                         
 379:main.c        ****                         
 380:main.c        ****                         // TEST FIRING
 381:main.c        ****                         for (int i = 0; i < 5; i++)
 382:main.c        ****                             {
 383:main.c        ****                                 distanceSensor(i);
 384:main.c        ****                                 CyDelay(100);
 385:main.c        ****                                 sprintf(output, "%d \t", ultrasonic_distances_mm[i]);
 386:main.c        ****                                 UART_1_PutString(output);
 387:main.c        ****                             }
 388:main.c        ****                         UART_1_PutString("\n");
 389:main.c        ****                         
 390:main.c        ****                         
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\ccd2vam3.s 			page 13


 391:main.c        ****                         moveUntil(150, FORWARD, LESS_THAN, FRONT_LEFT, SPEED);              // shou
 392:main.c        ****                         straightAdjust();
 393:main.c        ****                         
 394:main.c        ****                         
 395:main.c        ****                         /*
 396:main.c        ****                         for (int i = 0; i < 5; i++)
 397:main.c        ****                         {
 398:main.c        ****                             sprintf(output, "%d: \t", i);       
 399:main.c        ****                             UART_1_PutString(output);
 400:main.c        ****                         }
 401:main.c        ****                         UART_1_PutString("\n");   
 402:main.c        ****                         
 403:main.c        ****                         
 404:main.c        ****                         for (int i = 0; i < 50; i++) {
 405:main.c        ****                         distanceCheck();
 406:main.c        ****                         CyDelay(200);
 407:main.c        ****                         }
 408:main.c        ****                         
 409:main.c        ****                         */
 410:main.c        ****                         
 411:main.c        ****                         //straightAdjust();
 412:main.c        ****                         
 413:main.c        ****                         
 414:main.c        ****                         lock = TRUE;    
 415:main.c        ****                     }
 416:main.c        ****             } while (lock == TRUE);    
 417:main.c        ****         }    
 418:main.c        **** 
 419:main.c        ****         // Manual state set for testing
 420:main.c        ****         state = STATE_DEPOSIT_PUCK;
 291              		.loc 1 420 0 is_stmt 1
 292 0110 294A     		ldr	r2, .L23+36
 293 0112 0523     		movs	r3, #5
 294 0114 5360     		str	r3, [r2, #4]
 421:main.c        ****         currentPuckStackSize = 2;
 295              		.loc 1 421 0
 296 0116 0220     		movs	r0, #2
 297 0118 1F49     		ldr	r1, .L23+4
 298 011a C860     		str	r0, [r1, #12]
 422:main.c        ****         current_stage = 3;
 299              		.loc 1 422 0
 300 011c 0321     		movs	r1, #3
 301 011e 9160     		str	r1, [r2, #8]
 423:main.c        ****          
 424:main.c        ****         if (state == STATE_SCAN_PLAN) {              // colour sensing, while switch has not been p
 425:main.c        ****             
 426:main.c        ****             while(0){
 427:main.c        ****                 moveUntil(400, FORWARD, LESS_THAN, FRONT_LEFT, SPEED);
 428:main.c        ****                 mishaMoveDynamic(-450, SPEED);
 429:main.c        ****                 CyDelay(500);   
 430:main.c        ****                 colourSensingInitialise();      // Initialises wall colour sensor against the black
 431:main.c        ****                 CyDelay(500);
 432:main.c        ****                 mishaMoveDynamic(170, SPEED);
 433:main.c        ****                 CyDelay(500);
 434:main.c        ****                 
 435:main.c        ****                 for (int i = 0; i < 5; i++) {                       // scan each of the pucks 
 436:main.c        ****                     puckRackColours[i] = colourSensingOutput();
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\ccd2vam3.s 			page 14


 437:main.c        ****                     CyDelay(500);
 438:main.c        ****                     mishaMoveDynamic(61, SPEED);
 439:main.c        ****                     CyDelay(500);
 440:main.c        ****                 }
 441:main.c        ****             
 442:main.c        ****             }
 443:main.c        **** 
 444:main.c        ****             while(1) {}
 445:main.c        **** 
 446:main.c        ****             while(1){
 447:main.c        ****             
 448:main.c        ****             int move = 400;
 449:main.c        ****             mishaMoveDynamic(move, SPEED);
 450:main.c        ****             mishaMoveDynamic(-move, SPEED);
 451:main.c        ****             
 452:main.c        ****             mishaMoveDynamic(move, SPEED);
 453:main.c        ****             straightAdjust();
 454:main.c        ****             mishaMoveDynamic(-move, SPEED);
 455:main.c        ****                 
 456:main.c        ****             }
 457:main.c        ****             
 458:main.c        ****             
 459:main.c        ****             straightAdjust();
 460:main.c        ****             moveUntil(-100, BACKWARD, LESS_THAN, BACK, SPEED);
 461:main.c        ****             colourSensingInitialise();      // Initialises wall colour sensor against the black wal
 462:main.c        ****                         
 463:main.c        ****             for (int i = 0; i < 5; i++) { 
 464:main.c        ****                 // scan each of the pucks 
 465:main.c        ****                 //moveUntil(puckRackOffsetsFromWest[i]);
 466:main.c        ****                 puckRackColours[i] = colourSensingOutput();
 467:main.c        ****                 CyDelay(500);
 468:main.c        **** 
 469:main.c        ****             //straightAdjust();
 470:main.c        ****             }
 471:main.c        ****                        
 472:main.c        ****             UART_1_PutString("Found Colours: \n");
 473:main.c        ****             for (int i = 0; i < 5; i++) 
 474:main.c        ****             {
 475:main.c        ****                 sprintf(output, "%i \n", puckRackColours[i]);    // updates UART showing values of 
 476:main.c        ****                 UART_1_PutString(output);
 477:main.c        ****             }
 478:main.c        ****             
 479:main.c        ****             
 480:main.c        ****             control_photodiode_Write(1);    // changes to claw photodiode
 481:main.c        ****             colour_sensing_algorithm = 1;   // changes it to claw algorithm
 482:main.c        ****                        
 483:main.c        ****             //while(1) {}
 484:main.c        ****             
 485:main.c        ****             // THEN WE FILTER THE NO PUCK VALUES:
 486:main.c        ****             int puckConstructionPlanIndex = 0; // Will be used to iterate through the 3 puck colour
 487:main.c        ****             
 488:main.c        ****             // Iterate over all 5 rack slots and place the 3 colours into puckConstructionPlan.
 489:main.c        ****             for (int puckRackIndex = 0; puckRackIndex < 5; puckRackIndex++){
 490:main.c        ****                 if (puckRackColours[puckRackIndex] != BLANK && puckConstructionPlanIndex != 3){
 491:main.c        ****                     puckConstructionPlan[puckConstructionPlanIndex] = puckRackColours[puckRackIndex
 492:main.c        ****                     puckConstructionPlanIndex++;
 493:main.c        ****                 }
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\ccd2vam3.s 			page 15


 494:main.c        ****             }
 495:main.c        ****                     
 496:main.c        ****             // MOVE into the next state: 
 497:main.c        ****             state = STATE_LOCATE_BLOCK_AND_PUCKS;
 498:main.c        ****             
 499:main.c        ****             /*
 500:main.c        ****             if (!moving){
 501:main.c        ****                 moving = 1;
 502:main.c        ****             if (initialisation){moveBackwardIndefinitely(); initialisation = 0;}
 503:main.c        ****             else {moveForwardIndefinitely();}        
 504:main.c        **** 
 505:main.c        ****             moveAndAngle(SCAN_INITIALISE_HORIZONTAL,PLAN_SCAN_VERTICAL,WEST_ANGLE); // Move beyond 
 506:main.c        ****             
 507:main.c        ****             // Read the black wall
 508:main.c        ****             
 509:main.c        ****             for (currentPuckRackScanningIndex = 0; currentPuckRackScanningIndex <= 4; currentPuckRa
 510:main.c        ****                 moveAndAngle(puckRackOffsetsFromWest[currentPuckRackScanningIndex],PLAN_SCAN_VERTIC
 511:main.c        ****                 puckRackColours[currentPuckRackScanningIndex] = colourSensingOutput();
 512:main.c        ****             }
 513:main.c        ****    
 514:main.c        ****             */
 515:main.c        ****         }
 516:main.c        **** 
 517:main.c        ****     	if (state == STATE_LOCATE_BLOCK_AND_PUCKS){
 518:main.c        ****             
 519:main.c        ****             
 520:main.c        ****             // move away from home base 
 521:main.c        ****             mishaSwivel(-45, SPEED);  
 522:main.c        ****             mishaMoveDynamic(-150, SPEED);
 523:main.c        ****             mishaSwivel(45, SPEED);
 524:main.c        ****             mishaMoveDynamic(200, SPEED);
 525:main.c        ****             mishaSwivel(90, SPEED);
 526:main.c        ****             mishaMoveDynamic(500, SPEED);
 527:main.c        ****             
 528:main.c        ****             
 529:main.c        ****             // Move until construction zone            
 530:main.c        ****             moveUntil(100, FORWARD, LESS_THAN, FRONT_LEFT, SPEED);
 531:main.c        ****             control_led_Write(1);
 532:main.c        ****             CyDelay(1000);
 533:main.c        ****             control_led_Write(0);
 534:main.c        ****             CyDelay(500);
 535:main.c        ****             //straightAdjust();
 536:main.c        ****             
 537:main.c        ****             // SCAN FOR BLOCKS:
 538:main.c        ****             
 539:main.c        ****             //distanceSensor(SIDE_LEFT);  // takes how far we are away from home base wall
 540:main.c        ****             //int block_check = ARENA_WIDTH - BLOCK_ZONE_SOUTH - WIDTH_SENSOR_TO_SENSOR - ultrasoni
 541:main.c        ****                 // TAKES our distance from north wall, 
 542:main.c        ****                 // takes distance from arena, takes away 
 543:main.c        ****                 // minus 50 is a tolerance
 544:main.c        ****             
 545:main.c        ****             int block_check = 500;
 546:main.c        ****             
 547:main.c        ****             while(0) {
 548:main.c        ****             distanceSensor(SIDE_RIGHT);
 549:main.c        ****             CyDelay(SENSOR_DELAY_MIN);
 550:main.c        ****             sprintf(output, "%d \t", ultrasonic_distances_mm[SIDE_RIGHT]);
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\ccd2vam3.s 			page 16


 551:main.c        ****             UART_1_PutString(output);
 552:main.c        ****             }
 553:main.c        **** 
 554:main.c        ****             
 555:main.c        ****             moveUntil(block_check, LESS_THAN, BACKWARD, SIDE_RIGHT, SPEED);   // this will move bac
 556:main.c        ****                         
 557:main.c        ****             CyDelay(2000);
 558:main.c        ****             
 559:main.c        ****             mishaMoveDynamic(-200, SPEED);
 560:main.c        ****             
 561:main.c        ****             distanceSensor(SIDE_RIGHT);
 562:main.c        ****             CyDelay(50);
 563:main.c        ****             
 564:main.c        ****             int check = ultrasonic_distances_mm[SIDE_RIGHT];
 565:main.c        ****             if (check > 500) {                                  // GREEN if no block there
 566:main.c        ****                 control_led_Write(2);
 567:main.c        ****                 CyDelay(1000);
 568:main.c        ****                 control_led_Write(0);
 569:main.c        ****                 CyDelay(500);
 570:main.c        ****                 
 571:main.c        ****             }
 572:main.c        ****             else {                                              // RED if block there 
 573:main.c        ****                 control_led_Write(1);
 574:main.c        ****                 CyDelay(1000);
 575:main.c        ****                 control_led_Write(0);
 576:main.c        ****                 CyDelay(500);
 577:main.c        ****             }
 578:main.c        **** 
 579:main.c        ****             moveUntil(100, BACKWARD, LESS_THAN, BACK, SPEED);
 580:main.c        ****             mishaSwivel(90, SPEED);
 581:main.c        ****             moveUntil(300, FORWARD, LESS_THAN, FRONT_LEFT, SPEED);
 582:main.c        **** 
 583:main.c        ****             
 584:main.c        ****             // Finding where the boundaries of the block are
 585:main.c        ****     		// Sweep across WEST to EAST until discrepancy
 586:main.c        ****             // But first sense the construction plan and then drive to wall and turn around to prep
 587:main.c        ****             
 588:main.c        ****             /*
 589:main.c        ****     		moveForwardIndefinitely();
 590:main.c        ****     		turnRight(180); // Now facing EAST wall
 591:main.c        ****     		moveForwardIndefinitely(); // Do this until we get to EAST wall
 592:main.c        ****             */
 593:main.c        ****             
 594:main.c        ****             //moveAndAngle(20,20,EAST_ANGLE); // Move to a position near construction base in an EA
 595:main.c        ****             //moveForwardIndefinitely(); // Scan until we reach EAST wall.
 596:main.c        ****             
 597:main.c        ****             // Will now know the boundaries of the block.
 598:main.c        ****             // Figure out direction we want to travel
 599:main.c        ****             
 600:main.c        **** 
 601:main.c        ****             //pathPastBlock = (block_edge_location[WEST] >= WIDTH_SENSOR_TO_SENSOR + SAFETY_MARGIN 
 602:main.c        ****             //pathToPucks = (puckPileLocation < ARENA_WIDTH / 2 ? WEST:EAST);
 603:main.c        ****             
 604:main.c        ****             state = STATE_GO_TO_PUCKS;
 605:main.c        **** 	    }
 606:main.c        ****              
 607:main.c        ****         /*
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\ccd2vam3.s 			page 17


 608:main.c        ****         if (state == STATE_GO_TO_PUCKS){
 609:main.c        ****             
 610:main.c        ****             
 611:main.c        ****             if (pathPastBlock == WEST){
 612:main.c        ****                 if (pathToPucks != WEST) {
 613:main.c        ****                     moveAndAngle(SAFETY_MARGIN / 2 + WIDTH_SENSOR_TO_SENSOR / 2, ARENA_LENGTH - FRO
 614:main.c        ****                 }
 615:main.c        ****                 else {moveAndAngle(SAFETY_MARGIN / 2 + WIDTH_SENSOR_TO_SENSOR / 2, ARENA_LENGTH - F
 616:main.c        ****             }
 617:main.c        ****             else {
 618:main.c        ****                 if (pathToPucks != EAST) {
 619:main.c        ****                     moveAndAngle(ARENA_WIDTH - SAFETY_MARGIN / 2 - WIDTH_SENSOR_TO_SENSOR / 2, AREN
 620:main.c        ****                 }
 621:main.c        ****                 else {moveAndAngle(ARENA_WIDTH - SAFETY_MARGIN / 2 - WIDTH_SENSOR_TO_SENSOR / 2, AR
 622:main.c        ****             }
 623:main.c        ****             
 624:main.c        ****             // Now depending on if the pucks are in the corner or not, 
 625:main.c        ****             
 626:main.c        ****             // We are now in front of the pucks
 627:main.c        ****             
 628:main.c        ****             
 629:main.c        ****             state = STATE_FIND_REQUIRED_PUCK;
 630:main.c        ****         }
 631:main.c        ****         
 632:main.c        ****         */
 633:main.c        ****         
 634:main.c        ****         /*
 635:main.c        ****         // Ensure that we are @ east wall facing east at a minimum verticaldistance so we can turn 
 636:main.c        ****         if (state == STATE_GO_TO_PUCKS){
 637:main.c        ****             
 638:main.c        ****             if (blockEastClearance && puckEastClearance){
 639:main.c        ****                 
 640:main.c        ****                 moveBackwardUntil(CLEARANCE_RADIUS_CENTER_TO_FRONT,FRONT);
 641:main.c        ****                 faceDirection(NORTH_ANGLE);
 642:main.c        ****                 moveForwardUntil(CLEARANCE_RADIUS_CENTER_TO_FRONT,FRONT);
 643:main.c        ****                 //displaceLeft(); Repeatedly call this if below function not implemented
 644:main.c        ****                 //displaceLeftUntil(CLEARANCE_RADIUS_CENTER_TO_BACK,RIGHT);
 645:main.c        ****                 faceDirection(WEST_ANGLE);
 646:main.c        ****                 //displaceLeft();
 647:main.c        ****                 //displaceLeftUntil(DISTANCE_PUCKS_FROM_NORTH + WIDTH_SENSOR_TO_CENTER ,RIGHT);
 648:main.c        ****                 moveForwardUntil(DISTANCE_STOPPED_FROM_PUCK,FRONT); // Can change 10 to any value r
 649:main.c        ****                 // Now front sensor 10cm away from puck, ready to pick up puck
 650:main.c        ****                 moveForward(DISTANCE_STOPPED_FROM_PUCK + 3); // Adding 3 should move the claw enoug
 651:main.c        ****                 
 652:main.c        ****             }
 653:main.c        ****             
 654:main.c        ****             else if (blockWestClearance && puckWestClearance){
 655:main.c        ****                 
 656:main.c        ****                 moveBackwardUntil(CLEARANCE_RADIUS_CENTER_TO_FRONT,FRONT);
 657:main.c        ****                 faceDirection(NORTH_ANGLE);
 658:main.c        ****                 moveForwardUntil(CLEARANCE_RADIUS_CENTER_TO_FRONT,FRONT);
 659:main.c        ****                 //displaceLeft(); Repeatedly call this if below function not implemented
 660:main.c        ****                 //displaceLeftUntil(CLEARANCE_RADIUS_CENTER_TO_BACK,RIGHT);
 661:main.c        ****                 faceDirection(WEST_ANGLE);
 662:main.c        ****                 //displaceLeft();
 663:main.c        ****                 //displaceLeftUntil(DISTANCE_PUCKS_FROM_NORTH + WIDTH_SENSOR_TO_CENTER ,RIGHT);
 664:main.c        ****                 moveForwardUntil(DISTANCE_STOPPED_FROM_PUCK,FRONT); // Can change 10 to any value r
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\ccd2vam3.s 			page 18


 665:main.c        ****                 // Now front sensor 10cm away from puck, ready to pick up puck
 666:main.c        ****                 moveForward(DISTANCE_STOPPED_FROM_PUCK + 3); // Adding 3 should move the claw enoug
 667:main.c        ****                 
 668:main.c        ****             }
 669:main.c        ****             
 670:main.c        ****             else if (blockEastClearance && puckWestClearance){
 671:main.c        ****                 
 672:main.c        ****             }
 673:main.c        ****             
 674:main.c        ****             else if (blockWestClearance && puckEastClearance){
 675:main.c        ****                 
 676:main.c        ****             }
 677:main.c        ****             
 678:main.c        ****             
 679:main.c        ****             
 680:main.c        ****         }
 681:main.c        ****         */
 682:main.c        ****         
 683:main.c        ****         if (state == STATE_FIND_REQUIRED_PUCK){
 684:main.c        ****             
 685:main.c        ****             
 686:main.c        ****         //SPEED = 70;               // need to be able to dynamically change speed of mishaMoveDyna
 687:main.c        ****         int puck_correct = FALSE;   // A flag to determine if the correct puck has been picked up
 688:main.c        ****         int puck_scan;
 689:main.c        ****         
 690:main.c        ****     
 691:main.c        ****         puckConstructionPlan[1] = RED;
 692:main.c        ****     
 693:main.c        ****         // Scanning puck:
 694:main.c        **** 
 695:main.c        ****         while (puck_correct == FALSE) 
 696:main.c        ****         {
 697:main.c        ****             mishaMoveDynamic(50, SPEED);  // robot moves forward towards puck
 698:main.c        ****                                     // could replace this with the distance gathered from the ultra
 699:main.c        ****             changeHeightToPuck(1);  // arm lowers onto robot
 700:main.c        ****             puck_scan = colourSensingOutput();  // colour sensor takes a scan
 701:main.c        ****             changeHeightToPuck(3);  // arm returns to high position
 702:main.c        ****             mishaMoveDynamic(-50, SPEED);   // robot moves backwards
 703:main.c        ****             if (puck_scan == puckConstructionPlan[1]) {puck_correct = TRUE;}
 704:main.c        ****                                     // if colour == true:
 705:main.c        ****                 
 706:main.c        ****             else 
 707:main.c        ****             {
 708:main.c        ****                                     // if colour == false
 709:main.c        ****                                         // robot translates to side to see next puck, and performs 
 710:main.c        ****             }
 711:main.c        ****         }
 712:main.c        ****                 
 713:main.c        ****         // Picking Up puck from pile:
 714:main.c        ****         changeHeightToPuck(0);      // arm lowers to ground
 715:main.c        ****         //changeHeightToPuck(1);
 716:main.c        ****         moveUntilPuck();
 717:main.c        ****         //mishaMoveDynamic(60);       // robot moves forward
 718:main.c        ****         armClose();                 // claw closes on puck
 719:main.c        ****         changeHeightToPuck(3);      // arm lifts up to highest position
 720:main.c        ****         mishaMoveDynamic(-60, SPEED);       // robot moves back away from puck area 
 721:main.c        ****         
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\ccd2vam3.s 			page 19


 722:main.c        ****             
 723:main.c        ****         while(1) {};           
 724:main.c        ****             
 725:main.c        ****             /*
 726:main.c        ****             int requiredColour = puckConstructionPlan[currentPuckStackSize];
 727:main.c        ****             int puckFound = 0;
 728:main.c        ****             
 729:main.c        ****             
 730:main.c        ****             // Let's assume that we get to the east or west of the puck pile and we are as close to
 731:main.c        ****             if (roundDirection() == NORTH){
 732:main.c        **** 
 733:main.c        ****             }
 734:main.c        ****             else if (roundDirection() == EAST){
 735:main.c        ****                 // Poll ultrasonics, displaceRight until no longer see the pucks
 736:main.c        ****                 // Drive up to the middle puck
 737:main.c        ****                 // We know that we used moveAndAngle() to get to the exact vertical position of the
 738:main.c        ****                 moveForwardIndefinitely();
 739:main.c        ****                 
 740:main.c        ****                 // May need to displaceRight a bit to ensure that we are perfectly centered with th
 741:main.c        ****                 // Now we need to inch forward with the claw lifted
 742:main.c        ****                 // Also store the horizontal location of the pucks based off our current position. 
 743:main.c        ****                 
 744:main.c        ****                 horizontalPuckGrid = currentPosition[0]; // Take our horizontal position as a refer
 745:main.c        ****                 
 746:main.c        ****                 changeHeightToPuck(1); // Lift up enough so we dont hit the pucks when scanning the
 747:main.c        ****                 moveForward(DISTANCE_STOPPED_FROM_PUCK); // Move forward until colour sensor above 
 748:main.c        ****                
 749:main.c        ****                 if (colourSensingOutput() == puckConstructionPlan[currentPuckStackSize]){ 
 750:main.c        ****                     // This is the puck we need
 751:main.c        ****                     moveBackward(DISTANCE_STOPPED_FROM_PUCK); // Reverse to make room for lowering 
 752:main.c        ****                     lowerAndOpen(0); // We are grabbing the pucks from the ground.
 753:main.c        ****                     moveForward(DISTANCE_STOPPED_FROM_PUCK);
 754:main.c        ****                     closeAndRaise(1); // Lift above the height of the ground pucks
 755:main.c        **** 
 756:main.c        ****                 }
 757:main.c        ****                 
 758:main.c        ****                 // If the colour isn't what we need, we could pick it up and drop it somewhere out 
 759:main.c        ****                 else {
 760:main.c        ****                     moveBackward(DISTANCE_STOPPED_FROM_PUCK); // Need to check the next puck
 761:main.c        ****                     displaceLeft(5,22);
 762:main.c        ****                     changeHeightToPuck(1); // Lift up enough so we dont hit the pucks when scanning
 763:main.c        ****                     moveForward(DISTANCE_STOPPED_FROM_PUCK); // Move forward until colour sensor ab
 764:main.c        ****                     
 765:main.c        ****                     // Scan the next puck
 766:main.c        ****                     if (colourSensingOutput() == puckConstructionPlan[currentPuckStackSize]){ 
 767:main.c        ****                         // This is the puck we need
 768:main.c        ****                         moveBackward(DISTANCE_STOPPED_FROM_PUCK); // Reverse to make room for lower
 769:main.c        ****                         lowerAndOpen(0); // We are grabbing the pucks from the ground.
 770:main.c        ****                         moveForward(DISTANCE_STOPPED_FROM_PUCK);
 771:main.c        ****                         closeAndRaise(1); // Lift above the height of the ground pucks
 772:main.c        **** 
 773:main.c        ****                     }
 774:main.c        ****                     
 775:main.c        ****                     else {
 776:main.c        ****                         moveBackward(DISTANCE_STOPPED_FROM_PUCK); // Need to check the next puck
 777:main.c        ****                         displaceLeft(5,22);
 778:main.c        ****                         changeHeightToPuck(1); // Lift up enough so we dont hit the pucks when scan
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\ccd2vam3.s 			page 20


 779:main.c        ****                         moveForward(DISTANCE_STOPPED_FROM_PUCK); // Move forward until colour senso
 780:main.c        ****                         
 781:main.c        ****                         if (colourSensingOutput() == puckConstructionPlan[currentPuckStackSize]){ 
 782:main.c        ****                             // This is the puck we need
 783:main.c        ****                             moveBackward(DISTANCE_STOPPED_FROM_PUCK); // Reverse to make room for l
 784:main.c        ****                             lowerAndOpen(0); // We are grabbing the pucks from the ground.
 785:main.c        ****                             moveForward(DISTANCE_STOPPED_FROM_PUCK);
 786:main.c        ****                             closeAndRaise(1); // Lift above the height of the ground pucks
 787:main.c        **** 
 788:main.c        ****                         }
 789:main.c        ****                     
 790:main.c        ****                     }
 791:main.c        ****                 }
 792:main.c        ****                 
 793:main.c        ****                 if (colourSensingOutput() == puckConstructionPlan[currentPuckStackSize]){ 
 794:main.c        ****                     // This is the puck we need
 795:main.c        ****                     moveBackward(DISTANCE_STOPPED_FROM_PUCK); // Reverse to make room for lowering 
 796:main.c        ****                     lowerAndOpen(0); // We are grabbing the pucks from the ground.
 797:main.c        ****                     moveForward(DISTANCE_STOPPED_FROM_PUCK);
 798:main.c        ****                     closeAndRaise(1); // Lift above the height of the ground pucks
 799:main.c        **** 
 800:main.c        ****                 }
 801:main.c        ****                 
 802:main.c        ****             }
 803:main.c        ****             
 804:main.c        ****             else if (roundDirection() == WEST){
 805:main.c        ****                 // Poll ultrasonics, displaceRight until no longer see the pucks
 806:main.c        ****                 // Drive up to the middle puck
 807:main.c        ****                 // We know that we used moveAndAngle() to get to the exact vertical position of the
 808:main.c        ****                 moveForwardIndefinitely();
 809:main.c        ****             }
 810:main.c        ****             
 811:main.c        ****             */
 812:main.c        ****             
 813:main.c        ****             /*
 814:main.c        ****             while(!puckFound){
 815:main.c        ****                   
 816:main.c        ****             }
 817:main.c        ****             */
 818:main.c        ****             
 819:main.c        ****             
 820:main.c        ****         }
 821:main.c        ****         
 822:main.c        ****         if (state == STATE_DEPOSIT_PUCK){
 823:main.c        **** 
 824:main.c        ****             /*
 825:main.c        ****             moveAndAngle(CONSTRUCTION_MIDPOINT,CONSTRUCTION_DISTANCE_FROM_WALL + 10, SOUTH_ANGLE); 
 826:main.c        ****             lowerAndOpen(currentPuckStackSize);
 827:main.c        ****             moveAndAngle(CONSTRUCTION_MIDPOINT,CONSTRUCTION_DISTANCE_FROM_WALL, SOUTH_ANGLE); // Ta
 828:main.c        ****             changeHeightToPuck(currentPuckStackSize + 1); // Lift claw above stack to avoid hitting
 829:main.c        ****             moveAndAngle(CONSTRUCTION_MIDPOINT,CONSTRUCTION_DISTANCE_FROM_WALL, SOUTH_ANGLE); // Ta
 830:main.c        ****             */
 831:main.c        ****             
 832:main.c        ****             //lowerAndOpen(current_stage);
 833:main.c        ****             changeHeightToPuck(current_stage - 1); // Lift claw above stack to avoid hitting the st
 302              		.loc 1 833 0
 303 0120 1446     		mov	r4, r2
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\ccd2vam3.s 			page 21


 304 0122 481E     		subs	r0, r1, #1
 305 0124 FFF7FEFF 		bl	changeHeightToPuck
 306              	.LVL48:
 834:main.c        ****             armOpen();
 307              		.loc 1 834 0
 308 0128 FFF7FEFF 		bl	armOpen
 309              	.LVL49:
 835:main.c        ****             
 836:main.c        ****             changeHeightToPuck(current_stage);
 310              		.loc 1 836 0
 311 012c A068     		ldr	r0, [r4, #8]
 312 012e FFF7FEFF 		bl	changeHeightToPuck
 313              	.LVL50:
 837:main.c        ****             
 838:main.c        ****             moveUntil(CONSTRUCTION_DISTANCE_CLEAR_FROM_STACK, BACKWARD, GREATER_THAN, FRONT_LEFT, S
 314              		.loc 1 838 0
 315 0132 AA23     		movs	r3, #170
 316 0134 0093     		str	r3, [sp]
 317 0136 0023     		movs	r3, #0
 318 0138 0122     		movs	r2, #1
 319 013a 1946     		mov	r1, r3
 320 013c D220     		movs	r0, #210
 321 013e FFF7FEFF 		bl	moveUntil
 322              	.LVL51:
 839:main.c        ****             
 840:main.c        ****             if (current_stage >= 3){state = STATE_PARK_HOME;}        // Returns to home 
 323              		.loc 1 840 0
 324 0142 A368     		ldr	r3, [r4, #8]
 325 0144 022B     		cmp	r3, #2
 326 0146 02DD     		ble	.L17
 327              		.loc 1 840 0 is_stmt 0 discriminator 1
 328 0148 0622     		movs	r2, #6
 329 014a 6260     		str	r2, [r4, #4]
 330 014c 02E0     		b	.L16
 331              	.L17:
 841:main.c        ****             else {current_stage++;}
 332              		.loc 1 841 0 is_stmt 1
 333 014e 0133     		adds	r3, r3, #1
 334 0150 194A     		ldr	r2, .L23+36
 335 0152 9360     		str	r3, [r2, #8]
 336              	.L16:
 842:main.c        **** 
 843:main.c        ****         }
 844:main.c        ****         
 845:main.c        ****         if (state == STATE_PARK_HOME){
 337              		.loc 1 845 0
 338 0154 184B     		ldr	r3, .L23+36
 339 0156 5B68     		ldr	r3, [r3, #4]
 340 0158 062B     		cmp	r3, #6
 341 015a D9D1     		bne	.L18
 846:main.c        ****             
 847:main.c        ****             // When we enter this state we can assume that we have just deposited the final puck on
 848:main.c        ****             // Thus we are facing the stack.
 849:main.c        ****             
 850:main.c        ****             
 851:main.c        ****             mishaSwivel(90, SPEED);
 342              		.loc 1 851 0
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\ccd2vam3.s 			page 22


 343 015c AA21     		movs	r1, #170
 344 015e 5A20     		movs	r0, #90
 345 0160 FFF7FEFF 		bl	mishaSwivel
 346              	.LVL52:
 852:main.c        ****             straightAdjust();
 347              		.loc 1 852 0
 348 0164 FFF7FEFF 		bl	straightAdjust
 349              	.LVL53:
 853:main.c        ****             moveUntil(HOME_MIDPOINT - DISTANCE_FRONT_SENSOR_FROM_CENTER , BACKWARD, GREATER_THAN, F
 350              		.loc 1 853 0
 351 0168 AA24     		movs	r4, #170
 352 016a 0094     		str	r4, [sp]
 353 016c 0123     		movs	r3, #1
 354 016e 1A46     		mov	r2, r3
 355 0170 0021     		movs	r1, #0
 356 0172 40F22620 		movw	r0, #550
 357 0176 FFF7FEFF 		bl	moveUntil
 358              	.LVL54:
 854:main.c        ****             mishaSwivel(90, SPEED);
 359              		.loc 1 854 0
 360 017a 2146     		mov	r1, r4
 361 017c 5A20     		movs	r0, #90
 362 017e FFF7FEFF 		bl	mishaSwivel
 363              	.LVL55:
 855:main.c        ****             moveUntil(HOME_PARKING_DISTANCE , BACKWARD, LESS_THAN, BACK, SPEED);
 364              		.loc 1 855 0
 365 0182 0094     		str	r4, [sp]
 366 0184 0423     		movs	r3, #4
 367 0186 0022     		movs	r2, #0
 368 0188 1146     		mov	r1, r2
 369 018a 2820     		movs	r0, #40
 370 018c FFF7FEFF 		bl	moveUntil
 371              	.LVL56:
 372              	.L19:
 373 0190 FEE7     		b	.L19
 374              	.L24:
 375 0192 00BF     		.align	2
 376              	.L23:
 377 0194 00000000 		.word	.LC0
 378 0198 00000000 		.word	.LANCHOR0
 379 019c 00000000 		.word	TIH
 380 01a0 00000000 		.word	StartIH
 381 01a4 18000000 		.word	.LC1
 382 01a8 00000000 		.word	output
 383 01ac 00000000 		.word	ultrasonic_distances_mm
 384 01b0 38000000 		.word	.LC2
 385 01b4 40000000 		.word	.LC3
 386 01b8 00000000 		.word	.LANCHOR1
 387              		.cfi_endproc
 388              	.LFE66:
 389              		.size	main, .-main
 390              		.comm	distance_returned_global,4,4
 391              		.global	current_stage
 392              		.global	PLAN_SCAN_VERTICAL
 393              		.global	moving
 394              		.global	colour_sensing_algorithm
 395              		.global	colour_flag
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\ccd2vam3.s 			page 23


 396              		.global	idac_value
 397              		.comm	moveBackwardAllowed,2,2
 398              		.comm	moveForwardAllowed,2,2
 399              		.comm	moveRightAllowed,2,2
 400              		.comm	moveLeftAllowed,2,2
 401              		.global	moveNow
 402              		.comm	desiredOrientation,4,4
 403              		.global	currentOrientation
 404              		.comm	desiredPosition,8,4
 405              		.global	currentPosition
 406              		.global	puckWestClearance
 407              		.global	puckEastClearance
 408              		.global	blockWestClearance
 409              		.global	blockEastClearance
 410              		.comm	pathPastBlock,4,4
 411              		.comm	pathToPucks,4,4
 412              		.global	beginNavigation
 413              		.global	horizontalPuckGrid
 414              		.global	puckConstructionPlan
 415              		.global	currentPuckStackSize
 416              		.global	running
 417              		.global	state
 418              		.comm	ultrasonic_flag,4,4
 419              		.comm	initialisation,4,4
 420              		.comm	output,32,4
 421              		.global	turningRightFlag
 422              		.global	turningLeftFlag
 423              		.global	drivingBackwardFlag
 424              		.global	drivingForwardFlag
 425              		.comm	puckPileLocation,4,4
 426              		.global	block_edge_location
 427              		.global	sweeping
 428              		.global	puckRackOffsetsFromWest
 429              		.global	puckRackColours
 430              		.global	currentPuckRackScanningIndex
 431              		.comm	driveStraightEnable,4,4
 432              		.section	.rodata
 433              		.align	2
 434              		.type	PLAN_SCAN_VERTICAL, %object
 435              		.size	PLAN_SCAN_VERTICAL, 4
 436              	PLAN_SCAN_VERTICAL:
 437 0000 0A000000 		.word	10
 438              		.data
 439              		.align	2
 440              		.set	.LANCHOR1,. + 0
 441              		.type	colour_flag, %object
 442              		.size	colour_flag, 4
 443              	colour_flag:
 444 0000 01000000 		.word	1
 445              		.type	state, %object
 446              		.size	state, 4
 447              	state:
 448 0004 01000000 		.word	1
 449              		.type	current_stage, %object
 450              		.size	current_stage, 4
 451              	current_stage:
 452 0008 01000000 		.word	1
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\ccd2vam3.s 			page 24


 453              		.type	moveNow, %object
 454              		.size	moveNow, 2
 455              	moveNow:
 456 000c 0100     		.short	1
 457 000e 0000     		.space	2
 458              		.type	currentOrientation, %object
 459              		.size	currentOrientation, 4
 460              	currentOrientation:
 461 0010 5A000000 		.word	90
 462              		.type	running, %object
 463              		.size	running, 4
 464              	running:
 465 0014 01000000 		.word	1
 466              		.type	puckRackOffsetsFromWest, %object
 467              		.size	puckRackOffsetsFromWest, 20
 468              	puckRackOffsetsFromWest:
 469 0018 D0020000 		.word	720
 470 001c 94020000 		.word	660
 471 0020 58020000 		.word	600
 472 0024 1C020000 		.word	540
 473 0028 E0010000 		.word	480
 474              		.section	.rodata.str1.4,"aMS",%progbits,1
 475              		.align	2
 476              	.LC0:
 477 0000 55415254 		.ascii	"UART commencing... \012\000"
 477      20636F6D 
 477      6D656E63 
 477      696E672E 
 477      2E2E200A 
 478 0015 000000   		.space	3
 479              	.LC1:
 480 0018 556C7472 		.ascii	"Ultrasonic Calibration tests: \012\000"
 480      61736F6E 
 480      69632043 
 480      616C6962 
 480      72617469 
 481              	.LC2:
 482 0038 25642009 		.ascii	"%d \011\000"
 482      00
 483 003d 000000   		.space	3
 484              	.LC3:
 485 0040 0A0A00   		.ascii	"\012\012\000"
 486              		.bss
 487              		.align	2
 488              		.set	.LANCHOR0,. + 0
 489              		.type	beginNavigation, %object
 490              		.size	beginNavigation, 4
 491              	beginNavigation:
 492 0000 00000000 		.space	4
 493              		.type	idac_value, %object
 494              		.size	idac_value, 4
 495              	idac_value:
 496 0004 00000000 		.space	4
 497              		.type	colour_sensing_algorithm, %object
 498              		.size	colour_sensing_algorithm, 4
 499              	colour_sensing_algorithm:
 500 0008 00000000 		.space	4
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\ccd2vam3.s 			page 25


 501              		.type	currentPuckStackSize, %object
 502              		.size	currentPuckStackSize, 4
 503              	currentPuckStackSize:
 504 000c 00000000 		.space	4
 505              		.type	puckConstructionPlan, %object
 506              		.size	puckConstructionPlan, 12
 507              	puckConstructionPlan:
 508 0010 00000000 		.space	12
 508      00000000 
 508      00000000 
 509              		.type	moving, %object
 510              		.size	moving, 4
 511              	moving:
 512 001c 00000000 		.space	4
 513              		.type	currentPosition, %object
 514              		.size	currentPosition, 8
 515              	currentPosition:
 516 0020 00000000 		.space	8
 516      00000000 
 517              		.type	puckWestClearance, %object
 518              		.size	puckWestClearance, 2
 519              	puckWestClearance:
 520 0028 0000     		.space	2
 521              		.type	puckEastClearance, %object
 522              		.size	puckEastClearance, 2
 523              	puckEastClearance:
 524 002a 0000     		.space	2
 525              		.type	blockWestClearance, %object
 526              		.size	blockWestClearance, 2
 527              	blockWestClearance:
 528 002c 0000     		.space	2
 529              		.type	blockEastClearance, %object
 530              		.size	blockEastClearance, 2
 531              	blockEastClearance:
 532 002e 0000     		.space	2
 533              		.type	horizontalPuckGrid, %object
 534              		.size	horizontalPuckGrid, 4
 535              	horizontalPuckGrid:
 536 0030 00000000 		.space	4
 537              		.type	turningRightFlag, %object
 538              		.size	turningRightFlag, 2
 539              	turningRightFlag:
 540 0034 0000     		.space	2
 541              		.type	turningLeftFlag, %object
 542              		.size	turningLeftFlag, 2
 543              	turningLeftFlag:
 544 0036 0000     		.space	2
 545              		.type	drivingBackwardFlag, %object
 546              		.size	drivingBackwardFlag, 2
 547              	drivingBackwardFlag:
 548 0038 0000     		.space	2
 549              		.type	drivingForwardFlag, %object
 550              		.size	drivingForwardFlag, 2
 551              	drivingForwardFlag:
 552 003a 0000     		.space	2
 553              		.type	block_edge_location, %object
 554              		.size	block_edge_location, 16
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\ccd2vam3.s 			page 26


 555              	block_edge_location:
 556 003c 00000000 		.space	16
 556      00000000 
 556      00000000 
 556      00000000 
 557              		.type	sweeping, %object
 558              		.size	sweeping, 4
 559              	sweeping:
 560 004c 00000000 		.space	4
 561              		.type	puckRackColours, %object
 562              		.size	puckRackColours, 20
 563              	puckRackColours:
 564 0050 00000000 		.space	20
 564      00000000 
 564      00000000 
 564      00000000 
 564      00000000 
 565              		.type	currentPuckRackScanningIndex, %object
 566              		.size	currentPuckRackScanningIndex, 4
 567              	currentPuckRackScanningIndex:
 568 0064 00000000 		.space	4
 569              		.text
 570              	.Letext0:
 571              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 572              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 573              		.file 4 "Generated_Source\\PSoC5/core_cm3.h"
 574              		.file 5 "ultrasonic.h"
 575              		.file 6 "main.h"
 576              		.file 7 "Generated_Source\\PSoC5/CyLib.h"
 577              		.file 8 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 578              		.file 9 "Generated_Source\\PSoC5/UART_1.h"
 579              		.file 10 "Generated_Source\\PSoC5/TIA_1.h"
 580              		.file 11 "Generated_Source\\PSoC5/ADC.h"
 581              		.file 12 "Generated_Source\\PSoC5/IDAC8_1.h"
 582              		.file 13 "Generated_Source\\PSoC5/control_photodiode.h"
 583              		.file 14 "Generated_Source\\PSoC5/control_led.h"
 584              		.file 15 "colour.h"
 585              		.file 16 "Generated_Source\\PSoC5/Rack_Servo_PWM.h"
 586              		.file 17 "Generated_Source\\PSoC5/Gripper_Servo_PWM.h"
 587              		.file 18 "Generated_Source\\PSoC5/Motor_Left_Driver.h"
 588              		.file 19 "Generated_Source\\PSoC5/Motor_Right_Driver.h"
 589              		.file 20 "Generated_Source\\PSoC5/Motor_Left_Decoder.h"
 590              		.file 21 "Generated_Source\\PSoC5/Motor_Right_Decoder.h"
 591              		.file 22 "Generated_Source\\PSoC5/Timer_1.h"
 592              		.file 23 "Generated_Source\\PSoC5/Sonic.h"
 593              		.file 24 "Generated_Source\\PSoC5/Start.h"
 594              		.file 25 "servo.h"
 595              		.file 26 "navigation.h"
 596              		.file 27 "mishamotor.h"
 597              		.section	.debug_info,"",%progbits
 598              	.Ldebug_info0:
 599 0000 7D090000 		.4byte	0x97d
 600 0004 0400     		.2byte	0x4
 601 0006 00000000 		.4byte	.Ldebug_abbrev0
 602 000a 04       		.byte	0x4
 603 000b 01       		.uleb128 0x1
 604 000c B4060000 		.4byte	.LASF100
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\ccd2vam3.s 			page 27


 605 0010 0C       		.byte	0xc
 606 0011 BC050000 		.4byte	.LASF101
 607 0015 C4030000 		.4byte	.LASF102
 608 0019 18000000 		.4byte	.Ldebug_ranges0+0x18
 609 001d 00000000 		.4byte	0
 610 0021 00000000 		.4byte	.Ldebug_line0
 611 0025 02       		.uleb128 0x2
 612 0026 01       		.byte	0x1
 613 0027 06       		.byte	0x6
 614 0028 1B000000 		.4byte	.LASF0
 615 002c 02       		.uleb128 0x2
 616 002d 01       		.byte	0x1
 617 002e 08       		.byte	0x8
 618 002f 49030000 		.4byte	.LASF1
 619 0033 02       		.uleb128 0x2
 620 0034 02       		.byte	0x2
 621 0035 05       		.byte	0x5
 622 0036 5F000000 		.4byte	.LASF2
 623 003a 02       		.uleb128 0x2
 624 003b 02       		.byte	0x2
 625 003c 07       		.byte	0x7
 626 003d 98050000 		.4byte	.LASF3
 627 0041 03       		.uleb128 0x3
 628 0042 28060000 		.4byte	.LASF9
 629 0046 02       		.byte	0x2
 630 0047 3F       		.byte	0x3f
 631 0048 4C000000 		.4byte	0x4c
 632 004c 02       		.uleb128 0x2
 633 004d 04       		.byte	0x4
 634 004e 05       		.byte	0x5
 635 004f 7E020000 		.4byte	.LASF4
 636 0053 02       		.uleb128 0x2
 637 0054 04       		.byte	0x4
 638 0055 07       		.byte	0x7
 639 0056 C3050000 		.4byte	.LASF5
 640 005a 02       		.uleb128 0x2
 641 005b 08       		.byte	0x8
 642 005c 05       		.byte	0x5
 643 005d 4D020000 		.4byte	.LASF6
 644 0061 02       		.uleb128 0x2
 645 0062 08       		.byte	0x8
 646 0063 07       		.byte	0x7
 647 0064 49040000 		.4byte	.LASF7
 648 0068 04       		.uleb128 0x4
 649 0069 04       		.byte	0x4
 650 006a 05       		.byte	0x5
 651 006b 696E7400 		.ascii	"int\000"
 652 006f 02       		.uleb128 0x2
 653 0070 04       		.byte	0x4
 654 0071 07       		.byte	0x7
 655 0072 80040000 		.4byte	.LASF8
 656 0076 03       		.uleb128 0x3
 657 0077 1E050000 		.4byte	.LASF10
 658 007b 03       		.byte	0x3
 659 007c 2C       		.byte	0x2c
 660 007d 41000000 		.4byte	0x41
 661 0081 02       		.uleb128 0x2
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\ccd2vam3.s 			page 28


 662 0082 04       		.byte	0x4
 663 0083 04       		.byte	0x4
 664 0084 34020000 		.4byte	.LASF11
 665 0088 02       		.uleb128 0x2
 666 0089 08       		.byte	0x8
 667 008a 04       		.byte	0x4
 668 008b E3050000 		.4byte	.LASF12
 669 008f 02       		.uleb128 0x2
 670 0090 01       		.byte	0x1
 671 0091 08       		.byte	0x8
 672 0092 14050000 		.4byte	.LASF13
 673 0096 02       		.uleb128 0x2
 674 0097 08       		.byte	0x8
 675 0098 04       		.byte	0x4
 676 0099 12010000 		.4byte	.LASF14
 677 009d 02       		.uleb128 0x2
 678 009e 04       		.byte	0x4
 679 009f 07       		.byte	0x7
 680 00a0 5F060000 		.4byte	.LASF15
 681 00a4 05       		.uleb128 0x5
 682 00a5 54494800 		.ascii	"TIH\000"
 683 00a9 01       		.byte	0x1
 684 00aa 70       		.byte	0x70
 685 00ab 00000000 		.4byte	.LFB64
 686 00af 08000000 		.4byte	.LFE64-.LFB64
 687 00b3 01       		.uleb128 0x1
 688 00b4 9C       		.byte	0x9c
 689 00b5 C3000000 		.4byte	0xc3
 690 00b9 06       		.uleb128 0x6
 691 00ba 06000000 		.4byte	.LVL0
 692 00be FF070000 		.4byte	0x7ff
 693 00c2 00       		.byte	0
 694 00c3 07       		.uleb128 0x7
 695 00c4 1E010000 		.4byte	.LASF16
 696 00c8 01       		.byte	0x1
 697 00c9 75       		.byte	0x75
 698 00ca 00000000 		.4byte	.LFB65
 699 00ce 20000000 		.4byte	.LFE65-.LFB65
 700 00d2 01       		.uleb128 0x1
 701 00d3 9C       		.byte	0x9c
 702 00d4 E9000000 		.4byte	0xe9
 703 00d8 08       		.uleb128 0x8
 704 00d9 08000000 		.4byte	.LVL1
 705 00dd 0A080000 		.4byte	0x80a
 706 00e1 09       		.uleb128 0x9
 707 00e2 01       		.uleb128 0x1
 708 00e3 50       		.byte	0x50
 709 00e4 02       		.uleb128 0x2
 710 00e5 08       		.byte	0x8
 711 00e6 64       		.byte	0x64
 712 00e7 00       		.byte	0
 713 00e8 00       		.byte	0
 714 00e9 0A       		.uleb128 0xa
 715 00ea 19050000 		.4byte	.LASF103
 716 00ee 01       		.byte	0x1
 717 00ef 90       		.byte	0x90
 718 00f0 68000000 		.4byte	0x68
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\ccd2vam3.s 			page 29


 719 00f4 00000000 		.4byte	.LFB66
 720 00f8 BC010000 		.4byte	.LFE66-.LFB66
 721 00fc 01       		.uleb128 0x1
 722 00fd 9C       		.byte	0x9c
 723 00fe C4040000 		.4byte	0x4c4
 724 0102 0B       		.uleb128 0xb
 725 0103 B4000000 		.4byte	.LASF17
 726 0107 01       		.byte	0x1
 727 0108 9C       		.byte	0x9c
 728 0109 68000000 		.4byte	0x68
 729 010d 00       		.byte	0
 730 010e 0B       		.uleb128 0xb
 731 010f 72040000 		.4byte	.LASF18
 732 0113 01       		.byte	0x1
 733 0114 9D       		.byte	0x9d
 734 0115 68000000 		.4byte	0x68
 735 0119 00       		.byte	0
 736 011a 0B       		.uleb128 0xb
 737 011b 6F060000 		.4byte	.LASF19
 738 011f 01       		.byte	0x1
 739 0120 9E       		.byte	0x9e
 740 0121 68000000 		.4byte	0x68
 741 0125 00       		.byte	0
 742 0126 0B       		.uleb128 0xb
 743 0127 08000000 		.4byte	.LASF20
 744 012b 01       		.byte	0x1
 745 012c 9F       		.byte	0x9f
 746 012d 68000000 		.4byte	0x68
 747 0131 00       		.byte	0
 748 0132 0C       		.uleb128 0xc
 749 0133 D4000000 		.4byte	.LBB2
 750 0137 3C000000 		.4byte	.LBE2-.LBB2
 751 013b CC010000 		.4byte	0x1cc
 752 013f 0D       		.uleb128 0xd
 753 0140 6A00     		.ascii	"j\000"
 754 0142 01       		.byte	0x1
 755 0143 D1       		.byte	0xd1
 756 0144 68000000 		.4byte	0x68
 757 0148 00000000 		.4byte	.LLST0
 758 014c 0E       		.uleb128 0xe
 759 014d 00000000 		.4byte	.Ldebug_ranges0+0
 760 0151 B8010000 		.4byte	0x1b8
 761 0155 0D       		.uleb128 0xd
 762 0156 6900     		.ascii	"i\000"
 763 0158 01       		.byte	0x1
 764 0159 D3       		.byte	0xd3
 765 015a 68000000 		.4byte	0x68
 766 015e 1F000000 		.4byte	.LLST1
 767 0162 0F       		.uleb128 0xf
 768 0163 DE000000 		.4byte	.LVL39
 769 0167 15080000 		.4byte	0x815
 770 016b 76010000 		.4byte	0x176
 771 016f 09       		.uleb128 0x9
 772 0170 01       		.uleb128 0x1
 773 0171 50       		.byte	0x50
 774 0172 02       		.uleb128 0x2
 775 0173 74       		.byte	0x74
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\ccd2vam3.s 			page 30


 776 0174 00       		.sleb128 0
 777 0175 00       		.byte	0
 778 0176 0F       		.uleb128 0xf
 779 0177 E4000000 		.4byte	.LVL40
 780 017b 0A080000 		.4byte	0x80a
 781 017f 8A010000 		.4byte	0x18a
 782 0183 09       		.uleb128 0x9
 783 0184 01       		.uleb128 0x1
 784 0185 50       		.byte	0x50
 785 0186 02       		.uleb128 0x2
 786 0187 08       		.byte	0x8
 787 0188 64       		.byte	0x64
 788 0189 00       		.byte	0
 789 018a 0F       		.uleb128 0xf
 790 018b F4000000 		.4byte	.LVL41
 791 018f 20080000 		.4byte	0x820
 792 0193 A7010000 		.4byte	0x1a7
 793 0197 09       		.uleb128 0x9
 794 0198 01       		.uleb128 0x1
 795 0199 50       		.byte	0x50
 796 019a 02       		.uleb128 0x2
 797 019b 76       		.byte	0x76
 798 019c 00       		.sleb128 0
 799 019d 09       		.uleb128 0x9
 800 019e 01       		.uleb128 0x1
 801 019f 51       		.byte	0x51
 802 01a0 05       		.uleb128 0x5
 803 01a1 03       		.byte	0x3
 804 01a2 38000000 		.4byte	.LC2
 805 01a6 00       		.byte	0
 806 01a7 08       		.uleb128 0x8
 807 01a8 FA000000 		.4byte	.LVL42
 808 01ac 2B080000 		.4byte	0x82b
 809 01b0 09       		.uleb128 0x9
 810 01b1 01       		.uleb128 0x1
 811 01b2 50       		.byte	0x50
 812 01b3 02       		.uleb128 0x2
 813 01b4 76       		.byte	0x76
 814 01b5 00       		.sleb128 0
 815 01b6 00       		.byte	0
 816 01b7 00       		.byte	0
 817 01b8 08       		.uleb128 0x8
 818 01b9 0A010000 		.4byte	.LVL46
 819 01bd 2B080000 		.4byte	0x82b
 820 01c1 09       		.uleb128 0x9
 821 01c2 01       		.uleb128 0x1
 822 01c3 50       		.byte	0x50
 823 01c4 05       		.uleb128 0x5
 824 01c5 03       		.byte	0x3
 825 01c6 40000000 		.4byte	.LC3
 826 01ca 00       		.byte	0
 827 01cb 00       		.byte	0
 828 01cc 06       		.uleb128 0x6
 829 01cd 0A000000 		.4byte	.LVL2
 830 01d1 36080000 		.4byte	0x836
 831 01d5 06       		.uleb128 0x6
 832 01d6 0E000000 		.4byte	.LVL3
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\ccd2vam3.s 			page 31


 833 01da 41080000 		.4byte	0x841
 834 01de 0F       		.uleb128 0xf
 835 01df 14000000 		.4byte	.LVL4
 836 01e3 2B080000 		.4byte	0x82b
 837 01e7 F5010000 		.4byte	0x1f5
 838 01eb 09       		.uleb128 0x9
 839 01ec 01       		.uleb128 0x1
 840 01ed 50       		.byte	0x50
 841 01ee 05       		.uleb128 0x5
 842 01ef 03       		.byte	0x3
 843 01f0 00000000 		.4byte	.LC0
 844 01f4 00       		.byte	0
 845 01f5 06       		.uleb128 0x6
 846 01f6 18000000 		.4byte	.LVL5
 847 01fa 4C080000 		.4byte	0x84c
 848 01fe 06       		.uleb128 0x6
 849 01ff 1C000000 		.4byte	.LVL6
 850 0203 57080000 		.4byte	0x857
 851 0207 0F       		.uleb128 0xf
 852 0208 22000000 		.4byte	.LVL7
 853 020c 62080000 		.4byte	0x862
 854 0210 1A020000 		.4byte	0x21a
 855 0214 09       		.uleb128 0x9
 856 0215 01       		.uleb128 0x1
 857 0216 50       		.byte	0x50
 858 0217 01       		.uleb128 0x1
 859 0218 30       		.byte	0x30
 860 0219 00       		.byte	0
 861 021a 06       		.uleb128 0x6
 862 021b 2A000000 		.4byte	.LVL8
 863 021f 6D080000 		.4byte	0x86d
 864 0223 0F       		.uleb128 0xf
 865 0224 34000000 		.4byte	.LVL9
 866 0228 78080000 		.4byte	0x878
 867 022c 37020000 		.4byte	0x237
 868 0230 09       		.uleb128 0x9
 869 0231 01       		.uleb128 0x1
 870 0232 50       		.byte	0x50
 871 0233 02       		.uleb128 0x2
 872 0234 74       		.byte	0x74
 873 0235 00       		.sleb128 0
 874 0236 00       		.byte	0
 875 0237 0F       		.uleb128 0xf
 876 0238 3A000000 		.4byte	.LVL10
 877 023c 83080000 		.4byte	0x883
 878 0240 4A020000 		.4byte	0x24a
 879 0244 09       		.uleb128 0x9
 880 0245 01       		.uleb128 0x1
 881 0246 50       		.byte	0x50
 882 0247 01       		.uleb128 0x1
 883 0248 31       		.byte	0x31
 884 0249 00       		.byte	0
 885 024a 0F       		.uleb128 0xf
 886 024b 42000000 		.4byte	.LVL11
 887 024f 0A080000 		.4byte	0x80a
 888 0253 5F020000 		.4byte	0x25f
 889 0257 09       		.uleb128 0x9
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\ccd2vam3.s 			page 32


 890 0258 01       		.uleb128 0x1
 891 0259 50       		.byte	0x50
 892 025a 03       		.uleb128 0x3
 893 025b 0A       		.byte	0xa
 894 025c F401     		.2byte	0x1f4
 895 025e 00       		.byte	0
 896 025f 0F       		.uleb128 0xf
 897 0260 48000000 		.4byte	.LVL12
 898 0264 83080000 		.4byte	0x883
 899 0268 72020000 		.4byte	0x272
 900 026c 09       		.uleb128 0x9
 901 026d 01       		.uleb128 0x1
 902 026e 50       		.byte	0x50
 903 026f 01       		.uleb128 0x1
 904 0270 32       		.byte	0x32
 905 0271 00       		.byte	0
 906 0272 0F       		.uleb128 0xf
 907 0273 50000000 		.4byte	.LVL13
 908 0277 0A080000 		.4byte	0x80a
 909 027b 87020000 		.4byte	0x287
 910 027f 09       		.uleb128 0x9
 911 0280 01       		.uleb128 0x1
 912 0281 50       		.byte	0x50
 913 0282 03       		.uleb128 0x3
 914 0283 0A       		.byte	0xa
 915 0284 F401     		.2byte	0x1f4
 916 0286 00       		.byte	0
 917 0287 0F       		.uleb128 0xf
 918 0288 56000000 		.4byte	.LVL14
 919 028c 83080000 		.4byte	0x883
 920 0290 9A020000 		.4byte	0x29a
 921 0294 09       		.uleb128 0x9
 922 0295 01       		.uleb128 0x1
 923 0296 50       		.byte	0x50
 924 0297 01       		.uleb128 0x1
 925 0298 33       		.byte	0x33
 926 0299 00       		.byte	0
 927 029a 0F       		.uleb128 0xf
 928 029b 5E000000 		.4byte	.LVL15
 929 029f 0A080000 		.4byte	0x80a
 930 02a3 AF020000 		.4byte	0x2af
 931 02a7 09       		.uleb128 0x9
 932 02a8 01       		.uleb128 0x1
 933 02a9 50       		.byte	0x50
 934 02aa 03       		.uleb128 0x3
 935 02ab 0A       		.byte	0xa
 936 02ac F401     		.2byte	0x1f4
 937 02ae 00       		.byte	0
 938 02af 0F       		.uleb128 0xf
 939 02b0 64000000 		.4byte	.LVL16
 940 02b4 83080000 		.4byte	0x883
 941 02b8 C3020000 		.4byte	0x2c3
 942 02bc 09       		.uleb128 0x9
 943 02bd 01       		.uleb128 0x1
 944 02be 50       		.byte	0x50
 945 02bf 02       		.uleb128 0x2
 946 02c0 74       		.byte	0x74
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\ccd2vam3.s 			page 33


 947 02c1 00       		.sleb128 0
 948 02c2 00       		.byte	0
 949 02c3 0F       		.uleb128 0xf
 950 02c4 6C000000 		.4byte	.LVL17
 951 02c8 0A080000 		.4byte	0x80a
 952 02cc D8020000 		.4byte	0x2d8
 953 02d0 09       		.uleb128 0x9
 954 02d1 01       		.uleb128 0x1
 955 02d2 50       		.byte	0x50
 956 02d3 03       		.uleb128 0x3
 957 02d4 0A       		.byte	0xa
 958 02d5 F401     		.2byte	0x1f4
 959 02d7 00       		.byte	0
 960 02d8 06       		.uleb128 0x6
 961 02d9 70000000 		.4byte	.LVL18
 962 02dd 8E080000 		.4byte	0x88e
 963 02e1 06       		.uleb128 0x6
 964 02e2 74000000 		.4byte	.LVL19
 965 02e6 99080000 		.4byte	0x899
 966 02ea 0F       		.uleb128 0xf
 967 02eb 7C000000 		.4byte	.LVL20
 968 02ef A4080000 		.4byte	0x8a4
 969 02f3 FF020000 		.4byte	0x2ff
 970 02f7 09       		.uleb128 0x9
 971 02f8 01       		.uleb128 0x1
 972 02f9 50       		.byte	0x50
 973 02fa 03       		.uleb128 0x3
 974 02fb 0A       		.byte	0xa
 975 02fc E803     		.2byte	0x3e8
 976 02fe 00       		.byte	0
 977 02ff 0F       		.uleb128 0xf
 978 0300 84000000 		.4byte	.LVL21
 979 0304 0A080000 		.4byte	0x80a
 980 0308 14030000 		.4byte	0x314
 981 030c 09       		.uleb128 0x9
 982 030d 01       		.uleb128 0x1
 983 030e 50       		.byte	0x50
 984 030f 03       		.uleb128 0x3
 985 0310 0A       		.byte	0xa
 986 0311 F401     		.2byte	0x1f4
 987 0313 00       		.byte	0
 988 0314 06       		.uleb128 0x6
 989 0315 88000000 		.4byte	.LVL22
 990 0319 AF080000 		.4byte	0x8af
 991 031d 06       		.uleb128 0x6
 992 031e 8C000000 		.4byte	.LVL23
 993 0322 BA080000 		.4byte	0x8ba
 994 0326 0F       		.uleb128 0xf
 995 0327 94000000 		.4byte	.LVL24
 996 032b C5080000 		.4byte	0x8c5
 997 032f 3B030000 		.4byte	0x33b
 998 0333 09       		.uleb128 0x9
 999 0334 01       		.uleb128 0x1
 1000 0335 50       		.byte	0x50
 1001 0336 03       		.uleb128 0x3
 1002 0337 0A       		.byte	0xa
 1003 0338 6004     		.2byte	0x460
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\ccd2vam3.s 			page 34


 1004 033a 00       		.byte	0
 1005 033b 0F       		.uleb128 0xf
 1006 033c 9C000000 		.4byte	.LVL25
 1007 0340 0A080000 		.4byte	0x80a
 1008 0344 50030000 		.4byte	0x350
 1009 0348 09       		.uleb128 0x9
 1010 0349 01       		.uleb128 0x1
 1011 034a 50       		.byte	0x50
 1012 034b 03       		.uleb128 0x3
 1013 034c 0A       		.byte	0xa
 1014 034d F401     		.2byte	0x1f4
 1015 034f 00       		.byte	0
 1016 0350 06       		.uleb128 0x6
 1017 0351 A0000000 		.4byte	.LVL26
 1018 0355 D0080000 		.4byte	0x8d0
 1019 0359 06       		.uleb128 0x6
 1020 035a A4000000 		.4byte	.LVL27
 1021 035e DB080000 		.4byte	0x8db
 1022 0362 06       		.uleb128 0x6
 1023 0363 A8000000 		.4byte	.LVL28
 1024 0367 E6080000 		.4byte	0x8e6
 1025 036b 06       		.uleb128 0x6
 1026 036c AC000000 		.4byte	.LVL29
 1027 0370 F1080000 		.4byte	0x8f1
 1028 0374 06       		.uleb128 0x6
 1029 0375 B0000000 		.4byte	.LVL30
 1030 0379 FC080000 		.4byte	0x8fc
 1031 037d 06       		.uleb128 0x6
 1032 037e B4000000 		.4byte	.LVL31
 1033 0382 07090000 		.4byte	0x907
 1034 0386 06       		.uleb128 0x6
 1035 0387 B8000000 		.4byte	.LVL32
 1036 038b 12090000 		.4byte	0x912
 1037 038f 06       		.uleb128 0x6
 1038 0390 BC000000 		.4byte	.LVL33
 1039 0394 1D090000 		.4byte	0x91d
 1040 0398 06       		.uleb128 0x6
 1041 0399 C0000000 		.4byte	.LVL34
 1042 039d 28090000 		.4byte	0x928
 1043 03a1 0F       		.uleb128 0xf
 1044 03a2 C6000000 		.4byte	.LVL35
 1045 03a6 33090000 		.4byte	0x933
 1046 03aa B8030000 		.4byte	0x3b8
 1047 03ae 09       		.uleb128 0x9
 1048 03af 01       		.uleb128 0x1
 1049 03b0 50       		.byte	0x50
 1050 03b1 05       		.uleb128 0x5
 1051 03b2 03       		.byte	0x3
 1052 03b3 00000000 		.4byte	TIH
 1053 03b7 00       		.byte	0
 1054 03b8 0F       		.uleb128 0xf
 1055 03b9 CC000000 		.4byte	.LVL36
 1056 03bd 3E090000 		.4byte	0x93e
 1057 03c1 CF030000 		.4byte	0x3cf
 1058 03c5 09       		.uleb128 0x9
 1059 03c6 01       		.uleb128 0x1
 1060 03c7 50       		.byte	0x50
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\ccd2vam3.s 			page 35


 1061 03c8 05       		.uleb128 0x5
 1062 03c9 03       		.byte	0x3
 1063 03ca 00000000 		.4byte	StartIH
 1064 03ce 00       		.byte	0
 1065 03cf 0F       		.uleb128 0xf
 1066 03d0 D4000000 		.4byte	.LVL37
 1067 03d4 2B080000 		.4byte	0x82b
 1068 03d8 E6030000 		.4byte	0x3e6
 1069 03dc 09       		.uleb128 0x9
 1070 03dd 01       		.uleb128 0x1
 1071 03de 50       		.byte	0x50
 1072 03df 05       		.uleb128 0x5
 1073 03e0 03       		.byte	0x3
 1074 03e1 18000000 		.4byte	.LC1
 1075 03e5 00       		.byte	0
 1076 03e6 0F       		.uleb128 0xf
 1077 03e7 28010000 		.4byte	.LVL48
 1078 03eb 49090000 		.4byte	0x949
 1079 03ef F9030000 		.4byte	0x3f9
 1080 03f3 09       		.uleb128 0x9
 1081 03f4 01       		.uleb128 0x1
 1082 03f5 50       		.byte	0x50
 1083 03f6 01       		.uleb128 0x1
 1084 03f7 32       		.byte	0x32
 1085 03f8 00       		.byte	0
 1086 03f9 06       		.uleb128 0x6
 1087 03fa 2C010000 		.4byte	.LVL49
 1088 03fe 54090000 		.4byte	0x954
 1089 0402 06       		.uleb128 0x6
 1090 0403 32010000 		.4byte	.LVL50
 1091 0407 49090000 		.4byte	0x949
 1092 040b 0F       		.uleb128 0xf
 1093 040c 42010000 		.4byte	.LVL51
 1094 0410 5F090000 		.4byte	0x95f
 1095 0414 35040000 		.4byte	0x435
 1096 0418 09       		.uleb128 0x9
 1097 0419 01       		.uleb128 0x1
 1098 041a 50       		.byte	0x50
 1099 041b 02       		.uleb128 0x2
 1100 041c 08       		.byte	0x8
 1101 041d D2       		.byte	0xd2
 1102 041e 09       		.uleb128 0x9
 1103 041f 01       		.uleb128 0x1
 1104 0420 51       		.byte	0x51
 1105 0421 01       		.uleb128 0x1
 1106 0422 30       		.byte	0x30
 1107 0423 09       		.uleb128 0x9
 1108 0424 01       		.uleb128 0x1
 1109 0425 52       		.byte	0x52
 1110 0426 01       		.uleb128 0x1
 1111 0427 31       		.byte	0x31
 1112 0428 09       		.uleb128 0x9
 1113 0429 01       		.uleb128 0x1
 1114 042a 53       		.byte	0x53
 1115 042b 01       		.uleb128 0x1
 1116 042c 30       		.byte	0x30
 1117 042d 09       		.uleb128 0x9
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\ccd2vam3.s 			page 36


 1118 042e 02       		.uleb128 0x2
 1119 042f 7D       		.byte	0x7d
 1120 0430 00       		.sleb128 0
 1121 0431 02       		.uleb128 0x2
 1122 0432 08       		.byte	0x8
 1123 0433 AA       		.byte	0xaa
 1124 0434 00       		.byte	0
 1125 0435 0F       		.uleb128 0xf
 1126 0436 64010000 		.4byte	.LVL52
 1127 043a 6A090000 		.4byte	0x96a
 1128 043e 4F040000 		.4byte	0x44f
 1129 0442 09       		.uleb128 0x9
 1130 0443 01       		.uleb128 0x1
 1131 0444 50       		.byte	0x50
 1132 0445 02       		.uleb128 0x2
 1133 0446 08       		.byte	0x8
 1134 0447 5A       		.byte	0x5a
 1135 0448 09       		.uleb128 0x9
 1136 0449 01       		.uleb128 0x1
 1137 044a 51       		.byte	0x51
 1138 044b 02       		.uleb128 0x2
 1139 044c 08       		.byte	0x8
 1140 044d AA       		.byte	0xaa
 1141 044e 00       		.byte	0
 1142 044f 06       		.uleb128 0x6
 1143 0450 68010000 		.4byte	.LVL53
 1144 0454 75090000 		.4byte	0x975
 1145 0458 0F       		.uleb128 0xf
 1146 0459 7A010000 		.4byte	.LVL54
 1147 045d 5F090000 		.4byte	0x95f
 1148 0461 83040000 		.4byte	0x483
 1149 0465 09       		.uleb128 0x9
 1150 0466 01       		.uleb128 0x1
 1151 0467 50       		.byte	0x50
 1152 0468 03       		.uleb128 0x3
 1153 0469 0A       		.byte	0xa
 1154 046a 2602     		.2byte	0x226
 1155 046c 09       		.uleb128 0x9
 1156 046d 01       		.uleb128 0x1
 1157 046e 51       		.byte	0x51
 1158 046f 01       		.uleb128 0x1
 1159 0470 30       		.byte	0x30
 1160 0471 09       		.uleb128 0x9
 1161 0472 01       		.uleb128 0x1
 1162 0473 52       		.byte	0x52
 1163 0474 01       		.uleb128 0x1
 1164 0475 31       		.byte	0x31
 1165 0476 09       		.uleb128 0x9
 1166 0477 01       		.uleb128 0x1
 1167 0478 53       		.byte	0x53
 1168 0479 01       		.uleb128 0x1
 1169 047a 31       		.byte	0x31
 1170 047b 09       		.uleb128 0x9
 1171 047c 02       		.uleb128 0x2
 1172 047d 7D       		.byte	0x7d
 1173 047e 00       		.sleb128 0
 1174 047f 02       		.uleb128 0x2
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\ccd2vam3.s 			page 37


 1175 0480 74       		.byte	0x74
 1176 0481 00       		.sleb128 0
 1177 0482 00       		.byte	0
 1178 0483 0F       		.uleb128 0xf
 1179 0484 82010000 		.4byte	.LVL55
 1180 0488 6A090000 		.4byte	0x96a
 1181 048c 9D040000 		.4byte	0x49d
 1182 0490 09       		.uleb128 0x9
 1183 0491 01       		.uleb128 0x1
 1184 0492 50       		.byte	0x50
 1185 0493 02       		.uleb128 0x2
 1186 0494 08       		.byte	0x8
 1187 0495 5A       		.byte	0x5a
 1188 0496 09       		.uleb128 0x9
 1189 0497 01       		.uleb128 0x1
 1190 0498 51       		.byte	0x51
 1191 0499 02       		.uleb128 0x2
 1192 049a 74       		.byte	0x74
 1193 049b 00       		.sleb128 0
 1194 049c 00       		.byte	0
 1195 049d 08       		.uleb128 0x8
 1196 049e 90010000 		.4byte	.LVL56
 1197 04a2 5F090000 		.4byte	0x95f
 1198 04a6 09       		.uleb128 0x9
 1199 04a7 01       		.uleb128 0x1
 1200 04a8 50       		.byte	0x50
 1201 04a9 02       		.uleb128 0x2
 1202 04aa 08       		.byte	0x8
 1203 04ab 28       		.byte	0x28
 1204 04ac 09       		.uleb128 0x9
 1205 04ad 01       		.uleb128 0x1
 1206 04ae 51       		.byte	0x51
 1207 04af 01       		.uleb128 0x1
 1208 04b0 30       		.byte	0x30
 1209 04b1 09       		.uleb128 0x9
 1210 04b2 01       		.uleb128 0x1
 1211 04b3 52       		.byte	0x52
 1212 04b4 01       		.uleb128 0x1
 1213 04b5 30       		.byte	0x30
 1214 04b6 09       		.uleb128 0x9
 1215 04b7 01       		.uleb128 0x1
 1216 04b8 53       		.byte	0x53
 1217 04b9 01       		.uleb128 0x1
 1218 04ba 34       		.byte	0x34
 1219 04bb 09       		.uleb128 0x9
 1220 04bc 02       		.uleb128 0x2
 1221 04bd 7D       		.byte	0x7d
 1222 04be 00       		.sleb128 0
 1223 04bf 02       		.uleb128 0x2
 1224 04c0 74       		.byte	0x74
 1225 04c1 00       		.sleb128 0
 1226 04c2 00       		.byte	0
 1227 04c3 00       		.byte	0
 1228 04c4 10       		.uleb128 0x10
 1229 04c5 A7060000 		.4byte	.LASF21
 1230 04c9 04       		.byte	0x4
 1231 04ca 1207     		.2byte	0x712
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\ccd2vam3.s 			page 38


 1232 04cc D0040000 		.4byte	0x4d0
 1233 04d0 11       		.uleb128 0x11
 1234 04d1 76000000 		.4byte	0x76
 1235 04d5 12       		.uleb128 0x12
 1236 04d6 9B010000 		.4byte	.LASF22
 1237 04da 05       		.byte	0x5
 1238 04db 1E       		.byte	0x1e
 1239 04dc 68000000 		.4byte	0x68
 1240 04e0 05       		.uleb128 0x5
 1241 04e1 03       		.byte	0x3
 1242 04e2 00000000 		.4byte	driveStraightEnable
 1243 04e6 12       		.uleb128 0x12
 1244 04e7 FD020000 		.4byte	.LASF23
 1245 04eb 01       		.byte	0x1
 1246 04ec 2C       		.byte	0x2c
 1247 04ed 68000000 		.4byte	0x68
 1248 04f1 05       		.uleb128 0x5
 1249 04f2 03       		.byte	0x3
 1250 04f3 00000000 		.4byte	currentPuckRackScanningIndex
 1251 04f7 13       		.uleb128 0x13
 1252 04f8 68000000 		.4byte	0x68
 1253 04fc 07050000 		.4byte	0x507
 1254 0500 14       		.uleb128 0x14
 1255 0501 9D000000 		.4byte	0x9d
 1256 0505 04       		.byte	0x4
 1257 0506 00       		.byte	0
 1258 0507 12       		.uleb128 0x12
 1259 0508 D7000000 		.4byte	.LASF24
 1260 050c 01       		.byte	0x1
 1261 050d 2A       		.byte	0x2a
 1262 050e F7040000 		.4byte	0x4f7
 1263 0512 05       		.uleb128 0x5
 1264 0513 03       		.byte	0x3
 1265 0514 00000000 		.4byte	puckRackColours
 1266 0518 12       		.uleb128 0x12
 1267 0519 E7000000 		.4byte	.LASF25
 1268 051d 01       		.byte	0x1
 1269 051e 2D       		.byte	0x2d
 1270 051f F7040000 		.4byte	0x4f7
 1271 0523 05       		.uleb128 0x5
 1272 0524 03       		.byte	0x3
 1273 0525 00000000 		.4byte	puckRackOffsetsFromWest
 1274 0529 12       		.uleb128 0x12
 1275 052a 92010000 		.4byte	.LASF26
 1276 052e 01       		.byte	0x1
 1277 052f 25       		.byte	0x25
 1278 0530 68000000 		.4byte	0x68
 1279 0534 05       		.uleb128 0x5
 1280 0535 03       		.byte	0x3
 1281 0536 00000000 		.4byte	sweeping
 1282 053a 13       		.uleb128 0x13
 1283 053b 81000000 		.4byte	0x81
 1284 053f 4A050000 		.4byte	0x54a
 1285 0543 14       		.uleb128 0x14
 1286 0544 9D000000 		.4byte	0x9d
 1287 0548 03       		.byte	0x3
 1288 0549 00       		.byte	0
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\ccd2vam3.s 			page 39


 1289 054a 12       		.uleb128 0x12
 1290 054b 35040000 		.4byte	.LASF27
 1291 054f 01       		.byte	0x1
 1292 0550 26       		.byte	0x26
 1293 0551 3A050000 		.4byte	0x53a
 1294 0555 05       		.uleb128 0x5
 1295 0556 03       		.byte	0x3
 1296 0557 00000000 		.4byte	block_edge_location
 1297 055b 12       		.uleb128 0x12
 1298 055c D8020000 		.4byte	.LASF28
 1299 0560 06       		.byte	0x6
 1300 0561 86       		.byte	0x86
 1301 0562 81000000 		.4byte	0x81
 1302 0566 05       		.uleb128 0x5
 1303 0567 03       		.byte	0x3
 1304 0568 00000000 		.4byte	puckPileLocation
 1305 056c 12       		.uleb128 0x12
 1306 056d 87000000 		.4byte	.LASF29
 1307 0571 01       		.byte	0x1
 1308 0572 4F       		.byte	0x4f
 1309 0573 33000000 		.4byte	0x33
 1310 0577 05       		.uleb128 0x5
 1311 0578 03       		.byte	0x3
 1312 0579 00000000 		.4byte	drivingForwardFlag
 1313 057d 12       		.uleb128 0x12
 1314 057e E9020000 		.4byte	.LASF30
 1315 0582 01       		.byte	0x1
 1316 0583 50       		.byte	0x50
 1317 0584 33000000 		.4byte	0x33
 1318 0588 05       		.uleb128 0x5
 1319 0589 03       		.byte	0x3
 1320 058a 00000000 		.4byte	drivingBackwardFlag
 1321 058e 12       		.uleb128 0x12
 1322 058f 40000000 		.4byte	.LASF31
 1323 0593 01       		.byte	0x1
 1324 0594 51       		.byte	0x51
 1325 0595 33000000 		.4byte	0x33
 1326 0599 05       		.uleb128 0x5
 1327 059a 03       		.byte	0x3
 1328 059b 00000000 		.4byte	turningLeftFlag
 1329 059f 12       		.uleb128 0x12
 1330 05a0 11020000 		.4byte	.LASF32
 1331 05a4 01       		.byte	0x1
 1332 05a5 52       		.byte	0x52
 1333 05a6 33000000 		.4byte	0x33
 1334 05aa 05       		.uleb128 0x5
 1335 05ab 03       		.byte	0x3
 1336 05ac 00000000 		.4byte	turningRightFlag
 1337 05b0 12       		.uleb128 0x12
 1338 05b1 6B070000 		.4byte	.LASF33
 1339 05b5 05       		.byte	0x5
 1340 05b6 2C       		.byte	0x2c
 1341 05b7 68000000 		.4byte	0x68
 1342 05bb 05       		.uleb128 0x5
 1343 05bc 03       		.byte	0x3
 1344 05bd 00000000 		.4byte	initialisation
 1345 05c1 13       		.uleb128 0x13
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\ccd2vam3.s 			page 40


 1346 05c2 8F000000 		.4byte	0x8f
 1347 05c6 D1050000 		.4byte	0x5d1
 1348 05ca 14       		.uleb128 0x14
 1349 05cb 9D000000 		.4byte	0x9d
 1350 05cf 1F       		.byte	0x1f
 1351 05d0 00       		.byte	0
 1352 05d1 12       		.uleb128 0x12
 1353 05d2 68060000 		.4byte	.LASF34
 1354 05d6 01       		.byte	0x1
 1355 05d7 20       		.byte	0x20
 1356 05d8 C1050000 		.4byte	0x5c1
 1357 05dc 05       		.uleb128 0x5
 1358 05dd 03       		.byte	0x3
 1359 05de 00000000 		.4byte	output
 1360 05e2 15       		.uleb128 0x15
 1361 05e3 26010000 		.4byte	.LASF35
 1362 05e7 06       		.byte	0x6
 1363 05e8 A4       		.byte	0xa4
 1364 05e9 F7040000 		.4byte	0x4f7
 1365 05ed 12       		.uleb128 0x12
 1366 05ee 57030000 		.4byte	.LASF36
 1367 05f2 01       		.byte	0x1
 1368 05f3 5E       		.byte	0x5e
 1369 05f4 68000000 		.4byte	0x68
 1370 05f8 05       		.uleb128 0x5
 1371 05f9 03       		.byte	0x3
 1372 05fa 00000000 		.4byte	colour_flag
 1373 05fe 12       		.uleb128 0x12
 1374 05ff 36030000 		.4byte	.LASF37
 1375 0603 01       		.byte	0x1
 1376 0604 23       		.byte	0x23
 1377 0605 68000000 		.4byte	0x68
 1378 0609 05       		.uleb128 0x5
 1379 060a 03       		.byte	0x3
 1380 060b 00000000 		.4byte	state
 1381 060f 12       		.uleb128 0x12
 1382 0610 65050000 		.4byte	.LASF38
 1383 0614 01       		.byte	0x1
 1384 0615 64       		.byte	0x64
 1385 0616 68000000 		.4byte	0x68
 1386 061a 05       		.uleb128 0x5
 1387 061b 03       		.byte	0x3
 1388 061c 00000000 		.4byte	moving
 1389 0620 12       		.uleb128 0x12
 1390 0621 3E010000 		.4byte	.LASF39
 1391 0625 05       		.byte	0x5
 1392 0626 2E       		.byte	0x2e
 1393 0627 68000000 		.4byte	0x68
 1394 062b 05       		.uleb128 0x5
 1395 062c 03       		.byte	0x3
 1396 062d 00000000 		.4byte	ultrasonic_flag
 1397 0631 12       		.uleb128 0x12
 1398 0632 A6040000 		.4byte	.LASF40
 1399 0636 01       		.byte	0x1
 1400 0637 45       		.byte	0x45
 1401 0638 68000000 		.4byte	0x68
 1402 063c 05       		.uleb128 0x5
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\ccd2vam3.s 			page 41


 1403 063d 03       		.byte	0x3
 1404 063e 00000000 		.4byte	currentOrientation
 1405 0642 13       		.uleb128 0x13
 1406 0643 68000000 		.4byte	0x68
 1407 0647 52060000 		.4byte	0x652
 1408 064b 14       		.uleb128 0x14
 1409 064c 9D000000 		.4byte	0x9d
 1410 0650 02       		.byte	0x2
 1411 0651 00       		.byte	0
 1412 0652 12       		.uleb128 0x12
 1413 0653 FB050000 		.4byte	.LASF41
 1414 0657 01       		.byte	0x1
 1415 0658 2B       		.byte	0x2b
 1416 0659 42060000 		.4byte	0x642
 1417 065d 05       		.uleb128 0x5
 1418 065e 03       		.byte	0x3
 1419 065f 00000000 		.4byte	puckConstructionPlan
 1420 0663 12       		.uleb128 0x12
 1421 0664 CC040000 		.4byte	.LASF42
 1422 0668 01       		.byte	0x1
 1423 0669 68       		.byte	0x68
 1424 066a 68000000 		.4byte	0x68
 1425 066e 05       		.uleb128 0x5
 1426 066f 03       		.byte	0x3
 1427 0670 00000000 		.4byte	current_stage
 1428 0674 12       		.uleb128 0x12
 1429 0675 4C050000 		.4byte	.LASF43
 1430 0679 01       		.byte	0x1
 1431 067a 5F       		.byte	0x5f
 1432 067b 68000000 		.4byte	0x68
 1433 067f 05       		.uleb128 0x5
 1434 0680 03       		.byte	0x3
 1435 0681 00000000 		.4byte	colour_sensing_algorithm
 1436 0685 12       		.uleb128 0x12
 1437 0686 C4010000 		.4byte	.LASF44
 1438 068a 01       		.byte	0x1
 1439 068b 24       		.byte	0x24
 1440 068c 68000000 		.4byte	0x68
 1441 0690 05       		.uleb128 0x5
 1442 0691 03       		.byte	0x3
 1443 0692 00000000 		.4byte	running
 1444 0696 12       		.uleb128 0x12
 1445 0697 AF010000 		.4byte	.LASF45
 1446 069b 01       		.byte	0x1
 1447 069c 29       		.byte	0x29
 1448 069d 68000000 		.4byte	0x68
 1449 06a1 05       		.uleb128 0x5
 1450 06a2 03       		.byte	0x3
 1451 06a3 00000000 		.4byte	currentPuckStackSize
 1452 06a7 12       		.uleb128 0x12
 1453 06a8 39050000 		.4byte	.LASF46
 1454 06ac 01       		.byte	0x1
 1455 06ad 33       		.byte	0x33
 1456 06ae 81000000 		.4byte	0x81
 1457 06b2 05       		.uleb128 0x5
 1458 06b3 03       		.byte	0x3
 1459 06b4 00000000 		.4byte	horizontalPuckGrid
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\ccd2vam3.s 			page 42


 1460 06b8 12       		.uleb128 0x12
 1461 06b9 C7000000 		.4byte	.LASF47
 1462 06bd 01       		.byte	0x1
 1463 06be 37       		.byte	0x37
 1464 06bf 68000000 		.4byte	0x68
 1465 06c3 05       		.uleb128 0x5
 1466 06c4 03       		.byte	0x3
 1467 06c5 00000000 		.4byte	beginNavigation
 1468 06c9 12       		.uleb128 0x12
 1469 06ca 4A070000 		.4byte	.LASF48
 1470 06ce 01       		.byte	0x1
 1471 06cf 39       		.byte	0x39
 1472 06d0 68000000 		.4byte	0x68
 1473 06d4 05       		.uleb128 0x5
 1474 06d5 03       		.byte	0x3
 1475 06d6 00000000 		.4byte	pathToPucks
 1476 06da 12       		.uleb128 0x12
 1477 06db 8A050000 		.4byte	.LASF49
 1478 06df 01       		.byte	0x1
 1479 06e0 3A       		.byte	0x3a
 1480 06e1 68000000 		.4byte	0x68
 1481 06e5 05       		.uleb128 0x5
 1482 06e6 03       		.byte	0x3
 1483 06e7 00000000 		.4byte	pathPastBlock
 1484 06eb 12       		.uleb128 0x12
 1485 06ec C5020000 		.4byte	.LASF50
 1486 06f0 01       		.byte	0x1
 1487 06f1 3E       		.byte	0x3e
 1488 06f2 33000000 		.4byte	0x33
 1489 06f6 05       		.uleb128 0x5
 1490 06f7 03       		.byte	0x3
 1491 06f8 00000000 		.4byte	blockEastClearance
 1492 06fc 12       		.uleb128 0x12
 1493 06fd 32060000 		.4byte	.LASF51
 1494 0701 01       		.byte	0x1
 1495 0702 3F       		.byte	0x3f
 1496 0703 33000000 		.4byte	0x33
 1497 0707 05       		.uleb128 0x5
 1498 0708 03       		.byte	0x3
 1499 0709 00000000 		.4byte	blockWestClearance
 1500 070d 12       		.uleb128 0x12
 1501 070e 22020000 		.4byte	.LASF52
 1502 0712 01       		.byte	0x1
 1503 0713 40       		.byte	0x40
 1504 0714 33000000 		.4byte	0x33
 1505 0718 05       		.uleb128 0x5
 1506 0719 03       		.byte	0x3
 1507 071a 00000000 		.4byte	puckEastClearance
 1508 071e 12       		.uleb128 0x12
 1509 071f E4010000 		.4byte	.LASF53
 1510 0723 01       		.byte	0x1
 1511 0724 41       		.byte	0x41
 1512 0725 33000000 		.4byte	0x33
 1513 0729 05       		.uleb128 0x5
 1514 072a 03       		.byte	0x3
 1515 072b 00000000 		.4byte	puckWestClearance
 1516 072f 13       		.uleb128 0x13
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\ccd2vam3.s 			page 43


 1517 0730 81000000 		.4byte	0x81
 1518 0734 3F070000 		.4byte	0x73f
 1519 0738 14       		.uleb128 0x14
 1520 0739 9D000000 		.4byte	0x9d
 1521 073d 01       		.byte	0x1
 1522 073e 00       		.byte	0
 1523 073f 12       		.uleb128 0x12
 1524 0740 69000000 		.4byte	.LASF54
 1525 0744 01       		.byte	0x1
 1526 0745 43       		.byte	0x43
 1527 0746 2F070000 		.4byte	0x72f
 1528 074a 05       		.uleb128 0x5
 1529 074b 03       		.byte	0x3
 1530 074c 00000000 		.4byte	currentPosition
 1531 0750 12       		.uleb128 0x12
 1532 0751 7A050000 		.4byte	.LASF55
 1533 0755 01       		.byte	0x1
 1534 0756 44       		.byte	0x44
 1535 0757 2F070000 		.4byte	0x72f
 1536 075b 05       		.uleb128 0x5
 1537 075c 03       		.byte	0x3
 1538 075d 00000000 		.4byte	desiredPosition
 1539 0761 12       		.uleb128 0x12
 1540 0762 FF000000 		.4byte	.LASF56
 1541 0766 01       		.byte	0x1
 1542 0767 46       		.byte	0x46
 1543 0768 68000000 		.4byte	0x68
 1544 076c 05       		.uleb128 0x5
 1545 076d 03       		.byte	0x3
 1546 076e 00000000 		.4byte	desiredOrientation
 1547 0772 12       		.uleb128 0x12
 1548 0773 2D040000 		.4byte	.LASF57
 1549 0777 01       		.byte	0x1
 1550 0778 48       		.byte	0x48
 1551 0779 33000000 		.4byte	0x33
 1552 077d 05       		.uleb128 0x5
 1553 077e 03       		.byte	0x3
 1554 077f 00000000 		.4byte	moveNow
 1555 0783 12       		.uleb128 0x12
 1556 0784 45060000 		.4byte	.LASF58
 1557 0788 01       		.byte	0x1
 1558 0789 55       		.byte	0x55
 1559 078a 33000000 		.4byte	0x33
 1560 078e 05       		.uleb128 0x5
 1561 078f 03       		.byte	0x3
 1562 0790 00000000 		.4byte	moveLeftAllowed
 1563 0794 12       		.uleb128 0x12
 1564 0795 7D060000 		.4byte	.LASF59
 1565 0799 01       		.byte	0x1
 1566 079a 56       		.byte	0x56
 1567 079b 33000000 		.4byte	0x33
 1568 079f 05       		.uleb128 0x5
 1569 07a0 03       		.byte	0x3
 1570 07a1 00000000 		.4byte	moveRightAllowed
 1571 07a5 12       		.uleb128 0x12
 1572 07a6 B9040000 		.4byte	.LASF60
 1573 07aa 01       		.byte	0x1
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\ccd2vam3.s 			page 44


 1574 07ab 57       		.byte	0x57
 1575 07ac 33000000 		.4byte	0x33
 1576 07b0 05       		.uleb128 0x5
 1577 07b1 03       		.byte	0x3
 1578 07b2 00000000 		.4byte	moveForwardAllowed
 1579 07b6 12       		.uleb128 0x12
 1580 07b7 63010000 		.4byte	.LASF61
 1581 07bb 01       		.byte	0x1
 1582 07bc 58       		.byte	0x58
 1583 07bd 33000000 		.4byte	0x33
 1584 07c1 05       		.uleb128 0x5
 1585 07c2 03       		.byte	0x3
 1586 07c3 00000000 		.4byte	moveBackwardAllowed
 1587 07c7 12       		.uleb128 0x12
 1588 07c8 8D040000 		.4byte	.LASF62
 1589 07cc 01       		.byte	0x1
 1590 07cd 5D       		.byte	0x5d
 1591 07ce 68000000 		.4byte	0x68
 1592 07d2 05       		.uleb128 0x5
 1593 07d3 03       		.byte	0x3
 1594 07d4 00000000 		.4byte	idac_value
 1595 07d8 12       		.uleb128 0x12
 1596 07d9 26050000 		.4byte	.LASF63
 1597 07dd 01       		.byte	0x1
 1598 07de 66       		.byte	0x66
 1599 07df E9070000 		.4byte	0x7e9
 1600 07e3 05       		.uleb128 0x5
 1601 07e4 03       		.byte	0x3
 1602 07e5 00000000 		.4byte	PLAN_SCAN_VERTICAL
 1603 07e9 16       		.uleb128 0x16
 1604 07ea 68000000 		.4byte	0x68
 1605 07ee 12       		.uleb128 0x12
 1606 07ef 8E060000 		.4byte	.LASF64
 1607 07f3 01       		.byte	0x1
 1608 07f4 6C       		.byte	0x6c
 1609 07f5 68000000 		.4byte	0x68
 1610 07f9 05       		.uleb128 0x5
 1611 07fa 03       		.byte	0x3
 1612 07fb 00000000 		.4byte	distance_returned_global
 1613 07ff 17       		.uleb128 0x17
 1614 0800 F6010000 		.4byte	.LASF65
 1615 0804 F6010000 		.4byte	.LASF65
 1616 0808 05       		.byte	0x5
 1617 0809 19       		.byte	0x19
 1618 080a 17       		.uleb128 0x17
 1619 080b 42070000 		.4byte	.LASF66
 1620 080f 42070000 		.4byte	.LASF66
 1621 0813 07       		.byte	0x7
 1622 0814 76       		.byte	0x76
 1623 0815 17       		.uleb128 0x17
 1624 0816 05050000 		.4byte	.LASF67
 1625 081a 05050000 		.4byte	.LASF67
 1626 081e 05       		.byte	0x5
 1627 081f 16       		.byte	0x16
 1628 0820 17       		.uleb128 0x17
 1629 0821 93030000 		.4byte	.LASF68
 1630 0825 93030000 		.4byte	.LASF68
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\ccd2vam3.s 			page 45


 1631 0829 08       		.byte	0x8
 1632 082a E7       		.byte	0xe7
 1633 082b 17       		.uleb128 0x17
 1634 082c EA050000 		.4byte	.LASF69
 1635 0830 EA050000 		.4byte	.LASF69
 1636 0834 09       		.byte	0x9
 1637 0835 8B       		.byte	0x8b
 1638 0836 17       		.uleb128 0x17
 1639 0837 F9040000 		.4byte	.LASF70
 1640 083b F9040000 		.4byte	.LASF70
 1641 083f 0A       		.byte	0xa
 1642 0840 3D       		.byte	0x3d
 1643 0841 17       		.uleb128 0x17
 1644 0842 3C030000 		.4byte	.LASF71
 1645 0846 3C030000 		.4byte	.LASF71
 1646 084a 09       		.byte	0x9
 1647 084b 54       		.byte	0x54
 1648 084c 17       		.uleb128 0x17
 1649 084d 74020000 		.4byte	.LASF72
 1650 0851 74020000 		.4byte	.LASF72
 1651 0855 0B       		.byte	0xb
 1652 0856 3A       		.byte	0x3a
 1653 0857 17       		.uleb128 0x17
 1654 0858 98040000 		.4byte	.LASF73
 1655 085c 98040000 		.4byte	.LASF73
 1656 0860 0C       		.byte	0xc
 1657 0861 3C       		.byte	0x3c
 1658 0862 17       		.uleb128 0x17
 1659 0863 B3030000 		.4byte	.LASF74
 1660 0867 B3030000 		.4byte	.LASF74
 1661 086b 0C       		.byte	0xc
 1662 086c 40       		.byte	0x40
 1663 086d 17       		.uleb128 0x17
 1664 086e AB050000 		.4byte	.LASF75
 1665 0872 AB050000 		.4byte	.LASF75
 1666 0876 0C       		.byte	0xc
 1667 0877 41       		.byte	0x41
 1668 0878 17       		.uleb128 0x17
 1669 0879 A0020000 		.4byte	.LASF76
 1670 087d A0020000 		.4byte	.LASF76
 1671 0881 0D       		.byte	0xd
 1672 0882 2F       		.byte	0x2f
 1673 0883 17       		.uleb128 0x17
 1674 0884 60040000 		.4byte	.LASF77
 1675 0888 60040000 		.4byte	.LASF77
 1676 088c 0E       		.byte	0xe
 1677 088d 2F       		.byte	0x2f
 1678 088e 17       		.uleb128 0x17
 1679 088f 9B030000 		.4byte	.LASF78
 1680 0893 9B030000 		.4byte	.LASF78
 1681 0897 0F       		.byte	0xf
 1682 0898 19       		.byte	0x19
 1683 0899 17       		.uleb128 0x17
 1684 089a 56070000 		.4byte	.LASF79
 1685 089e 56070000 		.4byte	.LASF79
 1686 08a2 10       		.byte	0x10
 1687 08a3 92       		.byte	0x92
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\ccd2vam3.s 			page 46


 1688 08a4 17       		.uleb128 0x17
 1689 08a5 1A030000 		.4byte	.LASF80
 1690 08a9 1A030000 		.4byte	.LASF80
 1691 08ad 10       		.byte	0x10
 1692 08ae C3       		.byte	0xc3
 1693 08af 17       		.uleb128 0x17
 1694 08b0 4E010000 		.4byte	.LASF81
 1695 08b4 4E010000 		.4byte	.LASF81
 1696 08b8 10       		.byte	0x10
 1697 08b9 DC       		.byte	0xdc
 1698 08ba 17       		.uleb128 0x17
 1699 08bb CC010000 		.4byte	.LASF82
 1700 08bf CC010000 		.4byte	.LASF82
 1701 08c3 11       		.byte	0x11
 1702 08c4 92       		.byte	0x92
 1703 08c5 17       		.uleb128 0x17
 1704 08c6 DA040000 		.4byte	.LASF83
 1705 08ca DA040000 		.4byte	.LASF83
 1706 08ce 11       		.byte	0x11
 1707 08cf C3       		.byte	0xc3
 1708 08d0 17       		.uleb128 0x17
 1709 08d1 10060000 		.4byte	.LASF84
 1710 08d5 10060000 		.4byte	.LASF84
 1711 08d9 11       		.byte	0x11
 1712 08da DC       		.byte	0xdc
 1713 08db 17       		.uleb128 0x17
 1714 08dc 7B030000 		.4byte	.LASF85
 1715 08e0 7B030000 		.4byte	.LASF85
 1716 08e4 12       		.byte	0x12
 1717 08e5 92       		.byte	0x92
 1718 08e6 17       		.uleb128 0x17
 1719 08e7 63030000 		.4byte	.LASF86
 1720 08eb 63030000 		.4byte	.LASF86
 1721 08ef 12       		.byte	0x12
 1722 08f0 DC       		.byte	0xdc
 1723 08f1 17       		.uleb128 0x17
 1724 08f2 87020000 		.4byte	.LASF87
 1725 08f6 87020000 		.4byte	.LASF87
 1726 08fa 13       		.byte	0x13
 1727 08fb 92       		.byte	0x92
 1728 08fc 17       		.uleb128 0x17
 1729 08fd 5B020000 		.4byte	.LASF88
 1730 0901 5B020000 		.4byte	.LASF88
 1731 0905 13       		.byte	0x13
 1732 0906 DC       		.byte	0xdc
 1733 0907 17       		.uleb128 0x17
 1734 0908 27000000 		.4byte	.LASF89
 1735 090c 27000000 		.4byte	.LASF89
 1736 0910 14       		.byte	0x14
 1737 0911 48       		.byte	0x48
 1738 0912 17       		.uleb128 0x17
 1739 0913 9A000000 		.4byte	.LASF90
 1740 0917 9A000000 		.4byte	.LASF90
 1741 091b 15       		.byte	0x15
 1742 091c 48       		.byte	0x48
 1743 091d 17       		.uleb128 0x17
 1744 091e 6C050000 		.4byte	.LASF91
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\ccd2vam3.s 			page 47


 1745 0922 6C050000 		.4byte	.LASF91
 1746 0926 16       		.byte	0x16
 1747 0927 5A       		.byte	0x5a
 1748 0928 17       		.uleb128 0x17
 1749 0929 77010000 		.4byte	.LASF92
 1750 092d 77010000 		.4byte	.LASF92
 1751 0931 16       		.byte	0x16
 1752 0932 5E       		.byte	0x5e
 1753 0933 17       		.uleb128 0x17
 1754 0934 79000000 		.4byte	.LASF93
 1755 0938 79000000 		.4byte	.LASF93
 1756 093c 17       		.byte	0x17
 1757 093d 18       		.byte	0x18
 1758 093e 17       		.uleb128 0x17
 1759 093f D5050000 		.4byte	.LASF94
 1760 0943 D5050000 		.4byte	.LASF94
 1761 0947 18       		.byte	0x18
 1762 0948 18       		.byte	0x18
 1763 0949 17       		.uleb128 0x17
 1764 094a 3A020000 		.4byte	.LASF95
 1765 094e 3A020000 		.4byte	.LASF95
 1766 0952 19       		.byte	0x19
 1767 0953 0F       		.byte	0xf
 1768 0954 17       		.uleb128 0x17
 1769 0955 00000000 		.4byte	.LASF96
 1770 0959 00000000 		.4byte	.LASF96
 1771 095d 19       		.byte	0x19
 1772 095e 10       		.byte	0x10
 1773 095f 17       		.uleb128 0x17
 1774 0960 55060000 		.4byte	.LASF97
 1775 0964 55060000 		.4byte	.LASF97
 1776 0968 1A       		.byte	0x1a
 1777 0969 11       		.byte	0x11
 1778 096a 17       		.uleb128 0x17
 1779 096b B9020000 		.4byte	.LASF98
 1780 096f B9020000 		.4byte	.LASF98
 1781 0973 1B       		.byte	0x1b
 1782 0974 10       		.byte	0x10
 1783 0975 17       		.uleb128 0x17
 1784 0976 50000000 		.4byte	.LASF99
 1785 097a 50000000 		.4byte	.LASF99
 1786 097e 1A       		.byte	0x1a
 1787 097f 10       		.byte	0x10
 1788 0980 00       		.byte	0
 1789              		.section	.debug_abbrev,"",%progbits
 1790              	.Ldebug_abbrev0:
 1791 0000 01       		.uleb128 0x1
 1792 0001 11       		.uleb128 0x11
 1793 0002 01       		.byte	0x1
 1794 0003 25       		.uleb128 0x25
 1795 0004 0E       		.uleb128 0xe
 1796 0005 13       		.uleb128 0x13
 1797 0006 0B       		.uleb128 0xb
 1798 0007 03       		.uleb128 0x3
 1799 0008 0E       		.uleb128 0xe
 1800 0009 1B       		.uleb128 0x1b
 1801 000a 0E       		.uleb128 0xe
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\ccd2vam3.s 			page 48


 1802 000b 55       		.uleb128 0x55
 1803 000c 17       		.uleb128 0x17
 1804 000d 11       		.uleb128 0x11
 1805 000e 01       		.uleb128 0x1
 1806 000f 10       		.uleb128 0x10
 1807 0010 17       		.uleb128 0x17
 1808 0011 00       		.byte	0
 1809 0012 00       		.byte	0
 1810 0013 02       		.uleb128 0x2
 1811 0014 24       		.uleb128 0x24
 1812 0015 00       		.byte	0
 1813 0016 0B       		.uleb128 0xb
 1814 0017 0B       		.uleb128 0xb
 1815 0018 3E       		.uleb128 0x3e
 1816 0019 0B       		.uleb128 0xb
 1817 001a 03       		.uleb128 0x3
 1818 001b 0E       		.uleb128 0xe
 1819 001c 00       		.byte	0
 1820 001d 00       		.byte	0
 1821 001e 03       		.uleb128 0x3
 1822 001f 16       		.uleb128 0x16
 1823 0020 00       		.byte	0
 1824 0021 03       		.uleb128 0x3
 1825 0022 0E       		.uleb128 0xe
 1826 0023 3A       		.uleb128 0x3a
 1827 0024 0B       		.uleb128 0xb
 1828 0025 3B       		.uleb128 0x3b
 1829 0026 0B       		.uleb128 0xb
 1830 0027 49       		.uleb128 0x49
 1831 0028 13       		.uleb128 0x13
 1832 0029 00       		.byte	0
 1833 002a 00       		.byte	0
 1834 002b 04       		.uleb128 0x4
 1835 002c 24       		.uleb128 0x24
 1836 002d 00       		.byte	0
 1837 002e 0B       		.uleb128 0xb
 1838 002f 0B       		.uleb128 0xb
 1839 0030 3E       		.uleb128 0x3e
 1840 0031 0B       		.uleb128 0xb
 1841 0032 03       		.uleb128 0x3
 1842 0033 08       		.uleb128 0x8
 1843 0034 00       		.byte	0
 1844 0035 00       		.byte	0
 1845 0036 05       		.uleb128 0x5
 1846 0037 2E       		.uleb128 0x2e
 1847 0038 01       		.byte	0x1
 1848 0039 3F       		.uleb128 0x3f
 1849 003a 19       		.uleb128 0x19
 1850 003b 03       		.uleb128 0x3
 1851 003c 08       		.uleb128 0x8
 1852 003d 3A       		.uleb128 0x3a
 1853 003e 0B       		.uleb128 0xb
 1854 003f 3B       		.uleb128 0x3b
 1855 0040 0B       		.uleb128 0xb
 1856 0041 27       		.uleb128 0x27
 1857 0042 19       		.uleb128 0x19
 1858 0043 11       		.uleb128 0x11
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\ccd2vam3.s 			page 49


 1859 0044 01       		.uleb128 0x1
 1860 0045 12       		.uleb128 0x12
 1861 0046 06       		.uleb128 0x6
 1862 0047 40       		.uleb128 0x40
 1863 0048 18       		.uleb128 0x18
 1864 0049 9742     		.uleb128 0x2117
 1865 004b 19       		.uleb128 0x19
 1866 004c 01       		.uleb128 0x1
 1867 004d 13       		.uleb128 0x13
 1868 004e 00       		.byte	0
 1869 004f 00       		.byte	0
 1870 0050 06       		.uleb128 0x6
 1871 0051 898201   		.uleb128 0x4109
 1872 0054 00       		.byte	0
 1873 0055 11       		.uleb128 0x11
 1874 0056 01       		.uleb128 0x1
 1875 0057 31       		.uleb128 0x31
 1876 0058 13       		.uleb128 0x13
 1877 0059 00       		.byte	0
 1878 005a 00       		.byte	0
 1879 005b 07       		.uleb128 0x7
 1880 005c 2E       		.uleb128 0x2e
 1881 005d 01       		.byte	0x1
 1882 005e 3F       		.uleb128 0x3f
 1883 005f 19       		.uleb128 0x19
 1884 0060 03       		.uleb128 0x3
 1885 0061 0E       		.uleb128 0xe
 1886 0062 3A       		.uleb128 0x3a
 1887 0063 0B       		.uleb128 0xb
 1888 0064 3B       		.uleb128 0x3b
 1889 0065 0B       		.uleb128 0xb
 1890 0066 27       		.uleb128 0x27
 1891 0067 19       		.uleb128 0x19
 1892 0068 11       		.uleb128 0x11
 1893 0069 01       		.uleb128 0x1
 1894 006a 12       		.uleb128 0x12
 1895 006b 06       		.uleb128 0x6
 1896 006c 40       		.uleb128 0x40
 1897 006d 18       		.uleb128 0x18
 1898 006e 9742     		.uleb128 0x2117
 1899 0070 19       		.uleb128 0x19
 1900 0071 01       		.uleb128 0x1
 1901 0072 13       		.uleb128 0x13
 1902 0073 00       		.byte	0
 1903 0074 00       		.byte	0
 1904 0075 08       		.uleb128 0x8
 1905 0076 898201   		.uleb128 0x4109
 1906 0079 01       		.byte	0x1
 1907 007a 11       		.uleb128 0x11
 1908 007b 01       		.uleb128 0x1
 1909 007c 31       		.uleb128 0x31
 1910 007d 13       		.uleb128 0x13
 1911 007e 00       		.byte	0
 1912 007f 00       		.byte	0
 1913 0080 09       		.uleb128 0x9
 1914 0081 8A8201   		.uleb128 0x410a
 1915 0084 00       		.byte	0
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\ccd2vam3.s 			page 50


 1916 0085 02       		.uleb128 0x2
 1917 0086 18       		.uleb128 0x18
 1918 0087 9142     		.uleb128 0x2111
 1919 0089 18       		.uleb128 0x18
 1920 008a 00       		.byte	0
 1921 008b 00       		.byte	0
 1922 008c 0A       		.uleb128 0xa
 1923 008d 2E       		.uleb128 0x2e
 1924 008e 01       		.byte	0x1
 1925 008f 3F       		.uleb128 0x3f
 1926 0090 19       		.uleb128 0x19
 1927 0091 03       		.uleb128 0x3
 1928 0092 0E       		.uleb128 0xe
 1929 0093 3A       		.uleb128 0x3a
 1930 0094 0B       		.uleb128 0xb
 1931 0095 3B       		.uleb128 0x3b
 1932 0096 0B       		.uleb128 0xb
 1933 0097 27       		.uleb128 0x27
 1934 0098 19       		.uleb128 0x19
 1935 0099 49       		.uleb128 0x49
 1936 009a 13       		.uleb128 0x13
 1937 009b 8701     		.uleb128 0x87
 1938 009d 19       		.uleb128 0x19
 1939 009e 11       		.uleb128 0x11
 1940 009f 01       		.uleb128 0x1
 1941 00a0 12       		.uleb128 0x12
 1942 00a1 06       		.uleb128 0x6
 1943 00a2 40       		.uleb128 0x40
 1944 00a3 18       		.uleb128 0x18
 1945 00a4 9742     		.uleb128 0x2117
 1946 00a6 19       		.uleb128 0x19
 1947 00a7 01       		.uleb128 0x1
 1948 00a8 13       		.uleb128 0x13
 1949 00a9 00       		.byte	0
 1950 00aa 00       		.byte	0
 1951 00ab 0B       		.uleb128 0xb
 1952 00ac 34       		.uleb128 0x34
 1953 00ad 00       		.byte	0
 1954 00ae 03       		.uleb128 0x3
 1955 00af 0E       		.uleb128 0xe
 1956 00b0 3A       		.uleb128 0x3a
 1957 00b1 0B       		.uleb128 0xb
 1958 00b2 3B       		.uleb128 0x3b
 1959 00b3 0B       		.uleb128 0xb
 1960 00b4 49       		.uleb128 0x49
 1961 00b5 13       		.uleb128 0x13
 1962 00b6 1C       		.uleb128 0x1c
 1963 00b7 0B       		.uleb128 0xb
 1964 00b8 00       		.byte	0
 1965 00b9 00       		.byte	0
 1966 00ba 0C       		.uleb128 0xc
 1967 00bb 0B       		.uleb128 0xb
 1968 00bc 01       		.byte	0x1
 1969 00bd 11       		.uleb128 0x11
 1970 00be 01       		.uleb128 0x1
 1971 00bf 12       		.uleb128 0x12
 1972 00c0 06       		.uleb128 0x6
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\ccd2vam3.s 			page 51


 1973 00c1 01       		.uleb128 0x1
 1974 00c2 13       		.uleb128 0x13
 1975 00c3 00       		.byte	0
 1976 00c4 00       		.byte	0
 1977 00c5 0D       		.uleb128 0xd
 1978 00c6 34       		.uleb128 0x34
 1979 00c7 00       		.byte	0
 1980 00c8 03       		.uleb128 0x3
 1981 00c9 08       		.uleb128 0x8
 1982 00ca 3A       		.uleb128 0x3a
 1983 00cb 0B       		.uleb128 0xb
 1984 00cc 3B       		.uleb128 0x3b
 1985 00cd 0B       		.uleb128 0xb
 1986 00ce 49       		.uleb128 0x49
 1987 00cf 13       		.uleb128 0x13
 1988 00d0 02       		.uleb128 0x2
 1989 00d1 17       		.uleb128 0x17
 1990 00d2 00       		.byte	0
 1991 00d3 00       		.byte	0
 1992 00d4 0E       		.uleb128 0xe
 1993 00d5 0B       		.uleb128 0xb
 1994 00d6 01       		.byte	0x1
 1995 00d7 55       		.uleb128 0x55
 1996 00d8 17       		.uleb128 0x17
 1997 00d9 01       		.uleb128 0x1
 1998 00da 13       		.uleb128 0x13
 1999 00db 00       		.byte	0
 2000 00dc 00       		.byte	0
 2001 00dd 0F       		.uleb128 0xf
 2002 00de 898201   		.uleb128 0x4109
 2003 00e1 01       		.byte	0x1
 2004 00e2 11       		.uleb128 0x11
 2005 00e3 01       		.uleb128 0x1
 2006 00e4 31       		.uleb128 0x31
 2007 00e5 13       		.uleb128 0x13
 2008 00e6 01       		.uleb128 0x1
 2009 00e7 13       		.uleb128 0x13
 2010 00e8 00       		.byte	0
 2011 00e9 00       		.byte	0
 2012 00ea 10       		.uleb128 0x10
 2013 00eb 34       		.uleb128 0x34
 2014 00ec 00       		.byte	0
 2015 00ed 03       		.uleb128 0x3
 2016 00ee 0E       		.uleb128 0xe
 2017 00ef 3A       		.uleb128 0x3a
 2018 00f0 0B       		.uleb128 0xb
 2019 00f1 3B       		.uleb128 0x3b
 2020 00f2 05       		.uleb128 0x5
 2021 00f3 49       		.uleb128 0x49
 2022 00f4 13       		.uleb128 0x13
 2023 00f5 3F       		.uleb128 0x3f
 2024 00f6 19       		.uleb128 0x19
 2025 00f7 3C       		.uleb128 0x3c
 2026 00f8 19       		.uleb128 0x19
 2027 00f9 00       		.byte	0
 2028 00fa 00       		.byte	0
 2029 00fb 11       		.uleb128 0x11
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\ccd2vam3.s 			page 52


 2030 00fc 35       		.uleb128 0x35
 2031 00fd 00       		.byte	0
 2032 00fe 49       		.uleb128 0x49
 2033 00ff 13       		.uleb128 0x13
 2034 0100 00       		.byte	0
 2035 0101 00       		.byte	0
 2036 0102 12       		.uleb128 0x12
 2037 0103 34       		.uleb128 0x34
 2038 0104 00       		.byte	0
 2039 0105 03       		.uleb128 0x3
 2040 0106 0E       		.uleb128 0xe
 2041 0107 3A       		.uleb128 0x3a
 2042 0108 0B       		.uleb128 0xb
 2043 0109 3B       		.uleb128 0x3b
 2044 010a 0B       		.uleb128 0xb
 2045 010b 49       		.uleb128 0x49
 2046 010c 13       		.uleb128 0x13
 2047 010d 3F       		.uleb128 0x3f
 2048 010e 19       		.uleb128 0x19
 2049 010f 02       		.uleb128 0x2
 2050 0110 18       		.uleb128 0x18
 2051 0111 00       		.byte	0
 2052 0112 00       		.byte	0
 2053 0113 13       		.uleb128 0x13
 2054 0114 01       		.uleb128 0x1
 2055 0115 01       		.byte	0x1
 2056 0116 49       		.uleb128 0x49
 2057 0117 13       		.uleb128 0x13
 2058 0118 01       		.uleb128 0x1
 2059 0119 13       		.uleb128 0x13
 2060 011a 00       		.byte	0
 2061 011b 00       		.byte	0
 2062 011c 14       		.uleb128 0x14
 2063 011d 21       		.uleb128 0x21
 2064 011e 00       		.byte	0
 2065 011f 49       		.uleb128 0x49
 2066 0120 13       		.uleb128 0x13
 2067 0121 2F       		.uleb128 0x2f
 2068 0122 0B       		.uleb128 0xb
 2069 0123 00       		.byte	0
 2070 0124 00       		.byte	0
 2071 0125 15       		.uleb128 0x15
 2072 0126 34       		.uleb128 0x34
 2073 0127 00       		.byte	0
 2074 0128 03       		.uleb128 0x3
 2075 0129 0E       		.uleb128 0xe
 2076 012a 3A       		.uleb128 0x3a
 2077 012b 0B       		.uleb128 0xb
 2078 012c 3B       		.uleb128 0x3b
 2079 012d 0B       		.uleb128 0xb
 2080 012e 49       		.uleb128 0x49
 2081 012f 13       		.uleb128 0x13
 2082 0130 3F       		.uleb128 0x3f
 2083 0131 19       		.uleb128 0x19
 2084 0132 3C       		.uleb128 0x3c
 2085 0133 19       		.uleb128 0x19
 2086 0134 00       		.byte	0
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\ccd2vam3.s 			page 53


 2087 0135 00       		.byte	0
 2088 0136 16       		.uleb128 0x16
 2089 0137 26       		.uleb128 0x26
 2090 0138 00       		.byte	0
 2091 0139 49       		.uleb128 0x49
 2092 013a 13       		.uleb128 0x13
 2093 013b 00       		.byte	0
 2094 013c 00       		.byte	0
 2095 013d 17       		.uleb128 0x17
 2096 013e 2E       		.uleb128 0x2e
 2097 013f 00       		.byte	0
 2098 0140 3F       		.uleb128 0x3f
 2099 0141 19       		.uleb128 0x19
 2100 0142 3C       		.uleb128 0x3c
 2101 0143 19       		.uleb128 0x19
 2102 0144 6E       		.uleb128 0x6e
 2103 0145 0E       		.uleb128 0xe
 2104 0146 03       		.uleb128 0x3
 2105 0147 0E       		.uleb128 0xe
 2106 0148 3A       		.uleb128 0x3a
 2107 0149 0B       		.uleb128 0xb
 2108 014a 3B       		.uleb128 0x3b
 2109 014b 0B       		.uleb128 0xb
 2110 014c 00       		.byte	0
 2111 014d 00       		.byte	0
 2112 014e 00       		.byte	0
 2113              		.section	.debug_loc,"",%progbits
 2114              	.Ldebug_loc0:
 2115              	.LLST0:
 2116 0000 D4000000 		.4byte	.LVL37
 2117 0004 D8000000 		.4byte	.LVL38
 2118 0008 0200     		.2byte	0x2
 2119 000a 30       		.byte	0x30
 2120 000b 9F       		.byte	0x9f
 2121 000c D8000000 		.4byte	.LVL38
 2122 0010 BC010000 		.4byte	.LFE66
 2123 0014 0100     		.2byte	0x1
 2124 0016 55       		.byte	0x55
 2125 0017 00000000 		.4byte	0
 2126 001b 00000000 		.4byte	0
 2127              	.LLST1:
 2128 001f D8000000 		.4byte	.LVL38
 2129 0023 FE000000 		.4byte	.LVL44
 2130 0027 0100     		.2byte	0x1
 2131 0029 54       		.byte	0x54
 2132 002a 00010000 		.4byte	.LVL45
 2133 002e 0C010000 		.4byte	.LVL47
 2134 0032 0100     		.2byte	0x1
 2135 0034 54       		.byte	0x54
 2136 0035 00000000 		.4byte	0
 2137 0039 00000000 		.4byte	0
 2138              		.section	.debug_aranges,"",%progbits
 2139 0000 2C000000 		.4byte	0x2c
 2140 0004 0200     		.2byte	0x2
 2141 0006 00000000 		.4byte	.Ldebug_info0
 2142 000a 04       		.byte	0x4
 2143 000b 00       		.byte	0
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\ccd2vam3.s 			page 54


 2144 000c 0000     		.2byte	0
 2145 000e 0000     		.2byte	0
 2146 0010 00000000 		.4byte	.LFB64
 2147 0014 08000000 		.4byte	.LFE64-.LFB64
 2148 0018 00000000 		.4byte	.LFB65
 2149 001c 20000000 		.4byte	.LFE65-.LFB65
 2150 0020 00000000 		.4byte	.LFB66
 2151 0024 BC010000 		.4byte	.LFE66-.LFB66
 2152 0028 00000000 		.4byte	0
 2153 002c 00000000 		.4byte	0
 2154              		.section	.debug_ranges,"",%progbits
 2155              	.Ldebug_ranges0:
 2156 0000 D8000000 		.4byte	.LBB3
 2157 0004 FE000000 		.4byte	.LBE3
 2158 0008 00010000 		.4byte	.LBB4
 2159 000c 04010000 		.4byte	.LBE4
 2160 0010 00000000 		.4byte	0
 2161 0014 00000000 		.4byte	0
 2162 0018 00000000 		.4byte	.LFB64
 2163 001c 08000000 		.4byte	.LFE64
 2164 0020 00000000 		.4byte	.LFB65
 2165 0024 20000000 		.4byte	.LFE65
 2166 0028 00000000 		.4byte	.LFB66
 2167 002c BC010000 		.4byte	.LFE66
 2168 0030 00000000 		.4byte	0
 2169 0034 00000000 		.4byte	0
 2170              		.section	.debug_line,"",%progbits
 2171              	.Ldebug_line0:
 2172 0000 C1030000 		.section	.debug_str,"MS",%progbits,1
 2172      02001203 
 2172      00000201 
 2172      FB0E0D00 
 2172      01010101 
 2173              	.LASF96:
 2174 0000 61726D4F 		.ascii	"armOpen\000"
 2174      70656E00 
 2175              	.LASF20:
 2176 0008 756C7472 		.ascii	"ultrasonic_testing\000"
 2176      61736F6E 
 2176      69635F74 
 2176      65737469 
 2176      6E6700
 2177              	.LASF0:
 2178 001b 7369676E 		.ascii	"signed char\000"
 2178      65642063 
 2178      68617200 
 2179              	.LASF89:
 2180 0027 4D6F746F 		.ascii	"Motor_Left_Decoder_Start\000"
 2180      725F4C65 
 2180      66745F44 
 2180      65636F64 
 2180      65725F53 
 2181              	.LASF31:
 2182 0040 7475726E 		.ascii	"turningLeftFlag\000"
 2182      696E674C 
 2182      65667446 
 2182      6C616700 
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\ccd2vam3.s 			page 55


 2183              	.LASF99:
 2184 0050 73747261 		.ascii	"straightAdjust\000"
 2184      69676874 
 2184      41646A75 
 2184      737400
 2185              	.LASF2:
 2186 005f 73686F72 		.ascii	"short int\000"
 2186      7420696E 
 2186      7400
 2187              	.LASF54:
 2188 0069 63757272 		.ascii	"currentPosition\000"
 2188      656E7450 
 2188      6F736974 
 2188      696F6E00 
 2189              	.LASF93:
 2190 0079 536F6E69 		.ascii	"Sonic_StartEx\000"
 2190      635F5374 
 2190      61727445 
 2190      7800
 2191              	.LASF29:
 2192 0087 64726976 		.ascii	"drivingForwardFlag\000"
 2192      696E6746 
 2192      6F727761 
 2192      7264466C 
 2192      616700
 2193              	.LASF90:
 2194 009a 4D6F746F 		.ascii	"Motor_Right_Decoder_Start\000"
 2194      725F5269 
 2194      6768745F 
 2194      4465636F 
 2194      6465725F 
 2195              	.LASF17:
 2196 00b4 636F6C6F 		.ascii	"colour_calibration\000"
 2196      75725F63 
 2196      616C6962 
 2196      72617469 
 2196      6F6E00
 2197              	.LASF47:
 2198 00c7 62656769 		.ascii	"beginNavigation\000"
 2198      6E4E6176 
 2198      69676174 
 2198      696F6E00 
 2199              	.LASF24:
 2200 00d7 7075636B 		.ascii	"puckRackColours\000"
 2200      5261636B 
 2200      436F6C6F 
 2200      75727300 
 2201              	.LASF25:
 2202 00e7 7075636B 		.ascii	"puckRackOffsetsFromWest\000"
 2202      5261636B 
 2202      4F666673 
 2202      65747346 
 2202      726F6D57 
 2203              	.LASF56:
 2204 00ff 64657369 		.ascii	"desiredOrientation\000"
 2204      7265644F 
 2204      7269656E 
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\ccd2vam3.s 			page 56


 2204      74617469 
 2204      6F6E00
 2205              	.LASF14:
 2206 0112 6C6F6E67 		.ascii	"long double\000"
 2206      20646F75 
 2206      626C6500 
 2207              	.LASF16:
 2208 011e 53746172 		.ascii	"StartIH\000"
 2208      74494800 
 2209              	.LASF35:
 2210 0126 756C7472 		.ascii	"ultrasonic_distances_mm\000"
 2210      61736F6E 
 2210      69635F64 
 2210      69737461 
 2210      6E636573 
 2211              	.LASF39:
 2212 013e 756C7472 		.ascii	"ultrasonic_flag\000"
 2212      61736F6E 
 2212      69635F66 
 2212      6C616700 
 2213              	.LASF81:
 2214 014e 5261636B 		.ascii	"Rack_Servo_PWM_Sleep\000"
 2214      5F536572 
 2214      766F5F50 
 2214      574D5F53 
 2214      6C656570 
 2215              	.LASF61:
 2216 0163 6D6F7665 		.ascii	"moveBackwardAllowed\000"
 2216      4261636B 
 2216      77617264 
 2216      416C6C6F 
 2216      77656400 
 2217              	.LASF92:
 2218 0177 54696D65 		.ascii	"Timer_1_ReadStatusRegister\000"
 2218      725F315F 
 2218      52656164 
 2218      53746174 
 2218      75735265 
 2219              	.LASF26:
 2220 0192 73776565 		.ascii	"sweeping\000"
 2220      70696E67 
 2220      00
 2221              	.LASF22:
 2222 019b 64726976 		.ascii	"driveStraightEnable\000"
 2222      65537472 
 2222      61696768 
 2222      74456E61 
 2222      626C6500 
 2223              	.LASF45:
 2224 01af 63757272 		.ascii	"currentPuckStackSize\000"
 2224      656E7450 
 2224      75636B53 
 2224      7461636B 
 2224      53697A65 
 2225              	.LASF44:
 2226 01c4 72756E6E 		.ascii	"running\000"
 2226      696E6700 
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\ccd2vam3.s 			page 57


 2227              	.LASF82:
 2228 01cc 47726970 		.ascii	"Gripper_Servo_PWM_Start\000"
 2228      7065725F 
 2228      53657276 
 2228      6F5F5057 
 2228      4D5F5374 
 2229              	.LASF53:
 2230 01e4 7075636B 		.ascii	"puckWestClearance\000"
 2230      57657374 
 2230      436C6561 
 2230      72616E63 
 2230      6500
 2231              	.LASF65:
 2232 01f6 756C7472 		.ascii	"ultrasonicInterruptHandler\000"
 2232      61736F6E 
 2232      6963496E 
 2232      74657272 
 2232      75707448 
 2233              	.LASF32:
 2234 0211 7475726E 		.ascii	"turningRightFlag\000"
 2234      696E6752 
 2234      69676874 
 2234      466C6167 
 2234      00
 2235              	.LASF52:
 2236 0222 7075636B 		.ascii	"puckEastClearance\000"
 2236      45617374 
 2236      436C6561 
 2236      72616E63 
 2236      6500
 2237              	.LASF11:
 2238 0234 666C6F61 		.ascii	"float\000"
 2238      7400
 2239              	.LASF95:
 2240 023a 6368616E 		.ascii	"changeHeightToPuck\000"
 2240      67654865 
 2240      69676874 
 2240      546F5075 
 2240      636B00
 2241              	.LASF6:
 2242 024d 6C6F6E67 		.ascii	"long long int\000"
 2242      206C6F6E 
 2242      6720696E 
 2242      7400
 2243              	.LASF88:
 2244 025b 4D6F746F 		.ascii	"Motor_Right_Driver_Sleep\000"
 2244      725F5269 
 2244      6768745F 
 2244      44726976 
 2244      65725F53 
 2245              	.LASF72:
 2246 0274 4144435F 		.ascii	"ADC_Start\000"
 2246      53746172 
 2246      7400
 2247              	.LASF4:
 2248 027e 6C6F6E67 		.ascii	"long int\000"
 2248      20696E74 
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\ccd2vam3.s 			page 58


 2248      00
 2249              	.LASF87:
 2250 0287 4D6F746F 		.ascii	"Motor_Right_Driver_Start\000"
 2250      725F5269 
 2250      6768745F 
 2250      44726976 
 2250      65725F53 
 2251              	.LASF76:
 2252 02a0 636F6E74 		.ascii	"control_photodiode_Write\000"
 2252      726F6C5F 
 2252      70686F74 
 2252      6F64696F 
 2252      64655F57 
 2253              	.LASF98:
 2254 02b9 6D697368 		.ascii	"mishaSwivel\000"
 2254      61537769 
 2254      76656C00 
 2255              	.LASF50:
 2256 02c5 626C6F63 		.ascii	"blockEastClearance\000"
 2256      6B456173 
 2256      74436C65 
 2256      6172616E 
 2256      636500
 2257              	.LASF28:
 2258 02d8 7075636B 		.ascii	"puckPileLocation\000"
 2258      50696C65 
 2258      4C6F6361 
 2258      74696F6E 
 2258      00
 2259              	.LASF30:
 2260 02e9 64726976 		.ascii	"drivingBackwardFlag\000"
 2260      696E6742 
 2260      61636B77 
 2260      61726446 
 2260      6C616700 
 2261              	.LASF23:
 2262 02fd 63757272 		.ascii	"currentPuckRackScanningIndex\000"
 2262      656E7450 
 2262      75636B52 
 2262      61636B53 
 2262      63616E6E 
 2263              	.LASF80:
 2264 031a 5261636B 		.ascii	"Rack_Servo_PWM_WriteCompare\000"
 2264      5F536572 
 2264      766F5F50 
 2264      574D5F57 
 2264      72697465 
 2265              	.LASF37:
 2266 0336 73746174 		.ascii	"state\000"
 2266      6500
 2267              	.LASF71:
 2268 033c 55415254 		.ascii	"UART_1_Start\000"
 2268      5F315F53 
 2268      74617274 
 2268      00
 2269              	.LASF1:
 2270 0349 756E7369 		.ascii	"unsigned char\000"
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\ccd2vam3.s 			page 59


 2270      676E6564 
 2270      20636861 
 2270      7200
 2271              	.LASF36:
 2272 0357 636F6C6F 		.ascii	"colour_flag\000"
 2272      75725F66 
 2272      6C616700 
 2273              	.LASF86:
 2274 0363 4D6F746F 		.ascii	"Motor_Left_Driver_Sleep\000"
 2274      725F4C65 
 2274      66745F44 
 2274      72697665 
 2274      725F536C 
 2275              	.LASF85:
 2276 037b 4D6F746F 		.ascii	"Motor_Left_Driver_Start\000"
 2276      725F4C65 
 2276      66745F44 
 2276      72697665 
 2276      725F5374 
 2277              	.LASF68:
 2278 0393 73707269 		.ascii	"sprintf\000"
 2278      6E746600 
 2279              	.LASF78:
 2280 039b 636F6C6F 		.ascii	"colourSensingInitialise\000"
 2280      75725365 
 2280      6E73696E 
 2280      67496E69 
 2280      7469616C 
 2281              	.LASF74:
 2282 03b3 49444143 		.ascii	"IDAC8_1_SetRange\000"
 2282      385F315F 
 2282      53657452 
 2282      616E6765 
 2282      00
 2283              	.LASF102:
 2284 03c4 5C5C6164 		.ascii	"\\\\ad.monash.edu\\home\\User026\\bamcg3\\Documents"
 2284      2E6D6F6E 
 2284      6173682E 
 2284      6564755C 
 2284      686F6D65 
 2285 03f1 5C476974 		.ascii	"\\GitHub\\ECE3091_Group17\\Group17RobotReal\\Group1"
 2285      4875625C 
 2285      45434533 
 2285      3039315F 
 2285      47726F75 
 2286 0420 37526F62 		.ascii	"7Robot.cydsn\000"
 2286      6F742E63 
 2286      7964736E 
 2286      00
 2287              	.LASF57:
 2288 042d 6D6F7665 		.ascii	"moveNow\000"
 2288      4E6F7700 
 2289              	.LASF27:
 2290 0435 626C6F63 		.ascii	"block_edge_location\000"
 2290      6B5F6564 
 2290      67655F6C 
 2290      6F636174 
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\ccd2vam3.s 			page 60


 2290      696F6E00 
 2291              	.LASF7:
 2292 0449 6C6F6E67 		.ascii	"long long unsigned int\000"
 2292      206C6F6E 
 2292      6720756E 
 2292      7369676E 
 2292      65642069 
 2293              	.LASF77:
 2294 0460 636F6E74 		.ascii	"control_led_Write\000"
 2294      726F6C5F 
 2294      6C65645F 
 2294      57726974 
 2294      6500
 2295              	.LASF18:
 2296 0472 73657276 		.ascii	"servo_testing\000"
 2296      6F5F7465 
 2296      7374696E 
 2296      6700
 2297              	.LASF8:
 2298 0480 756E7369 		.ascii	"unsigned int\000"
 2298      676E6564 
 2298      20696E74 
 2298      00
 2299              	.LASF62:
 2300 048d 69646163 		.ascii	"idac_value\000"
 2300      5F76616C 
 2300      756500
 2301              	.LASF73:
 2302 0498 49444143 		.ascii	"IDAC8_1_Start\000"
 2302      385F315F 
 2302      53746172 
 2302      7400
 2303              	.LASF40:
 2304 04a6 63757272 		.ascii	"currentOrientation\000"
 2304      656E744F 
 2304      7269656E 
 2304      74617469 
 2304      6F6E00
 2305              	.LASF60:
 2306 04b9 6D6F7665 		.ascii	"moveForwardAllowed\000"
 2306      466F7277 
 2306      61726441 
 2306      6C6C6F77 
 2306      656400
 2307              	.LASF42:
 2308 04cc 63757272 		.ascii	"current_stage\000"
 2308      656E745F 
 2308      73746167 
 2308      6500
 2309              	.LASF83:
 2310 04da 47726970 		.ascii	"Gripper_Servo_PWM_WriteCompare\000"
 2310      7065725F 
 2310      53657276 
 2310      6F5F5057 
 2310      4D5F5772 
 2311              	.LASF70:
 2312 04f9 5449415F 		.ascii	"TIA_1_Start\000"
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\ccd2vam3.s 			page 61


 2312      315F5374 
 2312      61727400 
 2313              	.LASF67:
 2314 0505 64697374 		.ascii	"distanceSensor\000"
 2314      616E6365 
 2314      53656E73 
 2314      6F7200
 2315              	.LASF13:
 2316 0514 63686172 		.ascii	"char\000"
 2316      00
 2317              	.LASF103:
 2318 0519 6D61696E 		.ascii	"main\000"
 2318      00
 2319              	.LASF10:
 2320 051e 696E7433 		.ascii	"int32_t\000"
 2320      325F7400 
 2321              	.LASF63:
 2322 0526 504C414E 		.ascii	"PLAN_SCAN_VERTICAL\000"
 2322      5F534341 
 2322      4E5F5645 
 2322      52544943 
 2322      414C00
 2323              	.LASF46:
 2324 0539 686F7269 		.ascii	"horizontalPuckGrid\000"
 2324      7A6F6E74 
 2324      616C5075 
 2324      636B4772 
 2324      696400
 2325              	.LASF43:
 2326 054c 636F6C6F 		.ascii	"colour_sensing_algorithm\000"
 2326      75725F73 
 2326      656E7369 
 2326      6E675F61 
 2326      6C676F72 
 2327              	.LASF38:
 2328 0565 6D6F7669 		.ascii	"moving\000"
 2328      6E6700
 2329              	.LASF91:
 2330 056c 54696D65 		.ascii	"Timer_1_Start\000"
 2330      725F315F 
 2330      53746172 
 2330      7400
 2331              	.LASF55:
 2332 057a 64657369 		.ascii	"desiredPosition\000"
 2332      72656450 
 2332      6F736974 
 2332      696F6E00 
 2333              	.LASF49:
 2334 058a 70617468 		.ascii	"pathPastBlock\000"
 2334      50617374 
 2334      426C6F63 
 2334      6B00
 2335              	.LASF3:
 2336 0598 73686F72 		.ascii	"short unsigned int\000"
 2336      7420756E 
 2336      7369676E 
 2336      65642069 
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\ccd2vam3.s 			page 62


 2336      6E7400
 2337              	.LASF75:
 2338 05ab 49444143 		.ascii	"IDAC8_1_SetValue\000"
 2338      385F315F 
 2338      53657456 
 2338      616C7565 
 2338      00
 2339              	.LASF101:
 2340 05bc 6D61696E 		.ascii	"main.c\000"
 2340      2E6300
 2341              	.LASF5:
 2342 05c3 6C6F6E67 		.ascii	"long unsigned int\000"
 2342      20756E73 
 2342      69676E65 
 2342      6420696E 
 2342      7400
 2343              	.LASF94:
 2344 05d5 53746172 		.ascii	"Start_StartEx\000"
 2344      745F5374 
 2344      61727445 
 2344      7800
 2345              	.LASF12:
 2346 05e3 646F7562 		.ascii	"double\000"
 2346      6C6500
 2347              	.LASF69:
 2348 05ea 55415254 		.ascii	"UART_1_PutString\000"
 2348      5F315F50 
 2348      75745374 
 2348      72696E67 
 2348      00
 2349              	.LASF41:
 2350 05fb 7075636B 		.ascii	"puckConstructionPlan\000"
 2350      436F6E73 
 2350      74727563 
 2350      74696F6E 
 2350      506C616E 
 2351              	.LASF84:
 2352 0610 47726970 		.ascii	"Gripper_Servo_PWM_Sleep\000"
 2352      7065725F 
 2352      53657276 
 2352      6F5F5057 
 2352      4D5F536C 
 2353              	.LASF9:
 2354 0628 5F5F696E 		.ascii	"__int32_t\000"
 2354      7433325F 
 2354      7400
 2355              	.LASF51:
 2356 0632 626C6F63 		.ascii	"blockWestClearance\000"
 2356      6B576573 
 2356      74436C65 
 2356      6172616E 
 2356      636500
 2357              	.LASF58:
 2358 0645 6D6F7665 		.ascii	"moveLeftAllowed\000"
 2358      4C656674 
 2358      416C6C6F 
 2358      77656400 
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\ccd2vam3.s 			page 63


 2359              	.LASF97:
 2360 0655 6D6F7665 		.ascii	"moveUntil\000"
 2360      556E7469 
 2360      6C00
 2361              	.LASF15:
 2362 065f 73697A65 		.ascii	"sizetype\000"
 2362      74797065 
 2362      00
 2363              	.LASF34:
 2364 0668 6F757470 		.ascii	"output\000"
 2364      757400
 2365              	.LASF19:
 2366 066f 6D6F746F 		.ascii	"motor_testing\000"
 2366      725F7465 
 2366      7374696E 
 2366      6700
 2367              	.LASF59:
 2368 067d 6D6F7665 		.ascii	"moveRightAllowed\000"
 2368      52696768 
 2368      74416C6C 
 2368      6F776564 
 2368      00
 2369              	.LASF64:
 2370 068e 64697374 		.ascii	"distance_returned_global\000"
 2370      616E6365 
 2370      5F726574 
 2370      75726E65 
 2370      645F676C 
 2371              	.LASF21:
 2372 06a7 49544D5F 		.ascii	"ITM_RxBuffer\000"
 2372      52784275 
 2372      66666572 
 2372      00
 2373              	.LASF100:
 2374 06b4 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 2374      43313120 
 2374      352E342E 
 2374      31203230 
 2374      31363036 
 2375 06e7 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 2375      20726576 
 2375      6973696F 
 2375      6E203233 
 2375      37373135 
 2376 071a 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 2376      66756E63 
 2376      74696F6E 
 2376      2D736563 
 2376      74696F6E 
 2377              	.LASF66:
 2378 0742 43794465 		.ascii	"CyDelay\000"
 2378      6C617900 
 2379              	.LASF48:
 2380 074a 70617468 		.ascii	"pathToPucks\000"
 2380      546F5075 
 2380      636B7300 
 2381              	.LASF79:
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\ccd2vam3.s 			page 64


 2382 0756 5261636B 		.ascii	"Rack_Servo_PWM_Start\000"
 2382      5F536572 
 2382      766F5F50 
 2382      574D5F53 
 2382      74617274 
 2383              	.LASF33:
 2384 076b 696E6974 		.ascii	"initialisation\000"
 2384      69616C69 
 2384      73617469 
 2384      6F6E00
 2385              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
=======
 197:main.c        ****     
 198:main.c        ****     internal_orientation = EAST;                // robot initial starts in the East direction
 216              		.loc 1 198 0
 217 00b8 0122     		movs	r2, #1
 218 00ba 7D4B     		ldr	r3, .L24+8
 219 00bc 1A60     		str	r2, [r3]
 199:main.c        ****    
 200:main.c        ****     // Timer and ISR instantiation
 201:main.c        ****     Timer_1_Start();
 220              		.loc 1 201 0
 221 00be FFF7FEFF 		bl	Timer_1_Start
 222              	.LVL33:
 202:main.c        ****     Timer_1_ReadStatusRegister();
 223              		.loc 1 202 0
 224 00c2 FFF7FEFF 		bl	Timer_1_ReadStatusRegister
 225              	.LVL34:
 203:main.c        ****     Sonic_StartEx(TIH);
 226              		.loc 1 203 0
 227 00c6 7B48     		ldr	r0, .L24+12
 228 00c8 FFF7FEFF 		bl	Sonic_StartEx
 229              	.LVL35:
 204:main.c        ****     Start_StartEx(StartIH);
 230              		.loc 1 204 0
 231 00cc 7A48     		ldr	r0, .L24+16
 232 00ce FFF7FEFF 		bl	Start_StartEx
 233              	.LVL36:
 205:main.c        ****     beginNavigation = 0;
 234              		.loc 1 205 0
 235 00d2 2C60     		str	r4, [r5]
 206:main.c        ****     
 207:main.c        ****     // Ultrasonic Initialisation & Calibration:
 208:main.c        ****     // The ultrasonics take several test measurements to ensure they are working
 209:main.c        ****         
 210:main.c        ****     UART_1_PutString("Ultrasonic Calibration tests: \n");
 236              		.loc 1 210 0
 237 00d4 7948     		ldr	r0, .L24+20
 238 00d6 FFF7FEFF 		bl	UART_1_PutString
 239              	.LVL37:
 240              	.LBB2:
 211:main.c        ****     for(int j = 0; j < 3; j++) 
 241              		.loc 1 211 0
 242 00da 2546     		mov	r5, r4
 243 00dc 19E0     		b	.L8
 244              	.LVL38:
 245              	.L9:
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccSUHQYZ.s 			page 9


 246              	.LBB3:
 212:main.c        ****     {
 213:main.c        ****         for (int i = 0; i < 5; i++)
 214:main.c        ****         {
 215:main.c        ****             distanceSensor(i);
 247              		.loc 1 215 0 discriminator 3
 248 00de 2046     		mov	r0, r4
 249 00e0 FFF7FEFF 		bl	distanceSensor
 250              	.LVL39:
 216:main.c        ****             CyDelay(100);
 251              		.loc 1 216 0 discriminator 3
 252 00e4 6420     		movs	r0, #100
 253 00e6 FFF7FEFF 		bl	CyDelay
 254              	.LVL40:
 217:main.c        ****             sprintf(output, "%d \t", ultrasonic_distances_mm[i]);
 255              		.loc 1 217 0 discriminator 3
 256 00ea 754E     		ldr	r6, .L24+24
 257 00ec 754B     		ldr	r3, .L24+28
 258 00ee 53F82420 		ldr	r2, [r3, r4, lsl #2]
 259 00f2 7549     		ldr	r1, .L24+32
 260 00f4 3046     		mov	r0, r6
 261 00f6 FFF7FEFF 		bl	sprintf
 262              	.LVL41:
 218:main.c        ****             UART_1_PutString(output);
 263              		.loc 1 218 0 discriminator 3
 264 00fa 3046     		mov	r0, r6
 265 00fc FFF7FEFF 		bl	UART_1_PutString
 266              	.LVL42:
 213:main.c        ****         {
 267              		.loc 1 213 0 discriminator 3
 268 0100 0134     		adds	r4, r4, #1
 269              	.LVL43:
 270 0102 00E0     		b	.L10
 271              	.LVL44:
 272              	.L21:
 273              	.LBE3:
 274 0104 0024     		movs	r4, #0
 275              	.L10:
 276              	.LVL45:
 277              	.LBB4:
 213:main.c        ****         {
 278              		.loc 1 213 0 is_stmt 0 discriminator 1
 279 0106 042C     		cmp	r4, #4
 280 0108 E9DD     		ble	.L9
 281              	.LBE4:
 219:main.c        ****         }
 220:main.c        ****         UART_1_PutString("\n\n");
 282              		.loc 1 220 0 is_stmt 1 discriminator 2
 283 010a 7048     		ldr	r0, .L24+36
 284 010c FFF7FEFF 		bl	UART_1_PutString
 285              	.LVL46:
 211:main.c        ****     {
 286              		.loc 1 211 0 discriminator 2
 287 0110 0135     		adds	r5, r5, #1
 288              	.LVL47:
 289              	.L8:
 211:main.c        ****     {
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccSUHQYZ.s 			page 10


 290              		.loc 1 211 0 is_stmt 0 discriminator 1
 291 0112 022D     		cmp	r5, #2
 292 0114 F6DD     		ble	.L21
 293              	.L16:
 294              	.LBE2:
 221:main.c        ****     }
 222:main.c        ****     
 223:main.c        ****     /*  OLD CODE FROM NIDHIN:
 224:main.c        ****     //Initialising DC motors
 225:main.c        ****     Motor_1_driver_Start();
 226:main.c        ****     Motor_2_driver_Start();
 227:main.c        ****     motorDutyCycleUpdate(0,0,0,0);//Have the motors stand still
 228:main.c        ****     
 229:main.c        ****     
 230:main.c        ****     //Initialising counters
 231:main.c        ****     Motor_1_Encoder_Counts_Start();
 232:main.c        ****     Motor_2_Encoder_Counts_Start();
 233:main.c        ****     
 234:main.c        ****     //Initialising timers
 235:main.c        ****     Drift_Check_Timer_Start();
 236:main.c        ****     
 237:main.c        ****     //Starts and enables the interrupts for the motor encoder counts
 238:main.c        ****     Encoder_Counts_1_Interrupt_StartEx(Encoder_Counts_1_IH); 
 239:main.c        ****     Encoder_Counts_2_Interrupt_StartEx(Encoder_Counts_2_IH);
 240:main.c        ****     Drift_Check_Interrupt_StartEx(Drift_Check_IH);		
 241:main.c        ****     */
 242:main.c        **** 
 243:main.c        ****     // Main Loop for States
 244:main.c        ****         
 245:main.c        ****     for(;;)
 246:main.c        ****     {   
 247:main.c        ****         
 248:main.c        **** 
 249:main.c        **** 
 250:main.c        ****         // Start button is pressed so quit sensing
 251:main.c        **** 
 252:main.c        ****         /*
 253:main.c        ****         while (beginNavigation == 0) {
 254:main.c        ****             distanceCheck();           
 255:main.c        ****             UART_1_PutString("\n");
 256:main.c        ****             CyDelay(1000); // Check distance once a second.
 257:main.c        ****                 
 258:main.c        ****         }
 259:main.c        ****         */
 260:main.c        ****         
 261:main.c        ****         
 262:main.c        ****         // Enter picking up puck state for the moment FOR TESTING
 263:main.c        ****         //colour_sensing_algorithm = 1;
 264:main.c        ****         //control_photodiode_Write(1);
 265:main.c        ****         //state = STATE_FIND_REQUIRED_PUCK;
 266:main.c        ****         
 267:main.c        ****         // Colour Calibration: 
 268:main.c        ****         if (colour_calibration)
 269:main.c        ****         {
 270:main.c        ****             int lock = FALSE;   
 271:main.c        ****             do 
 272:main.c        ****                 {   
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccSUHQYZ.s 			page 11


 273:main.c        ****                     if (lock == FALSE) 
 274:main.c        ****                     {
 275:main.c        ****                         
 276:main.c        ****                         control_photodiode_Write(1);    // Claw
 277:main.c        ****                         changeHeightToPuck(0);
 278:main.c        **** 
 279:main.c        ****                         UART_1_PutString("Count \t BLANK \t RED \t GREEN \t BLUE \t \n");
 280:main.c        ****                         for (int i = 0; i < 50; i++)
 281:main.c        ****                         {
 282:main.c        ****                         sprintf(output, "%d \t", i);
 283:main.c        ****                         UART_1_PutString(output);
 284:main.c        ****                         colourSensingCalibration(); 
 285:main.c        ****                         UART_1_PutString("\n");
 286:main.c        ****                         }         
 287:main.c        ****                         lock = TRUE;    
 288:main.c        ****                     }
 289:main.c        ****             } while (lock == TRUE);    
 290:main.c        ****         }
 291:main.c        ****         
 292:main.c        ****         // Servo Testing:
 293:main.c        ****         if (servo_testing) 
 294:main.c        ****         {
 295:main.c        ****             int lock = FALSE;
 296:main.c        ****             do 
 297:main.c        ****                 {   
 298:main.c        ****                     if (lock == FALSE) 
 299:main.c        ****                     {
 300:main.c        ****                         UART_1_PutString("Servo Testing: ");
 301:main.c        ****                         
 302:main.c        ****                         armMoving();
 303:main.c        ****                         
 304:main.c        ****                         
 305:main.c        ****                         for(int i = 0; i < 4; i++)
 306:main.c        ****                         {
 307:main.c        ****                             changeHeightToPuck(i);
 308:main.c        ****                             CyDelay(1000);
 309:main.c        ****                         }
 310:main.c        **** 
 311:main.c        ****                         lock = TRUE;    
 312:main.c        ****                     }
 313:main.c        ****             } while (lock == TRUE);    
 314:main.c        ****         }    
 315:main.c        ****                 
 316:main.c        ****         // Motor Testing: 
 317:main.c        ****         if (motor_testing)
 318:main.c        ****         {
 319:main.c        ****             int lock = FALSE;
 320:main.c        ****             do 
 321:main.c        ****                 {   
 322:main.c        ****                     if (lock == FALSE) 
 323:main.c        ****                     {
 324:main.c        ****                         UART_1_PutString("Motor Testing: \n");
 325:main.c        **** 
 326:main.c        ****                         //mishaMoveForward();
 327:main.c        ****                         //mishaMoveBackward();
 328:main.c        ****                         //mishaMoveDynamic(-300);
 329:main.c        ****                         
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccSUHQYZ.s 			page 12


 330:main.c        ****                         mishaSwivel(-180, SPEED);
 331:main.c        ****                         
 332:main.c        ****                         lock = TRUE;    
 333:main.c        ****                     }
 334:main.c        ****             } while (lock == TRUE);    
 335:main.c        ****         }    
 336:main.c        ****         
 337:main.c        ****         // Ultrasonic Testing:
 338:main.c        ****         
 339:main.c        ****         if (ultrasonic_testing) 
 340:main.c        ****         {
 341:main.c        ****             int lock = FALSE;
 342:main.c        ****             do 
 343:main.c        ****                 {   
 344:main.c        ****                     if (lock == FALSE) 
 345:main.c        ****                     {
 346:main.c        ****                         UART_1_PutString("Ultrasonic Testing: \n");
 347:main.c        ****                         
 348:main.c        ****                         //armMoving();
 349:main.c        ****                         //straightAdjust();
 350:main.c        ****                         
 351:main.c        ****                         int dick = 2;
 352:main.c        ****                         while(0) {
 353:main.c        ****                             distanceSensor(dick);
 354:main.c        ****                             CyDelay(500);
 355:main.c        ****                             sprintf(output, "%d \t %d \t %d \t %d \t %d \n", ultrasonic_distances_m
 356:main.c        ****                                                      ultrasonic_distances_mm[1],
 357:main.c        ****                                                      ultrasonic_distances_mm[2],
 358:main.c        ****                                                         ultrasonic_distances_mm[3],
 359:main.c        ****                                                         ultrasonic_distances_mm[4]);
 360:main.c        ****                             UART_1_PutString(output);
 361:main.c        ****                         }
 362:main.c        ****                         // 0 gave front left    // front left
 363:main.c        ****                         // 1 gave front right   // front right 
 364:main.c        ****                         // 2 gave back sensor   // side left now??? 
 365:main.c        ****                         // 3 gave side right    // side right 
 366:main.c        ****                         // 4 gave back sensor   // back sensor
 367:main.c        ****                         
 368:main.c        ****                         while(0) {
 369:main.c        ****                             for (int i = 0; i < 5; i++)
 370:main.c        ****                             {
 371:main.c        ****                                 distanceSensor(i);
 372:main.c        ****                                 CyDelay(100);
 373:main.c        ****                                 sprintf(output, "%d \t", ultrasonic_distances_mm[i]);
 374:main.c        ****                                 UART_1_PutString(output);
 375:main.c        ****                             }
 376:main.c        ****                             UART_1_PutString("\n");
 377:main.c        ****                         }
 378:main.c        ****                         
 379:main.c        ****                         
 380:main.c        ****                         
 381:main.c        ****                         
 382:main.c        ****                         // TEST FIRING
 383:main.c        ****                         for (int i = 0; i < 5; i++)
 384:main.c        ****                             {
 385:main.c        ****                                 distanceSensor(i);
 386:main.c        ****                                 CyDelay(100);
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccSUHQYZ.s 			page 13


 387:main.c        ****                                 sprintf(output, "%d \t", ultrasonic_distances_mm[i]);
 388:main.c        ****                                 UART_1_PutString(output);
 389:main.c        ****                             }
 390:main.c        ****                         UART_1_PutString("\n");
 391:main.c        ****                         
 392:main.c        ****                         
 393:main.c        ****                         moveUntil(150, FORWARD, LESS_THAN, FRONT_LEFT, SPEED);              // shou
 394:main.c        ****                         straightAdjust();
 395:main.c        ****                         
 396:main.c        ****                         
 397:main.c        ****                         /*
 398:main.c        ****                         for (int i = 0; i < 5; i++)
 399:main.c        ****                         {
 400:main.c        ****                             sprintf(output, "%d: \t", i);       
 401:main.c        ****                             UART_1_PutString(output);
 402:main.c        ****                         }
 403:main.c        ****                         UART_1_PutString("\n");   
 404:main.c        ****                         
 405:main.c        ****                         
 406:main.c        ****                         for (int i = 0; i < 50; i++) {
 407:main.c        ****                         distanceCheck();
 408:main.c        ****                         CyDelay(200);
 409:main.c        ****                         }
 410:main.c        ****                         
 411:main.c        ****                         */
 412:main.c        ****                         
 413:main.c        ****                         //straightAdjust();
 414:main.c        ****                         
 415:main.c        ****                         
 416:main.c        ****                         lock = TRUE;    
 417:main.c        ****                     }
 418:main.c        ****             } while (lock == TRUE);    
 419:main.c        ****         }    
 420:main.c        **** 
 421:main.c        ****         // Manual state set for testing
 422:main.c        ****         //state = STATE_GO_TO_PUCKS;
 423:main.c        ****         
 424:main.c        ****         
 425:main.c        ****         if (state == STATE_SCAN_PLAN) {              // colour sensing, while switch has not been p
 295              		.loc 1 425 0 is_stmt 1
 296 0116 6E4B     		ldr	r3, .L24+40
 297 0118 5B68     		ldr	r3, [r3, #4]
 298 011a 012B     		cmp	r3, #1
 299 011c 0CD1     		bne	.L11
 300              	.LBB5:
 426:main.c        ****             
 427:main.c        ****             while(0){
 428:main.c        ****                 moveUntil(400, FORWARD, LESS_THAN, FRONT_LEFT, SPEED);
 429:main.c        ****                 mishaMoveDynamic(-450, SPEED);
 430:main.c        ****                 CyDelay(500);   
 431:main.c        ****                 colourSensingInitialise();      // Initialises wall colour sensor against the black
 432:main.c        ****                 CyDelay(500);
 433:main.c        ****                 mishaMoveDynamic(170, SPEED);
 434:main.c        ****                 CyDelay(500);
 435:main.c        ****                 
 436:main.c        ****                 for (int i = 0; i < 5; i++) {                       // scan each of the pucks 
 437:main.c        ****                     puckRackColours[i] = colourSensingOutput();
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccSUHQYZ.s 			page 14


 438:main.c        ****                     CyDelay(500);
 439:main.c        ****                     mishaMoveDynamic(61, SPEED);
 440:main.c        ****                     CyDelay(500);
 441:main.c        ****                 }
 442:main.c        ****             
 443:main.c        ****             }
 444:main.c        **** 
 445:main.c        ****             
 446:main.c        ****             changeOrientation(SOUTH, SPEED);
 301              		.loc 1 446 0
 302 011e AA21     		movs	r1, #170
 303 0120 0220     		movs	r0, #2
 304 0122 FFF7FEFF 		bl	changeOrientation
 305              	.LVL48:
 447:main.c        ****             CyDelay(1000);
 306              		.loc 1 447 0
 307 0126 4FF47A70 		mov	r0, #1000
 308 012a FFF7FEFF 		bl	CyDelay
 309              	.LVL49:
 448:main.c        ****             changeOrientation(EAST, SPEED);
 310              		.loc 1 448 0
 311 012e AA21     		movs	r1, #170
 312 0130 0120     		movs	r0, #1
 313 0132 FFF7FEFF 		bl	changeOrientation
 314              	.LVL50:
 315              	.L12:
 316 0136 FEE7     		b	.L12
 317              	.L11:
 318              	.LBE5:
 449:main.c        ****             
 450:main.c        ****             while(1) {}
 451:main.c        ****             
 452:main.c        ****             straightAdjust();
 453:main.c        ****             moveUntil(-100, BACKWARD, LESS_THAN, BACK, SPEED);
 454:main.c        ****             colourSensingInitialise();      // Initialises wall colour sensor against the black wal
 455:main.c        ****                         
 456:main.c        ****             for (int i = 0; i < 5; i++) { 
 457:main.c        ****                 // scan each of the pucks 
 458:main.c        ****                 //moveUntil(puckRackOffsetsFromWest[i]);
 459:main.c        ****                 puckRackColours[i] = colourSensingOutput();
 460:main.c        ****                 CyDelay(500);
 461:main.c        **** 
 462:main.c        ****             //straightAdjust();
 463:main.c        ****             }
 464:main.c        ****                        
 465:main.c        ****             UART_1_PutString("Found Colours: \n");
 466:main.c        ****             for (int i = 0; i < 5; i++) 
 467:main.c        ****             {
 468:main.c        ****                 sprintf(output, "%i \n", puckRackColours[i]);    // updates UART showing values of 
 469:main.c        ****                 UART_1_PutString(output);
 470:main.c        ****             }
 471:main.c        ****             
 472:main.c        ****             
 473:main.c        ****             control_photodiode_Write(1);    // changes to claw photodiode
 474:main.c        ****             colour_sensing_algorithm = 1;   // changes it to claw algorithm
 475:main.c        ****                        
 476:main.c        ****             //while(1) {}
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccSUHQYZ.s 			page 15


 477:main.c        ****             
 478:main.c        ****             // THEN WE FILTER THE NO PUCK VALUES:
 479:main.c        ****             int puckConstructionPlanIndex = 0; // Will be used to iterate through the 3 puck colour
 480:main.c        ****             
 481:main.c        ****             // Iterate over all 5 rack slots and place the 3 colours into puckConstructionPlan.
 482:main.c        ****             for (int puckRackIndex = 0; puckRackIndex < 5; puckRackIndex++){
 483:main.c        ****                 if (puckRackColours[puckRackIndex] != BLANK && puckConstructionPlanIndex != 3){
 484:main.c        ****                     puckConstructionPlan[puckConstructionPlanIndex] = puckRackColours[puckRackIndex
 485:main.c        ****                     puckConstructionPlanIndex++;
 486:main.c        ****                 }
 487:main.c        ****             }
 488:main.c        ****                     
 489:main.c        ****             // MOVE into the next state: 
 490:main.c        ****             state = STATE_LOCATE_BLOCK_AND_PUCKS;
 491:main.c        ****             
 492:main.c        ****             /*
 493:main.c        ****             if (!moving){
 494:main.c        ****                 moving = 1;
 495:main.c        ****             if (initialisation){moveBackwardIndefinitely(); initialisation = 0;}
 496:main.c        ****             else {moveForwardIndefinitely();}        
 497:main.c        **** 
 498:main.c        ****             moveAndAngle(SCAN_INITIALISE_HORIZONTAL,PLAN_SCAN_VERTICAL,WEST_ANGLE); // Move beyond 
 499:main.c        ****             
 500:main.c        ****             // Read the black wall
 501:main.c        ****             
 502:main.c        ****             for (currentPuckRackScanningIndex = 0; currentPuckRackScanningIndex <= 4; currentPuckRa
 503:main.c        ****                 moveAndAngle(puckRackOffsetsFromWest[currentPuckRackScanningIndex],PLAN_SCAN_VERTIC
 504:main.c        ****                 puckRackColours[currentPuckRackScanningIndex] = colourSensingOutput();
 505:main.c        ****             }
 506:main.c        ****    
 507:main.c        ****             */
 508:main.c        ****         }
 509:main.c        **** 
 510:main.c        ****     	if (state == STATE_LOCATE_BLOCK_AND_PUCKS){
 319              		.loc 1 510 0
 320 0138 022B     		cmp	r3, #2
 321 013a 40F08180 		bne	.L13
 322              	.LBB6:
 511:main.c        ****             
 512:main.c        ****             
 513:main.c        ****             // move away from home base 
 514:main.c        ****             mishaSwivel(-45, SPEED);  
 323              		.loc 1 514 0
 324 013e AA21     		movs	r1, #170
 325 0140 6FF02C00 		mvn	r0, #44
 326 0144 FFF7FEFF 		bl	mishaSwivel
 327              	.LVL51:
 515:main.c        ****             mishaMoveDynamic(-150, SPEED);
 328              		.loc 1 515 0
 329 0148 AA21     		movs	r1, #170
 330 014a 6FF09500 		mvn	r0, #149
 331 014e FFF7FEFF 		bl	mishaMoveDynamic
 332              	.LVL52:
 516:main.c        ****             mishaSwivel(45, SPEED);
 333              		.loc 1 516 0
 334 0152 AA21     		movs	r1, #170
 335 0154 2D20     		movs	r0, #45
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccSUHQYZ.s 			page 16


 336 0156 FFF7FEFF 		bl	mishaSwivel
 337              	.LVL53:
 517:main.c        ****             mishaMoveDynamic(200, SPEED);
 338              		.loc 1 517 0
 339 015a AA21     		movs	r1, #170
 340 015c C820     		movs	r0, #200
 341 015e FFF7FEFF 		bl	mishaMoveDynamic
 342              	.LVL54:
 518:main.c        ****             mishaSwivel(90, SPEED);
 343              		.loc 1 518 0
 344 0162 AA21     		movs	r1, #170
 345 0164 5A20     		movs	r0, #90
 346 0166 FFF7FEFF 		bl	mishaSwivel
 347              	.LVL55:
 519:main.c        ****             mishaMoveDynamic(500, SPEED);
 348              		.loc 1 519 0
 349 016a AA21     		movs	r1, #170
 350 016c 4FF4FA70 		mov	r0, #500
 351 0170 FFF7FEFF 		bl	mishaMoveDynamic
 352              	.LVL56:
 520:main.c        ****             
 521:main.c        ****             
 522:main.c        ****             // Move until construction zone            
 523:main.c        ****             moveUntil(100, FORWARD, LESS_THAN, FRONT_LEFT, SPEED);
 353              		.loc 1 523 0
 354 0174 AA24     		movs	r4, #170
 355 0176 0094     		str	r4, [sp]
 356 0178 0023     		movs	r3, #0
 357 017a 1A46     		mov	r2, r3
 358 017c 0121     		movs	r1, #1
 359 017e 6420     		movs	r0, #100
 360 0180 FFF7FEFF 		bl	moveUntil
 361              	.LVL57:
 524:main.c        ****             control_led_Write(1);
 362              		.loc 1 524 0
 363 0184 0120     		movs	r0, #1
 364 0186 FFF7FEFF 		bl	control_led_Write
 365              	.LVL58:
 525:main.c        ****             CyDelay(1000);
 366              		.loc 1 525 0
 367 018a 4FF47A70 		mov	r0, #1000
 368 018e FFF7FEFF 		bl	CyDelay
 369              	.LVL59:
 526:main.c        ****             control_led_Write(0);
 370              		.loc 1 526 0
 371 0192 0020     		movs	r0, #0
 372 0194 FFF7FEFF 		bl	control_led_Write
 373              	.LVL60:
 527:main.c        ****             CyDelay(500);
 374              		.loc 1 527 0
 375 0198 4FF4FA70 		mov	r0, #500
 376 019c FFF7FEFF 		bl	CyDelay
 377              	.LVL61:
 528:main.c        ****             //straightAdjust();
 529:main.c        ****             
 530:main.c        ****             // SCAN FOR BLOCKS:
 531:main.c        ****             
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccSUHQYZ.s 			page 17


 532:main.c        ****             //distanceSensor(SIDE_LEFT);  // takes how far we are away from home base wall
 533:main.c        ****             //int block_check = ARENA_WIDTH - BLOCK_ZONE_SOUTH - WIDTH_SENSOR_TO_SENSOR - ultrasoni
 534:main.c        ****                 // TAKES our distance from north wall, 
 535:main.c        ****                 // takes distance from arena, takes away 
 536:main.c        ****                 // minus 50 is a tolerance
 537:main.c        ****             
 538:main.c        ****             int block_check = 500;
 539:main.c        ****             
 540:main.c        ****             while(0) {
 541:main.c        ****             distanceSensor(SIDE_RIGHT);
 542:main.c        ****             CyDelay(SENSOR_DELAY_MIN);
 543:main.c        ****             sprintf(output, "%d \t", ultrasonic_distances_mm[SIDE_RIGHT]);
 544:main.c        ****             UART_1_PutString(output);
 545:main.c        ****             }
 546:main.c        **** 
 547:main.c        ****             
 548:main.c        ****             moveUntil(block_check, LESS_THAN, BACKWARD, SIDE_RIGHT, SPEED);   // this will move bac
 378              		.loc 1 548 0
 379 01a0 0094     		str	r4, [sp]
 380 01a2 0323     		movs	r3, #3
 381 01a4 0022     		movs	r2, #0
 382 01a6 1146     		mov	r1, r2
 383 01a8 4FF4FA70 		mov	r0, #500
 384 01ac FFF7FEFF 		bl	moveUntil
 385              	.LVL62:
 549:main.c        ****                         
 550:main.c        ****             CyDelay(2000);
 386              		.loc 1 550 0
 387 01b0 4FF4FA60 		mov	r0, #2000
 388 01b4 FFF7FEFF 		bl	CyDelay
 389              	.LVL63:
 551:main.c        ****             
 552:main.c        ****             mishaMoveDynamic(-200, SPEED);
 390              		.loc 1 552 0
 391 01b8 2146     		mov	r1, r4
 392 01ba 6FF0C700 		mvn	r0, #199
 393 01be FFF7FEFF 		bl	mishaMoveDynamic
 394              	.LVL64:
 553:main.c        ****             
 554:main.c        ****             distanceSensor(SIDE_RIGHT);
 395              		.loc 1 554 0
 396 01c2 0320     		movs	r0, #3
 397 01c4 FFF7FEFF 		bl	distanceSensor
 398              	.LVL65:
 555:main.c        ****             CyDelay(50);
 399              		.loc 1 555 0
 400 01c8 3220     		movs	r0, #50
 401 01ca FFF7FEFF 		bl	CyDelay
 402              	.LVL66:
 556:main.c        ****             
 557:main.c        ****             int check = ultrasonic_distances_mm[SIDE_RIGHT];
 403              		.loc 1 557 0
 404 01ce 3D4B     		ldr	r3, .L24+28
 405 01d0 DB68     		ldr	r3, [r3, #12]
 406              	.LVL67:
 558:main.c        ****             if (check > 500) {                                  // GREEN if no block there
 407              		.loc 1 558 0
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccSUHQYZ.s 			page 18


 408 01d2 B3F5FA7F 		cmp	r3, #500
 409 01d6 0EDD     		ble	.L14
 559:main.c        ****                 control_led_Write(2);
 410              		.loc 1 559 0
 411 01d8 0220     		movs	r0, #2
 412 01da FFF7FEFF 		bl	control_led_Write
 413              	.LVL68:
 560:main.c        ****                 CyDelay(1000);
 414              		.loc 1 560 0
 415 01de 4FF47A70 		mov	r0, #1000
 416 01e2 FFF7FEFF 		bl	CyDelay
 417              	.LVL69:
 561:main.c        ****                 control_led_Write(0);
 418              		.loc 1 561 0
 419 01e6 0020     		movs	r0, #0
 420 01e8 FFF7FEFF 		bl	control_led_Write
 421              	.LVL70:
 562:main.c        ****                 CyDelay(500);
 422              		.loc 1 562 0
 423 01ec 4FF4FA70 		mov	r0, #500
 424 01f0 FFF7FEFF 		bl	CyDelay
 425              	.LVL71:
 426 01f4 0DE0     		b	.L15
 427              	.LVL72:
 428              	.L14:
 563:main.c        ****                 
 564:main.c        ****             }
 565:main.c        ****             else {                                              // RED if block there 
 566:main.c        ****                 control_led_Write(1);
 429              		.loc 1 566 0
 430 01f6 0120     		movs	r0, #1
 431 01f8 FFF7FEFF 		bl	control_led_Write
 432              	.LVL73:
 567:main.c        ****                 CyDelay(1000);
 433              		.loc 1 567 0
 434 01fc 4FF47A70 		mov	r0, #1000
 435 0200 FFF7FEFF 		bl	CyDelay
 436              	.LVL74:
 568:main.c        ****                 control_led_Write(0);
 437              		.loc 1 568 0
 438 0204 0020     		movs	r0, #0
 439 0206 FFF7FEFF 		bl	control_led_Write
 440              	.LVL75:
 569:main.c        ****                 CyDelay(500);
 441              		.loc 1 569 0
 442 020a 4FF4FA70 		mov	r0, #500
 443 020e FFF7FEFF 		bl	CyDelay
 444              	.LVL76:
 445              	.L15:
 570:main.c        ****             }
 571:main.c        **** 
 572:main.c        ****             moveUntil(100, BACKWARD, LESS_THAN, BACK, SPEED);
 446              		.loc 1 572 0
 447 0212 AA24     		movs	r4, #170
 448 0214 0094     		str	r4, [sp]
 449 0216 0423     		movs	r3, #4
 450 0218 0022     		movs	r2, #0
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccSUHQYZ.s 			page 19


 451 021a 1146     		mov	r1, r2
 452 021c 6420     		movs	r0, #100
 453 021e FFF7FEFF 		bl	moveUntil
 454              	.LVL77:
 573:main.c        ****             mishaSwivel(90, SPEED);
 455              		.loc 1 573 0
 456 0222 2146     		mov	r1, r4
 457 0224 5A20     		movs	r0, #90
 458 0226 FFF7FEFF 		bl	mishaSwivel
 459              	.LVL78:
 574:main.c        ****             moveUntil(300, FORWARD, LESS_THAN, FRONT_LEFT, SPEED);
 460              		.loc 1 574 0
 461 022a 0094     		str	r4, [sp]
 462 022c 0023     		movs	r3, #0
 463 022e 1A46     		mov	r2, r3
 464 0230 0121     		movs	r1, #1
 465 0232 4FF49670 		mov	r0, #300
 466 0236 FFF7FEFF 		bl	moveUntil
 467              	.LVL79:
 575:main.c        **** 
 576:main.c        ****             
 577:main.c        ****             // Finding where the boundaries of the block are
 578:main.c        ****     		// Sweep across WEST to EAST until discrepancy
 579:main.c        ****             // But first sense the construction plan and then drive to wall and turn around to prep
 580:main.c        ****             
 581:main.c        ****             /*
 582:main.c        ****     		moveForwardIndefinitely();
 583:main.c        ****     		turnRight(180); // Now facing EAST wall
 584:main.c        ****     		moveForwardIndefinitely(); // Do this until we get to EAST wall
 585:main.c        ****             */
 586:main.c        ****             
 587:main.c        ****             //moveAndAngle(20,20,EAST_ANGLE); // Move to a position near construction base in an EA
 588:main.c        ****             //moveForwardIndefinitely(); // Scan until we reach EAST wall.
 589:main.c        ****             
 590:main.c        ****             // Will now know the boundaries of the block.
 591:main.c        ****             // Figure out direction we want to travel
 592:main.c        ****             
 593:main.c        **** 
 594:main.c        ****             //pathPastBlock = (block_edge_location[WEST] >= WIDTH_SENSOR_TO_SENSOR + SAFETY_MARGIN 
 595:main.c        ****             //pathToPucks = (puckPileLocation < ARENA_WIDTH / 2 ? WEST:EAST);
 596:main.c        ****             
 597:main.c        ****             state = STATE_GO_TO_PUCKS;
 468              		.loc 1 597 0
 469 023a 0322     		movs	r2, #3
 470 023c 244B     		ldr	r3, .L24+40
 471 023e 5A60     		str	r2, [r3, #4]
 472              	.LVL80:
 473              	.L13:
 474              	.LBE6:
 598:main.c        **** 	    }
 599:main.c        ****              
 600:main.c        ****         /*
 601:main.c        ****         if (state == STATE_GO_TO_PUCKS){
 602:main.c        ****             
 603:main.c        ****             
 604:main.c        ****             if (pathPastBlock == WEST){
 605:main.c        ****                 if (pathToPucks != WEST) {
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccSUHQYZ.s 			page 20


 606:main.c        ****                     moveAndAngle(SAFETY_MARGIN / 2 + WIDTH_SENSOR_TO_SENSOR / 2, ARENA_LENGTH - FRO
 607:main.c        ****                 }
 608:main.c        ****                 else {moveAndAngle(SAFETY_MARGIN / 2 + WIDTH_SENSOR_TO_SENSOR / 2, ARENA_LENGTH - F
 609:main.c        ****             }
 610:main.c        ****             else {
 611:main.c        ****                 if (pathToPucks != EAST) {
 612:main.c        ****                     moveAndAngle(ARENA_WIDTH - SAFETY_MARGIN / 2 - WIDTH_SENSOR_TO_SENSOR / 2, AREN
 613:main.c        ****                 }
 614:main.c        ****                 else {moveAndAngle(ARENA_WIDTH - SAFETY_MARGIN / 2 - WIDTH_SENSOR_TO_SENSOR / 2, AR
 615:main.c        ****             }
 616:main.c        ****             
 617:main.c        ****             // Now depending on if the pucks are in the corner or not, 
 618:main.c        ****             
 619:main.c        ****             // We are now in front of the pucks
 620:main.c        ****             
 621:main.c        ****             
 622:main.c        ****             state = STATE_FIND_REQUIRED_PUCK;
 623:main.c        ****         }
 624:main.c        ****         
 625:main.c        ****         */
 626:main.c        ****         
 627:main.c        ****         /*
 628:main.c        ****         // Ensure that we are @ east wall facing east at a minimum verticaldistance so we can turn 
 629:main.c        ****         if (state == STATE_GO_TO_PUCKS){
 630:main.c        ****             
 631:main.c        ****             if (blockEastClearance && puckEastClearance){
 632:main.c        ****                 
 633:main.c        ****                 moveBackwardUntil(CLEARANCE_RADIUS_CENTER_TO_FRONT,FRONT);
 634:main.c        ****                 faceDirection(NORTH_ANGLE);
 635:main.c        ****                 moveForwardUntil(CLEARANCE_RADIUS_CENTER_TO_FRONT,FRONT);
 636:main.c        ****                 //displaceLeft(); Repeatedly call this if below function not implemented
 637:main.c        ****                 //displaceLeftUntil(CLEARANCE_RADIUS_CENTER_TO_BACK,RIGHT);
 638:main.c        ****                 faceDirection(WEST_ANGLE);
 639:main.c        ****                 //displaceLeft();
 640:main.c        ****                 //displaceLeftUntil(DISTANCE_PUCKS_FROM_NORTH + WIDTH_SENSOR_TO_CENTER ,RIGHT);
 641:main.c        ****                 moveForwardUntil(DISTANCE_STOPPED_FROM_PUCK,FRONT); // Can change 10 to any value r
 642:main.c        ****                 // Now front sensor 10cm away from puck, ready to pick up puck
 643:main.c        ****                 moveForward(DISTANCE_STOPPED_FROM_PUCK + 3); // Adding 3 should move the claw enoug
 644:main.c        ****                 
 645:main.c        ****             }
 646:main.c        ****             
 647:main.c        ****             else if (blockWestClearance && puckWestClearance){
 648:main.c        ****                 
 649:main.c        ****                 moveBackwardUntil(CLEARANCE_RADIUS_CENTER_TO_FRONT,FRONT);
 650:main.c        ****                 faceDirection(NORTH_ANGLE);
 651:main.c        ****                 moveForwardUntil(CLEARANCE_RADIUS_CENTER_TO_FRONT,FRONT);
 652:main.c        ****                 //displaceLeft(); Repeatedly call this if below function not implemented
 653:main.c        ****                 //displaceLeftUntil(CLEARANCE_RADIUS_CENTER_TO_BACK,RIGHT);
 654:main.c        ****                 faceDirection(WEST_ANGLE);
 655:main.c        ****                 //displaceLeft();
 656:main.c        ****                 //displaceLeftUntil(DISTANCE_PUCKS_FROM_NORTH + WIDTH_SENSOR_TO_CENTER ,RIGHT);
 657:main.c        ****                 moveForwardUntil(DISTANCE_STOPPED_FROM_PUCK,FRONT); // Can change 10 to any value r
 658:main.c        ****                 // Now front sensor 10cm away from puck, ready to pick up puck
 659:main.c        ****                 moveForward(DISTANCE_STOPPED_FROM_PUCK + 3); // Adding 3 should move the claw enoug
 660:main.c        ****                 
 661:main.c        ****             }
 662:main.c        ****             
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccSUHQYZ.s 			page 21


 663:main.c        ****             else if (blockEastClearance && puckWestClearance){
 664:main.c        ****                 
 665:main.c        ****             }
 666:main.c        ****             
 667:main.c        ****             else if (blockWestClearance && puckEastClearance){
 668:main.c        ****                 
 669:main.c        ****             }
 670:main.c        ****             
 671:main.c        ****             
 672:main.c        ****             
 673:main.c        ****         }
 674:main.c        ****         */
 675:main.c        ****         
 676:main.c        ****         if (state == STATE_FIND_REQUIRED_PUCK){
 475              		.loc 1 676 0
 476 0240 234B     		ldr	r3, .L24+40
 477 0242 5B68     		ldr	r3, [r3, #4]
 478 0244 042B     		cmp	r3, #4
 479 0246 7FF466AF 		bne	.L16
 480              	.LVL81:
 481              	.LBB7:
 677:main.c        ****             
 678:main.c        ****             
 679:main.c        ****         //SPEED = 70;               // need to be able to dynamically change speed of mishaMoveDyna
 680:main.c        ****         int puck_correct = FALSE;   // A flag to determine if the correct puck has been picked up
 681:main.c        ****         int puck_scan;
 682:main.c        ****         
 683:main.c        ****     
 684:main.c        ****         puckConstructionPlan[1] = RED;
 482              		.loc 1 684 0
 483 024a 0122     		movs	r2, #1
 484 024c 174B     		ldr	r3, .L24+4
 485 024e 1A61     		str	r2, [r3, #16]
 680:main.c        ****         int puck_scan;
 486              		.loc 1 680 0
 487 0250 0024     		movs	r4, #0
 685:main.c        ****     
 686:main.c        ****         // Scanning puck:
 687:main.c        **** 
 688:main.c        ****         while (puck_correct == FALSE) 
 488              		.loc 1 688 0
 489 0252 16E0     		b	.L17
 490              	.LVL82:
 491              	.L19:
 689:main.c        ****         {
 690:main.c        ****             mishaMoveDynamic(50, SPEED);  // robot moves forward towards puck
 492              		.loc 1 690 0
 493 0254 AA21     		movs	r1, #170
 494 0256 3220     		movs	r0, #50
 495 0258 FFF7FEFF 		bl	mishaMoveDynamic
 496              	.LVL83:
 691:main.c        ****                                     // could replace this with the distance gathered from the ultra
 692:main.c        ****             changeHeightToPuck(1);  // arm lowers onto robot
 497              		.loc 1 692 0
 498 025c 0120     		movs	r0, #1
 499 025e FFF7FEFF 		bl	changeHeightToPuck
 500              	.LVL84:
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccSUHQYZ.s 			page 22


 693:main.c        ****             puck_scan = colourSensingOutput();  // colour sensor takes a scan
 501              		.loc 1 693 0
 502 0262 FFF7FEFF 		bl	colourSensingOutput
 503              	.LVL85:
 504 0266 0546     		mov	r5, r0
 505              	.LVL86:
 694:main.c        ****             changeHeightToPuck(3);  // arm returns to high position
 506              		.loc 1 694 0
 507 0268 0320     		movs	r0, #3
 508              	.LVL87:
 509 026a FFF7FEFF 		bl	changeHeightToPuck
 510              	.LVL88:
 695:main.c        ****             mishaMoveDynamic(-50, SPEED);   // robot moves backwards
 511              		.loc 1 695 0
 512 026e AA21     		movs	r1, #170
 513 0270 6FF03100 		mvn	r0, #49
 514 0274 FFF7FEFF 		bl	mishaMoveDynamic
 515              	.LVL89:
 696:main.c        ****             if (puck_scan == puckConstructionPlan[1]) {puck_correct = TRUE;}
 516              		.loc 1 696 0
 517 0278 0C4B     		ldr	r3, .L24+4
 518 027a 1B69     		ldr	r3, [r3, #16]
 519 027c 9D42     		cmp	r5, r3
 520 027e 00D1     		bne	.L17
 521 0280 0124     		movs	r4, #1
 522              	.LVL90:
 523              	.L17:
 688:main.c        ****         {
 524              		.loc 1 688 0
 525 0282 002C     		cmp	r4, #0
 526 0284 E6D0     		beq	.L19
 697:main.c        ****                                     // if colour == true:
 698:main.c        ****                 
 699:main.c        ****             else 
 700:main.c        ****             {
 701:main.c        ****                                     // if colour == false
 702:main.c        ****                                         // robot translates to side to see next puck, and performs 
 703:main.c        ****             }
 704:main.c        ****         }
 705:main.c        ****                 
 706:main.c        ****         // Picking Up puck from pile:
 707:main.c        ****         changeHeightToPuck(0);      // arm lowers to ground
 527              		.loc 1 707 0
 528 0286 0020     		movs	r0, #0
 529 0288 FFF7FEFF 		bl	changeHeightToPuck
 530              	.LVL91:
 708:main.c        ****         //changeHeightToPuck(1);
 709:main.c        ****         moveUntilPuck();
 531              		.loc 1 709 0
 532 028c FFF7FEFF 		bl	moveUntilPuck
 533              	.LVL92:
 710:main.c        ****         //mishaMoveDynamic(60);       // robot moves forward
 711:main.c        ****         armClose();                 // claw closes on puck
 534              		.loc 1 711 0
 535 0290 FFF7FEFF 		bl	armClose
 536              	.LVL93:
 712:main.c        ****         changeHeightToPuck(3);      // arm lifts up to highest position
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccSUHQYZ.s 			page 23


 537              		.loc 1 712 0
 538 0294 0320     		movs	r0, #3
 539 0296 FFF7FEFF 		bl	changeHeightToPuck
 540              	.LVL94:
 713:main.c        ****         mishaMoveDynamic(-60, SPEED);       // robot moves back away from puck area 
 541              		.loc 1 713 0
 542 029a AA21     		movs	r1, #170
 543 029c 6FF03B00 		mvn	r0, #59
 544 02a0 FFF7FEFF 		bl	mishaMoveDynamic
 545              	.LVL95:
 546              	.L20:
 547 02a4 FEE7     		b	.L20
 548              	.L25:
 549 02a6 00BF     		.align	2
 550              	.L24:
 551 02a8 00000000 		.word	.LC0
 552 02ac 00000000 		.word	.LANCHOR0
 553 02b0 00000000 		.word	internal_orientation
 554 02b4 00000000 		.word	TIH
 555 02b8 00000000 		.word	StartIH
 556 02bc 18000000 		.word	.LC1
 557 02c0 00000000 		.word	output
 558 02c4 00000000 		.word	ultrasonic_distances_mm
 559 02c8 38000000 		.word	.LC2
 560 02cc 40000000 		.word	.LC3
 561 02d0 00000000 		.word	.LANCHOR1
 562              	.LBE7:
 563              		.cfi_endproc
 564              	.LFE66:
 565              		.size	main, .-main
 566              		.comm	distance_returned_global,4,4
 567              		.global	current_stage
 568              		.global	PLAN_SCAN_VERTICAL
 569              		.global	moving
 570              		.global	colour_sensing_algorithm
 571              		.global	colour_flag
 572              		.global	idac_value
 573              		.comm	moveBackwardAllowed,2,2
 574              		.comm	moveForwardAllowed,2,2
 575              		.comm	moveRightAllowed,2,2
 576              		.comm	moveLeftAllowed,2,2
 577              		.global	moveNow
 578              		.comm	desiredOrientation,4,4
 579              		.global	currentOrientation
 580              		.comm	desiredPosition,8,4
 581              		.global	currentPosition
 582              		.global	puckWestClearance
 583              		.global	puckEastClearance
 584              		.global	blockWestClearance
 585              		.global	blockEastClearance
 586              		.comm	pathPastBlock,4,4
 587              		.comm	pathToPucks,4,4
 588              		.global	beginNavigation
 589              		.global	horizontalPuckGrid
 590              		.global	puckConstructionPlan
 591              		.global	currentPuckStackSize
 592              		.global	running
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccSUHQYZ.s 			page 24


 593              		.global	state
 594              		.comm	ultrasonic_flag,4,4
 595              		.comm	initialisation,4,4
 596              		.comm	output,32,4
 597              		.global	turningRightFlag
 598              		.global	turningLeftFlag
 599              		.global	drivingBackwardFlag
 600              		.global	drivingForwardFlag
 601              		.comm	puckPileLocation,4,4
 602              		.global	block_edge_location
 603              		.global	sweeping
 604              		.global	puckRackOffsetsFromWest
 605              		.global	puckRackColours
 606              		.global	currentPuckRackScanningIndex
 607              		.comm	driveStraightEnable,4,4
 608              		.comm	internal_orientation,4,4
 609              		.section	.rodata
 610              		.align	2
 611              		.type	PLAN_SCAN_VERTICAL, %object
 612              		.size	PLAN_SCAN_VERTICAL, 4
 613              	PLAN_SCAN_VERTICAL:
 614 0000 0A000000 		.word	10
 615              		.data
 616              		.align	2
 617              		.set	.LANCHOR1,. + 0
 618              		.type	colour_flag, %object
 619              		.size	colour_flag, 4
 620              	colour_flag:
 621 0000 01000000 		.word	1
 622              		.type	state, %object
 623              		.size	state, 4
 624              	state:
 625 0004 01000000 		.word	1
 626              		.type	current_stage, %object
 627              		.size	current_stage, 4
 628              	current_stage:
 629 0008 01000000 		.word	1
 630              		.type	moveNow, %object
 631              		.size	moveNow, 2
 632              	moveNow:
 633 000c 0100     		.short	1
 634 000e 0000     		.space	2
 635              		.type	currentOrientation, %object
 636              		.size	currentOrientation, 4
 637              	currentOrientation:
 638 0010 5A000000 		.word	90
 639              		.type	running, %object
 640              		.size	running, 4
 641              	running:
 642 0014 01000000 		.word	1
 643              		.type	puckRackOffsetsFromWest, %object
 644              		.size	puckRackOffsetsFromWest, 20
 645              	puckRackOffsetsFromWest:
 646 0018 D0020000 		.word	720
 647 001c 94020000 		.word	660
 648 0020 58020000 		.word	600
 649 0024 1C020000 		.word	540
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccSUHQYZ.s 			page 25


 650 0028 E0010000 		.word	480
 651              		.section	.rodata.str1.4,"aMS",%progbits,1
 652              		.align	2
 653              	.LC0:
 654 0000 55415254 		.ascii	"UART commencing... \012\000"
 654      20636F6D 
 654      6D656E63 
 654      696E672E 
 654      2E2E200A 
 655 0015 000000   		.space	3
 656              	.LC1:
 657 0018 556C7472 		.ascii	"Ultrasonic Calibration tests: \012\000"
 657      61736F6E 
 657      69632043 
 657      616C6962 
 657      72617469 
 658              	.LC2:
 659 0038 25642009 		.ascii	"%d \011\000"
 659      00
 660 003d 000000   		.space	3
 661              	.LC3:
 662 0040 0A0A00   		.ascii	"\012\012\000"
 663              		.bss
 664              		.align	2
 665              		.set	.LANCHOR0,. + 0
 666              		.type	beginNavigation, %object
 667              		.size	beginNavigation, 4
 668              	beginNavigation:
 669 0000 00000000 		.space	4
 670              		.type	idac_value, %object
 671              		.size	idac_value, 4
 672              	idac_value:
 673 0004 00000000 		.space	4
 674              		.type	colour_sensing_algorithm, %object
 675              		.size	colour_sensing_algorithm, 4
 676              	colour_sensing_algorithm:
 677 0008 00000000 		.space	4
 678              		.type	puckConstructionPlan, %object
 679              		.size	puckConstructionPlan, 12
 680              	puckConstructionPlan:
 681 000c 00000000 		.space	12
 681      00000000 
 681      00000000 
 682              		.type	moving, %object
 683              		.size	moving, 4
 684              	moving:
 685 0018 00000000 		.space	4
 686              		.type	currentPosition, %object
 687              		.size	currentPosition, 8
 688              	currentPosition:
 689 001c 00000000 		.space	8
 689      00000000 
 690              		.type	puckWestClearance, %object
 691              		.size	puckWestClearance, 2
 692              	puckWestClearance:
 693 0024 0000     		.space	2
 694              		.type	puckEastClearance, %object
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccSUHQYZ.s 			page 26


 695              		.size	puckEastClearance, 2
 696              	puckEastClearance:
 697 0026 0000     		.space	2
 698              		.type	blockWestClearance, %object
 699              		.size	blockWestClearance, 2
 700              	blockWestClearance:
 701 0028 0000     		.space	2
 702              		.type	blockEastClearance, %object
 703              		.size	blockEastClearance, 2
 704              	blockEastClearance:
 705 002a 0000     		.space	2
 706              		.type	horizontalPuckGrid, %object
 707              		.size	horizontalPuckGrid, 4
 708              	horizontalPuckGrid:
 709 002c 00000000 		.space	4
 710              		.type	currentPuckStackSize, %object
 711              		.size	currentPuckStackSize, 4
 712              	currentPuckStackSize:
 713 0030 00000000 		.space	4
 714              		.type	turningRightFlag, %object
 715              		.size	turningRightFlag, 2
 716              	turningRightFlag:
 717 0034 0000     		.space	2
 718              		.type	turningLeftFlag, %object
 719              		.size	turningLeftFlag, 2
 720              	turningLeftFlag:
 721 0036 0000     		.space	2
 722              		.type	drivingBackwardFlag, %object
 723              		.size	drivingBackwardFlag, 2
 724              	drivingBackwardFlag:
 725 0038 0000     		.space	2
 726              		.type	drivingForwardFlag, %object
 727              		.size	drivingForwardFlag, 2
 728              	drivingForwardFlag:
 729 003a 0000     		.space	2
 730              		.type	block_edge_location, %object
 731              		.size	block_edge_location, 16
 732              	block_edge_location:
 733 003c 00000000 		.space	16
 733      00000000 
 733      00000000 
 733      00000000 
 734              		.type	sweeping, %object
 735              		.size	sweeping, 4
 736              	sweeping:
 737 004c 00000000 		.space	4
 738              		.type	puckRackColours, %object
 739              		.size	puckRackColours, 20
 740              	puckRackColours:
 741 0050 00000000 		.space	20
 741      00000000 
 741      00000000 
 741      00000000 
 741      00000000 
 742              		.type	currentPuckRackScanningIndex, %object
 743              		.size	currentPuckRackScanningIndex, 4
 744              	currentPuckRackScanningIndex:
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccSUHQYZ.s 			page 27


 745 0064 00000000 		.space	4
 746              		.text
 747              	.Letext0:
 748              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 749              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 750              		.file 4 "Generated_Source\\PSoC5/core_cm3.h"
 751              		.file 5 "main.h"
 752              		.file 6 "ultrasonic.h"
 753              		.file 7 "Generated_Source\\PSoC5/CyLib.h"
 754              		.file 8 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 755              		.file 9 "Generated_Source\\PSoC5/UART_1.h"
 756              		.file 10 "navigation.h"
 757              		.file 11 "mishamotor.h"
 758              		.file 12 "Generated_Source\\PSoC5/control_led.h"
 759              		.file 13 "servo.h"
 760              		.file 14 "colour.h"
 761              		.file 15 "Generated_Source\\PSoC5/TIA_1.h"
 762              		.file 16 "Generated_Source\\PSoC5/ADC.h"
 763              		.file 17 "Generated_Source\\PSoC5/IDAC8_1.h"
 764              		.file 18 "Generated_Source\\PSoC5/control_photodiode.h"
 765              		.file 19 "Generated_Source\\PSoC5/Rack_Servo_PWM.h"
 766              		.file 20 "Generated_Source\\PSoC5/Gripper_Servo_PWM.h"
 767              		.file 21 "Generated_Source\\PSoC5/Motor_Left_Driver.h"
 768              		.file 22 "Generated_Source\\PSoC5/Motor_Right_Driver.h"
 769              		.file 23 "Generated_Source\\PSoC5/Motor_Left_Decoder.h"
 770              		.file 24 "Generated_Source\\PSoC5/Motor_Right_Decoder.h"
 771              		.file 25 "Generated_Source\\PSoC5/Timer_1.h"
 772              		.file 26 "Generated_Source\\PSoC5/Sonic.h"
 773              		.file 27 "Generated_Source\\PSoC5/Start.h"
 774              		.section	.debug_info,"",%progbits
 775              	.Ldebug_info0:
 776 0000 DD0C0000 		.4byte	0xcdd
 777 0004 0400     		.2byte	0x4
 778 0006 00000000 		.4byte	.Ldebug_abbrev0
 779 000a 04       		.byte	0x4
 780 000b 01       		.uleb128 0x1
 781 000c 1A070000 		.4byte	.LASF108
 782 0010 0C       		.byte	0xc
 783 0011 AC050000 		.4byte	.LASF109
 784 0015 4B060000 		.4byte	.LASF110
 785 0019 18000000 		.4byte	.Ldebug_ranges0+0x18
 786 001d 00000000 		.4byte	0
 787 0021 00000000 		.4byte	.Ldebug_line0
 788 0025 02       		.uleb128 0x2
 789 0026 01       		.byte	0x1
 790 0027 06       		.byte	0x6
 791 0028 25000000 		.4byte	.LASF0
 792 002c 02       		.uleb128 0x2
 793 002d 01       		.byte	0x1
 794 002e 08       		.byte	0x8
 795 002f 7A030000 		.4byte	.LASF1
 796 0033 02       		.uleb128 0x2
 797 0034 02       		.byte	0x2
 798 0035 05       		.byte	0x5
 799 0036 55000000 		.4byte	.LASF2
 800 003a 02       		.uleb128 0x2
 801 003b 02       		.byte	0x2
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccSUHQYZ.s 			page 28


 802 003c 07       		.byte	0x7
 803 003d 88050000 		.4byte	.LASF3
 804 0041 03       		.uleb128 0x3
 805 0042 2E060000 		.4byte	.LASF9
 806 0046 02       		.byte	0x2
 807 0047 3F       		.byte	0x3f
 808 0048 4C000000 		.4byte	0x4c
 809 004c 02       		.uleb128 0x2
 810 004d 04       		.byte	0x4
 811 004e 05       		.byte	0x5
 812 004f 9A020000 		.4byte	.LASF4
 813 0053 02       		.uleb128 0x2
 814 0054 04       		.byte	0x4
 815 0055 07       		.byte	0x7
 816 0056 B3050000 		.4byte	.LASF5
 817 005a 02       		.uleb128 0x2
 818 005b 08       		.byte	0x8
 819 005c 05       		.byte	0x5
 820 005d 60020000 		.4byte	.LASF6
 821 0061 02       		.uleb128 0x2
 822 0062 08       		.byte	0x8
 823 0063 07       		.byte	0x7
 824 0064 1F040000 		.4byte	.LASF7
 825 0068 04       		.uleb128 0x4
 826 0069 04       		.byte	0x4
 827 006a 05       		.byte	0x5
 828 006b 696E7400 		.ascii	"int\000"
 829 006f 02       		.uleb128 0x2
 830 0070 04       		.byte	0x4
 831 0071 07       		.byte	0x7
 832 0072 56040000 		.4byte	.LASF8
 833 0076 03       		.uleb128 0x3
 834 0077 BD000000 		.4byte	.LASF10
 835 007b 03       		.byte	0x3
 836 007c 2C       		.byte	0x2c
 837 007d 41000000 		.4byte	0x41
 838 0081 02       		.uleb128 0x2
 839 0082 04       		.byte	0x4
 840 0083 04       		.byte	0x4
 841 0084 47020000 		.4byte	.LASF11
 842 0088 02       		.uleb128 0x2
 843 0089 08       		.byte	0x8
 844 008a 04       		.byte	0x4
 845 008b D3050000 		.4byte	.LASF12
 846 008f 02       		.uleb128 0x2
 847 0090 01       		.byte	0x1
 848 0091 08       		.byte	0x8
 849 0092 EA040000 		.4byte	.LASF13
 850 0096 02       		.uleb128 0x2
 851 0097 08       		.byte	0x8
 852 0098 04       		.byte	0x4
 853 0099 19010000 		.4byte	.LASF14
 854 009d 02       		.uleb128 0x2
 855 009e 04       		.byte	0x4
 856 009f 07       		.byte	0x7
 857 00a0 BF060000 		.4byte	.LASF15
 858 00a4 05       		.uleb128 0x5
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccSUHQYZ.s 			page 29


 859 00a5 54494800 		.ascii	"TIH\000"
 860 00a9 01       		.byte	0x1
 861 00aa 70       		.byte	0x70
 862 00ab 00000000 		.4byte	.LFB64
 863 00af 08000000 		.4byte	.LFE64-.LFB64
 864 00b3 01       		.uleb128 0x1
 865 00b4 9C       		.byte	0x9c
 866 00b5 C3000000 		.4byte	0xc3
 867 00b9 06       		.uleb128 0x6
 868 00ba 06000000 		.4byte	.LVL0
 869 00be 3E0B0000 		.4byte	0xb3e
 870 00c2 00       		.byte	0
 871 00c3 07       		.uleb128 0x7
 872 00c4 25010000 		.4byte	.LASF16
 873 00c8 01       		.byte	0x1
 874 00c9 75       		.byte	0x75
 875 00ca 00000000 		.4byte	.LFB65
 876 00ce 20000000 		.4byte	.LFE65-.LFB65
 877 00d2 01       		.uleb128 0x1
 878 00d3 9C       		.byte	0x9c
 879 00d4 E9000000 		.4byte	0xe9
 880 00d8 08       		.uleb128 0x8
 881 00d9 08000000 		.4byte	.LVL1
 882 00dd 490B0000 		.4byte	0xb49
 883 00e1 09       		.uleb128 0x9
 884 00e2 01       		.uleb128 0x1
 885 00e3 50       		.byte	0x50
 886 00e4 02       		.uleb128 0x2
 887 00e5 08       		.byte	0x8
 888 00e6 64       		.byte	0x64
 889 00e7 00       		.byte	0
 890 00e8 00       		.byte	0
 891 00e9 0A       		.uleb128 0xa
 892 00ea 01050000 		.4byte	.LASF111
 893 00ee 01       		.byte	0x1
 894 00ef 90       		.byte	0x90
 895 00f0 68000000 		.4byte	0x68
 896 00f4 00000000 		.4byte	.LFB66
 897 00f8 D4020000 		.4byte	.LFE66-.LFB66
 898 00fc 01       		.uleb128 0x1
 899 00fd 9C       		.byte	0x9c
 900 00fe F2070000 		.4byte	0x7f2
 901 0102 0B       		.uleb128 0xb
 902 0103 AA000000 		.4byte	.LASF17
 903 0107 01       		.byte	0x1
 904 0108 9C       		.byte	0x9c
 905 0109 68000000 		.4byte	0x68
 906 010d 00       		.byte	0
 907 010e 0B       		.uleb128 0xb
 908 010f 48040000 		.4byte	.LASF18
 909 0113 01       		.byte	0x1
 910 0114 9D       		.byte	0x9d
 911 0115 68000000 		.4byte	0x68
 912 0119 00       		.byte	0
 913 011a 0B       		.uleb128 0xb
 914 011b D5060000 		.4byte	.LASF19
 915 011f 01       		.byte	0x1
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccSUHQYZ.s 			page 30


 916 0120 9E       		.byte	0x9e
 917 0121 68000000 		.4byte	0x68
 918 0125 00       		.byte	0
 919 0126 0B       		.uleb128 0xb
 920 0127 12000000 		.4byte	.LASF20
 921 012b 01       		.byte	0x1
 922 012c 9F       		.byte	0x9f
 923 012d 68000000 		.4byte	0x68
 924 0131 00       		.byte	0
 925 0132 0C       		.uleb128 0xc
 926 0133 DA000000 		.4byte	.LBB2
 927 0137 3C000000 		.4byte	.LBE2-.LBB2
 928 013b CC010000 		.4byte	0x1cc
 929 013f 0D       		.uleb128 0xd
 930 0140 6A00     		.ascii	"j\000"
 931 0142 01       		.byte	0x1
 932 0143 D3       		.byte	0xd3
 933 0144 68000000 		.4byte	0x68
 934 0148 00000000 		.4byte	.LLST0
 935 014c 0E       		.uleb128 0xe
 936 014d 00000000 		.4byte	.Ldebug_ranges0+0
 937 0151 B8010000 		.4byte	0x1b8
 938 0155 0D       		.uleb128 0xd
 939 0156 6900     		.ascii	"i\000"
 940 0158 01       		.byte	0x1
 941 0159 D5       		.byte	0xd5
 942 015a 68000000 		.4byte	0x68
 943 015e 1F000000 		.4byte	.LLST1
 944 0162 0F       		.uleb128 0xf
 945 0163 E4000000 		.4byte	.LVL39
 946 0167 540B0000 		.4byte	0xb54
 947 016b 76010000 		.4byte	0x176
 948 016f 09       		.uleb128 0x9
 949 0170 01       		.uleb128 0x1
 950 0171 50       		.byte	0x50
 951 0172 02       		.uleb128 0x2
 952 0173 74       		.byte	0x74
 953 0174 00       		.sleb128 0
 954 0175 00       		.byte	0
 955 0176 0F       		.uleb128 0xf
 956 0177 EA000000 		.4byte	.LVL40
 957 017b 490B0000 		.4byte	0xb49
 958 017f 8A010000 		.4byte	0x18a
 959 0183 09       		.uleb128 0x9
 960 0184 01       		.uleb128 0x1
 961 0185 50       		.byte	0x50
 962 0186 02       		.uleb128 0x2
 963 0187 08       		.byte	0x8
 964 0188 64       		.byte	0x64
 965 0189 00       		.byte	0
 966 018a 0F       		.uleb128 0xf
 967 018b FA000000 		.4byte	.LVL41
 968 018f 5F0B0000 		.4byte	0xb5f
 969 0193 A7010000 		.4byte	0x1a7
 970 0197 09       		.uleb128 0x9
 971 0198 01       		.uleb128 0x1
 972 0199 50       		.byte	0x50
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccSUHQYZ.s 			page 31


 973 019a 02       		.uleb128 0x2
 974 019b 76       		.byte	0x76
 975 019c 00       		.sleb128 0
 976 019d 09       		.uleb128 0x9
 977 019e 01       		.uleb128 0x1
 978 019f 51       		.byte	0x51
 979 01a0 05       		.uleb128 0x5
 980 01a1 03       		.byte	0x3
 981 01a2 38000000 		.4byte	.LC2
 982 01a6 00       		.byte	0
 983 01a7 08       		.uleb128 0x8
 984 01a8 00010000 		.4byte	.LVL42
 985 01ac 6A0B0000 		.4byte	0xb6a
 986 01b0 09       		.uleb128 0x9
 987 01b1 01       		.uleb128 0x1
 988 01b2 50       		.byte	0x50
 989 01b3 02       		.uleb128 0x2
 990 01b4 76       		.byte	0x76
 991 01b5 00       		.sleb128 0
 992 01b6 00       		.byte	0
 993 01b7 00       		.byte	0
 994 01b8 08       		.uleb128 0x8
 995 01b9 10010000 		.4byte	.LVL46
 996 01bd 6A0B0000 		.4byte	0xb6a
 997 01c1 09       		.uleb128 0x9
 998 01c2 01       		.uleb128 0x1
 999 01c3 50       		.byte	0x50
 1000 01c4 05       		.uleb128 0x5
 1001 01c5 03       		.byte	0x3
 1002 01c6 40000000 		.4byte	.LC3
 1003 01ca 00       		.byte	0
 1004 01cb 00       		.byte	0
 1005 01cc 0C       		.uleb128 0xc
 1006 01cd 1E010000 		.4byte	.LBB5
 1007 01d1 1A000000 		.4byte	.LBE5-.LBB5
 1008 01d5 29020000 		.4byte	0x229
 1009 01d9 10       		.uleb128 0x10
 1010 01da A8070000 		.4byte	.LASF112
 1011 01de 01       		.byte	0x1
 1012 01df DF01     		.2byte	0x1df
 1013 01e1 68000000 		.4byte	0x68
 1014 01e5 0F       		.uleb128 0xf
 1015 01e6 26010000 		.4byte	.LVL48
 1016 01ea 750B0000 		.4byte	0xb75
 1017 01ee FE010000 		.4byte	0x1fe
 1018 01f2 09       		.uleb128 0x9
 1019 01f3 01       		.uleb128 0x1
 1020 01f4 50       		.byte	0x50
 1021 01f5 01       		.uleb128 0x1
 1022 01f6 32       		.byte	0x32
 1023 01f7 09       		.uleb128 0x9
 1024 01f8 01       		.uleb128 0x1
 1025 01f9 51       		.byte	0x51
 1026 01fa 02       		.uleb128 0x2
 1027 01fb 08       		.byte	0x8
 1028 01fc AA       		.byte	0xaa
 1029 01fd 00       		.byte	0
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccSUHQYZ.s 			page 32


 1030 01fe 0F       		.uleb128 0xf
 1031 01ff 2E010000 		.4byte	.LVL49
 1032 0203 490B0000 		.4byte	0xb49
 1033 0207 13020000 		.4byte	0x213
 1034 020b 09       		.uleb128 0x9
 1035 020c 01       		.uleb128 0x1
 1036 020d 50       		.byte	0x50
 1037 020e 03       		.uleb128 0x3
 1038 020f 0A       		.byte	0xa
 1039 0210 E803     		.2byte	0x3e8
 1040 0212 00       		.byte	0
 1041 0213 08       		.uleb128 0x8
 1042 0214 36010000 		.4byte	.LVL50
 1043 0218 750B0000 		.4byte	0xb75
 1044 021c 09       		.uleb128 0x9
 1045 021d 01       		.uleb128 0x1
 1046 021e 50       		.byte	0x50
 1047 021f 01       		.uleb128 0x1
 1048 0220 31       		.byte	0x31
 1049 0221 09       		.uleb128 0x9
 1050 0222 01       		.uleb128 0x1
 1051 0223 51       		.byte	0x51
 1052 0224 02       		.uleb128 0x2
 1053 0225 08       		.byte	0x8
 1054 0226 AA       		.byte	0xaa
 1055 0227 00       		.byte	0
 1056 0228 00       		.byte	0
 1057 0229 0C       		.uleb128 0xc
 1058 022a 3E010000 		.4byte	.LBB6
 1059 022e 02010000 		.4byte	.LBE6-.LBB6
 1060 0232 FC040000 		.4byte	0x4fc
 1061 0236 11       		.uleb128 0x11
 1062 0237 18060000 		.4byte	.LASF21
 1063 023b 01       		.byte	0x1
 1064 023c 1A02     		.2byte	0x21a
 1065 023e 68000000 		.4byte	0x68
 1066 0242 3D000000 		.4byte	.LLST2
 1067 0246 11       		.uleb128 0x11
 1068 0247 C8060000 		.4byte	.LASF22
 1069 024b 01       		.byte	0x1
 1070 024c 2D02     		.2byte	0x22d
 1071 024e 68000000 		.4byte	0x68
 1072 0252 53000000 		.4byte	.LLST3
 1073 0256 0F       		.uleb128 0xf
 1074 0257 48010000 		.4byte	.LVL51
 1075 025b 800B0000 		.4byte	0xb80
 1076 025f 70020000 		.4byte	0x270
 1077 0263 09       		.uleb128 0x9
 1078 0264 01       		.uleb128 0x1
 1079 0265 50       		.byte	0x50
 1080 0266 02       		.uleb128 0x2
 1081 0267 09       		.byte	0x9
 1082 0268 D3       		.byte	0xd3
 1083 0269 09       		.uleb128 0x9
 1084 026a 01       		.uleb128 0x1
 1085 026b 51       		.byte	0x51
 1086 026c 02       		.uleb128 0x2
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccSUHQYZ.s 			page 33


 1087 026d 08       		.byte	0x8
 1088 026e AA       		.byte	0xaa
 1089 026f 00       		.byte	0
 1090 0270 0F       		.uleb128 0xf
 1091 0271 52010000 		.4byte	.LVL52
 1092 0275 8B0B0000 		.4byte	0xb8b
 1093 0279 8B020000 		.4byte	0x28b
 1094 027d 09       		.uleb128 0x9
 1095 027e 01       		.uleb128 0x1
 1096 027f 50       		.byte	0x50
 1097 0280 03       		.uleb128 0x3
 1098 0281 0B       		.byte	0xb
 1099 0282 6AFF     		.2byte	0xff6a
 1100 0284 09       		.uleb128 0x9
 1101 0285 01       		.uleb128 0x1
 1102 0286 51       		.byte	0x51
 1103 0287 02       		.uleb128 0x2
 1104 0288 08       		.byte	0x8
 1105 0289 AA       		.byte	0xaa
 1106 028a 00       		.byte	0
 1107 028b 0F       		.uleb128 0xf
 1108 028c 5A010000 		.4byte	.LVL53
 1109 0290 800B0000 		.4byte	0xb80
 1110 0294 A5020000 		.4byte	0x2a5
 1111 0298 09       		.uleb128 0x9
 1112 0299 01       		.uleb128 0x1
 1113 029a 50       		.byte	0x50
 1114 029b 02       		.uleb128 0x2
 1115 029c 08       		.byte	0x8
 1116 029d 2D       		.byte	0x2d
 1117 029e 09       		.uleb128 0x9
 1118 029f 01       		.uleb128 0x1
 1119 02a0 51       		.byte	0x51
 1120 02a1 02       		.uleb128 0x2
 1121 02a2 08       		.byte	0x8
 1122 02a3 AA       		.byte	0xaa
 1123 02a4 00       		.byte	0
 1124 02a5 0F       		.uleb128 0xf
 1125 02a6 62010000 		.4byte	.LVL54
 1126 02aa 8B0B0000 		.4byte	0xb8b
 1127 02ae BF020000 		.4byte	0x2bf
 1128 02b2 09       		.uleb128 0x9
 1129 02b3 01       		.uleb128 0x1
 1130 02b4 50       		.byte	0x50
 1131 02b5 02       		.uleb128 0x2
 1132 02b6 08       		.byte	0x8
 1133 02b7 C8       		.byte	0xc8
 1134 02b8 09       		.uleb128 0x9
 1135 02b9 01       		.uleb128 0x1
 1136 02ba 51       		.byte	0x51
 1137 02bb 02       		.uleb128 0x2
 1138 02bc 08       		.byte	0x8
 1139 02bd AA       		.byte	0xaa
 1140 02be 00       		.byte	0
 1141 02bf 0F       		.uleb128 0xf
 1142 02c0 6A010000 		.4byte	.LVL55
 1143 02c4 800B0000 		.4byte	0xb80
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccSUHQYZ.s 			page 34


 1144 02c8 D9020000 		.4byte	0x2d9
 1145 02cc 09       		.uleb128 0x9
 1146 02cd 01       		.uleb128 0x1
 1147 02ce 50       		.byte	0x50
 1148 02cf 02       		.uleb128 0x2
 1149 02d0 08       		.byte	0x8
 1150 02d1 5A       		.byte	0x5a
 1151 02d2 09       		.uleb128 0x9
 1152 02d3 01       		.uleb128 0x1
 1153 02d4 51       		.byte	0x51
 1154 02d5 02       		.uleb128 0x2
 1155 02d6 08       		.byte	0x8
 1156 02d7 AA       		.byte	0xaa
 1157 02d8 00       		.byte	0
 1158 02d9 0F       		.uleb128 0xf
 1159 02da 74010000 		.4byte	.LVL56
 1160 02de 8B0B0000 		.4byte	0xb8b
 1161 02e2 F4020000 		.4byte	0x2f4
 1162 02e6 09       		.uleb128 0x9
 1163 02e7 01       		.uleb128 0x1
 1164 02e8 50       		.byte	0x50
 1165 02e9 03       		.uleb128 0x3
 1166 02ea 0A       		.byte	0xa
 1167 02eb F401     		.2byte	0x1f4
 1168 02ed 09       		.uleb128 0x9
 1169 02ee 01       		.uleb128 0x1
 1170 02ef 51       		.byte	0x51
 1171 02f0 02       		.uleb128 0x2
 1172 02f1 08       		.byte	0x8
 1173 02f2 AA       		.byte	0xaa
 1174 02f3 00       		.byte	0
 1175 02f4 0F       		.uleb128 0xf
 1176 02f5 84010000 		.4byte	.LVL57
 1177 02f9 960B0000 		.4byte	0xb96
 1178 02fd 1E030000 		.4byte	0x31e
 1179 0301 09       		.uleb128 0x9
 1180 0302 01       		.uleb128 0x1
 1181 0303 50       		.byte	0x50
 1182 0304 02       		.uleb128 0x2
 1183 0305 08       		.byte	0x8
 1184 0306 64       		.byte	0x64
 1185 0307 09       		.uleb128 0x9
 1186 0308 01       		.uleb128 0x1
 1187 0309 51       		.byte	0x51
 1188 030a 01       		.uleb128 0x1
 1189 030b 31       		.byte	0x31
 1190 030c 09       		.uleb128 0x9
 1191 030d 01       		.uleb128 0x1
 1192 030e 52       		.byte	0x52
 1193 030f 01       		.uleb128 0x1
 1194 0310 30       		.byte	0x30
 1195 0311 09       		.uleb128 0x9
 1196 0312 01       		.uleb128 0x1
 1197 0313 53       		.byte	0x53
 1198 0314 01       		.uleb128 0x1
 1199 0315 30       		.byte	0x30
 1200 0316 09       		.uleb128 0x9
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccSUHQYZ.s 			page 35


 1201 0317 02       		.uleb128 0x2
 1202 0318 7D       		.byte	0x7d
 1203 0319 00       		.sleb128 0
 1204 031a 02       		.uleb128 0x2
 1205 031b 74       		.byte	0x74
 1206 031c 00       		.sleb128 0
 1207 031d 00       		.byte	0
 1208 031e 0F       		.uleb128 0xf
 1209 031f 8A010000 		.4byte	.LVL58
 1210 0323 A10B0000 		.4byte	0xba1
 1211 0327 31030000 		.4byte	0x331
 1212 032b 09       		.uleb128 0x9
 1213 032c 01       		.uleb128 0x1
 1214 032d 50       		.byte	0x50
 1215 032e 01       		.uleb128 0x1
 1216 032f 31       		.byte	0x31
 1217 0330 00       		.byte	0
 1218 0331 0F       		.uleb128 0xf
 1219 0332 92010000 		.4byte	.LVL59
 1220 0336 490B0000 		.4byte	0xb49
 1221 033a 46030000 		.4byte	0x346
 1222 033e 09       		.uleb128 0x9
 1223 033f 01       		.uleb128 0x1
 1224 0340 50       		.byte	0x50
 1225 0341 03       		.uleb128 0x3
 1226 0342 0A       		.byte	0xa
 1227 0343 E803     		.2byte	0x3e8
 1228 0345 00       		.byte	0
 1229 0346 0F       		.uleb128 0xf
 1230 0347 98010000 		.4byte	.LVL60
 1231 034b A10B0000 		.4byte	0xba1
 1232 034f 59030000 		.4byte	0x359
 1233 0353 09       		.uleb128 0x9
 1234 0354 01       		.uleb128 0x1
 1235 0355 50       		.byte	0x50
 1236 0356 01       		.uleb128 0x1
 1237 0357 30       		.byte	0x30
 1238 0358 00       		.byte	0
 1239 0359 0F       		.uleb128 0xf
 1240 035a A0010000 		.4byte	.LVL61
 1241 035e 490B0000 		.4byte	0xb49
 1242 0362 6E030000 		.4byte	0x36e
 1243 0366 09       		.uleb128 0x9
 1244 0367 01       		.uleb128 0x1
 1245 0368 50       		.byte	0x50
 1246 0369 03       		.uleb128 0x3
 1247 036a 0A       		.byte	0xa
 1248 036b F401     		.2byte	0x1f4
 1249 036d 00       		.byte	0
 1250 036e 0F       		.uleb128 0xf
 1251 036f B0010000 		.4byte	.LVL62
 1252 0373 960B0000 		.4byte	0xb96
 1253 0377 99030000 		.4byte	0x399
 1254 037b 09       		.uleb128 0x9
 1255 037c 01       		.uleb128 0x1
 1256 037d 50       		.byte	0x50
 1257 037e 03       		.uleb128 0x3
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccSUHQYZ.s 			page 36


 1258 037f 0A       		.byte	0xa
 1259 0380 F401     		.2byte	0x1f4
 1260 0382 09       		.uleb128 0x9
 1261 0383 01       		.uleb128 0x1
 1262 0384 51       		.byte	0x51
 1263 0385 01       		.uleb128 0x1
 1264 0386 30       		.byte	0x30
 1265 0387 09       		.uleb128 0x9
 1266 0388 01       		.uleb128 0x1
 1267 0389 52       		.byte	0x52
 1268 038a 01       		.uleb128 0x1
 1269 038b 30       		.byte	0x30
 1270 038c 09       		.uleb128 0x9
 1271 038d 01       		.uleb128 0x1
 1272 038e 53       		.byte	0x53
 1273 038f 01       		.uleb128 0x1
 1274 0390 33       		.byte	0x33
 1275 0391 09       		.uleb128 0x9
 1276 0392 02       		.uleb128 0x2
 1277 0393 7D       		.byte	0x7d
 1278 0394 00       		.sleb128 0
 1279 0395 02       		.uleb128 0x2
 1280 0396 74       		.byte	0x74
 1281 0397 00       		.sleb128 0
 1282 0398 00       		.byte	0
 1283 0399 0F       		.uleb128 0xf
 1284 039a B8010000 		.4byte	.LVL63
 1285 039e 490B0000 		.4byte	0xb49
 1286 03a2 AE030000 		.4byte	0x3ae
 1287 03a6 09       		.uleb128 0x9
 1288 03a7 01       		.uleb128 0x1
 1289 03a8 50       		.byte	0x50
 1290 03a9 03       		.uleb128 0x3
 1291 03aa 0A       		.byte	0xa
 1292 03ab D007     		.2byte	0x7d0
 1293 03ad 00       		.byte	0
 1294 03ae 0F       		.uleb128 0xf
 1295 03af C2010000 		.4byte	.LVL64
 1296 03b3 8B0B0000 		.4byte	0xb8b
 1297 03b7 C9030000 		.4byte	0x3c9
 1298 03bb 09       		.uleb128 0x9
 1299 03bc 01       		.uleb128 0x1
 1300 03bd 50       		.byte	0x50
 1301 03be 03       		.uleb128 0x3
 1302 03bf 0B       		.byte	0xb
 1303 03c0 38FF     		.2byte	0xff38
 1304 03c2 09       		.uleb128 0x9
 1305 03c3 01       		.uleb128 0x1
 1306 03c4 51       		.byte	0x51
 1307 03c5 02       		.uleb128 0x2
 1308 03c6 74       		.byte	0x74
 1309 03c7 00       		.sleb128 0
 1310 03c8 00       		.byte	0
 1311 03c9 0F       		.uleb128 0xf
 1312 03ca C8010000 		.4byte	.LVL65
 1313 03ce 540B0000 		.4byte	0xb54
 1314 03d2 DC030000 		.4byte	0x3dc
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccSUHQYZ.s 			page 37


 1315 03d6 09       		.uleb128 0x9
 1316 03d7 01       		.uleb128 0x1
 1317 03d8 50       		.byte	0x50
 1318 03d9 01       		.uleb128 0x1
 1319 03da 33       		.byte	0x33
 1320 03db 00       		.byte	0
 1321 03dc 0F       		.uleb128 0xf
 1322 03dd CE010000 		.4byte	.LVL66
 1323 03e1 490B0000 		.4byte	0xb49
 1324 03e5 F0030000 		.4byte	0x3f0
 1325 03e9 09       		.uleb128 0x9
 1326 03ea 01       		.uleb128 0x1
 1327 03eb 50       		.byte	0x50
 1328 03ec 02       		.uleb128 0x2
 1329 03ed 08       		.byte	0x8
 1330 03ee 32       		.byte	0x32
 1331 03ef 00       		.byte	0
 1332 03f0 0F       		.uleb128 0xf
 1333 03f1 DE010000 		.4byte	.LVL68
 1334 03f5 A10B0000 		.4byte	0xba1
 1335 03f9 03040000 		.4byte	0x403
 1336 03fd 09       		.uleb128 0x9
 1337 03fe 01       		.uleb128 0x1
 1338 03ff 50       		.byte	0x50
 1339 0400 01       		.uleb128 0x1
 1340 0401 32       		.byte	0x32
 1341 0402 00       		.byte	0
 1342 0403 0F       		.uleb128 0xf
 1343 0404 E6010000 		.4byte	.LVL69
 1344 0408 490B0000 		.4byte	0xb49
 1345 040c 18040000 		.4byte	0x418
 1346 0410 09       		.uleb128 0x9
 1347 0411 01       		.uleb128 0x1
 1348 0412 50       		.byte	0x50
 1349 0413 03       		.uleb128 0x3
 1350 0414 0A       		.byte	0xa
 1351 0415 E803     		.2byte	0x3e8
 1352 0417 00       		.byte	0
 1353 0418 0F       		.uleb128 0xf
 1354 0419 EC010000 		.4byte	.LVL70
 1355 041d A10B0000 		.4byte	0xba1
 1356 0421 2B040000 		.4byte	0x42b
 1357 0425 09       		.uleb128 0x9
 1358 0426 01       		.uleb128 0x1
 1359 0427 50       		.byte	0x50
 1360 0428 01       		.uleb128 0x1
 1361 0429 30       		.byte	0x30
 1362 042a 00       		.byte	0
 1363 042b 0F       		.uleb128 0xf
 1364 042c F4010000 		.4byte	.LVL71
 1365 0430 490B0000 		.4byte	0xb49
 1366 0434 40040000 		.4byte	0x440
 1367 0438 09       		.uleb128 0x9
 1368 0439 01       		.uleb128 0x1
 1369 043a 50       		.byte	0x50
 1370 043b 03       		.uleb128 0x3
 1371 043c 0A       		.byte	0xa
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccSUHQYZ.s 			page 38


 1372 043d F401     		.2byte	0x1f4
 1373 043f 00       		.byte	0
 1374 0440 0F       		.uleb128 0xf
 1375 0441 FC010000 		.4byte	.LVL73
 1376 0445 A10B0000 		.4byte	0xba1
 1377 0449 53040000 		.4byte	0x453
 1378 044d 09       		.uleb128 0x9
 1379 044e 01       		.uleb128 0x1
 1380 044f 50       		.byte	0x50
 1381 0450 01       		.uleb128 0x1
 1382 0451 31       		.byte	0x31
 1383 0452 00       		.byte	0
 1384 0453 0F       		.uleb128 0xf
 1385 0454 04020000 		.4byte	.LVL74
 1386 0458 490B0000 		.4byte	0xb49
 1387 045c 68040000 		.4byte	0x468
 1388 0460 09       		.uleb128 0x9
 1389 0461 01       		.uleb128 0x1
 1390 0462 50       		.byte	0x50
 1391 0463 03       		.uleb128 0x3
 1392 0464 0A       		.byte	0xa
 1393 0465 E803     		.2byte	0x3e8
 1394 0467 00       		.byte	0
 1395 0468 0F       		.uleb128 0xf
 1396 0469 0A020000 		.4byte	.LVL75
 1397 046d A10B0000 		.4byte	0xba1
 1398 0471 7B040000 		.4byte	0x47b
 1399 0475 09       		.uleb128 0x9
 1400 0476 01       		.uleb128 0x1
 1401 0477 50       		.byte	0x50
 1402 0478 01       		.uleb128 0x1
 1403 0479 30       		.byte	0x30
 1404 047a 00       		.byte	0
 1405 047b 0F       		.uleb128 0xf
 1406 047c 12020000 		.4byte	.LVL76
 1407 0480 490B0000 		.4byte	0xb49
 1408 0484 90040000 		.4byte	0x490
 1409 0488 09       		.uleb128 0x9
 1410 0489 01       		.uleb128 0x1
 1411 048a 50       		.byte	0x50
 1412 048b 03       		.uleb128 0x3
 1413 048c 0A       		.byte	0xa
 1414 048d F401     		.2byte	0x1f4
 1415 048f 00       		.byte	0
 1416 0490 0F       		.uleb128 0xf
 1417 0491 22020000 		.4byte	.LVL77
 1418 0495 960B0000 		.4byte	0xb96
 1419 0499 BA040000 		.4byte	0x4ba
 1420 049d 09       		.uleb128 0x9
 1421 049e 01       		.uleb128 0x1
 1422 049f 50       		.byte	0x50
 1423 04a0 02       		.uleb128 0x2
 1424 04a1 08       		.byte	0x8
 1425 04a2 64       		.byte	0x64
 1426 04a3 09       		.uleb128 0x9
 1427 04a4 01       		.uleb128 0x1
 1428 04a5 51       		.byte	0x51
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccSUHQYZ.s 			page 39


 1429 04a6 01       		.uleb128 0x1
 1430 04a7 30       		.byte	0x30
 1431 04a8 09       		.uleb128 0x9
 1432 04a9 01       		.uleb128 0x1
 1433 04aa 52       		.byte	0x52
 1434 04ab 01       		.uleb128 0x1
 1435 04ac 30       		.byte	0x30
 1436 04ad 09       		.uleb128 0x9
 1437 04ae 01       		.uleb128 0x1
 1438 04af 53       		.byte	0x53
 1439 04b0 01       		.uleb128 0x1
 1440 04b1 34       		.byte	0x34
 1441 04b2 09       		.uleb128 0x9
 1442 04b3 02       		.uleb128 0x2
 1443 04b4 7D       		.byte	0x7d
 1444 04b5 00       		.sleb128 0
 1445 04b6 02       		.uleb128 0x2
 1446 04b7 74       		.byte	0x74
 1447 04b8 00       		.sleb128 0
 1448 04b9 00       		.byte	0
 1449 04ba 0F       		.uleb128 0xf
 1450 04bb 2A020000 		.4byte	.LVL78
 1451 04bf 800B0000 		.4byte	0xb80
 1452 04c3 D4040000 		.4byte	0x4d4
 1453 04c7 09       		.uleb128 0x9
 1454 04c8 01       		.uleb128 0x1
 1455 04c9 50       		.byte	0x50
 1456 04ca 02       		.uleb128 0x2
 1457 04cb 08       		.byte	0x8
 1458 04cc 5A       		.byte	0x5a
 1459 04cd 09       		.uleb128 0x9
 1460 04ce 01       		.uleb128 0x1
 1461 04cf 51       		.byte	0x51
 1462 04d0 02       		.uleb128 0x2
 1463 04d1 74       		.byte	0x74
 1464 04d2 00       		.sleb128 0
 1465 04d3 00       		.byte	0
 1466 04d4 08       		.uleb128 0x8
 1467 04d5 3A020000 		.4byte	.LVL79
 1468 04d9 960B0000 		.4byte	0xb96
 1469 04dd 09       		.uleb128 0x9
 1470 04de 01       		.uleb128 0x1
 1471 04df 50       		.byte	0x50
 1472 04e0 03       		.uleb128 0x3
 1473 04e1 0A       		.byte	0xa
 1474 04e2 2C01     		.2byte	0x12c
 1475 04e4 09       		.uleb128 0x9
 1476 04e5 01       		.uleb128 0x1
 1477 04e6 51       		.byte	0x51
 1478 04e7 01       		.uleb128 0x1
 1479 04e8 31       		.byte	0x31
 1480 04e9 09       		.uleb128 0x9
 1481 04ea 01       		.uleb128 0x1
 1482 04eb 52       		.byte	0x52
 1483 04ec 01       		.uleb128 0x1
 1484 04ed 30       		.byte	0x30
 1485 04ee 09       		.uleb128 0x9
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccSUHQYZ.s 			page 40


 1486 04ef 01       		.uleb128 0x1
 1487 04f0 53       		.byte	0x53
 1488 04f1 01       		.uleb128 0x1
 1489 04f2 30       		.byte	0x30
 1490 04f3 09       		.uleb128 0x9
 1491 04f4 02       		.uleb128 0x2
 1492 04f5 7D       		.byte	0x7d
 1493 04f6 00       		.sleb128 0
 1494 04f7 02       		.uleb128 0x2
 1495 04f8 74       		.byte	0x74
 1496 04f9 00       		.sleb128 0
 1497 04fa 00       		.byte	0
 1498 04fb 00       		.byte	0
 1499 04fc 0C       		.uleb128 0xc
 1500 04fd 4A020000 		.4byte	.LBB7
 1501 0501 8A000000 		.4byte	.LBE7-.LBB7
 1502 0505 DB050000 		.4byte	0x5db
 1503 0509 11       		.uleb128 0x11
 1504 050a FC010000 		.4byte	.LASF23
 1505 050e 01       		.byte	0x1
 1506 050f A802     		.2byte	0x2a8
 1507 0511 68000000 		.4byte	0x68
 1508 0515 71000000 		.4byte	.LLST4
 1509 0519 11       		.uleb128 0x11
 1510 051a 24060000 		.4byte	.LASF24
 1511 051e 01       		.byte	0x1
 1512 051f A902     		.2byte	0x2a9
 1513 0521 68000000 		.4byte	0x68
 1514 0525 90000000 		.4byte	.LLST5
 1515 0529 0F       		.uleb128 0xf
 1516 052a 5C020000 		.4byte	.LVL83
 1517 052e 8B0B0000 		.4byte	0xb8b
 1518 0532 43050000 		.4byte	0x543
 1519 0536 09       		.uleb128 0x9
 1520 0537 01       		.uleb128 0x1
 1521 0538 50       		.byte	0x50
 1522 0539 02       		.uleb128 0x2
 1523 053a 08       		.byte	0x8
 1524 053b 32       		.byte	0x32
 1525 053c 09       		.uleb128 0x9
 1526 053d 01       		.uleb128 0x1
 1527 053e 51       		.byte	0x51
 1528 053f 02       		.uleb128 0x2
 1529 0540 08       		.byte	0x8
 1530 0541 AA       		.byte	0xaa
 1531 0542 00       		.byte	0
 1532 0543 0F       		.uleb128 0xf
 1533 0544 62020000 		.4byte	.LVL84
 1534 0548 AC0B0000 		.4byte	0xbac
 1535 054c 56050000 		.4byte	0x556
 1536 0550 09       		.uleb128 0x9
 1537 0551 01       		.uleb128 0x1
 1538 0552 50       		.byte	0x50
 1539 0553 01       		.uleb128 0x1
 1540 0554 31       		.byte	0x31
 1541 0555 00       		.byte	0
 1542 0556 06       		.uleb128 0x6
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccSUHQYZ.s 			page 41


 1543 0557 66020000 		.4byte	.LVL85
 1544 055b B70B0000 		.4byte	0xbb7
 1545 055f 0F       		.uleb128 0xf
 1546 0560 6E020000 		.4byte	.LVL88
 1547 0564 AC0B0000 		.4byte	0xbac
 1548 0568 72050000 		.4byte	0x572
 1549 056c 09       		.uleb128 0x9
 1550 056d 01       		.uleb128 0x1
 1551 056e 50       		.byte	0x50
 1552 056f 01       		.uleb128 0x1
 1553 0570 33       		.byte	0x33
 1554 0571 00       		.byte	0
 1555 0572 0F       		.uleb128 0xf
 1556 0573 78020000 		.4byte	.LVL89
 1557 0577 8B0B0000 		.4byte	0xb8b
 1558 057b 8C050000 		.4byte	0x58c
 1559 057f 09       		.uleb128 0x9
 1560 0580 01       		.uleb128 0x1
 1561 0581 50       		.byte	0x50
 1562 0582 02       		.uleb128 0x2
 1563 0583 09       		.byte	0x9
 1564 0584 CE       		.byte	0xce
 1565 0585 09       		.uleb128 0x9
 1566 0586 01       		.uleb128 0x1
 1567 0587 51       		.byte	0x51
 1568 0588 02       		.uleb128 0x2
 1569 0589 08       		.byte	0x8
 1570 058a AA       		.byte	0xaa
 1571 058b 00       		.byte	0
 1572 058c 0F       		.uleb128 0xf
 1573 058d 8C020000 		.4byte	.LVL91
 1574 0591 AC0B0000 		.4byte	0xbac
 1575 0595 9F050000 		.4byte	0x59f
 1576 0599 09       		.uleb128 0x9
 1577 059a 01       		.uleb128 0x1
 1578 059b 50       		.byte	0x50
 1579 059c 01       		.uleb128 0x1
 1580 059d 30       		.byte	0x30
 1581 059e 00       		.byte	0
 1582 059f 06       		.uleb128 0x6
 1583 05a0 90020000 		.4byte	.LVL92
 1584 05a4 C20B0000 		.4byte	0xbc2
 1585 05a8 06       		.uleb128 0x6
 1586 05a9 94020000 		.4byte	.LVL93
 1587 05ad CD0B0000 		.4byte	0xbcd
 1588 05b1 0F       		.uleb128 0xf
 1589 05b2 9A020000 		.4byte	.LVL94
 1590 05b6 AC0B0000 		.4byte	0xbac
 1591 05ba C4050000 		.4byte	0x5c4
 1592 05be 09       		.uleb128 0x9
 1593 05bf 01       		.uleb128 0x1
 1594 05c0 50       		.byte	0x50
 1595 05c1 01       		.uleb128 0x1
 1596 05c2 33       		.byte	0x33
 1597 05c3 00       		.byte	0
 1598 05c4 08       		.uleb128 0x8
 1599 05c5 A4020000 		.4byte	.LVL95
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccSUHQYZ.s 			page 42


 1600 05c9 8B0B0000 		.4byte	0xb8b
 1601 05cd 09       		.uleb128 0x9
 1602 05ce 01       		.uleb128 0x1
 1603 05cf 50       		.byte	0x50
 1604 05d0 02       		.uleb128 0x2
 1605 05d1 09       		.byte	0x9
 1606 05d2 C4       		.byte	0xc4
 1607 05d3 09       		.uleb128 0x9
 1608 05d4 01       		.uleb128 0x1
 1609 05d5 51       		.byte	0x51
 1610 05d6 02       		.uleb128 0x2
 1611 05d7 08       		.byte	0x8
 1612 05d8 AA       		.byte	0xaa
 1613 05d9 00       		.byte	0
 1614 05da 00       		.byte	0
 1615 05db 06       		.uleb128 0x6
 1616 05dc 0A000000 		.4byte	.LVL2
 1617 05e0 D80B0000 		.4byte	0xbd8
 1618 05e4 06       		.uleb128 0x6
 1619 05e5 0E000000 		.4byte	.LVL3
 1620 05e9 E30B0000 		.4byte	0xbe3
 1621 05ed 0F       		.uleb128 0xf
 1622 05ee 14000000 		.4byte	.LVL4
 1623 05f2 6A0B0000 		.4byte	0xb6a
 1624 05f6 04060000 		.4byte	0x604
 1625 05fa 09       		.uleb128 0x9
 1626 05fb 01       		.uleb128 0x1
 1627 05fc 50       		.byte	0x50
 1628 05fd 05       		.uleb128 0x5
 1629 05fe 03       		.byte	0x3
 1630 05ff 00000000 		.4byte	.LC0
 1631 0603 00       		.byte	0
 1632 0604 06       		.uleb128 0x6
 1633 0605 18000000 		.4byte	.LVL5
 1634 0609 EE0B0000 		.4byte	0xbee
 1635 060d 06       		.uleb128 0x6
 1636 060e 1C000000 		.4byte	.LVL6
 1637 0612 F90B0000 		.4byte	0xbf9
 1638 0616 0F       		.uleb128 0xf
 1639 0617 22000000 		.4byte	.LVL7
 1640 061b 040C0000 		.4byte	0xc04
 1641 061f 29060000 		.4byte	0x629
 1642 0623 09       		.uleb128 0x9
 1643 0624 01       		.uleb128 0x1
 1644 0625 50       		.byte	0x50
 1645 0626 01       		.uleb128 0x1
 1646 0627 30       		.byte	0x30
 1647 0628 00       		.byte	0
 1648 0629 06       		.uleb128 0x6
 1649 062a 2A000000 		.4byte	.LVL8
 1650 062e 0F0C0000 		.4byte	0xc0f
 1651 0632 0F       		.uleb128 0xf
 1652 0633 34000000 		.4byte	.LVL9
 1653 0637 1A0C0000 		.4byte	0xc1a
 1654 063b 46060000 		.4byte	0x646
 1655 063f 09       		.uleb128 0x9
 1656 0640 01       		.uleb128 0x1
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccSUHQYZ.s 			page 43


 1657 0641 50       		.byte	0x50
 1658 0642 02       		.uleb128 0x2
 1659 0643 74       		.byte	0x74
 1660 0644 00       		.sleb128 0
 1661 0645 00       		.byte	0
 1662 0646 0F       		.uleb128 0xf
 1663 0647 3A000000 		.4byte	.LVL10
 1664 064b A10B0000 		.4byte	0xba1
 1665 064f 59060000 		.4byte	0x659
 1666 0653 09       		.uleb128 0x9
 1667 0654 01       		.uleb128 0x1
 1668 0655 50       		.byte	0x50
 1669 0656 01       		.uleb128 0x1
 1670 0657 31       		.byte	0x31
 1671 0658 00       		.byte	0
 1672 0659 0F       		.uleb128 0xf
 1673 065a 42000000 		.4byte	.LVL11
 1674 065e 490B0000 		.4byte	0xb49
 1675 0662 6E060000 		.4byte	0x66e
 1676 0666 09       		.uleb128 0x9
 1677 0667 01       		.uleb128 0x1
 1678 0668 50       		.byte	0x50
 1679 0669 03       		.uleb128 0x3
 1680 066a 0A       		.byte	0xa
 1681 066b F401     		.2byte	0x1f4
 1682 066d 00       		.byte	0
 1683 066e 0F       		.uleb128 0xf
 1684 066f 48000000 		.4byte	.LVL12
 1685 0673 A10B0000 		.4byte	0xba1
 1686 0677 81060000 		.4byte	0x681
 1687 067b 09       		.uleb128 0x9
 1688 067c 01       		.uleb128 0x1
 1689 067d 50       		.byte	0x50
 1690 067e 01       		.uleb128 0x1
 1691 067f 32       		.byte	0x32
 1692 0680 00       		.byte	0
 1693 0681 0F       		.uleb128 0xf
 1694 0682 50000000 		.4byte	.LVL13
 1695 0686 490B0000 		.4byte	0xb49
 1696 068a 96060000 		.4byte	0x696
 1697 068e 09       		.uleb128 0x9
 1698 068f 01       		.uleb128 0x1
 1699 0690 50       		.byte	0x50
 1700 0691 03       		.uleb128 0x3
 1701 0692 0A       		.byte	0xa
 1702 0693 F401     		.2byte	0x1f4
 1703 0695 00       		.byte	0
 1704 0696 0F       		.uleb128 0xf
 1705 0697 56000000 		.4byte	.LVL14
 1706 069b A10B0000 		.4byte	0xba1
 1707 069f A9060000 		.4byte	0x6a9
 1708 06a3 09       		.uleb128 0x9
 1709 06a4 01       		.uleb128 0x1
 1710 06a5 50       		.byte	0x50
 1711 06a6 01       		.uleb128 0x1
 1712 06a7 33       		.byte	0x33
 1713 06a8 00       		.byte	0
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccSUHQYZ.s 			page 44


 1714 06a9 0F       		.uleb128 0xf
 1715 06aa 5E000000 		.4byte	.LVL15
 1716 06ae 490B0000 		.4byte	0xb49
 1717 06b2 BE060000 		.4byte	0x6be
 1718 06b6 09       		.uleb128 0x9
 1719 06b7 01       		.uleb128 0x1
 1720 06b8 50       		.byte	0x50
 1721 06b9 03       		.uleb128 0x3
 1722 06ba 0A       		.byte	0xa
 1723 06bb F401     		.2byte	0x1f4
 1724 06bd 00       		.byte	0
 1725 06be 0F       		.uleb128 0xf
 1726 06bf 64000000 		.4byte	.LVL16
 1727 06c3 A10B0000 		.4byte	0xba1
 1728 06c7 D2060000 		.4byte	0x6d2
 1729 06cb 09       		.uleb128 0x9
 1730 06cc 01       		.uleb128 0x1
 1731 06cd 50       		.byte	0x50
 1732 06ce 02       		.uleb128 0x2
 1733 06cf 74       		.byte	0x74
 1734 06d0 00       		.sleb128 0
 1735 06d1 00       		.byte	0
 1736 06d2 0F       		.uleb128 0xf
 1737 06d3 6C000000 		.4byte	.LVL17
 1738 06d7 490B0000 		.4byte	0xb49
 1739 06db E7060000 		.4byte	0x6e7
 1740 06df 09       		.uleb128 0x9
 1741 06e0 01       		.uleb128 0x1
 1742 06e1 50       		.byte	0x50
 1743 06e2 03       		.uleb128 0x3
 1744 06e3 0A       		.byte	0xa
 1745 06e4 F401     		.2byte	0x1f4
 1746 06e6 00       		.byte	0
 1747 06e7 06       		.uleb128 0x6
 1748 06e8 70000000 		.4byte	.LVL18
 1749 06ec 250C0000 		.4byte	0xc25
 1750 06f0 06       		.uleb128 0x6
 1751 06f1 74000000 		.4byte	.LVL19
 1752 06f5 300C0000 		.4byte	0xc30
 1753 06f9 0F       		.uleb128 0xf
 1754 06fa 7C000000 		.4byte	.LVL20
 1755 06fe 3B0C0000 		.4byte	0xc3b
 1756 0702 0E070000 		.4byte	0x70e
 1757 0706 09       		.uleb128 0x9
 1758 0707 01       		.uleb128 0x1
 1759 0708 50       		.byte	0x50
 1760 0709 03       		.uleb128 0x3
 1761 070a 0A       		.byte	0xa
 1762 070b E803     		.2byte	0x3e8
 1763 070d 00       		.byte	0
 1764 070e 0F       		.uleb128 0xf
 1765 070f 84000000 		.4byte	.LVL21
 1766 0713 490B0000 		.4byte	0xb49
 1767 0717 23070000 		.4byte	0x723
 1768 071b 09       		.uleb128 0x9
 1769 071c 01       		.uleb128 0x1
 1770 071d 50       		.byte	0x50
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccSUHQYZ.s 			page 45


 1771 071e 03       		.uleb128 0x3
 1772 071f 0A       		.byte	0xa
 1773 0720 F401     		.2byte	0x1f4
 1774 0722 00       		.byte	0
 1775 0723 06       		.uleb128 0x6
 1776 0724 88000000 		.4byte	.LVL22
 1777 0728 460C0000 		.4byte	0xc46
 1778 072c 06       		.uleb128 0x6
 1779 072d 8C000000 		.4byte	.LVL23
 1780 0731 510C0000 		.4byte	0xc51
 1781 0735 0F       		.uleb128 0xf
 1782 0736 94000000 		.4byte	.LVL24
 1783 073a 5C0C0000 		.4byte	0xc5c
 1784 073e 4A070000 		.4byte	0x74a
 1785 0742 09       		.uleb128 0x9
 1786 0743 01       		.uleb128 0x1
 1787 0744 50       		.byte	0x50
 1788 0745 03       		.uleb128 0x3
 1789 0746 0A       		.byte	0xa
 1790 0747 6004     		.2byte	0x460
 1791 0749 00       		.byte	0
 1792 074a 0F       		.uleb128 0xf
 1793 074b 9C000000 		.4byte	.LVL25
 1794 074f 490B0000 		.4byte	0xb49
 1795 0753 5F070000 		.4byte	0x75f
 1796 0757 09       		.uleb128 0x9
 1797 0758 01       		.uleb128 0x1
 1798 0759 50       		.byte	0x50
 1799 075a 03       		.uleb128 0x3
 1800 075b 0A       		.byte	0xa
 1801 075c F401     		.2byte	0x1f4
 1802 075e 00       		.byte	0
 1803 075f 06       		.uleb128 0x6
 1804 0760 A0000000 		.4byte	.LVL26
 1805 0764 670C0000 		.4byte	0xc67
 1806 0768 06       		.uleb128 0x6
 1807 0769 A4000000 		.4byte	.LVL27
 1808 076d 720C0000 		.4byte	0xc72
 1809 0771 06       		.uleb128 0x6
 1810 0772 A8000000 		.4byte	.LVL28
 1811 0776 7D0C0000 		.4byte	0xc7d
 1812 077a 06       		.uleb128 0x6
 1813 077b AC000000 		.4byte	.LVL29
 1814 077f 880C0000 		.4byte	0xc88
 1815 0783 06       		.uleb128 0x6
 1816 0784 B0000000 		.4byte	.LVL30
 1817 0788 930C0000 		.4byte	0xc93
 1818 078c 06       		.uleb128 0x6
 1819 078d B4000000 		.4byte	.LVL31
 1820 0791 9E0C0000 		.4byte	0xc9e
 1821 0795 06       		.uleb128 0x6
 1822 0796 B8000000 		.4byte	.LVL32
 1823 079a A90C0000 		.4byte	0xca9
 1824 079e 06       		.uleb128 0x6
 1825 079f C2000000 		.4byte	.LVL33
 1826 07a3 B40C0000 		.4byte	0xcb4
 1827 07a7 06       		.uleb128 0x6
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccSUHQYZ.s 			page 46


 1828 07a8 C6000000 		.4byte	.LVL34
 1829 07ac BF0C0000 		.4byte	0xcbf
 1830 07b0 0F       		.uleb128 0xf
 1831 07b1 CC000000 		.4byte	.LVL35
 1832 07b5 CA0C0000 		.4byte	0xcca
 1833 07b9 C7070000 		.4byte	0x7c7
 1834 07bd 09       		.uleb128 0x9
 1835 07be 01       		.uleb128 0x1
 1836 07bf 50       		.byte	0x50
 1837 07c0 05       		.uleb128 0x5
 1838 07c1 03       		.byte	0x3
 1839 07c2 00000000 		.4byte	TIH
 1840 07c6 00       		.byte	0
 1841 07c7 0F       		.uleb128 0xf
 1842 07c8 D2000000 		.4byte	.LVL36
 1843 07cc D50C0000 		.4byte	0xcd5
 1844 07d0 DE070000 		.4byte	0x7de
 1845 07d4 09       		.uleb128 0x9
 1846 07d5 01       		.uleb128 0x1
 1847 07d6 50       		.byte	0x50
 1848 07d7 05       		.uleb128 0x5
 1849 07d8 03       		.byte	0x3
 1850 07d9 00000000 		.4byte	StartIH
 1851 07dd 00       		.byte	0
 1852 07de 08       		.uleb128 0x8
 1853 07df DA000000 		.4byte	.LVL37
 1854 07e3 6A0B0000 		.4byte	0xb6a
 1855 07e7 09       		.uleb128 0x9
 1856 07e8 01       		.uleb128 0x1
 1857 07e9 50       		.byte	0x50
 1858 07ea 05       		.uleb128 0x5
 1859 07eb 03       		.byte	0x3
 1860 07ec 18000000 		.4byte	.LC1
 1861 07f0 00       		.byte	0
 1862 07f1 00       		.byte	0
 1863 07f2 12       		.uleb128 0x12
 1864 07f3 0D070000 		.4byte	.LASF25
 1865 07f7 04       		.byte	0x4
 1866 07f8 1207     		.2byte	0x712
 1867 07fa FE070000 		.4byte	0x7fe
 1868 07fe 13       		.uleb128 0x13
 1869 07ff 76000000 		.4byte	0x76
 1870 0803 14       		.uleb128 0x14
 1871 0804 A3020000 		.4byte	.LASF26
 1872 0808 05       		.byte	0x5
 1873 0809 38       		.byte	0x38
 1874 080a 68000000 		.4byte	0x68
 1875 080e 05       		.uleb128 0x5
 1876 080f 03       		.byte	0x3
 1877 0810 00000000 		.4byte	internal_orientation
 1878 0814 14       		.uleb128 0x14
 1879 0815 B3010000 		.4byte	.LASF27
 1880 0819 06       		.byte	0x6
 1881 081a 1E       		.byte	0x1e
 1882 081b 68000000 		.4byte	0x68
 1883 081f 05       		.uleb128 0x5
 1884 0820 03       		.byte	0x3
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccSUHQYZ.s 			page 47


 1885 0821 00000000 		.4byte	driveStraightEnable
 1886 0825 14       		.uleb128 0x14
 1887 0826 2E030000 		.4byte	.LASF28
 1888 082a 01       		.byte	0x1
 1889 082b 2C       		.byte	0x2c
 1890 082c 68000000 		.4byte	0x68
 1891 0830 05       		.uleb128 0x5
 1892 0831 03       		.byte	0x3
 1893 0832 00000000 		.4byte	currentPuckRackScanningIndex
 1894 0836 15       		.uleb128 0x15
 1895 0837 68000000 		.4byte	0x68
 1896 083b 46080000 		.4byte	0x846
 1897 083f 16       		.uleb128 0x16
 1898 0840 9D000000 		.4byte	0x9d
 1899 0844 04       		.byte	0x4
 1900 0845 00       		.byte	0
 1901 0846 14       		.uleb128 0x14
 1902 0847 06050000 		.4byte	.LASF29
 1903 084b 01       		.byte	0x1
 1904 084c 2A       		.byte	0x2a
 1905 084d 36080000 		.4byte	0x836
 1906 0851 05       		.uleb128 0x5
 1907 0852 03       		.byte	0x3
 1908 0853 00000000 		.4byte	puckRackColours
 1909 0857 14       		.uleb128 0x14
 1910 0858 EE000000 		.4byte	.LASF30
 1911 085c 01       		.byte	0x1
 1912 085d 2D       		.byte	0x2d
 1913 085e 36080000 		.4byte	0x836
 1914 0862 05       		.uleb128 0x5
 1915 0863 03       		.byte	0x3
 1916 0864 00000000 		.4byte	puckRackOffsetsFromWest
 1917 0868 14       		.uleb128 0x14
 1918 0869 AA010000 		.4byte	.LASF31
 1919 086d 01       		.byte	0x1
 1920 086e 25       		.byte	0x25
 1921 086f 68000000 		.4byte	0x68
 1922 0873 05       		.uleb128 0x5
 1923 0874 03       		.byte	0x3
 1924 0875 00000000 		.4byte	sweeping
 1925 0879 15       		.uleb128 0x15
 1926 087a 81000000 		.4byte	0x81
 1927 087e 89080000 		.4byte	0x889
 1928 0882 16       		.uleb128 0x16
 1929 0883 9D000000 		.4byte	0x9d
 1930 0887 03       		.byte	0x3
 1931 0888 00       		.byte	0
 1932 0889 14       		.uleb128 0x14
 1933 088a 0B040000 		.4byte	.LASF32
 1934 088e 01       		.byte	0x1
 1935 088f 26       		.byte	0x26
 1936 0890 79080000 		.4byte	0x879
 1937 0894 05       		.uleb128 0x5
 1938 0895 03       		.byte	0x3
 1939 0896 00000000 		.4byte	block_edge_location
 1940 089a 14       		.uleb128 0x14
 1941 089b 09030000 		.4byte	.LASF33
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccSUHQYZ.s 			page 48


 1942 089f 05       		.byte	0x5
 1943 08a0 86       		.byte	0x86
 1944 08a1 81000000 		.4byte	0x81
 1945 08a5 05       		.uleb128 0x5
 1946 08a6 03       		.byte	0x3
 1947 08a7 00000000 		.4byte	puckPileLocation
 1948 08ab 14       		.uleb128 0x14
 1949 08ac 7D000000 		.4byte	.LASF34
 1950 08b0 01       		.byte	0x1
 1951 08b1 4F       		.byte	0x4f
 1952 08b2 33000000 		.4byte	0x33
 1953 08b6 05       		.uleb128 0x5
 1954 08b7 03       		.byte	0x3
 1955 08b8 00000000 		.4byte	drivingForwardFlag
 1956 08bc 14       		.uleb128 0x14
 1957 08bd 1A030000 		.4byte	.LASF35
 1958 08c1 01       		.byte	0x1
 1959 08c2 50       		.byte	0x50
 1960 08c3 33000000 		.4byte	0x33
 1961 08c7 05       		.uleb128 0x5
 1962 08c8 03       		.byte	0x3
 1963 08c9 00000000 		.4byte	drivingBackwardFlag
 1964 08cd 14       		.uleb128 0x14
 1965 08ce 45000000 		.4byte	.LASF36
 1966 08d2 01       		.byte	0x1
 1967 08d3 51       		.byte	0x51
 1968 08d4 33000000 		.4byte	0x33
 1969 08d8 05       		.uleb128 0x5
 1970 08d9 03       		.byte	0x3
 1971 08da 00000000 		.4byte	turningLeftFlag
 1972 08de 14       		.uleb128 0x14
 1973 08df 24020000 		.4byte	.LASF37
 1974 08e3 01       		.byte	0x1
 1975 08e4 52       		.byte	0x52
 1976 08e5 33000000 		.4byte	0x33
 1977 08e9 05       		.uleb128 0x5
 1978 08ea 03       		.byte	0x3
 1979 08eb 00000000 		.4byte	turningRightFlag
 1980 08ef 14       		.uleb128 0x14
 1981 08f0 EB070000 		.4byte	.LASF38
 1982 08f4 06       		.byte	0x6
 1983 08f5 2C       		.byte	0x2c
 1984 08f6 68000000 		.4byte	0x68
 1985 08fa 05       		.uleb128 0x5
 1986 08fb 03       		.byte	0x3
 1987 08fc 00000000 		.4byte	initialisation
 1988 0900 15       		.uleb128 0x15
 1989 0901 8F000000 		.4byte	0x8f
 1990 0905 10090000 		.4byte	0x910
 1991 0909 16       		.uleb128 0x16
 1992 090a 9D000000 		.4byte	0x9d
 1993 090e 1F       		.byte	0x1f
 1994 090f 00       		.byte	0
 1995 0910 14       		.uleb128 0x14
 1996 0911 CE060000 		.4byte	.LASF39
 1997 0915 01       		.byte	0x1
 1998 0916 20       		.byte	0x20
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccSUHQYZ.s 			page 49


 1999 0917 00090000 		.4byte	0x900
 2000 091b 05       		.uleb128 0x5
 2001 091c 03       		.byte	0x3
 2002 091d 00000000 		.4byte	output
 2003 0921 17       		.uleb128 0x17
 2004 0922 2D010000 		.4byte	.LASF40
 2005 0926 05       		.byte	0x5
 2006 0927 A4       		.byte	0xa4
 2007 0928 36080000 		.4byte	0x836
 2008 092c 14       		.uleb128 0x14
 2009 092d 88030000 		.4byte	.LASF41
 2010 0931 01       		.byte	0x1
 2011 0932 5E       		.byte	0x5e
 2012 0933 68000000 		.4byte	0x68
 2013 0937 05       		.uleb128 0x5
 2014 0938 03       		.byte	0x3
 2015 0939 00000000 		.4byte	colour_flag
 2016 093d 14       		.uleb128 0x14
 2017 093e 67030000 		.4byte	.LASF42
 2018 0942 01       		.byte	0x1
 2019 0943 23       		.byte	0x23
 2020 0944 68000000 		.4byte	0x68
 2021 0948 05       		.uleb128 0x5
 2022 0949 03       		.byte	0x3
 2023 094a 00000000 		.4byte	state
 2024 094e 14       		.uleb128 0x14
 2025 094f 55050000 		.4byte	.LASF43
 2026 0953 01       		.byte	0x1
 2027 0954 64       		.byte	0x64
 2028 0955 68000000 		.4byte	0x68
 2029 0959 05       		.uleb128 0x5
 2030 095a 03       		.byte	0x3
 2031 095b 00000000 		.4byte	moving
 2032 095f 14       		.uleb128 0x14
 2033 0960 45010000 		.4byte	.LASF44
 2034 0964 06       		.byte	0x6
 2035 0965 2E       		.byte	0x2e
 2036 0966 68000000 		.4byte	0x68
 2037 096a 05       		.uleb128 0x5
 2038 096b 03       		.byte	0x3
 2039 096c 00000000 		.4byte	ultrasonic_flag
 2040 0970 14       		.uleb128 0x14
 2041 0971 7C040000 		.4byte	.LASF45
 2042 0975 01       		.byte	0x1
 2043 0976 45       		.byte	0x45
 2044 0977 68000000 		.4byte	0x68
 2045 097b 05       		.uleb128 0x5
 2046 097c 03       		.byte	0x3
 2047 097d 00000000 		.4byte	currentOrientation
 2048 0981 15       		.uleb128 0x15
 2049 0982 68000000 		.4byte	0x68
 2050 0986 91090000 		.4byte	0x991
 2051 098a 16       		.uleb128 0x16
 2052 098b 9D000000 		.4byte	0x9d
 2053 098f 02       		.byte	0x2
 2054 0990 00       		.byte	0
 2055 0991 14       		.uleb128 0x14
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccSUHQYZ.s 			page 50


 2056 0992 EB050000 		.4byte	.LASF46
 2057 0996 01       		.byte	0x1
 2058 0997 2B       		.byte	0x2b
 2059 0998 81090000 		.4byte	0x981
 2060 099c 05       		.uleb128 0x5
 2061 099d 03       		.byte	0x3
 2062 099e 00000000 		.4byte	puckConstructionPlan
 2063 09a2 14       		.uleb128 0x14
 2064 09a3 A2040000 		.4byte	.LASF47
 2065 09a7 01       		.byte	0x1
 2066 09a8 68       		.byte	0x68
 2067 09a9 68000000 		.4byte	0x68
 2068 09ad 05       		.uleb128 0x5
 2069 09ae 03       		.byte	0x3
 2070 09af 00000000 		.4byte	current_stage
 2071 09b3 14       		.uleb128 0x14
 2072 09b4 3C050000 		.4byte	.LASF48
 2073 09b8 01       		.byte	0x1
 2074 09b9 5F       		.byte	0x5f
 2075 09ba 68000000 		.4byte	0x68
 2076 09be 05       		.uleb128 0x5
 2077 09bf 03       		.byte	0x3
 2078 09c0 00000000 		.4byte	colour_sensing_algorithm
 2079 09c4 14       		.uleb128 0x14
 2080 09c5 DC010000 		.4byte	.LASF49
 2081 09c9 01       		.byte	0x1
 2082 09ca 24       		.byte	0x24
 2083 09cb 68000000 		.4byte	0x68
 2084 09cf 05       		.uleb128 0x5
 2085 09d0 03       		.byte	0x3
 2086 09d1 00000000 		.4byte	running
 2087 09d5 14       		.uleb128 0x14
 2088 09d6 C7010000 		.4byte	.LASF50
 2089 09da 01       		.byte	0x1
 2090 09db 29       		.byte	0x29
 2091 09dc 68000000 		.4byte	0x68
 2092 09e0 05       		.uleb128 0x5
 2093 09e1 03       		.byte	0x3
 2094 09e2 00000000 		.4byte	currentPuckStackSize
 2095 09e6 14       		.uleb128 0x14
 2096 09e7 29050000 		.4byte	.LASF51
 2097 09eb 01       		.byte	0x1
 2098 09ec 33       		.byte	0x33
 2099 09ed 81000000 		.4byte	0x81
 2100 09f1 05       		.uleb128 0x5
 2101 09f2 03       		.byte	0x3
 2102 09f3 00000000 		.4byte	horizontalPuckGrid
 2103 09f7 14       		.uleb128 0x14
 2104 09f8 C5000000 		.4byte	.LASF52
 2105 09fc 01       		.byte	0x1
 2106 09fd 37       		.byte	0x37
 2107 09fe 68000000 		.4byte	0x68
 2108 0a02 05       		.uleb128 0x5
 2109 0a03 03       		.byte	0x3
 2110 0a04 00000000 		.4byte	beginNavigation
 2111 0a08 14       		.uleb128 0x14
 2112 0a09 CA070000 		.4byte	.LASF53
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccSUHQYZ.s 			page 51


 2113 0a0d 01       		.byte	0x1
 2114 0a0e 39       		.byte	0x39
 2115 0a0f 68000000 		.4byte	0x68
 2116 0a13 05       		.uleb128 0x5
 2117 0a14 03       		.byte	0x3
 2118 0a15 00000000 		.4byte	pathToPucks
 2119 0a19 14       		.uleb128 0x14
 2120 0a1a 7A050000 		.4byte	.LASF54
 2121 0a1e 01       		.byte	0x1
 2122 0a1f 3A       		.byte	0x3a
 2123 0a20 68000000 		.4byte	0x68
 2124 0a24 05       		.uleb128 0x5
 2125 0a25 03       		.byte	0x3
 2126 0a26 00000000 		.4byte	pathPastBlock
 2127 0a2a 14       		.uleb128 0x14
 2128 0a2b F6020000 		.4byte	.LASF55
 2129 0a2f 01       		.byte	0x1
 2130 0a30 3E       		.byte	0x3e
 2131 0a31 33000000 		.4byte	0x33
 2132 0a35 05       		.uleb128 0x5
 2133 0a36 03       		.byte	0x3
 2134 0a37 00000000 		.4byte	blockEastClearance
 2135 0a3b 14       		.uleb128 0x14
 2136 0a3c 38060000 		.4byte	.LASF56
 2137 0a40 01       		.byte	0x1
 2138 0a41 3F       		.byte	0x3f
 2139 0a42 33000000 		.4byte	0x33
 2140 0a46 05       		.uleb128 0x5
 2141 0a47 03       		.byte	0x3
 2142 0a48 00000000 		.4byte	blockWestClearance
 2143 0a4c 14       		.uleb128 0x14
 2144 0a4d 35020000 		.4byte	.LASF57
 2145 0a51 01       		.byte	0x1
 2146 0a52 40       		.byte	0x40
 2147 0a53 33000000 		.4byte	0x33
 2148 0a57 05       		.uleb128 0x5
 2149 0a58 03       		.byte	0x3
 2150 0a59 00000000 		.4byte	puckEastClearance
 2151 0a5d 14       		.uleb128 0x14
 2152 0a5e EF040000 		.4byte	.LASF58
 2153 0a62 01       		.byte	0x1
 2154 0a63 41       		.byte	0x41
 2155 0a64 33000000 		.4byte	0x33
 2156 0a68 05       		.uleb128 0x5
 2157 0a69 03       		.byte	0x3
 2158 0a6a 00000000 		.4byte	puckWestClearance
 2159 0a6e 15       		.uleb128 0x15
 2160 0a6f 81000000 		.4byte	0x81
 2161 0a73 7E0A0000 		.4byte	0xa7e
 2162 0a77 16       		.uleb128 0x16
 2163 0a78 9D000000 		.4byte	0x9d
 2164 0a7c 01       		.byte	0x1
 2165 0a7d 00       		.byte	0
 2166 0a7e 14       		.uleb128 0x14
 2167 0a7f 5F000000 		.4byte	.LASF59
 2168 0a83 01       		.byte	0x1
 2169 0a84 43       		.byte	0x43
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccSUHQYZ.s 			page 52


 2170 0a85 6E0A0000 		.4byte	0xa6e
 2171 0a89 05       		.uleb128 0x5
 2172 0a8a 03       		.byte	0x3
 2173 0a8b 00000000 		.4byte	currentPosition
 2174 0a8f 14       		.uleb128 0x14
 2175 0a90 6A050000 		.4byte	.LASF60
 2176 0a94 01       		.byte	0x1
 2177 0a95 44       		.byte	0x44
 2178 0a96 6E0A0000 		.4byte	0xa6e
 2179 0a9a 05       		.uleb128 0x5
 2180 0a9b 03       		.byte	0x3
 2181 0a9c 00000000 		.4byte	desiredPosition
 2182 0aa0 14       		.uleb128 0x14
 2183 0aa1 06010000 		.4byte	.LASF61
 2184 0aa5 01       		.byte	0x1
 2185 0aa6 46       		.byte	0x46
 2186 0aa7 68000000 		.4byte	0x68
 2187 0aab 05       		.uleb128 0x5
 2188 0aac 03       		.byte	0x3
 2189 0aad 00000000 		.4byte	desiredOrientation
 2190 0ab1 14       		.uleb128 0x14
 2191 0ab2 03040000 		.4byte	.LASF62
 2192 0ab6 01       		.byte	0x1
 2193 0ab7 48       		.byte	0x48
 2194 0ab8 33000000 		.4byte	0x33
 2195 0abc 05       		.uleb128 0x5
 2196 0abd 03       		.byte	0x3
 2197 0abe 00000000 		.4byte	moveNow
 2198 0ac2 14       		.uleb128 0x14
 2199 0ac3 A5060000 		.4byte	.LASF63
 2200 0ac7 01       		.byte	0x1
 2201 0ac8 55       		.byte	0x55
 2202 0ac9 33000000 		.4byte	0x33
 2203 0acd 05       		.uleb128 0x5
 2204 0ace 03       		.byte	0x3
 2205 0acf 00000000 		.4byte	moveLeftAllowed
 2206 0ad3 14       		.uleb128 0x14
 2207 0ad4 E3060000 		.4byte	.LASF64
 2208 0ad8 01       		.byte	0x1
 2209 0ad9 56       		.byte	0x56
 2210 0ada 33000000 		.4byte	0x33
 2211 0ade 05       		.uleb128 0x5
 2212 0adf 03       		.byte	0x3
 2213 0ae0 00000000 		.4byte	moveRightAllowed
 2214 0ae4 14       		.uleb128 0x14
 2215 0ae5 8F040000 		.4byte	.LASF65
 2216 0ae9 01       		.byte	0x1
 2217 0aea 57       		.byte	0x57
 2218 0aeb 33000000 		.4byte	0x33
 2219 0aef 05       		.uleb128 0x5
 2220 0af0 03       		.byte	0x3
 2221 0af1 00000000 		.4byte	moveForwardAllowed
 2222 0af5 14       		.uleb128 0x14
 2223 0af6 7B010000 		.4byte	.LASF66
 2224 0afa 01       		.byte	0x1
 2225 0afb 58       		.byte	0x58
 2226 0afc 33000000 		.4byte	0x33
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccSUHQYZ.s 			page 53


 2227 0b00 05       		.uleb128 0x5
 2228 0b01 03       		.byte	0x3
 2229 0b02 00000000 		.4byte	moveBackwardAllowed
 2230 0b06 14       		.uleb128 0x14
 2231 0b07 63040000 		.4byte	.LASF67
 2232 0b0b 01       		.byte	0x1
 2233 0b0c 5D       		.byte	0x5d
 2234 0b0d 68000000 		.4byte	0x68
 2235 0b11 05       		.uleb128 0x5
 2236 0b12 03       		.byte	0x3
 2237 0b13 00000000 		.4byte	idac_value
 2238 0b17 14       		.uleb128 0x14
 2239 0b18 16050000 		.4byte	.LASF68
 2240 0b1c 01       		.byte	0x1
 2241 0b1d 66       		.byte	0x66
 2242 0b1e 280B0000 		.4byte	0xb28
 2243 0b22 05       		.uleb128 0x5
 2244 0b23 03       		.byte	0x3
 2245 0b24 00000000 		.4byte	PLAN_SCAN_VERTICAL
 2246 0b28 18       		.uleb128 0x18
 2247 0b29 68000000 		.4byte	0x68
 2248 0b2d 14       		.uleb128 0x14
 2249 0b2e F4060000 		.4byte	.LASF69
 2250 0b32 01       		.byte	0x1
 2251 0b33 6C       		.byte	0x6c
 2252 0b34 68000000 		.4byte	0x68
 2253 0b38 05       		.uleb128 0x5
 2254 0b39 03       		.byte	0x3
 2255 0b3a 00000000 		.4byte	distance_returned_global
 2256 0b3e 19       		.uleb128 0x19
 2257 0b3f 09020000 		.4byte	.LASF70
 2258 0b43 09020000 		.4byte	.LASF70
 2259 0b47 06       		.byte	0x6
 2260 0b48 19       		.byte	0x19
 2261 0b49 19       		.uleb128 0x19
 2262 0b4a C2070000 		.4byte	.LASF71
 2263 0b4e C2070000 		.4byte	.LASF71
 2264 0b52 07       		.byte	0x7
 2265 0b53 76       		.byte	0x76
 2266 0b54 19       		.uleb128 0x19
 2267 0b55 DB040000 		.4byte	.LASF72
 2268 0b59 DB040000 		.4byte	.LASF72
 2269 0b5d 06       		.byte	0x6
 2270 0b5e 16       		.byte	0x16
 2271 0b5f 19       		.uleb128 0x19
 2272 0b60 D2030000 		.4byte	.LASF73
 2273 0b64 D2030000 		.4byte	.LASF73
 2274 0b68 08       		.byte	0x8
 2275 0b69 E7       		.byte	0xe7
 2276 0b6a 19       		.uleb128 0x19
 2277 0b6b DA050000 		.4byte	.LASF74
 2278 0b6f DA050000 		.4byte	.LASF74
 2279 0b73 09       		.byte	0x9
 2280 0b74 8B       		.byte	0x8b
 2281 0b75 19       		.uleb128 0x19
 2282 0b76 00000000 		.4byte	.LASF75
 2283 0b7a 00000000 		.4byte	.LASF75
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccSUHQYZ.s 			page 54


 2284 0b7e 0A       		.byte	0xa
 2285 0b7f 13       		.byte	0x13
 2286 0b80 19       		.uleb128 0x19
 2287 0b81 EA020000 		.4byte	.LASF76
 2288 0b85 EA020000 		.4byte	.LASF76
 2289 0b89 0B       		.byte	0xb
 2290 0b8a 10       		.byte	0x10
 2291 0b8b 19       		.uleb128 0x19
 2292 0b8c 55010000 		.4byte	.LASF77
 2293 0b90 55010000 		.4byte	.LASF77
 2294 0b94 0B       		.byte	0xb
 2295 0b95 0E       		.byte	0xe
 2296 0b96 19       		.uleb128 0x19
 2297 0b97 B5060000 		.4byte	.LASF78
 2298 0b9b B5060000 		.4byte	.LASF78
 2299 0b9f 0A       		.byte	0xa
 2300 0ba0 11       		.byte	0x11
 2301 0ba1 19       		.uleb128 0x19
 2302 0ba2 36040000 		.4byte	.LASF79
 2303 0ba6 36040000 		.4byte	.LASF79
 2304 0baa 0C       		.byte	0xc
 2305 0bab 2F       		.byte	0x2f
 2306 0bac 19       		.uleb128 0x19
 2307 0bad 4D020000 		.4byte	.LASF80
 2308 0bb1 4D020000 		.4byte	.LASF80
 2309 0bb5 0D       		.byte	0xd
 2310 0bb6 0F       		.byte	0xf
 2311 0bb7 19       		.uleb128 0x19
 2312 0bb8 31000000 		.4byte	.LASF81
 2313 0bbc 31000000 		.4byte	.LASF81
 2314 0bc0 0E       		.byte	0xe
 2315 0bc1 1C       		.byte	0x1c
 2316 0bc2 19       		.uleb128 0x19
 2317 0bc3 AC030000 		.4byte	.LASF82
 2318 0bc7 AC030000 		.4byte	.LASF82
 2319 0bcb 0A       		.byte	0xa
 2320 0bcc 0F       		.byte	0xf
 2321 0bcd 19       		.uleb128 0x19
 2322 0bce 6E020000 		.4byte	.LASF83
 2323 0bd2 6E020000 		.4byte	.LASF83
 2324 0bd6 0D       		.byte	0xd
 2325 0bd7 11       		.byte	0x11
 2326 0bd8 19       		.uleb128 0x19
 2327 0bd9 CF040000 		.4byte	.LASF84
 2328 0bdd CF040000 		.4byte	.LASF84
 2329 0be1 0F       		.byte	0xf
 2330 0be2 3D       		.byte	0x3d
 2331 0be3 19       		.uleb128 0x19
 2332 0be4 6D030000 		.4byte	.LASF85
 2333 0be8 6D030000 		.4byte	.LASF85
 2334 0bec 09       		.byte	0x9
 2335 0bed 54       		.byte	0x54
 2336 0bee 19       		.uleb128 0x19
 2337 0bef 90020000 		.4byte	.LASF86
 2338 0bf3 90020000 		.4byte	.LASF86
 2339 0bf7 10       		.byte	0x10
 2340 0bf8 3A       		.byte	0x3a
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccSUHQYZ.s 			page 55


 2341 0bf9 19       		.uleb128 0x19
 2342 0bfa 6E040000 		.4byte	.LASF87
 2343 0bfe 6E040000 		.4byte	.LASF87
 2344 0c02 11       		.byte	0x11
 2345 0c03 3C       		.byte	0x3c
 2346 0c04 19       		.uleb128 0x19
 2347 0c05 F2030000 		.4byte	.LASF88
 2348 0c09 F2030000 		.4byte	.LASF88
 2349 0c0d 11       		.byte	0x11
 2350 0c0e 40       		.byte	0x40
 2351 0c0f 19       		.uleb128 0x19
 2352 0c10 9B050000 		.4byte	.LASF89
 2353 0c14 9B050000 		.4byte	.LASF89
 2354 0c18 11       		.byte	0x11
 2355 0c19 41       		.byte	0x41
 2356 0c1a 19       		.uleb128 0x19
 2357 0c1b D1020000 		.4byte	.LASF90
 2358 0c1f D1020000 		.4byte	.LASF90
 2359 0c23 12       		.byte	0x12
 2360 0c24 2F       		.byte	0x2f
 2361 0c25 19       		.uleb128 0x19
 2362 0c26 DA030000 		.4byte	.LASF91
 2363 0c2a DA030000 		.4byte	.LASF91
 2364 0c2e 0E       		.byte	0xe
 2365 0c2f 19       		.byte	0x19
 2366 0c30 19       		.uleb128 0x19
 2367 0c31 D6070000 		.4byte	.LASF92
 2368 0c35 D6070000 		.4byte	.LASF92
 2369 0c39 13       		.byte	0x13
 2370 0c3a 92       		.byte	0x92
 2371 0c3b 19       		.uleb128 0x19
 2372 0c3c 4B030000 		.4byte	.LASF93
 2373 0c40 4B030000 		.4byte	.LASF93
 2374 0c44 13       		.byte	0x13
 2375 0c45 C3       		.byte	0xc3
 2376 0c46 19       		.uleb128 0x19
 2377 0c47 66010000 		.4byte	.LASF94
 2378 0c4b 66010000 		.4byte	.LASF94
 2379 0c4f 13       		.byte	0x13
 2380 0c50 DC       		.byte	0xdc
 2381 0c51 19       		.uleb128 0x19
 2382 0c52 E4010000 		.4byte	.LASF95
 2383 0c56 E4010000 		.4byte	.LASF95
 2384 0c5a 14       		.byte	0x14
 2385 0c5b 92       		.byte	0x92
 2386 0c5c 19       		.uleb128 0x19
 2387 0c5d B0040000 		.4byte	.LASF96
 2388 0c61 B0040000 		.4byte	.LASF96
 2389 0c65 14       		.byte	0x14
 2390 0c66 C3       		.byte	0xc3
 2391 0c67 19       		.uleb128 0x19
 2392 0c68 00060000 		.4byte	.LASF97
 2393 0c6c 00060000 		.4byte	.LASF97
 2394 0c70 14       		.byte	0x14
 2395 0c71 DC       		.byte	0xdc
 2396 0c72 19       		.uleb128 0x19
 2397 0c73 BA030000 		.4byte	.LASF98
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccSUHQYZ.s 			page 56


 2398 0c77 BA030000 		.4byte	.LASF98
 2399 0c7b 15       		.byte	0x15
 2400 0c7c 92       		.byte	0x92
 2401 0c7d 19       		.uleb128 0x19
 2402 0c7e 94030000 		.4byte	.LASF99
 2403 0c82 94030000 		.4byte	.LASF99
 2404 0c86 15       		.byte	0x15
 2405 0c87 DC       		.byte	0xdc
 2406 0c88 19       		.uleb128 0x19
 2407 0c89 B8020000 		.4byte	.LASF100
 2408 0c8d B8020000 		.4byte	.LASF100
 2409 0c91 16       		.byte	0x16
 2410 0c92 92       		.byte	0x92
 2411 0c93 19       		.uleb128 0x19
 2412 0c94 77020000 		.4byte	.LASF101
 2413 0c98 77020000 		.4byte	.LASF101
 2414 0c9c 16       		.byte	0x16
 2415 0c9d DC       		.byte	0xdc
 2416 0c9e 19       		.uleb128 0x19
 2417 0c9f D5000000 		.4byte	.LASF102
 2418 0ca3 D5000000 		.4byte	.LASF102
 2419 0ca7 17       		.byte	0x17
 2420 0ca8 48       		.byte	0x48
 2421 0ca9 19       		.uleb128 0x19
 2422 0caa 90000000 		.4byte	.LASF103
 2423 0cae 90000000 		.4byte	.LASF103
 2424 0cb2 18       		.byte	0x18
 2425 0cb3 48       		.byte	0x48
 2426 0cb4 19       		.uleb128 0x19
 2427 0cb5 5C050000 		.4byte	.LASF104
 2428 0cb9 5C050000 		.4byte	.LASF104
 2429 0cbd 19       		.byte	0x19
 2430 0cbe 5A       		.byte	0x5a
 2431 0cbf 19       		.uleb128 0x19
 2432 0cc0 8F010000 		.4byte	.LASF105
 2433 0cc4 8F010000 		.4byte	.LASF105
 2434 0cc8 19       		.byte	0x19
 2435 0cc9 5E       		.byte	0x5e
 2436 0cca 19       		.uleb128 0x19
 2437 0ccb 6F000000 		.4byte	.LASF106
 2438 0ccf 6F000000 		.4byte	.LASF106
 2439 0cd3 1A       		.byte	0x1a
 2440 0cd4 18       		.byte	0x18
 2441 0cd5 19       		.uleb128 0x19
 2442 0cd6 C5050000 		.4byte	.LASF107
 2443 0cda C5050000 		.4byte	.LASF107
 2444 0cde 1B       		.byte	0x1b
 2445 0cdf 18       		.byte	0x18
 2446 0ce0 00       		.byte	0
 2447              		.section	.debug_abbrev,"",%progbits
 2448              	.Ldebug_abbrev0:
 2449 0000 01       		.uleb128 0x1
 2450 0001 11       		.uleb128 0x11
 2451 0002 01       		.byte	0x1
 2452 0003 25       		.uleb128 0x25
 2453 0004 0E       		.uleb128 0xe
 2454 0005 13       		.uleb128 0x13
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccSUHQYZ.s 			page 57


 2455 0006 0B       		.uleb128 0xb
 2456 0007 03       		.uleb128 0x3
 2457 0008 0E       		.uleb128 0xe
 2458 0009 1B       		.uleb128 0x1b
 2459 000a 0E       		.uleb128 0xe
 2460 000b 55       		.uleb128 0x55
 2461 000c 17       		.uleb128 0x17
 2462 000d 11       		.uleb128 0x11
 2463 000e 01       		.uleb128 0x1
 2464 000f 10       		.uleb128 0x10
 2465 0010 17       		.uleb128 0x17
 2466 0011 00       		.byte	0
 2467 0012 00       		.byte	0
 2468 0013 02       		.uleb128 0x2
 2469 0014 24       		.uleb128 0x24
 2470 0015 00       		.byte	0
 2471 0016 0B       		.uleb128 0xb
 2472 0017 0B       		.uleb128 0xb
 2473 0018 3E       		.uleb128 0x3e
 2474 0019 0B       		.uleb128 0xb
 2475 001a 03       		.uleb128 0x3
 2476 001b 0E       		.uleb128 0xe
 2477 001c 00       		.byte	0
 2478 001d 00       		.byte	0
 2479 001e 03       		.uleb128 0x3
 2480 001f 16       		.uleb128 0x16
 2481 0020 00       		.byte	0
 2482 0021 03       		.uleb128 0x3
 2483 0022 0E       		.uleb128 0xe
 2484 0023 3A       		.uleb128 0x3a
 2485 0024 0B       		.uleb128 0xb
 2486 0025 3B       		.uleb128 0x3b
 2487 0026 0B       		.uleb128 0xb
 2488 0027 49       		.uleb128 0x49
 2489 0028 13       		.uleb128 0x13
 2490 0029 00       		.byte	0
 2491 002a 00       		.byte	0
 2492 002b 04       		.uleb128 0x4
 2493 002c 24       		.uleb128 0x24
 2494 002d 00       		.byte	0
 2495 002e 0B       		.uleb128 0xb
 2496 002f 0B       		.uleb128 0xb
 2497 0030 3E       		.uleb128 0x3e
 2498 0031 0B       		.uleb128 0xb
 2499 0032 03       		.uleb128 0x3
 2500 0033 08       		.uleb128 0x8
 2501 0034 00       		.byte	0
 2502 0035 00       		.byte	0
 2503 0036 05       		.uleb128 0x5
 2504 0037 2E       		.uleb128 0x2e
 2505 0038 01       		.byte	0x1
 2506 0039 3F       		.uleb128 0x3f
 2507 003a 19       		.uleb128 0x19
 2508 003b 03       		.uleb128 0x3
 2509 003c 08       		.uleb128 0x8
 2510 003d 3A       		.uleb128 0x3a
 2511 003e 0B       		.uleb128 0xb
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccSUHQYZ.s 			page 58


 2512 003f 3B       		.uleb128 0x3b
 2513 0040 0B       		.uleb128 0xb
 2514 0041 27       		.uleb128 0x27
 2515 0042 19       		.uleb128 0x19
 2516 0043 11       		.uleb128 0x11
 2517 0044 01       		.uleb128 0x1
 2518 0045 12       		.uleb128 0x12
 2519 0046 06       		.uleb128 0x6
 2520 0047 40       		.uleb128 0x40
 2521 0048 18       		.uleb128 0x18
 2522 0049 9742     		.uleb128 0x2117
 2523 004b 19       		.uleb128 0x19
 2524 004c 01       		.uleb128 0x1
 2525 004d 13       		.uleb128 0x13
 2526 004e 00       		.byte	0
 2527 004f 00       		.byte	0
 2528 0050 06       		.uleb128 0x6
 2529 0051 898201   		.uleb128 0x4109
 2530 0054 00       		.byte	0
 2531 0055 11       		.uleb128 0x11
 2532 0056 01       		.uleb128 0x1
 2533 0057 31       		.uleb128 0x31
 2534 0058 13       		.uleb128 0x13
 2535 0059 00       		.byte	0
 2536 005a 00       		.byte	0
 2537 005b 07       		.uleb128 0x7
 2538 005c 2E       		.uleb128 0x2e
 2539 005d 01       		.byte	0x1
 2540 005e 3F       		.uleb128 0x3f
 2541 005f 19       		.uleb128 0x19
 2542 0060 03       		.uleb128 0x3
 2543 0061 0E       		.uleb128 0xe
 2544 0062 3A       		.uleb128 0x3a
 2545 0063 0B       		.uleb128 0xb
 2546 0064 3B       		.uleb128 0x3b
 2547 0065 0B       		.uleb128 0xb
 2548 0066 27       		.uleb128 0x27
 2549 0067 19       		.uleb128 0x19
 2550 0068 11       		.uleb128 0x11
 2551 0069 01       		.uleb128 0x1
 2552 006a 12       		.uleb128 0x12
 2553 006b 06       		.uleb128 0x6
 2554 006c 40       		.uleb128 0x40
 2555 006d 18       		.uleb128 0x18
 2556 006e 9742     		.uleb128 0x2117
 2557 0070 19       		.uleb128 0x19
 2558 0071 01       		.uleb128 0x1
 2559 0072 13       		.uleb128 0x13
 2560 0073 00       		.byte	0
 2561 0074 00       		.byte	0
 2562 0075 08       		.uleb128 0x8
 2563 0076 898201   		.uleb128 0x4109
 2564 0079 01       		.byte	0x1
 2565 007a 11       		.uleb128 0x11
 2566 007b 01       		.uleb128 0x1
 2567 007c 31       		.uleb128 0x31
 2568 007d 13       		.uleb128 0x13
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccSUHQYZ.s 			page 59


 2569 007e 00       		.byte	0
 2570 007f 00       		.byte	0
 2571 0080 09       		.uleb128 0x9
 2572 0081 8A8201   		.uleb128 0x410a
 2573 0084 00       		.byte	0
 2574 0085 02       		.uleb128 0x2
 2575 0086 18       		.uleb128 0x18
 2576 0087 9142     		.uleb128 0x2111
 2577 0089 18       		.uleb128 0x18
 2578 008a 00       		.byte	0
 2579 008b 00       		.byte	0
 2580 008c 0A       		.uleb128 0xa
 2581 008d 2E       		.uleb128 0x2e
 2582 008e 01       		.byte	0x1
 2583 008f 3F       		.uleb128 0x3f
 2584 0090 19       		.uleb128 0x19
 2585 0091 03       		.uleb128 0x3
 2586 0092 0E       		.uleb128 0xe
 2587 0093 3A       		.uleb128 0x3a
 2588 0094 0B       		.uleb128 0xb
 2589 0095 3B       		.uleb128 0x3b
 2590 0096 0B       		.uleb128 0xb
 2591 0097 27       		.uleb128 0x27
 2592 0098 19       		.uleb128 0x19
 2593 0099 49       		.uleb128 0x49
 2594 009a 13       		.uleb128 0x13
 2595 009b 8701     		.uleb128 0x87
 2596 009d 19       		.uleb128 0x19
 2597 009e 11       		.uleb128 0x11
 2598 009f 01       		.uleb128 0x1
 2599 00a0 12       		.uleb128 0x12
 2600 00a1 06       		.uleb128 0x6
 2601 00a2 40       		.uleb128 0x40
 2602 00a3 18       		.uleb128 0x18
 2603 00a4 9742     		.uleb128 0x2117
 2604 00a6 19       		.uleb128 0x19
 2605 00a7 01       		.uleb128 0x1
 2606 00a8 13       		.uleb128 0x13
 2607 00a9 00       		.byte	0
 2608 00aa 00       		.byte	0
 2609 00ab 0B       		.uleb128 0xb
 2610 00ac 34       		.uleb128 0x34
 2611 00ad 00       		.byte	0
 2612 00ae 03       		.uleb128 0x3
 2613 00af 0E       		.uleb128 0xe
 2614 00b0 3A       		.uleb128 0x3a
 2615 00b1 0B       		.uleb128 0xb
 2616 00b2 3B       		.uleb128 0x3b
 2617 00b3 0B       		.uleb128 0xb
 2618 00b4 49       		.uleb128 0x49
 2619 00b5 13       		.uleb128 0x13
 2620 00b6 1C       		.uleb128 0x1c
 2621 00b7 0B       		.uleb128 0xb
 2622 00b8 00       		.byte	0
 2623 00b9 00       		.byte	0
 2624 00ba 0C       		.uleb128 0xc
 2625 00bb 0B       		.uleb128 0xb
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccSUHQYZ.s 			page 60


 2626 00bc 01       		.byte	0x1
 2627 00bd 11       		.uleb128 0x11
 2628 00be 01       		.uleb128 0x1
 2629 00bf 12       		.uleb128 0x12
 2630 00c0 06       		.uleb128 0x6
 2631 00c1 01       		.uleb128 0x1
 2632 00c2 13       		.uleb128 0x13
 2633 00c3 00       		.byte	0
 2634 00c4 00       		.byte	0
 2635 00c5 0D       		.uleb128 0xd
 2636 00c6 34       		.uleb128 0x34
 2637 00c7 00       		.byte	0
 2638 00c8 03       		.uleb128 0x3
 2639 00c9 08       		.uleb128 0x8
 2640 00ca 3A       		.uleb128 0x3a
 2641 00cb 0B       		.uleb128 0xb
 2642 00cc 3B       		.uleb128 0x3b
 2643 00cd 0B       		.uleb128 0xb
 2644 00ce 49       		.uleb128 0x49
 2645 00cf 13       		.uleb128 0x13
 2646 00d0 02       		.uleb128 0x2
 2647 00d1 17       		.uleb128 0x17
 2648 00d2 00       		.byte	0
 2649 00d3 00       		.byte	0
 2650 00d4 0E       		.uleb128 0xe
 2651 00d5 0B       		.uleb128 0xb
 2652 00d6 01       		.byte	0x1
 2653 00d7 55       		.uleb128 0x55
 2654 00d8 17       		.uleb128 0x17
 2655 00d9 01       		.uleb128 0x1
 2656 00da 13       		.uleb128 0x13
 2657 00db 00       		.byte	0
 2658 00dc 00       		.byte	0
 2659 00dd 0F       		.uleb128 0xf
 2660 00de 898201   		.uleb128 0x4109
 2661 00e1 01       		.byte	0x1
 2662 00e2 11       		.uleb128 0x11
 2663 00e3 01       		.uleb128 0x1
 2664 00e4 31       		.uleb128 0x31
 2665 00e5 13       		.uleb128 0x13
 2666 00e6 01       		.uleb128 0x1
 2667 00e7 13       		.uleb128 0x13
 2668 00e8 00       		.byte	0
 2669 00e9 00       		.byte	0
 2670 00ea 10       		.uleb128 0x10
 2671 00eb 34       		.uleb128 0x34
 2672 00ec 00       		.byte	0
 2673 00ed 03       		.uleb128 0x3
 2674 00ee 0E       		.uleb128 0xe
 2675 00ef 3A       		.uleb128 0x3a
 2676 00f0 0B       		.uleb128 0xb
 2677 00f1 3B       		.uleb128 0x3b
 2678 00f2 05       		.uleb128 0x5
 2679 00f3 49       		.uleb128 0x49
 2680 00f4 13       		.uleb128 0x13
 2681 00f5 00       		.byte	0
 2682 00f6 00       		.byte	0
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccSUHQYZ.s 			page 61


 2683 00f7 11       		.uleb128 0x11
 2684 00f8 34       		.uleb128 0x34
 2685 00f9 00       		.byte	0
 2686 00fa 03       		.uleb128 0x3
 2687 00fb 0E       		.uleb128 0xe
 2688 00fc 3A       		.uleb128 0x3a
 2689 00fd 0B       		.uleb128 0xb
 2690 00fe 3B       		.uleb128 0x3b
 2691 00ff 05       		.uleb128 0x5
 2692 0100 49       		.uleb128 0x49
 2693 0101 13       		.uleb128 0x13
 2694 0102 02       		.uleb128 0x2
 2695 0103 17       		.uleb128 0x17
 2696 0104 00       		.byte	0
 2697 0105 00       		.byte	0
 2698 0106 12       		.uleb128 0x12
 2699 0107 34       		.uleb128 0x34
 2700 0108 00       		.byte	0
 2701 0109 03       		.uleb128 0x3
 2702 010a 0E       		.uleb128 0xe
 2703 010b 3A       		.uleb128 0x3a
 2704 010c 0B       		.uleb128 0xb
 2705 010d 3B       		.uleb128 0x3b
 2706 010e 05       		.uleb128 0x5
 2707 010f 49       		.uleb128 0x49
 2708 0110 13       		.uleb128 0x13
 2709 0111 3F       		.uleb128 0x3f
 2710 0112 19       		.uleb128 0x19
 2711 0113 3C       		.uleb128 0x3c
 2712 0114 19       		.uleb128 0x19
 2713 0115 00       		.byte	0
 2714 0116 00       		.byte	0
 2715 0117 13       		.uleb128 0x13
 2716 0118 35       		.uleb128 0x35
 2717 0119 00       		.byte	0
 2718 011a 49       		.uleb128 0x49
 2719 011b 13       		.uleb128 0x13
 2720 011c 00       		.byte	0
 2721 011d 00       		.byte	0
 2722 011e 14       		.uleb128 0x14
 2723 011f 34       		.uleb128 0x34
 2724 0120 00       		.byte	0
 2725 0121 03       		.uleb128 0x3
 2726 0122 0E       		.uleb128 0xe
 2727 0123 3A       		.uleb128 0x3a
 2728 0124 0B       		.uleb128 0xb
 2729 0125 3B       		.uleb128 0x3b
 2730 0126 0B       		.uleb128 0xb
 2731 0127 49       		.uleb128 0x49
 2732 0128 13       		.uleb128 0x13
 2733 0129 3F       		.uleb128 0x3f
 2734 012a 19       		.uleb128 0x19
 2735 012b 02       		.uleb128 0x2
 2736 012c 18       		.uleb128 0x18
 2737 012d 00       		.byte	0
 2738 012e 00       		.byte	0
 2739 012f 15       		.uleb128 0x15
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccSUHQYZ.s 			page 62


 2740 0130 01       		.uleb128 0x1
 2741 0131 01       		.byte	0x1
 2742 0132 49       		.uleb128 0x49
 2743 0133 13       		.uleb128 0x13
 2744 0134 01       		.uleb128 0x1
 2745 0135 13       		.uleb128 0x13
 2746 0136 00       		.byte	0
 2747 0137 00       		.byte	0
 2748 0138 16       		.uleb128 0x16
 2749 0139 21       		.uleb128 0x21
 2750 013a 00       		.byte	0
 2751 013b 49       		.uleb128 0x49
 2752 013c 13       		.uleb128 0x13
 2753 013d 2F       		.uleb128 0x2f
 2754 013e 0B       		.uleb128 0xb
 2755 013f 00       		.byte	0
 2756 0140 00       		.byte	0
 2757 0141 17       		.uleb128 0x17
 2758 0142 34       		.uleb128 0x34
 2759 0143 00       		.byte	0
 2760 0144 03       		.uleb128 0x3
 2761 0145 0E       		.uleb128 0xe
 2762 0146 3A       		.uleb128 0x3a
 2763 0147 0B       		.uleb128 0xb
 2764 0148 3B       		.uleb128 0x3b
 2765 0149 0B       		.uleb128 0xb
 2766 014a 49       		.uleb128 0x49
 2767 014b 13       		.uleb128 0x13
 2768 014c 3F       		.uleb128 0x3f
 2769 014d 19       		.uleb128 0x19
 2770 014e 3C       		.uleb128 0x3c
 2771 014f 19       		.uleb128 0x19
 2772 0150 00       		.byte	0
 2773 0151 00       		.byte	0
 2774 0152 18       		.uleb128 0x18
 2775 0153 26       		.uleb128 0x26
 2776 0154 00       		.byte	0
 2777 0155 49       		.uleb128 0x49
 2778 0156 13       		.uleb128 0x13
 2779 0157 00       		.byte	0
 2780 0158 00       		.byte	0
 2781 0159 19       		.uleb128 0x19
 2782 015a 2E       		.uleb128 0x2e
 2783 015b 00       		.byte	0
 2784 015c 3F       		.uleb128 0x3f
 2785 015d 19       		.uleb128 0x19
 2786 015e 3C       		.uleb128 0x3c
 2787 015f 19       		.uleb128 0x19
 2788 0160 6E       		.uleb128 0x6e
 2789 0161 0E       		.uleb128 0xe
 2790 0162 03       		.uleb128 0x3
 2791 0163 0E       		.uleb128 0xe
 2792 0164 3A       		.uleb128 0x3a
 2793 0165 0B       		.uleb128 0xb
 2794 0166 3B       		.uleb128 0x3b
 2795 0167 0B       		.uleb128 0xb
 2796 0168 00       		.byte	0
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccSUHQYZ.s 			page 63


 2797 0169 00       		.byte	0
 2798 016a 00       		.byte	0
 2799              		.section	.debug_loc,"",%progbits
 2800              	.Ldebug_loc0:
 2801              	.LLST0:
 2802 0000 DA000000 		.4byte	.LVL37
 2803 0004 DE000000 		.4byte	.LVL38
 2804 0008 0200     		.2byte	0x2
 2805 000a 30       		.byte	0x30
 2806 000b 9F       		.byte	0x9f
 2807 000c DE000000 		.4byte	.LVL38
 2808 0010 54020000 		.4byte	.LVL82
 2809 0014 0100     		.2byte	0x1
 2810 0016 55       		.byte	0x55
 2811 0017 00000000 		.4byte	0
 2812 001b 00000000 		.4byte	0
 2813              	.LLST1:
 2814 001f DE000000 		.4byte	.LVL38
 2815 0023 04010000 		.4byte	.LVL44
 2816 0027 0100     		.2byte	0x1
 2817 0029 54       		.byte	0x54
 2818 002a 06010000 		.4byte	.LVL45
 2819 002e 12010000 		.4byte	.LVL47
 2820 0032 0100     		.2byte	0x1
 2821 0034 54       		.byte	0x54
 2822 0035 00000000 		.4byte	0
 2823 0039 00000000 		.4byte	0
 2824              	.LLST2:
 2825 003d A0010000 		.4byte	.LVL61
 2826 0041 40020000 		.4byte	.LVL80
 2827 0045 0400     		.2byte	0x4
 2828 0047 0A       		.byte	0xa
 2829 0048 F401     		.2byte	0x1f4
 2830 004a 9F       		.byte	0x9f
 2831 004b 00000000 		.4byte	0
 2832 004f 00000000 		.4byte	0
 2833              	.LLST3:
 2834 0053 D2010000 		.4byte	.LVL67
 2835 0057 DD010000 		.4byte	.LVL68-1
 2836 005b 0100     		.2byte	0x1
 2837 005d 53       		.byte	0x53
 2838 005e F6010000 		.4byte	.LVL72
 2839 0062 FB010000 		.4byte	.LVL73-1
 2840 0066 0100     		.2byte	0x1
 2841 0068 53       		.byte	0x53
 2842 0069 00000000 		.4byte	0
 2843 006d 00000000 		.4byte	0
 2844              	.LLST4:
 2845 0071 4A020000 		.4byte	.LVL81
 2846 0075 54020000 		.4byte	.LVL82
 2847 0079 0200     		.2byte	0x2
 2848 007b 30       		.byte	0x30
 2849 007c 9F       		.byte	0x9f
 2850 007d 54020000 		.4byte	.LVL82
 2851 0081 D4020000 		.4byte	.LFE66
 2852 0085 0100     		.2byte	0x1
 2853 0087 54       		.byte	0x54
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccSUHQYZ.s 			page 64


 2854 0088 00000000 		.4byte	0
 2855 008c 00000000 		.4byte	0
 2856              	.LLST5:
 2857 0090 68020000 		.4byte	.LVL86
 2858 0094 6A020000 		.4byte	.LVL87
 2859 0098 0100     		.2byte	0x1
 2860 009a 50       		.byte	0x50
 2861 009b 6A020000 		.4byte	.LVL87
 2862 009f 82020000 		.4byte	.LVL90
 2863 00a3 0100     		.2byte	0x1
 2864 00a5 55       		.byte	0x55
 2865 00a6 00000000 		.4byte	0
 2866 00aa 00000000 		.4byte	0
 2867              		.section	.debug_aranges,"",%progbits
 2868 0000 2C000000 		.4byte	0x2c
 2869 0004 0200     		.2byte	0x2
 2870 0006 00000000 		.4byte	.Ldebug_info0
 2871 000a 04       		.byte	0x4
 2872 000b 00       		.byte	0
 2873 000c 0000     		.2byte	0
 2874 000e 0000     		.2byte	0
 2875 0010 00000000 		.4byte	.LFB64
 2876 0014 08000000 		.4byte	.LFE64-.LFB64
 2877 0018 00000000 		.4byte	.LFB65
 2878 001c 20000000 		.4byte	.LFE65-.LFB65
 2879 0020 00000000 		.4byte	.LFB66
 2880 0024 D4020000 		.4byte	.LFE66-.LFB66
 2881 0028 00000000 		.4byte	0
 2882 002c 00000000 		.4byte	0
 2883              		.section	.debug_ranges,"",%progbits
 2884              	.Ldebug_ranges0:
 2885 0000 DE000000 		.4byte	.LBB3
 2886 0004 04010000 		.4byte	.LBE3
 2887 0008 06010000 		.4byte	.LBB4
 2888 000c 0A010000 		.4byte	.LBE4
 2889 0010 00000000 		.4byte	0
 2890 0014 00000000 		.4byte	0
 2891 0018 00000000 		.4byte	.LFB64
 2892 001c 08000000 		.4byte	.LFE64
 2893 0020 00000000 		.4byte	.LFB65
 2894 0024 20000000 		.4byte	.LFE65
 2895 0028 00000000 		.4byte	.LFB66
 2896 002c D4020000 		.4byte	.LFE66
 2897 0030 00000000 		.4byte	0
 2898 0034 00000000 		.4byte	0
 2899              		.section	.debug_line,"",%progbits
 2900              	.Ldebug_line0:
 2901 0000 EB030000 		.section	.debug_str,"MS",%progbits,1
 2901      02001203 
 2901      00000201 
 2901      FB0E0D00 
 2901      01010101 
 2902              	.LASF75:
 2903 0000 6368616E 		.ascii	"changeOrientation\000"
 2903      67654F72 
 2903      69656E74 
 2903      6174696F 
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccSUHQYZ.s 			page 65


 2903      6E00
 2904              	.LASF20:
 2905 0012 756C7472 		.ascii	"ultrasonic_testing\000"
 2905      61736F6E 
 2905      69635F74 
 2905      65737469 
 2905      6E6700
 2906              	.LASF0:
 2907 0025 7369676E 		.ascii	"signed char\000"
 2907      65642063 
 2907      68617200 
 2908              	.LASF81:
 2909 0031 636F6C6F 		.ascii	"colourSensingOutput\000"
 2909      75725365 
 2909      6E73696E 
 2909      674F7574 
 2909      70757400 
 2910              	.LASF36:
 2911 0045 7475726E 		.ascii	"turningLeftFlag\000"
 2911      696E674C 
 2911      65667446 
 2911      6C616700 
 2912              	.LASF2:
 2913 0055 73686F72 		.ascii	"short int\000"
 2913      7420696E 
 2913      7400
 2914              	.LASF59:
 2915 005f 63757272 		.ascii	"currentPosition\000"
 2915      656E7450 
 2915      6F736974 
 2915      696F6E00 
 2916              	.LASF106:
 2917 006f 536F6E69 		.ascii	"Sonic_StartEx\000"
 2917      635F5374 
 2917      61727445 
 2917      7800
 2918              	.LASF34:
 2919 007d 64726976 		.ascii	"drivingForwardFlag\000"
 2919      696E6746 
 2919      6F727761 
 2919      7264466C 
 2919      616700
 2920              	.LASF103:
 2921 0090 4D6F746F 		.ascii	"Motor_Right_Decoder_Start\000"
 2921      725F5269 
 2921      6768745F 
 2921      4465636F 
 2921      6465725F 
 2922              	.LASF17:
 2923 00aa 636F6C6F 		.ascii	"colour_calibration\000"
 2923      75725F63 
 2923      616C6962 
 2923      72617469 
 2923      6F6E00
 2924              	.LASF10:
 2925 00bd 696E7433 		.ascii	"int32_t\000"
 2925      325F7400 
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccSUHQYZ.s 			page 66


 2926              	.LASF52:
 2927 00c5 62656769 		.ascii	"beginNavigation\000"
 2927      6E4E6176 
 2927      69676174 
 2927      696F6E00 
 2928              	.LASF102:
 2929 00d5 4D6F746F 		.ascii	"Motor_Left_Decoder_Start\000"
 2929      725F4C65 
 2929      66745F44 
 2929      65636F64 
 2929      65725F53 
 2930              	.LASF30:
 2931 00ee 7075636B 		.ascii	"puckRackOffsetsFromWest\000"
 2931      5261636B 
 2931      4F666673 
 2931      65747346 
 2931      726F6D57 
 2932              	.LASF61:
 2933 0106 64657369 		.ascii	"desiredOrientation\000"
 2933      7265644F 
 2933      7269656E 
 2933      74617469 
 2933      6F6E00
 2934              	.LASF14:
 2935 0119 6C6F6E67 		.ascii	"long double\000"
 2935      20646F75 
 2935      626C6500 
 2936              	.LASF16:
 2937 0125 53746172 		.ascii	"StartIH\000"
 2937      74494800 
 2938              	.LASF40:
 2939 012d 756C7472 		.ascii	"ultrasonic_distances_mm\000"
 2939      61736F6E 
 2939      69635F64 
 2939      69737461 
 2939      6E636573 
 2940              	.LASF44:
 2941 0145 756C7472 		.ascii	"ultrasonic_flag\000"
 2941      61736F6E 
 2941      69635F66 
 2941      6C616700 
 2942              	.LASF77:
 2943 0155 6D697368 		.ascii	"mishaMoveDynamic\000"
 2943      614D6F76 
 2943      6544796E 
 2943      616D6963 
 2943      00
 2944              	.LASF94:
 2945 0166 5261636B 		.ascii	"Rack_Servo_PWM_Sleep\000"
 2945      5F536572 
 2945      766F5F50 
 2945      574D5F53 
 2945      6C656570 
 2946              	.LASF66:
 2947 017b 6D6F7665 		.ascii	"moveBackwardAllowed\000"
 2947      4261636B 
 2947      77617264 
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccSUHQYZ.s 			page 67


 2947      416C6C6F 
 2947      77656400 
 2948              	.LASF105:
 2949 018f 54696D65 		.ascii	"Timer_1_ReadStatusRegister\000"
 2949      725F315F 
 2949      52656164 
 2949      53746174 
 2949      75735265 
 2950              	.LASF31:
 2951 01aa 73776565 		.ascii	"sweeping\000"
 2951      70696E67 
 2951      00
 2952              	.LASF27:
 2953 01b3 64726976 		.ascii	"driveStraightEnable\000"
 2953      65537472 
 2953      61696768 
 2953      74456E61 
 2953      626C6500 
 2954              	.LASF50:
 2955 01c7 63757272 		.ascii	"currentPuckStackSize\000"
 2955      656E7450 
 2955      75636B53 
 2955      7461636B 
 2955      53697A65 
 2956              	.LASF49:
 2957 01dc 72756E6E 		.ascii	"running\000"
 2957      696E6700 
 2958              	.LASF95:
 2959 01e4 47726970 		.ascii	"Gripper_Servo_PWM_Start\000"
 2959      7065725F 
 2959      53657276 
 2959      6F5F5057 
 2959      4D5F5374 
 2960              	.LASF23:
 2961 01fc 7075636B 		.ascii	"puck_correct\000"
 2961      5F636F72 
 2961      72656374 
 2961      00
 2962              	.LASF70:
 2963 0209 756C7472 		.ascii	"ultrasonicInterruptHandler\000"
 2963      61736F6E 
 2963      6963496E 
 2963      74657272 
 2963      75707448 
 2964              	.LASF37:
 2965 0224 7475726E 		.ascii	"turningRightFlag\000"
 2965      696E6752 
 2965      69676874 
 2965      466C6167 
 2965      00
 2966              	.LASF57:
 2967 0235 7075636B 		.ascii	"puckEastClearance\000"
 2967      45617374 
 2967      436C6561 
 2967      72616E63 
 2967      6500
 2968              	.LASF11:
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccSUHQYZ.s 			page 68


 2969 0247 666C6F61 		.ascii	"float\000"
 2969      7400
 2970              	.LASF80:
 2971 024d 6368616E 		.ascii	"changeHeightToPuck\000"
 2971      67654865 
 2971      69676874 
 2971      546F5075 
 2971      636B00
 2972              	.LASF6:
 2973 0260 6C6F6E67 		.ascii	"long long int\000"
 2973      206C6F6E 
 2973      6720696E 
 2973      7400
 2974              	.LASF83:
 2975 026e 61726D43 		.ascii	"armClose\000"
 2975      6C6F7365 
 2975      00
 2976              	.LASF101:
 2977 0277 4D6F746F 		.ascii	"Motor_Right_Driver_Sleep\000"
 2977      725F5269 
 2977      6768745F 
 2977      44726976 
 2977      65725F53 
 2978              	.LASF86:
 2979 0290 4144435F 		.ascii	"ADC_Start\000"
 2979      53746172 
 2979      7400
 2980              	.LASF4:
 2981 029a 6C6F6E67 		.ascii	"long int\000"
 2981      20696E74 
 2981      00
 2982              	.LASF26:
 2983 02a3 696E7465 		.ascii	"internal_orientation\000"
 2983      726E616C 
 2983      5F6F7269 
 2983      656E7461 
 2983      74696F6E 
 2984              	.LASF100:
 2985 02b8 4D6F746F 		.ascii	"Motor_Right_Driver_Start\000"
 2985      725F5269 
 2985      6768745F 
 2985      44726976 
 2985      65725F53 
 2986              	.LASF90:
 2987 02d1 636F6E74 		.ascii	"control_photodiode_Write\000"
 2987      726F6C5F 
 2987      70686F74 
 2987      6F64696F 
 2987      64655F57 
 2988              	.LASF76:
 2989 02ea 6D697368 		.ascii	"mishaSwivel\000"
 2989      61537769 
 2989      76656C00 
 2990              	.LASF55:
 2991 02f6 626C6F63 		.ascii	"blockEastClearance\000"
 2991      6B456173 
 2991      74436C65 
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccSUHQYZ.s 			page 69


 2991      6172616E 
 2991      636500
 2992              	.LASF33:
 2993 0309 7075636B 		.ascii	"puckPileLocation\000"
 2993      50696C65 
 2993      4C6F6361 
 2993      74696F6E 
 2993      00
 2994              	.LASF35:
 2995 031a 64726976 		.ascii	"drivingBackwardFlag\000"
 2995      696E6742 
 2995      61636B77 
 2995      61726446 
 2995      6C616700 
 2996              	.LASF28:
 2997 032e 63757272 		.ascii	"currentPuckRackScanningIndex\000"
 2997      656E7450 
 2997      75636B52 
 2997      61636B53 
 2997      63616E6E 
 2998              	.LASF93:
 2999 034b 5261636B 		.ascii	"Rack_Servo_PWM_WriteCompare\000"
 2999      5F536572 
 2999      766F5F50 
 2999      574D5F57 
 2999      72697465 
 3000              	.LASF42:
 3001 0367 73746174 		.ascii	"state\000"
 3001      6500
 3002              	.LASF85:
 3003 036d 55415254 		.ascii	"UART_1_Start\000"
 3003      5F315F53 
 3003      74617274 
 3003      00
 3004              	.LASF1:
 3005 037a 756E7369 		.ascii	"unsigned char\000"
 3005      676E6564 
 3005      20636861 
 3005      7200
 3006              	.LASF41:
 3007 0388 636F6C6F 		.ascii	"colour_flag\000"
 3007      75725F66 
 3007      6C616700 
 3008              	.LASF99:
 3009 0394 4D6F746F 		.ascii	"Motor_Left_Driver_Sleep\000"
 3009      725F4C65 
 3009      66745F44 
 3009      72697665 
 3009      725F536C 
 3010              	.LASF82:
 3011 03ac 6D6F7665 		.ascii	"moveUntilPuck\000"
 3011      556E7469 
 3011      6C507563 
 3011      6B00
 3012              	.LASF98:
 3013 03ba 4D6F746F 		.ascii	"Motor_Left_Driver_Start\000"
 3013      725F4C65 
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccSUHQYZ.s 			page 70


 3013      66745F44 
 3013      72697665 
 3013      725F5374 
 3014              	.LASF73:
 3015 03d2 73707269 		.ascii	"sprintf\000"
 3015      6E746600 
 3016              	.LASF91:
 3017 03da 636F6C6F 		.ascii	"colourSensingInitialise\000"
 3017      75725365 
 3017      6E73696E 
 3017      67496E69 
 3017      7469616C 
 3018              	.LASF88:
 3019 03f2 49444143 		.ascii	"IDAC8_1_SetRange\000"
 3019      385F315F 
 3019      53657452 
 3019      616E6765 
 3019      00
 3020              	.LASF62:
 3021 0403 6D6F7665 		.ascii	"moveNow\000"
 3021      4E6F7700 
 3022              	.LASF32:
 3023 040b 626C6F63 		.ascii	"block_edge_location\000"
 3023      6B5F6564 
 3023      67655F6C 
 3023      6F636174 
 3023      696F6E00 
 3024              	.LASF7:
 3025 041f 6C6F6E67 		.ascii	"long long unsigned int\000"
 3025      206C6F6E 
 3025      6720756E 
 3025      7369676E 
 3025      65642069 
 3026              	.LASF79:
 3027 0436 636F6E74 		.ascii	"control_led_Write\000"
 3027      726F6C5F 
 3027      6C65645F 
 3027      57726974 
 3027      6500
 3028              	.LASF18:
 3029 0448 73657276 		.ascii	"servo_testing\000"
 3029      6F5F7465 
 3029      7374696E 
 3029      6700
 3030              	.LASF8:
 3031 0456 756E7369 		.ascii	"unsigned int\000"
 3031      676E6564 
 3031      20696E74 
 3031      00
 3032              	.LASF67:
 3033 0463 69646163 		.ascii	"idac_value\000"
 3033      5F76616C 
 3033      756500
 3034              	.LASF87:
 3035 046e 49444143 		.ascii	"IDAC8_1_Start\000"
 3035      385F315F 
 3035      53746172 
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccSUHQYZ.s 			page 71


 3035      7400
 3036              	.LASF45:
 3037 047c 63757272 		.ascii	"currentOrientation\000"
 3037      656E744F 
 3037      7269656E 
 3037      74617469 
 3037      6F6E00
 3038              	.LASF65:
 3039 048f 6D6F7665 		.ascii	"moveForwardAllowed\000"
 3039      466F7277 
 3039      61726441 
 3039      6C6C6F77 
 3039      656400
 3040              	.LASF47:
 3041 04a2 63757272 		.ascii	"current_stage\000"
 3041      656E745F 
 3041      73746167 
 3041      6500
 3042              	.LASF96:
 3043 04b0 47726970 		.ascii	"Gripper_Servo_PWM_WriteCompare\000"
 3043      7065725F 
 3043      53657276 
 3043      6F5F5057 
 3043      4D5F5772 
 3044              	.LASF84:
 3045 04cf 5449415F 		.ascii	"TIA_1_Start\000"
 3045      315F5374 
 3045      61727400 
 3046              	.LASF72:
 3047 04db 64697374 		.ascii	"distanceSensor\000"
 3047      616E6365 
 3047      53656E73 
 3047      6F7200
 3048              	.LASF13:
 3049 04ea 63686172 		.ascii	"char\000"
 3049      00
 3050              	.LASF58:
 3051 04ef 7075636B 		.ascii	"puckWestClearance\000"
 3051      57657374 
 3051      436C6561 
 3051      72616E63 
 3051      6500
 3052              	.LASF111:
 3053 0501 6D61696E 		.ascii	"main\000"
 3053      00
 3054              	.LASF29:
 3055 0506 7075636B 		.ascii	"puckRackColours\000"
 3055      5261636B 
 3055      436F6C6F 
 3055      75727300 
 3056              	.LASF68:
 3057 0516 504C414E 		.ascii	"PLAN_SCAN_VERTICAL\000"
 3057      5F534341 
 3057      4E5F5645 
 3057      52544943 
 3057      414C00
 3058              	.LASF51:
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccSUHQYZ.s 			page 72


 3059 0529 686F7269 		.ascii	"horizontalPuckGrid\000"
 3059      7A6F6E74 
 3059      616C5075 
 3059      636B4772 
 3059      696400
 3060              	.LASF48:
 3061 053c 636F6C6F 		.ascii	"colour_sensing_algorithm\000"
 3061      75725F73 
 3061      656E7369 
 3061      6E675F61 
 3061      6C676F72 
 3062              	.LASF43:
 3063 0555 6D6F7669 		.ascii	"moving\000"
 3063      6E6700
 3064              	.LASF104:
 3065 055c 54696D65 		.ascii	"Timer_1_Start\000"
 3065      725F315F 
 3065      53746172 
 3065      7400
 3066              	.LASF60:
 3067 056a 64657369 		.ascii	"desiredPosition\000"
 3067      72656450 
 3067      6F736974 
 3067      696F6E00 
 3068              	.LASF54:
 3069 057a 70617468 		.ascii	"pathPastBlock\000"
 3069      50617374 
 3069      426C6F63 
 3069      6B00
 3070              	.LASF3:
 3071 0588 73686F72 		.ascii	"short unsigned int\000"
 3071      7420756E 
 3071      7369676E 
 3071      65642069 
 3071      6E7400
 3072              	.LASF89:
 3073 059b 49444143 		.ascii	"IDAC8_1_SetValue\000"
 3073      385F315F 
 3073      53657456 
 3073      616C7565 
 3073      00
 3074              	.LASF109:
 3075 05ac 6D61696E 		.ascii	"main.c\000"
 3075      2E6300
 3076              	.LASF5:
 3077 05b3 6C6F6E67 		.ascii	"long unsigned int\000"
 3077      20756E73 
 3077      69676E65 
 3077      6420696E 
 3077      7400
 3078              	.LASF107:
 3079 05c5 53746172 		.ascii	"Start_StartEx\000"
 3079      745F5374 
 3079      61727445 
 3079      7800
 3080              	.LASF12:
 3081 05d3 646F7562 		.ascii	"double\000"
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccSUHQYZ.s 			page 73


 3081      6C6500
 3082              	.LASF74:
 3083 05da 55415254 		.ascii	"UART_1_PutString\000"
 3083      5F315F50 
 3083      75745374 
 3083      72696E67 
 3083      00
 3084              	.LASF46:
 3085 05eb 7075636B 		.ascii	"puckConstructionPlan\000"
 3085      436F6E73 
 3085      74727563 
 3085      74696F6E 
 3085      506C616E 
 3086              	.LASF97:
 3087 0600 47726970 		.ascii	"Gripper_Servo_PWM_Sleep\000"
 3087      7065725F 
 3087      53657276 
 3087      6F5F5057 
 3087      4D5F536C 
 3088              	.LASF21:
 3089 0618 626C6F63 		.ascii	"block_check\000"
 3089      6B5F6368 
 3089      65636B00 
 3090              	.LASF24:
 3091 0624 7075636B 		.ascii	"puck_scan\000"
 3091      5F736361 
 3091      6E00
 3092              	.LASF9:
 3093 062e 5F5F696E 		.ascii	"__int32_t\000"
 3093      7433325F 
 3093      7400
 3094              	.LASF56:
 3095 0638 626C6F63 		.ascii	"blockWestClearance\000"
 3095      6B576573 
 3095      74436C65 
 3095      6172616E 
 3095      636500
 3096              	.LASF110:
 3097 064b 433A5C55 		.ascii	"C:\\Users\\Misha\\Documents\\PSoC Creator\\ECE3091_"
 3097      73657273 
 3097      5C4D6973 
 3097      68615C44 
 3097      6F63756D 
 3098 0679 47726F75 		.ascii	"Group17\\Group17RobotReal\\Group17Robot.cydsn\000"
 3098      7031375C 
 3098      47726F75 
 3098      70313752 
 3098      6F626F74 
 3099              	.LASF63:
 3100 06a5 6D6F7665 		.ascii	"moveLeftAllowed\000"
 3100      4C656674 
 3100      416C6C6F 
 3100      77656400 
 3101              	.LASF78:
 3102 06b5 6D6F7665 		.ascii	"moveUntil\000"
 3102      556E7469 
 3102      6C00
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccSUHQYZ.s 			page 74


 3103              	.LASF15:
 3104 06bf 73697A65 		.ascii	"sizetype\000"
 3104      74797065 
 3104      00
 3105              	.LASF22:
 3106 06c8 63686563 		.ascii	"check\000"
 3106      6B00
 3107              	.LASF39:
 3108 06ce 6F757470 		.ascii	"output\000"
 3108      757400
 3109              	.LASF19:
 3110 06d5 6D6F746F 		.ascii	"motor_testing\000"
 3110      725F7465 
 3110      7374696E 
 3110      6700
 3111              	.LASF64:
 3112 06e3 6D6F7665 		.ascii	"moveRightAllowed\000"
 3112      52696768 
 3112      74416C6C 
 3112      6F776564 
 3112      00
 3113              	.LASF69:
 3114 06f4 64697374 		.ascii	"distance_returned_global\000"
 3114      616E6365 
 3114      5F726574 
 3114      75726E65 
 3114      645F676C 
 3115              	.LASF25:
 3116 070d 49544D5F 		.ascii	"ITM_RxBuffer\000"
 3116      52784275 
 3116      66666572 
 3116      00
 3117              	.LASF108:
 3118 071a 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 3118      43313120 
 3118      352E342E 
 3118      31203230 
 3118      31363036 
 3119 074d 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 3119      20726576 
 3119      6973696F 
 3119      6E203233 
 3119      37373135 
 3120 0780 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 3120      66756E63 
 3120      74696F6E 
 3120      2D736563 
 3120      74696F6E 
 3121              	.LASF112:
 3122 07a8 7075636B 		.ascii	"puckConstructionPlanIndex\000"
 3122      436F6E73 
 3122      74727563 
 3122      74696F6E 
 3122      506C616E 
 3123              	.LASF71:
 3124 07c2 43794465 		.ascii	"CyDelay\000"
 3124      6C617900 
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccSUHQYZ.s 			page 75


 3125              	.LASF53:
 3126 07ca 70617468 		.ascii	"pathToPucks\000"
 3126      546F5075 
 3126      636B7300 
 3127              	.LASF92:
 3128 07d6 5261636B 		.ascii	"Rack_Servo_PWM_Start\000"
 3128      5F536572 
 3128      766F5F50 
 3128      574D5F53 
 3128      74617274 
 3129              	.LASF38:
 3130 07eb 696E6974 		.ascii	"initialisation\000"
 3130      69616C69 
 3130      73617469 
 3130      6F6E00
 3131              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
>>>>>>> 43f63c8a9e8b878c8e2eedec6e73ca6054b7b41d
