ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccrHJ3zm.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"dcmotor.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	__aeabi_i2d
  20              		.global	__aeabi_dmul
  21              		.global	__aeabi_ddiv
  22              		.global	__aeabi_d2f
  23              		.global	__aeabi_f2d
  24              		.global	__aeabi_dadd
  25              		.section	.text.positionUpdate,"ax",%progbits
  26              		.align	2
  27              		.global	positionUpdate
  28              		.thumb
  29              		.thumb_func
  30              		.type	positionUpdate, %function
  31              	positionUpdate:
  32              	.LFB64:
  33              		.file 1 "dcmotor.c"
   1:dcmotor.c     **** /* ========================================
   2:dcmotor.c     ****  *
   3:dcmotor.c     ****  * Copyright YOUR COMPANY, THE YEAR
   4:dcmotor.c     ****  * All Rights Reserved
   5:dcmotor.c     ****  * UNPUBLISHED, LICENSED SOFTWARE.
   6:dcmotor.c     ****  *
   7:dcmotor.c     ****  * CONFIDENTIAL AND PROPRIETARY INFORMATION
   8:dcmotor.c     ****  * WHICH IS THE PROPERTY OF your company.
   9:dcmotor.c     ****  *
  10:dcmotor.c     ****  * ========================================
  11:dcmotor.c     **** */
  12:dcmotor.c     **** 
  13:dcmotor.c     **** //Standard C libraries
  14:dcmotor.c     **** #include "project.h"
  15:dcmotor.c     **** #include <stdio.h>
  16:dcmotor.c     **** #include <string.h>
  17:dcmotor.c     **** #include <math.h>
  18:dcmotor.c     **** #include "ultrasonic.h"
  19:dcmotor.c     **** #include "main.h"
  20:dcmotor.c     **** 
  21:dcmotor.c     **** //global variable currentPosition and currentOrientation (in main). Declare as externs in 
  22:dcmotor.c     **** //dcmotor, I guess
  23:dcmotor.c     **** extern float currentPosition[2];
  24:dcmotor.c     **** extern float desiredPosition[2];
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccrHJ3zm.s 			page 2


  25:dcmotor.c     **** extern int currentOrientation; //in degrees (convert to radians when needed)
  26:dcmotor.c     **** extern int desiredOrientation;
  27:dcmotor.c     **** extern short int motor1Enable; //These two will be on if the motors are on
  28:dcmotor.c     **** extern short int motor2Enable;
  29:dcmotor.c     **** extern int M1_FD; //The four values shown here will be the duty cycles of the motors
  30:dcmotor.c     **** extern int M1_BD; //There are times when parts of the code (such as the driftCorrect function)
  31:dcmotor.c     **** extern int M2_FD; //need to know about the duty cycles. So we make the duty cycles a globally 
  32:dcmotor.c     **** extern int M2_BD; //known variable
  33:dcmotor.c     **** extern int motor1EncoderCounts; //These two variables will allow the entire program to keep 
  34:dcmotor.c     **** extern int motor2EncoderCounts; //track of how many turns the motors have spun 
  35:dcmotor.c     **** extern short int moveNow; //This is a flag that lets the main program tell the moving functions
  36:dcmotor.c     **** //whether we want the robot to be moving or not. For example, when we need to operate servos
  37:dcmotor.c     **** //the main program would set moveNow to FALSE.
  38:dcmotor.c     **** extern float block_location[4]; //This will hold the co-ordinates for the obstacle block. 0,1 will 
  39:dcmotor.c     **** //and xmax, 2,3 will be ymin, ymax.
  40:dcmotor.c     **** extern int state; //The state of the robot as defined in main 
  41:dcmotor.c     **** 
  42:dcmotor.c     **** //The four flags below let the rest of the program know if the robot is trying to drive 
  43:dcmotor.c     **** //forward or back, turn left or right. At the start of every motion, turn these flags on
  44:dcmotor.c     **** //at the end turn them off.
  45:dcmotor.c     **** extern int drivingForwardFlag;
  46:dcmotor.c     **** extern int drivingBackwardFlag;
  47:dcmotor.c     **** extern int turningLeftFlag;
  48:dcmotor.c     **** extern int turningRightFlag;
  49:dcmotor.c     **** 
  50:dcmotor.c     **** //These flags will be used by the main program to allow the robot to move in certain directions
  51:dcmotor.c     **** extern short int moveLeftAllowed;
  52:dcmotor.c     **** extern short int moveRightAllowed;
  53:dcmotor.c     **** extern short int moveForwardAllowed;
  54:dcmotor.c     **** extern short int moveBackwardAllowed;
  55:dcmotor.c     **** 
  56:dcmotor.c     **** extern char output[32]; //for the UART
  57:dcmotor.c     **** 
  58:dcmotor.c     **** //This function takes a number of counts from the encoder and, assuming that the number of 
  59:dcmotor.c     **** //counts has been moved in the currentOrientation direction, updates the current position. 
  60:dcmotor.c     **** //Current position can only be updated from within this function
  61:dcmotor.c     **** void positionUpdate(int counts, int drivingForwardFlag, int drivingBackwardFlag){
  34              		.loc 1 61 0
  35              		.cfi_startproc
  36              		@ args = 0, pretend = 0, frame = 0
  37              		@ frame_needed = 0, uses_anonymous_args = 0
  38              	.LVL0:
  39 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
  40              		.cfi_def_cfa_offset 32
  41              		.cfi_offset 4, -32
  42              		.cfi_offset 5, -28
  43              		.cfi_offset 6, -24
  44              		.cfi_offset 7, -20
  45              		.cfi_offset 8, -16
  46              		.cfi_offset 9, -12
  47              		.cfi_offset 10, -8
  48              		.cfi_offset 14, -4
  49 0004 0746     		mov	r7, r0
  50 0006 0C46     		mov	r4, r1
  51 0008 1546     		mov	r5, r2
  62:dcmotor.c     ****     float currentOrientation_Radians = (M_PI*currentOrientation/180);
  52              		.loc 1 62 0
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccrHJ3zm.s 			page 3


  53 000a 514B     		ldr	r3, .L5+16
  54 000c 1868     		ldr	r0, [r3]
  55              	.LVL1:
  56 000e FFF7FEFF 		bl	__aeabi_i2d
  57              	.LVL2:
  58 0012 4BA3     		adr	r3, .L5
  59 0014 D3E90023 		ldrd	r2, [r3]
  60 0018 FFF7FEFF 		bl	__aeabi_dmul
  61              	.LVL3:
  62 001c 0022     		movs	r2, #0
  63 001e 4D4B     		ldr	r3, .L5+20
  64 0020 FFF7FEFF 		bl	__aeabi_ddiv
  65              	.LVL4:
  66 0024 FFF7FEFF 		bl	__aeabi_d2f
  67              	.LVL5:
  68 0028 0646     		mov	r6, r0
  69              	.LVL6:
  63:dcmotor.c     ****     if (drivingForwardFlag == TRUE){
  70              		.loc 1 63 0
  71 002a 012C     		cmp	r4, #1
  72 002c 40D1     		bne	.L2
  64:dcmotor.c     ****         //When we update position, be aware that we measure orientation as 0 degres facing
  65:dcmotor.c     ****         //to the east of the arena and increasing counterclockwise
  66:dcmotor.c     ****         currentPosition[0] += CM_PER_COUNT*counts*cos(currentOrientation_Radians);
  73              		.loc 1 66 0
  74 002e 3846     		mov	r0, r7
  75              	.LVL7:
  76 0030 FFF7FEFF 		bl	__aeabi_i2d
  77              	.LVL8:
  78 0034 44A3     		adr	r3, .L5+8
  79 0036 D3E90023 		ldrd	r2, [r3]
  80 003a FFF7FEFF 		bl	__aeabi_dmul
  81              	.LVL9:
  82 003e 0446     		mov	r4, r0
  83              	.LVL10:
  84 0040 0D46     		mov	r5, r1
  85              	.LVL11:
  86 0042 3046     		mov	r0, r6
  87 0044 FFF7FEFF 		bl	__aeabi_f2d
  88              	.LVL12:
  89 0048 0646     		mov	r6, r0
  90              	.LVL13:
  91 004a 0F46     		mov	r7, r1
  92              	.LVL14:
  93 004c FFF7FEFF 		bl	cos
  94              	.LVL15:
  95 0050 0246     		mov	r2, r0
  96 0052 0B46     		mov	r3, r1
  97 0054 2046     		mov	r0, r4
  98 0056 2946     		mov	r1, r5
  99 0058 FFF7FEFF 		bl	__aeabi_dmul
 100              	.LVL16:
 101 005c 8046     		mov	r8, r0
 102 005e 8946     		mov	r9, r1
 103 0060 DFF8F4A0 		ldr	r10, .L5+24
 104 0064 DAF80000 		ldr	r0, [r10]	@ float
 105 0068 FFF7FEFF 		bl	__aeabi_f2d
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccrHJ3zm.s 			page 4


 106              	.LVL17:
 107 006c 4246     		mov	r2, r8
 108 006e 4B46     		mov	r3, r9
 109 0070 FFF7FEFF 		bl	__aeabi_dadd
 110              	.LVL18:
 111 0074 FFF7FEFF 		bl	__aeabi_d2f
 112              	.LVL19:
 113 0078 CAF80000 		str	r0, [r10]	@ float
  67:dcmotor.c     ****         currentPosition[1] += CM_PER_COUNT*counts*sin(currentOrientation_Radians);
 114              		.loc 1 67 0
 115 007c 3046     		mov	r0, r6
 116 007e 3946     		mov	r1, r7
 117 0080 FFF7FEFF 		bl	sin
 118              	.LVL20:
 119 0084 0246     		mov	r2, r0
 120 0086 0B46     		mov	r3, r1
 121 0088 2046     		mov	r0, r4
 122 008a 2946     		mov	r1, r5
 123 008c FFF7FEFF 		bl	__aeabi_dmul
 124              	.LVL21:
 125 0090 0446     		mov	r4, r0
 126 0092 0D46     		mov	r5, r1
 127 0094 DAF80400 		ldr	r0, [r10, #4]	@ float
 128 0098 FFF7FEFF 		bl	__aeabi_f2d
 129              	.LVL22:
 130 009c 2246     		mov	r2, r4
 131 009e 2B46     		mov	r3, r5
 132 00a0 FFF7FEFF 		bl	__aeabi_dadd
 133              	.LVL23:
 134 00a4 FFF7FEFF 		bl	__aeabi_d2f
 135              	.LVL24:
 136 00a8 CAF80400 		str	r0, [r10, #4]	@ float
 137 00ac BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 138              	.LVL25:
 139              	.L2:
  68:dcmotor.c     ****     }else if (drivingBackwardFlag == TRUE){
 140              		.loc 1 68 0
 141 00b0 012D     		cmp	r5, #1
 142 00b2 43D1     		bne	.L1
  69:dcmotor.c     ****         currentPosition[0] += CM_PER_COUNT*counts*cos(currentOrientation_Radians + M_PI); 
 143              		.loc 1 69 0
 144 00b4 3846     		mov	r0, r7
 145              	.LVL26:
 146 00b6 FFF7FEFF 		bl	__aeabi_i2d
 147              	.LVL27:
 148 00ba 23A3     		adr	r3, .L5+8
 149 00bc D3E90023 		ldrd	r2, [r3]
 150 00c0 FFF7FEFF 		bl	__aeabi_dmul
 151              	.LVL28:
 152 00c4 0446     		mov	r4, r0
 153              	.LVL29:
 154 00c6 0D46     		mov	r5, r1
 155              	.LVL30:
 156 00c8 3046     		mov	r0, r6
 157 00ca FFF7FEFF 		bl	__aeabi_f2d
 158              	.LVL31:
 159 00ce 1CA3     		adr	r3, .L5
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccrHJ3zm.s 			page 5


 160 00d0 D3E90023 		ldrd	r2, [r3]
 161 00d4 FFF7FEFF 		bl	__aeabi_dadd
 162              	.LVL32:
 163 00d8 0646     		mov	r6, r0
 164              	.LVL33:
 165 00da 0F46     		mov	r7, r1
 166              	.LVL34:
 167 00dc FFF7FEFF 		bl	cos
 168              	.LVL35:
 169 00e0 0246     		mov	r2, r0
 170 00e2 0B46     		mov	r3, r1
 171 00e4 2046     		mov	r0, r4
 172 00e6 2946     		mov	r1, r5
 173 00e8 FFF7FEFF 		bl	__aeabi_dmul
 174              	.LVL36:
 175 00ec 8046     		mov	r8, r0
 176 00ee 8946     		mov	r9, r1
 177 00f0 DFF864A0 		ldr	r10, .L5+24
 178 00f4 DAF80000 		ldr	r0, [r10]	@ float
 179 00f8 FFF7FEFF 		bl	__aeabi_f2d
 180              	.LVL37:
 181 00fc 4246     		mov	r2, r8
 182 00fe 4B46     		mov	r3, r9
 183 0100 FFF7FEFF 		bl	__aeabi_dadd
 184              	.LVL38:
 185 0104 FFF7FEFF 		bl	__aeabi_d2f
 186              	.LVL39:
 187 0108 CAF80000 		str	r0, [r10]	@ float
  70:dcmotor.c     ****         currentPosition[1] += CM_PER_COUNT*counts*sin(currentOrientation_Radians + M_PI);
 188              		.loc 1 70 0
 189 010c 3046     		mov	r0, r6
 190 010e 3946     		mov	r1, r7
 191 0110 FFF7FEFF 		bl	sin
 192              	.LVL40:
 193 0114 0246     		mov	r2, r0
 194 0116 0B46     		mov	r3, r1
 195 0118 2046     		mov	r0, r4
 196 011a 2946     		mov	r1, r5
 197 011c FFF7FEFF 		bl	__aeabi_dmul
 198              	.LVL41:
 199 0120 0446     		mov	r4, r0
 200 0122 0D46     		mov	r5, r1
 201 0124 DAF80400 		ldr	r0, [r10, #4]	@ float
 202 0128 FFF7FEFF 		bl	__aeabi_f2d
 203              	.LVL42:
 204 012c 2246     		mov	r2, r4
 205 012e 2B46     		mov	r3, r5
 206 0130 FFF7FEFF 		bl	__aeabi_dadd
 207              	.LVL43:
 208 0134 FFF7FEFF 		bl	__aeabi_d2f
 209              	.LVL44:
 210 0138 CAF80400 		str	r0, [r10, #4]	@ float
 211              	.L1:
 212 013c BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 213              	.L6:
 214              		.align	3
 215              	.L5:
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccrHJ3zm.s 			page 6


 216 0140 182D4454 		.word	1413754136
 217 0144 FB210940 		.word	1074340347
 218 0148 12A5BDC1 		.word	-1044536046
 219 014c 1726933F 		.word	1066608151
 220 0150 00000000 		.word	currentOrientation
 221 0154 00806640 		.word	1080459264
 222 0158 00000000 		.word	currentPosition
 223              		.cfi_endproc
 224              	.LFE64:
 225              		.size	positionUpdate, .-positionUpdate
 226              		.global	__aeabi_d2iz
 227              		.section	.text.orientationUpdate,"ax",%progbits
 228              		.align	2
 229              		.global	orientationUpdate
 230              		.thumb
 231              		.thumb_func
 232              		.type	orientationUpdate, %function
 233              	orientationUpdate:
 234              	.LFB65:
  71:dcmotor.c     ****     }
  72:dcmotor.c     **** }
  73:dcmotor.c     **** 
  74:dcmotor.c     **** //This function takes a number of counts from the encoder, and based on whether we are 
  75:dcmotor.c     **** //turning left or right, updates the current orientation. Current orientation can only
  76:dcmotor.c     **** //be updated from within this function
  77:dcmotor.c     **** void orientationUpdate(int counts,int turningLeftFlag, int turningRightFlag){
 235              		.loc 1 77 0
 236              		.cfi_startproc
 237              		@ args = 0, pretend = 0, frame = 0
 238              		@ frame_needed = 0, uses_anonymous_args = 0
 239              	.LVL45:
 240 0000 38B5     		push	{r3, r4, r5, lr}
 241              		.cfi_def_cfa_offset 16
 242              		.cfi_offset 3, -16
 243              		.cfi_offset 4, -12
 244              		.cfi_offset 5, -8
 245              		.cfi_offset 14, -4
 246 0002 0C46     		mov	r4, r1
 247 0004 1546     		mov	r5, r2
  78:dcmotor.c     ****     int degreesMoved = counts*DEGREES_PER_COUNT;
 248              		.loc 1 78 0
 249 0006 FFF7FEFF 		bl	__aeabi_i2d
 250              	.LVL46:
 251 000a 17A3     		adr	r3, .L11
 252 000c D3E90023 		ldrd	r2, [r3]
 253 0010 FFF7FEFF 		bl	__aeabi_dmul
 254              	.LVL47:
 255 0014 FFF7FEFF 		bl	__aeabi_d2iz
 256              	.LVL48:
  79:dcmotor.c     ****     if (turningLeftFlag == TRUE){
 257              		.loc 1 79 0
 258 0018 012C     		cmp	r4, #1
 259 001a 0FD1     		bne	.L8
  80:dcmotor.c     ****         currentOrientation += degreesMoved;
 260              		.loc 1 80 0
 261 001c 1449     		ldr	r1, .L11+8
 262 001e 0B68     		ldr	r3, [r1]
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccrHJ3zm.s 			page 7


 263 0020 1844     		add	r0, r0, r3
 264              	.LVL49:
  81:dcmotor.c     ****         currentOrientation = currentOrientation%360;
 265              		.loc 1 81 0
 266 0022 144A     		ldr	r2, .L11+12
 267 0024 80FB0223 		smull	r2, r3, r0, r2
 268 0028 C218     		adds	r2, r0, r3
 269 002a C317     		asrs	r3, r0, #31
 270 002c C3EB2223 		rsb	r3, r3, r2, asr #8
 271 0030 4FF4B472 		mov	r2, #360
 272 0034 02FB1303 		mls	r3, r2, r3, r0
 273 0038 0B60     		str	r3, [r1]
 274 003a 38BD     		pop	{r3, r4, r5, pc}
 275              	.LVL50:
 276              	.L8:
  82:dcmotor.c     ****     }else if (turningRightFlag == TRUE){
 277              		.loc 1 82 0
 278 003c 012D     		cmp	r5, #1
 279 003e 12D1     		bne	.L7
  83:dcmotor.c     ****         currentOrientation -= degreesMoved;
 280              		.loc 1 83 0
 281 0040 0B49     		ldr	r1, .L11+8
 282 0042 0B68     		ldr	r3, [r1]
 283 0044 181A     		subs	r0, r3, r0
 284              	.LVL51:
  84:dcmotor.c     ****         currentOrientation = currentOrientation%360;
 285              		.loc 1 84 0
 286 0046 0B4A     		ldr	r2, .L11+12
 287 0048 80FB0223 		smull	r2, r3, r0, r2
 288 004c C218     		adds	r2, r0, r3
 289 004e C317     		asrs	r3, r0, #31
 290 0050 C3EB2223 		rsb	r3, r3, r2, asr #8
 291 0054 4FF4B472 		mov	r2, #360
 292 0058 02FB1303 		mls	r3, r2, r3, r0
 293 005c 0B60     		str	r3, [r1]
  85:dcmotor.c     ****         if (currentOrientation < 0){
 294              		.loc 1 85 0
 295 005e 002B     		cmp	r3, #0
 296 0060 01DA     		bge	.L7
  86:dcmotor.c     ****             currentOrientation += 360;
 297              		.loc 1 86 0
 298 0062 1344     		add	r3, r3, r2
 299 0064 0B60     		str	r3, [r1]
 300              	.L7:
 301 0066 38BD     		pop	{r3, r4, r5, pc}
 302              	.LVL52:
 303              	.L12:
 304              		.align	3
 305              	.L11:
 306 0068 E17A14AE 		.word	-1374389535
 307 006c 47E1BA3F 		.word	1069211975
 308 0070 00000000 		.word	currentOrientation
 309 0074 B7600BB6 		.word	-1240768329
 310              		.cfi_endproc
 311              	.LFE65:
 312              		.size	orientationUpdate, .-orientationUpdate
 313              		.section	.text.stopMotion,"ax",%progbits
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccrHJ3zm.s 			page 8


 314              		.align	2
 315              		.global	stopMotion
 316              		.thumb
 317              		.thumb_func
 318              		.type	stopMotion, %function
 319              	stopMotion:
 320              	.LFB66:
  87:dcmotor.c     ****         }
  88:dcmotor.c     ****     }
  89:dcmotor.c     **** }
  90:dcmotor.c     **** 
  91:dcmotor.c     **** //This function will be called once the ultrasonics or the encoders decide that it is time
  92:dcmotor.c     **** //to stop moving. 
  93:dcmotor.c     **** void stopMotion(void){
 321              		.loc 1 93 0
 322              		.cfi_startproc
 323              		@ args = 0, pretend = 0, frame = 0
 324              		@ frame_needed = 0, uses_anonymous_args = 0
 325 0000 08B5     		push	{r3, lr}
 326              		.cfi_def_cfa_offset 8
 327              		.cfi_offset 3, -8
 328              		.cfi_offset 14, -4
  94:dcmotor.c     ****     if ((motor1Enable == FALSE) && (motor2Enable == FALSE)){
 329              		.loc 1 94 0
 330 0002 244B     		ldr	r3, .L20
 331 0004 B3F90030 		ldrsh	r3, [r3]
 332 0008 002B     		cmp	r3, #0
 333 000a 41D1     		bne	.L13
 334              		.loc 1 94 0 is_stmt 0 discriminator 1
 335 000c 224B     		ldr	r3, .L20+4
 336 000e B3F90030 		ldrsh	r3, [r3]
 337 0012 002B     		cmp	r3, #0
 338 0014 3CD1     		bne	.L13
 339              	.LBB2:
  95:dcmotor.c     ****         //Update the driving permission flags
  96:dcmotor.c     ****         //Read encoder counts and update from previous position
  97:dcmotor.c     ****         int completedCounts;
  98:dcmotor.c     ****         if ((drivingForwardFlag == TRUE)||(drivingBackwardFlag == TRUE)){
 340              		.loc 1 98 0 is_stmt 1
 341 0016 214B     		ldr	r3, .L20+8
 342 0018 1B68     		ldr	r3, [r3]
 343 001a 012B     		cmp	r3, #1
 344 001c 03D0     		beq	.L15
 345              		.loc 1 98 0 is_stmt 0 discriminator 1
 346 001e 204B     		ldr	r3, .L20+12
 347 0020 1B68     		ldr	r3, [r3]
 348 0022 012B     		cmp	r3, #1
 349 0024 08D1     		bne	.L16
 350              	.L15:
  99:dcmotor.c     ****             //We assume that the two counter will have identical counts
 100:dcmotor.c     ****             completedCounts = Motor_1_Encoder_Counts_ReadCounter();
 351              		.loc 1 100 0 is_stmt 1
 352 0026 FFF7FEFF 		bl	Motor_1_Encoder_Counts_ReadCounter
 353              	.LVL53:
 101:dcmotor.c     ****             positionUpdate(completedCounts,drivingForwardFlag,drivingBackwardFlag);
 354              		.loc 1 101 0
 355 002a 1D4B     		ldr	r3, .L20+12
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccrHJ3zm.s 			page 9


 356 002c 1A68     		ldr	r2, [r3]
 357 002e 1B4B     		ldr	r3, .L20+8
 358 0030 1968     		ldr	r1, [r3]
 359 0032 FFF7FEFF 		bl	positionUpdate
 360              	.LVL54:
 361 0036 18E0     		b	.L17
 362              	.L16:
 102:dcmotor.c     ****         }else if (turningLeftFlag == TRUE){
 363              		.loc 1 102 0
 364 0038 1A4B     		ldr	r3, .L20+16
 365 003a 1B68     		ldr	r3, [r3]
 366 003c 012B     		cmp	r3, #1
 367 003e 08D1     		bne	.L18
 103:dcmotor.c     ****             completedCounts = Motor_2_Encoder_Counts_ReadCounter();
 368              		.loc 1 103 0
 369 0040 FFF7FEFF 		bl	Motor_2_Encoder_Counts_ReadCounter
 370              	.LVL55:
 104:dcmotor.c     ****             orientationUpdate(completedCounts,turningLeftFlag,turningRightFlag);
 371              		.loc 1 104 0
 372 0044 184B     		ldr	r3, .L20+20
 373 0046 1A68     		ldr	r2, [r3]
 374 0048 164B     		ldr	r3, .L20+16
 375 004a 1968     		ldr	r1, [r3]
 376 004c FFF7FEFF 		bl	orientationUpdate
 377              	.LVL56:
 378 0050 0BE0     		b	.L17
 379              	.L18:
 105:dcmotor.c     ****         }else if (turningRightFlag == TRUE){
 380              		.loc 1 105 0
 381 0052 154B     		ldr	r3, .L20+20
 382 0054 1B68     		ldr	r3, [r3]
 383 0056 012B     		cmp	r3, #1
 384 0058 07D1     		bne	.L17
 106:dcmotor.c     ****             completedCounts = Motor_1_Encoder_Counts_ReadCounter();
 385              		.loc 1 106 0
 386 005a FFF7FEFF 		bl	Motor_1_Encoder_Counts_ReadCounter
 387              	.LVL57:
 107:dcmotor.c     ****             orientationUpdate(completedCounts,turningLeftFlag,turningRightFlag);
 388              		.loc 1 107 0
 389 005e 124B     		ldr	r3, .L20+20
 390 0060 1A68     		ldr	r2, [r3]
 391 0062 104B     		ldr	r3, .L20+16
 392 0064 1968     		ldr	r1, [r3]
 393 0066 FFF7FEFF 		bl	orientationUpdate
 394              	.LVL58:
 395              	.L17:
 108:dcmotor.c     ****         }
 109:dcmotor.c     ****                 
 110:dcmotor.c     ****         //Clear encoder counts
 111:dcmotor.c     ****         Motor_1_Encoder_Counts_WriteCounter(0);
 396              		.loc 1 111 0
 397 006a 0020     		movs	r0, #0
 398 006c FFF7FEFF 		bl	Motor_1_Encoder_Counts_WriteCounter
 399              	.LVL59:
 112:dcmotor.c     ****         Motor_2_Encoder_Counts_WriteCounter(0);
 400              		.loc 1 112 0
 401 0070 0020     		movs	r0, #0
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccrHJ3zm.s 			page 10


 402 0072 FFF7FEFF 		bl	Motor_2_Encoder_Counts_WriteCounter
 403              	.LVL60:
 113:dcmotor.c     ****         
 114:dcmotor.c     ****         motor1EncoderCounts = 0;
 404              		.loc 1 114 0
 405 0076 0023     		movs	r3, #0
 406 0078 0C4A     		ldr	r2, .L20+24
 407 007a 1360     		str	r3, [r2]
 115:dcmotor.c     ****         motor2EncoderCounts = 0;
 408              		.loc 1 115 0
 409 007c 0C4A     		ldr	r2, .L20+28
 410 007e 1360     		str	r3, [r2]
 116:dcmotor.c     ****         
 117:dcmotor.c     ****         //Just for now, we are going to update driving flags by turning all of them off
 118:dcmotor.c     ****         drivingForwardFlag = FALSE;
 411              		.loc 1 118 0
 412 0080 064A     		ldr	r2, .L20+8
 413 0082 1360     		str	r3, [r2]
 119:dcmotor.c     ****         drivingBackwardFlag = FALSE;
 414              		.loc 1 119 0
 415 0084 064A     		ldr	r2, .L20+12
 416 0086 1360     		str	r3, [r2]
 120:dcmotor.c     ****         turningLeftFlag = FALSE;
 417              		.loc 1 120 0
 418 0088 064A     		ldr	r2, .L20+16
 419 008a 1360     		str	r3, [r2]
 121:dcmotor.c     ****         turningRightFlag = FALSE;
 420              		.loc 1 121 0
 421 008c 064A     		ldr	r2, .L20+20
 422 008e 1360     		str	r3, [r2]
 423              	.L13:
 424 0090 08BD     		pop	{r3, pc}
 425              	.L21:
 426 0092 00BF     		.align	2
 427              	.L20:
 428 0094 00000000 		.word	motor1Enable
 429 0098 00000000 		.word	motor2Enable
 430 009c 00000000 		.word	drivingForwardFlag
 431 00a0 00000000 		.word	drivingBackwardFlag
 432 00a4 00000000 		.word	turningLeftFlag
 433 00a8 00000000 		.word	turningRightFlag
 434 00ac 00000000 		.word	motor1EncoderCounts
 435 00b0 00000000 		.word	motor2EncoderCounts
 436              	.LBE2:
 437              		.cfi_endproc
 438              	.LFE66:
 439              		.size	stopMotion, .-stopMotion
 440              		.global	__aeabi_fdiv
 441              		.global	__aeabi_fmul
 442              		.global	__aeabi_f2uiz
 443              		.section	.text.motorDutyCycleUpdate,"ax",%progbits
 444              		.align	2
 445              		.global	motorDutyCycleUpdate
 446              		.thumb
 447              		.thumb_func
 448              		.type	motorDutyCycleUpdate, %function
 449              	motorDutyCycleUpdate:
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccrHJ3zm.s 			page 11


 450              	.LFB67:
 122:dcmotor.c     ****         
 123:dcmotor.c     ****         //Have code here to plan the route which should also update the driving flags
 124:dcmotor.c     ****         
 125:dcmotor.c     ****     }
 126:dcmotor.c     **** }
 127:dcmotor.c     **** 
 128:dcmotor.c     **** //Takes the duty cycles must be expressed as a percentage and runs the motors at those duty
 129:dcmotor.c     **** //cycles
 130:dcmotor.c     **** void motorDutyCycleUpdate(float M1_FD, float M1_BD, float M2_FD, float M2_BD){
 451              		.loc 1 130 0
 452              		.cfi_startproc
 453              		@ args = 0, pretend = 0, frame = 0
 454              		@ frame_needed = 0, uses_anonymous_args = 0
 455              	.LVL61:
 456 0000 70B5     		push	{r4, r5, r6, lr}
 457              		.cfi_def_cfa_offset 16
 458              		.cfi_offset 4, -16
 459              		.cfi_offset 5, -12
 460              		.cfi_offset 6, -8
 461              		.cfi_offset 14, -4
 462 0002 0D46     		mov	r5, r1
 463 0004 1646     		mov	r6, r2
 464 0006 1C46     		mov	r4, r3
 131:dcmotor.c     ****     Motor_1_driver_WriteCompare1((M1_FD/NUM_TO_PERCENT_CONVERTER)*DCMOTOR_PWM_PERIOD);
 465              		.loc 1 131 0
 466 0008 1749     		ldr	r1, .L24
 467              	.LVL62:
 468 000a FFF7FEFF 		bl	__aeabi_fdiv
 469              	.LVL63:
 470 000e 1749     		ldr	r1, .L24+4
 471 0010 FFF7FEFF 		bl	__aeabi_fmul
 472              	.LVL64:
 473 0014 FFF7FEFF 		bl	__aeabi_f2uiz
 474              	.LVL65:
 475 0018 80B2     		uxth	r0, r0
 476 001a FFF7FEFF 		bl	Motor_1_driver_WriteCompare1
 477              	.LVL66:
 132:dcmotor.c     ****     Motor_2_driver_WriteCompare1((M2_FD/NUM_TO_PERCENT_CONVERTER)*DCMOTOR_PWM_PERIOD);
 478              		.loc 1 132 0
 479 001e 1249     		ldr	r1, .L24
 480 0020 3046     		mov	r0, r6
 481 0022 FFF7FEFF 		bl	__aeabi_fdiv
 482              	.LVL67:
 483 0026 1149     		ldr	r1, .L24+4
 484 0028 FFF7FEFF 		bl	__aeabi_fmul
 485              	.LVL68:
 486 002c FFF7FEFF 		bl	__aeabi_f2uiz
 487              	.LVL69:
 488 0030 80B2     		uxth	r0, r0
 489 0032 FFF7FEFF 		bl	Motor_2_driver_WriteCompare1
 490              	.LVL70:
 133:dcmotor.c     ****     Motor_1_driver_WriteCompare2((M1_BD/NUM_TO_PERCENT_CONVERTER)*DCMOTOR_PWM_PERIOD);
 491              		.loc 1 133 0
 492 0036 0C49     		ldr	r1, .L24
 493 0038 2846     		mov	r0, r5
 494 003a FFF7FEFF 		bl	__aeabi_fdiv
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccrHJ3zm.s 			page 12


 495              	.LVL71:
 496 003e 0B49     		ldr	r1, .L24+4
 497 0040 FFF7FEFF 		bl	__aeabi_fmul
 498              	.LVL72:
 499 0044 FFF7FEFF 		bl	__aeabi_f2uiz
 500              	.LVL73:
 501 0048 80B2     		uxth	r0, r0
 502 004a FFF7FEFF 		bl	Motor_1_driver_WriteCompare2
 503              	.LVL74:
 134:dcmotor.c     ****     Motor_2_driver_WriteCompare2((M2_BD/NUM_TO_PERCENT_CONVERTER)*DCMOTOR_PWM_PERIOD);
 504              		.loc 1 134 0
 505 004e 0649     		ldr	r1, .L24
 506 0050 2046     		mov	r0, r4
 507 0052 FFF7FEFF 		bl	__aeabi_fdiv
 508              	.LVL75:
 509 0056 0549     		ldr	r1, .L24+4
 510 0058 FFF7FEFF 		bl	__aeabi_fmul
 511              	.LVL76:
 512 005c FFF7FEFF 		bl	__aeabi_f2uiz
 513              	.LVL77:
 514 0060 80B2     		uxth	r0, r0
 515 0062 FFF7FEFF 		bl	Motor_2_driver_WriteCompare2
 516              	.LVL78:
 517 0066 70BD     		pop	{r4, r5, r6, pc}
 518              	.LVL79:
 519              	.L25:
 520              		.align	2
 521              	.L24:
 522 0068 0000C842 		.word	1120403456
 523 006c 00009643 		.word	1133903872
 524              		.cfi_endproc
 525              	.LFE67:
 526              		.size	motorDutyCycleUpdate, .-motorDutyCycleUpdate
 527              		.global	__aeabi_i2f
 528              		.section	.text.driftCorrect,"ax",%progbits
 529              		.align	2
 530              		.global	driftCorrect
 531              		.thumb
 532              		.thumb_func
 533              		.type	driftCorrect, %function
 534              	driftCorrect:
 535              	.LFB68:
 135:dcmotor.c     **** }
 136:dcmotor.c     **** 
 137:dcmotor.c     **** //This function will be responsible for adjusting any drift. It will read and modify 
 138:dcmotor.c     **** //global variables M1_FD,M1_BD,M2_FD and M2_BD to do so.
 139:dcmotor.c     **** void driftCorrect(void){
 536              		.loc 1 139 0
 537              		.cfi_startproc
 538              		@ args = 0, pretend = 0, frame = 0
 539              		@ frame_needed = 0, uses_anonymous_args = 0
 540 0000 70B5     		push	{r4, r5, r6, lr}
 541              		.cfi_def_cfa_offset 16
 542              		.cfi_offset 4, -16
 543              		.cfi_offset 5, -12
 544              		.cfi_offset 6, -8
 545              		.cfi_offset 14, -4
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccrHJ3zm.s 			page 13


 140:dcmotor.c     ****     int temp; //allows us to swap motor encoders' speeds
 141:dcmotor.c     ****     if (motor1EncoderCounts > motor2EncoderCounts){
 546              		.loc 1 141 0
 547 0002 5D4B     		ldr	r3, .L44
 548 0004 1A68     		ldr	r2, [r3]
 549 0006 5D4B     		ldr	r3, .L44+4
 550 0008 1B68     		ldr	r3, [r3]
 551 000a 9A42     		cmp	r2, r3
 552 000c 4BDD     		ble	.L27
 142:dcmotor.c     ****         if (drivingForwardFlag == TRUE){
 553              		.loc 1 142 0
 554 000e 5C4B     		ldr	r3, .L44+8
 555 0010 1B68     		ldr	r3, [r3]
 556 0012 012B     		cmp	r3, #1
 557 0014 0ED1     		bne	.L28
 143:dcmotor.c     ****             if (M1_FD == M2_FD){
 558              		.loc 1 143 0
 559 0016 5B4B     		ldr	r3, .L44+12
 560 0018 1A68     		ldr	r2, [r3]
 561 001a 5B4B     		ldr	r3, .L44+16
 562 001c 1B68     		ldr	r3, [r3]
 563 001e 9A42     		cmp	r2, r3
 564 0020 03D1     		bne	.L29
 144:dcmotor.c     ****                 M1_FD = M2_FD - 1;
 565              		.loc 1 144 0
 566 0022 013B     		subs	r3, r3, #1
 567 0024 574A     		ldr	r2, .L44+12
 568 0026 1360     		str	r3, [r2]
 569 0028 8AE0     		b	.L30
 570              	.L29:
 571              	.LVL80:
 145:dcmotor.c     ****             }else{
 146:dcmotor.c     ****                 temp = M1_FD;
 147:dcmotor.c     ****                 M1_FD = M2_FD;
 572              		.loc 1 147 0
 573 002a 5649     		ldr	r1, .L44+12
 574 002c 0B60     		str	r3, [r1]
 148:dcmotor.c     ****                 M2_FD = temp;
 575              		.loc 1 148 0
 576 002e 564B     		ldr	r3, .L44+16
 577 0030 1A60     		str	r2, [r3]
 578 0032 85E0     		b	.L30
 579              	.LVL81:
 580              	.L28:
 149:dcmotor.c     ****             }
 150:dcmotor.c     ****         }
 151:dcmotor.c     ****         else if (drivingBackwardFlag == TRUE){
 581              		.loc 1 151 0
 582 0034 554B     		ldr	r3, .L44+20
 583 0036 1B68     		ldr	r3, [r3]
 584 0038 012B     		cmp	r3, #1
 585 003a 0ED1     		bne	.L31
 152:dcmotor.c     ****             if (M1_BD == M2_BD){
 586              		.loc 1 152 0
 587 003c 544B     		ldr	r3, .L44+24
 588 003e 1A68     		ldr	r2, [r3]
 589 0040 544B     		ldr	r3, .L44+28
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccrHJ3zm.s 			page 14


 590 0042 1B68     		ldr	r3, [r3]
 591 0044 9A42     		cmp	r2, r3
 592 0046 03D1     		bne	.L32
 153:dcmotor.c     ****                 M1_BD = M2_BD - 1;
 593              		.loc 1 153 0
 594 0048 013B     		subs	r3, r3, #1
 595 004a 514A     		ldr	r2, .L44+24
 596 004c 1360     		str	r3, [r2]
 597 004e 77E0     		b	.L30
 598              	.L32:
 599              	.LVL82:
 154:dcmotor.c     ****             }else{
 155:dcmotor.c     ****                 temp = M1_BD;
 156:dcmotor.c     ****                 M1_BD = M2_BD;
 600              		.loc 1 156 0
 601 0050 4F49     		ldr	r1, .L44+24
 602 0052 0B60     		str	r3, [r1]
 157:dcmotor.c     ****                 M2_BD = temp;
 603              		.loc 1 157 0
 604 0054 4F4B     		ldr	r3, .L44+28
 605 0056 1A60     		str	r2, [r3]
 606 0058 72E0     		b	.L30
 607              	.LVL83:
 608              	.L31:
 158:dcmotor.c     ****             }
 159:dcmotor.c     ****         }else if (turningLeftFlag == TRUE){
 609              		.loc 1 159 0
 610 005a 4F4B     		ldr	r3, .L44+32
 611 005c 1B68     		ldr	r3, [r3]
 612 005e 012B     		cmp	r3, #1
 613 0060 0ED1     		bne	.L33
 160:dcmotor.c     ****             if (M1_BD == M2_FD){
 614              		.loc 1 160 0
 615 0062 4B4B     		ldr	r3, .L44+24
 616 0064 1A68     		ldr	r2, [r3]
 617 0066 484B     		ldr	r3, .L44+16
 618 0068 1B68     		ldr	r3, [r3]
 619 006a 9A42     		cmp	r2, r3
 620 006c 03D1     		bne	.L34
 161:dcmotor.c     ****                 M1_BD = M2_FD - 1;
 621              		.loc 1 161 0
 622 006e 013B     		subs	r3, r3, #1
 623 0070 474A     		ldr	r2, .L44+24
 624 0072 1360     		str	r3, [r2]
 625 0074 64E0     		b	.L30
 626              	.L34:
 627              	.LVL84:
 162:dcmotor.c     ****             }else{
 163:dcmotor.c     ****                 temp = M1_BD;
 164:dcmotor.c     ****                 M1_BD = M2_FD;
 628              		.loc 1 164 0
 629 0076 4649     		ldr	r1, .L44+24
 630 0078 0B60     		str	r3, [r1]
 165:dcmotor.c     ****                 M2_FD = temp;
 631              		.loc 1 165 0
 632 007a 434B     		ldr	r3, .L44+16
 633 007c 1A60     		str	r2, [r3]
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccrHJ3zm.s 			page 15


 634 007e 5FE0     		b	.L30
 635              	.LVL85:
 636              	.L33:
 166:dcmotor.c     ****             }
 167:dcmotor.c     ****         }else if (turningRightFlag == TRUE){
 637              		.loc 1 167 0
 638 0080 464B     		ldr	r3, .L44+36
 639 0082 1B68     		ldr	r3, [r3]
 640 0084 012B     		cmp	r3, #1
 641 0086 5BD1     		bne	.L30
 168:dcmotor.c     ****             if (M1_FD == M2_BD){
 642              		.loc 1 168 0
 643 0088 3E4B     		ldr	r3, .L44+12
 644 008a 1A68     		ldr	r2, [r3]
 645 008c 414B     		ldr	r3, .L44+28
 646 008e 1B68     		ldr	r3, [r3]
 647 0090 9A42     		cmp	r2, r3
 648 0092 03D1     		bne	.L35
 169:dcmotor.c     ****                 M1_FD = M2_BD - 1;
 649              		.loc 1 169 0
 650 0094 013B     		subs	r3, r3, #1
 651 0096 3B4A     		ldr	r2, .L44+12
 652 0098 1360     		str	r3, [r2]
 653 009a 51E0     		b	.L30
 654              	.L35:
 655              	.LVL86:
 170:dcmotor.c     ****             }else{
 171:dcmotor.c     ****                 temp = M1_FD;
 172:dcmotor.c     ****                 M1_FD = M2_BD;
 656              		.loc 1 172 0
 657 009c 3949     		ldr	r1, .L44+12
 658 009e 0B60     		str	r3, [r1]
 173:dcmotor.c     ****                 M2_BD = temp;
 659              		.loc 1 173 0
 660 00a0 3C4B     		ldr	r3, .L44+28
 661 00a2 1A60     		str	r2, [r3]
 662 00a4 4CE0     		b	.L30
 663              	.LVL87:
 664              	.L27:
 174:dcmotor.c     ****             }
 175:dcmotor.c     ****         }
 176:dcmotor.c     ****     }else if (motor2EncoderCounts > motor1EncoderCounts){
 665              		.loc 1 176 0
 666 00a6 9A42     		cmp	r2, r3
 667 00a8 4ADA     		bge	.L30
 177:dcmotor.c     ****         if (drivingForwardFlag == TRUE){
 668              		.loc 1 177 0
 669 00aa 354B     		ldr	r3, .L44+8
 670 00ac 1B68     		ldr	r3, [r3]
 671 00ae 012B     		cmp	r3, #1
 672 00b0 0ED1     		bne	.L36
 178:dcmotor.c     ****             if (M1_FD == M2_FD){
 673              		.loc 1 178 0
 674 00b2 344B     		ldr	r3, .L44+12
 675 00b4 1B68     		ldr	r3, [r3]
 676 00b6 344A     		ldr	r2, .L44+16
 677 00b8 1268     		ldr	r2, [r2]
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccrHJ3zm.s 			page 16


 678 00ba 9342     		cmp	r3, r2
 679 00bc 03D1     		bne	.L37
 179:dcmotor.c     ****                 M2_FD = M1_FD - 1 ;
 680              		.loc 1 179 0
 681 00be 013B     		subs	r3, r3, #1
 682 00c0 314A     		ldr	r2, .L44+16
 683 00c2 1360     		str	r3, [r2]
 684 00c4 3CE0     		b	.L30
 685              	.L37:
 686              	.LVL88:
 180:dcmotor.c     ****             }else{
 181:dcmotor.c     ****                 temp = M1_FD;
 182:dcmotor.c     ****                 M1_FD = M2_FD;
 687              		.loc 1 182 0
 688 00c6 2F49     		ldr	r1, .L44+12
 689 00c8 0A60     		str	r2, [r1]
 183:dcmotor.c     ****                 M2_FD = temp;
 690              		.loc 1 183 0
 691 00ca 2F4A     		ldr	r2, .L44+16
 692 00cc 1360     		str	r3, [r2]
 693 00ce 37E0     		b	.L30
 694              	.LVL89:
 695              	.L36:
 184:dcmotor.c     ****             }
 185:dcmotor.c     ****         }
 186:dcmotor.c     ****         else if (drivingBackwardFlag == TRUE){
 696              		.loc 1 186 0
 697 00d0 2E4B     		ldr	r3, .L44+20
 698 00d2 1B68     		ldr	r3, [r3]
 699 00d4 012B     		cmp	r3, #1
 700 00d6 0ED1     		bne	.L38
 187:dcmotor.c     ****             if (M1_BD == M2_BD){
 701              		.loc 1 187 0
 702 00d8 2D4B     		ldr	r3, .L44+24
 703 00da 1B68     		ldr	r3, [r3]
 704 00dc 2D4A     		ldr	r2, .L44+28
 705 00de 1268     		ldr	r2, [r2]
 706 00e0 9342     		cmp	r3, r2
 707 00e2 03D1     		bne	.L39
 188:dcmotor.c     ****                 M2_BD = M1_BD - 1;
 708              		.loc 1 188 0
 709 00e4 013B     		subs	r3, r3, #1
 710 00e6 2B4A     		ldr	r2, .L44+28
 711 00e8 1360     		str	r3, [r2]
 712 00ea 29E0     		b	.L30
 713              	.L39:
 714              	.LVL90:
 189:dcmotor.c     ****             }else{
 190:dcmotor.c     ****                 temp = M1_BD;
 191:dcmotor.c     ****                 M1_BD = M2_BD;
 715              		.loc 1 191 0
 716 00ec 2849     		ldr	r1, .L44+24
 717 00ee 0A60     		str	r2, [r1]
 192:dcmotor.c     ****                 M2_BD = temp;
 718              		.loc 1 192 0
 719 00f0 284A     		ldr	r2, .L44+28
 720 00f2 1360     		str	r3, [r2]
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccrHJ3zm.s 			page 17


 721 00f4 24E0     		b	.L30
 722              	.LVL91:
 723              	.L38:
 193:dcmotor.c     ****             }
 194:dcmotor.c     ****         }else if (turningLeftFlag == TRUE){
 724              		.loc 1 194 0
 725 00f6 284B     		ldr	r3, .L44+32
 726 00f8 1B68     		ldr	r3, [r3]
 727 00fa 012B     		cmp	r3, #1
 728 00fc 0ED1     		bne	.L40
 195:dcmotor.c     ****             if (M1_BD == M2_FD){
 729              		.loc 1 195 0
 730 00fe 244B     		ldr	r3, .L44+24
 731 0100 1A68     		ldr	r2, [r3]
 732 0102 214B     		ldr	r3, .L44+16
 733 0104 1B68     		ldr	r3, [r3]
 734 0106 9A42     		cmp	r2, r3
 735 0108 03D1     		bne	.L41
 196:dcmotor.c     ****                 M1_BD = M2_FD - 1;
 736              		.loc 1 196 0
 737 010a 013B     		subs	r3, r3, #1
 738 010c 204A     		ldr	r2, .L44+24
 739 010e 1360     		str	r3, [r2]
 740 0110 16E0     		b	.L30
 741              	.L41:
 742              	.LVL92:
 197:dcmotor.c     ****             }else{
 198:dcmotor.c     ****                 temp = M1_BD;
 199:dcmotor.c     ****                 M1_BD = M2_FD;
 743              		.loc 1 199 0
 744 0112 1F49     		ldr	r1, .L44+24
 745 0114 0B60     		str	r3, [r1]
 200:dcmotor.c     ****                 M2_FD = temp;
 746              		.loc 1 200 0
 747 0116 1C4B     		ldr	r3, .L44+16
 748 0118 1A60     		str	r2, [r3]
 749 011a 11E0     		b	.L30
 750              	.LVL93:
 751              	.L40:
 201:dcmotor.c     ****             }
 202:dcmotor.c     ****         }else if (turningRightFlag == TRUE){
 752              		.loc 1 202 0
 753 011c 1F4B     		ldr	r3, .L44+36
 754 011e 1B68     		ldr	r3, [r3]
 755 0120 012B     		cmp	r3, #1
 756 0122 0DD1     		bne	.L30
 203:dcmotor.c     ****             if (M1_FD == M2_BD){
 757              		.loc 1 203 0
 758 0124 174B     		ldr	r3, .L44+12
 759 0126 1A68     		ldr	r2, [r3]
 760 0128 1A4B     		ldr	r3, .L44+28
 761 012a 1B68     		ldr	r3, [r3]
 762 012c 9A42     		cmp	r2, r3
 763 012e 03D1     		bne	.L42
 204:dcmotor.c     ****                 M1_FD = M2_BD - 1;
 764              		.loc 1 204 0
 765 0130 013B     		subs	r3, r3, #1
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccrHJ3zm.s 			page 18


 766 0132 144A     		ldr	r2, .L44+12
 767 0134 1360     		str	r3, [r2]
 768 0136 03E0     		b	.L30
 769              	.L42:
 770              	.LVL94:
 205:dcmotor.c     ****             }else{
 206:dcmotor.c     ****                 temp = M1_FD;
 207:dcmotor.c     ****                 M1_FD = M2_BD;
 771              		.loc 1 207 0
 772 0138 1249     		ldr	r1, .L44+12
 773 013a 0B60     		str	r3, [r1]
 208:dcmotor.c     ****                 M2_BD = temp;
 774              		.loc 1 208 0
 775 013c 154B     		ldr	r3, .L44+28
 776 013e 1A60     		str	r2, [r3]
 777              	.LVL95:
 778              	.L30:
 209:dcmotor.c     ****             }
 210:dcmotor.c     ****         }
 211:dcmotor.c     ****     }
 212:dcmotor.c     ****     motorDutyCycleUpdate(M1_FD,M1_BD,M2_FD,M2_BD);
 779              		.loc 1 212 0
 780 0140 144B     		ldr	r3, .L44+28
 781 0142 1868     		ldr	r0, [r3]
 782 0144 FFF7FEFF 		bl	__aeabi_i2f
 783              	.LVL96:
 784 0148 0646     		mov	r6, r0
 785 014a 0F4B     		ldr	r3, .L44+16
 786 014c 1868     		ldr	r0, [r3]
 787 014e FFF7FEFF 		bl	__aeabi_i2f
 788              	.LVL97:
 789 0152 0546     		mov	r5, r0
 790 0154 0E4B     		ldr	r3, .L44+24
 791 0156 1868     		ldr	r0, [r3]
 792 0158 FFF7FEFF 		bl	__aeabi_i2f
 793              	.LVL98:
 794 015c 0446     		mov	r4, r0
 795 015e 094B     		ldr	r3, .L44+12
 796 0160 1868     		ldr	r0, [r3]
 797 0162 FFF7FEFF 		bl	__aeabi_i2f
 798              	.LVL99:
 799 0166 3346     		mov	r3, r6
 800 0168 2A46     		mov	r2, r5
 801 016a 2146     		mov	r1, r4
 802 016c FFF7FEFF 		bl	motorDutyCycleUpdate
 803              	.LVL100:
 213:dcmotor.c     ****     Drift_Check_Timer_Start(); 
 804              		.loc 1 213 0
 805 0170 FFF7FEFF 		bl	Drift_Check_Timer_Start
 806              	.LVL101:
 807 0174 70BD     		pop	{r4, r5, r6, pc}
 808              	.L45:
 809 0176 00BF     		.align	2
 810              	.L44:
 811 0178 00000000 		.word	motor1EncoderCounts
 812 017c 00000000 		.word	motor2EncoderCounts
 813 0180 00000000 		.word	drivingForwardFlag
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccrHJ3zm.s 			page 19


 814 0184 00000000 		.word	M1_FD
 815 0188 00000000 		.word	M2_FD
 816 018c 00000000 		.word	drivingBackwardFlag
 817 0190 00000000 		.word	M1_BD
 818 0194 00000000 		.word	M2_BD
 819 0198 00000000 		.word	turningLeftFlag
 820 019c 00000000 		.word	turningRightFlag
 821              		.cfi_endproc
 822              	.LFE68:
 823              		.size	driftCorrect, .-driftCorrect
 824              		.section	.text.counterInitialise,"ax",%progbits
 825              		.align	2
 826              		.global	counterInitialise
 827              		.thumb
 828              		.thumb_func
 829              		.type	counterInitialise, %function
 830              	counterInitialise:
 831              	.LFB69:
 214:dcmotor.c     **** }
 215:dcmotor.c     **** 
 216:dcmotor.c     **** //Takes two integers count1 and count2, and sets the counters up so that they will start counting 
 217:dcmotor.c     **** //at zero and interrupt when their counts equal the count values specified
 218:dcmotor.c     **** void counterInitialise(int count1, int count2){
 832              		.loc 1 218 0
 833              		.cfi_startproc
 834              		@ args = 0, pretend = 0, frame = 0
 835              		@ frame_needed = 0, uses_anonymous_args = 0
 836              	.LVL102:
 837 0000 38B5     		push	{r3, r4, r5, lr}
 838              		.cfi_def_cfa_offset 16
 839              		.cfi_offset 3, -16
 840              		.cfi_offset 4, -12
 841              		.cfi_offset 5, -8
 842              		.cfi_offset 14, -4
 843 0002 0546     		mov	r5, r0
 844 0004 0C46     		mov	r4, r1
 219:dcmotor.c     ****     Motor_1_Encoder_Counts_WriteCounter(0); //Start the counters from 0
 845              		.loc 1 219 0
 846 0006 0020     		movs	r0, #0
 847              	.LVL103:
 848 0008 FFF7FEFF 		bl	Motor_1_Encoder_Counts_WriteCounter
 849              	.LVL104:
 220:dcmotor.c     ****     Motor_2_Encoder_Counts_WriteCounter(0); //Start the counters from 0
 850              		.loc 1 220 0
 851 000c 0020     		movs	r0, #0
 852 000e FFF7FEFF 		bl	Motor_2_Encoder_Counts_WriteCounter
 853              	.LVL105:
 221:dcmotor.c     ****     Motor_1_Encoder_Counts_WritePeriod(count1);
 854              		.loc 1 221 0
 855 0012 A8B2     		uxth	r0, r5
 856 0014 FFF7FEFF 		bl	Motor_1_Encoder_Counts_WritePeriod
 857              	.LVL106:
 222:dcmotor.c     ****     Motor_2_Encoder_Counts_WritePeriod(count2);
 858              		.loc 1 222 0
 859 0018 A0B2     		uxth	r0, r4
 860 001a FFF7FEFF 		bl	Motor_2_Encoder_Counts_WritePeriod
 861              	.LVL107:
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccrHJ3zm.s 			page 20


 862 001e 38BD     		pop	{r3, r4, r5, pc}
 863              		.cfi_endproc
 864              	.LFE69:
 865              		.size	counterInitialise, .-counterInitialise
 866              		.section	.text.moveForward,"ax",%progbits
 867              		.align	2
 868              		.global	moveForward
 869              		.thumb
 870              		.thumb_func
 871              		.type	moveForward, %function
 872              	moveForward:
 873              	.LFB70:
 223:dcmotor.c     **** }
 224:dcmotor.c     **** 
 225:dcmotor.c     **** //Takes a distance to move in cm and moves. Blocking (sadly)
 226:dcmotor.c     **** void moveForward(float amount){
 874              		.loc 1 226 0
 875              		.cfi_startproc
 876              		@ args = 0, pretend = 0, frame = 0
 877              		@ frame_needed = 0, uses_anonymous_args = 0
 878              	.LVL108:
 879 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 880              		.cfi_def_cfa_offset 24
 881              		.cfi_offset 4, -24
 882              		.cfi_offset 5, -20
 883              		.cfi_offset 6, -16
 884              		.cfi_offset 7, -12
 885              		.cfi_offset 8, -8
 886              		.cfi_offset 14, -4
 227:dcmotor.c     ****     int counts = amount/CM_PER_COUNT;
 887              		.loc 1 227 0
 888 0004 FFF7FEFF 		bl	__aeabi_f2d
 889              	.LVL109:
 890 0008 23A3     		adr	r3, .L52
 891 000a D3E90023 		ldrd	r2, [r3]
 892 000e FFF7FEFF 		bl	__aeabi_ddiv
 893              	.LVL110:
 894 0012 FFF7FEFF 		bl	__aeabi_d2iz
 895              	.LVL111:
 228:dcmotor.c     ****     motor1Enable = TRUE;
 896              		.loc 1 228 0
 897 0016 0123     		movs	r3, #1
 898 0018 214A     		ldr	r2, .L52+8
 899 001a 1380     		strh	r3, [r2]	@ movhi
 229:dcmotor.c     ****     motor2Enable = TRUE;
 900              		.loc 1 229 0
 901 001c 214A     		ldr	r2, .L52+12
 902 001e 1380     		strh	r3, [r2]	@ movhi
 230:dcmotor.c     ****     drivingForwardFlag = TRUE;
 903              		.loc 1 230 0
 904 0020 214A     		ldr	r2, .L52+16
 905 0022 1360     		str	r3, [r2]
 231:dcmotor.c     ****     motor1EncoderCounts = 0;
 906              		.loc 1 231 0
 907 0024 0024     		movs	r4, #0
 908 0026 214B     		ldr	r3, .L52+20
 909 0028 1C60     		str	r4, [r3]
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccrHJ3zm.s 			page 21


 232:dcmotor.c     ****     motor2EncoderCounts = 0;
 910              		.loc 1 232 0
 911 002a 214B     		ldr	r3, .L52+24
 912 002c 1C60     		str	r4, [r3]
 233:dcmotor.c     ****     counterInitialise(counts,counts); //Sets up counters to interrupt at right time
 913              		.loc 1 233 0
 914 002e 0146     		mov	r1, r0
 915 0030 FFF7FEFF 		bl	counterInitialise
 916              	.LVL112:
 234:dcmotor.c     ****     M1_FD = DCMOTOR_IDEAL_DUTY_CYCLE;
 917              		.loc 1 234 0
 918 0034 1F4D     		ldr	r5, .L52+28
 919 0036 5023     		movs	r3, #80
 920 0038 2B60     		str	r3, [r5]
 235:dcmotor.c     ****     M1_BD = 0;
 921              		.loc 1 235 0
 922 003a 1F4E     		ldr	r6, .L52+32
 923 003c 3460     		str	r4, [r6]
 236:dcmotor.c     ****     M2_FD =  DCMOTOR_IDEAL_DUTY_CYCLE;
 924              		.loc 1 236 0
 925 003e 1F4F     		ldr	r7, .L52+36
 926 0040 3B60     		str	r3, [r7]
 237:dcmotor.c     ****     M2_BD = 0;
 927              		.loc 1 237 0
 928 0042 DFF87C80 		ldr	r8, .L52+40
 929 0046 C8F80040 		str	r4, [r8]
 238:dcmotor.c     ****     Motor_1_Encoder_Counts_Start();
 930              		.loc 1 238 0
 931 004a FFF7FEFF 		bl	Motor_1_Encoder_Counts_Start
 932              	.LVL113:
 239:dcmotor.c     ****     Motor_2_Encoder_Counts_Start();
 933              		.loc 1 239 0
 934 004e FFF7FEFF 		bl	Motor_2_Encoder_Counts_Start
 935              	.LVL114:
 240:dcmotor.c     ****     Drift_Check_Timer_Start();
 936              		.loc 1 240 0
 937 0052 FFF7FEFF 		bl	Drift_Check_Timer_Start
 938              	.LVL115:
 241:dcmotor.c     ****     motorDutyCycleUpdate(M1_FD,M1_BD,M2_FD,M2_BD);//This gets the motors going
 939              		.loc 1 241 0
 940 0056 D8F80000 		ldr	r0, [r8]
 941 005a FFF7FEFF 		bl	__aeabi_i2f
 942              	.LVL116:
 943 005e 8046     		mov	r8, r0
 944 0060 3868     		ldr	r0, [r7]
 945 0062 FFF7FEFF 		bl	__aeabi_i2f
 946              	.LVL117:
 947 0066 0746     		mov	r7, r0
 948 0068 3068     		ldr	r0, [r6]
 949 006a FFF7FEFF 		bl	__aeabi_i2f
 950              	.LVL118:
 951 006e 0446     		mov	r4, r0
 952 0070 2868     		ldr	r0, [r5]
 953 0072 FFF7FEFF 		bl	__aeabi_i2f
 954              	.LVL119:
 955 0076 4346     		mov	r3, r8
 956 0078 3A46     		mov	r2, r7
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccrHJ3zm.s 			page 22


 957 007a 2146     		mov	r1, r4
 958 007c FFF7FEFF 		bl	motorDutyCycleUpdate
 959              	.LVL120:
 960              	.L49:
 242:dcmotor.c     ****     //The below line just traps execution here until the motion is completed
 243:dcmotor.c     ****     while ((motor1Enable == TRUE)||(motor2Enable == TRUE)){
 961              		.loc 1 243 0 discriminator 3
 962 0080 074B     		ldr	r3, .L52+8
 963 0082 B3F90030 		ldrsh	r3, [r3]
 964 0086 012B     		cmp	r3, #1
 965 0088 FAD0     		beq	.L49
 966              		.loc 1 243 0 is_stmt 0 discriminator 2
 967 008a 064B     		ldr	r3, .L52+12
 968 008c B3F90030 		ldrsh	r3, [r3]
 969 0090 012B     		cmp	r3, #1
 970 0092 F5D0     		beq	.L49
 244:dcmotor.c     ****     
 245:dcmotor.c     ****     }
 246:dcmotor.c     **** }
 971              		.loc 1 246 0 is_stmt 1
 972 0094 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 973              	.L53:
 974              		.align	3
 975              	.L52:
 976 0098 12A5BDC1 		.word	-1044536046
 977 009c 1726933F 		.word	1066608151
 978 00a0 00000000 		.word	motor1Enable
 979 00a4 00000000 		.word	motor2Enable
 980 00a8 00000000 		.word	drivingForwardFlag
 981 00ac 00000000 		.word	motor1EncoderCounts
 982 00b0 00000000 		.word	motor2EncoderCounts
 983 00b4 00000000 		.word	M1_FD
 984 00b8 00000000 		.word	M1_BD
 985 00bc 00000000 		.word	M2_FD
 986 00c0 00000000 		.word	M2_BD
 987              		.cfi_endproc
 988              	.LFE70:
 989              		.size	moveForward, .-moveForward
 990              		.section	.text.moveForwardIndefinitely,"ax",%progbits
 991              		.align	2
 992              		.global	moveForwardIndefinitely
 993              		.thumb
 994              		.thumb_func
 995              		.type	moveForwardIndefinitely, %function
 996              	moveForwardIndefinitely:
 997              	.LFB71:
 247:dcmotor.c     **** 
 248:dcmotor.c     **** //Non-blocking move function. It will be called and will cause the robot to move forward until 
 249:dcmotor.c     **** //interrupted out by ultrasonics
 250:dcmotor.c     **** void moveForwardIndefinitely(void){
 998              		.loc 1 250 0
 999              		.cfi_startproc
 1000              		@ args = 0, pretend = 0, frame = 0
 1001              		@ frame_needed = 0, uses_anonymous_args = 0
 1002 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1003              		.cfi_def_cfa_offset 24
 1004              		.cfi_offset 4, -24
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccrHJ3zm.s 			page 23


 1005              		.cfi_offset 5, -20
 1006              		.cfi_offset 6, -16
 1007              		.cfi_offset 7, -12
 1008              		.cfi_offset 8, -8
 1009              		.cfi_offset 14, -4
 1010              	.LVL121:
 251:dcmotor.c     ****     int counts = ENCODER_COUNTS_MAX;
 252:dcmotor.c     ****     motor1Enable = TRUE;
 1011              		.loc 1 252 0
 1012 0004 0123     		movs	r3, #1
 1013 0006 1C4A     		ldr	r2, .L56
 1014 0008 1380     		strh	r3, [r2]	@ movhi
 253:dcmotor.c     ****     motor2Enable = TRUE;
 1015              		.loc 1 253 0
 1016 000a 1C4A     		ldr	r2, .L56+4
 1017 000c 1380     		strh	r3, [r2]	@ movhi
 254:dcmotor.c     ****     drivingForwardFlag = TRUE;
 1018              		.loc 1 254 0
 1019 000e 1C4A     		ldr	r2, .L56+8
 1020 0010 1360     		str	r3, [r2]
 255:dcmotor.c     ****     motor1EncoderCounts = 0;
 1021              		.loc 1 255 0
 1022 0012 0024     		movs	r4, #0
 1023 0014 1B4B     		ldr	r3, .L56+12
 1024 0016 1C60     		str	r4, [r3]
 256:dcmotor.c     ****     motor2EncoderCounts = 0;
 1025              		.loc 1 256 0
 1026 0018 1B4B     		ldr	r3, .L56+16
 1027 001a 1C60     		str	r4, [r3]
 257:dcmotor.c     ****     counterInitialise(counts,counts); //Sets up counters to interrupt at right time
 1028              		.loc 1 257 0
 1029 001c 4FF6DC71 		movw	r1, #65500
 1030 0020 0846     		mov	r0, r1
 1031 0022 FFF7FEFF 		bl	counterInitialise
 1032              	.LVL122:
 258:dcmotor.c     ****     M1_FD = DCMOTOR_IDEAL_DUTY_CYCLE;
 1033              		.loc 1 258 0
 1034 0026 194D     		ldr	r5, .L56+20
 1035 0028 5023     		movs	r3, #80
 1036 002a 2B60     		str	r3, [r5]
 259:dcmotor.c     ****     M1_BD = 0;
 1037              		.loc 1 259 0
 1038 002c 184E     		ldr	r6, .L56+24
 1039 002e 3460     		str	r4, [r6]
 260:dcmotor.c     ****     M2_FD =  DCMOTOR_IDEAL_DUTY_CYCLE;
 1040              		.loc 1 260 0
 1041 0030 184F     		ldr	r7, .L56+28
 1042 0032 3B60     		str	r3, [r7]
 261:dcmotor.c     ****     M2_BD = 0;
 1043              		.loc 1 261 0
 1044 0034 DFF86080 		ldr	r8, .L56+32
 1045 0038 C8F80040 		str	r4, [r8]
 262:dcmotor.c     ****     Motor_1_Encoder_Counts_Start();
 1046              		.loc 1 262 0
 1047 003c FFF7FEFF 		bl	Motor_1_Encoder_Counts_Start
 1048              	.LVL123:
 263:dcmotor.c     ****     Motor_2_Encoder_Counts_Start();
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccrHJ3zm.s 			page 24


 1049              		.loc 1 263 0
 1050 0040 FFF7FEFF 		bl	Motor_2_Encoder_Counts_Start
 1051              	.LVL124:
 264:dcmotor.c     ****     Drift_Check_Timer_Start();
 1052              		.loc 1 264 0
 1053 0044 FFF7FEFF 		bl	Drift_Check_Timer_Start
 1054              	.LVL125:
 265:dcmotor.c     ****     motorDutyCycleUpdate(M1_FD,M1_BD,M2_FD,M2_BD);//This gets the motors going
 1055              		.loc 1 265 0
 1056 0048 D8F80000 		ldr	r0, [r8]
 1057 004c FFF7FEFF 		bl	__aeabi_i2f
 1058              	.LVL126:
 1059 0050 8046     		mov	r8, r0
 1060 0052 3868     		ldr	r0, [r7]
 1061 0054 FFF7FEFF 		bl	__aeabi_i2f
 1062              	.LVL127:
 1063 0058 0746     		mov	r7, r0
 1064 005a 3068     		ldr	r0, [r6]
 1065 005c FFF7FEFF 		bl	__aeabi_i2f
 1066              	.LVL128:
 1067 0060 0446     		mov	r4, r0
 1068 0062 2868     		ldr	r0, [r5]
 1069 0064 FFF7FEFF 		bl	__aeabi_i2f
 1070              	.LVL129:
 1071 0068 4346     		mov	r3, r8
 1072 006a 3A46     		mov	r2, r7
 1073 006c 2146     		mov	r1, r4
 1074 006e FFF7FEFF 		bl	motorDutyCycleUpdate
 1075              	.LVL130:
 1076 0072 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1077              	.L57:
 1078 0076 00BF     		.align	2
 1079              	.L56:
 1080 0078 00000000 		.word	motor1Enable
 1081 007c 00000000 		.word	motor2Enable
 1082 0080 00000000 		.word	drivingForwardFlag
 1083 0084 00000000 		.word	motor1EncoderCounts
 1084 0088 00000000 		.word	motor2EncoderCounts
 1085 008c 00000000 		.word	M1_FD
 1086 0090 00000000 		.word	M1_BD
 1087 0094 00000000 		.word	M2_FD
 1088 0098 00000000 		.word	M2_BD
 1089              		.cfi_endproc
 1090              	.LFE71:
 1091              		.size	moveForwardIndefinitely, .-moveForwardIndefinitely
 1092              		.section	.text.moveBackward,"ax",%progbits
 1093              		.align	2
 1094              		.global	moveBackward
 1095              		.thumb
 1096              		.thumb_func
 1097              		.type	moveBackward, %function
 1098              	moveBackward:
 1099              	.LFB72:
 266:dcmotor.c     ****     //The below line just traps execution here until the motion is completed
 267:dcmotor.c     **** }
 268:dcmotor.c     **** //Takes a distance to move in cm and moves. Blocking (sadly)
 269:dcmotor.c     **** void moveBackward(float amount){
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccrHJ3zm.s 			page 25


 1100              		.loc 1 269 0
 1101              		.cfi_startproc
 1102              		@ args = 0, pretend = 0, frame = 0
 1103              		@ frame_needed = 0, uses_anonymous_args = 0
 1104              	.LVL131:
 1105 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1106              		.cfi_def_cfa_offset 24
 1107              		.cfi_offset 4, -24
 1108              		.cfi_offset 5, -20
 1109              		.cfi_offset 6, -16
 1110              		.cfi_offset 7, -12
 1111              		.cfi_offset 8, -8
 1112              		.cfi_offset 14, -4
 270:dcmotor.c     ****     int counts = amount/CM_PER_COUNT;
 1113              		.loc 1 270 0
 1114 0004 FFF7FEFF 		bl	__aeabi_f2d
 1115              	.LVL132:
 1116 0008 23A3     		adr	r3, .L62
 1117 000a D3E90023 		ldrd	r2, [r3]
 1118 000e FFF7FEFF 		bl	__aeabi_ddiv
 1119              	.LVL133:
 1120 0012 FFF7FEFF 		bl	__aeabi_d2iz
 1121              	.LVL134:
 271:dcmotor.c     ****     motor1Enable = TRUE;
 1122              		.loc 1 271 0
 1123 0016 0123     		movs	r3, #1
 1124 0018 214A     		ldr	r2, .L62+8
 1125 001a 1380     		strh	r3, [r2]	@ movhi
 272:dcmotor.c     ****     motor2Enable = TRUE;
 1126              		.loc 1 272 0
 1127 001c 214A     		ldr	r2, .L62+12
 1128 001e 1380     		strh	r3, [r2]	@ movhi
 273:dcmotor.c     ****     drivingBackwardFlag = TRUE;
 1129              		.loc 1 273 0
 1130 0020 214A     		ldr	r2, .L62+16
 1131 0022 1360     		str	r3, [r2]
 274:dcmotor.c     ****     motor1EncoderCounts = 0;
 1132              		.loc 1 274 0
 1133 0024 0024     		movs	r4, #0
 1134 0026 214B     		ldr	r3, .L62+20
 1135 0028 1C60     		str	r4, [r3]
 275:dcmotor.c     ****     motor2EncoderCounts = 0;
 1136              		.loc 1 275 0
 1137 002a 214B     		ldr	r3, .L62+24
 1138 002c 1C60     		str	r4, [r3]
 276:dcmotor.c     ****     counterInitialise(counts,counts); //Sets up counters to interrupt at right time
 1139              		.loc 1 276 0
 1140 002e 0146     		mov	r1, r0
 1141 0030 FFF7FEFF 		bl	counterInitialise
 1142              	.LVL135:
 277:dcmotor.c     ****     M1_FD = 0;
 1143              		.loc 1 277 0
 1144 0034 1F4D     		ldr	r5, .L62+28
 1145 0036 2C60     		str	r4, [r5]
 278:dcmotor.c     ****     M1_BD = DCMOTOR_IDEAL_DUTY_CYCLE;
 1146              		.loc 1 278 0
 1147 0038 1F4E     		ldr	r6, .L62+32
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccrHJ3zm.s 			page 26


 1148 003a 5023     		movs	r3, #80
 1149 003c 3360     		str	r3, [r6]
 279:dcmotor.c     ****     M2_FD =  0;
 1150              		.loc 1 279 0
 1151 003e 1F4F     		ldr	r7, .L62+36
 1152 0040 3C60     		str	r4, [r7]
 280:dcmotor.c     ****     M2_BD = DCMOTOR_IDEAL_DUTY_CYCLE;
 1153              		.loc 1 280 0
 1154 0042 1F4C     		ldr	r4, .L62+40
 1155 0044 2360     		str	r3, [r4]
 281:dcmotor.c     ****     Motor_1_Encoder_Counts_Start();
 1156              		.loc 1 281 0
 1157 0046 FFF7FEFF 		bl	Motor_1_Encoder_Counts_Start
 1158              	.LVL136:
 282:dcmotor.c     ****     Motor_2_Encoder_Counts_Start();
 1159              		.loc 1 282 0
 1160 004a FFF7FEFF 		bl	Motor_2_Encoder_Counts_Start
 1161              	.LVL137:
 283:dcmotor.c     ****     Drift_Check_Timer_Start();
 1162              		.loc 1 283 0
 1163 004e FFF7FEFF 		bl	Drift_Check_Timer_Start
 1164              	.LVL138:
 284:dcmotor.c     ****     motorDutyCycleUpdate(M1_FD,M1_BD,M2_FD,M2_BD);//This gets the motors going
 1165              		.loc 1 284 0
 1166 0052 2068     		ldr	r0, [r4]
 1167 0054 FFF7FEFF 		bl	__aeabi_i2f
 1168              	.LVL139:
 1169 0058 8046     		mov	r8, r0
 1170 005a 3868     		ldr	r0, [r7]
 1171 005c FFF7FEFF 		bl	__aeabi_i2f
 1172              	.LVL140:
 1173 0060 0746     		mov	r7, r0
 1174 0062 3068     		ldr	r0, [r6]
 1175 0064 FFF7FEFF 		bl	__aeabi_i2f
 1176              	.LVL141:
 1177 0068 0446     		mov	r4, r0
 1178 006a 2868     		ldr	r0, [r5]
 1179 006c FFF7FEFF 		bl	__aeabi_i2f
 1180              	.LVL142:
 1181 0070 4346     		mov	r3, r8
 1182 0072 3A46     		mov	r2, r7
 1183 0074 2146     		mov	r1, r4
 1184 0076 FFF7FEFF 		bl	motorDutyCycleUpdate
 1185              	.LVL143:
 1186              	.L59:
 285:dcmotor.c     ****     //The below line just traps execution here until the motion is completed
 286:dcmotor.c     ****     while ((motor1Enable == TRUE)||(motor2Enable == TRUE)){
 1187              		.loc 1 286 0 discriminator 3
 1188 007a 094B     		ldr	r3, .L62+8
 1189 007c B3F90030 		ldrsh	r3, [r3]
 1190 0080 012B     		cmp	r3, #1
 1191 0082 FAD0     		beq	.L59
 1192              		.loc 1 286 0 is_stmt 0 discriminator 2
 1193 0084 074B     		ldr	r3, .L62+12
 1194 0086 B3F90030 		ldrsh	r3, [r3]
 1195 008a 012B     		cmp	r3, #1
 1196 008c F5D0     		beq	.L59
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccrHJ3zm.s 			page 27


 287:dcmotor.c     ****     
 288:dcmotor.c     ****     }
 289:dcmotor.c     **** }
 1197              		.loc 1 289 0 is_stmt 1
 1198 008e BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1199              	.L63:
 1200 0092 00BFAFF3 		.align	3
 1200      0080
 1201              	.L62:
 1202 0098 12A5BDC1 		.word	-1044536046
 1203 009c 1726933F 		.word	1066608151
 1204 00a0 00000000 		.word	motor1Enable
 1205 00a4 00000000 		.word	motor2Enable
 1206 00a8 00000000 		.word	drivingBackwardFlag
 1207 00ac 00000000 		.word	motor1EncoderCounts
 1208 00b0 00000000 		.word	motor2EncoderCounts
 1209 00b4 00000000 		.word	M1_FD
 1210 00b8 00000000 		.word	M1_BD
 1211 00bc 00000000 		.word	M2_FD
 1212 00c0 00000000 		.word	M2_BD
 1213              		.cfi_endproc
 1214              	.LFE72:
 1215              		.size	moveBackward, .-moveBackward
 1216              		.section	.text.moveBackwardIndefinitely,"ax",%progbits
 1217              		.align	2
 1218              		.global	moveBackwardIndefinitely
 1219              		.thumb
 1220              		.thumb_func
 1221              		.type	moveBackwardIndefinitely, %function
 1222              	moveBackwardIndefinitely:
 1223              	.LFB73:
 290:dcmotor.c     **** 
 291:dcmotor.c     **** //Allows the robot to move backward indefinitely until interrupted out by ultrasonics
 292:dcmotor.c     **** void moveBackwardIndefinitely(void){
 1224              		.loc 1 292 0
 1225              		.cfi_startproc
 1226              		@ args = 0, pretend = 0, frame = 0
 1227              		@ frame_needed = 0, uses_anonymous_args = 0
 1228 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1229              		.cfi_def_cfa_offset 24
 1230              		.cfi_offset 4, -24
 1231              		.cfi_offset 5, -20
 1232              		.cfi_offset 6, -16
 1233              		.cfi_offset 7, -12
 1234              		.cfi_offset 8, -8
 1235              		.cfi_offset 14, -4
 1236              	.LVL144:
 293:dcmotor.c     ****     int counts = ENCODER_COUNTS_MAX;
 294:dcmotor.c     ****     motor1Enable = TRUE;
 1237              		.loc 1 294 0
 1238 0004 0123     		movs	r3, #1
 1239 0006 1A4A     		ldr	r2, .L66
 1240 0008 1380     		strh	r3, [r2]	@ movhi
 295:dcmotor.c     ****     motor2Enable = TRUE;
 1241              		.loc 1 295 0
 1242 000a 1A4A     		ldr	r2, .L66+4
 1243 000c 1380     		strh	r3, [r2]	@ movhi
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccrHJ3zm.s 			page 28


 296:dcmotor.c     ****     drivingBackwardFlag = TRUE;
 1244              		.loc 1 296 0
 1245 000e 1A4A     		ldr	r2, .L66+8
 1246 0010 1360     		str	r3, [r2]
 297:dcmotor.c     ****     motor1EncoderCounts = 0;
 1247              		.loc 1 297 0
 1248 0012 0024     		movs	r4, #0
 1249 0014 194B     		ldr	r3, .L66+12
 1250 0016 1C60     		str	r4, [r3]
 298:dcmotor.c     ****     motor2EncoderCounts = 0;
 1251              		.loc 1 298 0
 1252 0018 194B     		ldr	r3, .L66+16
 1253 001a 1C60     		str	r4, [r3]
 299:dcmotor.c     ****     counterInitialise(counts,counts); //Sets up counters to interrupt at right time
 1254              		.loc 1 299 0
 1255 001c 4FF6DC71 		movw	r1, #65500
 1256 0020 0846     		mov	r0, r1
 1257 0022 FFF7FEFF 		bl	counterInitialise
 1258              	.LVL145:
 300:dcmotor.c     ****     M1_FD = 0;
 1259              		.loc 1 300 0
 1260 0026 174D     		ldr	r5, .L66+20
 1261 0028 2C60     		str	r4, [r5]
 301:dcmotor.c     ****     M1_BD = DCMOTOR_IDEAL_DUTY_CYCLE;
 1262              		.loc 1 301 0
 1263 002a 174E     		ldr	r6, .L66+24
 1264 002c 5023     		movs	r3, #80
 1265 002e 3360     		str	r3, [r6]
 302:dcmotor.c     ****     M2_FD =  0;
 1266              		.loc 1 302 0
 1267 0030 164F     		ldr	r7, .L66+28
 1268 0032 3C60     		str	r4, [r7]
 303:dcmotor.c     ****     M2_BD = DCMOTOR_IDEAL_DUTY_CYCLE;
 1269              		.loc 1 303 0
 1270 0034 164C     		ldr	r4, .L66+32
 1271 0036 2360     		str	r3, [r4]
 304:dcmotor.c     ****     Motor_1_Encoder_Counts_Start();
 1272              		.loc 1 304 0
 1273 0038 FFF7FEFF 		bl	Motor_1_Encoder_Counts_Start
 1274              	.LVL146:
 305:dcmotor.c     ****     Motor_2_Encoder_Counts_Start();
 1275              		.loc 1 305 0
 1276 003c FFF7FEFF 		bl	Motor_2_Encoder_Counts_Start
 1277              	.LVL147:
 306:dcmotor.c     ****     Drift_Check_Timer_Start();
 1278              		.loc 1 306 0
 1279 0040 FFF7FEFF 		bl	Drift_Check_Timer_Start
 1280              	.LVL148:
 307:dcmotor.c     ****     motorDutyCycleUpdate(M1_FD,M1_BD,M2_FD,M2_BD);//This gets the motors going
 1281              		.loc 1 307 0
 1282 0044 2068     		ldr	r0, [r4]
 1283 0046 FFF7FEFF 		bl	__aeabi_i2f
 1284              	.LVL149:
 1285 004a 8046     		mov	r8, r0
 1286 004c 3868     		ldr	r0, [r7]
 1287 004e FFF7FEFF 		bl	__aeabi_i2f
 1288              	.LVL150:
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccrHJ3zm.s 			page 29


 1289 0052 0746     		mov	r7, r0
 1290 0054 3068     		ldr	r0, [r6]
 1291 0056 FFF7FEFF 		bl	__aeabi_i2f
 1292              	.LVL151:
 1293 005a 0446     		mov	r4, r0
 1294 005c 2868     		ldr	r0, [r5]
 1295 005e FFF7FEFF 		bl	__aeabi_i2f
 1296              	.LVL152:
 1297 0062 4346     		mov	r3, r8
 1298 0064 3A46     		mov	r2, r7
 1299 0066 2146     		mov	r1, r4
 1300 0068 FFF7FEFF 		bl	motorDutyCycleUpdate
 1301              	.LVL153:
 1302 006c BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1303              	.L67:
 1304              		.align	2
 1305              	.L66:
 1306 0070 00000000 		.word	motor1Enable
 1307 0074 00000000 		.word	motor2Enable
 1308 0078 00000000 		.word	drivingBackwardFlag
 1309 007c 00000000 		.word	motor1EncoderCounts
 1310 0080 00000000 		.word	motor2EncoderCounts
 1311 0084 00000000 		.word	M1_FD
 1312 0088 00000000 		.word	M1_BD
 1313 008c 00000000 		.word	M2_FD
 1314 0090 00000000 		.word	M2_BD
 1315              		.cfi_endproc
 1316              	.LFE73:
 1317              		.size	moveBackwardIndefinitely, .-moveBackwardIndefinitely
 1318              		.section	.text.turnLeft,"ax",%progbits
 1319              		.align	2
 1320              		.global	turnLeft
 1321              		.thumb
 1322              		.thumb_func
 1323              		.type	turnLeft, %function
 1324              	turnLeft:
 1325              	.LFB74:
 308:dcmotor.c     **** }
 309:dcmotor.c     **** 
 310:dcmotor.c     **** //Takes an angle to turn in degrees and turns left that much
 311:dcmotor.c     **** void turnLeft(float amount){
 1326              		.loc 1 311 0
 1327              		.cfi_startproc
 1328              		@ args = 0, pretend = 0, frame = 0
 1329              		@ frame_needed = 0, uses_anonymous_args = 0
 1330              	.LVL154:
 1331 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1332              		.cfi_def_cfa_offset 24
 1333              		.cfi_offset 4, -24
 1334              		.cfi_offset 5, -20
 1335              		.cfi_offset 6, -16
 1336              		.cfi_offset 7, -12
 1337              		.cfi_offset 8, -8
 1338              		.cfi_offset 14, -4
 312:dcmotor.c     ****     //We need to make sure that the timers are disabled when we are doing turning motions
 313:dcmotor.c     ****     //Otherwise they will try and correct the turning
 314:dcmotor.c     ****     int counts = round(amount/DEGREES_PER_COUNT);
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccrHJ3zm.s 			page 30


 1339              		.loc 1 314 0
 1340 0004 FFF7FEFF 		bl	__aeabi_f2d
 1341              	.LVL155:
 1342 0008 25A3     		adr	r3, .L72
 1343 000a D3E90023 		ldrd	r2, [r3]
 1344 000e FFF7FEFF 		bl	__aeabi_ddiv
 1345              	.LVL156:
 1346 0012 FFF7FEFF 		bl	round
 1347              	.LVL157:
 1348 0016 FFF7FEFF 		bl	__aeabi_d2iz
 1349              	.LVL158:
 315:dcmotor.c     ****     motor1Enable = TRUE;
 1350              		.loc 1 315 0
 1351 001a 0123     		movs	r3, #1
 1352 001c 224A     		ldr	r2, .L72+8
 1353 001e 1380     		strh	r3, [r2]	@ movhi
 316:dcmotor.c     ****     motor2Enable = TRUE;
 1354              		.loc 1 316 0
 1355 0020 224A     		ldr	r2, .L72+12
 1356 0022 1380     		strh	r3, [r2]	@ movhi
 317:dcmotor.c     ****     turningLeftFlag = TRUE;
 1357              		.loc 1 317 0
 1358 0024 224A     		ldr	r2, .L72+16
 1359 0026 1360     		str	r3, [r2]
 318:dcmotor.c     ****     motor1EncoderCounts = 0;
 1360              		.loc 1 318 0
 1361 0028 0024     		movs	r4, #0
 1362 002a 224B     		ldr	r3, .L72+20
 1363 002c 1C60     		str	r4, [r3]
 319:dcmotor.c     ****     motor2EncoderCounts = 0;
 1364              		.loc 1 319 0
 1365 002e 224B     		ldr	r3, .L72+24
 1366 0030 1C60     		str	r4, [r3]
 320:dcmotor.c     ****     counterInitialise(counts,counts); //Sets up counters to interrupt at right time
 1367              		.loc 1 320 0
 1368 0032 0146     		mov	r1, r0
 1369 0034 FFF7FEFF 		bl	counterInitialise
 1370              	.LVL159:
 321:dcmotor.c     ****     M1_FD = 0;
 1371              		.loc 1 321 0
 1372 0038 204D     		ldr	r5, .L72+28
 1373 003a 2C60     		str	r4, [r5]
 322:dcmotor.c     ****     M1_BD = DCMOTOR_IDEAL_DUTY_CYCLE;
 1374              		.loc 1 322 0
 1375 003c 204E     		ldr	r6, .L72+32
 1376 003e 5023     		movs	r3, #80
 1377 0040 3360     		str	r3, [r6]
 323:dcmotor.c     ****     M2_FD = DCMOTOR_IDEAL_DUTY_CYCLE;
 1378              		.loc 1 323 0
 1379 0042 204F     		ldr	r7, .L72+36
 1380 0044 3B60     		str	r3, [r7]
 324:dcmotor.c     ****     M2_BD = 0;
 1381              		.loc 1 324 0
 1382 0046 DFF88080 		ldr	r8, .L72+40
 1383 004a C8F80040 		str	r4, [r8]
 325:dcmotor.c     ****     Motor_1_Encoder_Counts_Start();
 1384              		.loc 1 325 0
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccrHJ3zm.s 			page 31


 1385 004e FFF7FEFF 		bl	Motor_1_Encoder_Counts_Start
 1386              	.LVL160:
 326:dcmotor.c     ****     Motor_2_Encoder_Counts_Start();
 1387              		.loc 1 326 0
 1388 0052 FFF7FEFF 		bl	Motor_2_Encoder_Counts_Start
 1389              	.LVL161:
 327:dcmotor.c     ****     Drift_Check_Timer_Start();
 1390              		.loc 1 327 0
 1391 0056 FFF7FEFF 		bl	Drift_Check_Timer_Start
 1392              	.LVL162:
 328:dcmotor.c     ****     motorDutyCycleUpdate(M1_FD,M1_BD,M2_FD,M2_BD);//This gets the motors going
 1393              		.loc 1 328 0
 1394 005a D8F80000 		ldr	r0, [r8]
 1395 005e FFF7FEFF 		bl	__aeabi_i2f
 1396              	.LVL163:
 1397 0062 8046     		mov	r8, r0
 1398 0064 3868     		ldr	r0, [r7]
 1399 0066 FFF7FEFF 		bl	__aeabi_i2f
 1400              	.LVL164:
 1401 006a 0746     		mov	r7, r0
 1402 006c 3068     		ldr	r0, [r6]
 1403 006e FFF7FEFF 		bl	__aeabi_i2f
 1404              	.LVL165:
 1405 0072 0446     		mov	r4, r0
 1406 0074 2868     		ldr	r0, [r5]
 1407 0076 FFF7FEFF 		bl	__aeabi_i2f
 1408              	.LVL166:
 1409 007a 4346     		mov	r3, r8
 1410 007c 3A46     		mov	r2, r7
 1411 007e 2146     		mov	r1, r4
 1412 0080 FFF7FEFF 		bl	motorDutyCycleUpdate
 1413              	.LVL167:
 1414              	.L69:
 329:dcmotor.c     ****     //The below line just traps execution here until the motion is completed
 330:dcmotor.c     ****     while ((motor1Enable == TRUE)||(motor2Enable == TRUE)){
 1415              		.loc 1 330 0 discriminator 3
 1416 0084 084B     		ldr	r3, .L72+8
 1417 0086 B3F90030 		ldrsh	r3, [r3]
 1418 008a 012B     		cmp	r3, #1
 1419 008c FAD0     		beq	.L69
 1420              		.loc 1 330 0 is_stmt 0 discriminator 2
 1421 008e 074B     		ldr	r3, .L72+12
 1422 0090 B3F90030 		ldrsh	r3, [r3]
 1423 0094 012B     		cmp	r3, #1
 1424 0096 F5D0     		beq	.L69
 331:dcmotor.c     ****     
 332:dcmotor.c     ****     }
 333:dcmotor.c     **** }
 1425              		.loc 1 333 0 is_stmt 1
 1426 0098 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1427              	.L73:
 1428 009c AFF30080 		.align	3
 1429              	.L72:
 1430 00a0 E17A14AE 		.word	-1374389535
 1431 00a4 47E1BA3F 		.word	1069211975
 1432 00a8 00000000 		.word	motor1Enable
 1433 00ac 00000000 		.word	motor2Enable
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccrHJ3zm.s 			page 32


 1434 00b0 00000000 		.word	turningLeftFlag
 1435 00b4 00000000 		.word	motor1EncoderCounts
 1436 00b8 00000000 		.word	motor2EncoderCounts
 1437 00bc 00000000 		.word	M1_FD
 1438 00c0 00000000 		.word	M1_BD
 1439 00c4 00000000 		.word	M2_FD
 1440 00c8 00000000 		.word	M2_BD
 1441              		.cfi_endproc
 1442              	.LFE74:
 1443              		.size	turnLeft, .-turnLeft
 1444              		.section	.text.turnRight,"ax",%progbits
 1445              		.align	2
 1446              		.global	turnRight
 1447              		.thumb
 1448              		.thumb_func
 1449              		.type	turnRight, %function
 1450              	turnRight:
 1451              	.LFB75:
 334:dcmotor.c     **** 
 335:dcmotor.c     **** void turnRight(float amount){
 1452              		.loc 1 335 0
 1453              		.cfi_startproc
 1454              		@ args = 0, pretend = 0, frame = 0
 1455              		@ frame_needed = 0, uses_anonymous_args = 0
 1456              	.LVL168:
 1457 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1458              		.cfi_def_cfa_offset 24
 1459              		.cfi_offset 4, -24
 1460              		.cfi_offset 5, -20
 1461              		.cfi_offset 6, -16
 1462              		.cfi_offset 7, -12
 1463              		.cfi_offset 8, -8
 1464              		.cfi_offset 14, -4
 336:dcmotor.c     ****     int counts = round(amount/DEGREES_PER_COUNT);
 1465              		.loc 1 336 0
 1466 0004 FFF7FEFF 		bl	__aeabi_f2d
 1467              	.LVL169:
 1468 0008 23A3     		adr	r3, .L78
 1469 000a D3E90023 		ldrd	r2, [r3]
 1470 000e FFF7FEFF 		bl	__aeabi_ddiv
 1471              	.LVL170:
 1472 0012 FFF7FEFF 		bl	round
 1473              	.LVL171:
 1474 0016 FFF7FEFF 		bl	__aeabi_d2iz
 1475              	.LVL172:
 337:dcmotor.c     ****     motor1Enable = TRUE;
 1476              		.loc 1 337 0
 1477 001a 0123     		movs	r3, #1
 1478 001c 204A     		ldr	r2, .L78+8
 1479 001e 1380     		strh	r3, [r2]	@ movhi
 338:dcmotor.c     ****     motor2Enable = TRUE;
 1480              		.loc 1 338 0
 1481 0020 204A     		ldr	r2, .L78+12
 1482 0022 1380     		strh	r3, [r2]	@ movhi
 339:dcmotor.c     ****     turningRightFlag = TRUE;
 1483              		.loc 1 339 0
 1484 0024 204A     		ldr	r2, .L78+16
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccrHJ3zm.s 			page 33


 1485 0026 1360     		str	r3, [r2]
 340:dcmotor.c     ****     motor1EncoderCounts = 0;
 1486              		.loc 1 340 0
 1487 0028 0024     		movs	r4, #0
 1488 002a 204B     		ldr	r3, .L78+20
 1489 002c 1C60     		str	r4, [r3]
 341:dcmotor.c     ****     motor2EncoderCounts = 0;
 1490              		.loc 1 341 0
 1491 002e 204B     		ldr	r3, .L78+24
 1492 0030 1C60     		str	r4, [r3]
 342:dcmotor.c     ****     counterInitialise(counts,counts); //Sets up counters to interrupt at right time
 1493              		.loc 1 342 0
 1494 0032 0146     		mov	r1, r0
 1495 0034 FFF7FEFF 		bl	counterInitialise
 1496              	.LVL173:
 343:dcmotor.c     ****     M1_FD = DCMOTOR_IDEAL_DUTY_CYCLE;
 1497              		.loc 1 343 0
 1498 0038 1E4D     		ldr	r5, .L78+28
 1499 003a 5023     		movs	r3, #80
 1500 003c 2B60     		str	r3, [r5]
 344:dcmotor.c     ****     M1_BD = 0;
 1501              		.loc 1 344 0
 1502 003e 1E4E     		ldr	r6, .L78+32
 1503 0040 3460     		str	r4, [r6]
 345:dcmotor.c     ****     M2_FD = 0;
 1504              		.loc 1 345 0
 1505 0042 1E4F     		ldr	r7, .L78+36
 1506 0044 3C60     		str	r4, [r7]
 346:dcmotor.c     ****     M2_BD = DCMOTOR_IDEAL_DUTY_CYCLE;
 1507              		.loc 1 346 0
 1508 0046 1E4C     		ldr	r4, .L78+40
 1509 0048 2360     		str	r3, [r4]
 347:dcmotor.c     ****     Motor_1_Encoder_Counts_Start();
 1510              		.loc 1 347 0
 1511 004a FFF7FEFF 		bl	Motor_1_Encoder_Counts_Start
 1512              	.LVL174:
 348:dcmotor.c     ****     Motor_2_Encoder_Counts_Start();
 1513              		.loc 1 348 0
 1514 004e FFF7FEFF 		bl	Motor_2_Encoder_Counts_Start
 1515              	.LVL175:
 349:dcmotor.c     ****     Drift_Check_Timer_Start();
 1516              		.loc 1 349 0
 1517 0052 FFF7FEFF 		bl	Drift_Check_Timer_Start
 1518              	.LVL176:
 350:dcmotor.c     ****     motorDutyCycleUpdate(M1_FD,M1_BD,M2_FD,M2_BD);//This gets the motors going
 1519              		.loc 1 350 0
 1520 0056 2068     		ldr	r0, [r4]
 1521 0058 FFF7FEFF 		bl	__aeabi_i2f
 1522              	.LVL177:
 1523 005c 8046     		mov	r8, r0
 1524 005e 3868     		ldr	r0, [r7]
 1525 0060 FFF7FEFF 		bl	__aeabi_i2f
 1526              	.LVL178:
 1527 0064 0746     		mov	r7, r0
 1528 0066 3068     		ldr	r0, [r6]
 1529 0068 FFF7FEFF 		bl	__aeabi_i2f
 1530              	.LVL179:
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccrHJ3zm.s 			page 34


 1531 006c 0446     		mov	r4, r0
 1532 006e 2868     		ldr	r0, [r5]
 1533 0070 FFF7FEFF 		bl	__aeabi_i2f
 1534              	.LVL180:
 1535 0074 4346     		mov	r3, r8
 1536 0076 3A46     		mov	r2, r7
 1537 0078 2146     		mov	r1, r4
 1538 007a FFF7FEFF 		bl	motorDutyCycleUpdate
 1539              	.LVL181:
 1540              	.L75:
 351:dcmotor.c     ****     //The below line just traps execution here until the motion is completed
 352:dcmotor.c     ****     while ((motor1Enable == TRUE)||(motor2Enable == TRUE)){
 1541              		.loc 1 352 0 discriminator 3
 1542 007e 084B     		ldr	r3, .L78+8
 1543 0080 B3F90030 		ldrsh	r3, [r3]
 1544 0084 012B     		cmp	r3, #1
 1545 0086 FAD0     		beq	.L75
 1546              		.loc 1 352 0 is_stmt 0 discriminator 2
 1547 0088 064B     		ldr	r3, .L78+12
 1548 008a B3F90030 		ldrsh	r3, [r3]
 1549 008e 012B     		cmp	r3, #1
 1550 0090 F5D0     		beq	.L75
 353:dcmotor.c     ****     
 354:dcmotor.c     ****     }
 355:dcmotor.c     **** }
 1551              		.loc 1 355 0 is_stmt 1
 1552 0092 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1553              	.L79:
 1554 0096 00BF     		.align	3
 1555              	.L78:
 1556 0098 E17A14AE 		.word	-1374389535
 1557 009c 47E1BA3F 		.word	1069211975
 1558 00a0 00000000 		.word	motor1Enable
 1559 00a4 00000000 		.word	motor2Enable
 1560 00a8 00000000 		.word	turningRightFlag
 1561 00ac 00000000 		.word	motor1EncoderCounts
 1562 00b0 00000000 		.word	motor2EncoderCounts
 1563 00b4 00000000 		.word	M1_FD
 1564 00b8 00000000 		.word	M1_BD
 1565 00bc 00000000 		.word	M2_FD
 1566 00c0 00000000 		.word	M2_BD
 1567              		.cfi_endproc
 1568              	.LFE75:
 1569              		.size	turnRight, .-turnRight
 1570              		.section	.text.displaceLeft,"ax",%progbits
 1571              		.align	2
 1572              		.global	displaceLeft
 1573              		.thumb
 1574              		.thumb_func
 1575              		.type	displaceLeft, %function
 1576              	displaceLeft:
 1577              	.LFB76:
 356:dcmotor.c     **** 
 357:dcmotor.c     **** //The displaceLeft and displaceRight functions should let us slide left and right. 
 358:dcmotor.c     **** //We should ensure that these are only called when we are not close enough to the walls
 359:dcmotor.c     **** //to create issues otherwise we could get stuck in these functions permanently
 360:dcmotor.c     **** void displaceLeft(int amount,int degrees){
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccrHJ3zm.s 			page 35


 1578              		.loc 1 360 0
 1579              		.cfi_startproc
 1580              		@ args = 0, pretend = 0, frame = 0
 1581              		@ frame_needed = 0, uses_anonymous_args = 0
 1582              	.LVL182:
 1583 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1584              		.cfi_def_cfa_offset 24
 1585              		.cfi_offset 4, -24
 1586              		.cfi_offset 5, -20
 1587              		.cfi_offset 6, -16
 1588              		.cfi_offset 7, -12
 1589              		.cfi_offset 8, -8
 1590              		.cfi_offset 14, -4
 1591 0004 0446     		mov	r4, r0
 1592 0006 0E46     		mov	r6, r1
 361:dcmotor.c     ****     turnRight(degrees);
 1593              		.loc 1 361 0
 1594 0008 0846     		mov	r0, r1
 1595              	.LVL183:
 1596 000a FFF7FEFF 		bl	__aeabi_i2f
 1597              	.LVL184:
 1598 000e 8046     		mov	r8, r0
 1599 0010 FFF7FEFF 		bl	turnRight
 1600              	.LVL185:
 362:dcmotor.c     ****     float temp = amount/sin((M_PI/180)*degrees);
 1601              		.loc 1 362 0
 1602 0014 2046     		mov	r0, r4
 1603 0016 FFF7FEFF 		bl	__aeabi_i2d
 1604              	.LVL186:
 1605 001a 0446     		mov	r4, r0
 1606              	.LVL187:
 1607 001c 0D46     		mov	r5, r1
 1608 001e 3046     		mov	r0, r6
 1609 0020 FFF7FEFF 		bl	__aeabi_i2d
 1610              	.LVL188:
 1611 0024 12A3     		adr	r3, .L82
 1612 0026 D3E90023 		ldrd	r2, [r3]
 1613 002a FFF7FEFF 		bl	__aeabi_dmul
 1614              	.LVL189:
 1615 002e 0646     		mov	r6, r0
 1616              	.LVL190:
 1617 0030 0F46     		mov	r7, r1
 1618 0032 FFF7FEFF 		bl	sin
 1619              	.LVL191:
 1620 0036 0246     		mov	r2, r0
 1621 0038 0B46     		mov	r3, r1
 1622 003a 2046     		mov	r0, r4
 1623 003c 2946     		mov	r1, r5
 1624 003e FFF7FEFF 		bl	__aeabi_ddiv
 1625              	.LVL192:
 363:dcmotor.c     ****     moveBackward(amount/sin((M_PI/180)*degrees));
 1626              		.loc 1 363 0
 1627 0042 FFF7FEFF 		bl	__aeabi_d2f
 1628              	.LVL193:
 1629 0046 FFF7FEFF 		bl	moveBackward
 1630              	.LVL194:
 364:dcmotor.c     ****     turnLeft(degrees);
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccrHJ3zm.s 			page 36


 1631              		.loc 1 364 0
 1632 004a 4046     		mov	r0, r8
 1633 004c FFF7FEFF 		bl	turnLeft
 1634              	.LVL195:
 365:dcmotor.c     ****     temp = amount/tan((M_PI/180)*degrees);
 1635              		.loc 1 365 0
 1636 0050 3046     		mov	r0, r6
 1637 0052 3946     		mov	r1, r7
 1638 0054 FFF7FEFF 		bl	tan
 1639              	.LVL196:
 1640 0058 0246     		mov	r2, r0
 1641 005a 0B46     		mov	r3, r1
 1642 005c 2046     		mov	r0, r4
 1643 005e 2946     		mov	r1, r5
 1644 0060 FFF7FEFF 		bl	__aeabi_ddiv
 1645              	.LVL197:
 366:dcmotor.c     ****     moveForward(amount/tan((M_PI/180)*degrees));
 1646              		.loc 1 366 0
 1647 0064 FFF7FEFF 		bl	__aeabi_d2f
 1648              	.LVL198:
 1649 0068 FFF7FEFF 		bl	moveForward
 1650              	.LVL199:
 1651 006c BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1652              	.L83:
 1653              		.align	3
 1654              	.L82:
 1655 0070 399D52A2 		.word	-1571644103
 1656 0074 46DF913F 		.word	1066524486
 1657              		.cfi_endproc
 1658              	.LFE76:
 1659              		.size	displaceLeft, .-displaceLeft
 1660              		.section	.text.displaceRight,"ax",%progbits
 1661              		.align	2
 1662              		.global	displaceRight
 1663              		.thumb
 1664              		.thumb_func
 1665              		.type	displaceRight, %function
 1666              	displaceRight:
 1667              	.LFB77:
 367:dcmotor.c     **** }
 368:dcmotor.c     **** 
 369:dcmotor.c     **** //The displaceLeft and displaceRight functions should let us slide left and right. 
 370:dcmotor.c     **** //We should ensure that these are only called when we are not close enough to the walls
 371:dcmotor.c     **** //to create issues otherwise we could get stuck in these functions permanently
 372:dcmotor.c     **** void displaceRight(int amount,int degrees){
 1668              		.loc 1 372 0
 1669              		.cfi_startproc
 1670              		@ args = 0, pretend = 0, frame = 0
 1671              		@ frame_needed = 0, uses_anonymous_args = 0
 1672              	.LVL200:
 1673 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1674              		.cfi_def_cfa_offset 24
 1675              		.cfi_offset 4, -24
 1676              		.cfi_offset 5, -20
 1677              		.cfi_offset 6, -16
 1678              		.cfi_offset 7, -12
 1679              		.cfi_offset 8, -8
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccrHJ3zm.s 			page 37


 1680              		.cfi_offset 14, -4
 1681 0004 0446     		mov	r4, r0
 1682 0006 0E46     		mov	r6, r1
 373:dcmotor.c     ****     turnLeft(degrees);
 1683              		.loc 1 373 0
 1684 0008 0846     		mov	r0, r1
 1685              	.LVL201:
 1686 000a FFF7FEFF 		bl	__aeabi_i2f
 1687              	.LVL202:
 1688 000e 8046     		mov	r8, r0
 1689 0010 FFF7FEFF 		bl	turnLeft
 1690              	.LVL203:
 374:dcmotor.c     ****     float temp = amount/sin((M_PI/180)*degrees);
 1691              		.loc 1 374 0
 1692 0014 2046     		mov	r0, r4
 1693 0016 FFF7FEFF 		bl	__aeabi_i2d
 1694              	.LVL204:
 1695 001a 0446     		mov	r4, r0
 1696              	.LVL205:
 1697 001c 0D46     		mov	r5, r1
 1698 001e 3046     		mov	r0, r6
 1699 0020 FFF7FEFF 		bl	__aeabi_i2d
 1700              	.LVL206:
 1701 0024 12A3     		adr	r3, .L86
 1702 0026 D3E90023 		ldrd	r2, [r3]
 1703 002a FFF7FEFF 		bl	__aeabi_dmul
 1704              	.LVL207:
 1705 002e 0646     		mov	r6, r0
 1706              	.LVL208:
 1707 0030 0F46     		mov	r7, r1
 1708 0032 FFF7FEFF 		bl	sin
 1709              	.LVL209:
 1710 0036 0246     		mov	r2, r0
 1711 0038 0B46     		mov	r3, r1
 1712 003a 2046     		mov	r0, r4
 1713 003c 2946     		mov	r1, r5
 1714 003e FFF7FEFF 		bl	__aeabi_ddiv
 1715              	.LVL210:
 375:dcmotor.c     ****     moveBackward(amount/sin((M_PI/180)*degrees));
 1716              		.loc 1 375 0
 1717 0042 FFF7FEFF 		bl	__aeabi_d2f
 1718              	.LVL211:
 1719 0046 FFF7FEFF 		bl	moveBackward
 1720              	.LVL212:
 376:dcmotor.c     ****     turnRight(degrees);
 1721              		.loc 1 376 0
 1722 004a 4046     		mov	r0, r8
 1723 004c FFF7FEFF 		bl	turnRight
 1724              	.LVL213:
 377:dcmotor.c     ****     temp = amount/tan((M_PI/180)*degrees);
 1725              		.loc 1 377 0
 1726 0050 3046     		mov	r0, r6
 1727 0052 3946     		mov	r1, r7
 1728 0054 FFF7FEFF 		bl	tan
 1729              	.LVL214:
 1730 0058 0246     		mov	r2, r0
 1731 005a 0B46     		mov	r3, r1
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccrHJ3zm.s 			page 38


 1732 005c 2046     		mov	r0, r4
 1733 005e 2946     		mov	r1, r5
 1734 0060 FFF7FEFF 		bl	__aeabi_ddiv
 1735              	.LVL215:
 378:dcmotor.c     ****     moveForward(amount/tan((M_PI/180)*degrees));
 1736              		.loc 1 378 0
 1737 0064 FFF7FEFF 		bl	__aeabi_d2f
 1738              	.LVL216:
 1739 0068 FFF7FEFF 		bl	moveForward
 1740              	.LVL217:
 1741 006c BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1742              	.L87:
 1743              		.align	3
 1744              	.L86:
 1745 0070 399D52A2 		.word	-1571644103
 1746 0074 46DF913F 		.word	1066524486
 1747              		.cfi_endproc
 1748              	.LFE77:
 1749              		.size	displaceRight, .-displaceRight
 1750              		.global	__aeabi_fcmplt
 1751              		.global	__aeabi_fsub
 1752              		.section	.text.nextMotion,"ax",%progbits
 1753              		.align	2
 1754              		.global	nextMotion
 1755              		.thumb
 1756              		.thumb_func
 1757              		.type	nextMotion, %function
 1758              	nextMotion:
 1759              	.LFB78:
 379:dcmotor.c     **** }
 380:dcmotor.c     **** 
 381:dcmotor.c     **** //Looks at the current position, desired position and the location of the block, 
 382:dcmotor.c     **** //and plans a route, executing the next motion in that route if the main program 
 383:dcmotor.c     **** //permits (via having the moveNow flag set to TRUE)
 384:dcmotor.c     **** void nextMotion(int * desiredPosition){
 1760              		.loc 1 384 0
 1761              		.cfi_startproc
 1762              		@ args = 0, pretend = 0, frame = 0
 1763              		@ frame_needed = 0, uses_anonymous_args = 0
 1764              	.LVL218:
 1765 0000 38B5     		push	{r3, r4, r5, lr}
 1766              		.cfi_def_cfa_offset 16
 1767              		.cfi_offset 3, -16
 1768              		.cfi_offset 4, -12
 1769              		.cfi_offset 5, -8
 1770              		.cfi_offset 14, -4
 1771 0002 0546     		mov	r5, r0
 385:dcmotor.c     ****     //Check that we have already acquired the block's location (by checking we aren't in 
 386:dcmotor.c     ****     //the scanning for block state)
 387:dcmotor.c     ****     //Check what motions are available to us from the flags
 388:dcmotor.c     ****     //Check what motions are available to us from our location compared to obstacle
 389:dcmotor.c     ****     if (block_location[0] < currentPosition[0] < block_location[1]){
 1772              		.loc 1 389 0
 1773 0004 154B     		ldr	r3, .L100
 1774 0006 1C68     		ldr	r4, [r3]	@ float
 1775 0008 2146     		mov	r1, r4
 1776 000a 154B     		ldr	r3, .L100+4
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccrHJ3zm.s 			page 39


 1777 000c 1868     		ldr	r0, [r3]	@ float
 1778              	.LVL219:
 1779 000e FFF7FEFF 		bl	__aeabi_fcmplt
 1780              	.LVL220:
 1781 0012 10B1     		cbz	r0, .L98
 1782 0014 4FF07E50 		mov	r0, #1065353216
 1783 0018 00E0     		b	.L89
 1784              	.L98:
 1785 001a 0020     		movs	r0, #0
 1786              	.L89:
 1787              		.loc 1 389 0 is_stmt 0 discriminator 4
 1788 001c 104B     		ldr	r3, .L100+4
 1789 001e 5968     		ldr	r1, [r3, #4]	@ float
 1790 0020 FFF7FEFF 		bl	__aeabi_fcmplt
 1791              	.LVL221:
 1792 0024 C0B1     		cbz	r0, .L88
 1793              	.LBB3:
 390:dcmotor.c     ****         float xToMove = desiredPosition[0] - currentPosition[0];
 1794              		.loc 1 390 0 is_stmt 1
 1795 0026 2868     		ldr	r0, [r5]
 1796 0028 FFF7FEFF 		bl	__aeabi_i2f
 1797              	.LVL222:
 1798 002c 2146     		mov	r1, r4
 1799 002e FFF7FEFF 		bl	__aeabi_fsub
 1800              	.LVL223:
 391:dcmotor.c     ****         if ((xToMove <0) && (moveLeftAllowed == TRUE)){
 1801              		.loc 1 391 0
 1802 0032 0021     		movs	r1, #0
 1803 0034 FFF7FEFF 		bl	__aeabi_fcmplt
 1804              	.LVL224:
 1805 0038 70B1     		cbz	r0, .L88
 1806              		.loc 1 391 0 is_stmt 0 discriminator 1
 1807 003a 0A4B     		ldr	r3, .L100+8
 1808 003c B3F90030 		ldrsh	r3, [r3]
 1809 0040 012B     		cmp	r3, #1
 1810 0042 09D1     		bne	.L88
 392:dcmotor.c     ****             if (currentOrientation != 180){
 1811              		.loc 1 392 0 is_stmt 1
 1812 0044 084B     		ldr	r3, .L100+12
 1813 0046 1868     		ldr	r0, [r3]
 1814 0048 B428     		cmp	r0, #180
 1815 004a 05D0     		beq	.L88
 393:dcmotor.c     ****                 turnLeft(180 - currentOrientation);
 1816              		.loc 1 393 0
 1817 004c C0F1B400 		rsb	r0, r0, #180
 1818 0050 FFF7FEFF 		bl	__aeabi_i2f
 1819              	.LVL225:
 1820 0054 FFF7FEFF 		bl	turnLeft
 1821              	.LVL226:
 1822              	.L88:
 1823 0058 38BD     		pop	{r3, r4, r5, pc}
 1824              	.LVL227:
 1825              	.L101:
 1826 005a 00BF     		.align	2
 1827              	.L100:
 1828 005c 00000000 		.word	currentPosition
 1829 0060 00000000 		.word	block_location
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccrHJ3zm.s 			page 40


 1830 0064 00000000 		.word	moveLeftAllowed
 1831 0068 00000000 		.word	currentOrientation
 1832              	.LBE3:
 1833              		.cfi_endproc
 1834              	.LFE78:
 1835              		.size	nextMotion, .-nextMotion
 1836              		.section	.text.stopMotor1AndUpdate,"ax",%progbits
 1837              		.align	2
 1838              		.global	stopMotor1AndUpdate
 1839              		.thumb
 1840              		.thumb_func
 1841              		.type	stopMotor1AndUpdate, %function
 1842              	stopMotor1AndUpdate:
 1843              	.LFB79:
 394:dcmotor.c     ****             }
 395:dcmotor.c     ****         }
 396:dcmotor.c     ****     }
 397:dcmotor.c     **** }
 398:dcmotor.c     **** 
 399:dcmotor.c     **** void stopMotor1AndUpdate(void){
 1844              		.loc 1 399 0
 1845              		.cfi_startproc
 1846              		@ args = 0, pretend = 0, frame = 0
 1847              		@ frame_needed = 0, uses_anonymous_args = 0
 1848 0000 10B5     		push	{r4, lr}
 1849              		.cfi_def_cfa_offset 8
 1850              		.cfi_offset 4, -8
 1851              		.cfi_offset 14, -4
 400:dcmotor.c     ****     Motor_1_driver_WriteCompare1(0);
 1852              		.loc 1 400 0
 1853 0002 0020     		movs	r0, #0
 1854 0004 FFF7FEFF 		bl	Motor_1_driver_WriteCompare1
 1855              	.LVL228:
 401:dcmotor.c     ****     Motor_1_driver_WriteCompare2(0);
 1856              		.loc 1 401 0
 1857 0008 0020     		movs	r0, #0
 1858 000a FFF7FEFF 		bl	Motor_1_driver_WriteCompare2
 1859              	.LVL229:
 402:dcmotor.c     ****     Motor_1_Encoder_Counts_Stop();
 1860              		.loc 1 402 0
 1861 000e FFF7FEFF 		bl	Motor_1_Encoder_Counts_Stop
 1862              	.LVL230:
 403:dcmotor.c     ****     M1_FD = 0;
 1863              		.loc 1 403 0
 1864 0012 0024     		movs	r4, #0
 1865 0014 064B     		ldr	r3, .L104
 1866 0016 1C60     		str	r4, [r3]
 404:dcmotor.c     ****     M1_BD = 0;
 1867              		.loc 1 404 0
 1868 0018 064B     		ldr	r3, .L104+4
 1869 001a 1C60     		str	r4, [r3]
 405:dcmotor.c     ****     UART_1_PutString("Counter 1 interrupt \n");
 1870              		.loc 1 405 0
 1871 001c 0648     		ldr	r0, .L104+8
 1872 001e FFF7FEFF 		bl	UART_1_PutString
 1873              	.LVL231:
 406:dcmotor.c     ****     motor1Enable = FALSE;
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccrHJ3zm.s 			page 41


 1874              		.loc 1 406 0
 1875 0022 064B     		ldr	r3, .L104+12
 1876 0024 1C80     		strh	r4, [r3]	@ movhi
 407:dcmotor.c     ****     stopMotion();
 1877              		.loc 1 407 0
 1878 0026 FFF7FEFF 		bl	stopMotion
 1879              	.LVL232:
 408:dcmotor.c     ****     Motor_1_Encoder_Counts_ReadStatusRegister(); //Clears the interrupt
 1880              		.loc 1 408 0
 1881 002a FFF7FEFF 		bl	Motor_1_Encoder_Counts_ReadStatusRegister
 1882              	.LVL233:
 1883 002e 10BD     		pop	{r4, pc}
 1884              	.L105:
 1885              		.align	2
 1886              	.L104:
 1887 0030 00000000 		.word	M1_FD
 1888 0034 00000000 		.word	M1_BD
 1889 0038 00000000 		.word	.LC0
 1890 003c 00000000 		.word	motor1Enable
 1891              		.cfi_endproc
 1892              	.LFE79:
 1893              		.size	stopMotor1AndUpdate, .-stopMotor1AndUpdate
 1894              		.section	.text.stopMotor2AndUpdate,"ax",%progbits
 1895              		.align	2
 1896              		.global	stopMotor2AndUpdate
 1897              		.thumb
 1898              		.thumb_func
 1899              		.type	stopMotor2AndUpdate, %function
 1900              	stopMotor2AndUpdate:
 1901              	.LFB80:
 409:dcmotor.c     **** }
 410:dcmotor.c     **** 
 411:dcmotor.c     **** void stopMotor2AndUpdate(void){
 1902              		.loc 1 411 0
 1903              		.cfi_startproc
 1904              		@ args = 0, pretend = 0, frame = 0
 1905              		@ frame_needed = 0, uses_anonymous_args = 0
 1906 0000 10B5     		push	{r4, lr}
 1907              		.cfi_def_cfa_offset 8
 1908              		.cfi_offset 4, -8
 1909              		.cfi_offset 14, -4
 412:dcmotor.c     ****     Motor_2_driver_WriteCompare1(0);
 1910              		.loc 1 412 0
 1911 0002 0020     		movs	r0, #0
 1912 0004 FFF7FEFF 		bl	Motor_2_driver_WriteCompare1
 1913              	.LVL234:
 413:dcmotor.c     ****     Motor_2_driver_WriteCompare2(0);
 1914              		.loc 1 413 0
 1915 0008 0020     		movs	r0, #0
 1916 000a FFF7FEFF 		bl	Motor_2_driver_WriteCompare2
 1917              	.LVL235:
 414:dcmotor.c     ****     Motor_2_Encoder_Counts_Stop();
 1918              		.loc 1 414 0
 1919 000e FFF7FEFF 		bl	Motor_2_Encoder_Counts_Stop
 1920              	.LVL236:
 415:dcmotor.c     ****     M2_FD = 0;
 1921              		.loc 1 415 0
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccrHJ3zm.s 			page 42


 1922 0012 0024     		movs	r4, #0
 1923 0014 064B     		ldr	r3, .L108
 1924 0016 1C60     		str	r4, [r3]
 416:dcmotor.c     ****     M2_BD = 0;
 1925              		.loc 1 416 0
 1926 0018 064B     		ldr	r3, .L108+4
 1927 001a 1C60     		str	r4, [r3]
 417:dcmotor.c     ****     UART_1_PutString("Counter 2 interrupt \n");
 1928              		.loc 1 417 0
 1929 001c 0648     		ldr	r0, .L108+8
 1930 001e FFF7FEFF 		bl	UART_1_PutString
 1931              	.LVL237:
 418:dcmotor.c     ****     motor2Enable = FALSE;   
 1932              		.loc 1 418 0
 1933 0022 064B     		ldr	r3, .L108+12
 1934 0024 1C80     		strh	r4, [r3]	@ movhi
 419:dcmotor.c     ****     stopMotion();
 1935              		.loc 1 419 0
 1936 0026 FFF7FEFF 		bl	stopMotion
 1937              	.LVL238:
 420:dcmotor.c     ****     Motor_2_Encoder_Counts_ReadStatusRegister(); //Clears the interrupt
 1938              		.loc 1 420 0
 1939 002a FFF7FEFF 		bl	Motor_2_Encoder_Counts_ReadStatusRegister
 1940              	.LVL239:
 1941 002e 10BD     		pop	{r4, pc}
 1942              	.L109:
 1943              		.align	2
 1944              	.L108:
 1945 0030 00000000 		.word	M2_FD
 1946 0034 00000000 		.word	M2_BD
 1947 0038 18000000 		.word	.LC1
 1948 003c 00000000 		.word	motor2Enable
 1949              		.cfi_endproc
 1950              	.LFE80:
 1951              		.size	stopMotor2AndUpdate, .-stopMotor2AndUpdate
 1952              		.comm	puckPileLocation,4,4
 1953              		.comm	block_edge_location,16,4
 1954              		.comm	sweeping,4,4
 1955              		.comm	puckRackOffsetsFromWest,20,4
 1956              		.comm	puckRackColours,20,4
 1957              		.comm	currentPuckRackScanningIndex,4,4
 1958              		.comm	driveStraightEnable,4,4
 1959              		.section	.rodata.str1.4,"aMS",%progbits,1
 1960              		.align	2
 1961              	.LC0:
 1962 0000 436F756E 		.ascii	"Counter 1 interrupt \012\000"
 1962      74657220 
 1962      3120696E 
 1962      74657272 
 1962      75707420 
 1963 0016 0000     		.space	2
 1964              	.LC1:
 1965 0018 436F756E 		.ascii	"Counter 2 interrupt \012\000"
 1965      74657220 
 1965      3220696E 
 1965      74657272 
 1965      75707420 
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccrHJ3zm.s 			page 43


 1966              		.text
 1967              	.Letext0:
 1968              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 1969              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 1970              		.file 4 "Generated_Source\\PSoC5/core_cm3.h"
 1971              		.file 5 "main.h"
 1972              		.file 6 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 1973              		.file 7 "Generated_Source\\PSoC5/Motor_1_Encoder_Counts.h"
 1974              		.file 8 "Generated_Source\\PSoC5/Motor_2_Encoder_Counts.h"
 1975              		.file 9 "Generated_Source\\PSoC5/Motor_1_driver.h"
 1976              		.file 10 "Generated_Source\\PSoC5/Motor_2_driver.h"
 1977              		.file 11 "Generated_Source\\PSoC5/Drift_Check_Timer.h"
 1978              		.file 12 "Generated_Source\\PSoC5/UART_1.h"
 1979              		.section	.debug_info,"",%progbits
 1980              	.Ldebug_info0:
 1981 0000 D30A0000 		.4byte	0xad3
 1982 0004 0400     		.2byte	0x4
 1983 0006 00000000 		.4byte	.Ldebug_abbrev0
 1984 000a 04       		.byte	0x4
 1985 000b 01       		.uleb128 0x1
 1986 000c F9050000 		.4byte	.LASF87
 1987 0010 0C       		.byte	0xc
 1988 0011 50030000 		.4byte	.LASF88
 1989 0015 6F050000 		.4byte	.LASF89
 1990 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1991 001d 00000000 		.4byte	0
 1992 0021 00000000 		.4byte	.Ldebug_line0
 1993 0025 02       		.uleb128 0x2
 1994 0026 04       		.byte	0x4
 1995 0027 04       		.byte	0x4
 1996 0028 C9010000 		.4byte	.LASF0
 1997 002c 02       		.uleb128 0x2
 1998 002d 08       		.byte	0x8
 1999 002e 04       		.byte	0x4
 2000 002f DD040000 		.4byte	.LASF1
 2001 0033 02       		.uleb128 0x2
 2002 0034 01       		.byte	0x1
 2003 0035 06       		.byte	0x6
 2004 0036 19030000 		.4byte	.LASF2
 2005 003a 02       		.uleb128 0x2
 2006 003b 01       		.byte	0x1
 2007 003c 08       		.byte	0x8
 2008 003d C5020000 		.4byte	.LASF3
 2009 0041 02       		.uleb128 0x2
 2010 0042 02       		.byte	0x2
 2011 0043 05       		.byte	0x5
 2012 0044 74000000 		.4byte	.LASF4
 2013 0048 02       		.uleb128 0x2
 2014 0049 02       		.byte	0x2
 2015 004a 07       		.byte	0x7
 2016 004b 9C030000 		.4byte	.LASF5
 2017 004f 03       		.uleb128 0x3
 2018 0050 55050000 		.4byte	.LASF11
 2019 0054 02       		.byte	0x2
 2020 0055 3F       		.byte	0x3f
 2021 0056 5A000000 		.4byte	0x5a
 2022 005a 02       		.uleb128 0x2
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccrHJ3zm.s 			page 44


 2023 005b 04       		.byte	0x4
 2024 005c 05       		.byte	0x5
 2025 005d 49020000 		.4byte	.LASF6
 2026 0061 02       		.uleb128 0x2
 2027 0062 04       		.byte	0x4
 2028 0063 07       		.byte	0x7
 2029 0064 8B040000 		.4byte	.LASF7
 2030 0068 02       		.uleb128 0x2
 2031 0069 08       		.byte	0x8
 2032 006a 05       		.byte	0x5
 2033 006b EC010000 		.4byte	.LASF8
 2034 006f 02       		.uleb128 0x2
 2035 0070 08       		.byte	0x8
 2036 0071 07       		.byte	0x7
 2037 0072 39030000 		.4byte	.LASF9
 2038 0076 04       		.uleb128 0x4
 2039 0077 04       		.byte	0x4
 2040 0078 05       		.byte	0x5
 2041 0079 696E7400 		.ascii	"int\000"
 2042 007d 02       		.uleb128 0x2
 2043 007e 04       		.byte	0x4
 2044 007f 07       		.byte	0x7
 2045 0080 5A030000 		.4byte	.LASF10
 2046 0084 03       		.uleb128 0x3
 2047 0085 D2030000 		.4byte	.LASF12
 2048 0089 03       		.byte	0x3
 2049 008a 2C       		.byte	0x2c
 2050 008b 4F000000 		.4byte	0x4f
 2051 008f 02       		.uleb128 0x2
 2052 0090 01       		.byte	0x1
 2053 0091 08       		.byte	0x8
 2054 0092 C7030000 		.4byte	.LASF13
 2055 0096 02       		.uleb128 0x2
 2056 0097 08       		.byte	0x8
 2057 0098 04       		.byte	0x4
 2058 0099 D3020000 		.4byte	.LASF14
 2059 009d 02       		.uleb128 0x2
 2060 009e 04       		.byte	0x4
 2061 009f 07       		.byte	0x7
 2062 00a0 E3050000 		.4byte	.LASF15
 2063 00a4 05       		.uleb128 0x5
 2064 00a5 AF030000 		.4byte	.LASF19
 2065 00a9 01       		.byte	0x1
 2066 00aa 3D       		.byte	0x3d
 2067 00ab 00000000 		.4byte	.LFB64
 2068 00af 5C010000 		.4byte	.LFE64-.LFB64
 2069 00b3 01       		.uleb128 0x1
 2070 00b4 9C       		.byte	0x9c
 2071 00b5 1A010000 		.4byte	0x11a
 2072 00b9 06       		.uleb128 0x6
 2073 00ba 8A030000 		.4byte	.LASF16
 2074 00be 01       		.byte	0x1
 2075 00bf 3D       		.byte	0x3d
 2076 00c0 76000000 		.4byte	0x76
 2077 00c4 00000000 		.4byte	.LLST0
 2078 00c8 06       		.uleb128 0x6
 2079 00c9 A2000000 		.4byte	.LASF17
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccrHJ3zm.s 			page 45


 2080 00cd 01       		.byte	0x1
 2081 00ce 3D       		.byte	0x3d
 2082 00cf 76000000 		.4byte	0x76
 2083 00d3 45000000 		.4byte	.LLST1
 2084 00d7 06       		.uleb128 0x6
 2085 00d8 83020000 		.4byte	.LASF18
 2086 00dc 01       		.byte	0x1
 2087 00dd 3D       		.byte	0x3d
 2088 00de 76000000 		.4byte	0x76
 2089 00e2 8A000000 		.4byte	.LLST2
 2090 00e6 07       		.uleb128 0x7
 2091 00e7 02040000 		.4byte	.LASF23
 2092 00eb 01       		.byte	0x1
 2093 00ec 3E       		.byte	0x3e
 2094 00ed 25000000 		.4byte	0x25
 2095 00f1 CF000000 		.4byte	.LLST3
 2096 00f5 08       		.uleb128 0x8
 2097 00f6 50000000 		.4byte	.LVL15
 2098 00fa E3090000 		.4byte	0x9e3
 2099 00fe 08       		.uleb128 0x8
 2100 00ff 84000000 		.4byte	.LVL20
 2101 0103 EE090000 		.4byte	0x9ee
 2102 0107 08       		.uleb128 0x8
 2103 0108 E0000000 		.4byte	.LVL35
 2104 010c E3090000 		.4byte	0x9e3
 2105 0110 08       		.uleb128 0x8
 2106 0111 14010000 		.4byte	.LVL40
 2107 0115 EE090000 		.4byte	0x9ee
 2108 0119 00       		.byte	0
 2109 011a 05       		.uleb128 0x5
 2110 011b 4F040000 		.4byte	.LASF20
 2111 011f 01       		.byte	0x1
 2112 0120 4D       		.byte	0x4d
 2113 0121 00000000 		.4byte	.LFB65
 2114 0125 78000000 		.4byte	.LFE65-.LFB65
 2115 0129 01       		.uleb128 0x1
 2116 012a 9C       		.byte	0x9c
 2117 012b 6C010000 		.4byte	0x16c
 2118 012f 06       		.uleb128 0x6
 2119 0130 8A030000 		.4byte	.LASF16
 2120 0134 01       		.byte	0x1
 2121 0135 4D       		.byte	0x4d
 2122 0136 76000000 		.4byte	0x76
 2123 013a 03010000 		.4byte	.LLST4
 2124 013e 06       		.uleb128 0x6
 2125 013f 5F000000 		.4byte	.LASF21
 2126 0143 01       		.byte	0x1
 2127 0144 4D       		.byte	0x4d
 2128 0145 76000000 		.4byte	0x76
 2129 0149 24010000 		.4byte	.LLST5
 2130 014d 06       		.uleb128 0x6
 2131 014e B8010000 		.4byte	.LASF22
 2132 0152 01       		.byte	0x1
 2133 0153 4D       		.byte	0x4d
 2134 0154 76000000 		.4byte	0x76
 2135 0158 50010000 		.4byte	.LLST6
 2136 015c 07       		.uleb128 0x7
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccrHJ3zm.s 			page 46


 2137 015d B5000000 		.4byte	.LASF24
 2138 0161 01       		.byte	0x1
 2139 0162 4E       		.byte	0x4e
 2140 0163 76000000 		.4byte	0x76
 2141 0167 7C010000 		.4byte	.LLST7
 2142 016b 00       		.byte	0
 2143 016c 09       		.uleb128 0x9
 2144 016d 6B020000 		.4byte	.LASF25
 2145 0171 01       		.byte	0x1
 2146 0172 5D       		.byte	0x5d
 2147 0173 00000000 		.4byte	.LFB66
 2148 0177 B4000000 		.4byte	.LFE66-.LFB66
 2149 017b 01       		.uleb128 0x1
 2150 017c 9C       		.byte	0x9c
 2151 017d F3010000 		.4byte	0x1f3
 2152 0181 0A       		.uleb128 0xa
 2153 0182 16000000 		.4byte	.LBB2
 2154 0186 9E000000 		.4byte	.LBE2-.LBB2
 2155 018a 07       		.uleb128 0x7
 2156 018b 2C000000 		.4byte	.LASF26
 2157 018f 01       		.byte	0x1
 2158 0190 61       		.byte	0x61
 2159 0191 76000000 		.4byte	0x76
 2160 0195 9A010000 		.4byte	.LLST8
 2161 0199 08       		.uleb128 0x8
 2162 019a 2A000000 		.4byte	.LVL53
 2163 019e F9090000 		.4byte	0x9f9
 2164 01a2 08       		.uleb128 0x8
 2165 01a3 36000000 		.4byte	.LVL54
 2166 01a7 A4000000 		.4byte	0xa4
 2167 01ab 08       		.uleb128 0x8
 2168 01ac 44000000 		.4byte	.LVL55
 2169 01b0 040A0000 		.4byte	0xa04
 2170 01b4 08       		.uleb128 0x8
 2171 01b5 50000000 		.4byte	.LVL56
 2172 01b9 1A010000 		.4byte	0x11a
 2173 01bd 08       		.uleb128 0x8
 2174 01be 5E000000 		.4byte	.LVL57
 2175 01c2 F9090000 		.4byte	0x9f9
 2176 01c6 08       		.uleb128 0x8
 2177 01c7 6A000000 		.4byte	.LVL58
 2178 01cb 1A010000 		.4byte	0x11a
 2179 01cf 0B       		.uleb128 0xb
 2180 01d0 70000000 		.4byte	.LVL59
 2181 01d4 0F0A0000 		.4byte	0xa0f
 2182 01d8 E2010000 		.4byte	0x1e2
 2183 01dc 0C       		.uleb128 0xc
 2184 01dd 01       		.uleb128 0x1
 2185 01de 50       		.byte	0x50
 2186 01df 01       		.uleb128 0x1
 2187 01e0 30       		.byte	0x30
 2188 01e1 00       		.byte	0
 2189 01e2 0D       		.uleb128 0xd
 2190 01e3 76000000 		.4byte	.LVL60
 2191 01e7 1A0A0000 		.4byte	0xa1a
 2192 01eb 0C       		.uleb128 0xc
 2193 01ec 01       		.uleb128 0x1
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccrHJ3zm.s 			page 47


 2194 01ed 50       		.byte	0x50
 2195 01ee 01       		.uleb128 0x1
 2196 01ef 30       		.byte	0x30
 2197 01f0 00       		.byte	0
 2198 01f1 00       		.byte	0
 2199 01f2 00       		.byte	0
 2200 01f3 05       		.uleb128 0x5
 2201 01f4 34020000 		.4byte	.LASF27
 2202 01f8 01       		.byte	0x1
 2203 01f9 82       		.byte	0x82
 2204 01fa 00000000 		.4byte	.LFB67
 2205 01fe 70000000 		.4byte	.LFE67-.LFB67
 2206 0202 01       		.uleb128 0x1
 2207 0203 9C       		.byte	0x9c
 2208 0204 69020000 		.4byte	0x269
 2209 0208 06       		.uleb128 0x6
 2210 0209 49040000 		.4byte	.LASF28
 2211 020d 01       		.byte	0x1
 2212 020e 82       		.byte	0x82
 2213 020f 25000000 		.4byte	0x25
 2214 0213 C3010000 		.4byte	.LLST9
 2215 0217 06       		.uleb128 0x6
 2216 0218 CC030000 		.4byte	.LASF29
 2217 021c 01       		.byte	0x1
 2218 021d 82       		.byte	0x82
 2219 021e 25000000 		.4byte	0x25
 2220 0222 E6010000 		.4byte	.LLST10
 2221 0226 06       		.uleb128 0x6
 2222 0227 A7060000 		.4byte	.LASF30
 2223 022b 01       		.byte	0x1
 2224 022c 82       		.byte	0x82
 2225 022d 25000000 		.4byte	0x25
 2226 0231 14020000 		.4byte	.LLST11
 2227 0235 06       		.uleb128 0x6
 2228 0236 EC050000 		.4byte	.LASF31
 2229 023a 01       		.byte	0x1
 2230 023b 82       		.byte	0x82
 2231 023c 25000000 		.4byte	0x25
 2232 0240 42020000 		.4byte	.LLST12
 2233 0244 08       		.uleb128 0x8
 2234 0245 1E000000 		.4byte	.LVL66
 2235 0249 250A0000 		.4byte	0xa25
 2236 024d 08       		.uleb128 0x8
 2237 024e 36000000 		.4byte	.LVL70
 2238 0252 300A0000 		.4byte	0xa30
 2239 0256 08       		.uleb128 0x8
 2240 0257 4E000000 		.4byte	.LVL74
 2241 025b 3B0A0000 		.4byte	0xa3b
 2242 025f 08       		.uleb128 0x8
 2243 0260 66000000 		.4byte	.LVL78
 2244 0264 460A0000 		.4byte	0xa46
 2245 0268 00       		.byte	0
 2246 0269 05       		.uleb128 0x5
 2247 026a 13010000 		.4byte	.LASF32
 2248 026e 01       		.byte	0x1
 2249 026f 8B       		.byte	0x8b
 2250 0270 00000000 		.4byte	.LFB68
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccrHJ3zm.s 			page 48


 2251 0274 A0010000 		.4byte	.LFE68-.LFB68
 2252 0278 01       		.uleb128 0x1
 2253 0279 9C       		.byte	0x9c
 2254 027a BA020000 		.4byte	0x2ba
 2255 027e 07       		.uleb128 0x7
 2256 027f 6F000000 		.4byte	.LASF33
 2257 0283 01       		.byte	0x1
 2258 0284 8C       		.byte	0x8c
 2259 0285 76000000 		.4byte	0x76
 2260 0289 70020000 		.4byte	.LLST13
 2261 028d 0B       		.uleb128 0xb
 2262 028e 70010000 		.4byte	.LVL100
 2263 0292 F3010000 		.4byte	0x1f3
 2264 0296 B0020000 		.4byte	0x2b0
 2265 029a 0C       		.uleb128 0xc
 2266 029b 01       		.uleb128 0x1
 2267 029c 51       		.byte	0x51
 2268 029d 03       		.uleb128 0x3
 2269 029e F5       		.byte	0xf5
 2270 029f 04       		.uleb128 0x4
 2271 02a0 25       		.uleb128 0x25
 2272 02a1 0C       		.uleb128 0xc
 2273 02a2 01       		.uleb128 0x1
 2274 02a3 52       		.byte	0x52
 2275 02a4 03       		.uleb128 0x3
 2276 02a5 F5       		.byte	0xf5
 2277 02a6 05       		.uleb128 0x5
 2278 02a7 25       		.uleb128 0x25
 2279 02a8 0C       		.uleb128 0xc
 2280 02a9 01       		.uleb128 0x1
 2281 02aa 53       		.byte	0x53
 2282 02ab 03       		.uleb128 0x3
 2283 02ac F5       		.byte	0xf5
 2284 02ad 06       		.uleb128 0x6
 2285 02ae 25       		.uleb128 0x25
 2286 02af 00       		.byte	0
 2287 02b0 08       		.uleb128 0x8
 2288 02b1 74010000 		.4byte	.LVL101
 2289 02b5 510A0000 		.4byte	0xa51
 2290 02b9 00       		.byte	0
 2291 02ba 09       		.uleb128 0x9
 2292 02bb 20010000 		.4byte	.LASF34
 2293 02bf 01       		.byte	0x1
 2294 02c0 DA       		.byte	0xda
 2295 02c1 00000000 		.4byte	.LFB69
 2296 02c5 20000000 		.4byte	.LFE69-.LFB69
 2297 02c9 01       		.uleb128 0x1
 2298 02ca 9C       		.byte	0x9c
 2299 02cb 38030000 		.4byte	0x338
 2300 02cf 06       		.uleb128 0x6
 2301 02d0 47050000 		.4byte	.LASF35
 2302 02d4 01       		.byte	0x1
 2303 02d5 DA       		.byte	0xda
 2304 02d6 76000000 		.4byte	0x76
 2305 02da D0020000 		.4byte	.LLST14
 2306 02de 06       		.uleb128 0x6
 2307 02df 4E050000 		.4byte	.LASF36
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccrHJ3zm.s 			page 49


 2308 02e3 01       		.byte	0x1
 2309 02e4 DA       		.byte	0xda
 2310 02e5 76000000 		.4byte	0x76
 2311 02e9 EE020000 		.4byte	.LLST15
 2312 02ed 0B       		.uleb128 0xb
 2313 02ee 0C000000 		.4byte	.LVL104
 2314 02f2 0F0A0000 		.4byte	0xa0f
 2315 02f6 00030000 		.4byte	0x300
 2316 02fa 0C       		.uleb128 0xc
 2317 02fb 01       		.uleb128 0x1
 2318 02fc 50       		.byte	0x50
 2319 02fd 01       		.uleb128 0x1
 2320 02fe 30       		.byte	0x30
 2321 02ff 00       		.byte	0
 2322 0300 0B       		.uleb128 0xb
 2323 0301 12000000 		.4byte	.LVL105
 2324 0305 1A0A0000 		.4byte	0xa1a
 2325 0309 13030000 		.4byte	0x313
 2326 030d 0C       		.uleb128 0xc
 2327 030e 01       		.uleb128 0x1
 2328 030f 50       		.byte	0x50
 2329 0310 01       		.uleb128 0x1
 2330 0311 30       		.byte	0x30
 2331 0312 00       		.byte	0
 2332 0313 0B       		.uleb128 0xb
 2333 0314 18000000 		.4byte	.LVL106
 2334 0318 5C0A0000 		.4byte	0xa5c
 2335 031c 27030000 		.4byte	0x327
 2336 0320 0C       		.uleb128 0xc
 2337 0321 01       		.uleb128 0x1
 2338 0322 50       		.byte	0x50
 2339 0323 02       		.uleb128 0x2
 2340 0324 75       		.byte	0x75
 2341 0325 00       		.sleb128 0
 2342 0326 00       		.byte	0
 2343 0327 0D       		.uleb128 0xd
 2344 0328 1E000000 		.4byte	.LVL107
 2345 032c 670A0000 		.4byte	0xa67
 2346 0330 0C       		.uleb128 0xc
 2347 0331 01       		.uleb128 0x1
 2348 0332 50       		.byte	0x50
 2349 0333 02       		.uleb128 0x2
 2350 0334 74       		.byte	0x74
 2351 0335 00       		.sleb128 0
 2352 0336 00       		.byte	0
 2353 0337 00       		.byte	0
 2354 0338 05       		.uleb128 0x5
 2355 0339 AC010000 		.4byte	.LASF37
 2356 033d 01       		.byte	0x1
 2357 033e E2       		.byte	0xe2
 2358 033f 00000000 		.4byte	.LFB70
 2359 0343 C4000000 		.4byte	.LFE70-.LFB70
 2360 0347 01       		.uleb128 0x1
 2361 0348 9C       		.byte	0x9c
 2362 0349 AF030000 		.4byte	0x3af
 2363 034d 06       		.uleb128 0x6
 2364 034e F2050000 		.4byte	.LASF38
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccrHJ3zm.s 			page 50


 2365 0352 01       		.byte	0x1
 2366 0353 E2       		.byte	0xe2
 2367 0354 25000000 		.4byte	0x25
 2368 0358 0C030000 		.4byte	.LLST16
 2369 035c 07       		.uleb128 0x7
 2370 035d 8A030000 		.4byte	.LASF16
 2371 0361 01       		.byte	0x1
 2372 0362 E3       		.byte	0xe3
 2373 0363 76000000 		.4byte	0x76
 2374 0367 2F030000 		.4byte	.LLST17
 2375 036b 08       		.uleb128 0x8
 2376 036c 34000000 		.4byte	.LVL112
 2377 0370 BA020000 		.4byte	0x2ba
 2378 0374 08       		.uleb128 0x8
 2379 0375 4E000000 		.4byte	.LVL113
 2380 0379 720A0000 		.4byte	0xa72
 2381 037d 08       		.uleb128 0x8
 2382 037e 52000000 		.4byte	.LVL114
 2383 0382 7D0A0000 		.4byte	0xa7d
 2384 0386 08       		.uleb128 0x8
 2385 0387 56000000 		.4byte	.LVL115
 2386 038b 510A0000 		.4byte	0xa51
 2387 038f 0D       		.uleb128 0xd
 2388 0390 80000000 		.4byte	.LVL120
 2389 0394 F3010000 		.4byte	0x1f3
 2390 0398 0C       		.uleb128 0xc
 2391 0399 01       		.uleb128 0x1
 2392 039a 51       		.byte	0x51
 2393 039b 03       		.uleb128 0x3
 2394 039c F5       		.byte	0xf5
 2395 039d 04       		.uleb128 0x4
 2396 039e 25       		.uleb128 0x25
 2397 039f 0C       		.uleb128 0xc
 2398 03a0 01       		.uleb128 0x1
 2399 03a1 52       		.byte	0x52
 2400 03a2 03       		.uleb128 0x3
 2401 03a3 F5       		.byte	0xf5
 2402 03a4 07       		.uleb128 0x7
 2403 03a5 25       		.uleb128 0x25
 2404 03a6 0C       		.uleb128 0xc
 2405 03a7 01       		.uleb128 0x1
 2406 03a8 53       		.byte	0x53
 2407 03a9 03       		.uleb128 0x3
 2408 03aa F5       		.byte	0xf5
 2409 03ab 08       		.uleb128 0x8
 2410 03ac 25       		.uleb128 0x25
 2411 03ad 00       		.byte	0
 2412 03ae 00       		.byte	0
 2413 03af 05       		.uleb128 0x5
 2414 03b0 14000000 		.4byte	.LASF39
 2415 03b4 01       		.byte	0x1
 2416 03b5 FA       		.byte	0xfa
 2417 03b6 00000000 		.4byte	.LFB71
 2418 03ba 9C000000 		.4byte	.LFE71-.LFB71
 2419 03be 01       		.uleb128 0x1
 2420 03bf 9C       		.byte	0x9c
 2421 03c0 28040000 		.4byte	0x428
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccrHJ3zm.s 			page 51


 2422 03c4 0E       		.uleb128 0xe
 2423 03c5 8A030000 		.4byte	.LASF16
 2424 03c9 01       		.byte	0x1
 2425 03ca FB       		.byte	0xfb
 2426 03cb 76000000 		.4byte	0x76
 2427 03cf DCFF     		.2byte	0xffdc
 2428 03d1 0B       		.uleb128 0xb
 2429 03d2 26000000 		.4byte	.LVL122
 2430 03d6 BA020000 		.4byte	0x2ba
 2431 03da ED030000 		.4byte	0x3ed
 2432 03de 0C       		.uleb128 0xc
 2433 03df 01       		.uleb128 0x1
 2434 03e0 50       		.byte	0x50
 2435 03e1 03       		.uleb128 0x3
 2436 03e2 0A       		.byte	0xa
 2437 03e3 DCFF     		.2byte	0xffdc
 2438 03e5 0C       		.uleb128 0xc
 2439 03e6 01       		.uleb128 0x1
 2440 03e7 51       		.byte	0x51
 2441 03e8 03       		.uleb128 0x3
 2442 03e9 0A       		.byte	0xa
 2443 03ea DCFF     		.2byte	0xffdc
 2444 03ec 00       		.byte	0
 2445 03ed 08       		.uleb128 0x8
 2446 03ee 40000000 		.4byte	.LVL123
 2447 03f2 720A0000 		.4byte	0xa72
 2448 03f6 08       		.uleb128 0x8
 2449 03f7 44000000 		.4byte	.LVL124
 2450 03fb 7D0A0000 		.4byte	0xa7d
 2451 03ff 08       		.uleb128 0x8
 2452 0400 48000000 		.4byte	.LVL125
 2453 0404 510A0000 		.4byte	0xa51
 2454 0408 0D       		.uleb128 0xd
 2455 0409 72000000 		.4byte	.LVL130
 2456 040d F3010000 		.4byte	0x1f3
 2457 0411 0C       		.uleb128 0xc
 2458 0412 01       		.uleb128 0x1
 2459 0413 51       		.byte	0x51
 2460 0414 03       		.uleb128 0x3
 2461 0415 F5       		.byte	0xf5
 2462 0416 04       		.uleb128 0x4
 2463 0417 25       		.uleb128 0x25
 2464 0418 0C       		.uleb128 0xc
 2465 0419 01       		.uleb128 0x1
 2466 041a 52       		.byte	0x52
 2467 041b 03       		.uleb128 0x3
 2468 041c F5       		.byte	0xf5
 2469 041d 07       		.uleb128 0x7
 2470 041e 25       		.uleb128 0x25
 2471 041f 0C       		.uleb128 0xc
 2472 0420 01       		.uleb128 0x1
 2473 0421 53       		.byte	0x53
 2474 0422 03       		.uleb128 0x3
 2475 0423 F5       		.byte	0xf5
 2476 0424 08       		.uleb128 0x8
 2477 0425 25       		.uleb128 0x25
 2478 0426 00       		.byte	0
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccrHJ3zm.s 			page 52


 2479 0427 00       		.byte	0
 2480 0428 0F       		.uleb128 0xf
 2481 0429 76020000 		.4byte	.LASF40
 2482 042d 01       		.byte	0x1
 2483 042e 0D01     		.2byte	0x10d
 2484 0430 00000000 		.4byte	.LFB72
 2485 0434 C4000000 		.4byte	.LFE72-.LFB72
 2486 0438 01       		.uleb128 0x1
 2487 0439 9C       		.byte	0x9c
 2488 043a A2040000 		.4byte	0x4a2
 2489 043e 10       		.uleb128 0x10
 2490 043f F2050000 		.4byte	.LASF38
 2491 0443 01       		.byte	0x1
 2492 0444 0D01     		.2byte	0x10d
 2493 0446 25000000 		.4byte	0x25
 2494 044a 42030000 		.4byte	.LLST18
 2495 044e 11       		.uleb128 0x11
 2496 044f 8A030000 		.4byte	.LASF16
 2497 0453 01       		.byte	0x1
 2498 0454 0E01     		.2byte	0x10e
 2499 0456 76000000 		.4byte	0x76
 2500 045a 65030000 		.4byte	.LLST19
 2501 045e 08       		.uleb128 0x8
 2502 045f 34000000 		.4byte	.LVL135
 2503 0463 BA020000 		.4byte	0x2ba
 2504 0467 08       		.uleb128 0x8
 2505 0468 4A000000 		.4byte	.LVL136
 2506 046c 720A0000 		.4byte	0xa72
 2507 0470 08       		.uleb128 0x8
 2508 0471 4E000000 		.4byte	.LVL137
 2509 0475 7D0A0000 		.4byte	0xa7d
 2510 0479 08       		.uleb128 0x8
 2511 047a 52000000 		.4byte	.LVL138
 2512 047e 510A0000 		.4byte	0xa51
 2513 0482 0D       		.uleb128 0xd
 2514 0483 7A000000 		.4byte	.LVL143
 2515 0487 F3010000 		.4byte	0x1f3
 2516 048b 0C       		.uleb128 0xc
 2517 048c 01       		.uleb128 0x1
 2518 048d 51       		.byte	0x51
 2519 048e 03       		.uleb128 0x3
 2520 048f F5       		.byte	0xf5
 2521 0490 04       		.uleb128 0x4
 2522 0491 25       		.uleb128 0x25
 2523 0492 0C       		.uleb128 0xc
 2524 0493 01       		.uleb128 0x1
 2525 0494 52       		.byte	0x52
 2526 0495 03       		.uleb128 0x3
 2527 0496 F5       		.byte	0xf5
 2528 0497 07       		.uleb128 0x7
 2529 0498 25       		.uleb128 0x25
 2530 0499 0C       		.uleb128 0xc
 2531 049a 01       		.uleb128 0x1
 2532 049b 53       		.byte	0x53
 2533 049c 03       		.uleb128 0x3
 2534 049d F5       		.byte	0xf5
 2535 049e 08       		.uleb128 0x8
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccrHJ3zm.s 			page 53


 2536 049f 25       		.uleb128 0x25
 2537 04a0 00       		.byte	0
 2538 04a1 00       		.byte	0
 2539 04a2 0F       		.uleb128 0xf
 2540 04a3 52020000 		.4byte	.LASF41
 2541 04a7 01       		.byte	0x1
 2542 04a8 2401     		.2byte	0x124
 2543 04aa 00000000 		.4byte	.LFB73
 2544 04ae 94000000 		.4byte	.LFE73-.LFB73
 2545 04b2 01       		.uleb128 0x1
 2546 04b3 9C       		.byte	0x9c
 2547 04b4 1D050000 		.4byte	0x51d
 2548 04b8 12       		.uleb128 0x12
 2549 04b9 8A030000 		.4byte	.LASF16
 2550 04bd 01       		.byte	0x1
 2551 04be 2501     		.2byte	0x125
 2552 04c0 76000000 		.4byte	0x76
 2553 04c4 DCFF     		.2byte	0xffdc
 2554 04c6 0B       		.uleb128 0xb
 2555 04c7 26000000 		.4byte	.LVL145
 2556 04cb BA020000 		.4byte	0x2ba
 2557 04cf E2040000 		.4byte	0x4e2
 2558 04d3 0C       		.uleb128 0xc
 2559 04d4 01       		.uleb128 0x1
 2560 04d5 50       		.byte	0x50
 2561 04d6 03       		.uleb128 0x3
 2562 04d7 0A       		.byte	0xa
 2563 04d8 DCFF     		.2byte	0xffdc
 2564 04da 0C       		.uleb128 0xc
 2565 04db 01       		.uleb128 0x1
 2566 04dc 51       		.byte	0x51
 2567 04dd 03       		.uleb128 0x3
 2568 04de 0A       		.byte	0xa
 2569 04df DCFF     		.2byte	0xffdc
 2570 04e1 00       		.byte	0
 2571 04e2 08       		.uleb128 0x8
 2572 04e3 3C000000 		.4byte	.LVL146
 2573 04e7 720A0000 		.4byte	0xa72
 2574 04eb 08       		.uleb128 0x8
 2575 04ec 40000000 		.4byte	.LVL147
 2576 04f0 7D0A0000 		.4byte	0xa7d
 2577 04f4 08       		.uleb128 0x8
 2578 04f5 44000000 		.4byte	.LVL148
 2579 04f9 510A0000 		.4byte	0xa51
 2580 04fd 0D       		.uleb128 0xd
 2581 04fe 6C000000 		.4byte	.LVL153
 2582 0502 F3010000 		.4byte	0x1f3
 2583 0506 0C       		.uleb128 0xc
 2584 0507 01       		.uleb128 0x1
 2585 0508 51       		.byte	0x51
 2586 0509 03       		.uleb128 0x3
 2587 050a F5       		.byte	0xf5
 2588 050b 04       		.uleb128 0x4
 2589 050c 25       		.uleb128 0x25
 2590 050d 0C       		.uleb128 0xc
 2591 050e 01       		.uleb128 0x1
 2592 050f 52       		.byte	0x52
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccrHJ3zm.s 			page 54


 2593 0510 03       		.uleb128 0x3
 2594 0511 F5       		.byte	0xf5
 2595 0512 07       		.uleb128 0x7
 2596 0513 25       		.uleb128 0x25
 2597 0514 0C       		.uleb128 0xc
 2598 0515 01       		.uleb128 0x1
 2599 0516 53       		.byte	0x53
 2600 0517 03       		.uleb128 0x3
 2601 0518 F5       		.byte	0xf5
 2602 0519 08       		.uleb128 0x8
 2603 051a 25       		.uleb128 0x25
 2604 051b 00       		.byte	0
 2605 051c 00       		.byte	0
 2606 051d 0F       		.uleb128 0xf
 2607 051e 0A030000 		.4byte	.LASF42
 2608 0522 01       		.byte	0x1
 2609 0523 3701     		.2byte	0x137
 2610 0525 00000000 		.4byte	.LFB74
 2611 0529 CC000000 		.4byte	.LFE74-.LFB74
 2612 052d 01       		.uleb128 0x1
 2613 052e 9C       		.byte	0x9c
 2614 052f A0050000 		.4byte	0x5a0
 2615 0533 10       		.uleb128 0x10
 2616 0534 F2050000 		.4byte	.LASF38
 2617 0538 01       		.byte	0x1
 2618 0539 3701     		.2byte	0x137
 2619 053b 25000000 		.4byte	0x25
 2620 053f 78030000 		.4byte	.LLST20
 2621 0543 11       		.uleb128 0x11
 2622 0544 8A030000 		.4byte	.LASF16
 2623 0548 01       		.byte	0x1
 2624 0549 3A01     		.2byte	0x13a
 2625 054b 76000000 		.4byte	0x76
 2626 054f 9B030000 		.4byte	.LLST21
 2627 0553 08       		.uleb128 0x8
 2628 0554 16000000 		.4byte	.LVL157
 2629 0558 880A0000 		.4byte	0xa88
 2630 055c 08       		.uleb128 0x8
 2631 055d 38000000 		.4byte	.LVL159
 2632 0561 BA020000 		.4byte	0x2ba
 2633 0565 08       		.uleb128 0x8
 2634 0566 52000000 		.4byte	.LVL160
 2635 056a 720A0000 		.4byte	0xa72
 2636 056e 08       		.uleb128 0x8
 2637 056f 56000000 		.4byte	.LVL161
 2638 0573 7D0A0000 		.4byte	0xa7d
 2639 0577 08       		.uleb128 0x8
 2640 0578 5A000000 		.4byte	.LVL162
 2641 057c 510A0000 		.4byte	0xa51
 2642 0580 0D       		.uleb128 0xd
 2643 0581 84000000 		.4byte	.LVL167
 2644 0585 F3010000 		.4byte	0x1f3
 2645 0589 0C       		.uleb128 0xc
 2646 058a 01       		.uleb128 0x1
 2647 058b 51       		.byte	0x51
 2648 058c 03       		.uleb128 0x3
 2649 058d F5       		.byte	0xf5
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccrHJ3zm.s 			page 55


 2650 058e 04       		.uleb128 0x4
 2651 058f 25       		.uleb128 0x25
 2652 0590 0C       		.uleb128 0xc
 2653 0591 01       		.uleb128 0x1
 2654 0592 52       		.byte	0x52
 2655 0593 03       		.uleb128 0x3
 2656 0594 F5       		.byte	0xf5
 2657 0595 07       		.uleb128 0x7
 2658 0596 25       		.uleb128 0x25
 2659 0597 0C       		.uleb128 0xc
 2660 0598 01       		.uleb128 0x1
 2661 0599 53       		.byte	0x53
 2662 059a 03       		.uleb128 0x3
 2663 059b F5       		.byte	0xf5
 2664 059c 08       		.uleb128 0x8
 2665 059d 25       		.uleb128 0x25
 2666 059e 00       		.byte	0
 2667 059f 00       		.byte	0
 2668 05a0 0F       		.uleb128 0xf
 2669 05a1 D9050000 		.4byte	.LASF43
 2670 05a5 01       		.byte	0x1
 2671 05a6 4F01     		.2byte	0x14f
 2672 05a8 00000000 		.4byte	.LFB75
 2673 05ac C4000000 		.4byte	.LFE75-.LFB75
 2674 05b0 01       		.uleb128 0x1
 2675 05b1 9C       		.byte	0x9c
 2676 05b2 23060000 		.4byte	0x623
 2677 05b6 10       		.uleb128 0x10
 2678 05b7 F2050000 		.4byte	.LASF38
 2679 05bb 01       		.byte	0x1
 2680 05bc 4F01     		.2byte	0x14f
 2681 05be 25000000 		.4byte	0x25
 2682 05c2 AE030000 		.4byte	.LLST22
 2683 05c6 11       		.uleb128 0x11
 2684 05c7 8A030000 		.4byte	.LASF16
 2685 05cb 01       		.byte	0x1
 2686 05cc 5001     		.2byte	0x150
 2687 05ce 76000000 		.4byte	0x76
 2688 05d2 D1030000 		.4byte	.LLST23
 2689 05d6 08       		.uleb128 0x8
 2690 05d7 16000000 		.4byte	.LVL171
 2691 05db 880A0000 		.4byte	0xa88
 2692 05df 08       		.uleb128 0x8
 2693 05e0 38000000 		.4byte	.LVL173
 2694 05e4 BA020000 		.4byte	0x2ba
 2695 05e8 08       		.uleb128 0x8
 2696 05e9 4E000000 		.4byte	.LVL174
 2697 05ed 720A0000 		.4byte	0xa72
 2698 05f1 08       		.uleb128 0x8
 2699 05f2 52000000 		.4byte	.LVL175
 2700 05f6 7D0A0000 		.4byte	0xa7d
 2701 05fa 08       		.uleb128 0x8
 2702 05fb 56000000 		.4byte	.LVL176
 2703 05ff 510A0000 		.4byte	0xa51
 2704 0603 0D       		.uleb128 0xd
 2705 0604 7E000000 		.4byte	.LVL181
 2706 0608 F3010000 		.4byte	0x1f3
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccrHJ3zm.s 			page 56


 2707 060c 0C       		.uleb128 0xc
 2708 060d 01       		.uleb128 0x1
 2709 060e 51       		.byte	0x51
 2710 060f 03       		.uleb128 0x3
 2711 0610 F5       		.byte	0xf5
 2712 0611 04       		.uleb128 0x4
 2713 0612 25       		.uleb128 0x25
 2714 0613 0C       		.uleb128 0xc
 2715 0614 01       		.uleb128 0x1
 2716 0615 52       		.byte	0x52
 2717 0616 03       		.uleb128 0x3
 2718 0617 F5       		.byte	0xf5
 2719 0618 07       		.uleb128 0x7
 2720 0619 25       		.uleb128 0x25
 2721 061a 0C       		.uleb128 0xc
 2722 061b 01       		.uleb128 0x1
 2723 061c 53       		.byte	0x53
 2724 061d 03       		.uleb128 0x3
 2725 061e F5       		.byte	0xf5
 2726 061f 08       		.uleb128 0x8
 2727 0620 25       		.uleb128 0x25
 2728 0621 00       		.byte	0
 2729 0622 00       		.byte	0
 2730 0623 0F       		.uleb128 0xf
 2731 0624 9A060000 		.4byte	.LASF44
 2732 0628 01       		.byte	0x1
 2733 0629 6801     		.2byte	0x168
 2734 062b 00000000 		.4byte	.LFB76
 2735 062f 78000000 		.4byte	.LFE76-.LFB76
 2736 0633 01       		.uleb128 0x1
 2737 0634 9C       		.byte	0x9c
 2738 0635 B8060000 		.4byte	0x6b8
 2739 0639 10       		.uleb128 0x10
 2740 063a F2050000 		.4byte	.LASF38
 2741 063e 01       		.byte	0x1
 2742 063f 6801     		.2byte	0x168
 2743 0641 76000000 		.4byte	0x76
 2744 0645 E4030000 		.4byte	.LLST24
 2745 0649 10       		.uleb128 0x10
 2746 064a DF020000 		.4byte	.LASF45
 2747 064e 01       		.byte	0x1
 2748 064f 6801     		.2byte	0x168
 2749 0651 76000000 		.4byte	0x76
 2750 0655 10040000 		.4byte	.LLST25
 2751 0659 11       		.uleb128 0x11
 2752 065a 6F000000 		.4byte	.LASF33
 2753 065e 01       		.byte	0x1
 2754 065f 6A01     		.2byte	0x16a
 2755 0661 25000000 		.4byte	0x25
 2756 0665 3C040000 		.4byte	.LLST26
 2757 0669 0B       		.uleb128 0xb
 2758 066a 14000000 		.4byte	.LVL185
 2759 066e A0050000 		.4byte	0x5a0
 2760 0672 7E060000 		.4byte	0x67e
 2761 0676 0C       		.uleb128 0xc
 2762 0677 01       		.uleb128 0x1
 2763 0678 50       		.byte	0x50
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccrHJ3zm.s 			page 57


 2764 0679 03       		.uleb128 0x3
 2765 067a F5       		.byte	0xf5
 2766 067b 08       		.uleb128 0x8
 2767 067c 25       		.uleb128 0x25
 2768 067d 00       		.byte	0
 2769 067e 08       		.uleb128 0x8
 2770 067f 36000000 		.4byte	.LVL191
 2771 0683 EE090000 		.4byte	0x9ee
 2772 0687 08       		.uleb128 0x8
 2773 0688 4A000000 		.4byte	.LVL194
 2774 068c 28040000 		.4byte	0x428
 2775 0690 0B       		.uleb128 0xb
 2776 0691 50000000 		.4byte	.LVL195
 2777 0695 1D050000 		.4byte	0x51d
 2778 0699 A5060000 		.4byte	0x6a5
 2779 069d 0C       		.uleb128 0xc
 2780 069e 01       		.uleb128 0x1
 2781 069f 50       		.byte	0x50
 2782 06a0 03       		.uleb128 0x3
 2783 06a1 F5       		.byte	0xf5
 2784 06a2 08       		.uleb128 0x8
 2785 06a3 25       		.uleb128 0x25
 2786 06a4 00       		.byte	0
 2787 06a5 08       		.uleb128 0x8
 2788 06a6 58000000 		.4byte	.LVL196
 2789 06aa 940A0000 		.4byte	0xa94
 2790 06ae 08       		.uleb128 0x8
 2791 06af 6C000000 		.4byte	.LVL199
 2792 06b3 38030000 		.4byte	0x338
 2793 06b7 00       		.byte	0
 2794 06b8 0F       		.uleb128 0xf
 2795 06b9 2C050000 		.4byte	.LASF46
 2796 06bd 01       		.byte	0x1
 2797 06be 7401     		.2byte	0x174
 2798 06c0 00000000 		.4byte	.LFB77
 2799 06c4 78000000 		.4byte	.LFE77-.LFB77
 2800 06c8 01       		.uleb128 0x1
 2801 06c9 9C       		.byte	0x9c
 2802 06ca 4D070000 		.4byte	0x74d
 2803 06ce 10       		.uleb128 0x10
 2804 06cf F2050000 		.4byte	.LASF38
 2805 06d3 01       		.byte	0x1
 2806 06d4 7401     		.2byte	0x174
 2807 06d6 76000000 		.4byte	0x76
 2808 06da 64040000 		.4byte	.LLST27
 2809 06de 10       		.uleb128 0x10
 2810 06df DF020000 		.4byte	.LASF45
 2811 06e3 01       		.byte	0x1
 2812 06e4 7401     		.2byte	0x174
 2813 06e6 76000000 		.4byte	0x76
 2814 06ea 90040000 		.4byte	.LLST28
 2815 06ee 11       		.uleb128 0x11
 2816 06ef 6F000000 		.4byte	.LASF33
 2817 06f3 01       		.byte	0x1
 2818 06f4 7601     		.2byte	0x176
 2819 06f6 25000000 		.4byte	0x25
 2820 06fa BC040000 		.4byte	.LLST29
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccrHJ3zm.s 			page 58


 2821 06fe 0B       		.uleb128 0xb
 2822 06ff 14000000 		.4byte	.LVL203
 2823 0703 1D050000 		.4byte	0x51d
 2824 0707 13070000 		.4byte	0x713
 2825 070b 0C       		.uleb128 0xc
 2826 070c 01       		.uleb128 0x1
 2827 070d 50       		.byte	0x50
 2828 070e 03       		.uleb128 0x3
 2829 070f F5       		.byte	0xf5
 2830 0710 08       		.uleb128 0x8
 2831 0711 25       		.uleb128 0x25
 2832 0712 00       		.byte	0
 2833 0713 08       		.uleb128 0x8
 2834 0714 36000000 		.4byte	.LVL209
 2835 0718 EE090000 		.4byte	0x9ee
 2836 071c 08       		.uleb128 0x8
 2837 071d 4A000000 		.4byte	.LVL212
 2838 0721 28040000 		.4byte	0x428
 2839 0725 0B       		.uleb128 0xb
 2840 0726 50000000 		.4byte	.LVL213
 2841 072a A0050000 		.4byte	0x5a0
 2842 072e 3A070000 		.4byte	0x73a
 2843 0732 0C       		.uleb128 0xc
 2844 0733 01       		.uleb128 0x1
 2845 0734 50       		.byte	0x50
 2846 0735 03       		.uleb128 0x3
 2847 0736 F5       		.byte	0xf5
 2848 0737 08       		.uleb128 0x8
 2849 0738 25       		.uleb128 0x25
 2850 0739 00       		.byte	0
 2851 073a 08       		.uleb128 0x8
 2852 073b 58000000 		.4byte	.LVL214
 2853 073f 940A0000 		.4byte	0xa94
 2854 0743 08       		.uleb128 0x8
 2855 0744 6C000000 		.4byte	.LVL217
 2856 0748 38030000 		.4byte	0x338
 2857 074c 00       		.byte	0
 2858 074d 0F       		.uleb128 0xf
 2859 074e 91030000 		.4byte	.LASF47
 2860 0752 01       		.byte	0x1
 2861 0753 8001     		.2byte	0x180
 2862 0755 00000000 		.4byte	.LFB78
 2863 0759 6C000000 		.4byte	.LFE78-.LFB78
 2864 075d 01       		.uleb128 0x1
 2865 075e 9C       		.byte	0x9c
 2866 075f 97070000 		.4byte	0x797
 2867 0763 10       		.uleb128 0x10
 2868 0764 39040000 		.4byte	.LASF48
 2869 0768 01       		.byte	0x1
 2870 0769 8001     		.2byte	0x180
 2871 076b 97070000 		.4byte	0x797
 2872 076f E4040000 		.4byte	.LLST30
 2873 0773 0A       		.uleb128 0xa
 2874 0774 26000000 		.4byte	.LBB3
 2875 0778 46000000 		.4byte	.LBE3-.LBB3
 2876 077c 11       		.uleb128 0x11
 2877 077d C2000000 		.4byte	.LASF49
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccrHJ3zm.s 			page 59


 2878 0781 01       		.byte	0x1
 2879 0782 8601     		.2byte	0x186
 2880 0784 25000000 		.4byte	0x25
 2881 0788 10050000 		.4byte	.LLST31
 2882 078c 08       		.uleb128 0x8
 2883 078d 58000000 		.4byte	.LVL226
 2884 0791 1D050000 		.4byte	0x51d
 2885 0795 00       		.byte	0
 2886 0796 00       		.byte	0
 2887 0797 13       		.uleb128 0x13
 2888 0798 04       		.byte	0x4
 2889 0799 76000000 		.4byte	0x76
 2890 079d 14       		.uleb128 0x14
 2891 079e EE030000 		.4byte	.LASF50
 2892 07a2 01       		.byte	0x1
 2893 07a3 8F01     		.2byte	0x18f
 2894 07a5 00000000 		.4byte	.LFB79
 2895 07a9 40000000 		.4byte	.LFE79-.LFB79
 2896 07ad 01       		.uleb128 0x1
 2897 07ae 9C       		.byte	0x9c
 2898 07af 0C080000 		.4byte	0x80c
 2899 07b3 0B       		.uleb128 0xb
 2900 07b4 08000000 		.4byte	.LVL228
 2901 07b8 250A0000 		.4byte	0xa25
 2902 07bc C6070000 		.4byte	0x7c6
 2903 07c0 0C       		.uleb128 0xc
 2904 07c1 01       		.uleb128 0x1
 2905 07c2 50       		.byte	0x50
 2906 07c3 01       		.uleb128 0x1
 2907 07c4 30       		.byte	0x30
 2908 07c5 00       		.byte	0
 2909 07c6 0B       		.uleb128 0xb
 2910 07c7 0E000000 		.4byte	.LVL229
 2911 07cb 3B0A0000 		.4byte	0xa3b
 2912 07cf D9070000 		.4byte	0x7d9
 2913 07d3 0C       		.uleb128 0xc
 2914 07d4 01       		.uleb128 0x1
 2915 07d5 50       		.byte	0x50
 2916 07d6 01       		.uleb128 0x1
 2917 07d7 30       		.byte	0x30
 2918 07d8 00       		.byte	0
 2919 07d9 08       		.uleb128 0x8
 2920 07da 12000000 		.4byte	.LVL230
 2921 07de 9F0A0000 		.4byte	0xa9f
 2922 07e2 0B       		.uleb128 0xb
 2923 07e3 22000000 		.4byte	.LVL231
 2924 07e7 AA0A0000 		.4byte	0xaaa
 2925 07eb F9070000 		.4byte	0x7f9
 2926 07ef 0C       		.uleb128 0xc
 2927 07f0 01       		.uleb128 0x1
 2928 07f1 50       		.byte	0x50
 2929 07f2 05       		.uleb128 0x5
 2930 07f3 03       		.byte	0x3
 2931 07f4 00000000 		.4byte	.LC0
 2932 07f8 00       		.byte	0
 2933 07f9 08       		.uleb128 0x8
 2934 07fa 2A000000 		.4byte	.LVL232
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccrHJ3zm.s 			page 60


 2935 07fe 6C010000 		.4byte	0x16c
 2936 0802 08       		.uleb128 0x8
 2937 0803 2E000000 		.4byte	.LVL233
 2938 0807 B50A0000 		.4byte	0xab5
 2939 080b 00       		.byte	0
 2940 080c 14       		.uleb128 0x14
 2941 080d 7E000000 		.4byte	.LASF51
 2942 0811 01       		.byte	0x1
 2943 0812 9B01     		.2byte	0x19b
 2944 0814 00000000 		.4byte	.LFB80
 2945 0818 40000000 		.4byte	.LFE80-.LFB80
 2946 081c 01       		.uleb128 0x1
 2947 081d 9C       		.byte	0x9c
 2948 081e 7B080000 		.4byte	0x87b
 2949 0822 0B       		.uleb128 0xb
 2950 0823 08000000 		.4byte	.LVL234
 2951 0827 300A0000 		.4byte	0xa30
 2952 082b 35080000 		.4byte	0x835
 2953 082f 0C       		.uleb128 0xc
 2954 0830 01       		.uleb128 0x1
 2955 0831 50       		.byte	0x50
 2956 0832 01       		.uleb128 0x1
 2957 0833 30       		.byte	0x30
 2958 0834 00       		.byte	0
 2959 0835 0B       		.uleb128 0xb
 2960 0836 0E000000 		.4byte	.LVL235
 2961 083a 460A0000 		.4byte	0xa46
 2962 083e 48080000 		.4byte	0x848
 2963 0842 0C       		.uleb128 0xc
 2964 0843 01       		.uleb128 0x1
 2965 0844 50       		.byte	0x50
 2966 0845 01       		.uleb128 0x1
 2967 0846 30       		.byte	0x30
 2968 0847 00       		.byte	0
 2969 0848 08       		.uleb128 0x8
 2970 0849 12000000 		.4byte	.LVL236
 2971 084d C00A0000 		.4byte	0xac0
 2972 0851 0B       		.uleb128 0xb
 2973 0852 22000000 		.4byte	.LVL237
 2974 0856 AA0A0000 		.4byte	0xaaa
 2975 085a 68080000 		.4byte	0x868
 2976 085e 0C       		.uleb128 0xc
 2977 085f 01       		.uleb128 0x1
 2978 0860 50       		.byte	0x50
 2979 0861 05       		.uleb128 0x5
 2980 0862 03       		.byte	0x3
 2981 0863 18000000 		.4byte	.LC1
 2982 0867 00       		.byte	0
 2983 0868 08       		.uleb128 0x8
 2984 0869 2A000000 		.4byte	.LVL238
 2985 086d 6C010000 		.4byte	0x16c
 2986 0871 08       		.uleb128 0x8
 2987 0872 2E000000 		.4byte	.LVL239
 2988 0876 CB0A0000 		.4byte	0xacb
 2989 087a 00       		.byte	0
 2990 087b 15       		.uleb128 0x15
 2991 087c F5040000 		.4byte	.LASF52
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccrHJ3zm.s 			page 61


 2992 0880 04       		.byte	0x4
 2993 0881 1207     		.2byte	0x712
 2994 0883 87080000 		.4byte	0x887
 2995 0887 16       		.uleb128 0x16
 2996 0888 84000000 		.4byte	0x84
 2997 088c 17       		.uleb128 0x17
 2998 088d DA030000 		.4byte	.LASF53
 2999 0891 05       		.byte	0x5
 3000 0892 69       		.byte	0x69
 3001 0893 76000000 		.4byte	0x76
 3002 0897 05       		.uleb128 0x5
 3003 0898 03       		.byte	0x3
 3004 0899 00000000 		.4byte	driveStraightEnable
 3005 089d 17       		.uleb128 0x17
 3006 089e A8020000 		.4byte	.LASF54
 3007 08a2 05       		.byte	0x5
 3008 08a3 6A       		.byte	0x6a
 3009 08a4 76000000 		.4byte	0x76
 3010 08a8 05       		.uleb128 0x5
 3011 08a9 03       		.byte	0x3
 3012 08aa 00000000 		.4byte	currentPuckRackScanningIndex
 3013 08ae 18       		.uleb128 0x18
 3014 08af 76000000 		.4byte	0x76
 3015 08b3 BE080000 		.4byte	0x8be
 3016 08b7 19       		.uleb128 0x19
 3017 08b8 9D000000 		.4byte	0x9d
 3018 08bc 04       		.byte	0x4
 3019 08bd 00       		.byte	0
 3020 08be 17       		.uleb128 0x17
 3021 08bf 5F050000 		.4byte	.LASF55
 3022 08c3 05       		.byte	0x5
 3023 08c4 6B       		.byte	0x6b
 3024 08c5 AE080000 		.4byte	0x8ae
 3025 08c9 05       		.uleb128 0x5
 3026 08ca 03       		.byte	0x3
 3027 08cb 00000000 		.4byte	puckRackColours
 3028 08cf 17       		.uleb128 0x17
 3029 08d0 DE000000 		.4byte	.LASF56
 3030 08d4 05       		.byte	0x5
 3031 08d5 6C       		.byte	0x6c
 3032 08d6 AE080000 		.4byte	0x8ae
 3033 08da 05       		.uleb128 0x5
 3034 08db 03       		.byte	0x3
 3035 08dc 00000000 		.4byte	puckRackOffsetsFromWest
 3036 08e0 17       		.uleb128 0x17
 3037 08e1 BE030000 		.4byte	.LASF57
 3038 08e5 05       		.byte	0x5
 3039 08e6 6D       		.byte	0x6d
 3040 08e7 76000000 		.4byte	0x76
 3041 08eb 05       		.uleb128 0x5
 3042 08ec 03       		.byte	0x3
 3043 08ed 00000000 		.4byte	sweeping
 3044 08f1 18       		.uleb128 0x18
 3045 08f2 25000000 		.4byte	0x25
 3046 08f6 01090000 		.4byte	0x901
 3047 08fa 19       		.uleb128 0x19
 3048 08fb 9D000000 		.4byte	0x9d
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccrHJ3zm.s 			page 62


 3049 08ff 03       		.byte	0x3
 3050 0900 00       		.byte	0
 3051 0901 17       		.uleb128 0x17
 3052 0902 25030000 		.4byte	.LASF58
 3053 0906 05       		.byte	0x5
 3054 0907 6E       		.byte	0x6e
 3055 0908 F1080000 		.4byte	0x8f1
 3056 090c 05       		.uleb128 0x5
 3057 090d 03       		.byte	0x3
 3058 090e 00000000 		.4byte	block_edge_location
 3059 0912 17       		.uleb128 0x17
 3060 0913 97020000 		.4byte	.LASF59
 3061 0917 05       		.byte	0x5
 3062 0918 6F       		.byte	0x6f
 3063 0919 25000000 		.4byte	0x25
 3064 091d 05       		.uleb128 0x5
 3065 091e 03       		.byte	0x3
 3066 091f 00000000 		.4byte	puckPileLocation
 3067 0923 18       		.uleb128 0x18
 3068 0924 25000000 		.4byte	0x25
 3069 0928 33090000 		.4byte	0x933
 3070 092c 19       		.uleb128 0x19
 3071 092d 9D000000 		.4byte	0x9d
 3072 0931 01       		.byte	0x1
 3073 0932 00       		.byte	0
 3074 0933 1A       		.uleb128 0x1a
 3075 0934 92000000 		.4byte	.LASF60
 3076 0938 01       		.byte	0x1
 3077 0939 17       		.byte	0x17
 3078 093a 23090000 		.4byte	0x923
 3079 093e 1A       		.uleb128 0x1a
 3080 093f 87060000 		.4byte	.LASF61
 3081 0943 01       		.byte	0x1
 3082 0944 19       		.byte	0x19
 3083 0945 76000000 		.4byte	0x76
 3084 0949 1A       		.uleb128 0x1a
 3085 094a 90010000 		.4byte	.LASF62
 3086 094e 01       		.byte	0x1
 3087 094f 1B       		.byte	0x1b
 3088 0950 41000000 		.4byte	0x41
 3089 0954 1A       		.uleb128 0x1a
 3090 0955 3A050000 		.4byte	.LASF63
 3091 0959 01       		.byte	0x1
 3092 095a 1C       		.byte	0x1c
 3093 095b 41000000 		.4byte	0x41
 3094 095f 1A       		.uleb128 0x1a
 3095 0960 49040000 		.4byte	.LASF28
 3096 0964 01       		.byte	0x1
 3097 0965 1D       		.byte	0x1d
 3098 0966 76000000 		.4byte	0x76
 3099 096a 1A       		.uleb128 0x1a
 3100 096b CC030000 		.4byte	.LASF29
 3101 096f 01       		.byte	0x1
 3102 0970 1E       		.byte	0x1e
 3103 0971 76000000 		.4byte	0x76
 3104 0975 1A       		.uleb128 0x1a
 3105 0976 A7060000 		.4byte	.LASF30
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccrHJ3zm.s 			page 63


 3106 097a 01       		.byte	0x1
 3107 097b 1F       		.byte	0x1f
 3108 097c 76000000 		.4byte	0x76
 3109 0980 1A       		.uleb128 0x1a
 3110 0981 EC050000 		.4byte	.LASF31
 3111 0985 01       		.byte	0x1
 3112 0986 20       		.byte	0x20
 3113 0987 76000000 		.4byte	0x76
 3114 098b 1A       		.uleb128 0x1a
 3115 098c CA000000 		.4byte	.LASF64
 3116 0990 01       		.byte	0x1
 3117 0991 21       		.byte	0x21
 3118 0992 76000000 		.4byte	0x76
 3119 0996 1A       		.uleb128 0x1a
 3120 0997 00000000 		.4byte	.LASF65
 3121 099b 01       		.byte	0x1
 3122 099c 22       		.byte	0x22
 3123 099d 76000000 		.4byte	0x76
 3124 09a1 1A       		.uleb128 0x1a
 3125 09a2 9D010000 		.4byte	.LASF66
 3126 09a6 01       		.byte	0x1
 3127 09a7 26       		.byte	0x26
 3128 09a8 F1080000 		.4byte	0x8f1
 3129 09ac 1A       		.uleb128 0x1a
 3130 09ad A2000000 		.4byte	.LASF17
 3131 09b1 01       		.byte	0x1
 3132 09b2 2D       		.byte	0x2d
 3133 09b3 76000000 		.4byte	0x76
 3134 09b7 1A       		.uleb128 0x1a
 3135 09b8 83020000 		.4byte	.LASF18
 3136 09bc 01       		.byte	0x1
 3137 09bd 2E       		.byte	0x2e
 3138 09be 76000000 		.4byte	0x76
 3139 09c2 1A       		.uleb128 0x1a
 3140 09c3 5F000000 		.4byte	.LASF21
 3141 09c7 01       		.byte	0x1
 3142 09c8 2F       		.byte	0x2f
 3143 09c9 76000000 		.4byte	0x76
 3144 09cd 1A       		.uleb128 0x1a
 3145 09ce B8010000 		.4byte	.LASF22
 3146 09d2 01       		.byte	0x1
 3147 09d3 30       		.byte	0x30
 3148 09d4 76000000 		.4byte	0x76
 3149 09d8 1A       		.uleb128 0x1a
 3150 09d9 C9050000 		.4byte	.LASF67
 3151 09dd 01       		.byte	0x1
 3152 09de 33       		.byte	0x33
 3153 09df 41000000 		.4byte	0x41
 3154 09e3 1B       		.uleb128 0x1b
 3155 09e4 636F7300 		.ascii	"cos\000"
 3156 09e8 636F7300 		.ascii	"cos\000"
 3157 09ec 06       		.byte	0x6
 3158 09ed 6E       		.byte	0x6e
 3159 09ee 1B       		.uleb128 0x1b
 3160 09ef 73696E00 		.ascii	"sin\000"
 3161 09f3 73696E00 		.ascii	"sin\000"
 3162 09f7 06       		.byte	0x6
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccrHJ3zm.s 			page 64


 3163 09f8 6F       		.byte	0x6f
 3164 09f9 1C       		.uleb128 0x1c
 3165 09fa C5060000 		.4byte	.LASF68
 3166 09fe C5060000 		.4byte	.LASF68
 3167 0a02 07       		.byte	0x7
 3168 0a03 5D       		.byte	0x5d
 3169 0a04 1C       		.uleb128 0x1c
 3170 0a05 67030000 		.4byte	.LASF69
 3171 0a09 67030000 		.4byte	.LASF69
 3172 0a0d 08       		.byte	0x8
 3173 0a0e 5D       		.byte	0x5d
 3174 0a0f 1C       		.uleb128 0x1c
 3175 0a10 6C010000 		.4byte	.LASF70
 3176 0a14 6C010000 		.4byte	.LASF70
 3177 0a18 07       		.byte	0x7
 3178 0a19 5A       		.byte	0x5a
 3179 0a1a 1C       		.uleb128 0x1c
 3180 0a1b 9D040000 		.4byte	.LASF71
 3181 0a1f 9D040000 		.4byte	.LASF71
 3182 0a23 08       		.byte	0x8
 3183 0a24 5A       		.byte	0x5a
 3184 0a25 1C       		.uleb128 0x1c
 3185 0a26 32010000 		.4byte	.LASF72
 3186 0a2a 32010000 		.4byte	.LASF72
 3187 0a2e 09       		.byte	0x9
 3188 0a2f C7       		.byte	0xc7
 3189 0a30 1C       		.uleb128 0x1c
 3190 0a31 FA010000 		.4byte	.LASF73
 3191 0a35 FA010000 		.4byte	.LASF73
 3192 0a39 0A       		.byte	0xa
 3193 0a3a C7       		.byte	0xc7
 3194 0a3b 1C       		.uleb128 0x1c
 3195 0a3c 4F010000 		.4byte	.LASF74
 3196 0a40 4F010000 		.4byte	.LASF74
 3197 0a44 09       		.byte	0x9
 3198 0a45 CA       		.byte	0xca
 3199 0a46 1C       		.uleb128 0x1c
 3200 0a47 17020000 		.4byte	.LASF75
 3201 0a4b 17020000 		.4byte	.LASF75
 3202 0a4f 0A       		.byte	0xa
 3203 0a50 CA       		.byte	0xca
 3204 0a51 1C       		.uleb128 0x1c
 3205 0a52 AD060000 		.4byte	.LASF76
 3206 0a56 AD060000 		.4byte	.LASF76
 3207 0a5a 0B       		.byte	0xb
 3208 0a5b 5A       		.byte	0x5a
 3209 0a5c 1C       		.uleb128 0x1c
 3210 0a5d E7020000 		.4byte	.LASF77
 3211 0a61 E7020000 		.4byte	.LASF77
 3212 0a65 07       		.byte	0x7
 3213 0a66 5F       		.byte	0x5f
 3214 0a67 1C       		.uleb128 0x1c
 3215 0a68 3C000000 		.4byte	.LASF78
 3216 0a6c 3C000000 		.4byte	.LASF78
 3217 0a70 08       		.byte	0x8
 3218 0a71 5F       		.byte	0x5f
 3219 0a72 1C       		.uleb128 0x1c
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccrHJ3zm.s 			page 65


 3220 0a73 F6000000 		.4byte	.LASF79
 3221 0a77 F6000000 		.4byte	.LASF79
 3222 0a7b 07       		.byte	0x7
 3223 0a7c 4F       		.byte	0x4f
 3224 0a7d 1C       		.uleb128 0x1c
 3225 0a7e CF010000 		.4byte	.LASF80
 3226 0a82 CF010000 		.4byte	.LASF80
 3227 0a86 08       		.byte	0x8
 3228 0a87 4F       		.byte	0x4f
 3229 0a88 1D       		.uleb128 0x1d
 3230 0a89 13030000 		.4byte	.LASF81
 3231 0a8d 13030000 		.4byte	.LASF81
 3232 0a91 06       		.byte	0x6
 3233 0a92 4B01     		.2byte	0x14b
 3234 0a94 1B       		.uleb128 0x1b
 3235 0a95 74616E00 		.ascii	"tan\000"
 3236 0a99 74616E00 		.ascii	"tan\000"
 3237 0a9d 06       		.byte	0x6
 3238 0a9e 70       		.byte	0x70
 3239 0a9f 1C       		.uleb128 0x1c
 3240 0aa0 C1040000 		.4byte	.LASF82
 3241 0aa4 C1040000 		.4byte	.LASF82
 3242 0aa8 07       		.byte	0x7
 3243 0aa9 50       		.byte	0x50
 3244 0aaa 1C       		.uleb128 0x1c
 3245 0aab E4040000 		.4byte	.LASF83
 3246 0aaf E4040000 		.4byte	.LASF83
 3247 0ab3 0C       		.byte	0xc
 3248 0ab4 8B       		.byte	0x8b
 3249 0ab5 1C       		.uleb128 0x1c
 3250 0ab6 61040000 		.4byte	.LASF84
 3251 0aba 61040000 		.4byte	.LASF84
 3252 0abe 07       		.byte	0x7
 3253 0abf 52       		.byte	0x52
 3254 0ac0 1C       		.uleb128 0x1c
 3255 0ac1 1D040000 		.4byte	.LASF85
 3256 0ac5 1D040000 		.4byte	.LASF85
 3257 0ac9 08       		.byte	0x8
 3258 0aca 50       		.byte	0x50
 3259 0acb 1C       		.uleb128 0x1c
 3260 0acc 02050000 		.4byte	.LASF86
 3261 0ad0 02050000 		.4byte	.LASF86
 3262 0ad4 08       		.byte	0x8
 3263 0ad5 52       		.byte	0x52
 3264 0ad6 00       		.byte	0
 3265              		.section	.debug_abbrev,"",%progbits
 3266              	.Ldebug_abbrev0:
 3267 0000 01       		.uleb128 0x1
 3268 0001 11       		.uleb128 0x11
 3269 0002 01       		.byte	0x1
 3270 0003 25       		.uleb128 0x25
 3271 0004 0E       		.uleb128 0xe
 3272 0005 13       		.uleb128 0x13
 3273 0006 0B       		.uleb128 0xb
 3274 0007 03       		.uleb128 0x3
 3275 0008 0E       		.uleb128 0xe
 3276 0009 1B       		.uleb128 0x1b
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccrHJ3zm.s 			page 66


 3277 000a 0E       		.uleb128 0xe
 3278 000b 55       		.uleb128 0x55
 3279 000c 17       		.uleb128 0x17
 3280 000d 11       		.uleb128 0x11
 3281 000e 01       		.uleb128 0x1
 3282 000f 10       		.uleb128 0x10
 3283 0010 17       		.uleb128 0x17
 3284 0011 00       		.byte	0
 3285 0012 00       		.byte	0
 3286 0013 02       		.uleb128 0x2
 3287 0014 24       		.uleb128 0x24
 3288 0015 00       		.byte	0
 3289 0016 0B       		.uleb128 0xb
 3290 0017 0B       		.uleb128 0xb
 3291 0018 3E       		.uleb128 0x3e
 3292 0019 0B       		.uleb128 0xb
 3293 001a 03       		.uleb128 0x3
 3294 001b 0E       		.uleb128 0xe
 3295 001c 00       		.byte	0
 3296 001d 00       		.byte	0
 3297 001e 03       		.uleb128 0x3
 3298 001f 16       		.uleb128 0x16
 3299 0020 00       		.byte	0
 3300 0021 03       		.uleb128 0x3
 3301 0022 0E       		.uleb128 0xe
 3302 0023 3A       		.uleb128 0x3a
 3303 0024 0B       		.uleb128 0xb
 3304 0025 3B       		.uleb128 0x3b
 3305 0026 0B       		.uleb128 0xb
 3306 0027 49       		.uleb128 0x49
 3307 0028 13       		.uleb128 0x13
 3308 0029 00       		.byte	0
 3309 002a 00       		.byte	0
 3310 002b 04       		.uleb128 0x4
 3311 002c 24       		.uleb128 0x24
 3312 002d 00       		.byte	0
 3313 002e 0B       		.uleb128 0xb
 3314 002f 0B       		.uleb128 0xb
 3315 0030 3E       		.uleb128 0x3e
 3316 0031 0B       		.uleb128 0xb
 3317 0032 03       		.uleb128 0x3
 3318 0033 08       		.uleb128 0x8
 3319 0034 00       		.byte	0
 3320 0035 00       		.byte	0
 3321 0036 05       		.uleb128 0x5
 3322 0037 2E       		.uleb128 0x2e
 3323 0038 01       		.byte	0x1
 3324 0039 3F       		.uleb128 0x3f
 3325 003a 19       		.uleb128 0x19
 3326 003b 03       		.uleb128 0x3
 3327 003c 0E       		.uleb128 0xe
 3328 003d 3A       		.uleb128 0x3a
 3329 003e 0B       		.uleb128 0xb
 3330 003f 3B       		.uleb128 0x3b
 3331 0040 0B       		.uleb128 0xb
 3332 0041 27       		.uleb128 0x27
 3333 0042 19       		.uleb128 0x19
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccrHJ3zm.s 			page 67


 3334 0043 11       		.uleb128 0x11
 3335 0044 01       		.uleb128 0x1
 3336 0045 12       		.uleb128 0x12
 3337 0046 06       		.uleb128 0x6
 3338 0047 40       		.uleb128 0x40
 3339 0048 18       		.uleb128 0x18
 3340 0049 9642     		.uleb128 0x2116
 3341 004b 19       		.uleb128 0x19
 3342 004c 01       		.uleb128 0x1
 3343 004d 13       		.uleb128 0x13
 3344 004e 00       		.byte	0
 3345 004f 00       		.byte	0
 3346 0050 06       		.uleb128 0x6
 3347 0051 05       		.uleb128 0x5
 3348 0052 00       		.byte	0
 3349 0053 03       		.uleb128 0x3
 3350 0054 0E       		.uleb128 0xe
 3351 0055 3A       		.uleb128 0x3a
 3352 0056 0B       		.uleb128 0xb
 3353 0057 3B       		.uleb128 0x3b
 3354 0058 0B       		.uleb128 0xb
 3355 0059 49       		.uleb128 0x49
 3356 005a 13       		.uleb128 0x13
 3357 005b 02       		.uleb128 0x2
 3358 005c 17       		.uleb128 0x17
 3359 005d 00       		.byte	0
 3360 005e 00       		.byte	0
 3361 005f 07       		.uleb128 0x7
 3362 0060 34       		.uleb128 0x34
 3363 0061 00       		.byte	0
 3364 0062 03       		.uleb128 0x3
 3365 0063 0E       		.uleb128 0xe
 3366 0064 3A       		.uleb128 0x3a
 3367 0065 0B       		.uleb128 0xb
 3368 0066 3B       		.uleb128 0x3b
 3369 0067 0B       		.uleb128 0xb
 3370 0068 49       		.uleb128 0x49
 3371 0069 13       		.uleb128 0x13
 3372 006a 02       		.uleb128 0x2
 3373 006b 17       		.uleb128 0x17
 3374 006c 00       		.byte	0
 3375 006d 00       		.byte	0
 3376 006e 08       		.uleb128 0x8
 3377 006f 898201   		.uleb128 0x4109
 3378 0072 00       		.byte	0
 3379 0073 11       		.uleb128 0x11
 3380 0074 01       		.uleb128 0x1
 3381 0075 31       		.uleb128 0x31
 3382 0076 13       		.uleb128 0x13
 3383 0077 00       		.byte	0
 3384 0078 00       		.byte	0
 3385 0079 09       		.uleb128 0x9
 3386 007a 2E       		.uleb128 0x2e
 3387 007b 01       		.byte	0x1
 3388 007c 3F       		.uleb128 0x3f
 3389 007d 19       		.uleb128 0x19
 3390 007e 03       		.uleb128 0x3
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccrHJ3zm.s 			page 68


 3391 007f 0E       		.uleb128 0xe
 3392 0080 3A       		.uleb128 0x3a
 3393 0081 0B       		.uleb128 0xb
 3394 0082 3B       		.uleb128 0x3b
 3395 0083 0B       		.uleb128 0xb
 3396 0084 27       		.uleb128 0x27
 3397 0085 19       		.uleb128 0x19
 3398 0086 11       		.uleb128 0x11
 3399 0087 01       		.uleb128 0x1
 3400 0088 12       		.uleb128 0x12
 3401 0089 06       		.uleb128 0x6
 3402 008a 40       		.uleb128 0x40
 3403 008b 18       		.uleb128 0x18
 3404 008c 9742     		.uleb128 0x2117
 3405 008e 19       		.uleb128 0x19
 3406 008f 01       		.uleb128 0x1
 3407 0090 13       		.uleb128 0x13
 3408 0091 00       		.byte	0
 3409 0092 00       		.byte	0
 3410 0093 0A       		.uleb128 0xa
 3411 0094 0B       		.uleb128 0xb
 3412 0095 01       		.byte	0x1
 3413 0096 11       		.uleb128 0x11
 3414 0097 01       		.uleb128 0x1
 3415 0098 12       		.uleb128 0x12
 3416 0099 06       		.uleb128 0x6
 3417 009a 00       		.byte	0
 3418 009b 00       		.byte	0
 3419 009c 0B       		.uleb128 0xb
 3420 009d 898201   		.uleb128 0x4109
 3421 00a0 01       		.byte	0x1
 3422 00a1 11       		.uleb128 0x11
 3423 00a2 01       		.uleb128 0x1
 3424 00a3 31       		.uleb128 0x31
 3425 00a4 13       		.uleb128 0x13
 3426 00a5 01       		.uleb128 0x1
 3427 00a6 13       		.uleb128 0x13
 3428 00a7 00       		.byte	0
 3429 00a8 00       		.byte	0
 3430 00a9 0C       		.uleb128 0xc
 3431 00aa 8A8201   		.uleb128 0x410a
 3432 00ad 00       		.byte	0
 3433 00ae 02       		.uleb128 0x2
 3434 00af 18       		.uleb128 0x18
 3435 00b0 9142     		.uleb128 0x2111
 3436 00b2 18       		.uleb128 0x18
 3437 00b3 00       		.byte	0
 3438 00b4 00       		.byte	0
 3439 00b5 0D       		.uleb128 0xd
 3440 00b6 898201   		.uleb128 0x4109
 3441 00b9 01       		.byte	0x1
 3442 00ba 11       		.uleb128 0x11
 3443 00bb 01       		.uleb128 0x1
 3444 00bc 31       		.uleb128 0x31
 3445 00bd 13       		.uleb128 0x13
 3446 00be 00       		.byte	0
 3447 00bf 00       		.byte	0
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccrHJ3zm.s 			page 69


 3448 00c0 0E       		.uleb128 0xe
 3449 00c1 34       		.uleb128 0x34
 3450 00c2 00       		.byte	0
 3451 00c3 03       		.uleb128 0x3
 3452 00c4 0E       		.uleb128 0xe
 3453 00c5 3A       		.uleb128 0x3a
 3454 00c6 0B       		.uleb128 0xb
 3455 00c7 3B       		.uleb128 0x3b
 3456 00c8 0B       		.uleb128 0xb
 3457 00c9 49       		.uleb128 0x49
 3458 00ca 13       		.uleb128 0x13
 3459 00cb 1C       		.uleb128 0x1c
 3460 00cc 05       		.uleb128 0x5
 3461 00cd 00       		.byte	0
 3462 00ce 00       		.byte	0
 3463 00cf 0F       		.uleb128 0xf
 3464 00d0 2E       		.uleb128 0x2e
 3465 00d1 01       		.byte	0x1
 3466 00d2 3F       		.uleb128 0x3f
 3467 00d3 19       		.uleb128 0x19
 3468 00d4 03       		.uleb128 0x3
 3469 00d5 0E       		.uleb128 0xe
 3470 00d6 3A       		.uleb128 0x3a
 3471 00d7 0B       		.uleb128 0xb
 3472 00d8 3B       		.uleb128 0x3b
 3473 00d9 05       		.uleb128 0x5
 3474 00da 27       		.uleb128 0x27
 3475 00db 19       		.uleb128 0x19
 3476 00dc 11       		.uleb128 0x11
 3477 00dd 01       		.uleb128 0x1
 3478 00de 12       		.uleb128 0x12
 3479 00df 06       		.uleb128 0x6
 3480 00e0 40       		.uleb128 0x40
 3481 00e1 18       		.uleb128 0x18
 3482 00e2 9642     		.uleb128 0x2116
 3483 00e4 19       		.uleb128 0x19
 3484 00e5 01       		.uleb128 0x1
 3485 00e6 13       		.uleb128 0x13
 3486 00e7 00       		.byte	0
 3487 00e8 00       		.byte	0
 3488 00e9 10       		.uleb128 0x10
 3489 00ea 05       		.uleb128 0x5
 3490 00eb 00       		.byte	0
 3491 00ec 03       		.uleb128 0x3
 3492 00ed 0E       		.uleb128 0xe
 3493 00ee 3A       		.uleb128 0x3a
 3494 00ef 0B       		.uleb128 0xb
 3495 00f0 3B       		.uleb128 0x3b
 3496 00f1 05       		.uleb128 0x5
 3497 00f2 49       		.uleb128 0x49
 3498 00f3 13       		.uleb128 0x13
 3499 00f4 02       		.uleb128 0x2
 3500 00f5 17       		.uleb128 0x17
 3501 00f6 00       		.byte	0
 3502 00f7 00       		.byte	0
 3503 00f8 11       		.uleb128 0x11
 3504 00f9 34       		.uleb128 0x34
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccrHJ3zm.s 			page 70


 3505 00fa 00       		.byte	0
 3506 00fb 03       		.uleb128 0x3
 3507 00fc 0E       		.uleb128 0xe
 3508 00fd 3A       		.uleb128 0x3a
 3509 00fe 0B       		.uleb128 0xb
 3510 00ff 3B       		.uleb128 0x3b
 3511 0100 05       		.uleb128 0x5
 3512 0101 49       		.uleb128 0x49
 3513 0102 13       		.uleb128 0x13
 3514 0103 02       		.uleb128 0x2
 3515 0104 17       		.uleb128 0x17
 3516 0105 00       		.byte	0
 3517 0106 00       		.byte	0
 3518 0107 12       		.uleb128 0x12
 3519 0108 34       		.uleb128 0x34
 3520 0109 00       		.byte	0
 3521 010a 03       		.uleb128 0x3
 3522 010b 0E       		.uleb128 0xe
 3523 010c 3A       		.uleb128 0x3a
 3524 010d 0B       		.uleb128 0xb
 3525 010e 3B       		.uleb128 0x3b
 3526 010f 05       		.uleb128 0x5
 3527 0110 49       		.uleb128 0x49
 3528 0111 13       		.uleb128 0x13
 3529 0112 1C       		.uleb128 0x1c
 3530 0113 05       		.uleb128 0x5
 3531 0114 00       		.byte	0
 3532 0115 00       		.byte	0
 3533 0116 13       		.uleb128 0x13
 3534 0117 0F       		.uleb128 0xf
 3535 0118 00       		.byte	0
 3536 0119 0B       		.uleb128 0xb
 3537 011a 0B       		.uleb128 0xb
 3538 011b 49       		.uleb128 0x49
 3539 011c 13       		.uleb128 0x13
 3540 011d 00       		.byte	0
 3541 011e 00       		.byte	0
 3542 011f 14       		.uleb128 0x14
 3543 0120 2E       		.uleb128 0x2e
 3544 0121 01       		.byte	0x1
 3545 0122 3F       		.uleb128 0x3f
 3546 0123 19       		.uleb128 0x19
 3547 0124 03       		.uleb128 0x3
 3548 0125 0E       		.uleb128 0xe
 3549 0126 3A       		.uleb128 0x3a
 3550 0127 0B       		.uleb128 0xb
 3551 0128 3B       		.uleb128 0x3b
 3552 0129 05       		.uleb128 0x5
 3553 012a 27       		.uleb128 0x27
 3554 012b 19       		.uleb128 0x19
 3555 012c 11       		.uleb128 0x11
 3556 012d 01       		.uleb128 0x1
 3557 012e 12       		.uleb128 0x12
 3558 012f 06       		.uleb128 0x6
 3559 0130 40       		.uleb128 0x40
 3560 0131 18       		.uleb128 0x18
 3561 0132 9742     		.uleb128 0x2117
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccrHJ3zm.s 			page 71


 3562 0134 19       		.uleb128 0x19
 3563 0135 01       		.uleb128 0x1
 3564 0136 13       		.uleb128 0x13
 3565 0137 00       		.byte	0
 3566 0138 00       		.byte	0
 3567 0139 15       		.uleb128 0x15
 3568 013a 34       		.uleb128 0x34
 3569 013b 00       		.byte	0
 3570 013c 03       		.uleb128 0x3
 3571 013d 0E       		.uleb128 0xe
 3572 013e 3A       		.uleb128 0x3a
 3573 013f 0B       		.uleb128 0xb
 3574 0140 3B       		.uleb128 0x3b
 3575 0141 05       		.uleb128 0x5
 3576 0142 49       		.uleb128 0x49
 3577 0143 13       		.uleb128 0x13
 3578 0144 3F       		.uleb128 0x3f
 3579 0145 19       		.uleb128 0x19
 3580 0146 3C       		.uleb128 0x3c
 3581 0147 19       		.uleb128 0x19
 3582 0148 00       		.byte	0
 3583 0149 00       		.byte	0
 3584 014a 16       		.uleb128 0x16
 3585 014b 35       		.uleb128 0x35
 3586 014c 00       		.byte	0
 3587 014d 49       		.uleb128 0x49
 3588 014e 13       		.uleb128 0x13
 3589 014f 00       		.byte	0
 3590 0150 00       		.byte	0
 3591 0151 17       		.uleb128 0x17
 3592 0152 34       		.uleb128 0x34
 3593 0153 00       		.byte	0
 3594 0154 03       		.uleb128 0x3
 3595 0155 0E       		.uleb128 0xe
 3596 0156 3A       		.uleb128 0x3a
 3597 0157 0B       		.uleb128 0xb
 3598 0158 3B       		.uleb128 0x3b
 3599 0159 0B       		.uleb128 0xb
 3600 015a 49       		.uleb128 0x49
 3601 015b 13       		.uleb128 0x13
 3602 015c 3F       		.uleb128 0x3f
 3603 015d 19       		.uleb128 0x19
 3604 015e 02       		.uleb128 0x2
 3605 015f 18       		.uleb128 0x18
 3606 0160 00       		.byte	0
 3607 0161 00       		.byte	0
 3608 0162 18       		.uleb128 0x18
 3609 0163 01       		.uleb128 0x1
 3610 0164 01       		.byte	0x1
 3611 0165 49       		.uleb128 0x49
 3612 0166 13       		.uleb128 0x13
 3613 0167 01       		.uleb128 0x1
 3614 0168 13       		.uleb128 0x13
 3615 0169 00       		.byte	0
 3616 016a 00       		.byte	0
 3617 016b 19       		.uleb128 0x19
 3618 016c 21       		.uleb128 0x21
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccrHJ3zm.s 			page 72


 3619 016d 00       		.byte	0
 3620 016e 49       		.uleb128 0x49
 3621 016f 13       		.uleb128 0x13
 3622 0170 2F       		.uleb128 0x2f
 3623 0171 0B       		.uleb128 0xb
 3624 0172 00       		.byte	0
 3625 0173 00       		.byte	0
 3626 0174 1A       		.uleb128 0x1a
 3627 0175 34       		.uleb128 0x34
 3628 0176 00       		.byte	0
 3629 0177 03       		.uleb128 0x3
 3630 0178 0E       		.uleb128 0xe
 3631 0179 3A       		.uleb128 0x3a
 3632 017a 0B       		.uleb128 0xb
 3633 017b 3B       		.uleb128 0x3b
 3634 017c 0B       		.uleb128 0xb
 3635 017d 49       		.uleb128 0x49
 3636 017e 13       		.uleb128 0x13
 3637 017f 3F       		.uleb128 0x3f
 3638 0180 19       		.uleb128 0x19
 3639 0181 3C       		.uleb128 0x3c
 3640 0182 19       		.uleb128 0x19
 3641 0183 00       		.byte	0
 3642 0184 00       		.byte	0
 3643 0185 1B       		.uleb128 0x1b
 3644 0186 2E       		.uleb128 0x2e
 3645 0187 00       		.byte	0
 3646 0188 3F       		.uleb128 0x3f
 3647 0189 19       		.uleb128 0x19
 3648 018a 3C       		.uleb128 0x3c
 3649 018b 19       		.uleb128 0x19
 3650 018c 6E       		.uleb128 0x6e
 3651 018d 08       		.uleb128 0x8
 3652 018e 03       		.uleb128 0x3
 3653 018f 08       		.uleb128 0x8
 3654 0190 3A       		.uleb128 0x3a
 3655 0191 0B       		.uleb128 0xb
 3656 0192 3B       		.uleb128 0x3b
 3657 0193 0B       		.uleb128 0xb
 3658 0194 00       		.byte	0
 3659 0195 00       		.byte	0
 3660 0196 1C       		.uleb128 0x1c
 3661 0197 2E       		.uleb128 0x2e
 3662 0198 00       		.byte	0
 3663 0199 3F       		.uleb128 0x3f
 3664 019a 19       		.uleb128 0x19
 3665 019b 3C       		.uleb128 0x3c
 3666 019c 19       		.uleb128 0x19
 3667 019d 6E       		.uleb128 0x6e
 3668 019e 0E       		.uleb128 0xe
 3669 019f 03       		.uleb128 0x3
 3670 01a0 0E       		.uleb128 0xe
 3671 01a1 3A       		.uleb128 0x3a
 3672 01a2 0B       		.uleb128 0xb
 3673 01a3 3B       		.uleb128 0x3b
 3674 01a4 0B       		.uleb128 0xb
 3675 01a5 00       		.byte	0
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccrHJ3zm.s 			page 73


 3676 01a6 00       		.byte	0
 3677 01a7 1D       		.uleb128 0x1d
 3678 01a8 2E       		.uleb128 0x2e
 3679 01a9 00       		.byte	0
 3680 01aa 3F       		.uleb128 0x3f
 3681 01ab 19       		.uleb128 0x19
 3682 01ac 3C       		.uleb128 0x3c
 3683 01ad 19       		.uleb128 0x19
 3684 01ae 6E       		.uleb128 0x6e
 3685 01af 0E       		.uleb128 0xe
 3686 01b0 03       		.uleb128 0x3
 3687 01b1 0E       		.uleb128 0xe
 3688 01b2 3A       		.uleb128 0x3a
 3689 01b3 0B       		.uleb128 0xb
 3690 01b4 3B       		.uleb128 0x3b
 3691 01b5 05       		.uleb128 0x5
 3692 01b6 00       		.byte	0
 3693 01b7 00       		.byte	0
 3694 01b8 00       		.byte	0
 3695              		.section	.debug_loc,"",%progbits
 3696              	.Ldebug_loc0:
 3697              	.LLST0:
 3698 0000 00000000 		.4byte	.LVL0
 3699 0004 0E000000 		.4byte	.LVL1
 3700 0008 0100     		.2byte	0x1
 3701 000a 50       		.byte	0x50
 3702 000b 0E000000 		.4byte	.LVL1
 3703 000f 4C000000 		.4byte	.LVL14
 3704 0013 0100     		.2byte	0x1
 3705 0015 57       		.byte	0x57
 3706 0016 4C000000 		.4byte	.LVL14
 3707 001a B0000000 		.4byte	.LVL25
 3708 001e 0400     		.2byte	0x4
 3709 0020 F3       		.byte	0xf3
 3710 0021 01       		.uleb128 0x1
 3711 0022 50       		.byte	0x50
 3712 0023 9F       		.byte	0x9f
 3713 0024 B0000000 		.4byte	.LVL25
 3714 0028 DC000000 		.4byte	.LVL34
 3715 002c 0100     		.2byte	0x1
 3716 002e 57       		.byte	0x57
 3717 002f DC000000 		.4byte	.LVL34
 3718 0033 5C010000 		.4byte	.LFE64
 3719 0037 0400     		.2byte	0x4
 3720 0039 F3       		.byte	0xf3
 3721 003a 01       		.uleb128 0x1
 3722 003b 50       		.byte	0x50
 3723 003c 9F       		.byte	0x9f
 3724 003d 00000000 		.4byte	0
 3725 0041 00000000 		.4byte	0
 3726              	.LLST1:
 3727 0045 00000000 		.4byte	.LVL0
 3728 0049 11000000 		.4byte	.LVL2-1
 3729 004d 0100     		.2byte	0x1
 3730 004f 51       		.byte	0x51
 3731 0050 11000000 		.4byte	.LVL2-1
 3732 0054 40000000 		.4byte	.LVL10
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccrHJ3zm.s 			page 74


 3733 0058 0100     		.2byte	0x1
 3734 005a 54       		.byte	0x54
 3735 005b 40000000 		.4byte	.LVL10
 3736 005f B0000000 		.4byte	.LVL25
 3737 0063 0400     		.2byte	0x4
 3738 0065 F3       		.byte	0xf3
 3739 0066 01       		.uleb128 0x1
 3740 0067 51       		.byte	0x51
 3741 0068 9F       		.byte	0x9f
 3742 0069 B0000000 		.4byte	.LVL25
 3743 006d C6000000 		.4byte	.LVL29
 3744 0071 0100     		.2byte	0x1
 3745 0073 54       		.byte	0x54
 3746 0074 C6000000 		.4byte	.LVL29
 3747 0078 5C010000 		.4byte	.LFE64
 3748 007c 0400     		.2byte	0x4
 3749 007e F3       		.byte	0xf3
 3750 007f 01       		.uleb128 0x1
 3751 0080 51       		.byte	0x51
 3752 0081 9F       		.byte	0x9f
 3753 0082 00000000 		.4byte	0
 3754 0086 00000000 		.4byte	0
 3755              	.LLST2:
 3756 008a 00000000 		.4byte	.LVL0
 3757 008e 11000000 		.4byte	.LVL2-1
 3758 0092 0100     		.2byte	0x1
 3759 0094 52       		.byte	0x52
 3760 0095 11000000 		.4byte	.LVL2-1
 3761 0099 42000000 		.4byte	.LVL11
 3762 009d 0100     		.2byte	0x1
 3763 009f 55       		.byte	0x55
 3764 00a0 42000000 		.4byte	.LVL11
 3765 00a4 B0000000 		.4byte	.LVL25
 3766 00a8 0400     		.2byte	0x4
 3767 00aa F3       		.byte	0xf3
 3768 00ab 01       		.uleb128 0x1
 3769 00ac 52       		.byte	0x52
 3770 00ad 9F       		.byte	0x9f
 3771 00ae B0000000 		.4byte	.LVL25
 3772 00b2 C8000000 		.4byte	.LVL30
 3773 00b6 0100     		.2byte	0x1
 3774 00b8 55       		.byte	0x55
 3775 00b9 C8000000 		.4byte	.LVL30
 3776 00bd 5C010000 		.4byte	.LFE64
 3777 00c1 0400     		.2byte	0x4
 3778 00c3 F3       		.byte	0xf3
 3779 00c4 01       		.uleb128 0x1
 3780 00c5 52       		.byte	0x52
 3781 00c6 9F       		.byte	0x9f
 3782 00c7 00000000 		.4byte	0
 3783 00cb 00000000 		.4byte	0
 3784              	.LLST3:
 3785 00cf 2A000000 		.4byte	.LVL6
 3786 00d3 30000000 		.4byte	.LVL7
 3787 00d7 0100     		.2byte	0x1
 3788 00d9 50       		.byte	0x50
 3789 00da 30000000 		.4byte	.LVL7
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccrHJ3zm.s 			page 75


 3790 00de 4A000000 		.4byte	.LVL13
 3791 00e2 0100     		.2byte	0x1
 3792 00e4 56       		.byte	0x56
 3793 00e5 B0000000 		.4byte	.LVL25
 3794 00e9 B6000000 		.4byte	.LVL26
 3795 00ed 0100     		.2byte	0x1
 3796 00ef 50       		.byte	0x50
 3797 00f0 B6000000 		.4byte	.LVL26
 3798 00f4 DA000000 		.4byte	.LVL33
 3799 00f8 0100     		.2byte	0x1
 3800 00fa 56       		.byte	0x56
 3801 00fb 00000000 		.4byte	0
 3802 00ff 00000000 		.4byte	0
 3803              	.LLST4:
 3804 0103 00000000 		.4byte	.LVL45
 3805 0107 09000000 		.4byte	.LVL46-1
 3806 010b 0100     		.2byte	0x1
 3807 010d 50       		.byte	0x50
 3808 010e 09000000 		.4byte	.LVL46-1
 3809 0112 78000000 		.4byte	.LFE65
 3810 0116 0400     		.2byte	0x4
 3811 0118 F3       		.byte	0xf3
 3812 0119 01       		.uleb128 0x1
 3813 011a 50       		.byte	0x50
 3814 011b 9F       		.byte	0x9f
 3815 011c 00000000 		.4byte	0
 3816 0120 00000000 		.4byte	0
 3817              	.LLST5:
 3818 0124 00000000 		.4byte	.LVL45
 3819 0128 09000000 		.4byte	.LVL46-1
 3820 012c 0100     		.2byte	0x1
 3821 012e 51       		.byte	0x51
 3822 012f 09000000 		.4byte	.LVL46-1
 3823 0133 68000000 		.4byte	.LVL52
 3824 0137 0100     		.2byte	0x1
 3825 0139 54       		.byte	0x54
 3826 013a 68000000 		.4byte	.LVL52
 3827 013e 78000000 		.4byte	.LFE65
 3828 0142 0400     		.2byte	0x4
 3829 0144 F3       		.byte	0xf3
 3830 0145 01       		.uleb128 0x1
 3831 0146 51       		.byte	0x51
 3832 0147 9F       		.byte	0x9f
 3833 0148 00000000 		.4byte	0
 3834 014c 00000000 		.4byte	0
 3835              	.LLST6:
 3836 0150 00000000 		.4byte	.LVL45
 3837 0154 09000000 		.4byte	.LVL46-1
 3838 0158 0100     		.2byte	0x1
 3839 015a 52       		.byte	0x52
 3840 015b 09000000 		.4byte	.LVL46-1
 3841 015f 68000000 		.4byte	.LVL52
 3842 0163 0100     		.2byte	0x1
 3843 0165 55       		.byte	0x55
 3844 0166 68000000 		.4byte	.LVL52
 3845 016a 78000000 		.4byte	.LFE65
 3846 016e 0400     		.2byte	0x4
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccrHJ3zm.s 			page 76


 3847 0170 F3       		.byte	0xf3
 3848 0171 01       		.uleb128 0x1
 3849 0172 52       		.byte	0x52
 3850 0173 9F       		.byte	0x9f
 3851 0174 00000000 		.4byte	0
 3852 0178 00000000 		.4byte	0
 3853              	.LLST7:
 3854 017c 18000000 		.4byte	.LVL48
 3855 0180 22000000 		.4byte	.LVL49
 3856 0184 0100     		.2byte	0x1
 3857 0186 50       		.byte	0x50
 3858 0187 3C000000 		.4byte	.LVL50
 3859 018b 46000000 		.4byte	.LVL51
 3860 018f 0100     		.2byte	0x1
 3861 0191 50       		.byte	0x50
 3862 0192 00000000 		.4byte	0
 3863 0196 00000000 		.4byte	0
 3864              	.LLST8:
 3865 019a 2A000000 		.4byte	.LVL53
 3866 019e 35000000 		.4byte	.LVL54-1
 3867 01a2 0100     		.2byte	0x1
 3868 01a4 50       		.byte	0x50
 3869 01a5 44000000 		.4byte	.LVL55
 3870 01a9 4F000000 		.4byte	.LVL56-1
 3871 01ad 0100     		.2byte	0x1
 3872 01af 50       		.byte	0x50
 3873 01b0 5E000000 		.4byte	.LVL57
 3874 01b4 69000000 		.4byte	.LVL58-1
 3875 01b8 0100     		.2byte	0x1
 3876 01ba 50       		.byte	0x50
 3877 01bb 00000000 		.4byte	0
 3878 01bf 00000000 		.4byte	0
 3879              	.LLST9:
 3880 01c3 00000000 		.4byte	.LVL61
 3881 01c7 0D000000 		.4byte	.LVL63-1
 3882 01cb 0100     		.2byte	0x1
 3883 01cd 50       		.byte	0x50
 3884 01ce 0D000000 		.4byte	.LVL63-1
 3885 01d2 70000000 		.4byte	.LFE67
 3886 01d6 0600     		.2byte	0x6
 3887 01d8 F3       		.byte	0xf3
 3888 01d9 03       		.uleb128 0x3
 3889 01da F5       		.byte	0xf5
 3890 01db 00       		.uleb128 0
 3891 01dc 25       		.uleb128 0x25
 3892 01dd 9F       		.byte	0x9f
 3893 01de 00000000 		.4byte	0
 3894 01e2 00000000 		.4byte	0
 3895              	.LLST10:
 3896 01e6 00000000 		.4byte	.LVL61
 3897 01ea 0A000000 		.4byte	.LVL62
 3898 01ee 0100     		.2byte	0x1
 3899 01f0 51       		.byte	0x51
 3900 01f1 0A000000 		.4byte	.LVL62
 3901 01f5 68000000 		.4byte	.LVL79
 3902 01f9 0100     		.2byte	0x1
 3903 01fb 55       		.byte	0x55
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccrHJ3zm.s 			page 77


 3904 01fc 68000000 		.4byte	.LVL79
 3905 0200 70000000 		.4byte	.LFE67
 3906 0204 0600     		.2byte	0x6
 3907 0206 F3       		.byte	0xf3
 3908 0207 03       		.uleb128 0x3
 3909 0208 F5       		.byte	0xf5
 3910 0209 01       		.uleb128 0x1
 3911 020a 25       		.uleb128 0x25
 3912 020b 9F       		.byte	0x9f
 3913 020c 00000000 		.4byte	0
 3914 0210 00000000 		.4byte	0
 3915              	.LLST11:
 3916 0214 00000000 		.4byte	.LVL61
 3917 0218 0D000000 		.4byte	.LVL63-1
 3918 021c 0100     		.2byte	0x1
 3919 021e 52       		.byte	0x52
 3920 021f 0D000000 		.4byte	.LVL63-1
 3921 0223 68000000 		.4byte	.LVL79
 3922 0227 0100     		.2byte	0x1
 3923 0229 56       		.byte	0x56
 3924 022a 68000000 		.4byte	.LVL79
 3925 022e 70000000 		.4byte	.LFE67
 3926 0232 0600     		.2byte	0x6
 3927 0234 F3       		.byte	0xf3
 3928 0235 03       		.uleb128 0x3
 3929 0236 F5       		.byte	0xf5
 3930 0237 02       		.uleb128 0x2
 3931 0238 25       		.uleb128 0x25
 3932 0239 9F       		.byte	0x9f
 3933 023a 00000000 		.4byte	0
 3934 023e 00000000 		.4byte	0
 3935              	.LLST12:
 3936 0242 00000000 		.4byte	.LVL61
 3937 0246 0D000000 		.4byte	.LVL63-1
 3938 024a 0100     		.2byte	0x1
 3939 024c 53       		.byte	0x53
 3940 024d 0D000000 		.4byte	.LVL63-1
 3941 0251 68000000 		.4byte	.LVL79
 3942 0255 0100     		.2byte	0x1
 3943 0257 54       		.byte	0x54
 3944 0258 68000000 		.4byte	.LVL79
 3945 025c 70000000 		.4byte	.LFE67
 3946 0260 0600     		.2byte	0x6
 3947 0262 F3       		.byte	0xf3
 3948 0263 03       		.uleb128 0x3
 3949 0264 F5       		.byte	0xf5
 3950 0265 03       		.uleb128 0x3
 3951 0266 25       		.uleb128 0x25
 3952 0267 9F       		.byte	0x9f
 3953 0268 00000000 		.4byte	0
 3954 026c 00000000 		.4byte	0
 3955              	.LLST13:
 3956 0270 2A000000 		.4byte	.LVL80
 3957 0274 34000000 		.4byte	.LVL81
 3958 0278 0100     		.2byte	0x1
 3959 027a 52       		.byte	0x52
 3960 027b 50000000 		.4byte	.LVL82
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccrHJ3zm.s 			page 78


 3961 027f 5A000000 		.4byte	.LVL83
 3962 0283 0100     		.2byte	0x1
 3963 0285 52       		.byte	0x52
 3964 0286 76000000 		.4byte	.LVL84
 3965 028a 80000000 		.4byte	.LVL85
 3966 028e 0100     		.2byte	0x1
 3967 0290 52       		.byte	0x52
 3968 0291 9C000000 		.4byte	.LVL86
 3969 0295 A6000000 		.4byte	.LVL87
 3970 0299 0100     		.2byte	0x1
 3971 029b 52       		.byte	0x52
 3972 029c C6000000 		.4byte	.LVL88
 3973 02a0 D0000000 		.4byte	.LVL89
 3974 02a4 0100     		.2byte	0x1
 3975 02a6 53       		.byte	0x53
 3976 02a7 EC000000 		.4byte	.LVL90
 3977 02ab F6000000 		.4byte	.LVL91
 3978 02af 0100     		.2byte	0x1
 3979 02b1 53       		.byte	0x53
 3980 02b2 12010000 		.4byte	.LVL92
 3981 02b6 1C010000 		.4byte	.LVL93
 3982 02ba 0100     		.2byte	0x1
 3983 02bc 52       		.byte	0x52
 3984 02bd 38010000 		.4byte	.LVL94
 3985 02c1 40010000 		.4byte	.LVL95
 3986 02c5 0100     		.2byte	0x1
 3987 02c7 52       		.byte	0x52
 3988 02c8 00000000 		.4byte	0
 3989 02cc 00000000 		.4byte	0
 3990              	.LLST14:
 3991 02d0 00000000 		.4byte	.LVL102
 3992 02d4 08000000 		.4byte	.LVL103
 3993 02d8 0100     		.2byte	0x1
 3994 02da 50       		.byte	0x50
 3995 02db 08000000 		.4byte	.LVL103
 3996 02df 20000000 		.4byte	.LFE69
 3997 02e3 0100     		.2byte	0x1
 3998 02e5 55       		.byte	0x55
 3999 02e6 00000000 		.4byte	0
 4000 02ea 00000000 		.4byte	0
 4001              	.LLST15:
 4002 02ee 00000000 		.4byte	.LVL102
 4003 02f2 0B000000 		.4byte	.LVL104-1
 4004 02f6 0100     		.2byte	0x1
 4005 02f8 51       		.byte	0x51
 4006 02f9 0B000000 		.4byte	.LVL104-1
 4007 02fd 20000000 		.4byte	.LFE69
 4008 0301 0100     		.2byte	0x1
 4009 0303 54       		.byte	0x54
 4010 0304 00000000 		.4byte	0
 4011 0308 00000000 		.4byte	0
 4012              	.LLST16:
 4013 030c 00000000 		.4byte	.LVL108
 4014 0310 07000000 		.4byte	.LVL109-1
 4015 0314 0100     		.2byte	0x1
 4016 0316 50       		.byte	0x50
 4017 0317 07000000 		.4byte	.LVL109-1
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccrHJ3zm.s 			page 79


 4018 031b C4000000 		.4byte	.LFE70
 4019 031f 0600     		.2byte	0x6
 4020 0321 F3       		.byte	0xf3
 4021 0322 03       		.uleb128 0x3
 4022 0323 F5       		.byte	0xf5
 4023 0324 00       		.uleb128 0
 4024 0325 25       		.uleb128 0x25
 4025 0326 9F       		.byte	0x9f
 4026 0327 00000000 		.4byte	0
 4027 032b 00000000 		.4byte	0
 4028              	.LLST17:
 4029 032f 16000000 		.4byte	.LVL111
 4030 0333 33000000 		.4byte	.LVL112-1
 4031 0337 0100     		.2byte	0x1
 4032 0339 50       		.byte	0x50
 4033 033a 00000000 		.4byte	0
 4034 033e 00000000 		.4byte	0
 4035              	.LLST18:
 4036 0342 00000000 		.4byte	.LVL131
 4037 0346 07000000 		.4byte	.LVL132-1
 4038 034a 0100     		.2byte	0x1
 4039 034c 50       		.byte	0x50
 4040 034d 07000000 		.4byte	.LVL132-1
 4041 0351 C4000000 		.4byte	.LFE72
 4042 0355 0600     		.2byte	0x6
 4043 0357 F3       		.byte	0xf3
 4044 0358 03       		.uleb128 0x3
 4045 0359 F5       		.byte	0xf5
 4046 035a 00       		.uleb128 0
 4047 035b 25       		.uleb128 0x25
 4048 035c 9F       		.byte	0x9f
 4049 035d 00000000 		.4byte	0
 4050 0361 00000000 		.4byte	0
 4051              	.LLST19:
 4052 0365 16000000 		.4byte	.LVL134
 4053 0369 33000000 		.4byte	.LVL135-1
 4054 036d 0100     		.2byte	0x1
 4055 036f 50       		.byte	0x50
 4056 0370 00000000 		.4byte	0
 4057 0374 00000000 		.4byte	0
 4058              	.LLST20:
 4059 0378 00000000 		.4byte	.LVL154
 4060 037c 07000000 		.4byte	.LVL155-1
 4061 0380 0100     		.2byte	0x1
 4062 0382 50       		.byte	0x50
 4063 0383 07000000 		.4byte	.LVL155-1
 4064 0387 CC000000 		.4byte	.LFE74
 4065 038b 0600     		.2byte	0x6
 4066 038d F3       		.byte	0xf3
 4067 038e 03       		.uleb128 0x3
 4068 038f F5       		.byte	0xf5
 4069 0390 00       		.uleb128 0
 4070 0391 25       		.uleb128 0x25
 4071 0392 9F       		.byte	0x9f
 4072 0393 00000000 		.4byte	0
 4073 0397 00000000 		.4byte	0
 4074              	.LLST21:
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccrHJ3zm.s 			page 80


 4075 039b 1A000000 		.4byte	.LVL158
 4076 039f 37000000 		.4byte	.LVL159-1
 4077 03a3 0100     		.2byte	0x1
 4078 03a5 50       		.byte	0x50
 4079 03a6 00000000 		.4byte	0
 4080 03aa 00000000 		.4byte	0
 4081              	.LLST22:
 4082 03ae 00000000 		.4byte	.LVL168
 4083 03b2 07000000 		.4byte	.LVL169-1
 4084 03b6 0100     		.2byte	0x1
 4085 03b8 50       		.byte	0x50
 4086 03b9 07000000 		.4byte	.LVL169-1
 4087 03bd C4000000 		.4byte	.LFE75
 4088 03c1 0600     		.2byte	0x6
 4089 03c3 F3       		.byte	0xf3
 4090 03c4 03       		.uleb128 0x3
 4091 03c5 F5       		.byte	0xf5
 4092 03c6 00       		.uleb128 0
 4093 03c7 25       		.uleb128 0x25
 4094 03c8 9F       		.byte	0x9f
 4095 03c9 00000000 		.4byte	0
 4096 03cd 00000000 		.4byte	0
 4097              	.LLST23:
 4098 03d1 1A000000 		.4byte	.LVL172
 4099 03d5 37000000 		.4byte	.LVL173-1
 4100 03d9 0100     		.2byte	0x1
 4101 03db 50       		.byte	0x50
 4102 03dc 00000000 		.4byte	0
 4103 03e0 00000000 		.4byte	0
 4104              	.LLST24:
 4105 03e4 00000000 		.4byte	.LVL182
 4106 03e8 0A000000 		.4byte	.LVL183
 4107 03ec 0100     		.2byte	0x1
 4108 03ee 50       		.byte	0x50
 4109 03ef 0A000000 		.4byte	.LVL183
 4110 03f3 1C000000 		.4byte	.LVL187
 4111 03f7 0100     		.2byte	0x1
 4112 03f9 54       		.byte	0x54
 4113 03fa 1C000000 		.4byte	.LVL187
 4114 03fe 78000000 		.4byte	.LFE76
 4115 0402 0400     		.2byte	0x4
 4116 0404 F3       		.byte	0xf3
 4117 0405 01       		.uleb128 0x1
 4118 0406 50       		.byte	0x50
 4119 0407 9F       		.byte	0x9f
 4120 0408 00000000 		.4byte	0
 4121 040c 00000000 		.4byte	0
 4122              	.LLST25:
 4123 0410 00000000 		.4byte	.LVL182
 4124 0414 0D000000 		.4byte	.LVL184-1
 4125 0418 0100     		.2byte	0x1
 4126 041a 51       		.byte	0x51
 4127 041b 0D000000 		.4byte	.LVL184-1
 4128 041f 30000000 		.4byte	.LVL190
 4129 0423 0100     		.2byte	0x1
 4130 0425 56       		.byte	0x56
 4131 0426 30000000 		.4byte	.LVL190
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccrHJ3zm.s 			page 81


 4132 042a 78000000 		.4byte	.LFE76
 4133 042e 0400     		.2byte	0x4
 4134 0430 F3       		.byte	0xf3
 4135 0431 01       		.uleb128 0x1
 4136 0432 51       		.byte	0x51
 4137 0433 9F       		.byte	0x9f
 4138 0434 00000000 		.4byte	0
 4139 0438 00000000 		.4byte	0
 4140              	.LLST26:
 4141 043c 42000000 		.4byte	.LVL192
 4142 0440 45000000 		.4byte	.LVL193-1
 4143 0444 0600     		.2byte	0x6
 4144 0446 F5       		.byte	0xf5
 4145 0447 00       		.uleb128 0
 4146 0448 2C       		.uleb128 0x2c
 4147 0449 F7       		.byte	0xf7
 4148 044a 25       		.uleb128 0x25
 4149 044b 9F       		.byte	0x9f
 4150 044c 64000000 		.4byte	.LVL197
 4151 0450 67000000 		.4byte	.LVL198-1
 4152 0454 0600     		.2byte	0x6
 4153 0456 F5       		.byte	0xf5
 4154 0457 00       		.uleb128 0
 4155 0458 2C       		.uleb128 0x2c
 4156 0459 F7       		.byte	0xf7
 4157 045a 25       		.uleb128 0x25
 4158 045b 9F       		.byte	0x9f
 4159 045c 00000000 		.4byte	0
 4160 0460 00000000 		.4byte	0
 4161              	.LLST27:
 4162 0464 00000000 		.4byte	.LVL200
 4163 0468 0A000000 		.4byte	.LVL201
 4164 046c 0100     		.2byte	0x1
 4165 046e 50       		.byte	0x50
 4166 046f 0A000000 		.4byte	.LVL201
 4167 0473 1C000000 		.4byte	.LVL205
 4168 0477 0100     		.2byte	0x1
 4169 0479 54       		.byte	0x54
 4170 047a 1C000000 		.4byte	.LVL205
 4171 047e 78000000 		.4byte	.LFE77
 4172 0482 0400     		.2byte	0x4
 4173 0484 F3       		.byte	0xf3
 4174 0485 01       		.uleb128 0x1
 4175 0486 50       		.byte	0x50
 4176 0487 9F       		.byte	0x9f
 4177 0488 00000000 		.4byte	0
 4178 048c 00000000 		.4byte	0
 4179              	.LLST28:
 4180 0490 00000000 		.4byte	.LVL200
 4181 0494 0D000000 		.4byte	.LVL202-1
 4182 0498 0100     		.2byte	0x1
 4183 049a 51       		.byte	0x51
 4184 049b 0D000000 		.4byte	.LVL202-1
 4185 049f 30000000 		.4byte	.LVL208
 4186 04a3 0100     		.2byte	0x1
 4187 04a5 56       		.byte	0x56
 4188 04a6 30000000 		.4byte	.LVL208
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccrHJ3zm.s 			page 82


 4189 04aa 78000000 		.4byte	.LFE77
 4190 04ae 0400     		.2byte	0x4
 4191 04b0 F3       		.byte	0xf3
 4192 04b1 01       		.uleb128 0x1
 4193 04b2 51       		.byte	0x51
 4194 04b3 9F       		.byte	0x9f
 4195 04b4 00000000 		.4byte	0
 4196 04b8 00000000 		.4byte	0
 4197              	.LLST29:
 4198 04bc 42000000 		.4byte	.LVL210
 4199 04c0 45000000 		.4byte	.LVL211-1
 4200 04c4 0600     		.2byte	0x6
 4201 04c6 F5       		.byte	0xf5
 4202 04c7 00       		.uleb128 0
 4203 04c8 2C       		.uleb128 0x2c
 4204 04c9 F7       		.byte	0xf7
 4205 04ca 25       		.uleb128 0x25
 4206 04cb 9F       		.byte	0x9f
 4207 04cc 64000000 		.4byte	.LVL215
 4208 04d0 67000000 		.4byte	.LVL216-1
 4209 04d4 0600     		.2byte	0x6
 4210 04d6 F5       		.byte	0xf5
 4211 04d7 00       		.uleb128 0
 4212 04d8 2C       		.uleb128 0x2c
 4213 04d9 F7       		.byte	0xf7
 4214 04da 25       		.uleb128 0x25
 4215 04db 9F       		.byte	0x9f
 4216 04dc 00000000 		.4byte	0
 4217 04e0 00000000 		.4byte	0
 4218              	.LLST30:
 4219 04e4 00000000 		.4byte	.LVL218
 4220 04e8 0E000000 		.4byte	.LVL219
 4221 04ec 0100     		.2byte	0x1
 4222 04ee 50       		.byte	0x50
 4223 04ef 0E000000 		.4byte	.LVL219
 4224 04f3 5A000000 		.4byte	.LVL227
 4225 04f7 0100     		.2byte	0x1
 4226 04f9 55       		.byte	0x55
 4227 04fa 5A000000 		.4byte	.LVL227
 4228 04fe 6C000000 		.4byte	.LFE78
 4229 0502 0400     		.2byte	0x4
 4230 0504 F3       		.byte	0xf3
 4231 0505 01       		.uleb128 0x1
 4232 0506 50       		.byte	0x50
 4233 0507 9F       		.byte	0x9f
 4234 0508 00000000 		.4byte	0
 4235 050c 00000000 		.4byte	0
 4236              	.LLST31:
 4237 0510 32000000 		.4byte	.LVL223
 4238 0514 37000000 		.4byte	.LVL224-1
 4239 0518 0100     		.2byte	0x1
 4240 051a 50       		.byte	0x50
 4241 051b 00000000 		.4byte	0
 4242 051f 00000000 		.4byte	0
 4243              		.section	.debug_aranges,"",%progbits
 4244 0000 9C000000 		.4byte	0x9c
 4245 0004 0200     		.2byte	0x2
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccrHJ3zm.s 			page 83


 4246 0006 00000000 		.4byte	.Ldebug_info0
 4247 000a 04       		.byte	0x4
 4248 000b 00       		.byte	0
 4249 000c 0000     		.2byte	0
 4250 000e 0000     		.2byte	0
 4251 0010 00000000 		.4byte	.LFB64
 4252 0014 5C010000 		.4byte	.LFE64-.LFB64
 4253 0018 00000000 		.4byte	.LFB65
 4254 001c 78000000 		.4byte	.LFE65-.LFB65
 4255 0020 00000000 		.4byte	.LFB66
 4256 0024 B4000000 		.4byte	.LFE66-.LFB66
 4257 0028 00000000 		.4byte	.LFB67
 4258 002c 70000000 		.4byte	.LFE67-.LFB67
 4259 0030 00000000 		.4byte	.LFB68
 4260 0034 A0010000 		.4byte	.LFE68-.LFB68
 4261 0038 00000000 		.4byte	.LFB69
 4262 003c 20000000 		.4byte	.LFE69-.LFB69
 4263 0040 00000000 		.4byte	.LFB70
 4264 0044 C4000000 		.4byte	.LFE70-.LFB70
 4265 0048 00000000 		.4byte	.LFB71
 4266 004c 9C000000 		.4byte	.LFE71-.LFB71
 4267 0050 00000000 		.4byte	.LFB72
 4268 0054 C4000000 		.4byte	.LFE72-.LFB72
 4269 0058 00000000 		.4byte	.LFB73
 4270 005c 94000000 		.4byte	.LFE73-.LFB73
 4271 0060 00000000 		.4byte	.LFB74
 4272 0064 CC000000 		.4byte	.LFE74-.LFB74
 4273 0068 00000000 		.4byte	.LFB75
 4274 006c C4000000 		.4byte	.LFE75-.LFB75
 4275 0070 00000000 		.4byte	.LFB76
 4276 0074 78000000 		.4byte	.LFE76-.LFB76
 4277 0078 00000000 		.4byte	.LFB77
 4278 007c 78000000 		.4byte	.LFE77-.LFB77
 4279 0080 00000000 		.4byte	.LFB78
 4280 0084 6C000000 		.4byte	.LFE78-.LFB78
 4281 0088 00000000 		.4byte	.LFB79
 4282 008c 40000000 		.4byte	.LFE79-.LFB79
 4283 0090 00000000 		.4byte	.LFB80
 4284 0094 40000000 		.4byte	.LFE80-.LFB80
 4285 0098 00000000 		.4byte	0
 4286 009c 00000000 		.4byte	0
 4287              		.section	.debug_ranges,"",%progbits
 4288              	.Ldebug_ranges0:
 4289 0000 00000000 		.4byte	.LFB64
 4290 0004 5C010000 		.4byte	.LFE64
 4291 0008 00000000 		.4byte	.LFB65
 4292 000c 78000000 		.4byte	.LFE65
 4293 0010 00000000 		.4byte	.LFB66
 4294 0014 B4000000 		.4byte	.LFE66
 4295 0018 00000000 		.4byte	.LFB67
 4296 001c 70000000 		.4byte	.LFE67
 4297 0020 00000000 		.4byte	.LFB68
 4298 0024 A0010000 		.4byte	.LFE68
 4299 0028 00000000 		.4byte	.LFB69
 4300 002c 20000000 		.4byte	.LFE69
 4301 0030 00000000 		.4byte	.LFB70
 4302 0034 C4000000 		.4byte	.LFE70
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccrHJ3zm.s 			page 84


 4303 0038 00000000 		.4byte	.LFB71
 4304 003c 9C000000 		.4byte	.LFE71
 4305 0040 00000000 		.4byte	.LFB72
 4306 0044 C4000000 		.4byte	.LFE72
 4307 0048 00000000 		.4byte	.LFB73
 4308 004c 94000000 		.4byte	.LFE73
 4309 0050 00000000 		.4byte	.LFB74
 4310 0054 CC000000 		.4byte	.LFE74
 4311 0058 00000000 		.4byte	.LFB75
 4312 005c C4000000 		.4byte	.LFE75
 4313 0060 00000000 		.4byte	.LFB76
 4314 0064 78000000 		.4byte	.LFE76
 4315 0068 00000000 		.4byte	.LFB77
 4316 006c 78000000 		.4byte	.LFE77
 4317 0070 00000000 		.4byte	.LFB78
 4318 0074 6C000000 		.4byte	.LFE78
 4319 0078 00000000 		.4byte	.LFB79
 4320 007c 40000000 		.4byte	.LFE79
 4321 0080 00000000 		.4byte	.LFB80
 4322 0084 40000000 		.4byte	.LFE80
 4323 0088 00000000 		.4byte	0
 4324 008c 00000000 		.4byte	0
 4325              		.section	.debug_line,"",%progbits
 4326              	.Ldebug_line0:
 4327 0000 82040000 		.section	.debug_str,"MS",%progbits,1
 4327      02004102 
 4327      00000201 
 4327      FB0E0D00 
 4327      01010101 
 4328              	.LASF65:
 4329 0000 6D6F746F 		.ascii	"motor2EncoderCounts\000"
 4329      7232456E 
 4329      636F6465 
 4329      72436F75 
 4329      6E747300 
 4330              	.LASF39:
 4331 0014 6D6F7665 		.ascii	"moveForwardIndefinitely\000"
 4331      466F7277 
 4331      61726449 
 4331      6E646566 
 4331      696E6974 
 4332              	.LASF26:
 4333 002c 636F6D70 		.ascii	"completedCounts\000"
 4333      6C657465 
 4333      64436F75 
 4333      6E747300 
 4334              	.LASF78:
 4335 003c 4D6F746F 		.ascii	"Motor_2_Encoder_Counts_WritePeriod\000"
 4335      725F325F 
 4335      456E636F 
 4335      6465725F 
 4335      436F756E 
 4336              	.LASF21:
 4337 005f 7475726E 		.ascii	"turningLeftFlag\000"
 4337      696E674C 
 4337      65667446 
 4337      6C616700 
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccrHJ3zm.s 			page 85


 4338              	.LASF33:
 4339 006f 74656D70 		.ascii	"temp\000"
 4339      00
 4340              	.LASF4:
 4341 0074 73686F72 		.ascii	"short int\000"
 4341      7420696E 
 4341      7400
 4342              	.LASF51:
 4343 007e 73746F70 		.ascii	"stopMotor2AndUpdate\000"
 4343      4D6F746F 
 4343      7232416E 
 4343      64557064 
 4343      61746500 
 4344              	.LASF60:
 4345 0092 63757272 		.ascii	"currentPosition\000"
 4345      656E7450 
 4345      6F736974 
 4345      696F6E00 
 4346              	.LASF17:
 4347 00a2 64726976 		.ascii	"drivingForwardFlag\000"
 4347      696E6746 
 4347      6F727761 
 4347      7264466C 
 4347      616700
 4348              	.LASF24:
 4349 00b5 64656772 		.ascii	"degreesMoved\000"
 4349      6565734D 
 4349      6F766564 
 4349      00
 4350              	.LASF49:
 4351 00c2 78546F4D 		.ascii	"xToMove\000"
 4351      6F766500 
 4352              	.LASF64:
 4353 00ca 6D6F746F 		.ascii	"motor1EncoderCounts\000"
 4353      7231456E 
 4353      636F6465 
 4353      72436F75 
 4353      6E747300 
 4354              	.LASF56:
 4355 00de 7075636B 		.ascii	"puckRackOffsetsFromWest\000"
 4355      5261636B 
 4355      4F666673 
 4355      65747346 
 4355      726F6D57 
 4356              	.LASF79:
 4357 00f6 4D6F746F 		.ascii	"Motor_1_Encoder_Counts_Start\000"
 4357      725F315F 
 4357      456E636F 
 4357      6465725F 
 4357      436F756E 
 4358              	.LASF32:
 4359 0113 64726966 		.ascii	"driftCorrect\000"
 4359      74436F72 
 4359      72656374 
 4359      00
 4360              	.LASF34:
 4361 0120 636F756E 		.ascii	"counterInitialise\000"
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccrHJ3zm.s 			page 86


 4361      74657249 
 4361      6E697469 
 4361      616C6973 
 4361      6500
 4362              	.LASF72:
 4363 0132 4D6F746F 		.ascii	"Motor_1_driver_WriteCompare1\000"
 4363      725F315F 
 4363      64726976 
 4363      65725F57 
 4363      72697465 
 4364              	.LASF74:
 4365 014f 4D6F746F 		.ascii	"Motor_1_driver_WriteCompare2\000"
 4365      725F315F 
 4365      64726976 
 4365      65725F57 
 4365      72697465 
 4366              	.LASF70:
 4367 016c 4D6F746F 		.ascii	"Motor_1_Encoder_Counts_WriteCounter\000"
 4367      725F315F 
 4367      456E636F 
 4367      6465725F 
 4367      436F756E 
 4368              	.LASF62:
 4369 0190 6D6F746F 		.ascii	"motor1Enable\000"
 4369      7231456E 
 4369      61626C65 
 4369      00
 4370              	.LASF66:
 4371 019d 626C6F63 		.ascii	"block_location\000"
 4371      6B5F6C6F 
 4371      63617469 
 4371      6F6E00
 4372              	.LASF37:
 4373 01ac 6D6F7665 		.ascii	"moveForward\000"
 4373      466F7277 
 4373      61726400 
 4374              	.LASF22:
 4375 01b8 7475726E 		.ascii	"turningRightFlag\000"
 4375      696E6752 
 4375      69676874 
 4375      466C6167 
 4375      00
 4376              	.LASF0:
 4377 01c9 666C6F61 		.ascii	"float\000"
 4377      7400
 4378              	.LASF80:
 4379 01cf 4D6F746F 		.ascii	"Motor_2_Encoder_Counts_Start\000"
 4379      725F325F 
 4379      456E636F 
 4379      6465725F 
 4379      436F756E 
 4380              	.LASF8:
 4381 01ec 6C6F6E67 		.ascii	"long long int\000"
 4381      206C6F6E 
 4381      6720696E 
 4381      7400
 4382              	.LASF73:
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccrHJ3zm.s 			page 87


 4383 01fa 4D6F746F 		.ascii	"Motor_2_driver_WriteCompare1\000"
 4383      725F325F 
 4383      64726976 
 4383      65725F57 
 4383      72697465 
 4384              	.LASF75:
 4385 0217 4D6F746F 		.ascii	"Motor_2_driver_WriteCompare2\000"
 4385      725F325F 
 4385      64726976 
 4385      65725F57 
 4385      72697465 
 4386              	.LASF27:
 4387 0234 6D6F746F 		.ascii	"motorDutyCycleUpdate\000"
 4387      72447574 
 4387      79437963 
 4387      6C655570 
 4387      64617465 
 4388              	.LASF6:
 4389 0249 6C6F6E67 		.ascii	"long int\000"
 4389      20696E74 
 4389      00
 4390              	.LASF41:
 4391 0252 6D6F7665 		.ascii	"moveBackwardIndefinitely\000"
 4391      4261636B 
 4391      77617264 
 4391      496E6465 
 4391      66696E69 
 4392              	.LASF25:
 4393 026b 73746F70 		.ascii	"stopMotion\000"
 4393      4D6F7469 
 4393      6F6E00
 4394              	.LASF40:
 4395 0276 6D6F7665 		.ascii	"moveBackward\000"
 4395      4261636B 
 4395      77617264 
 4395      00
 4396              	.LASF18:
 4397 0283 64726976 		.ascii	"drivingBackwardFlag\000"
 4397      696E6742 
 4397      61636B77 
 4397      61726446 
 4397      6C616700 
 4398              	.LASF59:
 4399 0297 7075636B 		.ascii	"puckPileLocation\000"
 4399      50696C65 
 4399      4C6F6361 
 4399      74696F6E 
 4399      00
 4400              	.LASF54:
 4401 02a8 63757272 		.ascii	"currentPuckRackScanningIndex\000"
 4401      656E7450 
 4401      75636B52 
 4401      61636B53 
 4401      63616E6E 
 4402              	.LASF3:
 4403 02c5 756E7369 		.ascii	"unsigned char\000"
 4403      676E6564 
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccrHJ3zm.s 			page 88


 4403      20636861 
 4403      7200
 4404              	.LASF14:
 4405 02d3 6C6F6E67 		.ascii	"long double\000"
 4405      20646F75 
 4405      626C6500 
 4406              	.LASF45:
 4407 02df 64656772 		.ascii	"degrees\000"
 4407      65657300 
 4408              	.LASF77:
 4409 02e7 4D6F746F 		.ascii	"Motor_1_Encoder_Counts_WritePeriod\000"
 4409      725F315F 
 4409      456E636F 
 4409      6465725F 
 4409      436F756E 
 4410              	.LASF42:
 4411 030a 7475726E 		.ascii	"turnLeft\000"
 4411      4C656674 
 4411      00
 4412              	.LASF81:
 4413 0313 726F756E 		.ascii	"round\000"
 4413      6400
 4414              	.LASF2:
 4415 0319 7369676E 		.ascii	"signed char\000"
 4415      65642063 
 4415      68617200 
 4416              	.LASF58:
 4417 0325 626C6F63 		.ascii	"block_edge_location\000"
 4417      6B5F6564 
 4417      67655F6C 
 4417      6F636174 
 4417      696F6E00 
 4418              	.LASF9:
 4419 0339 6C6F6E67 		.ascii	"long long unsigned int\000"
 4419      206C6F6E 
 4419      6720756E 
 4419      7369676E 
 4419      65642069 
 4420              	.LASF88:
 4421 0350 64636D6F 		.ascii	"dcmotor.c\000"
 4421      746F722E 
 4421      6300
 4422              	.LASF10:
 4423 035a 756E7369 		.ascii	"unsigned int\000"
 4423      676E6564 
 4423      20696E74 
 4423      00
 4424              	.LASF69:
 4425 0367 4D6F746F 		.ascii	"Motor_2_Encoder_Counts_ReadCounter\000"
 4425      725F325F 
 4425      456E636F 
 4425      6465725F 
 4425      436F756E 
 4426              	.LASF16:
 4427 038a 636F756E 		.ascii	"counts\000"
 4427      747300
 4428              	.LASF47:
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccrHJ3zm.s 			page 89


 4429 0391 6E657874 		.ascii	"nextMotion\000"
 4429      4D6F7469 
 4429      6F6E00
 4430              	.LASF5:
 4431 039c 73686F72 		.ascii	"short unsigned int\000"
 4431      7420756E 
 4431      7369676E 
 4431      65642069 
 4431      6E7400
 4432              	.LASF19:
 4433 03af 706F7369 		.ascii	"positionUpdate\000"
 4433      74696F6E 
 4433      55706461 
 4433      746500
 4434              	.LASF57:
 4435 03be 73776565 		.ascii	"sweeping\000"
 4435      70696E67 
 4435      00
 4436              	.LASF13:
 4437 03c7 63686172 		.ascii	"char\000"
 4437      00
 4438              	.LASF29:
 4439 03cc 4D315F42 		.ascii	"M1_BD\000"
 4439      4400
 4440              	.LASF12:
 4441 03d2 696E7433 		.ascii	"int32_t\000"
 4441      325F7400 
 4442              	.LASF53:
 4443 03da 64726976 		.ascii	"driveStraightEnable\000"
 4443      65537472 
 4443      61696768 
 4443      74456E61 
 4443      626C6500 
 4444              	.LASF50:
 4445 03ee 73746F70 		.ascii	"stopMotor1AndUpdate\000"
 4445      4D6F746F 
 4445      7231416E 
 4445      64557064 
 4445      61746500 
 4446              	.LASF23:
 4447 0402 63757272 		.ascii	"currentOrientation_Radians\000"
 4447      656E744F 
 4447      7269656E 
 4447      74617469 
 4447      6F6E5F52 
 4448              	.LASF85:
 4449 041d 4D6F746F 		.ascii	"Motor_2_Encoder_Counts_Stop\000"
 4449      725F325F 
 4449      456E636F 
 4449      6465725F 
 4449      436F756E 
 4450              	.LASF48:
 4451 0439 64657369 		.ascii	"desiredPosition\000"
 4451      72656450 
 4451      6F736974 
 4451      696F6E00 
 4452              	.LASF28:
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccrHJ3zm.s 			page 90


 4453 0449 4D315F46 		.ascii	"M1_FD\000"
 4453      4400
 4454              	.LASF20:
 4455 044f 6F726965 		.ascii	"orientationUpdate\000"
 4455      6E746174 
 4455      696F6E55 
 4455      70646174 
 4455      6500
 4456              	.LASF84:
 4457 0461 4D6F746F 		.ascii	"Motor_1_Encoder_Counts_ReadStatusRegister\000"
 4457      725F315F 
 4457      456E636F 
 4457      6465725F 
 4457      436F756E 
 4458              	.LASF7:
 4459 048b 6C6F6E67 		.ascii	"long unsigned int\000"
 4459      20756E73 
 4459      69676E65 
 4459      6420696E 
 4459      7400
 4460              	.LASF71:
 4461 049d 4D6F746F 		.ascii	"Motor_2_Encoder_Counts_WriteCounter\000"
 4461      725F325F 
 4461      456E636F 
 4461      6465725F 
 4461      436F756E 
 4462              	.LASF82:
 4463 04c1 4D6F746F 		.ascii	"Motor_1_Encoder_Counts_Stop\000"
 4463      725F315F 
 4463      456E636F 
 4463      6465725F 
 4463      436F756E 
 4464              	.LASF1:
 4465 04dd 646F7562 		.ascii	"double\000"
 4465      6C6500
 4466              	.LASF83:
 4467 04e4 55415254 		.ascii	"UART_1_PutString\000"
 4467      5F315F50 
 4467      75745374 
 4467      72696E67 
 4467      00
 4468              	.LASF52:
 4469 04f5 49544D5F 		.ascii	"ITM_RxBuffer\000"
 4469      52784275 
 4469      66666572 
 4469      00
 4470              	.LASF86:
 4471 0502 4D6F746F 		.ascii	"Motor_2_Encoder_Counts_ReadStatusRegister\000"
 4471      725F325F 
 4471      456E636F 
 4471      6465725F 
 4471      436F756E 
 4472              	.LASF46:
 4473 052c 64697370 		.ascii	"displaceRight\000"
 4473      6C616365 
 4473      52696768 
 4473      7400
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccrHJ3zm.s 			page 91


 4474              	.LASF63:
 4475 053a 6D6F746F 		.ascii	"motor2Enable\000"
 4475      7232456E 
 4475      61626C65 
 4475      00
 4476              	.LASF35:
 4477 0547 636F756E 		.ascii	"count1\000"
 4477      743100
 4478              	.LASF36:
 4479 054e 636F756E 		.ascii	"count2\000"
 4479      743200
 4480              	.LASF11:
 4481 0555 5F5F696E 		.ascii	"__int32_t\000"
 4481      7433325F 
 4481      7400
 4482              	.LASF55:
 4483 055f 7075636B 		.ascii	"puckRackColours\000"
 4483      5261636B 
 4483      436F6C6F 
 4483      75727300 
 4484              	.LASF89:
 4485 056f 433A5C55 		.ascii	"C:\\Users\\Misha\\Documents\\PSoC Creator\\ECE3091_"
 4485      73657273 
 4485      5C4D6973 
 4485      68615C44 
 4485      6F63756D 
 4486 059d 47726F75 		.ascii	"Group17\\Group17RobotReal\\Group17Robot.cydsn\000"
 4486      7031375C 
 4486      47726F75 
 4486      70313752 
 4486      6F626F74 
 4487              	.LASF67:
 4488 05c9 6D6F7665 		.ascii	"moveLeftAllowed\000"
 4488      4C656674 
 4488      416C6C6F 
 4488      77656400 
 4489              	.LASF43:
 4490 05d9 7475726E 		.ascii	"turnRight\000"
 4490      52696768 
 4490      7400
 4491              	.LASF15:
 4492 05e3 73697A65 		.ascii	"sizetype\000"
 4492      74797065 
 4492      00
 4493              	.LASF31:
 4494 05ec 4D325F42 		.ascii	"M2_BD\000"
 4494      4400
 4495              	.LASF38:
 4496 05f2 616D6F75 		.ascii	"amount\000"
 4496      6E7400
 4497              	.LASF87:
 4498 05f9 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 4498      43313120 
 4498      352E342E 
 4498      31203230 
 4498      31363036 
 4499 062c 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccrHJ3zm.s 			page 92


 4499      20726576 
 4499      6973696F 
 4499      6E203233 
 4499      37373135 
 4500 065f 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 4500      66756E63 
 4500      74696F6E 
 4500      2D736563 
 4500      74696F6E 
 4501              	.LASF61:
 4502 0687 63757272 		.ascii	"currentOrientation\000"
 4502      656E744F 
 4502      7269656E 
 4502      74617469 
 4502      6F6E00
 4503              	.LASF44:
 4504 069a 64697370 		.ascii	"displaceLeft\000"
 4504      6C616365 
 4504      4C656674 
 4504      00
 4505              	.LASF30:
 4506 06a7 4D325F46 		.ascii	"M2_FD\000"
 4506      4400
 4507              	.LASF76:
 4508 06ad 44726966 		.ascii	"Drift_Check_Timer_Start\000"
 4508      745F4368 
 4508      65636B5F 
 4508      54696D65 
 4508      725F5374 
 4509              	.LASF68:
 4510 06c5 4D6F746F 		.ascii	"Motor_1_Encoder_Counts_ReadCounter\000"
 4510      725F315F 
 4510      456E636F 
 4510      6465725F 
 4510      436F756E 
 4511              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
