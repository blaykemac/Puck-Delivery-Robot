ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccuzBHa9.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"dcmotor.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	__aeabi_i2d
  20              		.global	__aeabi_dmul
  21              		.global	__aeabi_ddiv
  22              		.global	__aeabi_d2f
  23              		.global	__aeabi_f2d
  24              		.global	__aeabi_dadd
  25              		.section	.text.positionUpdate,"ax",%progbits
  26              		.align	2
  27              		.global	positionUpdate
  28              		.thumb
  29              		.thumb_func
  30              		.type	positionUpdate, %function
  31              	positionUpdate:
  32              	.LFB64:
  33              		.file 1 "dcmotor.c"
   1:dcmotor.c     **** 
   2:dcmotor.c     **** /* ========================================
   3:dcmotor.c     ****  *
   4:dcmotor.c     ****  * Copyright Group 17, 2019
   5:dcmotor.c     ****  * All Rights Reserved
   6:dcmotor.c     ****  * UNPUBLISHED, LICENSED SOFTWARE.
   7:dcmotor.c     ****  *
   8:dcmotor.c     ****  * CONFIDENTIAL AND PROPRIETARY INFORMATION
   9:dcmotor.c     ****  * WHICH IS THE PROPERTY OF Blayke, Misha, Nidhin.
  10:dcmotor.c     ****  *
  11:dcmotor.c     ****  * ========================================
  12:dcmotor.c     **** */
  13:dcmotor.c     **** 
  14:dcmotor.c     **** // * PSOC LIBRARY * //
  15:dcmotor.c     **** #include "project.h"
  16:dcmotor.c     **** 
  17:dcmotor.c     **** // * C LIBRARIES * // 
  18:dcmotor.c     **** #include <stdio.h>
  19:dcmotor.c     **** #include <math.h>
  20:dcmotor.c     **** #include <string.h>
  21:dcmotor.c     **** 
  22:dcmotor.c     **** // * OUR LIBRARIES * //
  23:dcmotor.c     **** #include "main.h"
  24:dcmotor.c     **** #include "colour.h"
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccuzBHa9.s 			page 2


  25:dcmotor.c     **** #include "ultrasonic.h" 
  26:dcmotor.c     **** #include "dcmotor.h"
  27:dcmotor.c     **** #include "servo.h"
  28:dcmotor.c     **** #include "customMath.h"
  29:dcmotor.c     **** 
  30:dcmotor.c     **** 
  31:dcmotor.c     **** 
  32:dcmotor.c     **** //This function takes a number of counts from the encoder and, assuming that the number of 
  33:dcmotor.c     **** //counts has been moved in the currentOrientation direction, updates the current position. 
  34:dcmotor.c     **** //Current position can only be updated from within this function
  35:dcmotor.c     **** void positionUpdate(int counts, int drivingForwardFlag, int drivingBackwardFlag){
  34              		.loc 1 35 0
  35              		.cfi_startproc
  36              		@ args = 0, pretend = 0, frame = 0
  37              		@ frame_needed = 0, uses_anonymous_args = 0
  38              	.LVL0:
  39 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
  40              		.cfi_def_cfa_offset 32
  41              		.cfi_offset 4, -32
  42              		.cfi_offset 5, -28
  43              		.cfi_offset 6, -24
  44              		.cfi_offset 7, -20
  45              		.cfi_offset 8, -16
  46              		.cfi_offset 9, -12
  47              		.cfi_offset 10, -8
  48              		.cfi_offset 14, -4
  49 0004 0746     		mov	r7, r0
  50 0006 0C46     		mov	r4, r1
  51 0008 1546     		mov	r5, r2
  36:dcmotor.c     ****     float currentOrientation_Radians = (M_PI*currentOrientation/180);
  52              		.loc 1 36 0
  53 000a 514B     		ldr	r3, .L5+16
  54 000c 1868     		ldr	r0, [r3]
  55              	.LVL1:
  56 000e FFF7FEFF 		bl	__aeabi_i2d
  57              	.LVL2:
  58 0012 4BA3     		adr	r3, .L5
  59 0014 D3E90023 		ldrd	r2, [r3]
  60 0018 FFF7FEFF 		bl	__aeabi_dmul
  61              	.LVL3:
  62 001c 0022     		movs	r2, #0
  63 001e 4D4B     		ldr	r3, .L5+20
  64 0020 FFF7FEFF 		bl	__aeabi_ddiv
  65              	.LVL4:
  66 0024 FFF7FEFF 		bl	__aeabi_d2f
  67              	.LVL5:
  68 0028 0646     		mov	r6, r0
  69              	.LVL6:
  37:dcmotor.c     ****     if (drivingForwardFlag == TRUE){
  70              		.loc 1 37 0
  71 002a 012C     		cmp	r4, #1
  72 002c 40D1     		bne	.L2
  38:dcmotor.c     ****         //When we update position, be aware that we measure orientation as 0 degres facing
  39:dcmotor.c     ****         //to the east of the arena and increasing counterclockwise
  40:dcmotor.c     ****         currentPosition[0] += CM_PER_COUNT*counts*cos(currentOrientation_Radians);
  73              		.loc 1 40 0
  74 002e 3846     		mov	r0, r7
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccuzBHa9.s 			page 3


  75              	.LVL7:
  76 0030 FFF7FEFF 		bl	__aeabi_i2d
  77              	.LVL8:
  78 0034 44A3     		adr	r3, .L5+8
  79 0036 D3E90023 		ldrd	r2, [r3]
  80 003a FFF7FEFF 		bl	__aeabi_dmul
  81              	.LVL9:
  82 003e 0446     		mov	r4, r0
  83              	.LVL10:
  84 0040 0D46     		mov	r5, r1
  85              	.LVL11:
  86 0042 3046     		mov	r0, r6
  87 0044 FFF7FEFF 		bl	__aeabi_f2d
  88              	.LVL12:
  89 0048 0646     		mov	r6, r0
  90              	.LVL13:
  91 004a 0F46     		mov	r7, r1
  92              	.LVL14:
  93 004c FFF7FEFF 		bl	cos
  94              	.LVL15:
  95 0050 0246     		mov	r2, r0
  96 0052 0B46     		mov	r3, r1
  97 0054 2046     		mov	r0, r4
  98 0056 2946     		mov	r1, r5
  99 0058 FFF7FEFF 		bl	__aeabi_dmul
 100              	.LVL16:
 101 005c 8046     		mov	r8, r0
 102 005e 8946     		mov	r9, r1
 103 0060 DFF8F4A0 		ldr	r10, .L5+24
 104 0064 DAF80000 		ldr	r0, [r10]	@ float
 105 0068 FFF7FEFF 		bl	__aeabi_f2d
 106              	.LVL17:
 107 006c 4246     		mov	r2, r8
 108 006e 4B46     		mov	r3, r9
 109 0070 FFF7FEFF 		bl	__aeabi_dadd
 110              	.LVL18:
 111 0074 FFF7FEFF 		bl	__aeabi_d2f
 112              	.LVL19:
 113 0078 CAF80000 		str	r0, [r10]	@ float
  41:dcmotor.c     ****         currentPosition[1] += CM_PER_COUNT*counts*sin(currentOrientation_Radians);
 114              		.loc 1 41 0
 115 007c 3046     		mov	r0, r6
 116 007e 3946     		mov	r1, r7
 117 0080 FFF7FEFF 		bl	sin
 118              	.LVL20:
 119 0084 0246     		mov	r2, r0
 120 0086 0B46     		mov	r3, r1
 121 0088 2046     		mov	r0, r4
 122 008a 2946     		mov	r1, r5
 123 008c FFF7FEFF 		bl	__aeabi_dmul
 124              	.LVL21:
 125 0090 0446     		mov	r4, r0
 126 0092 0D46     		mov	r5, r1
 127 0094 DAF80400 		ldr	r0, [r10, #4]	@ float
 128 0098 FFF7FEFF 		bl	__aeabi_f2d
 129              	.LVL22:
 130 009c 2246     		mov	r2, r4
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccuzBHa9.s 			page 4


 131 009e 2B46     		mov	r3, r5
 132 00a0 FFF7FEFF 		bl	__aeabi_dadd
 133              	.LVL23:
 134 00a4 FFF7FEFF 		bl	__aeabi_d2f
 135              	.LVL24:
 136 00a8 CAF80400 		str	r0, [r10, #4]	@ float
 137 00ac BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 138              	.LVL25:
 139              	.L2:
  42:dcmotor.c     ****     }else if (drivingBackwardFlag == TRUE){
 140              		.loc 1 42 0
 141 00b0 012D     		cmp	r5, #1
 142 00b2 43D1     		bne	.L1
  43:dcmotor.c     ****         currentPosition[0] += CM_PER_COUNT*counts*cos(currentOrientation_Radians + M_PI); 
 143              		.loc 1 43 0
 144 00b4 3846     		mov	r0, r7
 145              	.LVL26:
 146 00b6 FFF7FEFF 		bl	__aeabi_i2d
 147              	.LVL27:
 148 00ba 23A3     		adr	r3, .L5+8
 149 00bc D3E90023 		ldrd	r2, [r3]
 150 00c0 FFF7FEFF 		bl	__aeabi_dmul
 151              	.LVL28:
 152 00c4 0446     		mov	r4, r0
 153              	.LVL29:
 154 00c6 0D46     		mov	r5, r1
 155              	.LVL30:
 156 00c8 3046     		mov	r0, r6
 157 00ca FFF7FEFF 		bl	__aeabi_f2d
 158              	.LVL31:
 159 00ce 1CA3     		adr	r3, .L5
 160 00d0 D3E90023 		ldrd	r2, [r3]
 161 00d4 FFF7FEFF 		bl	__aeabi_dadd
 162              	.LVL32:
 163 00d8 0646     		mov	r6, r0
 164              	.LVL33:
 165 00da 0F46     		mov	r7, r1
 166              	.LVL34:
 167 00dc FFF7FEFF 		bl	cos
 168              	.LVL35:
 169 00e0 0246     		mov	r2, r0
 170 00e2 0B46     		mov	r3, r1
 171 00e4 2046     		mov	r0, r4
 172 00e6 2946     		mov	r1, r5
 173 00e8 FFF7FEFF 		bl	__aeabi_dmul
 174              	.LVL36:
 175 00ec 8046     		mov	r8, r0
 176 00ee 8946     		mov	r9, r1
 177 00f0 DFF864A0 		ldr	r10, .L5+24
 178 00f4 DAF80000 		ldr	r0, [r10]	@ float
 179 00f8 FFF7FEFF 		bl	__aeabi_f2d
 180              	.LVL37:
 181 00fc 4246     		mov	r2, r8
 182 00fe 4B46     		mov	r3, r9
 183 0100 FFF7FEFF 		bl	__aeabi_dadd
 184              	.LVL38:
 185 0104 FFF7FEFF 		bl	__aeabi_d2f
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccuzBHa9.s 			page 5


 186              	.LVL39:
 187 0108 CAF80000 		str	r0, [r10]	@ float
  44:dcmotor.c     ****         currentPosition[1] += CM_PER_COUNT*counts*sin(currentOrientation_Radians + M_PI);
 188              		.loc 1 44 0
 189 010c 3046     		mov	r0, r6
 190 010e 3946     		mov	r1, r7
 191 0110 FFF7FEFF 		bl	sin
 192              	.LVL40:
 193 0114 0246     		mov	r2, r0
 194 0116 0B46     		mov	r3, r1
 195 0118 2046     		mov	r0, r4
 196 011a 2946     		mov	r1, r5
 197 011c FFF7FEFF 		bl	__aeabi_dmul
 198              	.LVL41:
 199 0120 0446     		mov	r4, r0
 200 0122 0D46     		mov	r5, r1
 201 0124 DAF80400 		ldr	r0, [r10, #4]	@ float
 202 0128 FFF7FEFF 		bl	__aeabi_f2d
 203              	.LVL42:
 204 012c 2246     		mov	r2, r4
 205 012e 2B46     		mov	r3, r5
 206 0130 FFF7FEFF 		bl	__aeabi_dadd
 207              	.LVL43:
 208 0134 FFF7FEFF 		bl	__aeabi_d2f
 209              	.LVL44:
 210 0138 CAF80400 		str	r0, [r10, #4]	@ float
 211              	.L1:
 212 013c BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 213              	.L6:
 214              		.align	3
 215              	.L5:
 216 0140 182D4454 		.word	1413754136
 217 0144 FB210940 		.word	1074340347
 218 0148 12A5BDC1 		.word	-1044536046
 219 014c 1726933F 		.word	1066608151
 220 0150 00000000 		.word	currentOrientation
 221 0154 00806640 		.word	1080459264
 222 0158 00000000 		.word	currentPosition
 223              		.cfi_endproc
 224              	.LFE64:
 225              		.size	positionUpdate, .-positionUpdate
 226              		.global	__aeabi_d2iz
 227              		.section	.text.orientationUpdate,"ax",%progbits
 228              		.align	2
 229              		.global	orientationUpdate
 230              		.thumb
 231              		.thumb_func
 232              		.type	orientationUpdate, %function
 233              	orientationUpdate:
 234              	.LFB65:
  45:dcmotor.c     ****     }
  46:dcmotor.c     **** }
  47:dcmotor.c     **** 
  48:dcmotor.c     **** //This function takes a number of counts from the encoder, and based on whether we are 
  49:dcmotor.c     **** //turning left or right, updates the current orientation. Current orientation can only
  50:dcmotor.c     **** //be updated from within this function
  51:dcmotor.c     **** void orientationUpdate(int counts,int turningLeftFlag, int turningRightFlag){
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccuzBHa9.s 			page 6


 235              		.loc 1 51 0
 236              		.cfi_startproc
 237              		@ args = 0, pretend = 0, frame = 0
 238              		@ frame_needed = 0, uses_anonymous_args = 0
 239              	.LVL45:
 240 0000 38B5     		push	{r3, r4, r5, lr}
 241              		.cfi_def_cfa_offset 16
 242              		.cfi_offset 3, -16
 243              		.cfi_offset 4, -12
 244              		.cfi_offset 5, -8
 245              		.cfi_offset 14, -4
 246 0002 0C46     		mov	r4, r1
 247 0004 1546     		mov	r5, r2
  52:dcmotor.c     ****     int degreesMoved = counts*DEGREES_PER_COUNT;
 248              		.loc 1 52 0
 249 0006 FFF7FEFF 		bl	__aeabi_i2d
 250              	.LVL46:
 251 000a 17A3     		adr	r3, .L11
 252 000c D3E90023 		ldrd	r2, [r3]
 253 0010 FFF7FEFF 		bl	__aeabi_dmul
 254              	.LVL47:
 255 0014 FFF7FEFF 		bl	__aeabi_d2iz
 256              	.LVL48:
  53:dcmotor.c     ****     if (turningLeftFlag == TRUE){
 257              		.loc 1 53 0
 258 0018 012C     		cmp	r4, #1
 259 001a 0FD1     		bne	.L8
  54:dcmotor.c     ****         currentOrientation += degreesMoved;
 260              		.loc 1 54 0
 261 001c 1449     		ldr	r1, .L11+8
 262 001e 0B68     		ldr	r3, [r1]
 263 0020 1844     		add	r0, r0, r3
 264              	.LVL49:
  55:dcmotor.c     ****         currentOrientation = currentOrientation%360;
 265              		.loc 1 55 0
 266 0022 144A     		ldr	r2, .L11+12
 267 0024 80FB0223 		smull	r2, r3, r0, r2
 268 0028 C218     		adds	r2, r0, r3
 269 002a C317     		asrs	r3, r0, #31
 270 002c C3EB2223 		rsb	r3, r3, r2, asr #8
 271 0030 4FF4B472 		mov	r2, #360
 272 0034 02FB1303 		mls	r3, r2, r3, r0
 273 0038 0B60     		str	r3, [r1]
 274 003a 38BD     		pop	{r3, r4, r5, pc}
 275              	.LVL50:
 276              	.L8:
  56:dcmotor.c     ****     }else if (turningRightFlag == TRUE){
 277              		.loc 1 56 0
 278 003c 012D     		cmp	r5, #1
 279 003e 12D1     		bne	.L7
  57:dcmotor.c     ****         currentOrientation -= degreesMoved;
 280              		.loc 1 57 0
 281 0040 0B49     		ldr	r1, .L11+8
 282 0042 0B68     		ldr	r3, [r1]
 283 0044 181A     		subs	r0, r3, r0
 284              	.LVL51:
  58:dcmotor.c     ****         currentOrientation = currentOrientation%360;
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccuzBHa9.s 			page 7


 285              		.loc 1 58 0
 286 0046 0B4A     		ldr	r2, .L11+12
 287 0048 80FB0223 		smull	r2, r3, r0, r2
 288 004c C218     		adds	r2, r0, r3
 289 004e C317     		asrs	r3, r0, #31
 290 0050 C3EB2223 		rsb	r3, r3, r2, asr #8
 291 0054 4FF4B472 		mov	r2, #360
 292 0058 02FB1303 		mls	r3, r2, r3, r0
 293 005c 0B60     		str	r3, [r1]
  59:dcmotor.c     ****         if (currentOrientation < 0){
 294              		.loc 1 59 0
 295 005e 002B     		cmp	r3, #0
 296 0060 01DA     		bge	.L7
  60:dcmotor.c     ****             currentOrientation += 360;
 297              		.loc 1 60 0
 298 0062 1344     		add	r3, r3, r2
 299 0064 0B60     		str	r3, [r1]
 300              	.L7:
 301 0066 38BD     		pop	{r3, r4, r5, pc}
 302              	.LVL52:
 303              	.L12:
 304              		.align	3
 305              	.L11:
 306 0068 E17A14AE 		.word	-1374389535
 307 006c 47E1BA3F 		.word	1069211975
 308 0070 00000000 		.word	currentOrientation
 309 0074 B7600BB6 		.word	-1240768329
 310              		.cfi_endproc
 311              	.LFE65:
 312              		.size	orientationUpdate, .-orientationUpdate
 313              		.section	.text.stopMotion,"ax",%progbits
 314              		.align	2
 315              		.global	stopMotion
 316              		.thumb
 317              		.thumb_func
 318              		.type	stopMotion, %function
 319              	stopMotion:
 320              	.LFB66:
  61:dcmotor.c     ****         }
  62:dcmotor.c     ****     }
  63:dcmotor.c     **** }
  64:dcmotor.c     **** 
  65:dcmotor.c     **** //This function will be called once the ultrasonics or the encoders decide that it is time
  66:dcmotor.c     **** //to stop moving. 
  67:dcmotor.c     **** void stopMotion(void){
 321              		.loc 1 67 0
 322              		.cfi_startproc
 323              		@ args = 0, pretend = 0, frame = 0
 324              		@ frame_needed = 0, uses_anonymous_args = 0
 325 0000 08B5     		push	{r3, lr}
 326              		.cfi_def_cfa_offset 8
 327              		.cfi_offset 3, -8
 328              		.cfi_offset 14, -4
  68:dcmotor.c     ****     if ((motor1Enable == FALSE) && (motor2Enable == FALSE)){
 329              		.loc 1 68 0
 330 0002 294B     		ldr	r3, .L20
 331 0004 B3F90030 		ldrsh	r3, [r3]
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccuzBHa9.s 			page 8


 332 0008 002B     		cmp	r3, #0
 333 000a 4BD1     		bne	.L13
 334              		.loc 1 68 0 is_stmt 0 discriminator 1
 335 000c 274B     		ldr	r3, .L20+4
 336 000e B3F90030 		ldrsh	r3, [r3]
 337 0012 002B     		cmp	r3, #0
 338 0014 46D1     		bne	.L13
 339              	.LBB2:
  69:dcmotor.c     ****         //Update the driving permission flags
  70:dcmotor.c     ****         //Read encoder counts and update from previous position
  71:dcmotor.c     ****         int completedCounts;
  72:dcmotor.c     ****         if ((drivingForwardFlag == TRUE)||(drivingBackwardFlag == TRUE)){
 340              		.loc 1 72 0 is_stmt 1
 341 0016 264B     		ldr	r3, .L20+8
 342 0018 B3F90030 		ldrsh	r3, [r3]
 343 001c 012B     		cmp	r3, #1
 344 001e 04D0     		beq	.L15
 345              		.loc 1 72 0 is_stmt 0 discriminator 1
 346 0020 244B     		ldr	r3, .L20+12
 347 0022 B3F90030 		ldrsh	r3, [r3]
 348 0026 012B     		cmp	r3, #1
 349 0028 0AD1     		bne	.L16
 350              	.L15:
  73:dcmotor.c     ****             //We assume that the two counter will have identical counts
  74:dcmotor.c     ****             completedCounts = Motor_1_Encoder_Counts_ReadCounter();
 351              		.loc 1 74 0 is_stmt 1
 352 002a FFF7FEFF 		bl	Motor_1_Encoder_Counts_ReadCounter
 353              	.LVL53:
  75:dcmotor.c     ****             positionUpdate(completedCounts,drivingForwardFlag,drivingBackwardFlag);
 354              		.loc 1 75 0
 355 002e 214B     		ldr	r3, .L20+12
 356 0030 B3F90020 		ldrsh	r2, [r3]
 357 0034 1E4B     		ldr	r3, .L20+8
 358 0036 B3F90010 		ldrsh	r1, [r3]
 359 003a FFF7FEFF 		bl	positionUpdate
 360              	.LVL54:
 361 003e 1EE0     		b	.L17
 362              	.L16:
  76:dcmotor.c     ****         }else if (turningLeftFlag == TRUE){
 363              		.loc 1 76 0
 364 0040 1D4B     		ldr	r3, .L20+16
 365 0042 B3F90030 		ldrsh	r3, [r3]
 366 0046 012B     		cmp	r3, #1
 367 0048 0AD1     		bne	.L18
  77:dcmotor.c     ****             completedCounts = Motor_2_Encoder_Counts_ReadCounter();
 368              		.loc 1 77 0
 369 004a FFF7FEFF 		bl	Motor_2_Encoder_Counts_ReadCounter
 370              	.LVL55:
  78:dcmotor.c     ****             orientationUpdate(completedCounts,turningLeftFlag,turningRightFlag);
 371              		.loc 1 78 0
 372 004e 1B4B     		ldr	r3, .L20+20
 373 0050 B3F90020 		ldrsh	r2, [r3]
 374 0054 184B     		ldr	r3, .L20+16
 375 0056 B3F90010 		ldrsh	r1, [r3]
 376 005a FFF7FEFF 		bl	orientationUpdate
 377              	.LVL56:
 378 005e 0EE0     		b	.L17
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccuzBHa9.s 			page 9


 379              	.L18:
  79:dcmotor.c     ****         }else if (turningRightFlag == TRUE){
 380              		.loc 1 79 0
 381 0060 164B     		ldr	r3, .L20+20
 382 0062 B3F90030 		ldrsh	r3, [r3]
 383 0066 012B     		cmp	r3, #1
 384 0068 09D1     		bne	.L17
  80:dcmotor.c     ****             completedCounts = Motor_1_Encoder_Counts_ReadCounter();
 385              		.loc 1 80 0
 386 006a FFF7FEFF 		bl	Motor_1_Encoder_Counts_ReadCounter
 387              	.LVL57:
  81:dcmotor.c     ****             orientationUpdate(completedCounts,turningLeftFlag,turningRightFlag);
 388              		.loc 1 81 0
 389 006e 134B     		ldr	r3, .L20+20
 390 0070 B3F90020 		ldrsh	r2, [r3]
 391 0074 104B     		ldr	r3, .L20+16
 392 0076 B3F90010 		ldrsh	r1, [r3]
 393 007a FFF7FEFF 		bl	orientationUpdate
 394              	.LVL58:
 395              	.L17:
  82:dcmotor.c     ****         }
  83:dcmotor.c     ****                 
  84:dcmotor.c     ****         //Clear encoder counts
  85:dcmotor.c     ****         Motor_1_Encoder_Counts_WriteCounter(0);
 396              		.loc 1 85 0
 397 007e 0020     		movs	r0, #0
 398 0080 FFF7FEFF 		bl	Motor_1_Encoder_Counts_WriteCounter
 399              	.LVL59:
  86:dcmotor.c     ****         Motor_2_Encoder_Counts_WriteCounter(0);
 400              		.loc 1 86 0
 401 0084 0020     		movs	r0, #0
 402 0086 FFF7FEFF 		bl	Motor_2_Encoder_Counts_WriteCounter
 403              	.LVL60:
  87:dcmotor.c     ****         
  88:dcmotor.c     ****         motor1EncoderCounts = 0;
 404              		.loc 1 88 0
 405 008a 0023     		movs	r3, #0
 406 008c 0C4A     		ldr	r2, .L20+24
 407 008e 1360     		str	r3, [r2]
  89:dcmotor.c     ****         motor2EncoderCounts = 0;
 408              		.loc 1 89 0
 409 0090 0C4A     		ldr	r2, .L20+28
 410 0092 1360     		str	r3, [r2]
  90:dcmotor.c     ****         
  91:dcmotor.c     ****         //Just for now, we are going to update driving flags by turning all of them off
  92:dcmotor.c     ****         drivingForwardFlag = FALSE;
 411              		.loc 1 92 0
 412 0094 064A     		ldr	r2, .L20+8
 413 0096 1380     		strh	r3, [r2]	@ movhi
  93:dcmotor.c     ****         drivingBackwardFlag = FALSE;
 414              		.loc 1 93 0
 415 0098 064A     		ldr	r2, .L20+12
 416 009a 1380     		strh	r3, [r2]	@ movhi
  94:dcmotor.c     ****         turningLeftFlag = FALSE;
 417              		.loc 1 94 0
 418 009c 064A     		ldr	r2, .L20+16
 419 009e 1380     		strh	r3, [r2]	@ movhi
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccuzBHa9.s 			page 10


  95:dcmotor.c     ****         turningRightFlag = FALSE;
 420              		.loc 1 95 0
 421 00a0 064A     		ldr	r2, .L20+20
 422 00a2 1380     		strh	r3, [r2]	@ movhi
 423              	.L13:
 424 00a4 08BD     		pop	{r3, pc}
 425              	.L21:
 426 00a6 00BF     		.align	2
 427              	.L20:
 428 00a8 00000000 		.word	motor1Enable
 429 00ac 00000000 		.word	motor2Enable
 430 00b0 00000000 		.word	drivingForwardFlag
 431 00b4 00000000 		.word	drivingBackwardFlag
 432 00b8 00000000 		.word	turningLeftFlag
 433 00bc 00000000 		.word	turningRightFlag
 434 00c0 00000000 		.word	motor1EncoderCounts
 435 00c4 00000000 		.word	motor2EncoderCounts
 436              	.LBE2:
 437              		.cfi_endproc
 438              	.LFE66:
 439              		.size	stopMotion, .-stopMotion
 440              		.global	__aeabi_fdiv
 441              		.global	__aeabi_fmul
 442              		.global	__aeabi_f2uiz
 443              		.section	.text.motorDutyCycleUpdate,"ax",%progbits
 444              		.align	2
 445              		.global	motorDutyCycleUpdate
 446              		.thumb
 447              		.thumb_func
 448              		.type	motorDutyCycleUpdate, %function
 449              	motorDutyCycleUpdate:
 450              	.LFB67:
  96:dcmotor.c     ****         
  97:dcmotor.c     ****         //Have code here to plan the route which should also update the driving flags
  98:dcmotor.c     ****         
  99:dcmotor.c     ****     }
 100:dcmotor.c     **** }
 101:dcmotor.c     **** 
 102:dcmotor.c     **** //Takes the duty cycles must be expressed as a percentage and runs the motors at those duty
 103:dcmotor.c     **** //cycles
 104:dcmotor.c     **** void motorDutyCycleUpdate(float M1_FD, float M1_BD, float M2_FD, float M2_BD){
 451              		.loc 1 104 0
 452              		.cfi_startproc
 453              		@ args = 0, pretend = 0, frame = 0
 454              		@ frame_needed = 0, uses_anonymous_args = 0
 455              	.LVL61:
 456 0000 70B5     		push	{r4, r5, r6, lr}
 457              		.cfi_def_cfa_offset 16
 458              		.cfi_offset 4, -16
 459              		.cfi_offset 5, -12
 460              		.cfi_offset 6, -8
 461              		.cfi_offset 14, -4
 462 0002 0D46     		mov	r5, r1
 463 0004 1646     		mov	r6, r2
 464 0006 1C46     		mov	r4, r3
 105:dcmotor.c     ****     Motor_1_driver_WriteCompare1((M1_FD/NUM_TO_PERCENT_CONVERTER)*DCMOTOR_PWM_PERIOD);
 465              		.loc 1 105 0
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccuzBHa9.s 			page 11


 466 0008 1749     		ldr	r1, .L24
 467              	.LVL62:
 468 000a FFF7FEFF 		bl	__aeabi_fdiv
 469              	.LVL63:
 470 000e 1749     		ldr	r1, .L24+4
 471 0010 FFF7FEFF 		bl	__aeabi_fmul
 472              	.LVL64:
 473 0014 FFF7FEFF 		bl	__aeabi_f2uiz
 474              	.LVL65:
 475 0018 80B2     		uxth	r0, r0
 476 001a FFF7FEFF 		bl	Motor_1_driver_WriteCompare1
 477              	.LVL66:
 106:dcmotor.c     ****     Motor_2_driver_WriteCompare1((M2_FD/NUM_TO_PERCENT_CONVERTER)*DCMOTOR_PWM_PERIOD);
 478              		.loc 1 106 0
 479 001e 1249     		ldr	r1, .L24
 480 0020 3046     		mov	r0, r6
 481 0022 FFF7FEFF 		bl	__aeabi_fdiv
 482              	.LVL67:
 483 0026 1149     		ldr	r1, .L24+4
 484 0028 FFF7FEFF 		bl	__aeabi_fmul
 485              	.LVL68:
 486 002c FFF7FEFF 		bl	__aeabi_f2uiz
 487              	.LVL69:
 488 0030 80B2     		uxth	r0, r0
 489 0032 FFF7FEFF 		bl	Motor_2_driver_WriteCompare1
 490              	.LVL70:
 107:dcmotor.c     ****     Motor_1_driver_WriteCompare2((M1_BD/NUM_TO_PERCENT_CONVERTER)*DCMOTOR_PWM_PERIOD);
 491              		.loc 1 107 0
 492 0036 0C49     		ldr	r1, .L24
 493 0038 2846     		mov	r0, r5
 494 003a FFF7FEFF 		bl	__aeabi_fdiv
 495              	.LVL71:
 496 003e 0B49     		ldr	r1, .L24+4
 497 0040 FFF7FEFF 		bl	__aeabi_fmul
 498              	.LVL72:
 499 0044 FFF7FEFF 		bl	__aeabi_f2uiz
 500              	.LVL73:
 501 0048 80B2     		uxth	r0, r0
 502 004a FFF7FEFF 		bl	Motor_1_driver_WriteCompare2
 503              	.LVL74:
 108:dcmotor.c     ****     Motor_2_driver_WriteCompare2((M2_BD/NUM_TO_PERCENT_CONVERTER)*DCMOTOR_PWM_PERIOD);
 504              		.loc 1 108 0
 505 004e 0649     		ldr	r1, .L24
 506 0050 2046     		mov	r0, r4
 507 0052 FFF7FEFF 		bl	__aeabi_fdiv
 508              	.LVL75:
 509 0056 0549     		ldr	r1, .L24+4
 510 0058 FFF7FEFF 		bl	__aeabi_fmul
 511              	.LVL76:
 512 005c FFF7FEFF 		bl	__aeabi_f2uiz
 513              	.LVL77:
 514 0060 80B2     		uxth	r0, r0
 515 0062 FFF7FEFF 		bl	Motor_2_driver_WriteCompare2
 516              	.LVL78:
 517 0066 70BD     		pop	{r4, r5, r6, pc}
 518              	.LVL79:
 519              	.L25:
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccuzBHa9.s 			page 12


 520              		.align	2
 521              	.L24:
 522 0068 0000C842 		.word	1120403456
 523 006c 00009643 		.word	1133903872
 524              		.cfi_endproc
 525              	.LFE67:
 526              		.size	motorDutyCycleUpdate, .-motorDutyCycleUpdate
 527              		.global	__aeabi_i2f
 528              		.section	.text.driftCorrect,"ax",%progbits
 529              		.align	2
 530              		.global	driftCorrect
 531              		.thumb
 532              		.thumb_func
 533              		.type	driftCorrect, %function
 534              	driftCorrect:
 535              	.LFB68:
 109:dcmotor.c     **** }
 110:dcmotor.c     **** 
 111:dcmotor.c     **** //This function will be responsible for adjusting any drift. It will read and modify 
 112:dcmotor.c     **** //global variables M1_FD,M1_BD,M2_FD and M2_BD to do so.
 113:dcmotor.c     **** void driftCorrect(void){
 536              		.loc 1 113 0
 537              		.cfi_startproc
 538              		@ args = 0, pretend = 0, frame = 0
 539              		@ frame_needed = 0, uses_anonymous_args = 0
 540 0000 70B5     		push	{r4, r5, r6, lr}
 541              		.cfi_def_cfa_offset 16
 542              		.cfi_offset 4, -16
 543              		.cfi_offset 5, -12
 544              		.cfi_offset 6, -8
 545              		.cfi_offset 14, -4
 114:dcmotor.c     ****     int temp; //allows us to swap motor encoders' speeds
 115:dcmotor.c     ****     if (motor1EncoderCounts > motor2EncoderCounts){
 546              		.loc 1 115 0
 547 0002 614B     		ldr	r3, .L44
 548 0004 1A68     		ldr	r2, [r3]
 549 0006 614B     		ldr	r3, .L44+4
 550 0008 1B68     		ldr	r3, [r3]
 551 000a 9A42     		cmp	r2, r3
 552 000c 4FDD     		ble	.L27
 116:dcmotor.c     ****         if (drivingForwardFlag == TRUE){
 553              		.loc 1 116 0
 554 000e 604B     		ldr	r3, .L44+8
 555 0010 B3F90030 		ldrsh	r3, [r3]
 556 0014 012B     		cmp	r3, #1
 557 0016 0ED1     		bne	.L28
 117:dcmotor.c     ****             if (M1_FD == M2_FD){
 558              		.loc 1 117 0
 559 0018 5E4B     		ldr	r3, .L44+12
 560 001a 1A68     		ldr	r2, [r3]
 561 001c 5E4B     		ldr	r3, .L44+16
 562 001e 1B68     		ldr	r3, [r3]
 563 0020 9A42     		cmp	r2, r3
 564 0022 03D1     		bne	.L29
 118:dcmotor.c     ****                 M1_FD = M2_FD - 1;
 565              		.loc 1 118 0
 566 0024 013B     		subs	r3, r3, #1
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccuzBHa9.s 			page 13


 567 0026 5B4A     		ldr	r2, .L44+12
 568 0028 1360     		str	r3, [r2]
 569 002a 91E0     		b	.L30
 570              	.L29:
 571              	.LVL80:
 119:dcmotor.c     ****             }else{
 120:dcmotor.c     ****                 temp = M1_FD;
 121:dcmotor.c     ****                 M1_FD = M2_FD;
 572              		.loc 1 121 0
 573 002c 5949     		ldr	r1, .L44+12
 574 002e 0B60     		str	r3, [r1]
 122:dcmotor.c     ****                 M2_FD = temp;
 575              		.loc 1 122 0
 576 0030 594B     		ldr	r3, .L44+16
 577 0032 1A60     		str	r2, [r3]
 578 0034 8CE0     		b	.L30
 579              	.LVL81:
 580              	.L28:
 123:dcmotor.c     ****             }
 124:dcmotor.c     ****         }
 125:dcmotor.c     ****         else if (drivingBackwardFlag == TRUE){
 581              		.loc 1 125 0
 582 0036 594B     		ldr	r3, .L44+20
 583 0038 B3F90030 		ldrsh	r3, [r3]
 584 003c 012B     		cmp	r3, #1
 585 003e 0ED1     		bne	.L31
 126:dcmotor.c     ****             if (M1_BD == M2_BD){
 586              		.loc 1 126 0
 587 0040 574B     		ldr	r3, .L44+24
 588 0042 1A68     		ldr	r2, [r3]
 589 0044 574B     		ldr	r3, .L44+28
 590 0046 1B68     		ldr	r3, [r3]
 591 0048 9A42     		cmp	r2, r3
 592 004a 03D1     		bne	.L32
 127:dcmotor.c     ****                 M1_BD = M2_BD - 1;
 593              		.loc 1 127 0
 594 004c 013B     		subs	r3, r3, #1
 595 004e 544A     		ldr	r2, .L44+24
 596 0050 1360     		str	r3, [r2]
 597 0052 7DE0     		b	.L30
 598              	.L32:
 599              	.LVL82:
 128:dcmotor.c     ****             }else{
 129:dcmotor.c     ****                 temp = M1_BD;
 130:dcmotor.c     ****                 M1_BD = M2_BD;
 600              		.loc 1 130 0
 601 0054 5249     		ldr	r1, .L44+24
 602 0056 0B60     		str	r3, [r1]
 131:dcmotor.c     ****                 M2_BD = temp;
 603              		.loc 1 131 0
 604 0058 524B     		ldr	r3, .L44+28
 605 005a 1A60     		str	r2, [r3]
 606 005c 78E0     		b	.L30
 607              	.LVL83:
 608              	.L31:
 132:dcmotor.c     ****             }
 133:dcmotor.c     ****         }else if (turningLeftFlag == TRUE){
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccuzBHa9.s 			page 14


 609              		.loc 1 133 0
 610 005e 524B     		ldr	r3, .L44+32
 611 0060 B3F90030 		ldrsh	r3, [r3]
 612 0064 012B     		cmp	r3, #1
 613 0066 0ED1     		bne	.L33
 134:dcmotor.c     ****             if (M1_BD == M2_FD){
 614              		.loc 1 134 0
 615 0068 4D4B     		ldr	r3, .L44+24
 616 006a 1A68     		ldr	r2, [r3]
 617 006c 4A4B     		ldr	r3, .L44+16
 618 006e 1B68     		ldr	r3, [r3]
 619 0070 9A42     		cmp	r2, r3
 620 0072 03D1     		bne	.L34
 135:dcmotor.c     ****                 M1_BD = M2_FD - 1;
 621              		.loc 1 135 0
 622 0074 013B     		subs	r3, r3, #1
 623 0076 4A4A     		ldr	r2, .L44+24
 624 0078 1360     		str	r3, [r2]
 625 007a 69E0     		b	.L30
 626              	.L34:
 627              	.LVL84:
 136:dcmotor.c     ****             }else{
 137:dcmotor.c     ****                 temp = M1_BD;
 138:dcmotor.c     ****                 M1_BD = M2_FD;
 628              		.loc 1 138 0
 629 007c 4849     		ldr	r1, .L44+24
 630 007e 0B60     		str	r3, [r1]
 139:dcmotor.c     ****                 M2_FD = temp;
 631              		.loc 1 139 0
 632 0080 454B     		ldr	r3, .L44+16
 633 0082 1A60     		str	r2, [r3]
 634 0084 64E0     		b	.L30
 635              	.LVL85:
 636              	.L33:
 140:dcmotor.c     ****             }
 141:dcmotor.c     ****         }else if (turningRightFlag == TRUE){
 637              		.loc 1 141 0
 638 0086 494B     		ldr	r3, .L44+36
 639 0088 B3F90030 		ldrsh	r3, [r3]
 640 008c 012B     		cmp	r3, #1
 641 008e 5FD1     		bne	.L30
 142:dcmotor.c     ****             if (M1_FD == M2_BD){
 642              		.loc 1 142 0
 643 0090 404B     		ldr	r3, .L44+12
 644 0092 1A68     		ldr	r2, [r3]
 645 0094 434B     		ldr	r3, .L44+28
 646 0096 1B68     		ldr	r3, [r3]
 647 0098 9A42     		cmp	r2, r3
 648 009a 03D1     		bne	.L35
 143:dcmotor.c     ****                 M1_FD = M2_BD - 1;
 649              		.loc 1 143 0
 650 009c 013B     		subs	r3, r3, #1
 651 009e 3D4A     		ldr	r2, .L44+12
 652 00a0 1360     		str	r3, [r2]
 653 00a2 55E0     		b	.L30
 654              	.L35:
 655              	.LVL86:
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccuzBHa9.s 			page 15


 144:dcmotor.c     ****             }else{
 145:dcmotor.c     ****                 temp = M1_FD;
 146:dcmotor.c     ****                 M1_FD = M2_BD;
 656              		.loc 1 146 0
 657 00a4 3B49     		ldr	r1, .L44+12
 658 00a6 0B60     		str	r3, [r1]
 147:dcmotor.c     ****                 M2_BD = temp;
 659              		.loc 1 147 0
 660 00a8 3E4B     		ldr	r3, .L44+28
 661 00aa 1A60     		str	r2, [r3]
 662 00ac 50E0     		b	.L30
 663              	.LVL87:
 664              	.L27:
 148:dcmotor.c     ****             }
 149:dcmotor.c     ****         }
 150:dcmotor.c     ****     }else if (motor2EncoderCounts > motor1EncoderCounts){
 665              		.loc 1 150 0
 666 00ae 9A42     		cmp	r2, r3
 667 00b0 4EDA     		bge	.L30
 151:dcmotor.c     ****         if (drivingForwardFlag == TRUE){
 668              		.loc 1 151 0
 669 00b2 374B     		ldr	r3, .L44+8
 670 00b4 B3F90030 		ldrsh	r3, [r3]
 671 00b8 012B     		cmp	r3, #1
 672 00ba 0ED1     		bne	.L36
 152:dcmotor.c     ****             if (M1_FD == M2_FD){
 673              		.loc 1 152 0
 674 00bc 354B     		ldr	r3, .L44+12
 675 00be 1B68     		ldr	r3, [r3]
 676 00c0 354A     		ldr	r2, .L44+16
 677 00c2 1268     		ldr	r2, [r2]
 678 00c4 9342     		cmp	r3, r2
 679 00c6 03D1     		bne	.L37
 153:dcmotor.c     ****                 M2_FD = M1_FD - 1 ;
 680              		.loc 1 153 0
 681 00c8 013B     		subs	r3, r3, #1
 682 00ca 334A     		ldr	r2, .L44+16
 683 00cc 1360     		str	r3, [r2]
 684 00ce 3FE0     		b	.L30
 685              	.L37:
 686              	.LVL88:
 154:dcmotor.c     ****             }else{
 155:dcmotor.c     ****                 temp = M1_FD;
 156:dcmotor.c     ****                 M1_FD = M2_FD;
 687              		.loc 1 156 0
 688 00d0 3049     		ldr	r1, .L44+12
 689 00d2 0A60     		str	r2, [r1]
 157:dcmotor.c     ****                 M2_FD = temp;
 690              		.loc 1 157 0
 691 00d4 304A     		ldr	r2, .L44+16
 692 00d6 1360     		str	r3, [r2]
 693 00d8 3AE0     		b	.L30
 694              	.LVL89:
 695              	.L36:
 158:dcmotor.c     ****             }
 159:dcmotor.c     ****         }
 160:dcmotor.c     ****         else if (drivingBackwardFlag == TRUE){
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccuzBHa9.s 			page 16


 696              		.loc 1 160 0
 697 00da 304B     		ldr	r3, .L44+20
 698 00dc B3F90030 		ldrsh	r3, [r3]
 699 00e0 012B     		cmp	r3, #1
 700 00e2 0ED1     		bne	.L38
 161:dcmotor.c     ****             if (M1_BD == M2_BD){
 701              		.loc 1 161 0
 702 00e4 2E4B     		ldr	r3, .L44+24
 703 00e6 1B68     		ldr	r3, [r3]
 704 00e8 2E4A     		ldr	r2, .L44+28
 705 00ea 1268     		ldr	r2, [r2]
 706 00ec 9342     		cmp	r3, r2
 707 00ee 03D1     		bne	.L39
 162:dcmotor.c     ****                 M2_BD = M1_BD - 1;
 708              		.loc 1 162 0
 709 00f0 013B     		subs	r3, r3, #1
 710 00f2 2C4A     		ldr	r2, .L44+28
 711 00f4 1360     		str	r3, [r2]
 712 00f6 2BE0     		b	.L30
 713              	.L39:
 714              	.LVL90:
 163:dcmotor.c     ****             }else{
 164:dcmotor.c     ****                 temp = M1_BD;
 165:dcmotor.c     ****                 M1_BD = M2_BD;
 715              		.loc 1 165 0
 716 00f8 2949     		ldr	r1, .L44+24
 717 00fa 0A60     		str	r2, [r1]
 166:dcmotor.c     ****                 M2_BD = temp;
 718              		.loc 1 166 0
 719 00fc 294A     		ldr	r2, .L44+28
 720 00fe 1360     		str	r3, [r2]
 721 0100 26E0     		b	.L30
 722              	.LVL91:
 723              	.L38:
 167:dcmotor.c     ****             }
 168:dcmotor.c     ****         }else if (turningLeftFlag == TRUE){
 724              		.loc 1 168 0
 725 0102 294B     		ldr	r3, .L44+32
 726 0104 B3F90030 		ldrsh	r3, [r3]
 727 0108 012B     		cmp	r3, #1
 728 010a 0ED1     		bne	.L40
 169:dcmotor.c     ****             if (M1_BD == M2_FD){
 729              		.loc 1 169 0
 730 010c 244B     		ldr	r3, .L44+24
 731 010e 1A68     		ldr	r2, [r3]
 732 0110 214B     		ldr	r3, .L44+16
 733 0112 1B68     		ldr	r3, [r3]
 734 0114 9A42     		cmp	r2, r3
 735 0116 03D1     		bne	.L41
 170:dcmotor.c     ****                 M1_BD = M2_FD - 1;
 736              		.loc 1 170 0
 737 0118 013B     		subs	r3, r3, #1
 738 011a 214A     		ldr	r2, .L44+24
 739 011c 1360     		str	r3, [r2]
 740 011e 17E0     		b	.L30
 741              	.L41:
 742              	.LVL92:
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccuzBHa9.s 			page 17


 171:dcmotor.c     ****             }else{
 172:dcmotor.c     ****                 temp = M1_BD;
 173:dcmotor.c     ****                 M1_BD = M2_FD;
 743              		.loc 1 173 0
 744 0120 1F49     		ldr	r1, .L44+24
 745 0122 0B60     		str	r3, [r1]
 174:dcmotor.c     ****                 M2_FD = temp;
 746              		.loc 1 174 0
 747 0124 1C4B     		ldr	r3, .L44+16
 748 0126 1A60     		str	r2, [r3]
 749 0128 12E0     		b	.L30
 750              	.LVL93:
 751              	.L40:
 175:dcmotor.c     ****             }
 176:dcmotor.c     ****         }else if (turningRightFlag == TRUE){
 752              		.loc 1 176 0
 753 012a 204B     		ldr	r3, .L44+36
 754 012c B3F90030 		ldrsh	r3, [r3]
 755 0130 012B     		cmp	r3, #1
 756 0132 0DD1     		bne	.L30
 177:dcmotor.c     ****             if (M1_FD == M2_BD){
 757              		.loc 1 177 0
 758 0134 174B     		ldr	r3, .L44+12
 759 0136 1A68     		ldr	r2, [r3]
 760 0138 1A4B     		ldr	r3, .L44+28
 761 013a 1B68     		ldr	r3, [r3]
 762 013c 9A42     		cmp	r2, r3
 763 013e 03D1     		bne	.L42
 178:dcmotor.c     ****                 M1_FD = M2_BD - 1;
 764              		.loc 1 178 0
 765 0140 013B     		subs	r3, r3, #1
 766 0142 144A     		ldr	r2, .L44+12
 767 0144 1360     		str	r3, [r2]
 768 0146 03E0     		b	.L30
 769              	.L42:
 770              	.LVL94:
 179:dcmotor.c     ****             }else{
 180:dcmotor.c     ****                 temp = M1_FD;
 181:dcmotor.c     ****                 M1_FD = M2_BD;
 771              		.loc 1 181 0
 772 0148 1249     		ldr	r1, .L44+12
 773 014a 0B60     		str	r3, [r1]
 182:dcmotor.c     ****                 M2_BD = temp;
 774              		.loc 1 182 0
 775 014c 154B     		ldr	r3, .L44+28
 776 014e 1A60     		str	r2, [r3]
 777              	.LVL95:
 778              	.L30:
 183:dcmotor.c     ****             }
 184:dcmotor.c     ****         }
 185:dcmotor.c     ****     }
 186:dcmotor.c     ****     motorDutyCycleUpdate(M1_FD,M1_BD,M2_FD,M2_BD);
 779              		.loc 1 186 0
 780 0150 144B     		ldr	r3, .L44+28
 781 0152 1868     		ldr	r0, [r3]
 782 0154 FFF7FEFF 		bl	__aeabi_i2f
 783              	.LVL96:
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccuzBHa9.s 			page 18


 784 0158 0646     		mov	r6, r0
 785 015a 0F4B     		ldr	r3, .L44+16
 786 015c 1868     		ldr	r0, [r3]
 787 015e FFF7FEFF 		bl	__aeabi_i2f
 788              	.LVL97:
 789 0162 0546     		mov	r5, r0
 790 0164 0E4B     		ldr	r3, .L44+24
 791 0166 1868     		ldr	r0, [r3]
 792 0168 FFF7FEFF 		bl	__aeabi_i2f
 793              	.LVL98:
 794 016c 0446     		mov	r4, r0
 795 016e 094B     		ldr	r3, .L44+12
 796 0170 1868     		ldr	r0, [r3]
 797 0172 FFF7FEFF 		bl	__aeabi_i2f
 798              	.LVL99:
 799 0176 3346     		mov	r3, r6
 800 0178 2A46     		mov	r2, r5
 801 017a 2146     		mov	r1, r4
 802 017c FFF7FEFF 		bl	motorDutyCycleUpdate
 803              	.LVL100:
 187:dcmotor.c     ****     Drift_Check_Timer_Start(); 
 804              		.loc 1 187 0
 805 0180 FFF7FEFF 		bl	Drift_Check_Timer_Start
 806              	.LVL101:
 807 0184 70BD     		pop	{r4, r5, r6, pc}
 808              	.L45:
 809 0186 00BF     		.align	2
 810              	.L44:
 811 0188 00000000 		.word	motor1EncoderCounts
 812 018c 00000000 		.word	motor2EncoderCounts
 813 0190 00000000 		.word	drivingForwardFlag
 814 0194 00000000 		.word	M1_FD
 815 0198 00000000 		.word	M2_FD
 816 019c 00000000 		.word	drivingBackwardFlag
 817 01a0 00000000 		.word	M1_BD
 818 01a4 00000000 		.word	M2_BD
 819 01a8 00000000 		.word	turningLeftFlag
 820 01ac 00000000 		.word	turningRightFlag
 821              		.cfi_endproc
 822              	.LFE68:
 823              		.size	driftCorrect, .-driftCorrect
 824              		.section	.text.counterInitialise,"ax",%progbits
 825              		.align	2
 826              		.global	counterInitialise
 827              		.thumb
 828              		.thumb_func
 829              		.type	counterInitialise, %function
 830              	counterInitialise:
 831              	.LFB69:
 188:dcmotor.c     **** }
 189:dcmotor.c     **** 
 190:dcmotor.c     **** //Takes two integers count1 and count2, and sets the counters up so that they will start counting 
 191:dcmotor.c     **** //at zero and interrupt when their counts equal the count values specified
 192:dcmotor.c     **** void counterInitialise(int count1, int count2){
 832              		.loc 1 192 0
 833              		.cfi_startproc
 834              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccuzBHa9.s 			page 19


 835              		@ frame_needed = 0, uses_anonymous_args = 0
 836              	.LVL102:
 837 0000 38B5     		push	{r3, r4, r5, lr}
 838              		.cfi_def_cfa_offset 16
 839              		.cfi_offset 3, -16
 840              		.cfi_offset 4, -12
 841              		.cfi_offset 5, -8
 842              		.cfi_offset 14, -4
 843 0002 0546     		mov	r5, r0
 844 0004 0C46     		mov	r4, r1
 193:dcmotor.c     ****     Motor_1_Encoder_Counts_WriteCounter(0); //Start the counters from 0
 845              		.loc 1 193 0
 846 0006 0020     		movs	r0, #0
 847              	.LVL103:
 848 0008 FFF7FEFF 		bl	Motor_1_Encoder_Counts_WriteCounter
 849              	.LVL104:
 194:dcmotor.c     ****     Motor_2_Encoder_Counts_WriteCounter(0); //Start the counters from 0
 850              		.loc 1 194 0
 851 000c 0020     		movs	r0, #0
 852 000e FFF7FEFF 		bl	Motor_2_Encoder_Counts_WriteCounter
 853              	.LVL105:
 195:dcmotor.c     ****     Motor_1_Encoder_Counts_WritePeriod(count1);
 854              		.loc 1 195 0
 855 0012 A8B2     		uxth	r0, r5
 856 0014 FFF7FEFF 		bl	Motor_1_Encoder_Counts_WritePeriod
 857              	.LVL106:
 196:dcmotor.c     ****     Motor_2_Encoder_Counts_WritePeriod(count2);
 858              		.loc 1 196 0
 859 0018 A0B2     		uxth	r0, r4
 860 001a FFF7FEFF 		bl	Motor_2_Encoder_Counts_WritePeriod
 861              	.LVL107:
 862 001e 38BD     		pop	{r3, r4, r5, pc}
 863              		.cfi_endproc
 864              	.LFE69:
 865              		.size	counterInitialise, .-counterInitialise
 866              		.section	.text.moveForward,"ax",%progbits
 867              		.align	2
 868              		.global	moveForward
 869              		.thumb
 870              		.thumb_func
 871              		.type	moveForward, %function
 872              	moveForward:
 873              	.LFB70:
 197:dcmotor.c     **** }
 198:dcmotor.c     **** 
 199:dcmotor.c     **** //Takes a distance to move in cm and moves. Blocking (sadly)
 200:dcmotor.c     **** void moveForward(float amount){
 874              		.loc 1 200 0
 875              		.cfi_startproc
 876              		@ args = 0, pretend = 0, frame = 0
 877              		@ frame_needed = 0, uses_anonymous_args = 0
 878              	.LVL108:
 879 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 880              		.cfi_def_cfa_offset 24
 881              		.cfi_offset 4, -24
 882              		.cfi_offset 5, -20
 883              		.cfi_offset 6, -16
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccuzBHa9.s 			page 20


 884              		.cfi_offset 7, -12
 885              		.cfi_offset 8, -8
 886              		.cfi_offset 14, -4
 201:dcmotor.c     ****     int counts = amount/CM_PER_COUNT;
 887              		.loc 1 201 0
 888 0004 FFF7FEFF 		bl	__aeabi_f2d
 889              	.LVL109:
 890 0008 23A3     		adr	r3, .L52
 891 000a D3E90023 		ldrd	r2, [r3]
 892 000e FFF7FEFF 		bl	__aeabi_ddiv
 893              	.LVL110:
 894 0012 FFF7FEFF 		bl	__aeabi_d2iz
 895              	.LVL111:
 202:dcmotor.c     ****     motor1Enable = TRUE;
 896              		.loc 1 202 0
 897 0016 0123     		movs	r3, #1
 898 0018 214A     		ldr	r2, .L52+8
 899 001a 1380     		strh	r3, [r2]	@ movhi
 203:dcmotor.c     ****     motor2Enable = TRUE;
 900              		.loc 1 203 0
 901 001c 214A     		ldr	r2, .L52+12
 902 001e 1380     		strh	r3, [r2]	@ movhi
 204:dcmotor.c     ****     drivingForwardFlag = TRUE;
 903              		.loc 1 204 0
 904 0020 214A     		ldr	r2, .L52+16
 905 0022 1380     		strh	r3, [r2]	@ movhi
 205:dcmotor.c     ****     motor1EncoderCounts = 0;
 906              		.loc 1 205 0
 907 0024 0024     		movs	r4, #0
 908 0026 214B     		ldr	r3, .L52+20
 909 0028 1C60     		str	r4, [r3]
 206:dcmotor.c     ****     motor2EncoderCounts = 0;
 910              		.loc 1 206 0
 911 002a 214B     		ldr	r3, .L52+24
 912 002c 1C60     		str	r4, [r3]
 207:dcmotor.c     ****     counterInitialise(counts,counts); //Sets up counters to interrupt at right time
 913              		.loc 1 207 0
 914 002e 0146     		mov	r1, r0
 915 0030 FFF7FEFF 		bl	counterInitialise
 916              	.LVL112:
 208:dcmotor.c     ****     M1_FD = DCMOTOR_IDEAL_DUTY_CYCLE;
 917              		.loc 1 208 0
 918 0034 1F4D     		ldr	r5, .L52+28
 919 0036 5023     		movs	r3, #80
 920 0038 2B60     		str	r3, [r5]
 209:dcmotor.c     ****     M1_BD = 0;
 921              		.loc 1 209 0
 922 003a 1F4E     		ldr	r6, .L52+32
 923 003c 3460     		str	r4, [r6]
 210:dcmotor.c     ****     M2_FD =  DCMOTOR_IDEAL_DUTY_CYCLE;
 924              		.loc 1 210 0
 925 003e 1F4F     		ldr	r7, .L52+36
 926 0040 3B60     		str	r3, [r7]
 211:dcmotor.c     ****     M2_BD = 0;
 927              		.loc 1 211 0
 928 0042 DFF87C80 		ldr	r8, .L52+40
 929 0046 C8F80040 		str	r4, [r8]
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccuzBHa9.s 			page 21


 212:dcmotor.c     ****     Motor_1_Encoder_Counts_Start();
 930              		.loc 1 212 0
 931 004a FFF7FEFF 		bl	Motor_1_Encoder_Counts_Start
 932              	.LVL113:
 213:dcmotor.c     ****     Motor_2_Encoder_Counts_Start();
 933              		.loc 1 213 0
 934 004e FFF7FEFF 		bl	Motor_2_Encoder_Counts_Start
 935              	.LVL114:
 214:dcmotor.c     ****     Drift_Check_Timer_Start();
 936              		.loc 1 214 0
 937 0052 FFF7FEFF 		bl	Drift_Check_Timer_Start
 938              	.LVL115:
 215:dcmotor.c     ****     motorDutyCycleUpdate(M1_FD,M1_BD,M2_FD,M2_BD);//This gets the motors going
 939              		.loc 1 215 0
 940 0056 D8F80000 		ldr	r0, [r8]
 941 005a FFF7FEFF 		bl	__aeabi_i2f
 942              	.LVL116:
 943 005e 8046     		mov	r8, r0
 944 0060 3868     		ldr	r0, [r7]
 945 0062 FFF7FEFF 		bl	__aeabi_i2f
 946              	.LVL117:
 947 0066 0746     		mov	r7, r0
 948 0068 3068     		ldr	r0, [r6]
 949 006a FFF7FEFF 		bl	__aeabi_i2f
 950              	.LVL118:
 951 006e 0446     		mov	r4, r0
 952 0070 2868     		ldr	r0, [r5]
 953 0072 FFF7FEFF 		bl	__aeabi_i2f
 954              	.LVL119:
 955 0076 4346     		mov	r3, r8
 956 0078 3A46     		mov	r2, r7
 957 007a 2146     		mov	r1, r4
 958 007c FFF7FEFF 		bl	motorDutyCycleUpdate
 959              	.LVL120:
 960              	.L49:
 216:dcmotor.c     ****     //The below line just traps execution here until the motion is completed
 217:dcmotor.c     ****     while ((motor1Enable == TRUE)||(motor2Enable == TRUE)){
 961              		.loc 1 217 0 discriminator 3
 962 0080 074B     		ldr	r3, .L52+8
 963 0082 B3F90030 		ldrsh	r3, [r3]
 964 0086 012B     		cmp	r3, #1
 965 0088 FAD0     		beq	.L49
 966              		.loc 1 217 0 is_stmt 0 discriminator 2
 967 008a 064B     		ldr	r3, .L52+12
 968 008c B3F90030 		ldrsh	r3, [r3]
 969 0090 012B     		cmp	r3, #1
 970 0092 F5D0     		beq	.L49
 218:dcmotor.c     ****     
 219:dcmotor.c     ****     }
 220:dcmotor.c     **** }
 971              		.loc 1 220 0 is_stmt 1
 972 0094 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 973              	.L53:
 974              		.align	3
 975              	.L52:
 976 0098 12A5BDC1 		.word	-1044536046
 977 009c 1726933F 		.word	1066608151
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccuzBHa9.s 			page 22


 978 00a0 00000000 		.word	motor1Enable
 979 00a4 00000000 		.word	motor2Enable
 980 00a8 00000000 		.word	drivingForwardFlag
 981 00ac 00000000 		.word	motor1EncoderCounts
 982 00b0 00000000 		.word	motor2EncoderCounts
 983 00b4 00000000 		.word	M1_FD
 984 00b8 00000000 		.word	M1_BD
 985 00bc 00000000 		.word	M2_FD
 986 00c0 00000000 		.word	M2_BD
 987              		.cfi_endproc
 988              	.LFE70:
 989              		.size	moveForward, .-moveForward
 990              		.section	.text.moveForwardIndefinitely,"ax",%progbits
 991              		.align	2
 992              		.global	moveForwardIndefinitely
 993              		.thumb
 994              		.thumb_func
 995              		.type	moveForwardIndefinitely, %function
 996              	moveForwardIndefinitely:
 997              	.LFB71:
 221:dcmotor.c     **** 
 222:dcmotor.c     **** //Non-blocking move function. It will be called and will cause the robot to move forward until 
 223:dcmotor.c     **** //interrupted out by ultrasonics
 224:dcmotor.c     **** void moveForwardIndefinitely(void){
 998              		.loc 1 224 0
 999              		.cfi_startproc
 1000              		@ args = 0, pretend = 0, frame = 0
 1001              		@ frame_needed = 0, uses_anonymous_args = 0
 1002 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1003              		.cfi_def_cfa_offset 24
 1004              		.cfi_offset 4, -24
 1005              		.cfi_offset 5, -20
 1006              		.cfi_offset 6, -16
 1007              		.cfi_offset 7, -12
 1008              		.cfi_offset 8, -8
 1009              		.cfi_offset 14, -4
 1010              	.LVL121:
 225:dcmotor.c     ****     int counts = ENCODER_COUNTS_MAX;
 226:dcmotor.c     ****     motor1Enable = TRUE;
 1011              		.loc 1 226 0
 1012 0004 0123     		movs	r3, #1
 1013 0006 1C4A     		ldr	r2, .L56
 1014 0008 1380     		strh	r3, [r2]	@ movhi
 227:dcmotor.c     ****     motor2Enable = TRUE;
 1015              		.loc 1 227 0
 1016 000a 1C4A     		ldr	r2, .L56+4
 1017 000c 1380     		strh	r3, [r2]	@ movhi
 228:dcmotor.c     ****     drivingForwardFlag = TRUE;
 1018              		.loc 1 228 0
 1019 000e 1C4A     		ldr	r2, .L56+8
 1020 0010 1380     		strh	r3, [r2]	@ movhi
 229:dcmotor.c     ****     motor1EncoderCounts = 0;
 1021              		.loc 1 229 0
 1022 0012 0024     		movs	r4, #0
 1023 0014 1B4B     		ldr	r3, .L56+12
 1024 0016 1C60     		str	r4, [r3]
 230:dcmotor.c     ****     motor2EncoderCounts = 0;
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccuzBHa9.s 			page 23


 1025              		.loc 1 230 0
 1026 0018 1B4B     		ldr	r3, .L56+16
 1027 001a 1C60     		str	r4, [r3]
 231:dcmotor.c     ****     counterInitialise(counts,counts); //Sets up counters to interrupt at right time
 1028              		.loc 1 231 0
 1029 001c 4FF6DC71 		movw	r1, #65500
 1030 0020 0846     		mov	r0, r1
 1031 0022 FFF7FEFF 		bl	counterInitialise
 1032              	.LVL122:
 232:dcmotor.c     ****     M1_FD = DCMOTOR_IDEAL_DUTY_CYCLE;
 1033              		.loc 1 232 0
 1034 0026 194D     		ldr	r5, .L56+20
 1035 0028 5023     		movs	r3, #80
 1036 002a 2B60     		str	r3, [r5]
 233:dcmotor.c     ****     M1_BD = 0;
 1037              		.loc 1 233 0
 1038 002c 184E     		ldr	r6, .L56+24
 1039 002e 3460     		str	r4, [r6]
 234:dcmotor.c     ****     M2_FD =  DCMOTOR_IDEAL_DUTY_CYCLE;
 1040              		.loc 1 234 0
 1041 0030 184F     		ldr	r7, .L56+28
 1042 0032 3B60     		str	r3, [r7]
 235:dcmotor.c     ****     M2_BD = 0;
 1043              		.loc 1 235 0
 1044 0034 DFF86080 		ldr	r8, .L56+32
 1045 0038 C8F80040 		str	r4, [r8]
 236:dcmotor.c     ****     Motor_1_Encoder_Counts_Start();
 1046              		.loc 1 236 0
 1047 003c FFF7FEFF 		bl	Motor_1_Encoder_Counts_Start
 1048              	.LVL123:
 237:dcmotor.c     ****     Motor_2_Encoder_Counts_Start();
 1049              		.loc 1 237 0
 1050 0040 FFF7FEFF 		bl	Motor_2_Encoder_Counts_Start
 1051              	.LVL124:
 238:dcmotor.c     ****     Drift_Check_Timer_Start();
 1052              		.loc 1 238 0
 1053 0044 FFF7FEFF 		bl	Drift_Check_Timer_Start
 1054              	.LVL125:
 239:dcmotor.c     ****     motorDutyCycleUpdate(M1_FD,M1_BD,M2_FD,M2_BD);//This gets the motors going
 1055              		.loc 1 239 0
 1056 0048 D8F80000 		ldr	r0, [r8]
 1057 004c FFF7FEFF 		bl	__aeabi_i2f
 1058              	.LVL126:
 1059 0050 8046     		mov	r8, r0
 1060 0052 3868     		ldr	r0, [r7]
 1061 0054 FFF7FEFF 		bl	__aeabi_i2f
 1062              	.LVL127:
 1063 0058 0746     		mov	r7, r0
 1064 005a 3068     		ldr	r0, [r6]
 1065 005c FFF7FEFF 		bl	__aeabi_i2f
 1066              	.LVL128:
 1067 0060 0446     		mov	r4, r0
 1068 0062 2868     		ldr	r0, [r5]
 1069 0064 FFF7FEFF 		bl	__aeabi_i2f
 1070              	.LVL129:
 1071 0068 4346     		mov	r3, r8
 1072 006a 3A46     		mov	r2, r7
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccuzBHa9.s 			page 24


 1073 006c 2146     		mov	r1, r4
 1074 006e FFF7FEFF 		bl	motorDutyCycleUpdate
 1075              	.LVL130:
 1076 0072 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1077              	.L57:
 1078 0076 00BF     		.align	2
 1079              	.L56:
 1080 0078 00000000 		.word	motor1Enable
 1081 007c 00000000 		.word	motor2Enable
 1082 0080 00000000 		.word	drivingForwardFlag
 1083 0084 00000000 		.word	motor1EncoderCounts
 1084 0088 00000000 		.word	motor2EncoderCounts
 1085 008c 00000000 		.word	M1_FD
 1086 0090 00000000 		.word	M1_BD
 1087 0094 00000000 		.word	M2_FD
 1088 0098 00000000 		.word	M2_BD
 1089              		.cfi_endproc
 1090              	.LFE71:
 1091              		.size	moveForwardIndefinitely, .-moveForwardIndefinitely
 1092              		.section	.text.moveBackward,"ax",%progbits
 1093              		.align	2
 1094              		.global	moveBackward
 1095              		.thumb
 1096              		.thumb_func
 1097              		.type	moveBackward, %function
 1098              	moveBackward:
 1099              	.LFB72:
 240:dcmotor.c     ****     //The below line just traps execution here until the motion is completed
 241:dcmotor.c     **** }
 242:dcmotor.c     **** //Takes a distance to move in cm and moves. Blocking (sadly)
 243:dcmotor.c     **** void moveBackward(float amount){
 1100              		.loc 1 243 0
 1101              		.cfi_startproc
 1102              		@ args = 0, pretend = 0, frame = 0
 1103              		@ frame_needed = 0, uses_anonymous_args = 0
 1104              	.LVL131:
 1105 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1106              		.cfi_def_cfa_offset 24
 1107              		.cfi_offset 4, -24
 1108              		.cfi_offset 5, -20
 1109              		.cfi_offset 6, -16
 1110              		.cfi_offset 7, -12
 1111              		.cfi_offset 8, -8
 1112              		.cfi_offset 14, -4
 244:dcmotor.c     ****     int counts = amount/CM_PER_COUNT;
 1113              		.loc 1 244 0
 1114 0004 FFF7FEFF 		bl	__aeabi_f2d
 1115              	.LVL132:
 1116 0008 23A3     		adr	r3, .L62
 1117 000a D3E90023 		ldrd	r2, [r3]
 1118 000e FFF7FEFF 		bl	__aeabi_ddiv
 1119              	.LVL133:
 1120 0012 FFF7FEFF 		bl	__aeabi_d2iz
 1121              	.LVL134:
 245:dcmotor.c     ****     motor1Enable = TRUE;
 1122              		.loc 1 245 0
 1123 0016 0123     		movs	r3, #1
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccuzBHa9.s 			page 25


 1124 0018 214A     		ldr	r2, .L62+8
 1125 001a 1380     		strh	r3, [r2]	@ movhi
 246:dcmotor.c     ****     motor2Enable = TRUE;
 1126              		.loc 1 246 0
 1127 001c 214A     		ldr	r2, .L62+12
 1128 001e 1380     		strh	r3, [r2]	@ movhi
 247:dcmotor.c     ****     drivingBackwardFlag = TRUE;
 1129              		.loc 1 247 0
 1130 0020 214A     		ldr	r2, .L62+16
 1131 0022 1380     		strh	r3, [r2]	@ movhi
 248:dcmotor.c     ****     motor1EncoderCounts = 0;
 1132              		.loc 1 248 0
 1133 0024 0024     		movs	r4, #0
 1134 0026 214B     		ldr	r3, .L62+20
 1135 0028 1C60     		str	r4, [r3]
 249:dcmotor.c     ****     motor2EncoderCounts = 0;
 1136              		.loc 1 249 0
 1137 002a 214B     		ldr	r3, .L62+24
 1138 002c 1C60     		str	r4, [r3]
 250:dcmotor.c     ****     counterInitialise(counts,counts); //Sets up counters to interrupt at right time
 1139              		.loc 1 250 0
 1140 002e 0146     		mov	r1, r0
 1141 0030 FFF7FEFF 		bl	counterInitialise
 1142              	.LVL135:
 251:dcmotor.c     ****     M1_FD = 0;
 1143              		.loc 1 251 0
 1144 0034 1F4D     		ldr	r5, .L62+28
 1145 0036 2C60     		str	r4, [r5]
 252:dcmotor.c     ****     M1_BD = DCMOTOR_IDEAL_DUTY_CYCLE;
 1146              		.loc 1 252 0
 1147 0038 1F4E     		ldr	r6, .L62+32
 1148 003a 5023     		movs	r3, #80
 1149 003c 3360     		str	r3, [r6]
 253:dcmotor.c     ****     M2_FD =  0;
 1150              		.loc 1 253 0
 1151 003e 1F4F     		ldr	r7, .L62+36
 1152 0040 3C60     		str	r4, [r7]
 254:dcmotor.c     ****     M2_BD = DCMOTOR_IDEAL_DUTY_CYCLE;
 1153              		.loc 1 254 0
 1154 0042 1F4C     		ldr	r4, .L62+40
 1155 0044 2360     		str	r3, [r4]
 255:dcmotor.c     ****     Motor_1_Encoder_Counts_Start();
 1156              		.loc 1 255 0
 1157 0046 FFF7FEFF 		bl	Motor_1_Encoder_Counts_Start
 1158              	.LVL136:
 256:dcmotor.c     ****     Motor_2_Encoder_Counts_Start();
 1159              		.loc 1 256 0
 1160 004a FFF7FEFF 		bl	Motor_2_Encoder_Counts_Start
 1161              	.LVL137:
 257:dcmotor.c     ****     Drift_Check_Timer_Start();
 1162              		.loc 1 257 0
 1163 004e FFF7FEFF 		bl	Drift_Check_Timer_Start
 1164              	.LVL138:
 258:dcmotor.c     ****     motorDutyCycleUpdate(M1_FD,M1_BD,M2_FD,M2_BD);//This gets the motors going
 1165              		.loc 1 258 0
 1166 0052 2068     		ldr	r0, [r4]
 1167 0054 FFF7FEFF 		bl	__aeabi_i2f
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccuzBHa9.s 			page 26


 1168              	.LVL139:
 1169 0058 8046     		mov	r8, r0
 1170 005a 3868     		ldr	r0, [r7]
 1171 005c FFF7FEFF 		bl	__aeabi_i2f
 1172              	.LVL140:
 1173 0060 0746     		mov	r7, r0
 1174 0062 3068     		ldr	r0, [r6]
 1175 0064 FFF7FEFF 		bl	__aeabi_i2f
 1176              	.LVL141:
 1177 0068 0446     		mov	r4, r0
 1178 006a 2868     		ldr	r0, [r5]
 1179 006c FFF7FEFF 		bl	__aeabi_i2f
 1180              	.LVL142:
 1181 0070 4346     		mov	r3, r8
 1182 0072 3A46     		mov	r2, r7
 1183 0074 2146     		mov	r1, r4
 1184 0076 FFF7FEFF 		bl	motorDutyCycleUpdate
 1185              	.LVL143:
 1186              	.L59:
 259:dcmotor.c     ****     //The below line just traps execution here until the motion is completed
 260:dcmotor.c     ****     while ((motor1Enable == TRUE)||(motor2Enable == TRUE)){
 1187              		.loc 1 260 0 discriminator 3
 1188 007a 094B     		ldr	r3, .L62+8
 1189 007c B3F90030 		ldrsh	r3, [r3]
 1190 0080 012B     		cmp	r3, #1
 1191 0082 FAD0     		beq	.L59
 1192              		.loc 1 260 0 is_stmt 0 discriminator 2
 1193 0084 074B     		ldr	r3, .L62+12
 1194 0086 B3F90030 		ldrsh	r3, [r3]
 1195 008a 012B     		cmp	r3, #1
 1196 008c F5D0     		beq	.L59
 261:dcmotor.c     ****     
 262:dcmotor.c     ****     }
 263:dcmotor.c     **** }
 1197              		.loc 1 263 0 is_stmt 1
 1198 008e BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1199              	.L63:
 1200 0092 00BFAFF3 		.align	3
 1200      0080
 1201              	.L62:
 1202 0098 12A5BDC1 		.word	-1044536046
 1203 009c 1726933F 		.word	1066608151
 1204 00a0 00000000 		.word	motor1Enable
 1205 00a4 00000000 		.word	motor2Enable
 1206 00a8 00000000 		.word	drivingBackwardFlag
 1207 00ac 00000000 		.word	motor1EncoderCounts
 1208 00b0 00000000 		.word	motor2EncoderCounts
 1209 00b4 00000000 		.word	M1_FD
 1210 00b8 00000000 		.word	M1_BD
 1211 00bc 00000000 		.word	M2_FD
 1212 00c0 00000000 		.word	M2_BD
 1213              		.cfi_endproc
 1214              	.LFE72:
 1215              		.size	moveBackward, .-moveBackward
 1216              		.section	.text.moveBackwardIndefinitely,"ax",%progbits
 1217              		.align	2
 1218              		.global	moveBackwardIndefinitely
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccuzBHa9.s 			page 27


 1219              		.thumb
 1220              		.thumb_func
 1221              		.type	moveBackwardIndefinitely, %function
 1222              	moveBackwardIndefinitely:
 1223              	.LFB73:
 264:dcmotor.c     **** 
 265:dcmotor.c     **** //Allows the robot to move backward indefinitely until interrupted out by ultrasonics
 266:dcmotor.c     **** void moveBackwardIndefinitely(void){
 1224              		.loc 1 266 0
 1225              		.cfi_startproc
 1226              		@ args = 0, pretend = 0, frame = 0
 1227              		@ frame_needed = 0, uses_anonymous_args = 0
 1228 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1229              		.cfi_def_cfa_offset 24
 1230              		.cfi_offset 4, -24
 1231              		.cfi_offset 5, -20
 1232              		.cfi_offset 6, -16
 1233              		.cfi_offset 7, -12
 1234              		.cfi_offset 8, -8
 1235              		.cfi_offset 14, -4
 1236              	.LVL144:
 267:dcmotor.c     ****     int counts = ENCODER_COUNTS_MAX;
 268:dcmotor.c     ****     motor1Enable = TRUE;
 1237              		.loc 1 268 0
 1238 0004 0123     		movs	r3, #1
 1239 0006 1A4A     		ldr	r2, .L66
 1240 0008 1380     		strh	r3, [r2]	@ movhi
 269:dcmotor.c     ****     motor2Enable = TRUE;
 1241              		.loc 1 269 0
 1242 000a 1A4A     		ldr	r2, .L66+4
 1243 000c 1380     		strh	r3, [r2]	@ movhi
 270:dcmotor.c     ****     drivingBackwardFlag = TRUE;
 1244              		.loc 1 270 0
 1245 000e 1A4A     		ldr	r2, .L66+8
 1246 0010 1380     		strh	r3, [r2]	@ movhi
 271:dcmotor.c     ****     motor1EncoderCounts = 0;
 1247              		.loc 1 271 0
 1248 0012 0024     		movs	r4, #0
 1249 0014 194B     		ldr	r3, .L66+12
 1250 0016 1C60     		str	r4, [r3]
 272:dcmotor.c     ****     motor2EncoderCounts = 0;
 1251              		.loc 1 272 0
 1252 0018 194B     		ldr	r3, .L66+16
 1253 001a 1C60     		str	r4, [r3]
 273:dcmotor.c     ****     counterInitialise(counts,counts); //Sets up counters to interrupt at right time
 1254              		.loc 1 273 0
 1255 001c 4FF6DC71 		movw	r1, #65500
 1256 0020 0846     		mov	r0, r1
 1257 0022 FFF7FEFF 		bl	counterInitialise
 1258              	.LVL145:
 274:dcmotor.c     ****     M1_FD = 0;
 1259              		.loc 1 274 0
 1260 0026 174D     		ldr	r5, .L66+20
 1261 0028 2C60     		str	r4, [r5]
 275:dcmotor.c     ****     M1_BD = DCMOTOR_IDEAL_DUTY_CYCLE;
 1262              		.loc 1 275 0
 1263 002a 174E     		ldr	r6, .L66+24
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccuzBHa9.s 			page 28


 1264 002c 5023     		movs	r3, #80
 1265 002e 3360     		str	r3, [r6]
 276:dcmotor.c     ****     M2_FD =  0;
 1266              		.loc 1 276 0
 1267 0030 164F     		ldr	r7, .L66+28
 1268 0032 3C60     		str	r4, [r7]
 277:dcmotor.c     ****     M2_BD = DCMOTOR_IDEAL_DUTY_CYCLE;
 1269              		.loc 1 277 0
 1270 0034 164C     		ldr	r4, .L66+32
 1271 0036 2360     		str	r3, [r4]
 278:dcmotor.c     ****     Motor_1_Encoder_Counts_Start();
 1272              		.loc 1 278 0
 1273 0038 FFF7FEFF 		bl	Motor_1_Encoder_Counts_Start
 1274              	.LVL146:
 279:dcmotor.c     ****     Motor_2_Encoder_Counts_Start();
 1275              		.loc 1 279 0
 1276 003c FFF7FEFF 		bl	Motor_2_Encoder_Counts_Start
 1277              	.LVL147:
 280:dcmotor.c     ****     Drift_Check_Timer_Start();
 1278              		.loc 1 280 0
 1279 0040 FFF7FEFF 		bl	Drift_Check_Timer_Start
 1280              	.LVL148:
 281:dcmotor.c     ****     motorDutyCycleUpdate(M1_FD,M1_BD,M2_FD,M2_BD);//This gets the motors going
 1281              		.loc 1 281 0
 1282 0044 2068     		ldr	r0, [r4]
 1283 0046 FFF7FEFF 		bl	__aeabi_i2f
 1284              	.LVL149:
 1285 004a 8046     		mov	r8, r0
 1286 004c 3868     		ldr	r0, [r7]
 1287 004e FFF7FEFF 		bl	__aeabi_i2f
 1288              	.LVL150:
 1289 0052 0746     		mov	r7, r0
 1290 0054 3068     		ldr	r0, [r6]
 1291 0056 FFF7FEFF 		bl	__aeabi_i2f
 1292              	.LVL151:
 1293 005a 0446     		mov	r4, r0
 1294 005c 2868     		ldr	r0, [r5]
 1295 005e FFF7FEFF 		bl	__aeabi_i2f
 1296              	.LVL152:
 1297 0062 4346     		mov	r3, r8
 1298 0064 3A46     		mov	r2, r7
 1299 0066 2146     		mov	r1, r4
 1300 0068 FFF7FEFF 		bl	motorDutyCycleUpdate
 1301              	.LVL153:
 1302 006c BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1303              	.L67:
 1304              		.align	2
 1305              	.L66:
 1306 0070 00000000 		.word	motor1Enable
 1307 0074 00000000 		.word	motor2Enable
 1308 0078 00000000 		.word	drivingBackwardFlag
 1309 007c 00000000 		.word	motor1EncoderCounts
 1310 0080 00000000 		.word	motor2EncoderCounts
 1311 0084 00000000 		.word	M1_FD
 1312 0088 00000000 		.word	M1_BD
 1313 008c 00000000 		.word	M2_FD
 1314 0090 00000000 		.word	M2_BD
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccuzBHa9.s 			page 29


 1315              		.cfi_endproc
 1316              	.LFE73:
 1317              		.size	moveBackwardIndefinitely, .-moveBackwardIndefinitely
 1318              		.section	.text.turnLeft,"ax",%progbits
 1319              		.align	2
 1320              		.global	turnLeft
 1321              		.thumb
 1322              		.thumb_func
 1323              		.type	turnLeft, %function
 1324              	turnLeft:
 1325              	.LFB74:
 282:dcmotor.c     **** }
 283:dcmotor.c     **** 
 284:dcmotor.c     **** //Takes an angle to turn in degrees and turns left that much
 285:dcmotor.c     **** void turnLeft(float amount){
 1326              		.loc 1 285 0
 1327              		.cfi_startproc
 1328              		@ args = 0, pretend = 0, frame = 0
 1329              		@ frame_needed = 0, uses_anonymous_args = 0
 1330              	.LVL154:
 1331 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1332              		.cfi_def_cfa_offset 24
 1333              		.cfi_offset 4, -24
 1334              		.cfi_offset 5, -20
 1335              		.cfi_offset 6, -16
 1336              		.cfi_offset 7, -12
 1337              		.cfi_offset 8, -8
 1338              		.cfi_offset 14, -4
 286:dcmotor.c     ****     //We need to make sure that the timers are disabled when we are doing turning motions
 287:dcmotor.c     ****     //Otherwise they will try and correct the turning
 288:dcmotor.c     ****     int counts = round(amount/DEGREES_PER_COUNT);
 1339              		.loc 1 288 0
 1340 0004 FFF7FEFF 		bl	__aeabi_f2d
 1341              	.LVL155:
 1342 0008 25A3     		adr	r3, .L72
 1343 000a D3E90023 		ldrd	r2, [r3]
 1344 000e FFF7FEFF 		bl	__aeabi_ddiv
 1345              	.LVL156:
 1346 0012 FFF7FEFF 		bl	round
 1347              	.LVL157:
 1348 0016 FFF7FEFF 		bl	__aeabi_d2iz
 1349              	.LVL158:
 289:dcmotor.c     ****     motor1Enable = TRUE;
 1350              		.loc 1 289 0
 1351 001a 0123     		movs	r3, #1
 1352 001c 224A     		ldr	r2, .L72+8
 1353 001e 1380     		strh	r3, [r2]	@ movhi
 290:dcmotor.c     ****     motor2Enable = TRUE;
 1354              		.loc 1 290 0
 1355 0020 224A     		ldr	r2, .L72+12
 1356 0022 1380     		strh	r3, [r2]	@ movhi
 291:dcmotor.c     ****     turningLeftFlag = TRUE;
 1357              		.loc 1 291 0
 1358 0024 224A     		ldr	r2, .L72+16
 1359 0026 1380     		strh	r3, [r2]	@ movhi
 292:dcmotor.c     ****     motor1EncoderCounts = 0;
 1360              		.loc 1 292 0
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccuzBHa9.s 			page 30


 1361 0028 0024     		movs	r4, #0
 1362 002a 224B     		ldr	r3, .L72+20
 1363 002c 1C60     		str	r4, [r3]
 293:dcmotor.c     ****     motor2EncoderCounts = 0;
 1364              		.loc 1 293 0
 1365 002e 224B     		ldr	r3, .L72+24
 1366 0030 1C60     		str	r4, [r3]
 294:dcmotor.c     ****     counterInitialise(counts,counts); //Sets up counters to interrupt at right time
 1367              		.loc 1 294 0
 1368 0032 0146     		mov	r1, r0
 1369 0034 FFF7FEFF 		bl	counterInitialise
 1370              	.LVL159:
 295:dcmotor.c     ****     M1_FD = 0;
 1371              		.loc 1 295 0
 1372 0038 204D     		ldr	r5, .L72+28
 1373 003a 2C60     		str	r4, [r5]
 296:dcmotor.c     ****     M1_BD = DCMOTOR_IDEAL_DUTY_CYCLE;
 1374              		.loc 1 296 0
 1375 003c 204E     		ldr	r6, .L72+32
 1376 003e 5023     		movs	r3, #80
 1377 0040 3360     		str	r3, [r6]
 297:dcmotor.c     ****     M2_FD = DCMOTOR_IDEAL_DUTY_CYCLE;
 1378              		.loc 1 297 0
 1379 0042 204F     		ldr	r7, .L72+36
 1380 0044 3B60     		str	r3, [r7]
 298:dcmotor.c     ****     M2_BD = 0;
 1381              		.loc 1 298 0
 1382 0046 DFF88080 		ldr	r8, .L72+40
 1383 004a C8F80040 		str	r4, [r8]
 299:dcmotor.c     ****     Motor_1_Encoder_Counts_Start();
 1384              		.loc 1 299 0
 1385 004e FFF7FEFF 		bl	Motor_1_Encoder_Counts_Start
 1386              	.LVL160:
 300:dcmotor.c     ****     Motor_2_Encoder_Counts_Start();
 1387              		.loc 1 300 0
 1388 0052 FFF7FEFF 		bl	Motor_2_Encoder_Counts_Start
 1389              	.LVL161:
 301:dcmotor.c     ****     Drift_Check_Timer_Start();
 1390              		.loc 1 301 0
 1391 0056 FFF7FEFF 		bl	Drift_Check_Timer_Start
 1392              	.LVL162:
 302:dcmotor.c     ****     motorDutyCycleUpdate(M1_FD,M1_BD,M2_FD,M2_BD);//This gets the motors going
 1393              		.loc 1 302 0
 1394 005a D8F80000 		ldr	r0, [r8]
 1395 005e FFF7FEFF 		bl	__aeabi_i2f
 1396              	.LVL163:
 1397 0062 8046     		mov	r8, r0
 1398 0064 3868     		ldr	r0, [r7]
 1399 0066 FFF7FEFF 		bl	__aeabi_i2f
 1400              	.LVL164:
 1401 006a 0746     		mov	r7, r0
 1402 006c 3068     		ldr	r0, [r6]
 1403 006e FFF7FEFF 		bl	__aeabi_i2f
 1404              	.LVL165:
 1405 0072 0446     		mov	r4, r0
 1406 0074 2868     		ldr	r0, [r5]
 1407 0076 FFF7FEFF 		bl	__aeabi_i2f
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccuzBHa9.s 			page 31


 1408              	.LVL166:
 1409 007a 4346     		mov	r3, r8
 1410 007c 3A46     		mov	r2, r7
 1411 007e 2146     		mov	r1, r4
 1412 0080 FFF7FEFF 		bl	motorDutyCycleUpdate
 1413              	.LVL167:
 1414              	.L69:
 303:dcmotor.c     ****     //The below line just traps execution here until the motion is completed
 304:dcmotor.c     ****     while ((motor1Enable == TRUE)||(motor2Enable == TRUE)){
 1415              		.loc 1 304 0 discriminator 3
 1416 0084 084B     		ldr	r3, .L72+8
 1417 0086 B3F90030 		ldrsh	r3, [r3]
 1418 008a 012B     		cmp	r3, #1
 1419 008c FAD0     		beq	.L69
 1420              		.loc 1 304 0 is_stmt 0 discriminator 2
 1421 008e 074B     		ldr	r3, .L72+12
 1422 0090 B3F90030 		ldrsh	r3, [r3]
 1423 0094 012B     		cmp	r3, #1
 1424 0096 F5D0     		beq	.L69
 305:dcmotor.c     ****     
 306:dcmotor.c     ****     }
 307:dcmotor.c     **** }
 1425              		.loc 1 307 0 is_stmt 1
 1426 0098 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1427              	.L73:
 1428 009c AFF30080 		.align	3
 1429              	.L72:
 1430 00a0 E17A14AE 		.word	-1374389535
 1431 00a4 47E1BA3F 		.word	1069211975
 1432 00a8 00000000 		.word	motor1Enable
 1433 00ac 00000000 		.word	motor2Enable
 1434 00b0 00000000 		.word	turningLeftFlag
 1435 00b4 00000000 		.word	motor1EncoderCounts
 1436 00b8 00000000 		.word	motor2EncoderCounts
 1437 00bc 00000000 		.word	M1_FD
 1438 00c0 00000000 		.word	M1_BD
 1439 00c4 00000000 		.word	M2_FD
 1440 00c8 00000000 		.word	M2_BD
 1441              		.cfi_endproc
 1442              	.LFE74:
 1443              		.size	turnLeft, .-turnLeft
 1444              		.section	.text.turnRight,"ax",%progbits
 1445              		.align	2
 1446              		.global	turnRight
 1447              		.thumb
 1448              		.thumb_func
 1449              		.type	turnRight, %function
 1450              	turnRight:
 1451              	.LFB75:
 308:dcmotor.c     **** 
 309:dcmotor.c     **** void turnRight(float amount){
 1452              		.loc 1 309 0
 1453              		.cfi_startproc
 1454              		@ args = 0, pretend = 0, frame = 0
 1455              		@ frame_needed = 0, uses_anonymous_args = 0
 1456              	.LVL168:
 1457 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccuzBHa9.s 			page 32


 1458              		.cfi_def_cfa_offset 24
 1459              		.cfi_offset 4, -24
 1460              		.cfi_offset 5, -20
 1461              		.cfi_offset 6, -16
 1462              		.cfi_offset 7, -12
 1463              		.cfi_offset 8, -8
 1464              		.cfi_offset 14, -4
 310:dcmotor.c     ****     int counts = round(amount/DEGREES_PER_COUNT);
 1465              		.loc 1 310 0
 1466 0004 FFF7FEFF 		bl	__aeabi_f2d
 1467              	.LVL169:
 1468 0008 23A3     		adr	r3, .L78
 1469 000a D3E90023 		ldrd	r2, [r3]
 1470 000e FFF7FEFF 		bl	__aeabi_ddiv
 1471              	.LVL170:
 1472 0012 FFF7FEFF 		bl	round
 1473              	.LVL171:
 1474 0016 FFF7FEFF 		bl	__aeabi_d2iz
 1475              	.LVL172:
 311:dcmotor.c     ****     motor1Enable = TRUE;
 1476              		.loc 1 311 0
 1477 001a 0123     		movs	r3, #1
 1478 001c 204A     		ldr	r2, .L78+8
 1479 001e 1380     		strh	r3, [r2]	@ movhi
 312:dcmotor.c     ****     motor2Enable = TRUE;
 1480              		.loc 1 312 0
 1481 0020 204A     		ldr	r2, .L78+12
 1482 0022 1380     		strh	r3, [r2]	@ movhi
 313:dcmotor.c     ****     turningRightFlag = TRUE;
 1483              		.loc 1 313 0
 1484 0024 204A     		ldr	r2, .L78+16
 1485 0026 1380     		strh	r3, [r2]	@ movhi
 314:dcmotor.c     ****     motor1EncoderCounts = 0;
 1486              		.loc 1 314 0
 1487 0028 0024     		movs	r4, #0
 1488 002a 204B     		ldr	r3, .L78+20
 1489 002c 1C60     		str	r4, [r3]
 315:dcmotor.c     ****     motor2EncoderCounts = 0;
 1490              		.loc 1 315 0
 1491 002e 204B     		ldr	r3, .L78+24
 1492 0030 1C60     		str	r4, [r3]
 316:dcmotor.c     ****     counterInitialise(counts,counts); //Sets up counters to interrupt at right time
 1493              		.loc 1 316 0
 1494 0032 0146     		mov	r1, r0
 1495 0034 FFF7FEFF 		bl	counterInitialise
 1496              	.LVL173:
 317:dcmotor.c     ****     M1_FD = DCMOTOR_IDEAL_DUTY_CYCLE;
 1497              		.loc 1 317 0
 1498 0038 1E4D     		ldr	r5, .L78+28
 1499 003a 5023     		movs	r3, #80
 1500 003c 2B60     		str	r3, [r5]
 318:dcmotor.c     ****     M1_BD = 0;
 1501              		.loc 1 318 0
 1502 003e 1E4E     		ldr	r6, .L78+32
 1503 0040 3460     		str	r4, [r6]
 319:dcmotor.c     ****     M2_FD = 0;
 1504              		.loc 1 319 0
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccuzBHa9.s 			page 33


 1505 0042 1E4F     		ldr	r7, .L78+36
 1506 0044 3C60     		str	r4, [r7]
 320:dcmotor.c     ****     M2_BD = DCMOTOR_IDEAL_DUTY_CYCLE;
 1507              		.loc 1 320 0
 1508 0046 1E4C     		ldr	r4, .L78+40
 1509 0048 2360     		str	r3, [r4]
 321:dcmotor.c     ****     Motor_1_Encoder_Counts_Start();
 1510              		.loc 1 321 0
 1511 004a FFF7FEFF 		bl	Motor_1_Encoder_Counts_Start
 1512              	.LVL174:
 322:dcmotor.c     ****     Motor_2_Encoder_Counts_Start();
 1513              		.loc 1 322 0
 1514 004e FFF7FEFF 		bl	Motor_2_Encoder_Counts_Start
 1515              	.LVL175:
 323:dcmotor.c     ****     Drift_Check_Timer_Start();
 1516              		.loc 1 323 0
 1517 0052 FFF7FEFF 		bl	Drift_Check_Timer_Start
 1518              	.LVL176:
 324:dcmotor.c     ****     motorDutyCycleUpdate(M1_FD,M1_BD,M2_FD,M2_BD);//This gets the motors going
 1519              		.loc 1 324 0
 1520 0056 2068     		ldr	r0, [r4]
 1521 0058 FFF7FEFF 		bl	__aeabi_i2f
 1522              	.LVL177:
 1523 005c 8046     		mov	r8, r0
 1524 005e 3868     		ldr	r0, [r7]
 1525 0060 FFF7FEFF 		bl	__aeabi_i2f
 1526              	.LVL178:
 1527 0064 0746     		mov	r7, r0
 1528 0066 3068     		ldr	r0, [r6]
 1529 0068 FFF7FEFF 		bl	__aeabi_i2f
 1530              	.LVL179:
 1531 006c 0446     		mov	r4, r0
 1532 006e 2868     		ldr	r0, [r5]
 1533 0070 FFF7FEFF 		bl	__aeabi_i2f
 1534              	.LVL180:
 1535 0074 4346     		mov	r3, r8
 1536 0076 3A46     		mov	r2, r7
 1537 0078 2146     		mov	r1, r4
 1538 007a FFF7FEFF 		bl	motorDutyCycleUpdate
 1539              	.LVL181:
 1540              	.L75:
 325:dcmotor.c     ****     //The below line just traps execution here until the motion is completed
 326:dcmotor.c     ****     while ((motor1Enable == TRUE)||(motor2Enable == TRUE)){
 1541              		.loc 1 326 0 discriminator 3
 1542 007e 084B     		ldr	r3, .L78+8
 1543 0080 B3F90030 		ldrsh	r3, [r3]
 1544 0084 012B     		cmp	r3, #1
 1545 0086 FAD0     		beq	.L75
 1546              		.loc 1 326 0 is_stmt 0 discriminator 2
 1547 0088 064B     		ldr	r3, .L78+12
 1548 008a B3F90030 		ldrsh	r3, [r3]
 1549 008e 012B     		cmp	r3, #1
 1550 0090 F5D0     		beq	.L75
 327:dcmotor.c     ****     
 328:dcmotor.c     ****     }
 329:dcmotor.c     **** }
 1551              		.loc 1 329 0 is_stmt 1
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccuzBHa9.s 			page 34


 1552 0092 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1553              	.L79:
 1554 0096 00BF     		.align	3
 1555              	.L78:
 1556 0098 E17A14AE 		.word	-1374389535
 1557 009c 47E1BA3F 		.word	1069211975
 1558 00a0 00000000 		.word	motor1Enable
 1559 00a4 00000000 		.word	motor2Enable
 1560 00a8 00000000 		.word	turningRightFlag
 1561 00ac 00000000 		.word	motor1EncoderCounts
 1562 00b0 00000000 		.word	motor2EncoderCounts
 1563 00b4 00000000 		.word	M1_FD
 1564 00b8 00000000 		.word	M1_BD
 1565 00bc 00000000 		.word	M2_FD
 1566 00c0 00000000 		.word	M2_BD
 1567              		.cfi_endproc
 1568              	.LFE75:
 1569              		.size	turnRight, .-turnRight
 1570              		.section	.text.displaceLeft,"ax",%progbits
 1571              		.align	2
 1572              		.global	displaceLeft
 1573              		.thumb
 1574              		.thumb_func
 1575              		.type	displaceLeft, %function
 1576              	displaceLeft:
 1577              	.LFB76:
 330:dcmotor.c     **** 
 331:dcmotor.c     **** //The displaceLeft and displaceRight functions should let us slide left and right. 
 332:dcmotor.c     **** //We should ensure that these are only called when we are not close enough to the walls
 333:dcmotor.c     **** //to create issues otherwise we could get stuck in these functions permanently
 334:dcmotor.c     **** void displaceLeft(int amount,int degrees){
 1578              		.loc 1 334 0
 1579              		.cfi_startproc
 1580              		@ args = 0, pretend = 0, frame = 0
 1581              		@ frame_needed = 0, uses_anonymous_args = 0
 1582              	.LVL182:
 1583 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1584              		.cfi_def_cfa_offset 24
 1585              		.cfi_offset 4, -24
 1586              		.cfi_offset 5, -20
 1587              		.cfi_offset 6, -16
 1588              		.cfi_offset 7, -12
 1589              		.cfi_offset 8, -8
 1590              		.cfi_offset 14, -4
 1591 0004 0446     		mov	r4, r0
 1592 0006 0E46     		mov	r6, r1
 335:dcmotor.c     ****     turnRight(degrees);
 1593              		.loc 1 335 0
 1594 0008 0846     		mov	r0, r1
 1595              	.LVL183:
 1596 000a FFF7FEFF 		bl	__aeabi_i2f
 1597              	.LVL184:
 1598 000e 8046     		mov	r8, r0
 1599 0010 FFF7FEFF 		bl	turnRight
 1600              	.LVL185:
 336:dcmotor.c     ****     float temp = amount/sin((M_PI/180)*degrees);
 1601              		.loc 1 336 0
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccuzBHa9.s 			page 35


 1602 0014 2046     		mov	r0, r4
 1603 0016 FFF7FEFF 		bl	__aeabi_i2d
 1604              	.LVL186:
 1605 001a 0446     		mov	r4, r0
 1606              	.LVL187:
 1607 001c 0D46     		mov	r5, r1
 1608 001e 3046     		mov	r0, r6
 1609 0020 FFF7FEFF 		bl	__aeabi_i2d
 1610              	.LVL188:
 1611 0024 12A3     		adr	r3, .L82
 1612 0026 D3E90023 		ldrd	r2, [r3]
 1613 002a FFF7FEFF 		bl	__aeabi_dmul
 1614              	.LVL189:
 1615 002e 0646     		mov	r6, r0
 1616              	.LVL190:
 1617 0030 0F46     		mov	r7, r1
 1618 0032 FFF7FEFF 		bl	sin
 1619              	.LVL191:
 1620 0036 0246     		mov	r2, r0
 1621 0038 0B46     		mov	r3, r1
 1622 003a 2046     		mov	r0, r4
 1623 003c 2946     		mov	r1, r5
 1624 003e FFF7FEFF 		bl	__aeabi_ddiv
 1625              	.LVL192:
 337:dcmotor.c     ****     moveBackward(amount/sin((M_PI/180)*degrees));
 1626              		.loc 1 337 0
 1627 0042 FFF7FEFF 		bl	__aeabi_d2f
 1628              	.LVL193:
 1629 0046 FFF7FEFF 		bl	moveBackward
 1630              	.LVL194:
 338:dcmotor.c     ****     turnLeft(degrees);
 1631              		.loc 1 338 0
 1632 004a 4046     		mov	r0, r8
 1633 004c FFF7FEFF 		bl	turnLeft
 1634              	.LVL195:
 339:dcmotor.c     ****     temp = amount/tan((M_PI/180)*degrees);
 1635              		.loc 1 339 0
 1636 0050 3046     		mov	r0, r6
 1637 0052 3946     		mov	r1, r7
 1638 0054 FFF7FEFF 		bl	tan
 1639              	.LVL196:
 1640 0058 0246     		mov	r2, r0
 1641 005a 0B46     		mov	r3, r1
 1642 005c 2046     		mov	r0, r4
 1643 005e 2946     		mov	r1, r5
 1644 0060 FFF7FEFF 		bl	__aeabi_ddiv
 1645              	.LVL197:
 340:dcmotor.c     ****     moveForward(amount/tan((M_PI/180)*degrees));
 1646              		.loc 1 340 0
 1647 0064 FFF7FEFF 		bl	__aeabi_d2f
 1648              	.LVL198:
 1649 0068 FFF7FEFF 		bl	moveForward
 1650              	.LVL199:
 1651 006c BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1652              	.L83:
 1653              		.align	3
 1654              	.L82:
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccuzBHa9.s 			page 36


 1655 0070 399D52A2 		.word	-1571644103
 1656 0074 46DF913F 		.word	1066524486
 1657              		.cfi_endproc
 1658              	.LFE76:
 1659              		.size	displaceLeft, .-displaceLeft
 1660              		.section	.text.displaceRight,"ax",%progbits
 1661              		.align	2
 1662              		.global	displaceRight
 1663              		.thumb
 1664              		.thumb_func
 1665              		.type	displaceRight, %function
 1666              	displaceRight:
 1667              	.LFB77:
 341:dcmotor.c     **** }
 342:dcmotor.c     **** 
 343:dcmotor.c     **** //The displaceLeft and displaceRight functions should let us slide left and right. 
 344:dcmotor.c     **** //We should ensure that these are only called when we are not close enough to the walls
 345:dcmotor.c     **** //to create issues otherwise we could get stuck in these functions permanently
 346:dcmotor.c     **** void displaceRight(int amount,int degrees){
 1668              		.loc 1 346 0
 1669              		.cfi_startproc
 1670              		@ args = 0, pretend = 0, frame = 0
 1671              		@ frame_needed = 0, uses_anonymous_args = 0
 1672              	.LVL200:
 1673 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1674              		.cfi_def_cfa_offset 24
 1675              		.cfi_offset 4, -24
 1676              		.cfi_offset 5, -20
 1677              		.cfi_offset 6, -16
 1678              		.cfi_offset 7, -12
 1679              		.cfi_offset 8, -8
 1680              		.cfi_offset 14, -4
 1681 0004 0446     		mov	r4, r0
 1682 0006 0E46     		mov	r6, r1
 347:dcmotor.c     ****     turnLeft(degrees);
 1683              		.loc 1 347 0
 1684 0008 0846     		mov	r0, r1
 1685              	.LVL201:
 1686 000a FFF7FEFF 		bl	__aeabi_i2f
 1687              	.LVL202:
 1688 000e 8046     		mov	r8, r0
 1689 0010 FFF7FEFF 		bl	turnLeft
 1690              	.LVL203:
 348:dcmotor.c     ****     float temp = amount/sin((M_PI/180)*degrees);
 1691              		.loc 1 348 0
 1692 0014 2046     		mov	r0, r4
 1693 0016 FFF7FEFF 		bl	__aeabi_i2d
 1694              	.LVL204:
 1695 001a 0446     		mov	r4, r0
 1696              	.LVL205:
 1697 001c 0D46     		mov	r5, r1
 1698 001e 3046     		mov	r0, r6
 1699 0020 FFF7FEFF 		bl	__aeabi_i2d
 1700              	.LVL206:
 1701 0024 12A3     		adr	r3, .L86
 1702 0026 D3E90023 		ldrd	r2, [r3]
 1703 002a FFF7FEFF 		bl	__aeabi_dmul
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccuzBHa9.s 			page 37


 1704              	.LVL207:
 1705 002e 0646     		mov	r6, r0
 1706              	.LVL208:
 1707 0030 0F46     		mov	r7, r1
 1708 0032 FFF7FEFF 		bl	sin
 1709              	.LVL209:
 1710 0036 0246     		mov	r2, r0
 1711 0038 0B46     		mov	r3, r1
 1712 003a 2046     		mov	r0, r4
 1713 003c 2946     		mov	r1, r5
 1714 003e FFF7FEFF 		bl	__aeabi_ddiv
 1715              	.LVL210:
 349:dcmotor.c     ****     moveBackward(amount/sin((M_PI/180)*degrees));
 1716              		.loc 1 349 0
 1717 0042 FFF7FEFF 		bl	__aeabi_d2f
 1718              	.LVL211:
 1719 0046 FFF7FEFF 		bl	moveBackward
 1720              	.LVL212:
 350:dcmotor.c     ****     turnRight(degrees);
 1721              		.loc 1 350 0
 1722 004a 4046     		mov	r0, r8
 1723 004c FFF7FEFF 		bl	turnRight
 1724              	.LVL213:
 351:dcmotor.c     ****     temp = amount/tan((M_PI/180)*degrees);
 1725              		.loc 1 351 0
 1726 0050 3046     		mov	r0, r6
 1727 0052 3946     		mov	r1, r7
 1728 0054 FFF7FEFF 		bl	tan
 1729              	.LVL214:
 1730 0058 0246     		mov	r2, r0
 1731 005a 0B46     		mov	r3, r1
 1732 005c 2046     		mov	r0, r4
 1733 005e 2946     		mov	r1, r5
 1734 0060 FFF7FEFF 		bl	__aeabi_ddiv
 1735              	.LVL215:
 352:dcmotor.c     ****     moveForward(amount/tan((M_PI/180)*degrees));
 1736              		.loc 1 352 0
 1737 0064 FFF7FEFF 		bl	__aeabi_d2f
 1738              	.LVL216:
 1739 0068 FFF7FEFF 		bl	moveForward
 1740              	.LVL217:
 1741 006c BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1742              	.L87:
 1743              		.align	3
 1744              	.L86:
 1745 0070 399D52A2 		.word	-1571644103
 1746 0074 46DF913F 		.word	1066524486
 1747              		.cfi_endproc
 1748              	.LFE77:
 1749              		.size	displaceRight, .-displaceRight
 1750              		.global	__aeabi_fcmplt
 1751              		.global	__aeabi_fsub
 1752              		.section	.text.nextMotion,"ax",%progbits
 1753              		.align	2
 1754              		.global	nextMotion
 1755              		.thumb
 1756              		.thumb_func
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccuzBHa9.s 			page 38


 1757              		.type	nextMotion, %function
 1758              	nextMotion:
 1759              	.LFB78:
 353:dcmotor.c     **** }
 354:dcmotor.c     **** 
 355:dcmotor.c     **** //Looks at the current position, desired position and the location of the block, 
 356:dcmotor.c     **** //and plans a route, executing the next motion in that route if the main program 
 357:dcmotor.c     **** //permits (via having the moveNow flag set to TRUE)
 358:dcmotor.c     **** void nextMotion(int * desiredPosition){
 1760              		.loc 1 358 0
 1761              		.cfi_startproc
 1762              		@ args = 0, pretend = 0, frame = 0
 1763              		@ frame_needed = 0, uses_anonymous_args = 0
 1764              	.LVL218:
 1765 0000 38B5     		push	{r3, r4, r5, lr}
 1766              		.cfi_def_cfa_offset 16
 1767              		.cfi_offset 3, -16
 1768              		.cfi_offset 4, -12
 1769              		.cfi_offset 5, -8
 1770              		.cfi_offset 14, -4
 1771 0002 0546     		mov	r5, r0
 359:dcmotor.c     ****     //Check that we have already acquired the block's location (by checking we aren't in 
 360:dcmotor.c     ****     //the scanning for block state)
 361:dcmotor.c     ****     //Check what motions are available to us from the flags
 362:dcmotor.c     ****     //Check what motions are available to us from our location compared to obstacle
 363:dcmotor.c     ****     if (block_location[0] < currentPosition[0] && currentPosition[0] < block_location[1]){
 1772              		.loc 1 363 0
 1773 0004 134B     		ldr	r3, .L97
 1774 0006 1C68     		ldr	r4, [r3]	@ float
 1775 0008 2146     		mov	r1, r4
 1776 000a 134B     		ldr	r3, .L97+4
 1777 000c 1868     		ldr	r0, [r3]	@ float
 1778              	.LVL219:
 1779 000e FFF7FEFF 		bl	__aeabi_fcmplt
 1780              	.LVL220:
 1781 0012 F0B1     		cbz	r0, .L88
 1782              		.loc 1 363 0 is_stmt 0 discriminator 1
 1783 0014 104B     		ldr	r3, .L97+4
 1784 0016 5968     		ldr	r1, [r3, #4]	@ float
 1785 0018 2046     		mov	r0, r4
 1786 001a FFF7FEFF 		bl	__aeabi_fcmplt
 1787              	.LVL221:
 1788 001e C0B1     		cbz	r0, .L88
 1789              	.LBB3:
 364:dcmotor.c     ****         float xToMove = desiredPosition[0] - currentPosition[0];
 1790              		.loc 1 364 0 is_stmt 1
 1791 0020 2868     		ldr	r0, [r5]
 1792 0022 FFF7FEFF 		bl	__aeabi_i2f
 1793              	.LVL222:
 1794 0026 2146     		mov	r1, r4
 1795 0028 FFF7FEFF 		bl	__aeabi_fsub
 1796              	.LVL223:
 365:dcmotor.c     ****         if ((xToMove <0) && (moveLeftAllowed == TRUE)){
 1797              		.loc 1 365 0
 1798 002c 0021     		movs	r1, #0
 1799 002e FFF7FEFF 		bl	__aeabi_fcmplt
 1800              	.LVL224:
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccuzBHa9.s 			page 39


 1801 0032 70B1     		cbz	r0, .L88
 1802              		.loc 1 365 0 is_stmt 0 discriminator 1
 1803 0034 094B     		ldr	r3, .L97+8
 1804 0036 B3F90030 		ldrsh	r3, [r3]
 1805 003a 012B     		cmp	r3, #1
 1806 003c 09D1     		bne	.L88
 366:dcmotor.c     ****             if (currentOrientation != 180){
 1807              		.loc 1 366 0 is_stmt 1
 1808 003e 084B     		ldr	r3, .L97+12
 1809 0040 1868     		ldr	r0, [r3]
 1810 0042 B428     		cmp	r0, #180
 1811 0044 05D0     		beq	.L88
 367:dcmotor.c     ****                 turnLeft(180 - currentOrientation);
 1812              		.loc 1 367 0
 1813 0046 C0F1B400 		rsb	r0, r0, #180
 1814 004a FFF7FEFF 		bl	__aeabi_i2f
 1815              	.LVL225:
 1816 004e FFF7FEFF 		bl	turnLeft
 1817              	.LVL226:
 1818              	.L88:
 1819 0052 38BD     		pop	{r3, r4, r5, pc}
 1820              	.LVL227:
 1821              	.L98:
 1822              		.align	2
 1823              	.L97:
 1824 0054 00000000 		.word	currentPosition
 1825 0058 00000000 		.word	block_location
 1826 005c 00000000 		.word	moveLeftAllowed
 1827 0060 00000000 		.word	currentOrientation
 1828              	.LBE3:
 1829              		.cfi_endproc
 1830              	.LFE78:
 1831              		.size	nextMotion, .-nextMotion
 1832              		.section	.text.stopMotor1AndUpdate,"ax",%progbits
 1833              		.align	2
 1834              		.global	stopMotor1AndUpdate
 1835              		.thumb
 1836              		.thumb_func
 1837              		.type	stopMotor1AndUpdate, %function
 1838              	stopMotor1AndUpdate:
 1839              	.LFB79:
 368:dcmotor.c     ****             }
 369:dcmotor.c     ****         }
 370:dcmotor.c     ****     }
 371:dcmotor.c     **** }
 372:dcmotor.c     **** 
 373:dcmotor.c     **** void stopMotor1AndUpdate(void){
 1840              		.loc 1 373 0
 1841              		.cfi_startproc
 1842              		@ args = 0, pretend = 0, frame = 0
 1843              		@ frame_needed = 0, uses_anonymous_args = 0
 1844 0000 10B5     		push	{r4, lr}
 1845              		.cfi_def_cfa_offset 8
 1846              		.cfi_offset 4, -8
 1847              		.cfi_offset 14, -4
 374:dcmotor.c     ****     Motor_1_driver_WriteCompare1(0);
 1848              		.loc 1 374 0
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccuzBHa9.s 			page 40


 1849 0002 0020     		movs	r0, #0
 1850 0004 FFF7FEFF 		bl	Motor_1_driver_WriteCompare1
 1851              	.LVL228:
 375:dcmotor.c     ****     Motor_1_driver_WriteCompare2(0);
 1852              		.loc 1 375 0
 1853 0008 0020     		movs	r0, #0
 1854 000a FFF7FEFF 		bl	Motor_1_driver_WriteCompare2
 1855              	.LVL229:
 376:dcmotor.c     ****     Motor_1_Encoder_Counts_Stop();
 1856              		.loc 1 376 0
 1857 000e FFF7FEFF 		bl	Motor_1_Encoder_Counts_Stop
 1858              	.LVL230:
 377:dcmotor.c     ****     M1_FD = 0;
 1859              		.loc 1 377 0
 1860 0012 0024     		movs	r4, #0
 1861 0014 064B     		ldr	r3, .L101
 1862 0016 1C60     		str	r4, [r3]
 378:dcmotor.c     ****     M1_BD = 0;
 1863              		.loc 1 378 0
 1864 0018 064B     		ldr	r3, .L101+4
 1865 001a 1C60     		str	r4, [r3]
 379:dcmotor.c     ****     UART_1_PutString("Counter 1 interrupt \n");
 1866              		.loc 1 379 0
 1867 001c 0648     		ldr	r0, .L101+8
 1868 001e FFF7FEFF 		bl	UART_1_PutString
 1869              	.LVL231:
 380:dcmotor.c     ****     motor1Enable = FALSE;
 1870              		.loc 1 380 0
 1871 0022 064B     		ldr	r3, .L101+12
 1872 0024 1C80     		strh	r4, [r3]	@ movhi
 381:dcmotor.c     ****     stopMotion();
 1873              		.loc 1 381 0
 1874 0026 FFF7FEFF 		bl	stopMotion
 1875              	.LVL232:
 382:dcmotor.c     ****     Motor_1_Encoder_Counts_ReadStatusRegister(); //Clears the interrupt
 1876              		.loc 1 382 0
 1877 002a FFF7FEFF 		bl	Motor_1_Encoder_Counts_ReadStatusRegister
 1878              	.LVL233:
 1879 002e 10BD     		pop	{r4, pc}
 1880              	.L102:
 1881              		.align	2
 1882              	.L101:
 1883 0030 00000000 		.word	M1_FD
 1884 0034 00000000 		.word	M1_BD
 1885 0038 00000000 		.word	.LC0
 1886 003c 00000000 		.word	motor1Enable
 1887              		.cfi_endproc
 1888              	.LFE79:
 1889              		.size	stopMotor1AndUpdate, .-stopMotor1AndUpdate
 1890              		.section	.text.stopMotor2AndUpdate,"ax",%progbits
 1891              		.align	2
 1892              		.global	stopMotor2AndUpdate
 1893              		.thumb
 1894              		.thumb_func
 1895              		.type	stopMotor2AndUpdate, %function
 1896              	stopMotor2AndUpdate:
 1897              	.LFB80:
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccuzBHa9.s 			page 41


 383:dcmotor.c     **** }
 384:dcmotor.c     **** 
 385:dcmotor.c     **** void stopMotor2AndUpdate(void){
 1898              		.loc 1 385 0
 1899              		.cfi_startproc
 1900              		@ args = 0, pretend = 0, frame = 0
 1901              		@ frame_needed = 0, uses_anonymous_args = 0
 1902 0000 10B5     		push	{r4, lr}
 1903              		.cfi_def_cfa_offset 8
 1904              		.cfi_offset 4, -8
 1905              		.cfi_offset 14, -4
 386:dcmotor.c     ****     Motor_2_driver_WriteCompare1(0);
 1906              		.loc 1 386 0
 1907 0002 0020     		movs	r0, #0
 1908 0004 FFF7FEFF 		bl	Motor_2_driver_WriteCompare1
 1909              	.LVL234:
 387:dcmotor.c     ****     Motor_2_driver_WriteCompare2(0);
 1910              		.loc 1 387 0
 1911 0008 0020     		movs	r0, #0
 1912 000a FFF7FEFF 		bl	Motor_2_driver_WriteCompare2
 1913              	.LVL235:
 388:dcmotor.c     ****     Motor_2_Encoder_Counts_Stop();
 1914              		.loc 1 388 0
 1915 000e FFF7FEFF 		bl	Motor_2_Encoder_Counts_Stop
 1916              	.LVL236:
 389:dcmotor.c     ****     M2_FD = 0;
 1917              		.loc 1 389 0
 1918 0012 0024     		movs	r4, #0
 1919 0014 064B     		ldr	r3, .L105
 1920 0016 1C60     		str	r4, [r3]
 390:dcmotor.c     ****     M2_BD = 0;
 1921              		.loc 1 390 0
 1922 0018 064B     		ldr	r3, .L105+4
 1923 001a 1C60     		str	r4, [r3]
 391:dcmotor.c     ****     UART_1_PutString("Counter 2 interrupt \n");
 1924              		.loc 1 391 0
 1925 001c 0648     		ldr	r0, .L105+8
 1926 001e FFF7FEFF 		bl	UART_1_PutString
 1927              	.LVL237:
 392:dcmotor.c     ****     motor2Enable = FALSE;   
 1928              		.loc 1 392 0
 1929 0022 064B     		ldr	r3, .L105+12
 1930 0024 1C80     		strh	r4, [r3]	@ movhi
 393:dcmotor.c     ****     stopMotion();
 1931              		.loc 1 393 0
 1932 0026 FFF7FEFF 		bl	stopMotion
 1933              	.LVL238:
 394:dcmotor.c     ****     Motor_2_Encoder_Counts_ReadStatusRegister(); //Clears the interrupt
 1934              		.loc 1 394 0
 1935 002a FFF7FEFF 		bl	Motor_2_Encoder_Counts_ReadStatusRegister
 1936              	.LVL239:
 1937 002e 10BD     		pop	{r4, pc}
 1938              	.L106:
 1939              		.align	2
 1940              	.L105:
 1941 0030 00000000 		.word	M2_FD
 1942 0034 00000000 		.word	M2_BD
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccuzBHa9.s 			page 42


 1943 0038 18000000 		.word	.LC1
 1944 003c 00000000 		.word	motor2Enable
 1945              		.cfi_endproc
 1946              	.LFE80:
 1947              		.size	stopMotor2AndUpdate, .-stopMotor2AndUpdate
 1948              		.section	.text.moveAndAngle,"ax",%progbits
 1949              		.align	2
 1950              		.global	moveAndAngle
 1951              		.thumb
 1952              		.thumb_func
 1953              		.type	moveAndAngle, %function
 1954              	moveAndAngle:
 1955              	.LFB81:
 395:dcmotor.c     **** }
 396:dcmotor.c     **** 
 397:dcmotor.c     **** void moveAndAngle(int horizontal, int vertical, int angle){
 1956              		.loc 1 397 0
 1957              		.cfi_startproc
 1958              		@ args = 0, pretend = 0, frame = 0
 1959              		@ frame_needed = 0, uses_anonymous_args = 0
 1960              	.LVL240:
 1961 0000 08B5     		push	{r3, lr}
 1962              		.cfi_def_cfa_offset 8
 1963              		.cfi_offset 3, -8
 1964              		.cfi_offset 14, -4
 398:dcmotor.c     ****     // TO COMPLETE NIDHIN
 399:dcmotor.c     ****     UART_1_PutString("Move and Angle called");
 1965              		.loc 1 399 0
 1966 0002 0248     		ldr	r0, .L109
 1967              	.LVL241:
 1968 0004 FFF7FEFF 		bl	UART_1_PutString
 1969              	.LVL242:
 1970 0008 08BD     		pop	{r3, pc}
 1971              	.L110:
 1972 000a 00BF     		.align	2
 1973              	.L109:
 1974 000c 30000000 		.word	.LC2
 1975              		.cfi_endproc
 1976              	.LFE81:
 1977              		.size	moveAndAngle, .-moveAndAngle
 1978              		.global	__aeabi_dcmpgt
 1979              		.section	.text.correctAngle,"ax",%progbits
 1980              		.align	2
 1981              		.global	correctAngle
 1982              		.thumb
 1983              		.thumb_func
 1984              		.type	correctAngle, %function
 1985              	correctAngle:
 1986              	.LFB82:
 400:dcmotor.c     ****     return;    
 401:dcmotor.c     **** }
 402:dcmotor.c     **** 
 403:dcmotor.c     **** void correctAngle(){
 1987              		.loc 1 403 0
 1988              		.cfi_startproc
 1989              		@ args = 0, pretend = 0, frame = 0
 1990              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccuzBHa9.s 			page 43


 1991 0000 10B5     		push	{r4, lr}
 1992              		.cfi_def_cfa_offset 8
 1993              		.cfi_offset 4, -8
 1994              		.cfi_offset 14, -4
 404:dcmotor.c     ****     moveAndAngle(HOME_MIDPOINT, 20, WEST_ANGLE); // Choose west angle because nothing will be block
 1995              		.loc 1 404 0
 1996 0002 B422     		movs	r2, #180
 1997 0004 1421     		movs	r1, #20
 1998 0006 3C20     		movs	r0, #60
 1999 0008 FFF7FEFF 		bl	moveAndAngle
 2000              	.LVL243:
 405:dcmotor.c     ****     distanceCheck();
 2001              		.loc 1 405 0
 2002 000c FFF7FEFF 		bl	distanceCheck
 2003              	.LVL244:
 406:dcmotor.c     ****     // rotate by micro steps until front two sensors are equal within tolerance
 407:dcmotor.c     ****     
 408:dcmotor.c     ****     int error = abs(ultrasonic_distances[LEFT_FRONT] - ultrasonic_distances[RIGHT_FRONT]);
 2004              		.loc 1 408 0
 2005 0010 0D4B     		ldr	r3, .L114+8
 2006 0012 9968     		ldr	r1, [r3, #8]	@ float
 2007 0014 5868     		ldr	r0, [r3, #4]	@ float
 2008 0016 FFF7FEFF 		bl	__aeabi_fsub
 2009              	.LVL245:
 2010 001a FFF7FEFF 		bl	__aeabi_f2d
 2011              	.LVL246:
 2012 001e FFF7FEFF 		bl	abs
 2013              	.LVL247:
 2014 0022 0446     		mov	r4, r0
 2015              	.LVL248:
 2016              	.L112:
 409:dcmotor.c     ****     while (error > ANGLE_TOLERANCE){
 2017              		.loc 1 409 0
 2018 0024 2046     		mov	r0, r4
 2019 0026 FFF7FEFF 		bl	__aeabi_i2d
 2020              	.LVL249:
 2021 002a 05A3     		adr	r3, .L114
 2022 002c D3E90023 		ldrd	r2, [r3]
 2023 0030 FFF7FEFF 		bl	__aeabi_dcmpgt
 2024              	.LVL250:
 2025 0034 0028     		cmp	r0, #0
 2026 0036 F5D1     		bne	.L112
 410:dcmotor.c     ****         // microTurn();
 411:dcmotor.c     ****         error = abs(ultrasonic_distances[LEFT_FRONT] - ultrasonic_distances[RIGHT_FRONT]);
 412:dcmotor.c     ****     }
 413:dcmotor.c     ****     
 414:dcmotor.c     **** }
 2027              		.loc 1 414 0
 2028 0038 10BD     		pop	{r4, pc}
 2029              	.LVL251:
 2030              	.L115:
 2031 003a 00BFAFF3 		.align	3
 2031      0080
 2032              	.L114:
 2033 0040 7B14AE47 		.word	1202590843
 2034 0044 E17A843F 		.word	1065646817
 2035 0048 00000000 		.word	ultrasonic_distances
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccuzBHa9.s 			page 44


 2036              		.cfi_endproc
 2037              	.LFE82:
 2038              		.size	correctAngle, .-correctAngle
 2039              		.comm	motor2EncoderCounts,4,4
 2040              		.comm	motor1EncoderCounts,4,4
 2041              		.comm	M2_BD,4,4
 2042              		.comm	M2_FD,4,4
 2043              		.comm	M1_BD,4,4
 2044              		.comm	M1_FD,4,4
 2045              		.comm	motor2Enable,2,2
 2046              		.comm	motor1Enable,2,2
 2047              		.comm	initialisation,4,4
 2048              		.comm	output,32,4
 2049              		.comm	turningRightFlag,2,2
 2050              		.comm	turningLeftFlag,2,2
 2051              		.comm	drivingBackwardFlag,2,2
 2052              		.comm	drivingForwardFlag,2,2
 2053              		.comm	puckPileLocation,4,4
 2054              		.comm	block_edge_location,16,4
 2055              		.comm	sweeping,4,4
 2056              		.comm	puckRackOffsetsFromWest,20,4
 2057              		.comm	puckRackColours,20,4
 2058              		.comm	currentPuckRackScanningIndex,4,4
 2059              		.comm	driveStraightEnable,4,4
 2060              		.section	.rodata.str1.4,"aMS",%progbits,1
 2061              		.align	2
 2062              	.LC0:
 2063 0000 436F756E 		.ascii	"Counter 1 interrupt \012\000"
 2063      74657220 
 2063      3120696E 
 2063      74657272 
 2063      75707420 
 2064 0016 0000     		.space	2
 2065              	.LC1:
 2066 0018 436F756E 		.ascii	"Counter 2 interrupt \012\000"
 2066      74657220 
 2066      3220696E 
 2066      74657272 
 2066      75707420 
 2067 002e 0000     		.space	2
 2068              	.LC2:
 2069 0030 4D6F7665 		.ascii	"Move and Angle called\000"
 2069      20616E64 
 2069      20416E67 
 2069      6C652063 
 2069      616C6C65 
 2070              		.text
 2071              	.Letext0:
 2072              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 2073              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 2074              		.file 4 "Generated_Source\\PSoC5/core_cm3.h"
 2075              		.file 5 "main.h"
 2076              		.file 6 "ultrasonic.h"
 2077              		.file 7 "dcmotor.h"
 2078              		.file 8 "customMath.h"
 2079              		.file 9 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 2080              		.file 10 "Generated_Source\\PSoC5/Motor_1_Encoder_Counts.h"
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccuzBHa9.s 			page 45


 2081              		.file 11 "Generated_Source\\PSoC5/Motor_2_Encoder_Counts.h"
 2082              		.file 12 "Generated_Source\\PSoC5/Motor_1_driver.h"
 2083              		.file 13 "Generated_Source\\PSoC5/Motor_2_driver.h"
 2084              		.file 14 "Generated_Source\\PSoC5/Drift_Check_Timer.h"
 2085              		.file 15 "Generated_Source\\PSoC5/UART_1.h"
 2086              		.file 16 "<built-in>"
 2087              		.section	.debug_info,"",%progbits
 2088              	.Ldebug_info0:
 2089 0000 3E0C0000 		.4byte	0xc3e
 2090 0004 0400     		.2byte	0x4
 2091 0006 00000000 		.4byte	.Ldebug_abbrev0
 2092 000a 04       		.byte	0x4
 2093 000b 01       		.uleb128 0x1
 2094 000c 5D060000 		.4byte	.LASF96
 2095 0010 0C       		.byte	0xc
 2096 0011 A6030000 		.4byte	.LASF97
 2097 0015 C0050000 		.4byte	.LASF98
 2098 0019 00000000 		.4byte	.Ldebug_ranges0+0
 2099 001d 00000000 		.4byte	0
 2100 0021 00000000 		.4byte	.Ldebug_line0
 2101 0025 02       		.uleb128 0x2
 2102 0026 04       		.byte	0x4
 2103 0027 04       		.byte	0x4
 2104 0028 EA010000 		.4byte	.LASF0
 2105 002c 02       		.uleb128 0x2
 2106 002d 08       		.byte	0x8
 2107 002e 04       		.byte	0x4
 2108 002f 2E050000 		.4byte	.LASF1
 2109 0033 02       		.uleb128 0x2
 2110 0034 01       		.byte	0x1
 2111 0035 06       		.byte	0x6
 2112 0036 6F030000 		.4byte	.LASF2
 2113 003a 02       		.uleb128 0x2
 2114 003b 01       		.byte	0x1
 2115 003c 08       		.byte	0x8
 2116 003d 1B030000 		.4byte	.LASF3
 2117 0041 02       		.uleb128 0x2
 2118 0042 02       		.byte	0x2
 2119 0043 05       		.byte	0x5
 2120 0044 8A000000 		.4byte	.LASF4
 2121 0048 02       		.uleb128 0x2
 2122 0049 02       		.byte	0x2
 2123 004a 07       		.byte	0x7
 2124 004b F2030000 		.4byte	.LASF5
 2125 004f 03       		.uleb128 0x3
 2126 0050 A6050000 		.4byte	.LASF11
 2127 0054 02       		.byte	0x2
 2128 0055 3F       		.byte	0x3f
 2129 0056 5A000000 		.4byte	0x5a
 2130 005a 02       		.uleb128 0x2
 2131 005b 04       		.byte	0x4
 2132 005c 05       		.byte	0x5
 2133 005d 8D020000 		.4byte	.LASF6
 2134 0061 02       		.uleb128 0x2
 2135 0062 04       		.byte	0x4
 2136 0063 07       		.byte	0x7
 2137 0064 BA020000 		.4byte	.LASF7
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccuzBHa9.s 			page 46


 2138 0068 02       		.uleb128 0x2
 2139 0069 08       		.byte	0x8
 2140 006a 05       		.byte	0x5
 2141 006b 30020000 		.4byte	.LASF8
 2142 006f 02       		.uleb128 0x2
 2143 0070 08       		.byte	0x8
 2144 0071 07       		.byte	0x7
 2145 0072 8F030000 		.4byte	.LASF9
 2146 0076 04       		.uleb128 0x4
 2147 0077 04       		.byte	0x4
 2148 0078 05       		.byte	0x5
 2149 0079 696E7400 		.ascii	"int\000"
 2150 007d 02       		.uleb128 0x2
 2151 007e 04       		.byte	0x4
 2152 007f 07       		.byte	0x7
 2153 0080 B0030000 		.4byte	.LASF10
 2154 0084 03       		.uleb128 0x3
 2155 0085 28040000 		.4byte	.LASF12
 2156 0089 03       		.byte	0x3
 2157 008a 2C       		.byte	0x2c
 2158 008b 4F000000 		.4byte	0x4f
 2159 008f 02       		.uleb128 0x2
 2160 0090 01       		.byte	0x1
 2161 0091 08       		.byte	0x8
 2162 0092 1D040000 		.4byte	.LASF13
 2163 0096 02       		.uleb128 0x2
 2164 0097 08       		.byte	0x8
 2165 0098 04       		.byte	0x4
 2166 0099 29030000 		.4byte	.LASF14
 2167 009d 02       		.uleb128 0x2
 2168 009e 04       		.byte	0x4
 2169 009f 07       		.byte	0x7
 2170 00a0 34060000 		.4byte	.LASF15
 2171 00a4 05       		.uleb128 0x5
 2172 00a5 05040000 		.4byte	.LASF19
 2173 00a9 01       		.byte	0x1
 2174 00aa 23       		.byte	0x23
 2175 00ab 00000000 		.4byte	.LFB64
 2176 00af 5C010000 		.4byte	.LFE64-.LFB64
 2177 00b3 01       		.uleb128 0x1
 2178 00b4 9C       		.byte	0x9c
 2179 00b5 1A010000 		.4byte	0x11a
 2180 00b9 06       		.uleb128 0x6
 2181 00ba E0030000 		.4byte	.LASF16
 2182 00be 01       		.byte	0x1
 2183 00bf 23       		.byte	0x23
 2184 00c0 76000000 		.4byte	0x76
 2185 00c4 00000000 		.4byte	.LLST0
 2186 00c8 06       		.uleb128 0x6
 2187 00c9 B8000000 		.4byte	.LASF17
 2188 00cd 01       		.byte	0x1
 2189 00ce 23       		.byte	0x23
 2190 00cf 76000000 		.4byte	0x76
 2191 00d3 45000000 		.4byte	.LLST1
 2192 00d7 06       		.uleb128 0x6
 2193 00d8 D9020000 		.4byte	.LASF18
 2194 00dc 01       		.byte	0x1
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccuzBHa9.s 			page 47


 2195 00dd 23       		.byte	0x23
 2196 00de 76000000 		.4byte	0x76
 2197 00e2 8A000000 		.4byte	.LLST2
 2198 00e6 07       		.uleb128 0x7
 2199 00e7 58040000 		.4byte	.LASF23
 2200 00eb 01       		.byte	0x1
 2201 00ec 24       		.byte	0x24
 2202 00ed 25000000 		.4byte	0x25
 2203 00f1 CF000000 		.4byte	.LLST3
 2204 00f5 08       		.uleb128 0x8
 2205 00f6 50000000 		.4byte	.LVL15
 2206 00fa 380B0000 		.4byte	0xb38
 2207 00fe 08       		.uleb128 0x8
 2208 00ff 84000000 		.4byte	.LVL20
 2209 0103 430B0000 		.4byte	0xb43
 2210 0107 08       		.uleb128 0x8
 2211 0108 E0000000 		.4byte	.LVL35
 2212 010c 380B0000 		.4byte	0xb38
 2213 0110 08       		.uleb128 0x8
 2214 0111 14010000 		.4byte	.LVL40
 2215 0115 430B0000 		.4byte	0xb43
 2216 0119 00       		.byte	0
 2217 011a 05       		.uleb128 0x5
 2218 011b A5040000 		.4byte	.LASF20
 2219 011f 01       		.byte	0x1
 2220 0120 33       		.byte	0x33
 2221 0121 00000000 		.4byte	.LFB65
 2222 0125 78000000 		.4byte	.LFE65-.LFB65
 2223 0129 01       		.uleb128 0x1
 2224 012a 9C       		.byte	0x9c
 2225 012b 6C010000 		.4byte	0x16c
 2226 012f 06       		.uleb128 0x6
 2227 0130 E0030000 		.4byte	.LASF16
 2228 0134 01       		.byte	0x1
 2229 0135 33       		.byte	0x33
 2230 0136 76000000 		.4byte	0x76
 2231 013a 03010000 		.4byte	.LLST4
 2232 013e 06       		.uleb128 0x6
 2233 013f 75000000 		.4byte	.LASF21
 2234 0143 01       		.byte	0x1
 2235 0144 33       		.byte	0x33
 2236 0145 76000000 		.4byte	0x76
 2237 0149 24010000 		.4byte	.LLST5
 2238 014d 06       		.uleb128 0x6
 2239 014e D9010000 		.4byte	.LASF22
 2240 0152 01       		.byte	0x1
 2241 0153 33       		.byte	0x33
 2242 0154 76000000 		.4byte	0x76
 2243 0158 50010000 		.4byte	.LLST6
 2244 015c 07       		.uleb128 0x7
 2245 015d CB000000 		.4byte	.LASF24
 2246 0161 01       		.byte	0x1
 2247 0162 34       		.byte	0x34
 2248 0163 76000000 		.4byte	0x76
 2249 0167 7C010000 		.4byte	.LLST7
 2250 016b 00       		.byte	0
 2251 016c 09       		.uleb128 0x9
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccuzBHa9.s 			page 48


 2252 016d AF020000 		.4byte	.LASF25
 2253 0171 01       		.byte	0x1
 2254 0172 43       		.byte	0x43
 2255 0173 00000000 		.4byte	.LFB66
 2256 0177 C8000000 		.4byte	.LFE66-.LFB66
 2257 017b 01       		.uleb128 0x1
 2258 017c 9C       		.byte	0x9c
 2259 017d F3010000 		.4byte	0x1f3
 2260 0181 0A       		.uleb128 0xa
 2261 0182 16000000 		.4byte	.LBB2
 2262 0186 B2000000 		.4byte	.LBE2-.LBB2
 2263 018a 07       		.uleb128 0x7
 2264 018b 1D000000 		.4byte	.LASF26
 2265 018f 01       		.byte	0x1
 2266 0190 47       		.byte	0x47
 2267 0191 76000000 		.4byte	0x76
 2268 0195 9A010000 		.4byte	.LLST8
 2269 0199 08       		.uleb128 0x8
 2270 019a 2E000000 		.4byte	.LVL53
 2271 019e 4E0B0000 		.4byte	0xb4e
 2272 01a2 08       		.uleb128 0x8
 2273 01a3 3E000000 		.4byte	.LVL54
 2274 01a7 A4000000 		.4byte	0xa4
 2275 01ab 08       		.uleb128 0x8
 2276 01ac 4E000000 		.4byte	.LVL55
 2277 01b0 590B0000 		.4byte	0xb59
 2278 01b4 08       		.uleb128 0x8
 2279 01b5 5E000000 		.4byte	.LVL56
 2280 01b9 1A010000 		.4byte	0x11a
 2281 01bd 08       		.uleb128 0x8
 2282 01be 6E000000 		.4byte	.LVL57
 2283 01c2 4E0B0000 		.4byte	0xb4e
 2284 01c6 08       		.uleb128 0x8
 2285 01c7 7E000000 		.4byte	.LVL58
 2286 01cb 1A010000 		.4byte	0x11a
 2287 01cf 0B       		.uleb128 0xb
 2288 01d0 84000000 		.4byte	.LVL59
 2289 01d4 640B0000 		.4byte	0xb64
 2290 01d8 E2010000 		.4byte	0x1e2
 2291 01dc 0C       		.uleb128 0xc
 2292 01dd 01       		.uleb128 0x1
 2293 01de 50       		.byte	0x50
 2294 01df 01       		.uleb128 0x1
 2295 01e0 30       		.byte	0x30
 2296 01e1 00       		.byte	0
 2297 01e2 0D       		.uleb128 0xd
 2298 01e3 8A000000 		.4byte	.LVL60
 2299 01e7 6F0B0000 		.4byte	0xb6f
 2300 01eb 0C       		.uleb128 0xc
 2301 01ec 01       		.uleb128 0x1
 2302 01ed 50       		.byte	0x50
 2303 01ee 01       		.uleb128 0x1
 2304 01ef 30       		.byte	0x30
 2305 01f0 00       		.byte	0
 2306 01f1 00       		.byte	0
 2307 01f2 00       		.byte	0
 2308 01f3 05       		.uleb128 0x5
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccuzBHa9.s 			page 49


 2309 01f4 78020000 		.4byte	.LASF27
 2310 01f8 01       		.byte	0x1
 2311 01f9 68       		.byte	0x68
 2312 01fa 00000000 		.4byte	.LFB67
 2313 01fe 70000000 		.4byte	.LFE67-.LFB67
 2314 0202 01       		.uleb128 0x1
 2315 0203 9C       		.byte	0x9c
 2316 0204 69020000 		.4byte	0x269
 2317 0208 06       		.uleb128 0x6
 2318 0209 9F040000 		.4byte	.LASF28
 2319 020d 01       		.byte	0x1
 2320 020e 68       		.byte	0x68
 2321 020f 25000000 		.4byte	0x25
 2322 0213 C3010000 		.4byte	.LLST9
 2323 0217 06       		.uleb128 0x6
 2324 0218 22040000 		.4byte	.LASF29
 2325 021c 01       		.byte	0x1
 2326 021d 68       		.byte	0x68
 2327 021e 25000000 		.4byte	0x25
 2328 0222 E6010000 		.4byte	.LLST10
 2329 0226 06       		.uleb128 0x6
 2330 0227 0B070000 		.4byte	.LASF30
 2331 022b 01       		.byte	0x1
 2332 022c 68       		.byte	0x68
 2333 022d 25000000 		.4byte	0x25
 2334 0231 14020000 		.4byte	.LLST11
 2335 0235 06       		.uleb128 0x6
 2336 0236 50060000 		.4byte	.LASF31
 2337 023a 01       		.byte	0x1
 2338 023b 68       		.byte	0x68
 2339 023c 25000000 		.4byte	0x25
 2340 0240 42020000 		.4byte	.LLST12
 2341 0244 08       		.uleb128 0x8
 2342 0245 1E000000 		.4byte	.LVL66
 2343 0249 7A0B0000 		.4byte	0xb7a
 2344 024d 08       		.uleb128 0x8
 2345 024e 36000000 		.4byte	.LVL70
 2346 0252 850B0000 		.4byte	0xb85
 2347 0256 08       		.uleb128 0x8
 2348 0257 4E000000 		.4byte	.LVL74
 2349 025b 900B0000 		.4byte	0xb90
 2350 025f 08       		.uleb128 0x8
 2351 0260 66000000 		.4byte	.LVL78
 2352 0264 9B0B0000 		.4byte	0xb9b
 2353 0268 00       		.byte	0
 2354 0269 05       		.uleb128 0x5
 2355 026a 34010000 		.4byte	.LASF32
 2356 026e 01       		.byte	0x1
 2357 026f 71       		.byte	0x71
 2358 0270 00000000 		.4byte	.LFB68
 2359 0274 B0010000 		.4byte	.LFE68-.LFB68
 2360 0278 01       		.uleb128 0x1
 2361 0279 9C       		.byte	0x9c
 2362 027a BA020000 		.4byte	0x2ba
 2363 027e 07       		.uleb128 0x7
 2364 027f 85000000 		.4byte	.LASF33
 2365 0283 01       		.byte	0x1
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccuzBHa9.s 			page 50


 2366 0284 72       		.byte	0x72
 2367 0285 76000000 		.4byte	0x76
 2368 0289 70020000 		.4byte	.LLST13
 2369 028d 0B       		.uleb128 0xb
 2370 028e 80010000 		.4byte	.LVL100
 2371 0292 F3010000 		.4byte	0x1f3
 2372 0296 B0020000 		.4byte	0x2b0
 2373 029a 0C       		.uleb128 0xc
 2374 029b 01       		.uleb128 0x1
 2375 029c 51       		.byte	0x51
 2376 029d 03       		.uleb128 0x3
 2377 029e F5       		.byte	0xf5
 2378 029f 04       		.uleb128 0x4
 2379 02a0 25       		.uleb128 0x25
 2380 02a1 0C       		.uleb128 0xc
 2381 02a2 01       		.uleb128 0x1
 2382 02a3 52       		.byte	0x52
 2383 02a4 03       		.uleb128 0x3
 2384 02a5 F5       		.byte	0xf5
 2385 02a6 05       		.uleb128 0x5
 2386 02a7 25       		.uleb128 0x25
 2387 02a8 0C       		.uleb128 0xc
 2388 02a9 01       		.uleb128 0x1
 2389 02aa 53       		.byte	0x53
 2390 02ab 03       		.uleb128 0x3
 2391 02ac F5       		.byte	0xf5
 2392 02ad 06       		.uleb128 0x6
 2393 02ae 25       		.uleb128 0x25
 2394 02af 00       		.byte	0
 2395 02b0 08       		.uleb128 0x8
 2396 02b1 84010000 		.4byte	.LVL101
 2397 02b5 A60B0000 		.4byte	0xba6
 2398 02b9 00       		.byte	0
 2399 02ba 09       		.uleb128 0x9
 2400 02bb 41010000 		.4byte	.LASF34
 2401 02bf 01       		.byte	0x1
 2402 02c0 C0       		.byte	0xc0
 2403 02c1 00000000 		.4byte	.LFB69
 2404 02c5 20000000 		.4byte	.LFE69-.LFB69
 2405 02c9 01       		.uleb128 0x1
 2406 02ca 9C       		.byte	0x9c
 2407 02cb 38030000 		.4byte	0x338
 2408 02cf 06       		.uleb128 0x6
 2409 02d0 98050000 		.4byte	.LASF35
 2410 02d4 01       		.byte	0x1
 2411 02d5 C0       		.byte	0xc0
 2412 02d6 76000000 		.4byte	0x76
 2413 02da D0020000 		.4byte	.LLST14
 2414 02de 06       		.uleb128 0x6
 2415 02df 9F050000 		.4byte	.LASF36
 2416 02e3 01       		.byte	0x1
 2417 02e4 C0       		.byte	0xc0
 2418 02e5 76000000 		.4byte	0x76
 2419 02e9 EE020000 		.4byte	.LLST15
 2420 02ed 0B       		.uleb128 0xb
 2421 02ee 0C000000 		.4byte	.LVL104
 2422 02f2 640B0000 		.4byte	0xb64
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccuzBHa9.s 			page 51


 2423 02f6 00030000 		.4byte	0x300
 2424 02fa 0C       		.uleb128 0xc
 2425 02fb 01       		.uleb128 0x1
 2426 02fc 50       		.byte	0x50
 2427 02fd 01       		.uleb128 0x1
 2428 02fe 30       		.byte	0x30
 2429 02ff 00       		.byte	0
 2430 0300 0B       		.uleb128 0xb
 2431 0301 12000000 		.4byte	.LVL105
 2432 0305 6F0B0000 		.4byte	0xb6f
 2433 0309 13030000 		.4byte	0x313
 2434 030d 0C       		.uleb128 0xc
 2435 030e 01       		.uleb128 0x1
 2436 030f 50       		.byte	0x50
 2437 0310 01       		.uleb128 0x1
 2438 0311 30       		.byte	0x30
 2439 0312 00       		.byte	0
 2440 0313 0B       		.uleb128 0xb
 2441 0314 18000000 		.4byte	.LVL106
 2442 0318 B10B0000 		.4byte	0xbb1
 2443 031c 27030000 		.4byte	0x327
 2444 0320 0C       		.uleb128 0xc
 2445 0321 01       		.uleb128 0x1
 2446 0322 50       		.byte	0x50
 2447 0323 02       		.uleb128 0x2
 2448 0324 75       		.byte	0x75
 2449 0325 00       		.sleb128 0
 2450 0326 00       		.byte	0
 2451 0327 0D       		.uleb128 0xd
 2452 0328 1E000000 		.4byte	.LVL107
 2453 032c BC0B0000 		.4byte	0xbbc
 2454 0330 0C       		.uleb128 0xc
 2455 0331 01       		.uleb128 0x1
 2456 0332 50       		.byte	0x50
 2457 0333 02       		.uleb128 0x2
 2458 0334 74       		.byte	0x74
 2459 0335 00       		.sleb128 0
 2460 0336 00       		.byte	0
 2461 0337 00       		.byte	0
 2462 0338 05       		.uleb128 0x5
 2463 0339 CD010000 		.4byte	.LASF37
 2464 033d 01       		.byte	0x1
 2465 033e C8       		.byte	0xc8
 2466 033f 00000000 		.4byte	.LFB70
 2467 0343 C4000000 		.4byte	.LFE70-.LFB70
 2468 0347 01       		.uleb128 0x1
 2469 0348 9C       		.byte	0x9c
 2470 0349 AF030000 		.4byte	0x3af
 2471 034d 06       		.uleb128 0x6
 2472 034e 56060000 		.4byte	.LASF38
 2473 0352 01       		.byte	0x1
 2474 0353 C8       		.byte	0xc8
 2475 0354 25000000 		.4byte	0x25
 2476 0358 0C030000 		.4byte	.LLST16
 2477 035c 07       		.uleb128 0x7
 2478 035d E0030000 		.4byte	.LASF16
 2479 0361 01       		.byte	0x1
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccuzBHa9.s 			page 52


 2480 0362 C9       		.byte	0xc9
 2481 0363 76000000 		.4byte	0x76
 2482 0367 2F030000 		.4byte	.LLST17
 2483 036b 08       		.uleb128 0x8
 2484 036c 34000000 		.4byte	.LVL112
 2485 0370 BA020000 		.4byte	0x2ba
 2486 0374 08       		.uleb128 0x8
 2487 0375 4E000000 		.4byte	.LVL113
 2488 0379 C70B0000 		.4byte	0xbc7
 2489 037d 08       		.uleb128 0x8
 2490 037e 52000000 		.4byte	.LVL114
 2491 0382 D20B0000 		.4byte	0xbd2
 2492 0386 08       		.uleb128 0x8
 2493 0387 56000000 		.4byte	.LVL115
 2494 038b A60B0000 		.4byte	0xba6
 2495 038f 0D       		.uleb128 0xd
 2496 0390 80000000 		.4byte	.LVL120
 2497 0394 F3010000 		.4byte	0x1f3
 2498 0398 0C       		.uleb128 0xc
 2499 0399 01       		.uleb128 0x1
 2500 039a 51       		.byte	0x51
 2501 039b 03       		.uleb128 0x3
 2502 039c F5       		.byte	0xf5
 2503 039d 04       		.uleb128 0x4
 2504 039e 25       		.uleb128 0x25
 2505 039f 0C       		.uleb128 0xc
 2506 03a0 01       		.uleb128 0x1
 2507 03a1 52       		.byte	0x52
 2508 03a2 03       		.uleb128 0x3
 2509 03a3 F5       		.byte	0xf5
 2510 03a4 07       		.uleb128 0x7
 2511 03a5 25       		.uleb128 0x25
 2512 03a6 0C       		.uleb128 0xc
 2513 03a7 01       		.uleb128 0x1
 2514 03a8 53       		.byte	0x53
 2515 03a9 03       		.uleb128 0x3
 2516 03aa F5       		.byte	0xf5
 2517 03ab 08       		.uleb128 0x8
 2518 03ac 25       		.uleb128 0x25
 2519 03ad 00       		.byte	0
 2520 03ae 00       		.byte	0
 2521 03af 05       		.uleb128 0x5
 2522 03b0 2D000000 		.4byte	.LASF39
 2523 03b4 01       		.byte	0x1
 2524 03b5 E0       		.byte	0xe0
 2525 03b6 00000000 		.4byte	.LFB71
 2526 03ba 9C000000 		.4byte	.LFE71-.LFB71
 2527 03be 01       		.uleb128 0x1
 2528 03bf 9C       		.byte	0x9c
 2529 03c0 28040000 		.4byte	0x428
 2530 03c4 0E       		.uleb128 0xe
 2531 03c5 E0030000 		.4byte	.LASF16
 2532 03c9 01       		.byte	0x1
 2533 03ca E1       		.byte	0xe1
 2534 03cb 76000000 		.4byte	0x76
 2535 03cf DCFF     		.2byte	0xffdc
 2536 03d1 0B       		.uleb128 0xb
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccuzBHa9.s 			page 53


 2537 03d2 26000000 		.4byte	.LVL122
 2538 03d6 BA020000 		.4byte	0x2ba
 2539 03da ED030000 		.4byte	0x3ed
 2540 03de 0C       		.uleb128 0xc
 2541 03df 01       		.uleb128 0x1
 2542 03e0 50       		.byte	0x50
 2543 03e1 03       		.uleb128 0x3
 2544 03e2 0A       		.byte	0xa
 2545 03e3 DCFF     		.2byte	0xffdc
 2546 03e5 0C       		.uleb128 0xc
 2547 03e6 01       		.uleb128 0x1
 2548 03e7 51       		.byte	0x51
 2549 03e8 03       		.uleb128 0x3
 2550 03e9 0A       		.byte	0xa
 2551 03ea DCFF     		.2byte	0xffdc
 2552 03ec 00       		.byte	0
 2553 03ed 08       		.uleb128 0x8
 2554 03ee 40000000 		.4byte	.LVL123
 2555 03f2 C70B0000 		.4byte	0xbc7
 2556 03f6 08       		.uleb128 0x8
 2557 03f7 44000000 		.4byte	.LVL124
 2558 03fb D20B0000 		.4byte	0xbd2
 2559 03ff 08       		.uleb128 0x8
 2560 0400 48000000 		.4byte	.LVL125
 2561 0404 A60B0000 		.4byte	0xba6
 2562 0408 0D       		.uleb128 0xd
 2563 0409 72000000 		.4byte	.LVL130
 2564 040d F3010000 		.4byte	0x1f3
 2565 0411 0C       		.uleb128 0xc
 2566 0412 01       		.uleb128 0x1
 2567 0413 51       		.byte	0x51
 2568 0414 03       		.uleb128 0x3
 2569 0415 F5       		.byte	0xf5
 2570 0416 04       		.uleb128 0x4
 2571 0417 25       		.uleb128 0x25
 2572 0418 0C       		.uleb128 0xc
 2573 0419 01       		.uleb128 0x1
 2574 041a 52       		.byte	0x52
 2575 041b 03       		.uleb128 0x3
 2576 041c F5       		.byte	0xf5
 2577 041d 07       		.uleb128 0x7
 2578 041e 25       		.uleb128 0x25
 2579 041f 0C       		.uleb128 0xc
 2580 0420 01       		.uleb128 0x1
 2581 0421 53       		.byte	0x53
 2582 0422 03       		.uleb128 0x3
 2583 0423 F5       		.byte	0xf5
 2584 0424 08       		.uleb128 0x8
 2585 0425 25       		.uleb128 0x25
 2586 0426 00       		.byte	0
 2587 0427 00       		.byte	0
 2588 0428 05       		.uleb128 0x5
 2589 0429 CC020000 		.4byte	.LASF40
 2590 042d 01       		.byte	0x1
 2591 042e F3       		.byte	0xf3
 2592 042f 00000000 		.4byte	.LFB72
 2593 0433 C4000000 		.4byte	.LFE72-.LFB72
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccuzBHa9.s 			page 54


 2594 0437 01       		.uleb128 0x1
 2595 0438 9C       		.byte	0x9c
 2596 0439 9F040000 		.4byte	0x49f
 2597 043d 06       		.uleb128 0x6
 2598 043e 56060000 		.4byte	.LASF38
 2599 0442 01       		.byte	0x1
 2600 0443 F3       		.byte	0xf3
 2601 0444 25000000 		.4byte	0x25
 2602 0448 42030000 		.4byte	.LLST18
 2603 044c 07       		.uleb128 0x7
 2604 044d E0030000 		.4byte	.LASF16
 2605 0451 01       		.byte	0x1
 2606 0452 F4       		.byte	0xf4
 2607 0453 76000000 		.4byte	0x76
 2608 0457 65030000 		.4byte	.LLST19
 2609 045b 08       		.uleb128 0x8
 2610 045c 34000000 		.4byte	.LVL135
 2611 0460 BA020000 		.4byte	0x2ba
 2612 0464 08       		.uleb128 0x8
 2613 0465 4A000000 		.4byte	.LVL136
 2614 0469 C70B0000 		.4byte	0xbc7
 2615 046d 08       		.uleb128 0x8
 2616 046e 4E000000 		.4byte	.LVL137
 2617 0472 D20B0000 		.4byte	0xbd2
 2618 0476 08       		.uleb128 0x8
 2619 0477 52000000 		.4byte	.LVL138
 2620 047b A60B0000 		.4byte	0xba6
 2621 047f 0D       		.uleb128 0xd
 2622 0480 7A000000 		.4byte	.LVL143
 2623 0484 F3010000 		.4byte	0x1f3
 2624 0488 0C       		.uleb128 0xc
 2625 0489 01       		.uleb128 0x1
 2626 048a 51       		.byte	0x51
 2627 048b 03       		.uleb128 0x3
 2628 048c F5       		.byte	0xf5
 2629 048d 04       		.uleb128 0x4
 2630 048e 25       		.uleb128 0x25
 2631 048f 0C       		.uleb128 0xc
 2632 0490 01       		.uleb128 0x1
 2633 0491 52       		.byte	0x52
 2634 0492 03       		.uleb128 0x3
 2635 0493 F5       		.byte	0xf5
 2636 0494 07       		.uleb128 0x7
 2637 0495 25       		.uleb128 0x25
 2638 0496 0C       		.uleb128 0xc
 2639 0497 01       		.uleb128 0x1
 2640 0498 53       		.byte	0x53
 2641 0499 03       		.uleb128 0x3
 2642 049a F5       		.byte	0xf5
 2643 049b 08       		.uleb128 0x8
 2644 049c 25       		.uleb128 0x25
 2645 049d 00       		.byte	0
 2646 049e 00       		.byte	0
 2647 049f 0F       		.uleb128 0xf
 2648 04a0 96020000 		.4byte	.LASF41
 2649 04a4 01       		.byte	0x1
 2650 04a5 0A01     		.2byte	0x10a
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccuzBHa9.s 			page 55


 2651 04a7 00000000 		.4byte	.LFB73
 2652 04ab 94000000 		.4byte	.LFE73-.LFB73
 2653 04af 01       		.uleb128 0x1
 2654 04b0 9C       		.byte	0x9c
 2655 04b1 1A050000 		.4byte	0x51a
 2656 04b5 10       		.uleb128 0x10
 2657 04b6 E0030000 		.4byte	.LASF16
 2658 04ba 01       		.byte	0x1
 2659 04bb 0B01     		.2byte	0x10b
 2660 04bd 76000000 		.4byte	0x76
 2661 04c1 DCFF     		.2byte	0xffdc
 2662 04c3 0B       		.uleb128 0xb
 2663 04c4 26000000 		.4byte	.LVL145
 2664 04c8 BA020000 		.4byte	0x2ba
 2665 04cc DF040000 		.4byte	0x4df
 2666 04d0 0C       		.uleb128 0xc
 2667 04d1 01       		.uleb128 0x1
 2668 04d2 50       		.byte	0x50
 2669 04d3 03       		.uleb128 0x3
 2670 04d4 0A       		.byte	0xa
 2671 04d5 DCFF     		.2byte	0xffdc
 2672 04d7 0C       		.uleb128 0xc
 2673 04d8 01       		.uleb128 0x1
 2674 04d9 51       		.byte	0x51
 2675 04da 03       		.uleb128 0x3
 2676 04db 0A       		.byte	0xa
 2677 04dc DCFF     		.2byte	0xffdc
 2678 04de 00       		.byte	0
 2679 04df 08       		.uleb128 0x8
 2680 04e0 3C000000 		.4byte	.LVL146
 2681 04e4 C70B0000 		.4byte	0xbc7
 2682 04e8 08       		.uleb128 0x8
 2683 04e9 40000000 		.4byte	.LVL147
 2684 04ed D20B0000 		.4byte	0xbd2
 2685 04f1 08       		.uleb128 0x8
 2686 04f2 44000000 		.4byte	.LVL148
 2687 04f6 A60B0000 		.4byte	0xba6
 2688 04fa 0D       		.uleb128 0xd
 2689 04fb 6C000000 		.4byte	.LVL153
 2690 04ff F3010000 		.4byte	0x1f3
 2691 0503 0C       		.uleb128 0xc
 2692 0504 01       		.uleb128 0x1
 2693 0505 51       		.byte	0x51
 2694 0506 03       		.uleb128 0x3
 2695 0507 F5       		.byte	0xf5
 2696 0508 04       		.uleb128 0x4
 2697 0509 25       		.uleb128 0x25
 2698 050a 0C       		.uleb128 0xc
 2699 050b 01       		.uleb128 0x1
 2700 050c 52       		.byte	0x52
 2701 050d 03       		.uleb128 0x3
 2702 050e F5       		.byte	0xf5
 2703 050f 07       		.uleb128 0x7
 2704 0510 25       		.uleb128 0x25
 2705 0511 0C       		.uleb128 0xc
 2706 0512 01       		.uleb128 0x1
 2707 0513 53       		.byte	0x53
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccuzBHa9.s 			page 56


 2708 0514 03       		.uleb128 0x3
 2709 0515 F5       		.byte	0xf5
 2710 0516 08       		.uleb128 0x8
 2711 0517 25       		.uleb128 0x25
 2712 0518 00       		.byte	0
 2713 0519 00       		.byte	0
 2714 051a 0F       		.uleb128 0xf
 2715 051b 60030000 		.4byte	.LASF42
 2716 051f 01       		.byte	0x1
 2717 0520 1D01     		.2byte	0x11d
 2718 0522 00000000 		.4byte	.LFB74
 2719 0526 CC000000 		.4byte	.LFE74-.LFB74
 2720 052a 01       		.uleb128 0x1
 2721 052b 9C       		.byte	0x9c
 2722 052c 9D050000 		.4byte	0x59d
 2723 0530 11       		.uleb128 0x11
 2724 0531 56060000 		.4byte	.LASF38
 2725 0535 01       		.byte	0x1
 2726 0536 1D01     		.2byte	0x11d
 2727 0538 25000000 		.4byte	0x25
 2728 053c 78030000 		.4byte	.LLST20
 2729 0540 12       		.uleb128 0x12
 2730 0541 E0030000 		.4byte	.LASF16
 2731 0545 01       		.byte	0x1
 2732 0546 2001     		.2byte	0x120
 2733 0548 76000000 		.4byte	0x76
 2734 054c 9B030000 		.4byte	.LLST21
 2735 0550 08       		.uleb128 0x8
 2736 0551 16000000 		.4byte	.LVL157
 2737 0555 DD0B0000 		.4byte	0xbdd
 2738 0559 08       		.uleb128 0x8
 2739 055a 38000000 		.4byte	.LVL159
 2740 055e BA020000 		.4byte	0x2ba
 2741 0562 08       		.uleb128 0x8
 2742 0563 52000000 		.4byte	.LVL160
 2743 0567 C70B0000 		.4byte	0xbc7
 2744 056b 08       		.uleb128 0x8
 2745 056c 56000000 		.4byte	.LVL161
 2746 0570 D20B0000 		.4byte	0xbd2
 2747 0574 08       		.uleb128 0x8
 2748 0575 5A000000 		.4byte	.LVL162
 2749 0579 A60B0000 		.4byte	0xba6
 2750 057d 0D       		.uleb128 0xd
 2751 057e 84000000 		.4byte	.LVL167
 2752 0582 F3010000 		.4byte	0x1f3
 2753 0586 0C       		.uleb128 0xc
 2754 0587 01       		.uleb128 0x1
 2755 0588 51       		.byte	0x51
 2756 0589 03       		.uleb128 0x3
 2757 058a F5       		.byte	0xf5
 2758 058b 04       		.uleb128 0x4
 2759 058c 25       		.uleb128 0x25
 2760 058d 0C       		.uleb128 0xc
 2761 058e 01       		.uleb128 0x1
 2762 058f 52       		.byte	0x52
 2763 0590 03       		.uleb128 0x3
 2764 0591 F5       		.byte	0xf5
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccuzBHa9.s 			page 57


 2765 0592 07       		.uleb128 0x7
 2766 0593 25       		.uleb128 0x25
 2767 0594 0C       		.uleb128 0xc
 2768 0595 01       		.uleb128 0x1
 2769 0596 53       		.byte	0x53
 2770 0597 03       		.uleb128 0x3
 2771 0598 F5       		.byte	0xf5
 2772 0599 08       		.uleb128 0x8
 2773 059a 25       		.uleb128 0x25
 2774 059b 00       		.byte	0
 2775 059c 00       		.byte	0
 2776 059d 0F       		.uleb128 0xf
 2777 059e 2A060000 		.4byte	.LASF43
 2778 05a2 01       		.byte	0x1
 2779 05a3 3501     		.2byte	0x135
 2780 05a5 00000000 		.4byte	.LFB75
 2781 05a9 C4000000 		.4byte	.LFE75-.LFB75
 2782 05ad 01       		.uleb128 0x1
 2783 05ae 9C       		.byte	0x9c
 2784 05af 20060000 		.4byte	0x620
 2785 05b3 11       		.uleb128 0x11
 2786 05b4 56060000 		.4byte	.LASF38
 2787 05b8 01       		.byte	0x1
 2788 05b9 3501     		.2byte	0x135
 2789 05bb 25000000 		.4byte	0x25
 2790 05bf AE030000 		.4byte	.LLST22
 2791 05c3 12       		.uleb128 0x12
 2792 05c4 E0030000 		.4byte	.LASF16
 2793 05c8 01       		.byte	0x1
 2794 05c9 3601     		.2byte	0x136
 2795 05cb 76000000 		.4byte	0x76
 2796 05cf D1030000 		.4byte	.LLST23
 2797 05d3 08       		.uleb128 0x8
 2798 05d4 16000000 		.4byte	.LVL171
 2799 05d8 DD0B0000 		.4byte	0xbdd
 2800 05dc 08       		.uleb128 0x8
 2801 05dd 38000000 		.4byte	.LVL173
 2802 05e1 BA020000 		.4byte	0x2ba
 2803 05e5 08       		.uleb128 0x8
 2804 05e6 4E000000 		.4byte	.LVL174
 2805 05ea C70B0000 		.4byte	0xbc7
 2806 05ee 08       		.uleb128 0x8
 2807 05ef 52000000 		.4byte	.LVL175
 2808 05f3 D20B0000 		.4byte	0xbd2
 2809 05f7 08       		.uleb128 0x8
 2810 05f8 56000000 		.4byte	.LVL176
 2811 05fc A60B0000 		.4byte	0xba6
 2812 0600 0D       		.uleb128 0xd
 2813 0601 7E000000 		.4byte	.LVL181
 2814 0605 F3010000 		.4byte	0x1f3
 2815 0609 0C       		.uleb128 0xc
 2816 060a 01       		.uleb128 0x1
 2817 060b 51       		.byte	0x51
 2818 060c 03       		.uleb128 0x3
 2819 060d F5       		.byte	0xf5
 2820 060e 04       		.uleb128 0x4
 2821 060f 25       		.uleb128 0x25
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccuzBHa9.s 			page 58


 2822 0610 0C       		.uleb128 0xc
 2823 0611 01       		.uleb128 0x1
 2824 0612 52       		.byte	0x52
 2825 0613 03       		.uleb128 0x3
 2826 0614 F5       		.byte	0xf5
 2827 0615 07       		.uleb128 0x7
 2828 0616 25       		.uleb128 0x25
 2829 0617 0C       		.uleb128 0xc
 2830 0618 01       		.uleb128 0x1
 2831 0619 53       		.byte	0x53
 2832 061a 03       		.uleb128 0x3
 2833 061b F5       		.byte	0xf5
 2834 061c 08       		.uleb128 0x8
 2835 061d 25       		.uleb128 0x25
 2836 061e 00       		.byte	0
 2837 061f 00       		.byte	0
 2838 0620 0F       		.uleb128 0xf
 2839 0621 FE060000 		.4byte	.LASF44
 2840 0625 01       		.byte	0x1
 2841 0626 4E01     		.2byte	0x14e
 2842 0628 00000000 		.4byte	.LFB76
 2843 062c 78000000 		.4byte	.LFE76-.LFB76
 2844 0630 01       		.uleb128 0x1
 2845 0631 9C       		.byte	0x9c
 2846 0632 B5060000 		.4byte	0x6b5
 2847 0636 11       		.uleb128 0x11
 2848 0637 56060000 		.4byte	.LASF38
 2849 063b 01       		.byte	0x1
 2850 063c 4E01     		.2byte	0x14e
 2851 063e 76000000 		.4byte	0x76
 2852 0642 E4030000 		.4byte	.LLST24
 2853 0646 11       		.uleb128 0x11
 2854 0647 35030000 		.4byte	.LASF45
 2855 064b 01       		.byte	0x1
 2856 064c 4E01     		.2byte	0x14e
 2857 064e 76000000 		.4byte	0x76
 2858 0652 10040000 		.4byte	.LLST25
 2859 0656 12       		.uleb128 0x12
 2860 0657 85000000 		.4byte	.LASF33
 2861 065b 01       		.byte	0x1
 2862 065c 5001     		.2byte	0x150
 2863 065e 25000000 		.4byte	0x25
 2864 0662 3C040000 		.4byte	.LLST26
 2865 0666 0B       		.uleb128 0xb
 2866 0667 14000000 		.4byte	.LVL185
 2867 066b 9D050000 		.4byte	0x59d
 2868 066f 7B060000 		.4byte	0x67b
 2869 0673 0C       		.uleb128 0xc
 2870 0674 01       		.uleb128 0x1
 2871 0675 50       		.byte	0x50
 2872 0676 03       		.uleb128 0x3
 2873 0677 F5       		.byte	0xf5
 2874 0678 08       		.uleb128 0x8
 2875 0679 25       		.uleb128 0x25
 2876 067a 00       		.byte	0
 2877 067b 08       		.uleb128 0x8
 2878 067c 36000000 		.4byte	.LVL191
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccuzBHa9.s 			page 59


 2879 0680 430B0000 		.4byte	0xb43
 2880 0684 08       		.uleb128 0x8
 2881 0685 4A000000 		.4byte	.LVL194
 2882 0689 28040000 		.4byte	0x428
 2883 068d 0B       		.uleb128 0xb
 2884 068e 50000000 		.4byte	.LVL195
 2885 0692 1A050000 		.4byte	0x51a
 2886 0696 A2060000 		.4byte	0x6a2
 2887 069a 0C       		.uleb128 0xc
 2888 069b 01       		.uleb128 0x1
 2889 069c 50       		.byte	0x50
 2890 069d 03       		.uleb128 0x3
 2891 069e F5       		.byte	0xf5
 2892 069f 08       		.uleb128 0x8
 2893 06a0 25       		.uleb128 0x25
 2894 06a1 00       		.byte	0
 2895 06a2 08       		.uleb128 0x8
 2896 06a3 58000000 		.4byte	.LVL196
 2897 06a7 E90B0000 		.4byte	0xbe9
 2898 06ab 08       		.uleb128 0x8
 2899 06ac 6C000000 		.4byte	.LVL199
 2900 06b0 38030000 		.4byte	0x338
 2901 06b4 00       		.byte	0
 2902 06b5 0F       		.uleb128 0xf
 2903 06b6 7D050000 		.4byte	.LASF46
 2904 06ba 01       		.byte	0x1
 2905 06bb 5A01     		.2byte	0x15a
 2906 06bd 00000000 		.4byte	.LFB77
 2907 06c1 78000000 		.4byte	.LFE77-.LFB77
 2908 06c5 01       		.uleb128 0x1
 2909 06c6 9C       		.byte	0x9c
 2910 06c7 4A070000 		.4byte	0x74a
 2911 06cb 11       		.uleb128 0x11
 2912 06cc 56060000 		.4byte	.LASF38
 2913 06d0 01       		.byte	0x1
 2914 06d1 5A01     		.2byte	0x15a
 2915 06d3 76000000 		.4byte	0x76
 2916 06d7 64040000 		.4byte	.LLST27
 2917 06db 11       		.uleb128 0x11
 2918 06dc 35030000 		.4byte	.LASF45
 2919 06e0 01       		.byte	0x1
 2920 06e1 5A01     		.2byte	0x15a
 2921 06e3 76000000 		.4byte	0x76
 2922 06e7 90040000 		.4byte	.LLST28
 2923 06eb 12       		.uleb128 0x12
 2924 06ec 85000000 		.4byte	.LASF33
 2925 06f0 01       		.byte	0x1
 2926 06f1 5C01     		.2byte	0x15c
 2927 06f3 25000000 		.4byte	0x25
 2928 06f7 BC040000 		.4byte	.LLST29
 2929 06fb 0B       		.uleb128 0xb
 2930 06fc 14000000 		.4byte	.LVL203
 2931 0700 1A050000 		.4byte	0x51a
 2932 0704 10070000 		.4byte	0x710
 2933 0708 0C       		.uleb128 0xc
 2934 0709 01       		.uleb128 0x1
 2935 070a 50       		.byte	0x50
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccuzBHa9.s 			page 60


 2936 070b 03       		.uleb128 0x3
 2937 070c F5       		.byte	0xf5
 2938 070d 08       		.uleb128 0x8
 2939 070e 25       		.uleb128 0x25
 2940 070f 00       		.byte	0
 2941 0710 08       		.uleb128 0x8
 2942 0711 36000000 		.4byte	.LVL209
 2943 0715 430B0000 		.4byte	0xb43
 2944 0719 08       		.uleb128 0x8
 2945 071a 4A000000 		.4byte	.LVL212
 2946 071e 28040000 		.4byte	0x428
 2947 0722 0B       		.uleb128 0xb
 2948 0723 50000000 		.4byte	.LVL213
 2949 0727 9D050000 		.4byte	0x59d
 2950 072b 37070000 		.4byte	0x737
 2951 072f 0C       		.uleb128 0xc
 2952 0730 01       		.uleb128 0x1
 2953 0731 50       		.byte	0x50
 2954 0732 03       		.uleb128 0x3
 2955 0733 F5       		.byte	0xf5
 2956 0734 08       		.uleb128 0x8
 2957 0735 25       		.uleb128 0x25
 2958 0736 00       		.byte	0
 2959 0737 08       		.uleb128 0x8
 2960 0738 58000000 		.4byte	.LVL214
 2961 073c E90B0000 		.4byte	0xbe9
 2962 0740 08       		.uleb128 0x8
 2963 0741 6C000000 		.4byte	.LVL217
 2964 0745 38030000 		.4byte	0x338
 2965 0749 00       		.byte	0
 2966 074a 0F       		.uleb128 0xf
 2967 074b E7030000 		.4byte	.LASF47
 2968 074f 01       		.byte	0x1
 2969 0750 6601     		.2byte	0x166
 2970 0752 00000000 		.4byte	.LFB78
 2971 0756 64000000 		.4byte	.LFE78-.LFB78
 2972 075a 01       		.uleb128 0x1
 2973 075b 9C       		.byte	0x9c
 2974 075c 94070000 		.4byte	0x794
 2975 0760 11       		.uleb128 0x11
 2976 0761 8F040000 		.4byte	.LASF48
 2977 0765 01       		.byte	0x1
 2978 0766 6601     		.2byte	0x166
 2979 0768 94070000 		.4byte	0x794
 2980 076c E4040000 		.4byte	.LLST30
 2981 0770 0A       		.uleb128 0xa
 2982 0771 20000000 		.4byte	.LBB3
 2983 0775 44000000 		.4byte	.LBE3-.LBB3
 2984 0779 12       		.uleb128 0x12
 2985 077a D8000000 		.4byte	.LASF49
 2986 077e 01       		.byte	0x1
 2987 077f 6C01     		.2byte	0x16c
 2988 0781 25000000 		.4byte	0x25
 2989 0785 10050000 		.4byte	.LLST31
 2990 0789 08       		.uleb128 0x8
 2991 078a 52000000 		.4byte	.LVL226
 2992 078e 1A050000 		.4byte	0x51a
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccuzBHa9.s 			page 61


 2993 0792 00       		.byte	0
 2994 0793 00       		.byte	0
 2995 0794 13       		.uleb128 0x13
 2996 0795 04       		.byte	0x4
 2997 0796 76000000 		.4byte	0x76
 2998 079a 14       		.uleb128 0x14
 2999 079b 44040000 		.4byte	.LASF50
 3000 079f 01       		.byte	0x1
 3001 07a0 7501     		.2byte	0x175
 3002 07a2 00000000 		.4byte	.LFB79
 3003 07a6 40000000 		.4byte	.LFE79-.LFB79
 3004 07aa 01       		.uleb128 0x1
 3005 07ab 9C       		.byte	0x9c
 3006 07ac 09080000 		.4byte	0x809
 3007 07b0 0B       		.uleb128 0xb
 3008 07b1 08000000 		.4byte	.LVL228
 3009 07b5 7A0B0000 		.4byte	0xb7a
 3010 07b9 C3070000 		.4byte	0x7c3
 3011 07bd 0C       		.uleb128 0xc
 3012 07be 01       		.uleb128 0x1
 3013 07bf 50       		.byte	0x50
 3014 07c0 01       		.uleb128 0x1
 3015 07c1 30       		.byte	0x30
 3016 07c2 00       		.byte	0
 3017 07c3 0B       		.uleb128 0xb
 3018 07c4 0E000000 		.4byte	.LVL229
 3019 07c8 900B0000 		.4byte	0xb90
 3020 07cc D6070000 		.4byte	0x7d6
 3021 07d0 0C       		.uleb128 0xc
 3022 07d1 01       		.uleb128 0x1
 3023 07d2 50       		.byte	0x50
 3024 07d3 01       		.uleb128 0x1
 3025 07d4 30       		.byte	0x30
 3026 07d5 00       		.byte	0
 3027 07d6 08       		.uleb128 0x8
 3028 07d7 12000000 		.4byte	.LVL230
 3029 07db F40B0000 		.4byte	0xbf4
 3030 07df 0B       		.uleb128 0xb
 3031 07e0 22000000 		.4byte	.LVL231
 3032 07e4 FF0B0000 		.4byte	0xbff
 3033 07e8 F6070000 		.4byte	0x7f6
 3034 07ec 0C       		.uleb128 0xc
 3035 07ed 01       		.uleb128 0x1
 3036 07ee 50       		.byte	0x50
 3037 07ef 05       		.uleb128 0x5
 3038 07f0 03       		.byte	0x3
 3039 07f1 00000000 		.4byte	.LC0
 3040 07f5 00       		.byte	0
 3041 07f6 08       		.uleb128 0x8
 3042 07f7 2A000000 		.4byte	.LVL232
 3043 07fb 6C010000 		.4byte	0x16c
 3044 07ff 08       		.uleb128 0x8
 3045 0800 2E000000 		.4byte	.LVL233
 3046 0804 0A0C0000 		.4byte	0xc0a
 3047 0808 00       		.byte	0
 3048 0809 14       		.uleb128 0x14
 3049 080a 94000000 		.4byte	.LASF51
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccuzBHa9.s 			page 62


 3050 080e 01       		.byte	0x1
 3051 080f 8101     		.2byte	0x181
 3052 0811 00000000 		.4byte	.LFB80
 3053 0815 40000000 		.4byte	.LFE80-.LFB80
 3054 0819 01       		.uleb128 0x1
 3055 081a 9C       		.byte	0x9c
 3056 081b 78080000 		.4byte	0x878
 3057 081f 0B       		.uleb128 0xb
 3058 0820 08000000 		.4byte	.LVL234
 3059 0824 850B0000 		.4byte	0xb85
 3060 0828 32080000 		.4byte	0x832
 3061 082c 0C       		.uleb128 0xc
 3062 082d 01       		.uleb128 0x1
 3063 082e 50       		.byte	0x50
 3064 082f 01       		.uleb128 0x1
 3065 0830 30       		.byte	0x30
 3066 0831 00       		.byte	0
 3067 0832 0B       		.uleb128 0xb
 3068 0833 0E000000 		.4byte	.LVL235
 3069 0837 9B0B0000 		.4byte	0xb9b
 3070 083b 45080000 		.4byte	0x845
 3071 083f 0C       		.uleb128 0xc
 3072 0840 01       		.uleb128 0x1
 3073 0841 50       		.byte	0x50
 3074 0842 01       		.uleb128 0x1
 3075 0843 30       		.byte	0x30
 3076 0844 00       		.byte	0
 3077 0845 08       		.uleb128 0x8
 3078 0846 12000000 		.4byte	.LVL236
 3079 084a 150C0000 		.4byte	0xc15
 3080 084e 0B       		.uleb128 0xb
 3081 084f 22000000 		.4byte	.LVL237
 3082 0853 FF0B0000 		.4byte	0xbff
 3083 0857 65080000 		.4byte	0x865
 3084 085b 0C       		.uleb128 0xc
 3085 085c 01       		.uleb128 0x1
 3086 085d 50       		.byte	0x50
 3087 085e 05       		.uleb128 0x5
 3088 085f 03       		.byte	0x3
 3089 0860 18000000 		.4byte	.LC1
 3090 0864 00       		.byte	0
 3091 0865 08       		.uleb128 0x8
 3092 0866 2A000000 		.4byte	.LVL238
 3093 086a 6C010000 		.4byte	0x16c
 3094 086e 08       		.uleb128 0x8
 3095 086f 2E000000 		.4byte	.LVL239
 3096 0873 200C0000 		.4byte	0xc20
 3097 0877 00       		.byte	0
 3098 0878 14       		.uleb128 0x14
 3099 0879 E1040000 		.4byte	.LASF52
 3100 087d 01       		.byte	0x1
 3101 087e 8D01     		.2byte	0x18d
 3102 0880 00000000 		.4byte	.LFB81
 3103 0884 10000000 		.4byte	.LFE81-.LFB81
 3104 0888 01       		.uleb128 0x1
 3105 0889 9C       		.byte	0x9c
 3106 088a D2080000 		.4byte	0x8d2
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccuzBHa9.s 			page 63


 3107 088e 11       		.uleb128 0x11
 3108 088f E0000000 		.4byte	.LASF53
 3109 0893 01       		.byte	0x1
 3110 0894 8D01     		.2byte	0x18d
 3111 0896 76000000 		.4byte	0x76
 3112 089a 23050000 		.4byte	.LLST32
 3113 089e 11       		.uleb128 0x11
 3114 089f 14000000 		.4byte	.LASF54
 3115 08a3 01       		.byte	0x1
 3116 08a4 8D01     		.2byte	0x18d
 3117 08a6 76000000 		.4byte	0x76
 3118 08aa 44050000 		.4byte	.LLST33
 3119 08ae 11       		.uleb128 0x11
 3120 08af 3D060000 		.4byte	.LASF55
 3121 08b3 01       		.byte	0x1
 3122 08b4 8D01     		.2byte	0x18d
 3123 08b6 76000000 		.4byte	0x76
 3124 08ba 65050000 		.4byte	.LLST34
 3125 08be 0D       		.uleb128 0xd
 3126 08bf 08000000 		.4byte	.LVL242
 3127 08c3 FF0B0000 		.4byte	0xbff
 3128 08c7 0C       		.uleb128 0xc
 3129 08c8 01       		.uleb128 0x1
 3130 08c9 50       		.byte	0x50
 3131 08ca 05       		.uleb128 0x5
 3132 08cb 03       		.byte	0x3
 3133 08cc 30000000 		.4byte	.LC2
 3134 08d0 00       		.byte	0
 3135 08d1 00       		.byte	0
 3136 08d2 15       		.uleb128 0x15
 3137 08d3 68000000 		.4byte	.LASF99
 3138 08d7 01       		.byte	0x1
 3139 08d8 9301     		.2byte	0x193
 3140 08da 00000000 		.4byte	.LFB82
 3141 08de 4C000000 		.4byte	.LFE82-.LFB82
 3142 08e2 01       		.uleb128 0x1
 3143 08e3 9C       		.byte	0x9c
 3144 08e4 3B090000 		.4byte	0x93b
 3145 08e8 12       		.uleb128 0x12
 3146 08e9 4A060000 		.4byte	.LASF56
 3147 08ed 01       		.byte	0x1
 3148 08ee 9801     		.2byte	0x198
 3149 08f0 76000000 		.4byte	0x76
 3150 08f4 86050000 		.4byte	.LLST35
 3151 08f8 16       		.uleb128 0x16
 3152 08f9 61627300 		.ascii	"abs\000"
 3153 08fd 10       		.byte	0x10
 3154 08fe 00       		.byte	0
 3155 08ff 76000000 		.4byte	0x76
 3156 0903 09090000 		.4byte	0x909
 3157 0907 17       		.uleb128 0x17
 3158 0908 00       		.byte	0
 3159 0909 0B       		.uleb128 0xb
 3160 090a 0C000000 		.4byte	.LVL243
 3161 090e 78080000 		.4byte	0x878
 3162 0912 28090000 		.4byte	0x928
 3163 0916 0C       		.uleb128 0xc
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccuzBHa9.s 			page 64


 3164 0917 01       		.uleb128 0x1
 3165 0918 50       		.byte	0x50
 3166 0919 02       		.uleb128 0x2
 3167 091a 08       		.byte	0x8
 3168 091b 3C       		.byte	0x3c
 3169 091c 0C       		.uleb128 0xc
 3170 091d 01       		.uleb128 0x1
 3171 091e 51       		.byte	0x51
 3172 091f 01       		.uleb128 0x1
 3173 0920 44       		.byte	0x44
 3174 0921 0C       		.uleb128 0xc
 3175 0922 01       		.uleb128 0x1
 3176 0923 52       		.byte	0x52
 3177 0924 02       		.uleb128 0x2
 3178 0925 08       		.byte	0x8
 3179 0926 B4       		.byte	0xb4
 3180 0927 00       		.byte	0
 3181 0928 08       		.uleb128 0x8
 3182 0929 10000000 		.4byte	.LVL244
 3183 092d 2B0C0000 		.4byte	0xc2b
 3184 0931 08       		.uleb128 0x8
 3185 0932 22000000 		.4byte	.LVL247
 3186 0936 360C0000 		.4byte	0xc36
 3187 093a 00       		.byte	0
 3188 093b 18       		.uleb128 0x18
 3189 093c 46050000 		.4byte	.LASF57
 3190 0940 04       		.byte	0x4
 3191 0941 1207     		.2byte	0x712
 3192 0943 47090000 		.4byte	0x947
 3193 0947 19       		.uleb128 0x19
 3194 0948 84000000 		.4byte	0x84
 3195 094c 1A       		.uleb128 0x1a
 3196 094d 25000000 		.4byte	0x25
 3197 0951 5C090000 		.4byte	0x95c
 3198 0955 1B       		.uleb128 0x1b
 3199 0956 9D000000 		.4byte	0x9d
 3200 095a 04       		.byte	0x4
 3201 095b 00       		.byte	0
 3202 095c 1C       		.uleb128 0x1c
 3203 095d 1B020000 		.4byte	.LASF58
 3204 0961 05       		.byte	0x5
 3205 0962 88       		.byte	0x88
 3206 0963 4C090000 		.4byte	0x94c
 3207 0967 1D       		.uleb128 0x1d
 3208 0968 30040000 		.4byte	.LASF59
 3209 096c 06       		.byte	0x6
 3210 096d 1D       		.byte	0x1d
 3211 096e 76000000 		.4byte	0x76
 3212 0972 05       		.uleb128 0x5
 3213 0973 03       		.byte	0x3
 3214 0974 00000000 		.4byte	driveStraightEnable
 3215 0978 1D       		.uleb128 0x1d
 3216 0979 FE020000 		.4byte	.LASF60
 3217 097d 06       		.byte	0x6
 3218 097e 1F       		.byte	0x1f
 3219 097f 76000000 		.4byte	0x76
 3220 0983 05       		.uleb128 0x5
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccuzBHa9.s 			page 65


 3221 0984 03       		.byte	0x3
 3222 0985 00000000 		.4byte	currentPuckRackScanningIndex
 3223 0989 1A       		.uleb128 0x1a
 3224 098a 76000000 		.4byte	0x76
 3225 098e 99090000 		.4byte	0x999
 3226 0992 1B       		.uleb128 0x1b
 3227 0993 9D000000 		.4byte	0x9d
 3228 0997 04       		.byte	0x4
 3229 0998 00       		.byte	0
 3230 0999 1D       		.uleb128 0x1d
 3231 099a B0050000 		.4byte	.LASF61
 3232 099e 06       		.byte	0x6
 3233 099f 20       		.byte	0x20
 3234 09a0 89090000 		.4byte	0x989
 3235 09a4 05       		.uleb128 0x5
 3236 09a5 03       		.byte	0x3
 3237 09a6 00000000 		.4byte	puckRackColours
 3238 09aa 1D       		.uleb128 0x1d
 3239 09ab FF000000 		.4byte	.LASF62
 3240 09af 06       		.byte	0x6
 3241 09b0 21       		.byte	0x21
 3242 09b1 89090000 		.4byte	0x989
 3243 09b5 05       		.uleb128 0x5
 3244 09b6 03       		.byte	0x3
 3245 09b7 00000000 		.4byte	puckRackOffsetsFromWest
 3246 09bb 1D       		.uleb128 0x1d
 3247 09bc 14040000 		.4byte	.LASF63
 3248 09c0 06       		.byte	0x6
 3249 09c1 22       		.byte	0x22
 3250 09c2 76000000 		.4byte	0x76
 3251 09c6 05       		.uleb128 0x5
 3252 09c7 03       		.byte	0x3
 3253 09c8 00000000 		.4byte	sweeping
 3254 09cc 1A       		.uleb128 0x1a
 3255 09cd 25000000 		.4byte	0x25
 3256 09d1 DC090000 		.4byte	0x9dc
 3257 09d5 1B       		.uleb128 0x1b
 3258 09d6 9D000000 		.4byte	0x9d
 3259 09da 03       		.byte	0x3
 3260 09db 00       		.byte	0
 3261 09dc 1D       		.uleb128 0x1d
 3262 09dd 7B030000 		.4byte	.LASF64
 3263 09e1 06       		.byte	0x6
 3264 09e2 23       		.byte	0x23
 3265 09e3 CC090000 		.4byte	0x9cc
 3266 09e7 05       		.uleb128 0x5
 3267 09e8 03       		.byte	0x3
 3268 09e9 00000000 		.4byte	block_edge_location
 3269 09ed 1D       		.uleb128 0x1d
 3270 09ee ED020000 		.4byte	.LASF65
 3271 09f2 05       		.byte	0x5
 3272 09f3 7A       		.byte	0x7a
 3273 09f4 25000000 		.4byte	0x25
 3274 09f8 05       		.uleb128 0x5
 3275 09f9 03       		.byte	0x3
 3276 09fa 00000000 		.4byte	puckPileLocation
 3277 09fe 1D       		.uleb128 0x1d
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccuzBHa9.s 			page 66


 3278 09ff B8000000 		.4byte	.LASF17
 3279 0a03 07       		.byte	0x7
 3280 0a04 3D       		.byte	0x3d
 3281 0a05 41000000 		.4byte	0x41
 3282 0a09 05       		.uleb128 0x5
 3283 0a0a 03       		.byte	0x3
 3284 0a0b 00000000 		.4byte	drivingForwardFlag
 3285 0a0f 1D       		.uleb128 0x1d
 3286 0a10 D9020000 		.4byte	.LASF18
 3287 0a14 07       		.byte	0x7
 3288 0a15 3E       		.byte	0x3e
 3289 0a16 41000000 		.4byte	0x41
 3290 0a1a 05       		.uleb128 0x5
 3291 0a1b 03       		.byte	0x3
 3292 0a1c 00000000 		.4byte	drivingBackwardFlag
 3293 0a20 1D       		.uleb128 0x1d
 3294 0a21 75000000 		.4byte	.LASF21
 3295 0a25 07       		.byte	0x7
 3296 0a26 3F       		.byte	0x3f
 3297 0a27 41000000 		.4byte	0x41
 3298 0a2b 05       		.uleb128 0x5
 3299 0a2c 03       		.byte	0x3
 3300 0a2d 00000000 		.4byte	turningLeftFlag
 3301 0a31 1D       		.uleb128 0x1d
 3302 0a32 D9010000 		.4byte	.LASF22
 3303 0a36 07       		.byte	0x7
 3304 0a37 40       		.byte	0x40
 3305 0a38 41000000 		.4byte	0x41
 3306 0a3c 05       		.uleb128 0x5
 3307 0a3d 03       		.byte	0x3
 3308 0a3e 00000000 		.4byte	turningRightFlag
 3309 0a42 1D       		.uleb128 0x1d
 3310 0a43 11070000 		.4byte	.LASF66
 3311 0a47 06       		.byte	0x6
 3312 0a48 2B       		.byte	0x2b
 3313 0a49 76000000 		.4byte	0x76
 3314 0a4d 05       		.uleb128 0x5
 3315 0a4e 03       		.byte	0x3
 3316 0a4f 00000000 		.4byte	initialisation
 3317 0a53 1A       		.uleb128 0x1a
 3318 0a54 8F000000 		.4byte	0x8f
 3319 0a58 630A0000 		.4byte	0xa63
 3320 0a5c 1B       		.uleb128 0x1b
 3321 0a5d 9D000000 		.4byte	0x9d
 3322 0a61 1F       		.byte	0x1f
 3323 0a62 00       		.byte	0
 3324 0a63 1D       		.uleb128 0x1d
 3325 0a64 43060000 		.4byte	.LASF67
 3326 0a68 07       		.byte	0x7
 3327 0a69 48       		.byte	0x48
 3328 0a6a 530A0000 		.4byte	0xa53
 3329 0a6e 05       		.uleb128 0x5
 3330 0a6f 03       		.byte	0x3
 3331 0a70 00000000 		.4byte	output
 3332 0a74 1D       		.uleb128 0x1d
 3333 0a75 9F040000 		.4byte	.LASF28
 3334 0a79 07       		.byte	0x7
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccuzBHa9.s 			page 67


 3335 0a7a 2D       		.byte	0x2d
 3336 0a7b 76000000 		.4byte	0x76
 3337 0a7f 05       		.uleb128 0x5
 3338 0a80 03       		.byte	0x3
 3339 0a81 00000000 		.4byte	M1_FD
 3340 0a85 1D       		.uleb128 0x1d
 3341 0a86 22040000 		.4byte	.LASF29
 3342 0a8a 07       		.byte	0x7
 3343 0a8b 2E       		.byte	0x2e
 3344 0a8c 76000000 		.4byte	0x76
 3345 0a90 05       		.uleb128 0x5
 3346 0a91 03       		.byte	0x3
 3347 0a92 00000000 		.4byte	M1_BD
 3348 0a96 1D       		.uleb128 0x1d
 3349 0a97 0B070000 		.4byte	.LASF30
 3350 0a9b 07       		.byte	0x7
 3351 0a9c 2F       		.byte	0x2f
 3352 0a9d 76000000 		.4byte	0x76
 3353 0aa1 05       		.uleb128 0x5
 3354 0aa2 03       		.byte	0x3
 3355 0aa3 00000000 		.4byte	M2_FD
 3356 0aa7 1D       		.uleb128 0x1d
 3357 0aa8 50060000 		.4byte	.LASF31
 3358 0aac 07       		.byte	0x7
 3359 0aad 30       		.byte	0x30
 3360 0aae 76000000 		.4byte	0x76
 3361 0ab2 05       		.uleb128 0x5
 3362 0ab3 03       		.byte	0x3
 3363 0ab4 00000000 		.4byte	M2_BD
 3364 0ab8 1D       		.uleb128 0x1d
 3365 0ab9 B1010000 		.4byte	.LASF68
 3366 0abd 07       		.byte	0x7
 3367 0abe 2B       		.byte	0x2b
 3368 0abf 41000000 		.4byte	0x41
 3369 0ac3 05       		.uleb128 0x5
 3370 0ac4 03       		.byte	0x3
 3371 0ac5 00000000 		.4byte	motor1Enable
 3372 0ac9 1D       		.uleb128 0x1d
 3373 0aca 8B050000 		.4byte	.LASF69
 3374 0ace 07       		.byte	0x7
 3375 0acf 2C       		.byte	0x2c
 3376 0ad0 41000000 		.4byte	0x41
 3377 0ad4 05       		.uleb128 0x5
 3378 0ad5 03       		.byte	0x3
 3379 0ad6 00000000 		.4byte	motor2Enable
 3380 0ada 1D       		.uleb128 0x1d
 3381 0adb EB000000 		.4byte	.LASF70
 3382 0adf 07       		.byte	0x7
 3383 0ae0 31       		.byte	0x31
 3384 0ae1 76000000 		.4byte	0x76
 3385 0ae5 05       		.uleb128 0x5
 3386 0ae6 03       		.byte	0x3
 3387 0ae7 00000000 		.4byte	motor1EncoderCounts
 3388 0aeb 1D       		.uleb128 0x1d
 3389 0aec 00000000 		.4byte	.LASF71
 3390 0af0 07       		.byte	0x7
 3391 0af1 32       		.byte	0x32
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccuzBHa9.s 			page 68


 3392 0af2 76000000 		.4byte	0x76
 3393 0af6 05       		.uleb128 0x5
 3394 0af7 03       		.byte	0x3
 3395 0af8 00000000 		.4byte	motor2EncoderCounts
 3396 0afc 1A       		.uleb128 0x1a
 3397 0afd 25000000 		.4byte	0x25
 3398 0b01 0C0B0000 		.4byte	0xb0c
 3399 0b05 1B       		.uleb128 0x1b
 3400 0b06 9D000000 		.4byte	0x9d
 3401 0b0a 01       		.byte	0x1
 3402 0b0b 00       		.byte	0
 3403 0b0c 1C       		.uleb128 0x1c
 3404 0b0d A8000000 		.4byte	.LASF72
 3405 0b11 07       		.byte	0x7
 3406 0b12 27       		.byte	0x27
 3407 0b13 FC0A0000 		.4byte	0xafc
 3408 0b17 1C       		.uleb128 0x1c
 3409 0b18 EB060000 		.4byte	.LASF73
 3410 0b1c 08       		.byte	0x8
 3411 0b1d 10       		.byte	0x10
 3412 0b1e 76000000 		.4byte	0x76
 3413 0b22 1C       		.uleb128 0x1c
 3414 0b23 BE010000 		.4byte	.LASF74
 3415 0b27 07       		.byte	0x7
 3416 0b28 36       		.byte	0x36
 3417 0b29 CC090000 		.4byte	0x9cc
 3418 0b2d 1C       		.uleb128 0x1c
 3419 0b2e 1A060000 		.4byte	.LASF75
 3420 0b32 07       		.byte	0x7
 3421 0b33 43       		.byte	0x43
 3422 0b34 41000000 		.4byte	0x41
 3423 0b38 1E       		.uleb128 0x1e
 3424 0b39 636F7300 		.ascii	"cos\000"
 3425 0b3d 636F7300 		.ascii	"cos\000"
 3426 0b41 09       		.byte	0x9
 3427 0b42 6E       		.byte	0x6e
 3428 0b43 1E       		.uleb128 0x1e
 3429 0b44 73696E00 		.ascii	"sin\000"
 3430 0b48 73696E00 		.ascii	"sin\000"
 3431 0b4c 09       		.byte	0x9
 3432 0b4d 6F       		.byte	0x6f
 3433 0b4e 1F       		.uleb128 0x1f
 3434 0b4f 38070000 		.4byte	.LASF76
 3435 0b53 38070000 		.4byte	.LASF76
 3436 0b57 0A       		.byte	0xa
 3437 0b58 5D       		.byte	0x5d
 3438 0b59 1F       		.uleb128 0x1f
 3439 0b5a BD030000 		.4byte	.LASF77
 3440 0b5e BD030000 		.4byte	.LASF77
 3441 0b62 0B       		.byte	0xb
 3442 0b63 5D       		.byte	0x5d
 3443 0b64 1F       		.uleb128 0x1f
 3444 0b65 8D010000 		.4byte	.LASF78
 3445 0b69 8D010000 		.4byte	.LASF78
 3446 0b6d 0A       		.byte	0xa
 3447 0b6e 5A       		.byte	0x5a
 3448 0b6f 1F       		.uleb128 0x1f
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccuzBHa9.s 			page 69


 3449 0b70 EE040000 		.4byte	.LASF79
 3450 0b74 EE040000 		.4byte	.LASF79
 3451 0b78 0B       		.byte	0xb
 3452 0b79 5A       		.byte	0x5a
 3453 0b7a 1F       		.uleb128 0x1f
 3454 0b7b 53010000 		.4byte	.LASF80
 3455 0b7f 53010000 		.4byte	.LASF80
 3456 0b83 0C       		.byte	0xc
 3457 0b84 C7       		.byte	0xc7
 3458 0b85 1F       		.uleb128 0x1f
 3459 0b86 3E020000 		.4byte	.LASF81
 3460 0b8a 3E020000 		.4byte	.LASF81
 3461 0b8e 0D       		.byte	0xd
 3462 0b8f C7       		.byte	0xc7
 3463 0b90 1F       		.uleb128 0x1f
 3464 0b91 70010000 		.4byte	.LASF82
 3465 0b95 70010000 		.4byte	.LASF82
 3466 0b99 0C       		.byte	0xc
 3467 0b9a CA       		.byte	0xca
 3468 0b9b 1F       		.uleb128 0x1f
 3469 0b9c 5B020000 		.4byte	.LASF83
 3470 0ba0 5B020000 		.4byte	.LASF83
 3471 0ba4 0D       		.byte	0xd
 3472 0ba5 CA       		.byte	0xca
 3473 0ba6 1F       		.uleb128 0x1f
 3474 0ba7 20070000 		.4byte	.LASF84
 3475 0bab 20070000 		.4byte	.LASF84
 3476 0baf 0E       		.byte	0xe
 3477 0bb0 5A       		.byte	0x5a
 3478 0bb1 1F       		.uleb128 0x1f
 3479 0bb2 3D030000 		.4byte	.LASF85
 3480 0bb6 3D030000 		.4byte	.LASF85
 3481 0bba 0A       		.byte	0xa
 3482 0bbb 5F       		.byte	0x5f
 3483 0bbc 1F       		.uleb128 0x1f
 3484 0bbd 45000000 		.4byte	.LASF86
 3485 0bc1 45000000 		.4byte	.LASF86
 3486 0bc5 0B       		.byte	0xb
 3487 0bc6 5F       		.byte	0x5f
 3488 0bc7 1F       		.uleb128 0x1f
 3489 0bc8 17010000 		.4byte	.LASF87
 3490 0bcc 17010000 		.4byte	.LASF87
 3491 0bd0 0A       		.byte	0xa
 3492 0bd1 4F       		.byte	0x4f
 3493 0bd2 1F       		.uleb128 0x1f
 3494 0bd3 F0010000 		.4byte	.LASF88
 3495 0bd7 F0010000 		.4byte	.LASF88
 3496 0bdb 0B       		.byte	0xb
 3497 0bdc 4F       		.byte	0x4f
 3498 0bdd 20       		.uleb128 0x20
 3499 0bde 69030000 		.4byte	.LASF89
 3500 0be2 69030000 		.4byte	.LASF89
 3501 0be6 09       		.byte	0x9
 3502 0be7 4B01     		.2byte	0x14b
 3503 0be9 1E       		.uleb128 0x1e
 3504 0bea 74616E00 		.ascii	"tan\000"
 3505 0bee 74616E00 		.ascii	"tan\000"
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccuzBHa9.s 			page 70


 3506 0bf2 09       		.byte	0x9
 3507 0bf3 70       		.byte	0x70
 3508 0bf4 1F       		.uleb128 0x1f
 3509 0bf5 12050000 		.4byte	.LASF90
 3510 0bf9 12050000 		.4byte	.LASF90
 3511 0bfd 0A       		.byte	0xa
 3512 0bfe 50       		.byte	0x50
 3513 0bff 1F       		.uleb128 0x1f
 3514 0c00 35050000 		.4byte	.LASF91
 3515 0c04 35050000 		.4byte	.LASF91
 3516 0c08 0F       		.byte	0xf
 3517 0c09 8B       		.byte	0x8b
 3518 0c0a 1F       		.uleb128 0x1f
 3519 0c0b B7040000 		.4byte	.LASF92
 3520 0c0f B7040000 		.4byte	.LASF92
 3521 0c13 0A       		.byte	0xa
 3522 0c14 52       		.byte	0x52
 3523 0c15 1F       		.uleb128 0x1f
 3524 0c16 73040000 		.4byte	.LASF93
 3525 0c1a 73040000 		.4byte	.LASF93
 3526 0c1e 0B       		.byte	0xb
 3527 0c1f 50       		.byte	0x50
 3528 0c20 1F       		.uleb128 0x1f
 3529 0c21 53050000 		.4byte	.LASF94
 3530 0c25 53050000 		.4byte	.LASF94
 3531 0c29 0B       		.byte	0xb
 3532 0c2a 52       		.byte	0x52
 3533 0c2b 1F       		.uleb128 0x1f
 3534 0c2c 0D020000 		.4byte	.LASF95
 3535 0c30 0D020000 		.4byte	.LASF95
 3536 0c34 06       		.byte	0x6
 3537 0c35 15       		.byte	0x15
 3538 0c36 1E       		.uleb128 0x1e
 3539 0c37 61627300 		.ascii	"abs\000"
 3540 0c3b 61627300 		.ascii	"abs\000"
 3541 0c3f 10       		.byte	0x10
 3542 0c40 00       		.byte	0
 3543 0c41 00       		.byte	0
 3544              		.section	.debug_abbrev,"",%progbits
 3545              	.Ldebug_abbrev0:
 3546 0000 01       		.uleb128 0x1
 3547 0001 11       		.uleb128 0x11
 3548 0002 01       		.byte	0x1
 3549 0003 25       		.uleb128 0x25
 3550 0004 0E       		.uleb128 0xe
 3551 0005 13       		.uleb128 0x13
 3552 0006 0B       		.uleb128 0xb
 3553 0007 03       		.uleb128 0x3
 3554 0008 0E       		.uleb128 0xe
 3555 0009 1B       		.uleb128 0x1b
 3556 000a 0E       		.uleb128 0xe
 3557 000b 55       		.uleb128 0x55
 3558 000c 17       		.uleb128 0x17
 3559 000d 11       		.uleb128 0x11
 3560 000e 01       		.uleb128 0x1
 3561 000f 10       		.uleb128 0x10
 3562 0010 17       		.uleb128 0x17
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccuzBHa9.s 			page 71


 3563 0011 00       		.byte	0
 3564 0012 00       		.byte	0
 3565 0013 02       		.uleb128 0x2
 3566 0014 24       		.uleb128 0x24
 3567 0015 00       		.byte	0
 3568 0016 0B       		.uleb128 0xb
 3569 0017 0B       		.uleb128 0xb
 3570 0018 3E       		.uleb128 0x3e
 3571 0019 0B       		.uleb128 0xb
 3572 001a 03       		.uleb128 0x3
 3573 001b 0E       		.uleb128 0xe
 3574 001c 00       		.byte	0
 3575 001d 00       		.byte	0
 3576 001e 03       		.uleb128 0x3
 3577 001f 16       		.uleb128 0x16
 3578 0020 00       		.byte	0
 3579 0021 03       		.uleb128 0x3
 3580 0022 0E       		.uleb128 0xe
 3581 0023 3A       		.uleb128 0x3a
 3582 0024 0B       		.uleb128 0xb
 3583 0025 3B       		.uleb128 0x3b
 3584 0026 0B       		.uleb128 0xb
 3585 0027 49       		.uleb128 0x49
 3586 0028 13       		.uleb128 0x13
 3587 0029 00       		.byte	0
 3588 002a 00       		.byte	0
 3589 002b 04       		.uleb128 0x4
 3590 002c 24       		.uleb128 0x24
 3591 002d 00       		.byte	0
 3592 002e 0B       		.uleb128 0xb
 3593 002f 0B       		.uleb128 0xb
 3594 0030 3E       		.uleb128 0x3e
 3595 0031 0B       		.uleb128 0xb
 3596 0032 03       		.uleb128 0x3
 3597 0033 08       		.uleb128 0x8
 3598 0034 00       		.byte	0
 3599 0035 00       		.byte	0
 3600 0036 05       		.uleb128 0x5
 3601 0037 2E       		.uleb128 0x2e
 3602 0038 01       		.byte	0x1
 3603 0039 3F       		.uleb128 0x3f
 3604 003a 19       		.uleb128 0x19
 3605 003b 03       		.uleb128 0x3
 3606 003c 0E       		.uleb128 0xe
 3607 003d 3A       		.uleb128 0x3a
 3608 003e 0B       		.uleb128 0xb
 3609 003f 3B       		.uleb128 0x3b
 3610 0040 0B       		.uleb128 0xb
 3611 0041 27       		.uleb128 0x27
 3612 0042 19       		.uleb128 0x19
 3613 0043 11       		.uleb128 0x11
 3614 0044 01       		.uleb128 0x1
 3615 0045 12       		.uleb128 0x12
 3616 0046 06       		.uleb128 0x6
 3617 0047 40       		.uleb128 0x40
 3618 0048 18       		.uleb128 0x18
 3619 0049 9642     		.uleb128 0x2116
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccuzBHa9.s 			page 72


 3620 004b 19       		.uleb128 0x19
 3621 004c 01       		.uleb128 0x1
 3622 004d 13       		.uleb128 0x13
 3623 004e 00       		.byte	0
 3624 004f 00       		.byte	0
 3625 0050 06       		.uleb128 0x6
 3626 0051 05       		.uleb128 0x5
 3627 0052 00       		.byte	0
 3628 0053 03       		.uleb128 0x3
 3629 0054 0E       		.uleb128 0xe
 3630 0055 3A       		.uleb128 0x3a
 3631 0056 0B       		.uleb128 0xb
 3632 0057 3B       		.uleb128 0x3b
 3633 0058 0B       		.uleb128 0xb
 3634 0059 49       		.uleb128 0x49
 3635 005a 13       		.uleb128 0x13
 3636 005b 02       		.uleb128 0x2
 3637 005c 17       		.uleb128 0x17
 3638 005d 00       		.byte	0
 3639 005e 00       		.byte	0
 3640 005f 07       		.uleb128 0x7
 3641 0060 34       		.uleb128 0x34
 3642 0061 00       		.byte	0
 3643 0062 03       		.uleb128 0x3
 3644 0063 0E       		.uleb128 0xe
 3645 0064 3A       		.uleb128 0x3a
 3646 0065 0B       		.uleb128 0xb
 3647 0066 3B       		.uleb128 0x3b
 3648 0067 0B       		.uleb128 0xb
 3649 0068 49       		.uleb128 0x49
 3650 0069 13       		.uleb128 0x13
 3651 006a 02       		.uleb128 0x2
 3652 006b 17       		.uleb128 0x17
 3653 006c 00       		.byte	0
 3654 006d 00       		.byte	0
 3655 006e 08       		.uleb128 0x8
 3656 006f 898201   		.uleb128 0x4109
 3657 0072 00       		.byte	0
 3658 0073 11       		.uleb128 0x11
 3659 0074 01       		.uleb128 0x1
 3660 0075 31       		.uleb128 0x31
 3661 0076 13       		.uleb128 0x13
 3662 0077 00       		.byte	0
 3663 0078 00       		.byte	0
 3664 0079 09       		.uleb128 0x9
 3665 007a 2E       		.uleb128 0x2e
 3666 007b 01       		.byte	0x1
 3667 007c 3F       		.uleb128 0x3f
 3668 007d 19       		.uleb128 0x19
 3669 007e 03       		.uleb128 0x3
 3670 007f 0E       		.uleb128 0xe
 3671 0080 3A       		.uleb128 0x3a
 3672 0081 0B       		.uleb128 0xb
 3673 0082 3B       		.uleb128 0x3b
 3674 0083 0B       		.uleb128 0xb
 3675 0084 27       		.uleb128 0x27
 3676 0085 19       		.uleb128 0x19
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccuzBHa9.s 			page 73


 3677 0086 11       		.uleb128 0x11
 3678 0087 01       		.uleb128 0x1
 3679 0088 12       		.uleb128 0x12
 3680 0089 06       		.uleb128 0x6
 3681 008a 40       		.uleb128 0x40
 3682 008b 18       		.uleb128 0x18
 3683 008c 9742     		.uleb128 0x2117
 3684 008e 19       		.uleb128 0x19
 3685 008f 01       		.uleb128 0x1
 3686 0090 13       		.uleb128 0x13
 3687 0091 00       		.byte	0
 3688 0092 00       		.byte	0
 3689 0093 0A       		.uleb128 0xa
 3690 0094 0B       		.uleb128 0xb
 3691 0095 01       		.byte	0x1
 3692 0096 11       		.uleb128 0x11
 3693 0097 01       		.uleb128 0x1
 3694 0098 12       		.uleb128 0x12
 3695 0099 06       		.uleb128 0x6
 3696 009a 00       		.byte	0
 3697 009b 00       		.byte	0
 3698 009c 0B       		.uleb128 0xb
 3699 009d 898201   		.uleb128 0x4109
 3700 00a0 01       		.byte	0x1
 3701 00a1 11       		.uleb128 0x11
 3702 00a2 01       		.uleb128 0x1
 3703 00a3 31       		.uleb128 0x31
 3704 00a4 13       		.uleb128 0x13
 3705 00a5 01       		.uleb128 0x1
 3706 00a6 13       		.uleb128 0x13
 3707 00a7 00       		.byte	0
 3708 00a8 00       		.byte	0
 3709 00a9 0C       		.uleb128 0xc
 3710 00aa 8A8201   		.uleb128 0x410a
 3711 00ad 00       		.byte	0
 3712 00ae 02       		.uleb128 0x2
 3713 00af 18       		.uleb128 0x18
 3714 00b0 9142     		.uleb128 0x2111
 3715 00b2 18       		.uleb128 0x18
 3716 00b3 00       		.byte	0
 3717 00b4 00       		.byte	0
 3718 00b5 0D       		.uleb128 0xd
 3719 00b6 898201   		.uleb128 0x4109
 3720 00b9 01       		.byte	0x1
 3721 00ba 11       		.uleb128 0x11
 3722 00bb 01       		.uleb128 0x1
 3723 00bc 31       		.uleb128 0x31
 3724 00bd 13       		.uleb128 0x13
 3725 00be 00       		.byte	0
 3726 00bf 00       		.byte	0
 3727 00c0 0E       		.uleb128 0xe
 3728 00c1 34       		.uleb128 0x34
 3729 00c2 00       		.byte	0
 3730 00c3 03       		.uleb128 0x3
 3731 00c4 0E       		.uleb128 0xe
 3732 00c5 3A       		.uleb128 0x3a
 3733 00c6 0B       		.uleb128 0xb
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccuzBHa9.s 			page 74


 3734 00c7 3B       		.uleb128 0x3b
 3735 00c8 0B       		.uleb128 0xb
 3736 00c9 49       		.uleb128 0x49
 3737 00ca 13       		.uleb128 0x13
 3738 00cb 1C       		.uleb128 0x1c
 3739 00cc 05       		.uleb128 0x5
 3740 00cd 00       		.byte	0
 3741 00ce 00       		.byte	0
 3742 00cf 0F       		.uleb128 0xf
 3743 00d0 2E       		.uleb128 0x2e
 3744 00d1 01       		.byte	0x1
 3745 00d2 3F       		.uleb128 0x3f
 3746 00d3 19       		.uleb128 0x19
 3747 00d4 03       		.uleb128 0x3
 3748 00d5 0E       		.uleb128 0xe
 3749 00d6 3A       		.uleb128 0x3a
 3750 00d7 0B       		.uleb128 0xb
 3751 00d8 3B       		.uleb128 0x3b
 3752 00d9 05       		.uleb128 0x5
 3753 00da 27       		.uleb128 0x27
 3754 00db 19       		.uleb128 0x19
 3755 00dc 11       		.uleb128 0x11
 3756 00dd 01       		.uleb128 0x1
 3757 00de 12       		.uleb128 0x12
 3758 00df 06       		.uleb128 0x6
 3759 00e0 40       		.uleb128 0x40
 3760 00e1 18       		.uleb128 0x18
 3761 00e2 9642     		.uleb128 0x2116
 3762 00e4 19       		.uleb128 0x19
 3763 00e5 01       		.uleb128 0x1
 3764 00e6 13       		.uleb128 0x13
 3765 00e7 00       		.byte	0
 3766 00e8 00       		.byte	0
 3767 00e9 10       		.uleb128 0x10
 3768 00ea 34       		.uleb128 0x34
 3769 00eb 00       		.byte	0
 3770 00ec 03       		.uleb128 0x3
 3771 00ed 0E       		.uleb128 0xe
 3772 00ee 3A       		.uleb128 0x3a
 3773 00ef 0B       		.uleb128 0xb
 3774 00f0 3B       		.uleb128 0x3b
 3775 00f1 05       		.uleb128 0x5
 3776 00f2 49       		.uleb128 0x49
 3777 00f3 13       		.uleb128 0x13
 3778 00f4 1C       		.uleb128 0x1c
 3779 00f5 05       		.uleb128 0x5
 3780 00f6 00       		.byte	0
 3781 00f7 00       		.byte	0
 3782 00f8 11       		.uleb128 0x11
 3783 00f9 05       		.uleb128 0x5
 3784 00fa 00       		.byte	0
 3785 00fb 03       		.uleb128 0x3
 3786 00fc 0E       		.uleb128 0xe
 3787 00fd 3A       		.uleb128 0x3a
 3788 00fe 0B       		.uleb128 0xb
 3789 00ff 3B       		.uleb128 0x3b
 3790 0100 05       		.uleb128 0x5
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccuzBHa9.s 			page 75


 3791 0101 49       		.uleb128 0x49
 3792 0102 13       		.uleb128 0x13
 3793 0103 02       		.uleb128 0x2
 3794 0104 17       		.uleb128 0x17
 3795 0105 00       		.byte	0
 3796 0106 00       		.byte	0
 3797 0107 12       		.uleb128 0x12
 3798 0108 34       		.uleb128 0x34
 3799 0109 00       		.byte	0
 3800 010a 03       		.uleb128 0x3
 3801 010b 0E       		.uleb128 0xe
 3802 010c 3A       		.uleb128 0x3a
 3803 010d 0B       		.uleb128 0xb
 3804 010e 3B       		.uleb128 0x3b
 3805 010f 05       		.uleb128 0x5
 3806 0110 49       		.uleb128 0x49
 3807 0111 13       		.uleb128 0x13
 3808 0112 02       		.uleb128 0x2
 3809 0113 17       		.uleb128 0x17
 3810 0114 00       		.byte	0
 3811 0115 00       		.byte	0
 3812 0116 13       		.uleb128 0x13
 3813 0117 0F       		.uleb128 0xf
 3814 0118 00       		.byte	0
 3815 0119 0B       		.uleb128 0xb
 3816 011a 0B       		.uleb128 0xb
 3817 011b 49       		.uleb128 0x49
 3818 011c 13       		.uleb128 0x13
 3819 011d 00       		.byte	0
 3820 011e 00       		.byte	0
 3821 011f 14       		.uleb128 0x14
 3822 0120 2E       		.uleb128 0x2e
 3823 0121 01       		.byte	0x1
 3824 0122 3F       		.uleb128 0x3f
 3825 0123 19       		.uleb128 0x19
 3826 0124 03       		.uleb128 0x3
 3827 0125 0E       		.uleb128 0xe
 3828 0126 3A       		.uleb128 0x3a
 3829 0127 0B       		.uleb128 0xb
 3830 0128 3B       		.uleb128 0x3b
 3831 0129 05       		.uleb128 0x5
 3832 012a 27       		.uleb128 0x27
 3833 012b 19       		.uleb128 0x19
 3834 012c 11       		.uleb128 0x11
 3835 012d 01       		.uleb128 0x1
 3836 012e 12       		.uleb128 0x12
 3837 012f 06       		.uleb128 0x6
 3838 0130 40       		.uleb128 0x40
 3839 0131 18       		.uleb128 0x18
 3840 0132 9742     		.uleb128 0x2117
 3841 0134 19       		.uleb128 0x19
 3842 0135 01       		.uleb128 0x1
 3843 0136 13       		.uleb128 0x13
 3844 0137 00       		.byte	0
 3845 0138 00       		.byte	0
 3846 0139 15       		.uleb128 0x15
 3847 013a 2E       		.uleb128 0x2e
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccuzBHa9.s 			page 76


 3848 013b 01       		.byte	0x1
 3849 013c 3F       		.uleb128 0x3f
 3850 013d 19       		.uleb128 0x19
 3851 013e 03       		.uleb128 0x3
 3852 013f 0E       		.uleb128 0xe
 3853 0140 3A       		.uleb128 0x3a
 3854 0141 0B       		.uleb128 0xb
 3855 0142 3B       		.uleb128 0x3b
 3856 0143 05       		.uleb128 0x5
 3857 0144 11       		.uleb128 0x11
 3858 0145 01       		.uleb128 0x1
 3859 0146 12       		.uleb128 0x12
 3860 0147 06       		.uleb128 0x6
 3861 0148 40       		.uleb128 0x40
 3862 0149 18       		.uleb128 0x18
 3863 014a 9642     		.uleb128 0x2116
 3864 014c 19       		.uleb128 0x19
 3865 014d 01       		.uleb128 0x1
 3866 014e 13       		.uleb128 0x13
 3867 014f 00       		.byte	0
 3868 0150 00       		.byte	0
 3869 0151 16       		.uleb128 0x16
 3870 0152 2E       		.uleb128 0x2e
 3871 0153 01       		.byte	0x1
 3872 0154 3F       		.uleb128 0x3f
 3873 0155 19       		.uleb128 0x19
 3874 0156 03       		.uleb128 0x3
 3875 0157 08       		.uleb128 0x8
 3876 0158 3A       		.uleb128 0x3a
 3877 0159 0B       		.uleb128 0xb
 3878 015a 3B       		.uleb128 0x3b
 3879 015b 0B       		.uleb128 0xb
 3880 015c 49       		.uleb128 0x49
 3881 015d 13       		.uleb128 0x13
 3882 015e 3C       		.uleb128 0x3c
 3883 015f 19       		.uleb128 0x19
 3884 0160 01       		.uleb128 0x1
 3885 0161 13       		.uleb128 0x13
 3886 0162 00       		.byte	0
 3887 0163 00       		.byte	0
 3888 0164 17       		.uleb128 0x17
 3889 0165 18       		.uleb128 0x18
 3890 0166 00       		.byte	0
 3891 0167 00       		.byte	0
 3892 0168 00       		.byte	0
 3893 0169 18       		.uleb128 0x18
 3894 016a 34       		.uleb128 0x34
 3895 016b 00       		.byte	0
 3896 016c 03       		.uleb128 0x3
 3897 016d 0E       		.uleb128 0xe
 3898 016e 3A       		.uleb128 0x3a
 3899 016f 0B       		.uleb128 0xb
 3900 0170 3B       		.uleb128 0x3b
 3901 0171 05       		.uleb128 0x5
 3902 0172 49       		.uleb128 0x49
 3903 0173 13       		.uleb128 0x13
 3904 0174 3F       		.uleb128 0x3f
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccuzBHa9.s 			page 77


 3905 0175 19       		.uleb128 0x19
 3906 0176 3C       		.uleb128 0x3c
 3907 0177 19       		.uleb128 0x19
 3908 0178 00       		.byte	0
 3909 0179 00       		.byte	0
 3910 017a 19       		.uleb128 0x19
 3911 017b 35       		.uleb128 0x35
 3912 017c 00       		.byte	0
 3913 017d 49       		.uleb128 0x49
 3914 017e 13       		.uleb128 0x13
 3915 017f 00       		.byte	0
 3916 0180 00       		.byte	0
 3917 0181 1A       		.uleb128 0x1a
 3918 0182 01       		.uleb128 0x1
 3919 0183 01       		.byte	0x1
 3920 0184 49       		.uleb128 0x49
 3921 0185 13       		.uleb128 0x13
 3922 0186 01       		.uleb128 0x1
 3923 0187 13       		.uleb128 0x13
 3924 0188 00       		.byte	0
 3925 0189 00       		.byte	0
 3926 018a 1B       		.uleb128 0x1b
 3927 018b 21       		.uleb128 0x21
 3928 018c 00       		.byte	0
 3929 018d 49       		.uleb128 0x49
 3930 018e 13       		.uleb128 0x13
 3931 018f 2F       		.uleb128 0x2f
 3932 0190 0B       		.uleb128 0xb
 3933 0191 00       		.byte	0
 3934 0192 00       		.byte	0
 3935 0193 1C       		.uleb128 0x1c
 3936 0194 34       		.uleb128 0x34
 3937 0195 00       		.byte	0
 3938 0196 03       		.uleb128 0x3
 3939 0197 0E       		.uleb128 0xe
 3940 0198 3A       		.uleb128 0x3a
 3941 0199 0B       		.uleb128 0xb
 3942 019a 3B       		.uleb128 0x3b
 3943 019b 0B       		.uleb128 0xb
 3944 019c 49       		.uleb128 0x49
 3945 019d 13       		.uleb128 0x13
 3946 019e 3F       		.uleb128 0x3f
 3947 019f 19       		.uleb128 0x19
 3948 01a0 3C       		.uleb128 0x3c
 3949 01a1 19       		.uleb128 0x19
 3950 01a2 00       		.byte	0
 3951 01a3 00       		.byte	0
 3952 01a4 1D       		.uleb128 0x1d
 3953 01a5 34       		.uleb128 0x34
 3954 01a6 00       		.byte	0
 3955 01a7 03       		.uleb128 0x3
 3956 01a8 0E       		.uleb128 0xe
 3957 01a9 3A       		.uleb128 0x3a
 3958 01aa 0B       		.uleb128 0xb
 3959 01ab 3B       		.uleb128 0x3b
 3960 01ac 0B       		.uleb128 0xb
 3961 01ad 49       		.uleb128 0x49
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccuzBHa9.s 			page 78


 3962 01ae 13       		.uleb128 0x13
 3963 01af 3F       		.uleb128 0x3f
 3964 01b0 19       		.uleb128 0x19
 3965 01b1 02       		.uleb128 0x2
 3966 01b2 18       		.uleb128 0x18
 3967 01b3 00       		.byte	0
 3968 01b4 00       		.byte	0
 3969 01b5 1E       		.uleb128 0x1e
 3970 01b6 2E       		.uleb128 0x2e
 3971 01b7 00       		.byte	0
 3972 01b8 3F       		.uleb128 0x3f
 3973 01b9 19       		.uleb128 0x19
 3974 01ba 3C       		.uleb128 0x3c
 3975 01bb 19       		.uleb128 0x19
 3976 01bc 6E       		.uleb128 0x6e
 3977 01bd 08       		.uleb128 0x8
 3978 01be 03       		.uleb128 0x3
 3979 01bf 08       		.uleb128 0x8
 3980 01c0 3A       		.uleb128 0x3a
 3981 01c1 0B       		.uleb128 0xb
 3982 01c2 3B       		.uleb128 0x3b
 3983 01c3 0B       		.uleb128 0xb
 3984 01c4 00       		.byte	0
 3985 01c5 00       		.byte	0
 3986 01c6 1F       		.uleb128 0x1f
 3987 01c7 2E       		.uleb128 0x2e
 3988 01c8 00       		.byte	0
 3989 01c9 3F       		.uleb128 0x3f
 3990 01ca 19       		.uleb128 0x19
 3991 01cb 3C       		.uleb128 0x3c
 3992 01cc 19       		.uleb128 0x19
 3993 01cd 6E       		.uleb128 0x6e
 3994 01ce 0E       		.uleb128 0xe
 3995 01cf 03       		.uleb128 0x3
 3996 01d0 0E       		.uleb128 0xe
 3997 01d1 3A       		.uleb128 0x3a
 3998 01d2 0B       		.uleb128 0xb
 3999 01d3 3B       		.uleb128 0x3b
 4000 01d4 0B       		.uleb128 0xb
 4001 01d5 00       		.byte	0
 4002 01d6 00       		.byte	0
 4003 01d7 20       		.uleb128 0x20
 4004 01d8 2E       		.uleb128 0x2e
 4005 01d9 00       		.byte	0
 4006 01da 3F       		.uleb128 0x3f
 4007 01db 19       		.uleb128 0x19
 4008 01dc 3C       		.uleb128 0x3c
 4009 01dd 19       		.uleb128 0x19
 4010 01de 6E       		.uleb128 0x6e
 4011 01df 0E       		.uleb128 0xe
 4012 01e0 03       		.uleb128 0x3
 4013 01e1 0E       		.uleb128 0xe
 4014 01e2 3A       		.uleb128 0x3a
 4015 01e3 0B       		.uleb128 0xb
 4016 01e4 3B       		.uleb128 0x3b
 4017 01e5 05       		.uleb128 0x5
 4018 01e6 00       		.byte	0
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccuzBHa9.s 			page 79


 4019 01e7 00       		.byte	0
 4020 01e8 00       		.byte	0
 4021              		.section	.debug_loc,"",%progbits
 4022              	.Ldebug_loc0:
 4023              	.LLST0:
 4024 0000 00000000 		.4byte	.LVL0
 4025 0004 0E000000 		.4byte	.LVL1
 4026 0008 0100     		.2byte	0x1
 4027 000a 50       		.byte	0x50
 4028 000b 0E000000 		.4byte	.LVL1
 4029 000f 4C000000 		.4byte	.LVL14
 4030 0013 0100     		.2byte	0x1
 4031 0015 57       		.byte	0x57
 4032 0016 4C000000 		.4byte	.LVL14
 4033 001a B0000000 		.4byte	.LVL25
 4034 001e 0400     		.2byte	0x4
 4035 0020 F3       		.byte	0xf3
 4036 0021 01       		.uleb128 0x1
 4037 0022 50       		.byte	0x50
 4038 0023 9F       		.byte	0x9f
 4039 0024 B0000000 		.4byte	.LVL25
 4040 0028 DC000000 		.4byte	.LVL34
 4041 002c 0100     		.2byte	0x1
 4042 002e 57       		.byte	0x57
 4043 002f DC000000 		.4byte	.LVL34
 4044 0033 5C010000 		.4byte	.LFE64
 4045 0037 0400     		.2byte	0x4
 4046 0039 F3       		.byte	0xf3
 4047 003a 01       		.uleb128 0x1
 4048 003b 50       		.byte	0x50
 4049 003c 9F       		.byte	0x9f
 4050 003d 00000000 		.4byte	0
 4051 0041 00000000 		.4byte	0
 4052              	.LLST1:
 4053 0045 00000000 		.4byte	.LVL0
 4054 0049 11000000 		.4byte	.LVL2-1
 4055 004d 0100     		.2byte	0x1
 4056 004f 51       		.byte	0x51
 4057 0050 11000000 		.4byte	.LVL2-1
 4058 0054 40000000 		.4byte	.LVL10
 4059 0058 0100     		.2byte	0x1
 4060 005a 54       		.byte	0x54
 4061 005b 40000000 		.4byte	.LVL10
 4062 005f B0000000 		.4byte	.LVL25
 4063 0063 0400     		.2byte	0x4
 4064 0065 F3       		.byte	0xf3
 4065 0066 01       		.uleb128 0x1
 4066 0067 51       		.byte	0x51
 4067 0068 9F       		.byte	0x9f
 4068 0069 B0000000 		.4byte	.LVL25
 4069 006d C6000000 		.4byte	.LVL29
 4070 0071 0100     		.2byte	0x1
 4071 0073 54       		.byte	0x54
 4072 0074 C6000000 		.4byte	.LVL29
 4073 0078 5C010000 		.4byte	.LFE64
 4074 007c 0400     		.2byte	0x4
 4075 007e F3       		.byte	0xf3
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccuzBHa9.s 			page 80


 4076 007f 01       		.uleb128 0x1
 4077 0080 51       		.byte	0x51
 4078 0081 9F       		.byte	0x9f
 4079 0082 00000000 		.4byte	0
 4080 0086 00000000 		.4byte	0
 4081              	.LLST2:
 4082 008a 00000000 		.4byte	.LVL0
 4083 008e 11000000 		.4byte	.LVL2-1
 4084 0092 0100     		.2byte	0x1
 4085 0094 52       		.byte	0x52
 4086 0095 11000000 		.4byte	.LVL2-1
 4087 0099 42000000 		.4byte	.LVL11
 4088 009d 0100     		.2byte	0x1
 4089 009f 55       		.byte	0x55
 4090 00a0 42000000 		.4byte	.LVL11
 4091 00a4 B0000000 		.4byte	.LVL25
 4092 00a8 0400     		.2byte	0x4
 4093 00aa F3       		.byte	0xf3
 4094 00ab 01       		.uleb128 0x1
 4095 00ac 52       		.byte	0x52
 4096 00ad 9F       		.byte	0x9f
 4097 00ae B0000000 		.4byte	.LVL25
 4098 00b2 C8000000 		.4byte	.LVL30
 4099 00b6 0100     		.2byte	0x1
 4100 00b8 55       		.byte	0x55
 4101 00b9 C8000000 		.4byte	.LVL30
 4102 00bd 5C010000 		.4byte	.LFE64
 4103 00c1 0400     		.2byte	0x4
 4104 00c3 F3       		.byte	0xf3
 4105 00c4 01       		.uleb128 0x1
 4106 00c5 52       		.byte	0x52
 4107 00c6 9F       		.byte	0x9f
 4108 00c7 00000000 		.4byte	0
 4109 00cb 00000000 		.4byte	0
 4110              	.LLST3:
 4111 00cf 2A000000 		.4byte	.LVL6
 4112 00d3 30000000 		.4byte	.LVL7
 4113 00d7 0100     		.2byte	0x1
 4114 00d9 50       		.byte	0x50
 4115 00da 30000000 		.4byte	.LVL7
 4116 00de 4A000000 		.4byte	.LVL13
 4117 00e2 0100     		.2byte	0x1
 4118 00e4 56       		.byte	0x56
 4119 00e5 B0000000 		.4byte	.LVL25
 4120 00e9 B6000000 		.4byte	.LVL26
 4121 00ed 0100     		.2byte	0x1
 4122 00ef 50       		.byte	0x50
 4123 00f0 B6000000 		.4byte	.LVL26
 4124 00f4 DA000000 		.4byte	.LVL33
 4125 00f8 0100     		.2byte	0x1
 4126 00fa 56       		.byte	0x56
 4127 00fb 00000000 		.4byte	0
 4128 00ff 00000000 		.4byte	0
 4129              	.LLST4:
 4130 0103 00000000 		.4byte	.LVL45
 4131 0107 09000000 		.4byte	.LVL46-1
 4132 010b 0100     		.2byte	0x1
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccuzBHa9.s 			page 81


 4133 010d 50       		.byte	0x50
 4134 010e 09000000 		.4byte	.LVL46-1
 4135 0112 78000000 		.4byte	.LFE65
 4136 0116 0400     		.2byte	0x4
 4137 0118 F3       		.byte	0xf3
 4138 0119 01       		.uleb128 0x1
 4139 011a 50       		.byte	0x50
 4140 011b 9F       		.byte	0x9f
 4141 011c 00000000 		.4byte	0
 4142 0120 00000000 		.4byte	0
 4143              	.LLST5:
 4144 0124 00000000 		.4byte	.LVL45
 4145 0128 09000000 		.4byte	.LVL46-1
 4146 012c 0100     		.2byte	0x1
 4147 012e 51       		.byte	0x51
 4148 012f 09000000 		.4byte	.LVL46-1
 4149 0133 68000000 		.4byte	.LVL52
 4150 0137 0100     		.2byte	0x1
 4151 0139 54       		.byte	0x54
 4152 013a 68000000 		.4byte	.LVL52
 4153 013e 78000000 		.4byte	.LFE65
 4154 0142 0400     		.2byte	0x4
 4155 0144 F3       		.byte	0xf3
 4156 0145 01       		.uleb128 0x1
 4157 0146 51       		.byte	0x51
 4158 0147 9F       		.byte	0x9f
 4159 0148 00000000 		.4byte	0
 4160 014c 00000000 		.4byte	0
 4161              	.LLST6:
 4162 0150 00000000 		.4byte	.LVL45
 4163 0154 09000000 		.4byte	.LVL46-1
 4164 0158 0100     		.2byte	0x1
 4165 015a 52       		.byte	0x52
 4166 015b 09000000 		.4byte	.LVL46-1
 4167 015f 68000000 		.4byte	.LVL52
 4168 0163 0100     		.2byte	0x1
 4169 0165 55       		.byte	0x55
 4170 0166 68000000 		.4byte	.LVL52
 4171 016a 78000000 		.4byte	.LFE65
 4172 016e 0400     		.2byte	0x4
 4173 0170 F3       		.byte	0xf3
 4174 0171 01       		.uleb128 0x1
 4175 0172 52       		.byte	0x52
 4176 0173 9F       		.byte	0x9f
 4177 0174 00000000 		.4byte	0
 4178 0178 00000000 		.4byte	0
 4179              	.LLST7:
 4180 017c 18000000 		.4byte	.LVL48
 4181 0180 22000000 		.4byte	.LVL49
 4182 0184 0100     		.2byte	0x1
 4183 0186 50       		.byte	0x50
 4184 0187 3C000000 		.4byte	.LVL50
 4185 018b 46000000 		.4byte	.LVL51
 4186 018f 0100     		.2byte	0x1
 4187 0191 50       		.byte	0x50
 4188 0192 00000000 		.4byte	0
 4189 0196 00000000 		.4byte	0
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccuzBHa9.s 			page 82


 4190              	.LLST8:
 4191 019a 2E000000 		.4byte	.LVL53
 4192 019e 3D000000 		.4byte	.LVL54-1
 4193 01a2 0100     		.2byte	0x1
 4194 01a4 50       		.byte	0x50
 4195 01a5 4E000000 		.4byte	.LVL55
 4196 01a9 5D000000 		.4byte	.LVL56-1
 4197 01ad 0100     		.2byte	0x1
 4198 01af 50       		.byte	0x50
 4199 01b0 6E000000 		.4byte	.LVL57
 4200 01b4 7D000000 		.4byte	.LVL58-1
 4201 01b8 0100     		.2byte	0x1
 4202 01ba 50       		.byte	0x50
 4203 01bb 00000000 		.4byte	0
 4204 01bf 00000000 		.4byte	0
 4205              	.LLST9:
 4206 01c3 00000000 		.4byte	.LVL61
 4207 01c7 0D000000 		.4byte	.LVL63-1
 4208 01cb 0100     		.2byte	0x1
 4209 01cd 50       		.byte	0x50
 4210 01ce 0D000000 		.4byte	.LVL63-1
 4211 01d2 70000000 		.4byte	.LFE67
 4212 01d6 0600     		.2byte	0x6
 4213 01d8 F3       		.byte	0xf3
 4214 01d9 03       		.uleb128 0x3
 4215 01da F5       		.byte	0xf5
 4216 01db 00       		.uleb128 0
 4217 01dc 25       		.uleb128 0x25
 4218 01dd 9F       		.byte	0x9f
 4219 01de 00000000 		.4byte	0
 4220 01e2 00000000 		.4byte	0
 4221              	.LLST10:
 4222 01e6 00000000 		.4byte	.LVL61
 4223 01ea 0A000000 		.4byte	.LVL62
 4224 01ee 0100     		.2byte	0x1
 4225 01f0 51       		.byte	0x51
 4226 01f1 0A000000 		.4byte	.LVL62
 4227 01f5 68000000 		.4byte	.LVL79
 4228 01f9 0100     		.2byte	0x1
 4229 01fb 55       		.byte	0x55
 4230 01fc 68000000 		.4byte	.LVL79
 4231 0200 70000000 		.4byte	.LFE67
 4232 0204 0600     		.2byte	0x6
 4233 0206 F3       		.byte	0xf3
 4234 0207 03       		.uleb128 0x3
 4235 0208 F5       		.byte	0xf5
 4236 0209 01       		.uleb128 0x1
 4237 020a 25       		.uleb128 0x25
 4238 020b 9F       		.byte	0x9f
 4239 020c 00000000 		.4byte	0
 4240 0210 00000000 		.4byte	0
 4241              	.LLST11:
 4242 0214 00000000 		.4byte	.LVL61
 4243 0218 0D000000 		.4byte	.LVL63-1
 4244 021c 0100     		.2byte	0x1
 4245 021e 52       		.byte	0x52
 4246 021f 0D000000 		.4byte	.LVL63-1
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccuzBHa9.s 			page 83


 4247 0223 68000000 		.4byte	.LVL79
 4248 0227 0100     		.2byte	0x1
 4249 0229 56       		.byte	0x56
 4250 022a 68000000 		.4byte	.LVL79
 4251 022e 70000000 		.4byte	.LFE67
 4252 0232 0600     		.2byte	0x6
 4253 0234 F3       		.byte	0xf3
 4254 0235 03       		.uleb128 0x3
 4255 0236 F5       		.byte	0xf5
 4256 0237 02       		.uleb128 0x2
 4257 0238 25       		.uleb128 0x25
 4258 0239 9F       		.byte	0x9f
 4259 023a 00000000 		.4byte	0
 4260 023e 00000000 		.4byte	0
 4261              	.LLST12:
 4262 0242 00000000 		.4byte	.LVL61
 4263 0246 0D000000 		.4byte	.LVL63-1
 4264 024a 0100     		.2byte	0x1
 4265 024c 53       		.byte	0x53
 4266 024d 0D000000 		.4byte	.LVL63-1
 4267 0251 68000000 		.4byte	.LVL79
 4268 0255 0100     		.2byte	0x1
 4269 0257 54       		.byte	0x54
 4270 0258 68000000 		.4byte	.LVL79
 4271 025c 70000000 		.4byte	.LFE67
 4272 0260 0600     		.2byte	0x6
 4273 0262 F3       		.byte	0xf3
 4274 0263 03       		.uleb128 0x3
 4275 0264 F5       		.byte	0xf5
 4276 0265 03       		.uleb128 0x3
 4277 0266 25       		.uleb128 0x25
 4278 0267 9F       		.byte	0x9f
 4279 0268 00000000 		.4byte	0
 4280 026c 00000000 		.4byte	0
 4281              	.LLST13:
 4282 0270 2C000000 		.4byte	.LVL80
 4283 0274 36000000 		.4byte	.LVL81
 4284 0278 0100     		.2byte	0x1
 4285 027a 52       		.byte	0x52
 4286 027b 54000000 		.4byte	.LVL82
 4287 027f 5E000000 		.4byte	.LVL83
 4288 0283 0100     		.2byte	0x1
 4289 0285 52       		.byte	0x52
 4290 0286 7C000000 		.4byte	.LVL84
 4291 028a 86000000 		.4byte	.LVL85
 4292 028e 0100     		.2byte	0x1
 4293 0290 52       		.byte	0x52
 4294 0291 A4000000 		.4byte	.LVL86
 4295 0295 AE000000 		.4byte	.LVL87
 4296 0299 0100     		.2byte	0x1
 4297 029b 52       		.byte	0x52
 4298 029c D0000000 		.4byte	.LVL88
 4299 02a0 DA000000 		.4byte	.LVL89
 4300 02a4 0100     		.2byte	0x1
 4301 02a6 53       		.byte	0x53
 4302 02a7 F8000000 		.4byte	.LVL90
 4303 02ab 02010000 		.4byte	.LVL91
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccuzBHa9.s 			page 84


 4304 02af 0100     		.2byte	0x1
 4305 02b1 53       		.byte	0x53
 4306 02b2 20010000 		.4byte	.LVL92
 4307 02b6 2A010000 		.4byte	.LVL93
 4308 02ba 0100     		.2byte	0x1
 4309 02bc 52       		.byte	0x52
 4310 02bd 48010000 		.4byte	.LVL94
 4311 02c1 50010000 		.4byte	.LVL95
 4312 02c5 0100     		.2byte	0x1
 4313 02c7 52       		.byte	0x52
 4314 02c8 00000000 		.4byte	0
 4315 02cc 00000000 		.4byte	0
 4316              	.LLST14:
 4317 02d0 00000000 		.4byte	.LVL102
 4318 02d4 08000000 		.4byte	.LVL103
 4319 02d8 0100     		.2byte	0x1
 4320 02da 50       		.byte	0x50
 4321 02db 08000000 		.4byte	.LVL103
 4322 02df 20000000 		.4byte	.LFE69
 4323 02e3 0100     		.2byte	0x1
 4324 02e5 55       		.byte	0x55
 4325 02e6 00000000 		.4byte	0
 4326 02ea 00000000 		.4byte	0
 4327              	.LLST15:
 4328 02ee 00000000 		.4byte	.LVL102
 4329 02f2 0B000000 		.4byte	.LVL104-1
 4330 02f6 0100     		.2byte	0x1
 4331 02f8 51       		.byte	0x51
 4332 02f9 0B000000 		.4byte	.LVL104-1
 4333 02fd 20000000 		.4byte	.LFE69
 4334 0301 0100     		.2byte	0x1
 4335 0303 54       		.byte	0x54
 4336 0304 00000000 		.4byte	0
 4337 0308 00000000 		.4byte	0
 4338              	.LLST16:
 4339 030c 00000000 		.4byte	.LVL108
 4340 0310 07000000 		.4byte	.LVL109-1
 4341 0314 0100     		.2byte	0x1
 4342 0316 50       		.byte	0x50
 4343 0317 07000000 		.4byte	.LVL109-1
 4344 031b C4000000 		.4byte	.LFE70
 4345 031f 0600     		.2byte	0x6
 4346 0321 F3       		.byte	0xf3
 4347 0322 03       		.uleb128 0x3
 4348 0323 F5       		.byte	0xf5
 4349 0324 00       		.uleb128 0
 4350 0325 25       		.uleb128 0x25
 4351 0326 9F       		.byte	0x9f
 4352 0327 00000000 		.4byte	0
 4353 032b 00000000 		.4byte	0
 4354              	.LLST17:
 4355 032f 16000000 		.4byte	.LVL111
 4356 0333 33000000 		.4byte	.LVL112-1
 4357 0337 0100     		.2byte	0x1
 4358 0339 50       		.byte	0x50
 4359 033a 00000000 		.4byte	0
 4360 033e 00000000 		.4byte	0
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccuzBHa9.s 			page 85


 4361              	.LLST18:
 4362 0342 00000000 		.4byte	.LVL131
 4363 0346 07000000 		.4byte	.LVL132-1
 4364 034a 0100     		.2byte	0x1
 4365 034c 50       		.byte	0x50
 4366 034d 07000000 		.4byte	.LVL132-1
 4367 0351 C4000000 		.4byte	.LFE72
 4368 0355 0600     		.2byte	0x6
 4369 0357 F3       		.byte	0xf3
 4370 0358 03       		.uleb128 0x3
 4371 0359 F5       		.byte	0xf5
 4372 035a 00       		.uleb128 0
 4373 035b 25       		.uleb128 0x25
 4374 035c 9F       		.byte	0x9f
 4375 035d 00000000 		.4byte	0
 4376 0361 00000000 		.4byte	0
 4377              	.LLST19:
 4378 0365 16000000 		.4byte	.LVL134
 4379 0369 33000000 		.4byte	.LVL135-1
 4380 036d 0100     		.2byte	0x1
 4381 036f 50       		.byte	0x50
 4382 0370 00000000 		.4byte	0
 4383 0374 00000000 		.4byte	0
 4384              	.LLST20:
 4385 0378 00000000 		.4byte	.LVL154
 4386 037c 07000000 		.4byte	.LVL155-1
 4387 0380 0100     		.2byte	0x1
 4388 0382 50       		.byte	0x50
 4389 0383 07000000 		.4byte	.LVL155-1
 4390 0387 CC000000 		.4byte	.LFE74
 4391 038b 0600     		.2byte	0x6
 4392 038d F3       		.byte	0xf3
 4393 038e 03       		.uleb128 0x3
 4394 038f F5       		.byte	0xf5
 4395 0390 00       		.uleb128 0
 4396 0391 25       		.uleb128 0x25
 4397 0392 9F       		.byte	0x9f
 4398 0393 00000000 		.4byte	0
 4399 0397 00000000 		.4byte	0
 4400              	.LLST21:
 4401 039b 1A000000 		.4byte	.LVL158
 4402 039f 37000000 		.4byte	.LVL159-1
 4403 03a3 0100     		.2byte	0x1
 4404 03a5 50       		.byte	0x50
 4405 03a6 00000000 		.4byte	0
 4406 03aa 00000000 		.4byte	0
 4407              	.LLST22:
 4408 03ae 00000000 		.4byte	.LVL168
 4409 03b2 07000000 		.4byte	.LVL169-1
 4410 03b6 0100     		.2byte	0x1
 4411 03b8 50       		.byte	0x50
 4412 03b9 07000000 		.4byte	.LVL169-1
 4413 03bd C4000000 		.4byte	.LFE75
 4414 03c1 0600     		.2byte	0x6
 4415 03c3 F3       		.byte	0xf3
 4416 03c4 03       		.uleb128 0x3
 4417 03c5 F5       		.byte	0xf5
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccuzBHa9.s 			page 86


 4418 03c6 00       		.uleb128 0
 4419 03c7 25       		.uleb128 0x25
 4420 03c8 9F       		.byte	0x9f
 4421 03c9 00000000 		.4byte	0
 4422 03cd 00000000 		.4byte	0
 4423              	.LLST23:
 4424 03d1 1A000000 		.4byte	.LVL172
 4425 03d5 37000000 		.4byte	.LVL173-1
 4426 03d9 0100     		.2byte	0x1
 4427 03db 50       		.byte	0x50
 4428 03dc 00000000 		.4byte	0
 4429 03e0 00000000 		.4byte	0
 4430              	.LLST24:
 4431 03e4 00000000 		.4byte	.LVL182
 4432 03e8 0A000000 		.4byte	.LVL183
 4433 03ec 0100     		.2byte	0x1
 4434 03ee 50       		.byte	0x50
 4435 03ef 0A000000 		.4byte	.LVL183
 4436 03f3 1C000000 		.4byte	.LVL187
 4437 03f7 0100     		.2byte	0x1
 4438 03f9 54       		.byte	0x54
 4439 03fa 1C000000 		.4byte	.LVL187
 4440 03fe 78000000 		.4byte	.LFE76
 4441 0402 0400     		.2byte	0x4
 4442 0404 F3       		.byte	0xf3
 4443 0405 01       		.uleb128 0x1
 4444 0406 50       		.byte	0x50
 4445 0407 9F       		.byte	0x9f
 4446 0408 00000000 		.4byte	0
 4447 040c 00000000 		.4byte	0
 4448              	.LLST25:
 4449 0410 00000000 		.4byte	.LVL182
 4450 0414 0D000000 		.4byte	.LVL184-1
 4451 0418 0100     		.2byte	0x1
 4452 041a 51       		.byte	0x51
 4453 041b 0D000000 		.4byte	.LVL184-1
 4454 041f 30000000 		.4byte	.LVL190
 4455 0423 0100     		.2byte	0x1
 4456 0425 56       		.byte	0x56
 4457 0426 30000000 		.4byte	.LVL190
 4458 042a 78000000 		.4byte	.LFE76
 4459 042e 0400     		.2byte	0x4
 4460 0430 F3       		.byte	0xf3
 4461 0431 01       		.uleb128 0x1
 4462 0432 51       		.byte	0x51
 4463 0433 9F       		.byte	0x9f
 4464 0434 00000000 		.4byte	0
 4465 0438 00000000 		.4byte	0
 4466              	.LLST26:
 4467 043c 42000000 		.4byte	.LVL192
 4468 0440 45000000 		.4byte	.LVL193-1
 4469 0444 0600     		.2byte	0x6
 4470 0446 F5       		.byte	0xf5
 4471 0447 00       		.uleb128 0
 4472 0448 2C       		.uleb128 0x2c
 4473 0449 F7       		.byte	0xf7
 4474 044a 25       		.uleb128 0x25
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccuzBHa9.s 			page 87


 4475 044b 9F       		.byte	0x9f
 4476 044c 64000000 		.4byte	.LVL197
 4477 0450 67000000 		.4byte	.LVL198-1
 4478 0454 0600     		.2byte	0x6
 4479 0456 F5       		.byte	0xf5
 4480 0457 00       		.uleb128 0
 4481 0458 2C       		.uleb128 0x2c
 4482 0459 F7       		.byte	0xf7
 4483 045a 25       		.uleb128 0x25
 4484 045b 9F       		.byte	0x9f
 4485 045c 00000000 		.4byte	0
 4486 0460 00000000 		.4byte	0
 4487              	.LLST27:
 4488 0464 00000000 		.4byte	.LVL200
 4489 0468 0A000000 		.4byte	.LVL201
 4490 046c 0100     		.2byte	0x1
 4491 046e 50       		.byte	0x50
 4492 046f 0A000000 		.4byte	.LVL201
 4493 0473 1C000000 		.4byte	.LVL205
 4494 0477 0100     		.2byte	0x1
 4495 0479 54       		.byte	0x54
 4496 047a 1C000000 		.4byte	.LVL205
 4497 047e 78000000 		.4byte	.LFE77
 4498 0482 0400     		.2byte	0x4
 4499 0484 F3       		.byte	0xf3
 4500 0485 01       		.uleb128 0x1
 4501 0486 50       		.byte	0x50
 4502 0487 9F       		.byte	0x9f
 4503 0488 00000000 		.4byte	0
 4504 048c 00000000 		.4byte	0
 4505              	.LLST28:
 4506 0490 00000000 		.4byte	.LVL200
 4507 0494 0D000000 		.4byte	.LVL202-1
 4508 0498 0100     		.2byte	0x1
 4509 049a 51       		.byte	0x51
 4510 049b 0D000000 		.4byte	.LVL202-1
 4511 049f 30000000 		.4byte	.LVL208
 4512 04a3 0100     		.2byte	0x1
 4513 04a5 56       		.byte	0x56
 4514 04a6 30000000 		.4byte	.LVL208
 4515 04aa 78000000 		.4byte	.LFE77
 4516 04ae 0400     		.2byte	0x4
 4517 04b0 F3       		.byte	0xf3
 4518 04b1 01       		.uleb128 0x1
 4519 04b2 51       		.byte	0x51
 4520 04b3 9F       		.byte	0x9f
 4521 04b4 00000000 		.4byte	0
 4522 04b8 00000000 		.4byte	0
 4523              	.LLST29:
 4524 04bc 42000000 		.4byte	.LVL210
 4525 04c0 45000000 		.4byte	.LVL211-1
 4526 04c4 0600     		.2byte	0x6
 4527 04c6 F5       		.byte	0xf5
 4528 04c7 00       		.uleb128 0
 4529 04c8 2C       		.uleb128 0x2c
 4530 04c9 F7       		.byte	0xf7
 4531 04ca 25       		.uleb128 0x25
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccuzBHa9.s 			page 88


 4532 04cb 9F       		.byte	0x9f
 4533 04cc 64000000 		.4byte	.LVL215
 4534 04d0 67000000 		.4byte	.LVL216-1
 4535 04d4 0600     		.2byte	0x6
 4536 04d6 F5       		.byte	0xf5
 4537 04d7 00       		.uleb128 0
 4538 04d8 2C       		.uleb128 0x2c
 4539 04d9 F7       		.byte	0xf7
 4540 04da 25       		.uleb128 0x25
 4541 04db 9F       		.byte	0x9f
 4542 04dc 00000000 		.4byte	0
 4543 04e0 00000000 		.4byte	0
 4544              	.LLST30:
 4545 04e4 00000000 		.4byte	.LVL218
 4546 04e8 0E000000 		.4byte	.LVL219
 4547 04ec 0100     		.2byte	0x1
 4548 04ee 50       		.byte	0x50
 4549 04ef 0E000000 		.4byte	.LVL219
 4550 04f3 54000000 		.4byte	.LVL227
 4551 04f7 0100     		.2byte	0x1
 4552 04f9 55       		.byte	0x55
 4553 04fa 54000000 		.4byte	.LVL227
 4554 04fe 64000000 		.4byte	.LFE78
 4555 0502 0400     		.2byte	0x4
 4556 0504 F3       		.byte	0xf3
 4557 0505 01       		.uleb128 0x1
 4558 0506 50       		.byte	0x50
 4559 0507 9F       		.byte	0x9f
 4560 0508 00000000 		.4byte	0
 4561 050c 00000000 		.4byte	0
 4562              	.LLST31:
 4563 0510 2C000000 		.4byte	.LVL223
 4564 0514 31000000 		.4byte	.LVL224-1
 4565 0518 0100     		.2byte	0x1
 4566 051a 50       		.byte	0x50
 4567 051b 00000000 		.4byte	0
 4568 051f 00000000 		.4byte	0
 4569              	.LLST32:
 4570 0523 00000000 		.4byte	.LVL240
 4571 0527 04000000 		.4byte	.LVL241
 4572 052b 0100     		.2byte	0x1
 4573 052d 50       		.byte	0x50
 4574 052e 04000000 		.4byte	.LVL241
 4575 0532 10000000 		.4byte	.LFE81
 4576 0536 0400     		.2byte	0x4
 4577 0538 F3       		.byte	0xf3
 4578 0539 01       		.uleb128 0x1
 4579 053a 50       		.byte	0x50
 4580 053b 9F       		.byte	0x9f
 4581 053c 00000000 		.4byte	0
 4582 0540 00000000 		.4byte	0
 4583              	.LLST33:
 4584 0544 00000000 		.4byte	.LVL240
 4585 0548 07000000 		.4byte	.LVL242-1
 4586 054c 0100     		.2byte	0x1
 4587 054e 51       		.byte	0x51
 4588 054f 07000000 		.4byte	.LVL242-1
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccuzBHa9.s 			page 89


 4589 0553 10000000 		.4byte	.LFE81
 4590 0557 0400     		.2byte	0x4
 4591 0559 F3       		.byte	0xf3
 4592 055a 01       		.uleb128 0x1
 4593 055b 51       		.byte	0x51
 4594 055c 9F       		.byte	0x9f
 4595 055d 00000000 		.4byte	0
 4596 0561 00000000 		.4byte	0
 4597              	.LLST34:
 4598 0565 00000000 		.4byte	.LVL240
 4599 0569 07000000 		.4byte	.LVL242-1
 4600 056d 0100     		.2byte	0x1
 4601 056f 52       		.byte	0x52
 4602 0570 07000000 		.4byte	.LVL242-1
 4603 0574 10000000 		.4byte	.LFE81
 4604 0578 0400     		.2byte	0x4
 4605 057a F3       		.byte	0xf3
 4606 057b 01       		.uleb128 0x1
 4607 057c 52       		.byte	0x52
 4608 057d 9F       		.byte	0x9f
 4609 057e 00000000 		.4byte	0
 4610 0582 00000000 		.4byte	0
 4611              	.LLST35:
 4612 0586 24000000 		.4byte	.LVL248
 4613 058a 3A000000 		.4byte	.LVL251
 4614 058e 0100     		.2byte	0x1
 4615 0590 54       		.byte	0x54
 4616 0591 00000000 		.4byte	0
 4617 0595 00000000 		.4byte	0
 4618              		.section	.debug_aranges,"",%progbits
 4619 0000 AC000000 		.4byte	0xac
 4620 0004 0200     		.2byte	0x2
 4621 0006 00000000 		.4byte	.Ldebug_info0
 4622 000a 04       		.byte	0x4
 4623 000b 00       		.byte	0
 4624 000c 0000     		.2byte	0
 4625 000e 0000     		.2byte	0
 4626 0010 00000000 		.4byte	.LFB64
 4627 0014 5C010000 		.4byte	.LFE64-.LFB64
 4628 0018 00000000 		.4byte	.LFB65
 4629 001c 78000000 		.4byte	.LFE65-.LFB65
 4630 0020 00000000 		.4byte	.LFB66
 4631 0024 C8000000 		.4byte	.LFE66-.LFB66
 4632 0028 00000000 		.4byte	.LFB67
 4633 002c 70000000 		.4byte	.LFE67-.LFB67
 4634 0030 00000000 		.4byte	.LFB68
 4635 0034 B0010000 		.4byte	.LFE68-.LFB68
 4636 0038 00000000 		.4byte	.LFB69
 4637 003c 20000000 		.4byte	.LFE69-.LFB69
 4638 0040 00000000 		.4byte	.LFB70
 4639 0044 C4000000 		.4byte	.LFE70-.LFB70
 4640 0048 00000000 		.4byte	.LFB71
 4641 004c 9C000000 		.4byte	.LFE71-.LFB71
 4642 0050 00000000 		.4byte	.LFB72
 4643 0054 C4000000 		.4byte	.LFE72-.LFB72
 4644 0058 00000000 		.4byte	.LFB73
 4645 005c 94000000 		.4byte	.LFE73-.LFB73
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccuzBHa9.s 			page 90


 4646 0060 00000000 		.4byte	.LFB74
 4647 0064 CC000000 		.4byte	.LFE74-.LFB74
 4648 0068 00000000 		.4byte	.LFB75
 4649 006c C4000000 		.4byte	.LFE75-.LFB75
 4650 0070 00000000 		.4byte	.LFB76
 4651 0074 78000000 		.4byte	.LFE76-.LFB76
 4652 0078 00000000 		.4byte	.LFB77
 4653 007c 78000000 		.4byte	.LFE77-.LFB77
 4654 0080 00000000 		.4byte	.LFB78
 4655 0084 64000000 		.4byte	.LFE78-.LFB78
 4656 0088 00000000 		.4byte	.LFB79
 4657 008c 40000000 		.4byte	.LFE79-.LFB79
 4658 0090 00000000 		.4byte	.LFB80
 4659 0094 40000000 		.4byte	.LFE80-.LFB80
 4660 0098 00000000 		.4byte	.LFB81
 4661 009c 10000000 		.4byte	.LFE81-.LFB81
 4662 00a0 00000000 		.4byte	.LFB82
 4663 00a4 4C000000 		.4byte	.LFE82-.LFB82
 4664 00a8 00000000 		.4byte	0
 4665 00ac 00000000 		.4byte	0
 4666              		.section	.debug_ranges,"",%progbits
 4667              	.Ldebug_ranges0:
 4668 0000 00000000 		.4byte	.LFB64
 4669 0004 5C010000 		.4byte	.LFE64
 4670 0008 00000000 		.4byte	.LFB65
 4671 000c 78000000 		.4byte	.LFE65
 4672 0010 00000000 		.4byte	.LFB66
 4673 0014 C8000000 		.4byte	.LFE66
 4674 0018 00000000 		.4byte	.LFB67
 4675 001c 70000000 		.4byte	.LFE67
 4676 0020 00000000 		.4byte	.LFB68
 4677 0024 B0010000 		.4byte	.LFE68
 4678 0028 00000000 		.4byte	.LFB69
 4679 002c 20000000 		.4byte	.LFE69
 4680 0030 00000000 		.4byte	.LFB70
 4681 0034 C4000000 		.4byte	.LFE70
 4682 0038 00000000 		.4byte	.LFB71
 4683 003c 9C000000 		.4byte	.LFE71
 4684 0040 00000000 		.4byte	.LFB72
 4685 0044 C4000000 		.4byte	.LFE72
 4686 0048 00000000 		.4byte	.LFB73
 4687 004c 94000000 		.4byte	.LFE73
 4688 0050 00000000 		.4byte	.LFB74
 4689 0054 CC000000 		.4byte	.LFE74
 4690 0058 00000000 		.4byte	.LFB75
 4691 005c C4000000 		.4byte	.LFE75
 4692 0060 00000000 		.4byte	.LFB76
 4693 0064 78000000 		.4byte	.LFE76
 4694 0068 00000000 		.4byte	.LFB77
 4695 006c 78000000 		.4byte	.LFE77
 4696 0070 00000000 		.4byte	.LFB78
 4697 0074 64000000 		.4byte	.LFE78
 4698 0078 00000000 		.4byte	.LFB79
 4699 007c 40000000 		.4byte	.LFE79
 4700 0080 00000000 		.4byte	.LFB80
 4701 0084 40000000 		.4byte	.LFE80
 4702 0088 00000000 		.4byte	.LFB81
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccuzBHa9.s 			page 91


 4703 008c 10000000 		.4byte	.LFE81
 4704 0090 00000000 		.4byte	.LFB82
 4705 0094 4C000000 		.4byte	.LFE82
 4706 0098 00000000 		.4byte	0
 4707 009c 00000000 		.4byte	0
 4708              		.section	.debug_line,"",%progbits
 4709              	.Ldebug_line0:
 4710 0000 E2040000 		.section	.debug_str,"MS",%progbits,1
 4710      02007C02 
 4710      00000201 
 4710      FB0E0D00 
 4710      01010101 
 4711              	.LASF71:
 4712 0000 6D6F746F 		.ascii	"motor2EncoderCounts\000"
 4712      7232456E 
 4712      636F6465 
 4712      72436F75 
 4712      6E747300 
 4713              	.LASF54:
 4714 0014 76657274 		.ascii	"vertical\000"
 4714      6963616C 
 4714      00
 4715              	.LASF26:
 4716 001d 636F6D70 		.ascii	"completedCounts\000"
 4716      6C657465 
 4716      64436F75 
 4716      6E747300 
 4717              	.LASF39:
 4718 002d 6D6F7665 		.ascii	"moveForwardIndefinitely\000"
 4718      466F7277 
 4718      61726449 
 4718      6E646566 
 4718      696E6974 
 4719              	.LASF86:
 4720 0045 4D6F746F 		.ascii	"Motor_2_Encoder_Counts_WritePeriod\000"
 4720      725F325F 
 4720      456E636F 
 4720      6465725F 
 4720      436F756E 
 4721              	.LASF99:
 4722 0068 636F7272 		.ascii	"correctAngle\000"
 4722      65637441 
 4722      6E676C65 
 4722      00
 4723              	.LASF21:
 4724 0075 7475726E 		.ascii	"turningLeftFlag\000"
 4724      696E674C 
 4724      65667446 
 4724      6C616700 
 4725              	.LASF33:
 4726 0085 74656D70 		.ascii	"temp\000"
 4726      00
 4727              	.LASF4:
 4728 008a 73686F72 		.ascii	"short int\000"
 4728      7420696E 
 4728      7400
 4729              	.LASF51:
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccuzBHa9.s 			page 92


 4730 0094 73746F70 		.ascii	"stopMotor2AndUpdate\000"
 4730      4D6F746F 
 4730      7232416E 
 4730      64557064 
 4730      61746500 
 4731              	.LASF72:
 4732 00a8 63757272 		.ascii	"currentPosition\000"
 4732      656E7450 
 4732      6F736974 
 4732      696F6E00 
 4733              	.LASF17:
 4734 00b8 64726976 		.ascii	"drivingForwardFlag\000"
 4734      696E6746 
 4734      6F727761 
 4734      7264466C 
 4734      616700
 4735              	.LASF24:
 4736 00cb 64656772 		.ascii	"degreesMoved\000"
 4736      6565734D 
 4736      6F766564 
 4736      00
 4737              	.LASF49:
 4738 00d8 78546F4D 		.ascii	"xToMove\000"
 4738      6F766500 
 4739              	.LASF53:
 4740 00e0 686F7269 		.ascii	"horizontal\000"
 4740      7A6F6E74 
 4740      616C00
 4741              	.LASF70:
 4742 00eb 6D6F746F 		.ascii	"motor1EncoderCounts\000"
 4742      7231456E 
 4742      636F6465 
 4742      72436F75 
 4742      6E747300 
 4743              	.LASF62:
 4744 00ff 7075636B 		.ascii	"puckRackOffsetsFromWest\000"
 4744      5261636B 
 4744      4F666673 
 4744      65747346 
 4744      726F6D57 
 4745              	.LASF87:
 4746 0117 4D6F746F 		.ascii	"Motor_1_Encoder_Counts_Start\000"
 4746      725F315F 
 4746      456E636F 
 4746      6465725F 
 4746      436F756E 
 4747              	.LASF32:
 4748 0134 64726966 		.ascii	"driftCorrect\000"
 4748      74436F72 
 4748      72656374 
 4748      00
 4749              	.LASF34:
 4750 0141 636F756E 		.ascii	"counterInitialise\000"
 4750      74657249 
 4750      6E697469 
 4750      616C6973 
 4750      6500
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccuzBHa9.s 			page 93


 4751              	.LASF80:
 4752 0153 4D6F746F 		.ascii	"Motor_1_driver_WriteCompare1\000"
 4752      725F315F 
 4752      64726976 
 4752      65725F57 
 4752      72697465 
 4753              	.LASF82:
 4754 0170 4D6F746F 		.ascii	"Motor_1_driver_WriteCompare2\000"
 4754      725F315F 
 4754      64726976 
 4754      65725F57 
 4754      72697465 
 4755              	.LASF78:
 4756 018d 4D6F746F 		.ascii	"Motor_1_Encoder_Counts_WriteCounter\000"
 4756      725F315F 
 4756      456E636F 
 4756      6465725F 
 4756      436F756E 
 4757              	.LASF68:
 4758 01b1 6D6F746F 		.ascii	"motor1Enable\000"
 4758      7231456E 
 4758      61626C65 
 4758      00
 4759              	.LASF74:
 4760 01be 626C6F63 		.ascii	"block_location\000"
 4760      6B5F6C6F 
 4760      63617469 
 4760      6F6E00
 4761              	.LASF37:
 4762 01cd 6D6F7665 		.ascii	"moveForward\000"
 4762      466F7277 
 4762      61726400 
 4763              	.LASF22:
 4764 01d9 7475726E 		.ascii	"turningRightFlag\000"
 4764      696E6752 
 4764      69676874 
 4764      466C6167 
 4764      00
 4765              	.LASF0:
 4766 01ea 666C6F61 		.ascii	"float\000"
 4766      7400
 4767              	.LASF88:
 4768 01f0 4D6F746F 		.ascii	"Motor_2_Encoder_Counts_Start\000"
 4768      725F325F 
 4768      456E636F 
 4768      6465725F 
 4768      436F756E 
 4769              	.LASF95:
 4770 020d 64697374 		.ascii	"distanceCheck\000"
 4770      616E6365 
 4770      43686563 
 4770      6B00
 4771              	.LASF58:
 4772 021b 756C7472 		.ascii	"ultrasonic_distances\000"
 4772      61736F6E 
 4772      69635F64 
 4772      69737461 
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccuzBHa9.s 			page 94


 4772      6E636573 
 4773              	.LASF8:
 4774 0230 6C6F6E67 		.ascii	"long long int\000"
 4774      206C6F6E 
 4774      6720696E 
 4774      7400
 4775              	.LASF81:
 4776 023e 4D6F746F 		.ascii	"Motor_2_driver_WriteCompare1\000"
 4776      725F325F 
 4776      64726976 
 4776      65725F57 
 4776      72697465 
 4777              	.LASF83:
 4778 025b 4D6F746F 		.ascii	"Motor_2_driver_WriteCompare2\000"
 4778      725F325F 
 4778      64726976 
 4778      65725F57 
 4778      72697465 
 4779              	.LASF27:
 4780 0278 6D6F746F 		.ascii	"motorDutyCycleUpdate\000"
 4780      72447574 
 4780      79437963 
 4780      6C655570 
 4780      64617465 
 4781              	.LASF6:
 4782 028d 6C6F6E67 		.ascii	"long int\000"
 4782      20696E74 
 4782      00
 4783              	.LASF41:
 4784 0296 6D6F7665 		.ascii	"moveBackwardIndefinitely\000"
 4784      4261636B 
 4784      77617264 
 4784      496E6465 
 4784      66696E69 
 4785              	.LASF25:
 4786 02af 73746F70 		.ascii	"stopMotion\000"
 4786      4D6F7469 
 4786      6F6E00
 4787              	.LASF7:
 4788 02ba 6C6F6E67 		.ascii	"long unsigned int\000"
 4788      20756E73 
 4788      69676E65 
 4788      6420696E 
 4788      7400
 4789              	.LASF40:
 4790 02cc 6D6F7665 		.ascii	"moveBackward\000"
 4790      4261636B 
 4790      77617264 
 4790      00
 4791              	.LASF18:
 4792 02d9 64726976 		.ascii	"drivingBackwardFlag\000"
 4792      696E6742 
 4792      61636B77 
 4792      61726446 
 4792      6C616700 
 4793              	.LASF65:
 4794 02ed 7075636B 		.ascii	"puckPileLocation\000"
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccuzBHa9.s 			page 95


 4794      50696C65 
 4794      4C6F6361 
 4794      74696F6E 
 4794      00
 4795              	.LASF60:
 4796 02fe 63757272 		.ascii	"currentPuckRackScanningIndex\000"
 4796      656E7450 
 4796      75636B52 
 4796      61636B53 
 4796      63616E6E 
 4797              	.LASF3:
 4798 031b 756E7369 		.ascii	"unsigned char\000"
 4798      676E6564 
 4798      20636861 
 4798      7200
 4799              	.LASF14:
 4800 0329 6C6F6E67 		.ascii	"long double\000"
 4800      20646F75 
 4800      626C6500 
 4801              	.LASF45:
 4802 0335 64656772 		.ascii	"degrees\000"
 4802      65657300 
 4803              	.LASF85:
 4804 033d 4D6F746F 		.ascii	"Motor_1_Encoder_Counts_WritePeriod\000"
 4804      725F315F 
 4804      456E636F 
 4804      6465725F 
 4804      436F756E 
 4805              	.LASF42:
 4806 0360 7475726E 		.ascii	"turnLeft\000"
 4806      4C656674 
 4806      00
 4807              	.LASF89:
 4808 0369 726F756E 		.ascii	"round\000"
 4808      6400
 4809              	.LASF2:
 4810 036f 7369676E 		.ascii	"signed char\000"
 4810      65642063 
 4810      68617200 
 4811              	.LASF64:
 4812 037b 626C6F63 		.ascii	"block_edge_location\000"
 4812      6B5F6564 
 4812      67655F6C 
 4812      6F636174 
 4812      696F6E00 
 4813              	.LASF9:
 4814 038f 6C6F6E67 		.ascii	"long long unsigned int\000"
 4814      206C6F6E 
 4814      6720756E 
 4814      7369676E 
 4814      65642069 
 4815              	.LASF97:
 4816 03a6 64636D6F 		.ascii	"dcmotor.c\000"
 4816      746F722E 
 4816      6300
 4817              	.LASF10:
 4818 03b0 756E7369 		.ascii	"unsigned int\000"
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccuzBHa9.s 			page 96


 4818      676E6564 
 4818      20696E74 
 4818      00
 4819              	.LASF77:
 4820 03bd 4D6F746F 		.ascii	"Motor_2_Encoder_Counts_ReadCounter\000"
 4820      725F325F 
 4820      456E636F 
 4820      6465725F 
 4820      436F756E 
 4821              	.LASF16:
 4822 03e0 636F756E 		.ascii	"counts\000"
 4822      747300
 4823              	.LASF47:
 4824 03e7 6E657874 		.ascii	"nextMotion\000"
 4824      4D6F7469 
 4824      6F6E00
 4825              	.LASF5:
 4826 03f2 73686F72 		.ascii	"short unsigned int\000"
 4826      7420756E 
 4826      7369676E 
 4826      65642069 
 4826      6E7400
 4827              	.LASF19:
 4828 0405 706F7369 		.ascii	"positionUpdate\000"
 4828      74696F6E 
 4828      55706461 
 4828      746500
 4829              	.LASF63:
 4830 0414 73776565 		.ascii	"sweeping\000"
 4830      70696E67 
 4830      00
 4831              	.LASF13:
 4832 041d 63686172 		.ascii	"char\000"
 4832      00
 4833              	.LASF29:
 4834 0422 4D315F42 		.ascii	"M1_BD\000"
 4834      4400
 4835              	.LASF12:
 4836 0428 696E7433 		.ascii	"int32_t\000"
 4836      325F7400 
 4837              	.LASF59:
 4838 0430 64726976 		.ascii	"driveStraightEnable\000"
 4838      65537472 
 4838      61696768 
 4838      74456E61 
 4838      626C6500 
 4839              	.LASF50:
 4840 0444 73746F70 		.ascii	"stopMotor1AndUpdate\000"
 4840      4D6F746F 
 4840      7231416E 
 4840      64557064 
 4840      61746500 
 4841              	.LASF23:
 4842 0458 63757272 		.ascii	"currentOrientation_Radians\000"
 4842      656E744F 
 4842      7269656E 
 4842      74617469 
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccuzBHa9.s 			page 97


 4842      6F6E5F52 
 4843              	.LASF93:
 4844 0473 4D6F746F 		.ascii	"Motor_2_Encoder_Counts_Stop\000"
 4844      725F325F 
 4844      456E636F 
 4844      6465725F 
 4844      436F756E 
 4845              	.LASF48:
 4846 048f 64657369 		.ascii	"desiredPosition\000"
 4846      72656450 
 4846      6F736974 
 4846      696F6E00 
 4847              	.LASF28:
 4848 049f 4D315F46 		.ascii	"M1_FD\000"
 4848      4400
 4849              	.LASF20:
 4850 04a5 6F726965 		.ascii	"orientationUpdate\000"
 4850      6E746174 
 4850      696F6E55 
 4850      70646174 
 4850      6500
 4851              	.LASF92:
 4852 04b7 4D6F746F 		.ascii	"Motor_1_Encoder_Counts_ReadStatusRegister\000"
 4852      725F315F 
 4852      456E636F 
 4852      6465725F 
 4852      436F756E 
 4853              	.LASF52:
 4854 04e1 6D6F7665 		.ascii	"moveAndAngle\000"
 4854      416E6441 
 4854      6E676C65 
 4854      00
 4855              	.LASF79:
 4856 04ee 4D6F746F 		.ascii	"Motor_2_Encoder_Counts_WriteCounter\000"
 4856      725F325F 
 4856      456E636F 
 4856      6465725F 
 4856      436F756E 
 4857              	.LASF90:
 4858 0512 4D6F746F 		.ascii	"Motor_1_Encoder_Counts_Stop\000"
 4858      725F315F 
 4858      456E636F 
 4858      6465725F 
 4858      436F756E 
 4859              	.LASF1:
 4860 052e 646F7562 		.ascii	"double\000"
 4860      6C6500
 4861              	.LASF91:
 4862 0535 55415254 		.ascii	"UART_1_PutString\000"
 4862      5F315F50 
 4862      75745374 
 4862      72696E67 
 4862      00
 4863              	.LASF57:
 4864 0546 49544D5F 		.ascii	"ITM_RxBuffer\000"
 4864      52784275 
 4864      66666572 
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccuzBHa9.s 			page 98


 4864      00
 4865              	.LASF94:
 4866 0553 4D6F746F 		.ascii	"Motor_2_Encoder_Counts_ReadStatusRegister\000"
 4866      725F325F 
 4866      456E636F 
 4866      6465725F 
 4866      436F756E 
 4867              	.LASF46:
 4868 057d 64697370 		.ascii	"displaceRight\000"
 4868      6C616365 
 4868      52696768 
 4868      7400
 4869              	.LASF69:
 4870 058b 6D6F746F 		.ascii	"motor2Enable\000"
 4870      7232456E 
 4870      61626C65 
 4870      00
 4871              	.LASF35:
 4872 0598 636F756E 		.ascii	"count1\000"
 4872      743100
 4873              	.LASF36:
 4874 059f 636F756E 		.ascii	"count2\000"
 4874      743200
 4875              	.LASF11:
 4876 05a6 5F5F696E 		.ascii	"__int32_t\000"
 4876      7433325F 
 4876      7400
 4877              	.LASF61:
 4878 05b0 7075636B 		.ascii	"puckRackColours\000"
 4878      5261636B 
 4878      436F6C6F 
 4878      75727300 
 4879              	.LASF98:
 4880 05c0 433A5C55 		.ascii	"C:\\Users\\Misha\\Documents\\PSoC Creator\\ECE3091_"
 4880      73657273 
 4880      5C4D6973 
 4880      68615C44 
 4880      6F63756D 
 4881 05ee 47726F75 		.ascii	"Group17\\Group17RobotReal\\Group17Robot.cydsn\000"
 4881      7031375C 
 4881      47726F75 
 4881      70313752 
 4881      6F626F74 
 4882              	.LASF75:
 4883 061a 6D6F7665 		.ascii	"moveLeftAllowed\000"
 4883      4C656674 
 4883      416C6C6F 
 4883      77656400 
 4884              	.LASF43:
 4885 062a 7475726E 		.ascii	"turnRight\000"
 4885      52696768 
 4885      7400
 4886              	.LASF15:
 4887 0634 73697A65 		.ascii	"sizetype\000"
 4887      74797065 
 4887      00
 4888              	.LASF55:
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccuzBHa9.s 			page 99


 4889 063d 616E676C 		.ascii	"angle\000"
 4889      6500
 4890              	.LASF67:
 4891 0643 6F757470 		.ascii	"output\000"
 4891      757400
 4892              	.LASF56:
 4893 064a 6572726F 		.ascii	"error\000"
 4893      7200
 4894              	.LASF31:
 4895 0650 4D325F42 		.ascii	"M2_BD\000"
 4895      4400
 4896              	.LASF38:
 4897 0656 616D6F75 		.ascii	"amount\000"
 4897      6E7400
 4898              	.LASF96:
 4899 065d 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 4899      43313120 
 4899      352E342E 
 4899      31203230 
 4899      31363036 
 4900 0690 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 4900      20726576 
 4900      6973696F 
 4900      6E203233 
 4900      37373135 
 4901 06c3 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 4901      66756E63 
 4901      74696F6E 
 4901      2D736563 
 4901      74696F6E 
 4902              	.LASF73:
 4903 06eb 63757272 		.ascii	"currentOrientation\000"
 4903      656E744F 
 4903      7269656E 
 4903      74617469 
 4903      6F6E00
 4904              	.LASF44:
 4905 06fe 64697370 		.ascii	"displaceLeft\000"
 4905      6C616365 
 4905      4C656674 
 4905      00
 4906              	.LASF30:
 4907 070b 4D325F46 		.ascii	"M2_FD\000"
 4907      4400
 4908              	.LASF66:
 4909 0711 696E6974 		.ascii	"initialisation\000"
 4909      69616C69 
 4909      73617469 
 4909      6F6E00
 4910              	.LASF84:
 4911 0720 44726966 		.ascii	"Drift_Check_Timer_Start\000"
 4911      745F4368 
 4911      65636B5F 
 4911      54696D65 
 4911      725F5374 
 4912              	.LASF76:
 4913 0738 4D6F746F 		.ascii	"Motor_1_Encoder_Counts_ReadCounter\000"
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccuzBHa9.s 			page 100


 4913      725F315F 
 4913      456E636F 
 4913      6465725F 
 4913      436F756E 
 4914              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
