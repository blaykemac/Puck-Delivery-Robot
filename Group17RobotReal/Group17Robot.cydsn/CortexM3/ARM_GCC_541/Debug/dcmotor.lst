ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccL77S3Y.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"dcmotor.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	__aeabi_i2d
  20              		.global	__aeabi_dmul
  21              		.global	__aeabi_ddiv
  22              		.global	__aeabi_d2f
  23              		.global	__aeabi_f2d
  24              		.global	__aeabi_dadd
  25              		.section	.text.positionUpdate,"ax",%progbits
  26              		.align	2
  27              		.global	positionUpdate
  28              		.thumb
  29              		.thumb_func
  30              		.type	positionUpdate, %function
  31              	positionUpdate:
  32              	.LFB64:
  33              		.file 1 "dcmotor.c"
   1:dcmotor.c     **** 
   2:dcmotor.c     **** /* ========================================
   3:dcmotor.c     ****  *
   4:dcmotor.c     ****  * Copyright Group 17, 2019
   5:dcmotor.c     ****  * All Rights Reserved
   6:dcmotor.c     ****  * UNPUBLISHED, LICENSED SOFTWARE.
   7:dcmotor.c     ****  *
   8:dcmotor.c     ****  * CONFIDENTIAL AND PROPRIETARY INFORMATION
   9:dcmotor.c     ****  * WHICH IS THE PROPERTY OF Blayke, Misha, Nidhin.
  10:dcmotor.c     ****  *
  11:dcmotor.c     ****  * ========================================
  12:dcmotor.c     **** */
  13:dcmotor.c     **** 
  14:dcmotor.c     **** // * PSOC LIBRARY * //
  15:dcmotor.c     **** #include "project.h"
  16:dcmotor.c     **** 
  17:dcmotor.c     **** // * C LIBRARIES * // 
  18:dcmotor.c     **** #include <stdio.h>
  19:dcmotor.c     **** #include <math.h>
  20:dcmotor.c     **** #include <string.h>
  21:dcmotor.c     **** 
  22:dcmotor.c     **** // * OUR LIBRARIES * //
  23:dcmotor.c     **** #include "main.h"
  24:dcmotor.c     **** #include "colour.h"
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccL77S3Y.s 			page 2


  25:dcmotor.c     **** #include "ultrasonic.h" 
  26:dcmotor.c     **** #include "dcmotor.h"
  27:dcmotor.c     **** #include "servo.h"
  28:dcmotor.c     **** #include "customMath.h"
  29:dcmotor.c     **** 
  30:dcmotor.c     **** 
  31:dcmotor.c     **** 
  32:dcmotor.c     **** //This function takes a number of counts from the encoder and, assuming that the number of 
  33:dcmotor.c     **** //counts has been moved in the currentOrientation direction, updates the current position. 
  34:dcmotor.c     **** //Current position can only be updated from within this function
  35:dcmotor.c     **** void positionUpdate(int counts, int drivingForwardFlag, int drivingBackwardFlag){
  34              		.loc 1 35 0
  35              		.cfi_startproc
  36              		@ args = 0, pretend = 0, frame = 0
  37              		@ frame_needed = 0, uses_anonymous_args = 0
  38              	.LVL0:
  39 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
  40              		.cfi_def_cfa_offset 32
  41              		.cfi_offset 4, -32
  42              		.cfi_offset 5, -28
  43              		.cfi_offset 6, -24
  44              		.cfi_offset 7, -20
  45              		.cfi_offset 8, -16
  46              		.cfi_offset 9, -12
  47              		.cfi_offset 10, -8
  48              		.cfi_offset 14, -4
  49 0004 0746     		mov	r7, r0
  50 0006 0C46     		mov	r4, r1
  51 0008 1546     		mov	r5, r2
  36:dcmotor.c     ****     float currentOrientation_Radians = (M_PI*currentOrientation/180);
  52              		.loc 1 36 0
  53 000a 514B     		ldr	r3, .L5+16
  54 000c 1868     		ldr	r0, [r3]
  55              	.LVL1:
  56 000e FFF7FEFF 		bl	__aeabi_i2d
  57              	.LVL2:
  58 0012 4BA3     		adr	r3, .L5
  59 0014 D3E90023 		ldrd	r2, [r3]
  60 0018 FFF7FEFF 		bl	__aeabi_dmul
  61              	.LVL3:
  62 001c 0022     		movs	r2, #0
  63 001e 4D4B     		ldr	r3, .L5+20
  64 0020 FFF7FEFF 		bl	__aeabi_ddiv
  65              	.LVL4:
  66 0024 FFF7FEFF 		bl	__aeabi_d2f
  67              	.LVL5:
  68 0028 0646     		mov	r6, r0
  69              	.LVL6:
  37:dcmotor.c     ****     if (drivingForwardFlag == TRUE){
  70              		.loc 1 37 0
  71 002a 012C     		cmp	r4, #1
  72 002c 40D1     		bne	.L2
  38:dcmotor.c     ****         //When we update position, be aware that we measure orientation as 0 degres facing
  39:dcmotor.c     ****         //to the east of the arena and increasing counterclockwise
  40:dcmotor.c     ****         currentPosition[0] += CM_PER_COUNT*counts*cos(currentOrientation_Radians);
  73              		.loc 1 40 0
  74 002e 3846     		mov	r0, r7
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccL77S3Y.s 			page 3


  75              	.LVL7:
  76 0030 FFF7FEFF 		bl	__aeabi_i2d
  77              	.LVL8:
  78 0034 44A3     		adr	r3, .L5+8
  79 0036 D3E90023 		ldrd	r2, [r3]
  80 003a FFF7FEFF 		bl	__aeabi_dmul
  81              	.LVL9:
  82 003e 0446     		mov	r4, r0
  83              	.LVL10:
  84 0040 0D46     		mov	r5, r1
  85              	.LVL11:
  86 0042 3046     		mov	r0, r6
  87 0044 FFF7FEFF 		bl	__aeabi_f2d
  88              	.LVL12:
  89 0048 0646     		mov	r6, r0
  90              	.LVL13:
  91 004a 0F46     		mov	r7, r1
  92              	.LVL14:
  93 004c FFF7FEFF 		bl	cos
  94              	.LVL15:
  95 0050 0246     		mov	r2, r0
  96 0052 0B46     		mov	r3, r1
  97 0054 2046     		mov	r0, r4
  98 0056 2946     		mov	r1, r5
  99 0058 FFF7FEFF 		bl	__aeabi_dmul
 100              	.LVL16:
 101 005c 8046     		mov	r8, r0
 102 005e 8946     		mov	r9, r1
 103 0060 DFF8F4A0 		ldr	r10, .L5+24
 104 0064 DAF80000 		ldr	r0, [r10]	@ float
 105 0068 FFF7FEFF 		bl	__aeabi_f2d
 106              	.LVL17:
 107 006c 4246     		mov	r2, r8
 108 006e 4B46     		mov	r3, r9
 109 0070 FFF7FEFF 		bl	__aeabi_dadd
 110              	.LVL18:
 111 0074 FFF7FEFF 		bl	__aeabi_d2f
 112              	.LVL19:
 113 0078 CAF80000 		str	r0, [r10]	@ float
  41:dcmotor.c     ****         currentPosition[1] += CM_PER_COUNT*counts*sin(currentOrientation_Radians);
 114              		.loc 1 41 0
 115 007c 3046     		mov	r0, r6
 116 007e 3946     		mov	r1, r7
 117 0080 FFF7FEFF 		bl	sin
 118              	.LVL20:
 119 0084 0246     		mov	r2, r0
 120 0086 0B46     		mov	r3, r1
 121 0088 2046     		mov	r0, r4
 122 008a 2946     		mov	r1, r5
 123 008c FFF7FEFF 		bl	__aeabi_dmul
 124              	.LVL21:
 125 0090 0446     		mov	r4, r0
 126 0092 0D46     		mov	r5, r1
 127 0094 DAF80400 		ldr	r0, [r10, #4]	@ float
 128 0098 FFF7FEFF 		bl	__aeabi_f2d
 129              	.LVL22:
 130 009c 2246     		mov	r2, r4
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccL77S3Y.s 			page 4


 131 009e 2B46     		mov	r3, r5
 132 00a0 FFF7FEFF 		bl	__aeabi_dadd
 133              	.LVL23:
 134 00a4 FFF7FEFF 		bl	__aeabi_d2f
 135              	.LVL24:
 136 00a8 CAF80400 		str	r0, [r10, #4]	@ float
 137 00ac BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 138              	.LVL25:
 139              	.L2:
  42:dcmotor.c     ****     }else if (drivingBackwardFlag == TRUE){
 140              		.loc 1 42 0
 141 00b0 012D     		cmp	r5, #1
 142 00b2 43D1     		bne	.L1
  43:dcmotor.c     ****         currentPosition[0] += CM_PER_COUNT*counts*cos(currentOrientation_Radians + M_PI); 
 143              		.loc 1 43 0
 144 00b4 3846     		mov	r0, r7
 145              	.LVL26:
 146 00b6 FFF7FEFF 		bl	__aeabi_i2d
 147              	.LVL27:
 148 00ba 23A3     		adr	r3, .L5+8
 149 00bc D3E90023 		ldrd	r2, [r3]
 150 00c0 FFF7FEFF 		bl	__aeabi_dmul
 151              	.LVL28:
 152 00c4 0446     		mov	r4, r0
 153              	.LVL29:
 154 00c6 0D46     		mov	r5, r1
 155              	.LVL30:
 156 00c8 3046     		mov	r0, r6
 157 00ca FFF7FEFF 		bl	__aeabi_f2d
 158              	.LVL31:
 159 00ce 1CA3     		adr	r3, .L5
 160 00d0 D3E90023 		ldrd	r2, [r3]
 161 00d4 FFF7FEFF 		bl	__aeabi_dadd
 162              	.LVL32:
 163 00d8 0646     		mov	r6, r0
 164              	.LVL33:
 165 00da 0F46     		mov	r7, r1
 166              	.LVL34:
 167 00dc FFF7FEFF 		bl	cos
 168              	.LVL35:
 169 00e0 0246     		mov	r2, r0
 170 00e2 0B46     		mov	r3, r1
 171 00e4 2046     		mov	r0, r4
 172 00e6 2946     		mov	r1, r5
 173 00e8 FFF7FEFF 		bl	__aeabi_dmul
 174              	.LVL36:
 175 00ec 8046     		mov	r8, r0
 176 00ee 8946     		mov	r9, r1
 177 00f0 DFF864A0 		ldr	r10, .L5+24
 178 00f4 DAF80000 		ldr	r0, [r10]	@ float
 179 00f8 FFF7FEFF 		bl	__aeabi_f2d
 180              	.LVL37:
 181 00fc 4246     		mov	r2, r8
 182 00fe 4B46     		mov	r3, r9
 183 0100 FFF7FEFF 		bl	__aeabi_dadd
 184              	.LVL38:
 185 0104 FFF7FEFF 		bl	__aeabi_d2f
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccL77S3Y.s 			page 5


 186              	.LVL39:
 187 0108 CAF80000 		str	r0, [r10]	@ float
  44:dcmotor.c     ****         currentPosition[1] += CM_PER_COUNT*counts*sin(currentOrientation_Radians + M_PI);
 188              		.loc 1 44 0
 189 010c 3046     		mov	r0, r6
 190 010e 3946     		mov	r1, r7
 191 0110 FFF7FEFF 		bl	sin
 192              	.LVL40:
 193 0114 0246     		mov	r2, r0
 194 0116 0B46     		mov	r3, r1
 195 0118 2046     		mov	r0, r4
 196 011a 2946     		mov	r1, r5
 197 011c FFF7FEFF 		bl	__aeabi_dmul
 198              	.LVL41:
 199 0120 0446     		mov	r4, r0
 200 0122 0D46     		mov	r5, r1
 201 0124 DAF80400 		ldr	r0, [r10, #4]	@ float
 202 0128 FFF7FEFF 		bl	__aeabi_f2d
 203              	.LVL42:
 204 012c 2246     		mov	r2, r4
 205 012e 2B46     		mov	r3, r5
 206 0130 FFF7FEFF 		bl	__aeabi_dadd
 207              	.LVL43:
 208 0134 FFF7FEFF 		bl	__aeabi_d2f
 209              	.LVL44:
 210 0138 CAF80400 		str	r0, [r10, #4]	@ float
 211              	.L1:
 212 013c BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 213              	.L6:
 214              		.align	3
 215              	.L5:
 216 0140 182D4454 		.word	1413754136
 217 0144 FB210940 		.word	1074340347
 218 0148 12A5BDC1 		.word	-1044536046
 219 014c 1726933F 		.word	1066608151
 220 0150 00000000 		.word	currentOrientation
 221 0154 00806640 		.word	1080459264
 222 0158 00000000 		.word	currentPosition
 223              		.cfi_endproc
 224              	.LFE64:
 225              		.size	positionUpdate, .-positionUpdate
 226              		.global	__aeabi_d2iz
 227              		.section	.text.orientationUpdate,"ax",%progbits
 228              		.align	2
 229              		.global	orientationUpdate
 230              		.thumb
 231              		.thumb_func
 232              		.type	orientationUpdate, %function
 233              	orientationUpdate:
 234              	.LFB65:
  45:dcmotor.c     ****     }
  46:dcmotor.c     **** }
  47:dcmotor.c     **** 
  48:dcmotor.c     **** //This function takes a number of counts from the encoder, and based on whether we are 
  49:dcmotor.c     **** //turning left or right, updates the current orientation. Current orientation can only
  50:dcmotor.c     **** //be updated from within this function
  51:dcmotor.c     **** void orientationUpdate(int counts,int turningLeftFlag, int turningRightFlag){
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccL77S3Y.s 			page 6


 235              		.loc 1 51 0
 236              		.cfi_startproc
 237              		@ args = 0, pretend = 0, frame = 0
 238              		@ frame_needed = 0, uses_anonymous_args = 0
 239              	.LVL45:
 240 0000 38B5     		push	{r3, r4, r5, lr}
 241              		.cfi_def_cfa_offset 16
 242              		.cfi_offset 3, -16
 243              		.cfi_offset 4, -12
 244              		.cfi_offset 5, -8
 245              		.cfi_offset 14, -4
 246 0002 0C46     		mov	r4, r1
 247 0004 1546     		mov	r5, r2
  52:dcmotor.c     ****     int degreesMoved = counts*DEGREES_PER_COUNT;
 248              		.loc 1 52 0
 249 0006 FFF7FEFF 		bl	__aeabi_i2d
 250              	.LVL46:
 251 000a 17A3     		adr	r3, .L11
 252 000c D3E90023 		ldrd	r2, [r3]
 253 0010 FFF7FEFF 		bl	__aeabi_dmul
 254              	.LVL47:
 255 0014 FFF7FEFF 		bl	__aeabi_d2iz
 256              	.LVL48:
  53:dcmotor.c     ****     if (turningLeftFlag == TRUE){
 257              		.loc 1 53 0
 258 0018 012C     		cmp	r4, #1
 259 001a 0FD1     		bne	.L8
  54:dcmotor.c     ****         currentOrientation += degreesMoved;
 260              		.loc 1 54 0
 261 001c 1449     		ldr	r1, .L11+8
 262 001e 0B68     		ldr	r3, [r1]
 263 0020 1844     		add	r0, r0, r3
 264              	.LVL49:
  55:dcmotor.c     ****         currentOrientation = currentOrientation%360;
 265              		.loc 1 55 0
 266 0022 144A     		ldr	r2, .L11+12
 267 0024 80FB0223 		smull	r2, r3, r0, r2
 268 0028 C218     		adds	r2, r0, r3
 269 002a C317     		asrs	r3, r0, #31
 270 002c C3EB2223 		rsb	r3, r3, r2, asr #8
 271 0030 4FF4B472 		mov	r2, #360
 272 0034 02FB1303 		mls	r3, r2, r3, r0
 273 0038 0B60     		str	r3, [r1]
 274 003a 38BD     		pop	{r3, r4, r5, pc}
 275              	.LVL50:
 276              	.L8:
  56:dcmotor.c     ****     }else if (turningRightFlag == TRUE){
 277              		.loc 1 56 0
 278 003c 012D     		cmp	r5, #1
 279 003e 12D1     		bne	.L7
  57:dcmotor.c     ****         currentOrientation -= degreesMoved;
 280              		.loc 1 57 0
 281 0040 0B49     		ldr	r1, .L11+8
 282 0042 0B68     		ldr	r3, [r1]
 283 0044 181A     		subs	r0, r3, r0
 284              	.LVL51:
  58:dcmotor.c     ****         currentOrientation = currentOrientation%360;
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccL77S3Y.s 			page 7


 285              		.loc 1 58 0
 286 0046 0B4A     		ldr	r2, .L11+12
 287 0048 80FB0223 		smull	r2, r3, r0, r2
 288 004c C218     		adds	r2, r0, r3
 289 004e C317     		asrs	r3, r0, #31
 290 0050 C3EB2223 		rsb	r3, r3, r2, asr #8
 291 0054 4FF4B472 		mov	r2, #360
 292 0058 02FB1303 		mls	r3, r2, r3, r0
 293 005c 0B60     		str	r3, [r1]
  59:dcmotor.c     ****         if (currentOrientation < 0){
 294              		.loc 1 59 0
 295 005e 002B     		cmp	r3, #0
 296 0060 01DA     		bge	.L7
  60:dcmotor.c     ****             currentOrientation += 360;
 297              		.loc 1 60 0
 298 0062 1344     		add	r3, r3, r2
 299 0064 0B60     		str	r3, [r1]
 300              	.L7:
 301 0066 38BD     		pop	{r3, r4, r5, pc}
 302              	.LVL52:
 303              	.L12:
 304              		.align	3
 305              	.L11:
 306 0068 E17A14AE 		.word	-1374389535
 307 006c 47E1BA3F 		.word	1069211975
 308 0070 00000000 		.word	currentOrientation
 309 0074 B7600BB6 		.word	-1240768329
 310              		.cfi_endproc
 311              	.LFE65:
 312              		.size	orientationUpdate, .-orientationUpdate
 313              		.section	.text.stopMotion,"ax",%progbits
 314              		.align	2
 315              		.global	stopMotion
 316              		.thumb
 317              		.thumb_func
 318              		.type	stopMotion, %function
 319              	stopMotion:
 320              	.LFB66:
  61:dcmotor.c     ****         }
  62:dcmotor.c     ****     }
  63:dcmotor.c     **** }
  64:dcmotor.c     **** 
  65:dcmotor.c     **** //This function will be called once the ultrasonics or the encoders decide that it is time
  66:dcmotor.c     **** //to stop moving. 
  67:dcmotor.c     **** void stopMotion(void){
 321              		.loc 1 67 0
 322              		.cfi_startproc
 323              		@ args = 0, pretend = 0, frame = 0
 324              		@ frame_needed = 0, uses_anonymous_args = 0
 325 0000 08B5     		push	{r3, lr}
 326              		.cfi_def_cfa_offset 8
 327              		.cfi_offset 3, -8
 328              		.cfi_offset 14, -4
  68:dcmotor.c     ****     if ((motor1Enable == FALSE) && (motor2Enable == FALSE)){
 329              		.loc 1 68 0
 330 0002 294B     		ldr	r3, .L20
 331 0004 B3F90030 		ldrsh	r3, [r3]
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccL77S3Y.s 			page 8


 332 0008 002B     		cmp	r3, #0
 333 000a 4BD1     		bne	.L13
 334              		.loc 1 68 0 is_stmt 0 discriminator 1
 335 000c 274B     		ldr	r3, .L20+4
 336 000e B3F90030 		ldrsh	r3, [r3]
 337 0012 002B     		cmp	r3, #0
 338 0014 46D1     		bne	.L13
 339              	.LBB2:
  69:dcmotor.c     ****         //Update the driving permission flags
  70:dcmotor.c     ****         //Read encoder counts and update from previous position
  71:dcmotor.c     ****         int completedCounts;
  72:dcmotor.c     ****         if ((drivingForwardFlag == TRUE)||(drivingBackwardFlag == TRUE)){
 340              		.loc 1 72 0 is_stmt 1
 341 0016 264B     		ldr	r3, .L20+8
 342 0018 B3F90030 		ldrsh	r3, [r3]
 343 001c 012B     		cmp	r3, #1
 344 001e 04D0     		beq	.L15
 345              		.loc 1 72 0 is_stmt 0 discriminator 1
 346 0020 244B     		ldr	r3, .L20+12
 347 0022 B3F90030 		ldrsh	r3, [r3]
 348 0026 012B     		cmp	r3, #1
 349 0028 0AD1     		bne	.L16
 350              	.L15:
  73:dcmotor.c     ****             //We assume that the two counter will have identical counts
  74:dcmotor.c     ****             completedCounts = Motor_1_Encoder_Counts_ReadCounter();
 351              		.loc 1 74 0 is_stmt 1
 352 002a FFF7FEFF 		bl	Motor_1_Encoder_Counts_ReadCounter
 353              	.LVL53:
  75:dcmotor.c     ****             positionUpdate(completedCounts,drivingForwardFlag,drivingBackwardFlag);
 354              		.loc 1 75 0
 355 002e 214B     		ldr	r3, .L20+12
 356 0030 B3F90020 		ldrsh	r2, [r3]
 357 0034 1E4B     		ldr	r3, .L20+8
 358 0036 B3F90010 		ldrsh	r1, [r3]
 359 003a FFF7FEFF 		bl	positionUpdate
 360              	.LVL54:
 361 003e 1EE0     		b	.L17
 362              	.L16:
  76:dcmotor.c     ****         }else if (turningLeftFlag == TRUE){
 363              		.loc 1 76 0
 364 0040 1D4B     		ldr	r3, .L20+16
 365 0042 B3F90030 		ldrsh	r3, [r3]
 366 0046 012B     		cmp	r3, #1
 367 0048 0AD1     		bne	.L18
  77:dcmotor.c     ****             completedCounts = Motor_2_Encoder_Counts_ReadCounter();
 368              		.loc 1 77 0
 369 004a FFF7FEFF 		bl	Motor_2_Encoder_Counts_ReadCounter
 370              	.LVL55:
  78:dcmotor.c     ****             orientationUpdate(completedCounts,turningLeftFlag,turningRightFlag);
 371              		.loc 1 78 0
 372 004e 1B4B     		ldr	r3, .L20+20
 373 0050 B3F90020 		ldrsh	r2, [r3]
 374 0054 184B     		ldr	r3, .L20+16
 375 0056 B3F90010 		ldrsh	r1, [r3]
 376 005a FFF7FEFF 		bl	orientationUpdate
 377              	.LVL56:
 378 005e 0EE0     		b	.L17
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccL77S3Y.s 			page 9


 379              	.L18:
  79:dcmotor.c     ****         }else if (turningRightFlag == TRUE){
 380              		.loc 1 79 0
 381 0060 164B     		ldr	r3, .L20+20
 382 0062 B3F90030 		ldrsh	r3, [r3]
 383 0066 012B     		cmp	r3, #1
 384 0068 09D1     		bne	.L17
  80:dcmotor.c     ****             completedCounts = Motor_1_Encoder_Counts_ReadCounter();
 385              		.loc 1 80 0
 386 006a FFF7FEFF 		bl	Motor_1_Encoder_Counts_ReadCounter
 387              	.LVL57:
  81:dcmotor.c     ****             orientationUpdate(completedCounts,turningLeftFlag,turningRightFlag);
 388              		.loc 1 81 0
 389 006e 134B     		ldr	r3, .L20+20
 390 0070 B3F90020 		ldrsh	r2, [r3]
 391 0074 104B     		ldr	r3, .L20+16
 392 0076 B3F90010 		ldrsh	r1, [r3]
 393 007a FFF7FEFF 		bl	orientationUpdate
 394              	.LVL58:
 395              	.L17:
  82:dcmotor.c     ****         }
  83:dcmotor.c     ****                 
  84:dcmotor.c     ****         //Clear encoder counts
  85:dcmotor.c     ****         Motor_1_Encoder_Counts_WriteCounter(0);
 396              		.loc 1 85 0
 397 007e 0020     		movs	r0, #0
 398 0080 FFF7FEFF 		bl	Motor_1_Encoder_Counts_WriteCounter
 399              	.LVL59:
  86:dcmotor.c     ****         Motor_2_Encoder_Counts_WriteCounter(0);
 400              		.loc 1 86 0
 401 0084 0020     		movs	r0, #0
 402 0086 FFF7FEFF 		bl	Motor_2_Encoder_Counts_WriteCounter
 403              	.LVL60:
  87:dcmotor.c     ****         
  88:dcmotor.c     ****         motor1EncoderCounts = 0;
 404              		.loc 1 88 0
 405 008a 0023     		movs	r3, #0
 406 008c 0C4A     		ldr	r2, .L20+24
 407 008e 1360     		str	r3, [r2]
  89:dcmotor.c     ****         motor2EncoderCounts = 0;
 408              		.loc 1 89 0
 409 0090 0C4A     		ldr	r2, .L20+28
 410 0092 1360     		str	r3, [r2]
  90:dcmotor.c     ****         
  91:dcmotor.c     ****         //Just for now, we are going to update driving flags by turning all of them off
  92:dcmotor.c     ****         drivingForwardFlag = FALSE;
 411              		.loc 1 92 0
 412 0094 064A     		ldr	r2, .L20+8
 413 0096 1380     		strh	r3, [r2]	@ movhi
  93:dcmotor.c     ****         drivingBackwardFlag = FALSE;
 414              		.loc 1 93 0
 415 0098 064A     		ldr	r2, .L20+12
 416 009a 1380     		strh	r3, [r2]	@ movhi
  94:dcmotor.c     ****         turningLeftFlag = FALSE;
 417              		.loc 1 94 0
 418 009c 064A     		ldr	r2, .L20+16
 419 009e 1380     		strh	r3, [r2]	@ movhi
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccL77S3Y.s 			page 10


  95:dcmotor.c     ****         turningRightFlag = FALSE;
 420              		.loc 1 95 0
 421 00a0 064A     		ldr	r2, .L20+20
 422 00a2 1380     		strh	r3, [r2]	@ movhi
 423              	.L13:
 424 00a4 08BD     		pop	{r3, pc}
 425              	.L21:
 426 00a6 00BF     		.align	2
 427              	.L20:
 428 00a8 00000000 		.word	motor1Enable
 429 00ac 00000000 		.word	motor2Enable
 430 00b0 00000000 		.word	drivingForwardFlag
 431 00b4 00000000 		.word	drivingBackwardFlag
 432 00b8 00000000 		.word	turningLeftFlag
 433 00bc 00000000 		.word	turningRightFlag
 434 00c0 00000000 		.word	motor1EncoderCounts
 435 00c4 00000000 		.word	motor2EncoderCounts
 436              	.LBE2:
 437              		.cfi_endproc
 438              	.LFE66:
 439              		.size	stopMotion, .-stopMotion
 440              		.global	__aeabi_fdiv
 441              		.global	__aeabi_fmul
 442              		.global	__aeabi_f2uiz
 443              		.section	.text.motorDutyCycleUpdate,"ax",%progbits
 444              		.align	2
 445              		.global	motorDutyCycleUpdate
 446              		.thumb
 447              		.thumb_func
 448              		.type	motorDutyCycleUpdate, %function
 449              	motorDutyCycleUpdate:
 450              	.LFB67:
  96:dcmotor.c     ****         
  97:dcmotor.c     ****         //Have code here to plan the route which should also update the driving flags
  98:dcmotor.c     ****         
  99:dcmotor.c     ****     }
 100:dcmotor.c     **** }
 101:dcmotor.c     **** 
 102:dcmotor.c     **** //Takes the duty cycles must be expressed as a percentage and runs the motors at those duty
 103:dcmotor.c     **** //cycles
 104:dcmotor.c     **** void motorDutyCycleUpdate(float M1_FD, float M1_BD, float M2_FD, float M2_BD){
 451              		.loc 1 104 0
 452              		.cfi_startproc
 453              		@ args = 0, pretend = 0, frame = 0
 454              		@ frame_needed = 0, uses_anonymous_args = 0
 455              	.LVL61:
 456 0000 70B5     		push	{r4, r5, r6, lr}
 457              		.cfi_def_cfa_offset 16
 458              		.cfi_offset 4, -16
 459              		.cfi_offset 5, -12
 460              		.cfi_offset 6, -8
 461              		.cfi_offset 14, -4
 462 0002 0D46     		mov	r5, r1
 463 0004 1646     		mov	r6, r2
 464 0006 1C46     		mov	r4, r3
 105:dcmotor.c     ****     Motor_1_driver_WriteCompare1((M1_FD/NUM_TO_PERCENT_CONVERTER)*DCMOTOR_PWM_PERIOD);
 465              		.loc 1 105 0
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccL77S3Y.s 			page 11


 466 0008 1749     		ldr	r1, .L24
 467              	.LVL62:
 468 000a FFF7FEFF 		bl	__aeabi_fdiv
 469              	.LVL63:
 470 000e 1749     		ldr	r1, .L24+4
 471 0010 FFF7FEFF 		bl	__aeabi_fmul
 472              	.LVL64:
 473 0014 FFF7FEFF 		bl	__aeabi_f2uiz
 474              	.LVL65:
 475 0018 80B2     		uxth	r0, r0
 476 001a FFF7FEFF 		bl	Motor_1_driver_WriteCompare1
 477              	.LVL66:
 106:dcmotor.c     ****     Motor_2_driver_WriteCompare1((M2_FD/NUM_TO_PERCENT_CONVERTER)*DCMOTOR_PWM_PERIOD);
 478              		.loc 1 106 0
 479 001e 1249     		ldr	r1, .L24
 480 0020 3046     		mov	r0, r6
 481 0022 FFF7FEFF 		bl	__aeabi_fdiv
 482              	.LVL67:
 483 0026 1149     		ldr	r1, .L24+4
 484 0028 FFF7FEFF 		bl	__aeabi_fmul
 485              	.LVL68:
 486 002c FFF7FEFF 		bl	__aeabi_f2uiz
 487              	.LVL69:
 488 0030 80B2     		uxth	r0, r0
 489 0032 FFF7FEFF 		bl	Motor_2_driver_WriteCompare1
 490              	.LVL70:
 107:dcmotor.c     ****     Motor_1_driver_WriteCompare2((M1_BD/NUM_TO_PERCENT_CONVERTER)*DCMOTOR_PWM_PERIOD);
 491              		.loc 1 107 0
 492 0036 0C49     		ldr	r1, .L24
 493 0038 2846     		mov	r0, r5
 494 003a FFF7FEFF 		bl	__aeabi_fdiv
 495              	.LVL71:
 496 003e 0B49     		ldr	r1, .L24+4
 497 0040 FFF7FEFF 		bl	__aeabi_fmul
 498              	.LVL72:
 499 0044 FFF7FEFF 		bl	__aeabi_f2uiz
 500              	.LVL73:
 501 0048 80B2     		uxth	r0, r0
 502 004a FFF7FEFF 		bl	Motor_1_driver_WriteCompare2
 503              	.LVL74:
 108:dcmotor.c     ****     Motor_2_driver_WriteCompare2((M2_BD/NUM_TO_PERCENT_CONVERTER)*DCMOTOR_PWM_PERIOD);
 504              		.loc 1 108 0
 505 004e 0649     		ldr	r1, .L24
 506 0050 2046     		mov	r0, r4
 507 0052 FFF7FEFF 		bl	__aeabi_fdiv
 508              	.LVL75:
 509 0056 0549     		ldr	r1, .L24+4
 510 0058 FFF7FEFF 		bl	__aeabi_fmul
 511              	.LVL76:
 512 005c FFF7FEFF 		bl	__aeabi_f2uiz
 513              	.LVL77:
 514 0060 80B2     		uxth	r0, r0
 515 0062 FFF7FEFF 		bl	Motor_2_driver_WriteCompare2
 516              	.LVL78:
 517 0066 70BD     		pop	{r4, r5, r6, pc}
 518              	.LVL79:
 519              	.L25:
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccL77S3Y.s 			page 12


 520              		.align	2
 521              	.L24:
 522 0068 0000C842 		.word	1120403456
 523 006c 00009643 		.word	1133903872
 524              		.cfi_endproc
 525              	.LFE67:
 526              		.size	motorDutyCycleUpdate, .-motorDutyCycleUpdate
 527              		.global	__aeabi_i2f
 528              		.section	.text.driftCorrect,"ax",%progbits
 529              		.align	2
 530              		.global	driftCorrect
 531              		.thumb
 532              		.thumb_func
 533              		.type	driftCorrect, %function
 534              	driftCorrect:
 535              	.LFB68:
 109:dcmotor.c     **** }
 110:dcmotor.c     **** 
 111:dcmotor.c     **** //This function will be responsible for adjusting any drift. It will read and modify 
 112:dcmotor.c     **** //global variables M1_FD,M1_BD,M2_FD and M2_BD to do so.
 113:dcmotor.c     **** void driftCorrect(void){
 536              		.loc 1 113 0
 537              		.cfi_startproc
 538              		@ args = 0, pretend = 0, frame = 0
 539              		@ frame_needed = 0, uses_anonymous_args = 0
 540 0000 70B5     		push	{r4, r5, r6, lr}
 541              		.cfi_def_cfa_offset 16
 542              		.cfi_offset 4, -16
 543              		.cfi_offset 5, -12
 544              		.cfi_offset 6, -8
 545              		.cfi_offset 14, -4
 114:dcmotor.c     ****     int temp; //allows us to swap motor encoders' speeds
 115:dcmotor.c     ****     if (motor1EncoderCounts > motor2EncoderCounts){
 546              		.loc 1 115 0
 547 0002 614B     		ldr	r3, .L44
 548 0004 1A68     		ldr	r2, [r3]
 549 0006 614B     		ldr	r3, .L44+4
 550 0008 1B68     		ldr	r3, [r3]
 551 000a 9A42     		cmp	r2, r3
 552 000c 4FDD     		ble	.L27
 116:dcmotor.c     ****         if (drivingForwardFlag == TRUE){
 553              		.loc 1 116 0
 554 000e 604B     		ldr	r3, .L44+8
 555 0010 B3F90030 		ldrsh	r3, [r3]
 556 0014 012B     		cmp	r3, #1
 557 0016 0ED1     		bne	.L28
 117:dcmotor.c     ****             if (M1_FD == M2_FD){
 558              		.loc 1 117 0
 559 0018 5E4B     		ldr	r3, .L44+12
 560 001a 1A68     		ldr	r2, [r3]
 561 001c 5E4B     		ldr	r3, .L44+16
 562 001e 1B68     		ldr	r3, [r3]
 563 0020 9A42     		cmp	r2, r3
 564 0022 03D1     		bne	.L29
 118:dcmotor.c     ****                 M1_FD = M2_FD - 1;
 565              		.loc 1 118 0
 566 0024 013B     		subs	r3, r3, #1
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccL77S3Y.s 			page 13


 567 0026 5B4A     		ldr	r2, .L44+12
 568 0028 1360     		str	r3, [r2]
 569 002a 91E0     		b	.L30
 570              	.L29:
 571              	.LVL80:
 119:dcmotor.c     ****             }else{
 120:dcmotor.c     ****                 temp = M1_FD;
 121:dcmotor.c     ****                 M1_FD = M2_FD;
 572              		.loc 1 121 0
 573 002c 5949     		ldr	r1, .L44+12
 574 002e 0B60     		str	r3, [r1]
 122:dcmotor.c     ****                 M2_FD = temp;
 575              		.loc 1 122 0
 576 0030 594B     		ldr	r3, .L44+16
 577 0032 1A60     		str	r2, [r3]
 578 0034 8CE0     		b	.L30
 579              	.LVL81:
 580              	.L28:
 123:dcmotor.c     ****             }
 124:dcmotor.c     ****         }
 125:dcmotor.c     ****         else if (drivingBackwardFlag == TRUE){
 581              		.loc 1 125 0
 582 0036 594B     		ldr	r3, .L44+20
 583 0038 B3F90030 		ldrsh	r3, [r3]
 584 003c 012B     		cmp	r3, #1
 585 003e 0ED1     		bne	.L31
 126:dcmotor.c     ****             if (M1_BD == M2_BD){
 586              		.loc 1 126 0
 587 0040 574B     		ldr	r3, .L44+24
 588 0042 1A68     		ldr	r2, [r3]
 589 0044 574B     		ldr	r3, .L44+28
 590 0046 1B68     		ldr	r3, [r3]
 591 0048 9A42     		cmp	r2, r3
 592 004a 03D1     		bne	.L32
 127:dcmotor.c     ****                 M1_BD = M2_BD - 1;
 593              		.loc 1 127 0
 594 004c 013B     		subs	r3, r3, #1
 595 004e 544A     		ldr	r2, .L44+24
 596 0050 1360     		str	r3, [r2]
 597 0052 7DE0     		b	.L30
 598              	.L32:
 599              	.LVL82:
 128:dcmotor.c     ****             }else{
 129:dcmotor.c     ****                 temp = M1_BD;
 130:dcmotor.c     ****                 M1_BD = M2_BD;
 600              		.loc 1 130 0
 601 0054 5249     		ldr	r1, .L44+24
 602 0056 0B60     		str	r3, [r1]
 131:dcmotor.c     ****                 M2_BD = temp;
 603              		.loc 1 131 0
 604 0058 524B     		ldr	r3, .L44+28
 605 005a 1A60     		str	r2, [r3]
 606 005c 78E0     		b	.L30
 607              	.LVL83:
 608              	.L31:
 132:dcmotor.c     ****             }
 133:dcmotor.c     ****         }else if (turningLeftFlag == TRUE){
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccL77S3Y.s 			page 14


 609              		.loc 1 133 0
 610 005e 524B     		ldr	r3, .L44+32
 611 0060 B3F90030 		ldrsh	r3, [r3]
 612 0064 012B     		cmp	r3, #1
 613 0066 0ED1     		bne	.L33
 134:dcmotor.c     ****             if (M1_BD == M2_FD){
 614              		.loc 1 134 0
 615 0068 4D4B     		ldr	r3, .L44+24
 616 006a 1A68     		ldr	r2, [r3]
 617 006c 4A4B     		ldr	r3, .L44+16
 618 006e 1B68     		ldr	r3, [r3]
 619 0070 9A42     		cmp	r2, r3
 620 0072 03D1     		bne	.L34
 135:dcmotor.c     ****                 M1_BD = M2_FD - 1;
 621              		.loc 1 135 0
 622 0074 013B     		subs	r3, r3, #1
 623 0076 4A4A     		ldr	r2, .L44+24
 624 0078 1360     		str	r3, [r2]
 625 007a 69E0     		b	.L30
 626              	.L34:
 627              	.LVL84:
 136:dcmotor.c     ****             }else{
 137:dcmotor.c     ****                 temp = M1_BD;
 138:dcmotor.c     ****                 M1_BD = M2_FD;
 628              		.loc 1 138 0
 629 007c 4849     		ldr	r1, .L44+24
 630 007e 0B60     		str	r3, [r1]
 139:dcmotor.c     ****                 M2_FD = temp;
 631              		.loc 1 139 0
 632 0080 454B     		ldr	r3, .L44+16
 633 0082 1A60     		str	r2, [r3]
 634 0084 64E0     		b	.L30
 635              	.LVL85:
 636              	.L33:
 140:dcmotor.c     ****             }
 141:dcmotor.c     ****         }else if (turningRightFlag == TRUE){
 637              		.loc 1 141 0
 638 0086 494B     		ldr	r3, .L44+36
 639 0088 B3F90030 		ldrsh	r3, [r3]
 640 008c 012B     		cmp	r3, #1
 641 008e 5FD1     		bne	.L30
 142:dcmotor.c     ****             if (M1_FD == M2_BD){
 642              		.loc 1 142 0
 643 0090 404B     		ldr	r3, .L44+12
 644 0092 1A68     		ldr	r2, [r3]
 645 0094 434B     		ldr	r3, .L44+28
 646 0096 1B68     		ldr	r3, [r3]
 647 0098 9A42     		cmp	r2, r3
 648 009a 03D1     		bne	.L35
 143:dcmotor.c     ****                 M1_FD = M2_BD - 1;
 649              		.loc 1 143 0
 650 009c 013B     		subs	r3, r3, #1
 651 009e 3D4A     		ldr	r2, .L44+12
 652 00a0 1360     		str	r3, [r2]
 653 00a2 55E0     		b	.L30
 654              	.L35:
 655              	.LVL86:
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccL77S3Y.s 			page 15


 144:dcmotor.c     ****             }else{
 145:dcmotor.c     ****                 temp = M1_FD;
 146:dcmotor.c     ****                 M1_FD = M2_BD;
 656              		.loc 1 146 0
 657 00a4 3B49     		ldr	r1, .L44+12
 658 00a6 0B60     		str	r3, [r1]
 147:dcmotor.c     ****                 M2_BD = temp;
 659              		.loc 1 147 0
 660 00a8 3E4B     		ldr	r3, .L44+28
 661 00aa 1A60     		str	r2, [r3]
 662 00ac 50E0     		b	.L30
 663              	.LVL87:
 664              	.L27:
 148:dcmotor.c     ****             }
 149:dcmotor.c     ****         }
 150:dcmotor.c     ****     }else if (motor2EncoderCounts > motor1EncoderCounts){
 665              		.loc 1 150 0
 666 00ae 9A42     		cmp	r2, r3
 667 00b0 4EDA     		bge	.L30
 151:dcmotor.c     ****         if (drivingForwardFlag == TRUE){
 668              		.loc 1 151 0
 669 00b2 374B     		ldr	r3, .L44+8
 670 00b4 B3F90030 		ldrsh	r3, [r3]
 671 00b8 012B     		cmp	r3, #1
 672 00ba 0ED1     		bne	.L36
 152:dcmotor.c     ****             if (M1_FD == M2_FD){
 673              		.loc 1 152 0
 674 00bc 354B     		ldr	r3, .L44+12
 675 00be 1B68     		ldr	r3, [r3]
 676 00c0 354A     		ldr	r2, .L44+16
 677 00c2 1268     		ldr	r2, [r2]
 678 00c4 9342     		cmp	r3, r2
 679 00c6 03D1     		bne	.L37
 153:dcmotor.c     ****                 M2_FD = M1_FD - 1 ;
 680              		.loc 1 153 0
 681 00c8 013B     		subs	r3, r3, #1
 682 00ca 334A     		ldr	r2, .L44+16
 683 00cc 1360     		str	r3, [r2]
 684 00ce 3FE0     		b	.L30
 685              	.L37:
 686              	.LVL88:
 154:dcmotor.c     ****             }else{
 155:dcmotor.c     ****                 temp = M1_FD;
 156:dcmotor.c     ****                 M1_FD = M2_FD;
 687              		.loc 1 156 0
 688 00d0 3049     		ldr	r1, .L44+12
 689 00d2 0A60     		str	r2, [r1]
 157:dcmotor.c     ****                 M2_FD = temp;
 690              		.loc 1 157 0
 691 00d4 304A     		ldr	r2, .L44+16
 692 00d6 1360     		str	r3, [r2]
 693 00d8 3AE0     		b	.L30
 694              	.LVL89:
 695              	.L36:
 158:dcmotor.c     ****             }
 159:dcmotor.c     ****         }
 160:dcmotor.c     ****         else if (drivingBackwardFlag == TRUE){
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccL77S3Y.s 			page 16


 696              		.loc 1 160 0
 697 00da 304B     		ldr	r3, .L44+20
 698 00dc B3F90030 		ldrsh	r3, [r3]
 699 00e0 012B     		cmp	r3, #1
 700 00e2 0ED1     		bne	.L38
 161:dcmotor.c     ****             if (M1_BD == M2_BD){
 701              		.loc 1 161 0
 702 00e4 2E4B     		ldr	r3, .L44+24
 703 00e6 1B68     		ldr	r3, [r3]
 704 00e8 2E4A     		ldr	r2, .L44+28
 705 00ea 1268     		ldr	r2, [r2]
 706 00ec 9342     		cmp	r3, r2
 707 00ee 03D1     		bne	.L39
 162:dcmotor.c     ****                 M2_BD = M1_BD - 1;
 708              		.loc 1 162 0
 709 00f0 013B     		subs	r3, r3, #1
 710 00f2 2C4A     		ldr	r2, .L44+28
 711 00f4 1360     		str	r3, [r2]
 712 00f6 2BE0     		b	.L30
 713              	.L39:
 714              	.LVL90:
 163:dcmotor.c     ****             }else{
 164:dcmotor.c     ****                 temp = M1_BD;
 165:dcmotor.c     ****                 M1_BD = M2_BD;
 715              		.loc 1 165 0
 716 00f8 2949     		ldr	r1, .L44+24
 717 00fa 0A60     		str	r2, [r1]
 166:dcmotor.c     ****                 M2_BD = temp;
 718              		.loc 1 166 0
 719 00fc 294A     		ldr	r2, .L44+28
 720 00fe 1360     		str	r3, [r2]
 721 0100 26E0     		b	.L30
 722              	.LVL91:
 723              	.L38:
 167:dcmotor.c     ****             }
 168:dcmotor.c     ****         }else if (turningLeftFlag == TRUE){
 724              		.loc 1 168 0
 725 0102 294B     		ldr	r3, .L44+32
 726 0104 B3F90030 		ldrsh	r3, [r3]
 727 0108 012B     		cmp	r3, #1
 728 010a 0ED1     		bne	.L40
 169:dcmotor.c     ****             if (M1_BD == M2_FD){
 729              		.loc 1 169 0
 730 010c 244B     		ldr	r3, .L44+24
 731 010e 1A68     		ldr	r2, [r3]
 732 0110 214B     		ldr	r3, .L44+16
 733 0112 1B68     		ldr	r3, [r3]
 734 0114 9A42     		cmp	r2, r3
 735 0116 03D1     		bne	.L41
 170:dcmotor.c     ****                 M1_BD = M2_FD - 1;
 736              		.loc 1 170 0
 737 0118 013B     		subs	r3, r3, #1
 738 011a 214A     		ldr	r2, .L44+24
 739 011c 1360     		str	r3, [r2]
 740 011e 17E0     		b	.L30
 741              	.L41:
 742              	.LVL92:
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccL77S3Y.s 			page 17


 171:dcmotor.c     ****             }else{
 172:dcmotor.c     ****                 temp = M1_BD;
 173:dcmotor.c     ****                 M1_BD = M2_FD;
 743              		.loc 1 173 0
 744 0120 1F49     		ldr	r1, .L44+24
 745 0122 0B60     		str	r3, [r1]
 174:dcmotor.c     ****                 M2_FD = temp;
 746              		.loc 1 174 0
 747 0124 1C4B     		ldr	r3, .L44+16
 748 0126 1A60     		str	r2, [r3]
 749 0128 12E0     		b	.L30
 750              	.LVL93:
 751              	.L40:
 175:dcmotor.c     ****             }
 176:dcmotor.c     ****         }else if (turningRightFlag == TRUE){
 752              		.loc 1 176 0
 753 012a 204B     		ldr	r3, .L44+36
 754 012c B3F90030 		ldrsh	r3, [r3]
 755 0130 012B     		cmp	r3, #1
 756 0132 0DD1     		bne	.L30
 177:dcmotor.c     ****             if (M1_FD == M2_BD){
 757              		.loc 1 177 0
 758 0134 174B     		ldr	r3, .L44+12
 759 0136 1A68     		ldr	r2, [r3]
 760 0138 1A4B     		ldr	r3, .L44+28
 761 013a 1B68     		ldr	r3, [r3]
 762 013c 9A42     		cmp	r2, r3
 763 013e 03D1     		bne	.L42
 178:dcmotor.c     ****                 M1_FD = M2_BD - 1;
 764              		.loc 1 178 0
 765 0140 013B     		subs	r3, r3, #1
 766 0142 144A     		ldr	r2, .L44+12
 767 0144 1360     		str	r3, [r2]
 768 0146 03E0     		b	.L30
 769              	.L42:
 770              	.LVL94:
 179:dcmotor.c     ****             }else{
 180:dcmotor.c     ****                 temp = M1_FD;
 181:dcmotor.c     ****                 M1_FD = M2_BD;
 771              		.loc 1 181 0
 772 0148 1249     		ldr	r1, .L44+12
 773 014a 0B60     		str	r3, [r1]
 182:dcmotor.c     ****                 M2_BD = temp;
 774              		.loc 1 182 0
 775 014c 154B     		ldr	r3, .L44+28
 776 014e 1A60     		str	r2, [r3]
 777              	.LVL95:
 778              	.L30:
 183:dcmotor.c     ****             }
 184:dcmotor.c     ****         }
 185:dcmotor.c     ****     }
 186:dcmotor.c     ****     motorDutyCycleUpdate(M1_FD,M1_BD,M2_FD,M2_BD);
 779              		.loc 1 186 0
 780 0150 144B     		ldr	r3, .L44+28
 781 0152 1868     		ldr	r0, [r3]
 782 0154 FFF7FEFF 		bl	__aeabi_i2f
 783              	.LVL96:
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccL77S3Y.s 			page 18


 784 0158 0646     		mov	r6, r0
 785 015a 0F4B     		ldr	r3, .L44+16
 786 015c 1868     		ldr	r0, [r3]
 787 015e FFF7FEFF 		bl	__aeabi_i2f
 788              	.LVL97:
 789 0162 0546     		mov	r5, r0
 790 0164 0E4B     		ldr	r3, .L44+24
 791 0166 1868     		ldr	r0, [r3]
 792 0168 FFF7FEFF 		bl	__aeabi_i2f
 793              	.LVL98:
 794 016c 0446     		mov	r4, r0
 795 016e 094B     		ldr	r3, .L44+12
 796 0170 1868     		ldr	r0, [r3]
 797 0172 FFF7FEFF 		bl	__aeabi_i2f
 798              	.LVL99:
 799 0176 3346     		mov	r3, r6
 800 0178 2A46     		mov	r2, r5
 801 017a 2146     		mov	r1, r4
 802 017c FFF7FEFF 		bl	motorDutyCycleUpdate
 803              	.LVL100:
 187:dcmotor.c     ****     Drift_Check_Timer_Start(); 
 804              		.loc 1 187 0
 805 0180 FFF7FEFF 		bl	Drift_Check_Timer_Start
 806              	.LVL101:
 807 0184 70BD     		pop	{r4, r5, r6, pc}
 808              	.L45:
 809 0186 00BF     		.align	2
 810              	.L44:
 811 0188 00000000 		.word	motor1EncoderCounts
 812 018c 00000000 		.word	motor2EncoderCounts
 813 0190 00000000 		.word	drivingForwardFlag
 814 0194 00000000 		.word	M1_FD
 815 0198 00000000 		.word	M2_FD
 816 019c 00000000 		.word	drivingBackwardFlag
 817 01a0 00000000 		.word	M1_BD
 818 01a4 00000000 		.word	M2_BD
 819 01a8 00000000 		.word	turningLeftFlag
 820 01ac 00000000 		.word	turningRightFlag
 821              		.cfi_endproc
 822              	.LFE68:
 823              		.size	driftCorrect, .-driftCorrect
 824              		.section	.text.counterInitialise,"ax",%progbits
 825              		.align	2
 826              		.global	counterInitialise
 827              		.thumb
 828              		.thumb_func
 829              		.type	counterInitialise, %function
 830              	counterInitialise:
 831              	.LFB69:
 188:dcmotor.c     **** }
 189:dcmotor.c     **** 
 190:dcmotor.c     **** //Takes two integers count1 and count2, and sets the counters up so that they will start counting 
 191:dcmotor.c     **** //at zero and interrupt when their counts equal the count values specified
 192:dcmotor.c     **** void counterInitialise(int count1, int count2){
 832              		.loc 1 192 0
 833              		.cfi_startproc
 834              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccL77S3Y.s 			page 19


 835              		@ frame_needed = 0, uses_anonymous_args = 0
 836              	.LVL102:
 837 0000 38B5     		push	{r3, r4, r5, lr}
 838              		.cfi_def_cfa_offset 16
 839              		.cfi_offset 3, -16
 840              		.cfi_offset 4, -12
 841              		.cfi_offset 5, -8
 842              		.cfi_offset 14, -4
 843 0002 0546     		mov	r5, r0
 844 0004 0C46     		mov	r4, r1
 193:dcmotor.c     ****     Motor_1_Encoder_Counts_WriteCounter(0); //Start the counters from 0
 845              		.loc 1 193 0
 846 0006 0020     		movs	r0, #0
 847              	.LVL103:
 848 0008 FFF7FEFF 		bl	Motor_1_Encoder_Counts_WriteCounter
 849              	.LVL104:
 194:dcmotor.c     ****     Motor_2_Encoder_Counts_WriteCounter(0); //Start the counters from 0
 850              		.loc 1 194 0
 851 000c 0020     		movs	r0, #0
 852 000e FFF7FEFF 		bl	Motor_2_Encoder_Counts_WriteCounter
 853              	.LVL105:
 195:dcmotor.c     ****     Motor_1_Encoder_Counts_WritePeriod(count1);
 854              		.loc 1 195 0
 855 0012 A8B2     		uxth	r0, r5
 856 0014 FFF7FEFF 		bl	Motor_1_Encoder_Counts_WritePeriod
 857              	.LVL106:
 196:dcmotor.c     ****     Motor_2_Encoder_Counts_WritePeriod(count2);
 858              		.loc 1 196 0
 859 0018 A0B2     		uxth	r0, r4
 860 001a FFF7FEFF 		bl	Motor_2_Encoder_Counts_WritePeriod
 861              	.LVL107:
 862 001e 38BD     		pop	{r3, r4, r5, pc}
 863              		.cfi_endproc
 864              	.LFE69:
 865              		.size	counterInitialise, .-counterInitialise
 866              		.section	.text.moveForward,"ax",%progbits
 867              		.align	2
 868              		.global	moveForward
 869              		.thumb
 870              		.thumb_func
 871              		.type	moveForward, %function
 872              	moveForward:
 873              	.LFB70:
 197:dcmotor.c     **** }
 198:dcmotor.c     **** 
 199:dcmotor.c     **** //Takes a distance to move in cm and moves. Blocking (sadly)
 200:dcmotor.c     **** void moveForward(float amount){
 874              		.loc 1 200 0
 875              		.cfi_startproc
 876              		@ args = 0, pretend = 0, frame = 0
 877              		@ frame_needed = 0, uses_anonymous_args = 0
 878              	.LVL108:
 879 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 880              		.cfi_def_cfa_offset 24
 881              		.cfi_offset 4, -24
 882              		.cfi_offset 5, -20
 883              		.cfi_offset 6, -16
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccL77S3Y.s 			page 20


 884              		.cfi_offset 7, -12
 885              		.cfi_offset 8, -8
 886              		.cfi_offset 14, -4
 201:dcmotor.c     ****     int counts = amount/CM_PER_COUNT;
 887              		.loc 1 201 0
 888 0004 FFF7FEFF 		bl	__aeabi_f2d
 889              	.LVL109:
 890 0008 23A3     		adr	r3, .L52
 891 000a D3E90023 		ldrd	r2, [r3]
 892 000e FFF7FEFF 		bl	__aeabi_ddiv
 893              	.LVL110:
 894 0012 FFF7FEFF 		bl	__aeabi_d2iz
 895              	.LVL111:
 202:dcmotor.c     ****     motor1Enable = TRUE;
 896              		.loc 1 202 0
 897 0016 0123     		movs	r3, #1
 898 0018 214A     		ldr	r2, .L52+8
 899 001a 1380     		strh	r3, [r2]	@ movhi
 203:dcmotor.c     ****     motor2Enable = TRUE;
 900              		.loc 1 203 0
 901 001c 214A     		ldr	r2, .L52+12
 902 001e 1380     		strh	r3, [r2]	@ movhi
 204:dcmotor.c     ****     drivingForwardFlag = TRUE;
 903              		.loc 1 204 0
 904 0020 214A     		ldr	r2, .L52+16
 905 0022 1380     		strh	r3, [r2]	@ movhi
 205:dcmotor.c     ****     motor1EncoderCounts = 0;
 906              		.loc 1 205 0
 907 0024 0024     		movs	r4, #0
 908 0026 214B     		ldr	r3, .L52+20
 909 0028 1C60     		str	r4, [r3]
 206:dcmotor.c     ****     motor2EncoderCounts = 0;
 910              		.loc 1 206 0
 911 002a 214B     		ldr	r3, .L52+24
 912 002c 1C60     		str	r4, [r3]
 207:dcmotor.c     ****     counterInitialise(counts,counts); //Sets up counters to interrupt at right time
 913              		.loc 1 207 0
 914 002e 0146     		mov	r1, r0
 915 0030 FFF7FEFF 		bl	counterInitialise
 916              	.LVL112:
 208:dcmotor.c     ****     M1_FD = DCMOTOR_IDEAL_DUTY_CYCLE;
 917              		.loc 1 208 0
 918 0034 1F4D     		ldr	r5, .L52+28
 919 0036 5023     		movs	r3, #80
 920 0038 2B60     		str	r3, [r5]
 209:dcmotor.c     ****     M1_BD = 0;
 921              		.loc 1 209 0
 922 003a 1F4E     		ldr	r6, .L52+32
 923 003c 3460     		str	r4, [r6]
 210:dcmotor.c     ****     M2_FD =  DCMOTOR_IDEAL_DUTY_CYCLE;
 924              		.loc 1 210 0
 925 003e 1F4F     		ldr	r7, .L52+36
 926 0040 3B60     		str	r3, [r7]
 211:dcmotor.c     ****     M2_BD = 0;
 927              		.loc 1 211 0
 928 0042 DFF87C80 		ldr	r8, .L52+40
 929 0046 C8F80040 		str	r4, [r8]
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccL77S3Y.s 			page 21


 212:dcmotor.c     ****     Motor_1_Encoder_Counts_Start();
 930              		.loc 1 212 0
 931 004a FFF7FEFF 		bl	Motor_1_Encoder_Counts_Start
 932              	.LVL113:
 213:dcmotor.c     ****     Motor_2_Encoder_Counts_Start();
 933              		.loc 1 213 0
 934 004e FFF7FEFF 		bl	Motor_2_Encoder_Counts_Start
 935              	.LVL114:
 214:dcmotor.c     ****     Drift_Check_Timer_Start();
 936              		.loc 1 214 0
 937 0052 FFF7FEFF 		bl	Drift_Check_Timer_Start
 938              	.LVL115:
 215:dcmotor.c     ****     motorDutyCycleUpdate(M1_FD,M1_BD,M2_FD,M2_BD);//This gets the motors going
 939              		.loc 1 215 0
 940 0056 D8F80000 		ldr	r0, [r8]
 941 005a FFF7FEFF 		bl	__aeabi_i2f
 942              	.LVL116:
 943 005e 8046     		mov	r8, r0
 944 0060 3868     		ldr	r0, [r7]
 945 0062 FFF7FEFF 		bl	__aeabi_i2f
 946              	.LVL117:
 947 0066 0746     		mov	r7, r0
 948 0068 3068     		ldr	r0, [r6]
 949 006a FFF7FEFF 		bl	__aeabi_i2f
 950              	.LVL118:
 951 006e 0446     		mov	r4, r0
 952 0070 2868     		ldr	r0, [r5]
 953 0072 FFF7FEFF 		bl	__aeabi_i2f
 954              	.LVL119:
 955 0076 4346     		mov	r3, r8
 956 0078 3A46     		mov	r2, r7
 957 007a 2146     		mov	r1, r4
 958 007c FFF7FEFF 		bl	motorDutyCycleUpdate
 959              	.LVL120:
 960              	.L49:
 216:dcmotor.c     ****     //The below line just traps execution here until the motion is completed
 217:dcmotor.c     ****     while ((motor1Enable == TRUE)||(motor2Enable == TRUE)){
 961              		.loc 1 217 0 discriminator 3
 962 0080 074B     		ldr	r3, .L52+8
 963 0082 B3F90030 		ldrsh	r3, [r3]
 964 0086 012B     		cmp	r3, #1
 965 0088 FAD0     		beq	.L49
 966              		.loc 1 217 0 is_stmt 0 discriminator 2
 967 008a 064B     		ldr	r3, .L52+12
 968 008c B3F90030 		ldrsh	r3, [r3]
 969 0090 012B     		cmp	r3, #1
 970 0092 F5D0     		beq	.L49
 218:dcmotor.c     ****     
 219:dcmotor.c     ****     }
 220:dcmotor.c     **** }
 971              		.loc 1 220 0 is_stmt 1
 972 0094 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 973              	.L53:
 974              		.align	3
 975              	.L52:
 976 0098 12A5BDC1 		.word	-1044536046
 977 009c 1726933F 		.word	1066608151
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccL77S3Y.s 			page 22


 978 00a0 00000000 		.word	motor1Enable
 979 00a4 00000000 		.word	motor2Enable
 980 00a8 00000000 		.word	drivingForwardFlag
 981 00ac 00000000 		.word	motor1EncoderCounts
 982 00b0 00000000 		.word	motor2EncoderCounts
 983 00b4 00000000 		.word	M1_FD
 984 00b8 00000000 		.word	M1_BD
 985 00bc 00000000 		.word	M2_FD
 986 00c0 00000000 		.word	M2_BD
 987              		.cfi_endproc
 988              	.LFE70:
 989              		.size	moveForward, .-moveForward
 990              		.section	.text.moveForwardIndefinitely,"ax",%progbits
 991              		.align	2
 992              		.global	moveForwardIndefinitely
 993              		.thumb
 994              		.thumb_func
 995              		.type	moveForwardIndefinitely, %function
 996              	moveForwardIndefinitely:
 997              	.LFB71:
 221:dcmotor.c     **** 
 222:dcmotor.c     **** //Non-blocking move function. It will be called and will cause the robot to move forward until 
 223:dcmotor.c     **** //interrupted out by ultrasonics
 224:dcmotor.c     **** void moveForwardIndefinitely(void){
 998              		.loc 1 224 0
 999              		.cfi_startproc
 1000              		@ args = 0, pretend = 0, frame = 0
 1001              		@ frame_needed = 0, uses_anonymous_args = 0
 1002 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1003              		.cfi_def_cfa_offset 24
 1004              		.cfi_offset 4, -24
 1005              		.cfi_offset 5, -20
 1006              		.cfi_offset 6, -16
 1007              		.cfi_offset 7, -12
 1008              		.cfi_offset 8, -8
 1009              		.cfi_offset 14, -4
 1010              	.LVL121:
 225:dcmotor.c     ****     int counts = ENCODER_COUNTS_MAX;
 226:dcmotor.c     ****     motor1Enable = TRUE;
 1011              		.loc 1 226 0
 1012 0004 0123     		movs	r3, #1
 1013 0006 1C4A     		ldr	r2, .L56
 1014 0008 1380     		strh	r3, [r2]	@ movhi
 227:dcmotor.c     ****     motor2Enable = TRUE;
 1015              		.loc 1 227 0
 1016 000a 1C4A     		ldr	r2, .L56+4
 1017 000c 1380     		strh	r3, [r2]	@ movhi
 228:dcmotor.c     ****     drivingForwardFlag = TRUE;
 1018              		.loc 1 228 0
 1019 000e 1C4A     		ldr	r2, .L56+8
 1020 0010 1380     		strh	r3, [r2]	@ movhi
 229:dcmotor.c     ****     motor1EncoderCounts = 0;
 1021              		.loc 1 229 0
 1022 0012 0024     		movs	r4, #0
 1023 0014 1B4B     		ldr	r3, .L56+12
 1024 0016 1C60     		str	r4, [r3]
 230:dcmotor.c     ****     motor2EncoderCounts = 0;
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccL77S3Y.s 			page 23


 1025              		.loc 1 230 0
 1026 0018 1B4B     		ldr	r3, .L56+16
 1027 001a 1C60     		str	r4, [r3]
 231:dcmotor.c     ****     counterInitialise(counts,counts); //Sets up counters to interrupt at right time
 1028              		.loc 1 231 0
 1029 001c 4FF6DC71 		movw	r1, #65500
 1030 0020 0846     		mov	r0, r1
 1031 0022 FFF7FEFF 		bl	counterInitialise
 1032              	.LVL122:
 232:dcmotor.c     ****     M1_FD = DCMOTOR_IDEAL_DUTY_CYCLE;
 1033              		.loc 1 232 0
 1034 0026 194D     		ldr	r5, .L56+20
 1035 0028 5023     		movs	r3, #80
 1036 002a 2B60     		str	r3, [r5]
 233:dcmotor.c     ****     M1_BD = 0;
 1037              		.loc 1 233 0
 1038 002c 184E     		ldr	r6, .L56+24
 1039 002e 3460     		str	r4, [r6]
 234:dcmotor.c     ****     M2_FD =  DCMOTOR_IDEAL_DUTY_CYCLE;
 1040              		.loc 1 234 0
 1041 0030 184F     		ldr	r7, .L56+28
 1042 0032 3B60     		str	r3, [r7]
 235:dcmotor.c     ****     M2_BD = 0;
 1043              		.loc 1 235 0
 1044 0034 DFF86080 		ldr	r8, .L56+32
 1045 0038 C8F80040 		str	r4, [r8]
 236:dcmotor.c     ****     Motor_1_Encoder_Counts_Start();
 1046              		.loc 1 236 0
 1047 003c FFF7FEFF 		bl	Motor_1_Encoder_Counts_Start
 1048              	.LVL123:
 237:dcmotor.c     ****     Motor_2_Encoder_Counts_Start();
 1049              		.loc 1 237 0
 1050 0040 FFF7FEFF 		bl	Motor_2_Encoder_Counts_Start
 1051              	.LVL124:
 238:dcmotor.c     ****     Drift_Check_Timer_Start();
 1052              		.loc 1 238 0
 1053 0044 FFF7FEFF 		bl	Drift_Check_Timer_Start
 1054              	.LVL125:
 239:dcmotor.c     ****     motorDutyCycleUpdate(M1_FD,M1_BD,M2_FD,M2_BD);//This gets the motors going
 1055              		.loc 1 239 0
 1056 0048 D8F80000 		ldr	r0, [r8]
 1057 004c FFF7FEFF 		bl	__aeabi_i2f
 1058              	.LVL126:
 1059 0050 8046     		mov	r8, r0
 1060 0052 3868     		ldr	r0, [r7]
 1061 0054 FFF7FEFF 		bl	__aeabi_i2f
 1062              	.LVL127:
 1063 0058 0746     		mov	r7, r0
 1064 005a 3068     		ldr	r0, [r6]
 1065 005c FFF7FEFF 		bl	__aeabi_i2f
 1066              	.LVL128:
 1067 0060 0446     		mov	r4, r0
 1068 0062 2868     		ldr	r0, [r5]
 1069 0064 FFF7FEFF 		bl	__aeabi_i2f
 1070              	.LVL129:
 1071 0068 4346     		mov	r3, r8
 1072 006a 3A46     		mov	r2, r7
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccL77S3Y.s 			page 24


 1073 006c 2146     		mov	r1, r4
 1074 006e FFF7FEFF 		bl	motorDutyCycleUpdate
 1075              	.LVL130:
 1076 0072 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1077              	.L57:
 1078 0076 00BF     		.align	2
 1079              	.L56:
 1080 0078 00000000 		.word	motor1Enable
 1081 007c 00000000 		.word	motor2Enable
 1082 0080 00000000 		.word	drivingForwardFlag
 1083 0084 00000000 		.word	motor1EncoderCounts
 1084 0088 00000000 		.word	motor2EncoderCounts
 1085 008c 00000000 		.word	M1_FD
 1086 0090 00000000 		.word	M1_BD
 1087 0094 00000000 		.word	M2_FD
 1088 0098 00000000 		.word	M2_BD
 1089              		.cfi_endproc
 1090              	.LFE71:
 1091              		.size	moveForwardIndefinitely, .-moveForwardIndefinitely
 1092              		.section	.text.moveBackward,"ax",%progbits
 1093              		.align	2
 1094              		.global	moveBackward
 1095              		.thumb
 1096              		.thumb_func
 1097              		.type	moveBackward, %function
 1098              	moveBackward:
 1099              	.LFB72:
 240:dcmotor.c     ****     //The below line just traps execution here until the motion is completed
 241:dcmotor.c     **** }
 242:dcmotor.c     **** //Takes a distance to move in cm and moves. Blocking (sadly)
 243:dcmotor.c     **** void moveBackward(float amount){
 1100              		.loc 1 243 0
 1101              		.cfi_startproc
 1102              		@ args = 0, pretend = 0, frame = 0
 1103              		@ frame_needed = 0, uses_anonymous_args = 0
 1104              	.LVL131:
 1105 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1106              		.cfi_def_cfa_offset 24
 1107              		.cfi_offset 4, -24
 1108              		.cfi_offset 5, -20
 1109              		.cfi_offset 6, -16
 1110              		.cfi_offset 7, -12
 1111              		.cfi_offset 8, -8
 1112              		.cfi_offset 14, -4
 244:dcmotor.c     ****     int counts = amount/CM_PER_COUNT;
 1113              		.loc 1 244 0
 1114 0004 FFF7FEFF 		bl	__aeabi_f2d
 1115              	.LVL132:
 1116 0008 23A3     		adr	r3, .L62
 1117 000a D3E90023 		ldrd	r2, [r3]
 1118 000e FFF7FEFF 		bl	__aeabi_ddiv
 1119              	.LVL133:
 1120 0012 FFF7FEFF 		bl	__aeabi_d2iz
 1121              	.LVL134:
 245:dcmotor.c     ****     motor1Enable = TRUE;
 1122              		.loc 1 245 0
 1123 0016 0123     		movs	r3, #1
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccL77S3Y.s 			page 25


 1124 0018 214A     		ldr	r2, .L62+8
 1125 001a 1380     		strh	r3, [r2]	@ movhi
 246:dcmotor.c     ****     motor2Enable = TRUE;
 1126              		.loc 1 246 0
 1127 001c 214A     		ldr	r2, .L62+12
 1128 001e 1380     		strh	r3, [r2]	@ movhi
 247:dcmotor.c     ****     drivingBackwardFlag = TRUE;
 1129              		.loc 1 247 0
 1130 0020 214A     		ldr	r2, .L62+16
 1131 0022 1380     		strh	r3, [r2]	@ movhi
 248:dcmotor.c     ****     motor1EncoderCounts = 0;
 1132              		.loc 1 248 0
 1133 0024 0024     		movs	r4, #0
 1134 0026 214B     		ldr	r3, .L62+20
 1135 0028 1C60     		str	r4, [r3]
 249:dcmotor.c     ****     motor2EncoderCounts = 0;
 1136              		.loc 1 249 0
 1137 002a 214B     		ldr	r3, .L62+24
 1138 002c 1C60     		str	r4, [r3]
 250:dcmotor.c     ****     counterInitialise(counts,counts); //Sets up counters to interrupt at right time
 1139              		.loc 1 250 0
 1140 002e 0146     		mov	r1, r0
 1141 0030 FFF7FEFF 		bl	counterInitialise
 1142              	.LVL135:
 251:dcmotor.c     ****     M1_FD = 0;
 1143              		.loc 1 251 0
 1144 0034 1F4D     		ldr	r5, .L62+28
 1145 0036 2C60     		str	r4, [r5]
 252:dcmotor.c     ****     M1_BD = DCMOTOR_IDEAL_DUTY_CYCLE;
 1146              		.loc 1 252 0
 1147 0038 1F4E     		ldr	r6, .L62+32
 1148 003a 5023     		movs	r3, #80
 1149 003c 3360     		str	r3, [r6]
 253:dcmotor.c     ****     M2_FD =  0;
 1150              		.loc 1 253 0
 1151 003e 1F4F     		ldr	r7, .L62+36
 1152 0040 3C60     		str	r4, [r7]
 254:dcmotor.c     ****     M2_BD = DCMOTOR_IDEAL_DUTY_CYCLE;
 1153              		.loc 1 254 0
 1154 0042 1F4C     		ldr	r4, .L62+40
 1155 0044 2360     		str	r3, [r4]
 255:dcmotor.c     ****     Motor_1_Encoder_Counts_Start();
 1156              		.loc 1 255 0
 1157 0046 FFF7FEFF 		bl	Motor_1_Encoder_Counts_Start
 1158              	.LVL136:
 256:dcmotor.c     ****     Motor_2_Encoder_Counts_Start();
 1159              		.loc 1 256 0
 1160 004a FFF7FEFF 		bl	Motor_2_Encoder_Counts_Start
 1161              	.LVL137:
 257:dcmotor.c     ****     Drift_Check_Timer_Start();
 1162              		.loc 1 257 0
 1163 004e FFF7FEFF 		bl	Drift_Check_Timer_Start
 1164              	.LVL138:
 258:dcmotor.c     ****     motorDutyCycleUpdate(M1_FD,M1_BD,M2_FD,M2_BD);//This gets the motors going
 1165              		.loc 1 258 0
 1166 0052 2068     		ldr	r0, [r4]
 1167 0054 FFF7FEFF 		bl	__aeabi_i2f
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccL77S3Y.s 			page 26


 1168              	.LVL139:
 1169 0058 8046     		mov	r8, r0
 1170 005a 3868     		ldr	r0, [r7]
 1171 005c FFF7FEFF 		bl	__aeabi_i2f
 1172              	.LVL140:
 1173 0060 0746     		mov	r7, r0
 1174 0062 3068     		ldr	r0, [r6]
 1175 0064 FFF7FEFF 		bl	__aeabi_i2f
 1176              	.LVL141:
 1177 0068 0446     		mov	r4, r0
 1178 006a 2868     		ldr	r0, [r5]
 1179 006c FFF7FEFF 		bl	__aeabi_i2f
 1180              	.LVL142:
 1181 0070 4346     		mov	r3, r8
 1182 0072 3A46     		mov	r2, r7
 1183 0074 2146     		mov	r1, r4
 1184 0076 FFF7FEFF 		bl	motorDutyCycleUpdate
 1185              	.LVL143:
 1186              	.L59:
 259:dcmotor.c     ****     //The below line just traps execution here until the motion is completed
 260:dcmotor.c     ****     while ((motor1Enable == TRUE)||(motor2Enable == TRUE)){
 1187              		.loc 1 260 0 discriminator 3
 1188 007a 094B     		ldr	r3, .L62+8
 1189 007c B3F90030 		ldrsh	r3, [r3]
 1190 0080 012B     		cmp	r3, #1
 1191 0082 FAD0     		beq	.L59
 1192              		.loc 1 260 0 is_stmt 0 discriminator 2
 1193 0084 074B     		ldr	r3, .L62+12
 1194 0086 B3F90030 		ldrsh	r3, [r3]
 1195 008a 012B     		cmp	r3, #1
 1196 008c F5D0     		beq	.L59
 261:dcmotor.c     ****     
 262:dcmotor.c     ****     }
 263:dcmotor.c     **** }
 1197              		.loc 1 263 0 is_stmt 1
 1198 008e BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1199              	.L63:
 1200 0092 00BFAFF3 		.align	3
 1200      0080
 1201              	.L62:
 1202 0098 12A5BDC1 		.word	-1044536046
 1203 009c 1726933F 		.word	1066608151
 1204 00a0 00000000 		.word	motor1Enable
 1205 00a4 00000000 		.word	motor2Enable
 1206 00a8 00000000 		.word	drivingBackwardFlag
 1207 00ac 00000000 		.word	motor1EncoderCounts
 1208 00b0 00000000 		.word	motor2EncoderCounts
 1209 00b4 00000000 		.word	M1_FD
 1210 00b8 00000000 		.word	M1_BD
 1211 00bc 00000000 		.word	M2_FD
 1212 00c0 00000000 		.word	M2_BD
 1213              		.cfi_endproc
 1214              	.LFE72:
 1215              		.size	moveBackward, .-moveBackward
 1216              		.section	.text.moveBackwardIndefinitely,"ax",%progbits
 1217              		.align	2
 1218              		.global	moveBackwardIndefinitely
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccL77S3Y.s 			page 27


 1219              		.thumb
 1220              		.thumb_func
 1221              		.type	moveBackwardIndefinitely, %function
 1222              	moveBackwardIndefinitely:
 1223              	.LFB73:
 264:dcmotor.c     **** 
 265:dcmotor.c     **** //Allows the robot to move backward indefinitely until interrupted out by ultrasonics
 266:dcmotor.c     **** void moveBackwardIndefinitely(void){
 1224              		.loc 1 266 0
 1225              		.cfi_startproc
 1226              		@ args = 0, pretend = 0, frame = 0
 1227              		@ frame_needed = 0, uses_anonymous_args = 0
 1228 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1229              		.cfi_def_cfa_offset 24
 1230              		.cfi_offset 4, -24
 1231              		.cfi_offset 5, -20
 1232              		.cfi_offset 6, -16
 1233              		.cfi_offset 7, -12
 1234              		.cfi_offset 8, -8
 1235              		.cfi_offset 14, -4
 1236              	.LVL144:
 267:dcmotor.c     ****     int counts = ENCODER_COUNTS_MAX;
 268:dcmotor.c     ****     motor1Enable = TRUE;
 1237              		.loc 1 268 0
 1238 0004 0123     		movs	r3, #1
 1239 0006 1A4A     		ldr	r2, .L66
 1240 0008 1380     		strh	r3, [r2]	@ movhi
 269:dcmotor.c     ****     motor2Enable = TRUE;
 1241              		.loc 1 269 0
 1242 000a 1A4A     		ldr	r2, .L66+4
 1243 000c 1380     		strh	r3, [r2]	@ movhi
 270:dcmotor.c     ****     drivingBackwardFlag = TRUE;
 1244              		.loc 1 270 0
 1245 000e 1A4A     		ldr	r2, .L66+8
 1246 0010 1380     		strh	r3, [r2]	@ movhi
 271:dcmotor.c     ****     motor1EncoderCounts = 0;
 1247              		.loc 1 271 0
 1248 0012 0024     		movs	r4, #0
 1249 0014 194B     		ldr	r3, .L66+12
 1250 0016 1C60     		str	r4, [r3]
 272:dcmotor.c     ****     motor2EncoderCounts = 0;
 1251              		.loc 1 272 0
 1252 0018 194B     		ldr	r3, .L66+16
 1253 001a 1C60     		str	r4, [r3]
 273:dcmotor.c     ****     counterInitialise(counts,counts); //Sets up counters to interrupt at right time
 1254              		.loc 1 273 0
 1255 001c 4FF6DC71 		movw	r1, #65500
 1256 0020 0846     		mov	r0, r1
 1257 0022 FFF7FEFF 		bl	counterInitialise
 1258              	.LVL145:
 274:dcmotor.c     ****     M1_FD = 0;
 1259              		.loc 1 274 0
 1260 0026 174D     		ldr	r5, .L66+20
 1261 0028 2C60     		str	r4, [r5]
 275:dcmotor.c     ****     M1_BD = DCMOTOR_IDEAL_DUTY_CYCLE;
 1262              		.loc 1 275 0
 1263 002a 174E     		ldr	r6, .L66+24
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccL77S3Y.s 			page 28


 1264 002c 5023     		movs	r3, #80
 1265 002e 3360     		str	r3, [r6]
 276:dcmotor.c     ****     M2_FD =  0;
 1266              		.loc 1 276 0
 1267 0030 164F     		ldr	r7, .L66+28
 1268 0032 3C60     		str	r4, [r7]
 277:dcmotor.c     ****     M2_BD = DCMOTOR_IDEAL_DUTY_CYCLE;
 1269              		.loc 1 277 0
 1270 0034 164C     		ldr	r4, .L66+32
 1271 0036 2360     		str	r3, [r4]
 278:dcmotor.c     ****     Motor_1_Encoder_Counts_Start();
 1272              		.loc 1 278 0
 1273 0038 FFF7FEFF 		bl	Motor_1_Encoder_Counts_Start
 1274              	.LVL146:
 279:dcmotor.c     ****     Motor_2_Encoder_Counts_Start();
 1275              		.loc 1 279 0
 1276 003c FFF7FEFF 		bl	Motor_2_Encoder_Counts_Start
 1277              	.LVL147:
 280:dcmotor.c     ****     Drift_Check_Timer_Start();
 1278              		.loc 1 280 0
 1279 0040 FFF7FEFF 		bl	Drift_Check_Timer_Start
 1280              	.LVL148:
 281:dcmotor.c     ****     motorDutyCycleUpdate(M1_FD,M1_BD,M2_FD,M2_BD);//This gets the motors going
 1281              		.loc 1 281 0
 1282 0044 2068     		ldr	r0, [r4]
 1283 0046 FFF7FEFF 		bl	__aeabi_i2f
 1284              	.LVL149:
 1285 004a 8046     		mov	r8, r0
 1286 004c 3868     		ldr	r0, [r7]
 1287 004e FFF7FEFF 		bl	__aeabi_i2f
 1288              	.LVL150:
 1289 0052 0746     		mov	r7, r0
 1290 0054 3068     		ldr	r0, [r6]
 1291 0056 FFF7FEFF 		bl	__aeabi_i2f
 1292              	.LVL151:
 1293 005a 0446     		mov	r4, r0
 1294 005c 2868     		ldr	r0, [r5]
 1295 005e FFF7FEFF 		bl	__aeabi_i2f
 1296              	.LVL152:
 1297 0062 4346     		mov	r3, r8
 1298 0064 3A46     		mov	r2, r7
 1299 0066 2146     		mov	r1, r4
 1300 0068 FFF7FEFF 		bl	motorDutyCycleUpdate
 1301              	.LVL153:
 1302 006c BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1303              	.L67:
 1304              		.align	2
 1305              	.L66:
 1306 0070 00000000 		.word	motor1Enable
 1307 0074 00000000 		.word	motor2Enable
 1308 0078 00000000 		.word	drivingBackwardFlag
 1309 007c 00000000 		.word	motor1EncoderCounts
 1310 0080 00000000 		.word	motor2EncoderCounts
 1311 0084 00000000 		.word	M1_FD
 1312 0088 00000000 		.word	M1_BD
 1313 008c 00000000 		.word	M2_FD
 1314 0090 00000000 		.word	M2_BD
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccL77S3Y.s 			page 29


 1315              		.cfi_endproc
 1316              	.LFE73:
 1317              		.size	moveBackwardIndefinitely, .-moveBackwardIndefinitely
 1318              		.section	.text.turnLeft,"ax",%progbits
 1319              		.align	2
 1320              		.global	turnLeft
 1321              		.thumb
 1322              		.thumb_func
 1323              		.type	turnLeft, %function
 1324              	turnLeft:
 1325              	.LFB74:
 282:dcmotor.c     **** }
 283:dcmotor.c     **** 
 284:dcmotor.c     **** //Takes an angle to turn in degrees and turns left that much
 285:dcmotor.c     **** void turnLeft(float amount){
 1326              		.loc 1 285 0
 1327              		.cfi_startproc
 1328              		@ args = 0, pretend = 0, frame = 0
 1329              		@ frame_needed = 0, uses_anonymous_args = 0
 1330              	.LVL154:
 1331 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1332              		.cfi_def_cfa_offset 24
 1333              		.cfi_offset 4, -24
 1334              		.cfi_offset 5, -20
 1335              		.cfi_offset 6, -16
 1336              		.cfi_offset 7, -12
 1337              		.cfi_offset 8, -8
 1338              		.cfi_offset 14, -4
 286:dcmotor.c     ****     //We need to make sure that the timers are disabled when we are doing turning motions
 287:dcmotor.c     ****     //Otherwise they will try and correct the turning
 288:dcmotor.c     ****     int counts = round(amount/DEGREES_PER_COUNT);
 1339              		.loc 1 288 0
 1340 0004 FFF7FEFF 		bl	__aeabi_f2d
 1341              	.LVL155:
 1342 0008 25A3     		adr	r3, .L72
 1343 000a D3E90023 		ldrd	r2, [r3]
 1344 000e FFF7FEFF 		bl	__aeabi_ddiv
 1345              	.LVL156:
 1346 0012 FFF7FEFF 		bl	round
 1347              	.LVL157:
 1348 0016 FFF7FEFF 		bl	__aeabi_d2iz
 1349              	.LVL158:
 289:dcmotor.c     ****     motor1Enable = TRUE;
 1350              		.loc 1 289 0
 1351 001a 0123     		movs	r3, #1
 1352 001c 224A     		ldr	r2, .L72+8
 1353 001e 1380     		strh	r3, [r2]	@ movhi
 290:dcmotor.c     ****     motor2Enable = TRUE;
 1354              		.loc 1 290 0
 1355 0020 224A     		ldr	r2, .L72+12
 1356 0022 1380     		strh	r3, [r2]	@ movhi
 291:dcmotor.c     ****     turningLeftFlag = TRUE;
 1357              		.loc 1 291 0
 1358 0024 224A     		ldr	r2, .L72+16
 1359 0026 1380     		strh	r3, [r2]	@ movhi
 292:dcmotor.c     ****     motor1EncoderCounts = 0;
 1360              		.loc 1 292 0
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccL77S3Y.s 			page 30


 1361 0028 0024     		movs	r4, #0
 1362 002a 224B     		ldr	r3, .L72+20
 1363 002c 1C60     		str	r4, [r3]
 293:dcmotor.c     ****     motor2EncoderCounts = 0;
 1364              		.loc 1 293 0
 1365 002e 224B     		ldr	r3, .L72+24
 1366 0030 1C60     		str	r4, [r3]
 294:dcmotor.c     ****     counterInitialise(counts,counts); //Sets up counters to interrupt at right time
 1367              		.loc 1 294 0
 1368 0032 0146     		mov	r1, r0
 1369 0034 FFF7FEFF 		bl	counterInitialise
 1370              	.LVL159:
 295:dcmotor.c     ****     M1_FD = 0;
 1371              		.loc 1 295 0
 1372 0038 204D     		ldr	r5, .L72+28
 1373 003a 2C60     		str	r4, [r5]
 296:dcmotor.c     ****     M1_BD = DCMOTOR_IDEAL_DUTY_CYCLE;
 1374              		.loc 1 296 0
 1375 003c 204E     		ldr	r6, .L72+32
 1376 003e 5023     		movs	r3, #80
 1377 0040 3360     		str	r3, [r6]
 297:dcmotor.c     ****     M2_FD = DCMOTOR_IDEAL_DUTY_CYCLE;
 1378              		.loc 1 297 0
 1379 0042 204F     		ldr	r7, .L72+36
 1380 0044 3B60     		str	r3, [r7]
 298:dcmotor.c     ****     M2_BD = 0;
 1381              		.loc 1 298 0
 1382 0046 DFF88080 		ldr	r8, .L72+40
 1383 004a C8F80040 		str	r4, [r8]
 299:dcmotor.c     ****     Motor_1_Encoder_Counts_Start();
 1384              		.loc 1 299 0
 1385 004e FFF7FEFF 		bl	Motor_1_Encoder_Counts_Start
 1386              	.LVL160:
 300:dcmotor.c     ****     Motor_2_Encoder_Counts_Start();
 1387              		.loc 1 300 0
 1388 0052 FFF7FEFF 		bl	Motor_2_Encoder_Counts_Start
 1389              	.LVL161:
 301:dcmotor.c     ****     Drift_Check_Timer_Start();
 1390              		.loc 1 301 0
 1391 0056 FFF7FEFF 		bl	Drift_Check_Timer_Start
 1392              	.LVL162:
 302:dcmotor.c     ****     motorDutyCycleUpdate(M1_FD,M1_BD,M2_FD,M2_BD);//This gets the motors going
 1393              		.loc 1 302 0
 1394 005a D8F80000 		ldr	r0, [r8]
 1395 005e FFF7FEFF 		bl	__aeabi_i2f
 1396              	.LVL163:
 1397 0062 8046     		mov	r8, r0
 1398 0064 3868     		ldr	r0, [r7]
 1399 0066 FFF7FEFF 		bl	__aeabi_i2f
 1400              	.LVL164:
 1401 006a 0746     		mov	r7, r0
 1402 006c 3068     		ldr	r0, [r6]
 1403 006e FFF7FEFF 		bl	__aeabi_i2f
 1404              	.LVL165:
 1405 0072 0446     		mov	r4, r0
 1406 0074 2868     		ldr	r0, [r5]
 1407 0076 FFF7FEFF 		bl	__aeabi_i2f
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccL77S3Y.s 			page 31


 1408              	.LVL166:
 1409 007a 4346     		mov	r3, r8
 1410 007c 3A46     		mov	r2, r7
 1411 007e 2146     		mov	r1, r4
 1412 0080 FFF7FEFF 		bl	motorDutyCycleUpdate
 1413              	.LVL167:
 1414              	.L69:
 303:dcmotor.c     ****     //The below line just traps execution here until the motion is completed
 304:dcmotor.c     ****     while ((motor1Enable == TRUE)||(motor2Enable == TRUE)){
 1415              		.loc 1 304 0 discriminator 3
 1416 0084 084B     		ldr	r3, .L72+8
 1417 0086 B3F90030 		ldrsh	r3, [r3]
 1418 008a 012B     		cmp	r3, #1
 1419 008c FAD0     		beq	.L69
 1420              		.loc 1 304 0 is_stmt 0 discriminator 2
 1421 008e 074B     		ldr	r3, .L72+12
 1422 0090 B3F90030 		ldrsh	r3, [r3]
 1423 0094 012B     		cmp	r3, #1
 1424 0096 F5D0     		beq	.L69
 305:dcmotor.c     ****     
 306:dcmotor.c     ****     }
 307:dcmotor.c     **** }
 1425              		.loc 1 307 0 is_stmt 1
 1426 0098 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1427              	.L73:
 1428 009c AFF30080 		.align	3
 1429              	.L72:
 1430 00a0 E17A14AE 		.word	-1374389535
 1431 00a4 47E1BA3F 		.word	1069211975
 1432 00a8 00000000 		.word	motor1Enable
 1433 00ac 00000000 		.word	motor2Enable
 1434 00b0 00000000 		.word	turningLeftFlag
 1435 00b4 00000000 		.word	motor1EncoderCounts
 1436 00b8 00000000 		.word	motor2EncoderCounts
 1437 00bc 00000000 		.word	M1_FD
 1438 00c0 00000000 		.word	M1_BD
 1439 00c4 00000000 		.word	M2_FD
 1440 00c8 00000000 		.word	M2_BD
 1441              		.cfi_endproc
 1442              	.LFE74:
 1443              		.size	turnLeft, .-turnLeft
 1444              		.section	.text.turnRight,"ax",%progbits
 1445              		.align	2
 1446              		.global	turnRight
 1447              		.thumb
 1448              		.thumb_func
 1449              		.type	turnRight, %function
 1450              	turnRight:
 1451              	.LFB75:
 308:dcmotor.c     **** 
 309:dcmotor.c     **** void turnRight(float amount){
 1452              		.loc 1 309 0
 1453              		.cfi_startproc
 1454              		@ args = 0, pretend = 0, frame = 0
 1455              		@ frame_needed = 0, uses_anonymous_args = 0
 1456              	.LVL168:
 1457 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccL77S3Y.s 			page 32


 1458              		.cfi_def_cfa_offset 24
 1459              		.cfi_offset 4, -24
 1460              		.cfi_offset 5, -20
 1461              		.cfi_offset 6, -16
 1462              		.cfi_offset 7, -12
 1463              		.cfi_offset 8, -8
 1464              		.cfi_offset 14, -4
 310:dcmotor.c     ****     int counts = round(amount/DEGREES_PER_COUNT);
 1465              		.loc 1 310 0
 1466 0004 FFF7FEFF 		bl	__aeabi_f2d
 1467              	.LVL169:
 1468 0008 23A3     		adr	r3, .L78
 1469 000a D3E90023 		ldrd	r2, [r3]
 1470 000e FFF7FEFF 		bl	__aeabi_ddiv
 1471              	.LVL170:
 1472 0012 FFF7FEFF 		bl	round
 1473              	.LVL171:
 1474 0016 FFF7FEFF 		bl	__aeabi_d2iz
 1475              	.LVL172:
 311:dcmotor.c     ****     motor1Enable = TRUE;
 1476              		.loc 1 311 0
 1477 001a 0123     		movs	r3, #1
 1478 001c 204A     		ldr	r2, .L78+8
 1479 001e 1380     		strh	r3, [r2]	@ movhi
 312:dcmotor.c     ****     motor2Enable = TRUE;
 1480              		.loc 1 312 0
 1481 0020 204A     		ldr	r2, .L78+12
 1482 0022 1380     		strh	r3, [r2]	@ movhi
 313:dcmotor.c     ****     turningRightFlag = TRUE;
 1483              		.loc 1 313 0
 1484 0024 204A     		ldr	r2, .L78+16
 1485 0026 1380     		strh	r3, [r2]	@ movhi
 314:dcmotor.c     ****     motor1EncoderCounts = 0;
 1486              		.loc 1 314 0
 1487 0028 0024     		movs	r4, #0
 1488 002a 204B     		ldr	r3, .L78+20
 1489 002c 1C60     		str	r4, [r3]
 315:dcmotor.c     ****     motor2EncoderCounts = 0;
 1490              		.loc 1 315 0
 1491 002e 204B     		ldr	r3, .L78+24
 1492 0030 1C60     		str	r4, [r3]
 316:dcmotor.c     ****     counterInitialise(counts,counts); //Sets up counters to interrupt at right time
 1493              		.loc 1 316 0
 1494 0032 0146     		mov	r1, r0
 1495 0034 FFF7FEFF 		bl	counterInitialise
 1496              	.LVL173:
 317:dcmotor.c     ****     M1_FD = DCMOTOR_IDEAL_DUTY_CYCLE;
 1497              		.loc 1 317 0
 1498 0038 1E4D     		ldr	r5, .L78+28
 1499 003a 5023     		movs	r3, #80
 1500 003c 2B60     		str	r3, [r5]
 318:dcmotor.c     ****     M1_BD = 0;
 1501              		.loc 1 318 0
 1502 003e 1E4E     		ldr	r6, .L78+32
 1503 0040 3460     		str	r4, [r6]
 319:dcmotor.c     ****     M2_FD = 0;
 1504              		.loc 1 319 0
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccL77S3Y.s 			page 33


 1505 0042 1E4F     		ldr	r7, .L78+36
 1506 0044 3C60     		str	r4, [r7]
 320:dcmotor.c     ****     M2_BD = DCMOTOR_IDEAL_DUTY_CYCLE;
 1507              		.loc 1 320 0
 1508 0046 1E4C     		ldr	r4, .L78+40
 1509 0048 2360     		str	r3, [r4]
 321:dcmotor.c     ****     Motor_1_Encoder_Counts_Start();
 1510              		.loc 1 321 0
 1511 004a FFF7FEFF 		bl	Motor_1_Encoder_Counts_Start
 1512              	.LVL174:
 322:dcmotor.c     ****     Motor_2_Encoder_Counts_Start();
 1513              		.loc 1 322 0
 1514 004e FFF7FEFF 		bl	Motor_2_Encoder_Counts_Start
 1515              	.LVL175:
 323:dcmotor.c     ****     Drift_Check_Timer_Start();
 1516              		.loc 1 323 0
 1517 0052 FFF7FEFF 		bl	Drift_Check_Timer_Start
 1518              	.LVL176:
 324:dcmotor.c     ****     motorDutyCycleUpdate(M1_FD,M1_BD,M2_FD,M2_BD);//This gets the motors going
 1519              		.loc 1 324 0
 1520 0056 2068     		ldr	r0, [r4]
 1521 0058 FFF7FEFF 		bl	__aeabi_i2f
 1522              	.LVL177:
 1523 005c 8046     		mov	r8, r0
 1524 005e 3868     		ldr	r0, [r7]
 1525 0060 FFF7FEFF 		bl	__aeabi_i2f
 1526              	.LVL178:
 1527 0064 0746     		mov	r7, r0
 1528 0066 3068     		ldr	r0, [r6]
 1529 0068 FFF7FEFF 		bl	__aeabi_i2f
 1530              	.LVL179:
 1531 006c 0446     		mov	r4, r0
 1532 006e 2868     		ldr	r0, [r5]
 1533 0070 FFF7FEFF 		bl	__aeabi_i2f
 1534              	.LVL180:
 1535 0074 4346     		mov	r3, r8
 1536 0076 3A46     		mov	r2, r7
 1537 0078 2146     		mov	r1, r4
 1538 007a FFF7FEFF 		bl	motorDutyCycleUpdate
 1539              	.LVL181:
 1540              	.L75:
 325:dcmotor.c     ****     //The below line just traps execution here until the motion is completed
 326:dcmotor.c     ****     while ((motor1Enable == TRUE)||(motor2Enable == TRUE)){
 1541              		.loc 1 326 0 discriminator 3
 1542 007e 084B     		ldr	r3, .L78+8
 1543 0080 B3F90030 		ldrsh	r3, [r3]
 1544 0084 012B     		cmp	r3, #1
 1545 0086 FAD0     		beq	.L75
 1546              		.loc 1 326 0 is_stmt 0 discriminator 2
 1547 0088 064B     		ldr	r3, .L78+12
 1548 008a B3F90030 		ldrsh	r3, [r3]
 1549 008e 012B     		cmp	r3, #1
 1550 0090 F5D0     		beq	.L75
 327:dcmotor.c     ****     
 328:dcmotor.c     ****     }
 329:dcmotor.c     **** }
 1551              		.loc 1 329 0 is_stmt 1
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccL77S3Y.s 			page 34


 1552 0092 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1553              	.L79:
 1554 0096 00BF     		.align	3
 1555              	.L78:
 1556 0098 E17A14AE 		.word	-1374389535
 1557 009c 47E1BA3F 		.word	1069211975
 1558 00a0 00000000 		.word	motor1Enable
 1559 00a4 00000000 		.word	motor2Enable
 1560 00a8 00000000 		.word	turningRightFlag
 1561 00ac 00000000 		.word	motor1EncoderCounts
 1562 00b0 00000000 		.word	motor2EncoderCounts
 1563 00b4 00000000 		.word	M1_FD
 1564 00b8 00000000 		.word	M1_BD
 1565 00bc 00000000 		.word	M2_FD
 1566 00c0 00000000 		.word	M2_BD
 1567              		.cfi_endproc
 1568              	.LFE75:
 1569              		.size	turnRight, .-turnRight
 1570              		.section	.text.displaceLeft,"ax",%progbits
 1571              		.align	2
 1572              		.global	displaceLeft
 1573              		.thumb
 1574              		.thumb_func
 1575              		.type	displaceLeft, %function
 1576              	displaceLeft:
 1577              	.LFB76:
 330:dcmotor.c     **** 
 331:dcmotor.c     **** //The displaceLeft and displaceRight functions should let us slide left and right. 
 332:dcmotor.c     **** //We should ensure that these are only called when we are not close enough to the walls
 333:dcmotor.c     **** //to create issues otherwise we could get stuck in these functions permanently
 334:dcmotor.c     **** void displaceLeft(int amount,int degrees){
 1578              		.loc 1 334 0
 1579              		.cfi_startproc
 1580              		@ args = 0, pretend = 0, frame = 0
 1581              		@ frame_needed = 0, uses_anonymous_args = 0
 1582              	.LVL182:
 1583 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1584              		.cfi_def_cfa_offset 24
 1585              		.cfi_offset 4, -24
 1586              		.cfi_offset 5, -20
 1587              		.cfi_offset 6, -16
 1588              		.cfi_offset 7, -12
 1589              		.cfi_offset 8, -8
 1590              		.cfi_offset 14, -4
 1591 0004 0446     		mov	r4, r0
 1592 0006 0E46     		mov	r6, r1
 335:dcmotor.c     ****     turnRight(degrees);
 1593              		.loc 1 335 0
 1594 0008 0846     		mov	r0, r1
 1595              	.LVL183:
 1596 000a FFF7FEFF 		bl	__aeabi_i2f
 1597              	.LVL184:
 1598 000e 8046     		mov	r8, r0
 1599 0010 FFF7FEFF 		bl	turnRight
 1600              	.LVL185:
 336:dcmotor.c     ****     float temp = amount/sin((M_PI/180)*degrees);
 1601              		.loc 1 336 0
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccL77S3Y.s 			page 35


 1602 0014 2046     		mov	r0, r4
 1603 0016 FFF7FEFF 		bl	__aeabi_i2d
 1604              	.LVL186:
 1605 001a 0446     		mov	r4, r0
 1606              	.LVL187:
 1607 001c 0D46     		mov	r5, r1
 1608 001e 3046     		mov	r0, r6
 1609 0020 FFF7FEFF 		bl	__aeabi_i2d
 1610              	.LVL188:
 1611 0024 12A3     		adr	r3, .L82
 1612 0026 D3E90023 		ldrd	r2, [r3]
 1613 002a FFF7FEFF 		bl	__aeabi_dmul
 1614              	.LVL189:
 1615 002e 0646     		mov	r6, r0
 1616              	.LVL190:
 1617 0030 0F46     		mov	r7, r1
 1618 0032 FFF7FEFF 		bl	sin
 1619              	.LVL191:
 1620 0036 0246     		mov	r2, r0
 1621 0038 0B46     		mov	r3, r1
 1622 003a 2046     		mov	r0, r4
 1623 003c 2946     		mov	r1, r5
 1624 003e FFF7FEFF 		bl	__aeabi_ddiv
 1625              	.LVL192:
 337:dcmotor.c     ****     moveBackward(amount/sin((M_PI/180)*degrees));
 1626              		.loc 1 337 0
 1627 0042 FFF7FEFF 		bl	__aeabi_d2f
 1628              	.LVL193:
 1629 0046 FFF7FEFF 		bl	moveBackward
 1630              	.LVL194:
 338:dcmotor.c     ****     turnLeft(degrees);
 1631              		.loc 1 338 0
 1632 004a 4046     		mov	r0, r8
 1633 004c FFF7FEFF 		bl	turnLeft
 1634              	.LVL195:
 339:dcmotor.c     ****     temp = amount/tan((M_PI/180)*degrees);
 1635              		.loc 1 339 0
 1636 0050 3046     		mov	r0, r6
 1637 0052 3946     		mov	r1, r7
 1638 0054 FFF7FEFF 		bl	tan
 1639              	.LVL196:
 1640 0058 0246     		mov	r2, r0
 1641 005a 0B46     		mov	r3, r1
 1642 005c 2046     		mov	r0, r4
 1643 005e 2946     		mov	r1, r5
 1644 0060 FFF7FEFF 		bl	__aeabi_ddiv
 1645              	.LVL197:
 340:dcmotor.c     ****     moveForward(amount/tan((M_PI/180)*degrees));
 1646              		.loc 1 340 0
 1647 0064 FFF7FEFF 		bl	__aeabi_d2f
 1648              	.LVL198:
 1649 0068 FFF7FEFF 		bl	moveForward
 1650              	.LVL199:
 1651 006c BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1652              	.L83:
 1653              		.align	3
 1654              	.L82:
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccL77S3Y.s 			page 36


 1655 0070 399D52A2 		.word	-1571644103
 1656 0074 46DF913F 		.word	1066524486
 1657              		.cfi_endproc
 1658              	.LFE76:
 1659              		.size	displaceLeft, .-displaceLeft
 1660              		.section	.text.displaceRight,"ax",%progbits
 1661              		.align	2
 1662              		.global	displaceRight
 1663              		.thumb
 1664              		.thumb_func
 1665              		.type	displaceRight, %function
 1666              	displaceRight:
 1667              	.LFB77:
 341:dcmotor.c     **** }
 342:dcmotor.c     **** 
 343:dcmotor.c     **** //The displaceLeft and displaceRight functions should let us slide left and right. 
 344:dcmotor.c     **** //We should ensure that these are only called when we are not close enough to the walls
 345:dcmotor.c     **** //to create issues otherwise we could get stuck in these functions permanently
 346:dcmotor.c     **** void displaceRight(int amount,int degrees){
 1668              		.loc 1 346 0
 1669              		.cfi_startproc
 1670              		@ args = 0, pretend = 0, frame = 0
 1671              		@ frame_needed = 0, uses_anonymous_args = 0
 1672              	.LVL200:
 1673 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1674              		.cfi_def_cfa_offset 24
 1675              		.cfi_offset 4, -24
 1676              		.cfi_offset 5, -20
 1677              		.cfi_offset 6, -16
 1678              		.cfi_offset 7, -12
 1679              		.cfi_offset 8, -8
 1680              		.cfi_offset 14, -4
 1681 0004 0446     		mov	r4, r0
 1682 0006 0E46     		mov	r6, r1
 347:dcmotor.c     ****     turnLeft(degrees);
 1683              		.loc 1 347 0
 1684 0008 0846     		mov	r0, r1
 1685              	.LVL201:
 1686 000a FFF7FEFF 		bl	__aeabi_i2f
 1687              	.LVL202:
 1688 000e 8046     		mov	r8, r0
 1689 0010 FFF7FEFF 		bl	turnLeft
 1690              	.LVL203:
 348:dcmotor.c     ****     float temp = amount/sin((M_PI/180)*degrees);
 1691              		.loc 1 348 0
 1692 0014 2046     		mov	r0, r4
 1693 0016 FFF7FEFF 		bl	__aeabi_i2d
 1694              	.LVL204:
 1695 001a 0446     		mov	r4, r0
 1696              	.LVL205:
 1697 001c 0D46     		mov	r5, r1
 1698 001e 3046     		mov	r0, r6
 1699 0020 FFF7FEFF 		bl	__aeabi_i2d
 1700              	.LVL206:
 1701 0024 12A3     		adr	r3, .L86
 1702 0026 D3E90023 		ldrd	r2, [r3]
 1703 002a FFF7FEFF 		bl	__aeabi_dmul
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccL77S3Y.s 			page 37


 1704              	.LVL207:
 1705 002e 0646     		mov	r6, r0
 1706              	.LVL208:
 1707 0030 0F46     		mov	r7, r1
 1708 0032 FFF7FEFF 		bl	sin
 1709              	.LVL209:
 1710 0036 0246     		mov	r2, r0
 1711 0038 0B46     		mov	r3, r1
 1712 003a 2046     		mov	r0, r4
 1713 003c 2946     		mov	r1, r5
 1714 003e FFF7FEFF 		bl	__aeabi_ddiv
 1715              	.LVL210:
 349:dcmotor.c     ****     moveBackward(amount/sin((M_PI/180)*degrees));
 1716              		.loc 1 349 0
 1717 0042 FFF7FEFF 		bl	__aeabi_d2f
 1718              	.LVL211:
 1719 0046 FFF7FEFF 		bl	moveBackward
 1720              	.LVL212:
 350:dcmotor.c     ****     turnRight(degrees);
 1721              		.loc 1 350 0
 1722 004a 4046     		mov	r0, r8
 1723 004c FFF7FEFF 		bl	turnRight
 1724              	.LVL213:
 351:dcmotor.c     ****     temp = amount/tan((M_PI/180)*degrees);
 1725              		.loc 1 351 0
 1726 0050 3046     		mov	r0, r6
 1727 0052 3946     		mov	r1, r7
 1728 0054 FFF7FEFF 		bl	tan
 1729              	.LVL214:
 1730 0058 0246     		mov	r2, r0
 1731 005a 0B46     		mov	r3, r1
 1732 005c 2046     		mov	r0, r4
 1733 005e 2946     		mov	r1, r5
 1734 0060 FFF7FEFF 		bl	__aeabi_ddiv
 1735              	.LVL215:
 352:dcmotor.c     ****     moveForward(amount/tan((M_PI/180)*degrees));
 1736              		.loc 1 352 0
 1737 0064 FFF7FEFF 		bl	__aeabi_d2f
 1738              	.LVL216:
 1739 0068 FFF7FEFF 		bl	moveForward
 1740              	.LVL217:
 1741 006c BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1742              	.L87:
 1743              		.align	3
 1744              	.L86:
 1745 0070 399D52A2 		.word	-1571644103
 1746 0074 46DF913F 		.word	1066524486
 1747              		.cfi_endproc
 1748              	.LFE77:
 1749              		.size	displaceRight, .-displaceRight
 1750              		.global	__aeabi_fcmplt
 1751              		.global	__aeabi_fsub
 1752              		.section	.text.nextMotion,"ax",%progbits
 1753              		.align	2
 1754              		.global	nextMotion
 1755              		.thumb
 1756              		.thumb_func
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccL77S3Y.s 			page 38


 1757              		.type	nextMotion, %function
 1758              	nextMotion:
 1759              	.LFB78:
 353:dcmotor.c     **** }
 354:dcmotor.c     **** 
 355:dcmotor.c     **** //Looks at the current position, desired position and the location of the block, 
 356:dcmotor.c     **** //and plans a route, executing the next motion in that route if the main program 
 357:dcmotor.c     **** //permits (via having the moveNow flag set to TRUE)
 358:dcmotor.c     **** void nextMotion(int * desiredPosition){
 1760              		.loc 1 358 0
 1761              		.cfi_startproc
 1762              		@ args = 0, pretend = 0, frame = 0
 1763              		@ frame_needed = 0, uses_anonymous_args = 0
 1764              	.LVL218:
 1765 0000 38B5     		push	{r3, r4, r5, lr}
 1766              		.cfi_def_cfa_offset 16
 1767              		.cfi_offset 3, -16
 1768              		.cfi_offset 4, -12
 1769              		.cfi_offset 5, -8
 1770              		.cfi_offset 14, -4
 1771 0002 0546     		mov	r5, r0
 359:dcmotor.c     ****     //Check that we have already acquired the block's location (by checking we aren't in 
 360:dcmotor.c     ****     //the scanning for block state)
 361:dcmotor.c     ****     //Check what motions are available to us from the flags
 362:dcmotor.c     ****     //Check what motions are available to us from our location compared to obstacle
 363:dcmotor.c     ****     if (block_location[0] < currentPosition[0] && currentPosition[0] < block_location[1]){
 1772              		.loc 1 363 0
 1773 0004 134B     		ldr	r3, .L97
 1774 0006 1C68     		ldr	r4, [r3]	@ float
 1775 0008 2146     		mov	r1, r4
 1776 000a 134B     		ldr	r3, .L97+4
 1777 000c 1868     		ldr	r0, [r3]	@ float
 1778              	.LVL219:
 1779 000e FFF7FEFF 		bl	__aeabi_fcmplt
 1780              	.LVL220:
 1781 0012 F0B1     		cbz	r0, .L88
 1782              		.loc 1 363 0 is_stmt 0 discriminator 1
 1783 0014 104B     		ldr	r3, .L97+4
 1784 0016 5968     		ldr	r1, [r3, #4]	@ float
 1785 0018 2046     		mov	r0, r4
 1786 001a FFF7FEFF 		bl	__aeabi_fcmplt
 1787              	.LVL221:
 1788 001e C0B1     		cbz	r0, .L88
 1789              	.LBB3:
 364:dcmotor.c     ****         float xToMove = desiredPosition[0] - currentPosition[0];
 1790              		.loc 1 364 0 is_stmt 1
 1791 0020 2868     		ldr	r0, [r5]
 1792 0022 FFF7FEFF 		bl	__aeabi_i2f
 1793              	.LVL222:
 1794 0026 2146     		mov	r1, r4
 1795 0028 FFF7FEFF 		bl	__aeabi_fsub
 1796              	.LVL223:
 365:dcmotor.c     ****         if ((xToMove <0) && (moveLeftAllowed == TRUE)){
 1797              		.loc 1 365 0
 1798 002c 0021     		movs	r1, #0
 1799 002e FFF7FEFF 		bl	__aeabi_fcmplt
 1800              	.LVL224:
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccL77S3Y.s 			page 39


 1801 0032 70B1     		cbz	r0, .L88
 1802              		.loc 1 365 0 is_stmt 0 discriminator 1
 1803 0034 094B     		ldr	r3, .L97+8
 1804 0036 B3F90030 		ldrsh	r3, [r3]
 1805 003a 012B     		cmp	r3, #1
 1806 003c 09D1     		bne	.L88
 366:dcmotor.c     ****             if (currentOrientation != 180){
 1807              		.loc 1 366 0 is_stmt 1
 1808 003e 084B     		ldr	r3, .L97+12
 1809 0040 1868     		ldr	r0, [r3]
 1810 0042 B428     		cmp	r0, #180
 1811 0044 05D0     		beq	.L88
 367:dcmotor.c     ****                 turnLeft(180 - currentOrientation);
 1812              		.loc 1 367 0
 1813 0046 C0F1B400 		rsb	r0, r0, #180
 1814 004a FFF7FEFF 		bl	__aeabi_i2f
 1815              	.LVL225:
 1816 004e FFF7FEFF 		bl	turnLeft
 1817              	.LVL226:
 1818              	.L88:
 1819 0052 38BD     		pop	{r3, r4, r5, pc}
 1820              	.LVL227:
 1821              	.L98:
 1822              		.align	2
 1823              	.L97:
 1824 0054 00000000 		.word	currentPosition
 1825 0058 00000000 		.word	block_location
 1826 005c 00000000 		.word	moveLeftAllowed
 1827 0060 00000000 		.word	currentOrientation
 1828              	.LBE3:
 1829              		.cfi_endproc
 1830              	.LFE78:
 1831              		.size	nextMotion, .-nextMotion
 1832              		.section	.text.stopMotor1AndUpdate,"ax",%progbits
 1833              		.align	2
 1834              		.global	stopMotor1AndUpdate
 1835              		.thumb
 1836              		.thumb_func
 1837              		.type	stopMotor1AndUpdate, %function
 1838              	stopMotor1AndUpdate:
 1839              	.LFB79:
 368:dcmotor.c     ****             }
 369:dcmotor.c     ****         }
 370:dcmotor.c     ****     }
 371:dcmotor.c     **** }
 372:dcmotor.c     **** 
 373:dcmotor.c     **** void stopMotor1AndUpdate(void){
 1840              		.loc 1 373 0
 1841              		.cfi_startproc
 1842              		@ args = 0, pretend = 0, frame = 0
 1843              		@ frame_needed = 0, uses_anonymous_args = 0
 1844 0000 10B5     		push	{r4, lr}
 1845              		.cfi_def_cfa_offset 8
 1846              		.cfi_offset 4, -8
 1847              		.cfi_offset 14, -4
 374:dcmotor.c     ****     Motor_1_driver_WriteCompare1(0);
 1848              		.loc 1 374 0
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccL77S3Y.s 			page 40


 1849 0002 0020     		movs	r0, #0
 1850 0004 FFF7FEFF 		bl	Motor_1_driver_WriteCompare1
 1851              	.LVL228:
 375:dcmotor.c     ****     Motor_1_driver_WriteCompare2(0);
 1852              		.loc 1 375 0
 1853 0008 0020     		movs	r0, #0
 1854 000a FFF7FEFF 		bl	Motor_1_driver_WriteCompare2
 1855              	.LVL229:
 376:dcmotor.c     ****     Motor_1_Encoder_Counts_Stop();
 1856              		.loc 1 376 0
 1857 000e FFF7FEFF 		bl	Motor_1_Encoder_Counts_Stop
 1858              	.LVL230:
 377:dcmotor.c     ****     M1_FD = 0;
 1859              		.loc 1 377 0
 1860 0012 0024     		movs	r4, #0
 1861 0014 064B     		ldr	r3, .L101
 1862 0016 1C60     		str	r4, [r3]
 378:dcmotor.c     ****     M1_BD = 0;
 1863              		.loc 1 378 0
 1864 0018 064B     		ldr	r3, .L101+4
 1865 001a 1C60     		str	r4, [r3]
 379:dcmotor.c     ****     UART_1_PutString("Counter 1 interrupt \n");
 1866              		.loc 1 379 0
 1867 001c 0648     		ldr	r0, .L101+8
 1868 001e FFF7FEFF 		bl	UART_1_PutString
 1869              	.LVL231:
 380:dcmotor.c     ****     motor1Enable = FALSE;
 1870              		.loc 1 380 0
 1871 0022 064B     		ldr	r3, .L101+12
 1872 0024 1C80     		strh	r4, [r3]	@ movhi
 381:dcmotor.c     ****     stopMotion();
 1873              		.loc 1 381 0
 1874 0026 FFF7FEFF 		bl	stopMotion
 1875              	.LVL232:
 382:dcmotor.c     ****     Motor_1_Encoder_Counts_ReadStatusRegister(); //Clears the interrupt
 1876              		.loc 1 382 0
 1877 002a FFF7FEFF 		bl	Motor_1_Encoder_Counts_ReadStatusRegister
 1878              	.LVL233:
 1879 002e 10BD     		pop	{r4, pc}
 1880              	.L102:
 1881              		.align	2
 1882              	.L101:
 1883 0030 00000000 		.word	M1_FD
 1884 0034 00000000 		.word	M1_BD
 1885 0038 00000000 		.word	.LC0
 1886 003c 00000000 		.word	motor1Enable
 1887              		.cfi_endproc
 1888              	.LFE79:
 1889              		.size	stopMotor1AndUpdate, .-stopMotor1AndUpdate
 1890              		.section	.text.stopMotor2AndUpdate,"ax",%progbits
 1891              		.align	2
 1892              		.global	stopMotor2AndUpdate
 1893              		.thumb
 1894              		.thumb_func
 1895              		.type	stopMotor2AndUpdate, %function
 1896              	stopMotor2AndUpdate:
 1897              	.LFB80:
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccL77S3Y.s 			page 41


 383:dcmotor.c     **** }
 384:dcmotor.c     **** 
 385:dcmotor.c     **** void stopMotor2AndUpdate(void){
 1898              		.loc 1 385 0
 1899              		.cfi_startproc
 1900              		@ args = 0, pretend = 0, frame = 0
 1901              		@ frame_needed = 0, uses_anonymous_args = 0
 1902 0000 10B5     		push	{r4, lr}
 1903              		.cfi_def_cfa_offset 8
 1904              		.cfi_offset 4, -8
 1905              		.cfi_offset 14, -4
 386:dcmotor.c     ****     Motor_2_driver_WriteCompare1(0);
 1906              		.loc 1 386 0
 1907 0002 0020     		movs	r0, #0
 1908 0004 FFF7FEFF 		bl	Motor_2_driver_WriteCompare1
 1909              	.LVL234:
 387:dcmotor.c     ****     Motor_2_driver_WriteCompare2(0);
 1910              		.loc 1 387 0
 1911 0008 0020     		movs	r0, #0
 1912 000a FFF7FEFF 		bl	Motor_2_driver_WriteCompare2
 1913              	.LVL235:
 388:dcmotor.c     ****     Motor_2_Encoder_Counts_Stop();
 1914              		.loc 1 388 0
 1915 000e FFF7FEFF 		bl	Motor_2_Encoder_Counts_Stop
 1916              	.LVL236:
 389:dcmotor.c     ****     M2_FD = 0;
 1917              		.loc 1 389 0
 1918 0012 0024     		movs	r4, #0
 1919 0014 064B     		ldr	r3, .L105
 1920 0016 1C60     		str	r4, [r3]
 390:dcmotor.c     ****     M2_BD = 0;
 1921              		.loc 1 390 0
 1922 0018 064B     		ldr	r3, .L105+4
 1923 001a 1C60     		str	r4, [r3]
 391:dcmotor.c     ****     UART_1_PutString("Counter 2 interrupt \n");
 1924              		.loc 1 391 0
 1925 001c 0648     		ldr	r0, .L105+8
 1926 001e FFF7FEFF 		bl	UART_1_PutString
 1927              	.LVL237:
 392:dcmotor.c     ****     motor2Enable = FALSE;   
 1928              		.loc 1 392 0
 1929 0022 064B     		ldr	r3, .L105+12
 1930 0024 1C80     		strh	r4, [r3]	@ movhi
 393:dcmotor.c     ****     stopMotion();
 1931              		.loc 1 393 0
 1932 0026 FFF7FEFF 		bl	stopMotion
 1933              	.LVL238:
 394:dcmotor.c     ****     Motor_2_Encoder_Counts_ReadStatusRegister(); //Clears the interrupt
 1934              		.loc 1 394 0
 1935 002a FFF7FEFF 		bl	Motor_2_Encoder_Counts_ReadStatusRegister
 1936              	.LVL239:
 1937 002e 10BD     		pop	{r4, pc}
 1938              	.L106:
 1939              		.align	2
 1940              	.L105:
 1941 0030 00000000 		.word	M2_FD
 1942 0034 00000000 		.word	M2_BD
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccL77S3Y.s 			page 42


 1943 0038 18000000 		.word	.LC1
 1944 003c 00000000 		.word	motor2Enable
 1945              		.cfi_endproc
 1946              	.LFE80:
 1947              		.size	stopMotor2AndUpdate, .-stopMotor2AndUpdate
 1948              		.section	.text.moveAndAngle,"ax",%progbits
 1949              		.align	2
 1950              		.global	moveAndAngle
 1951              		.thumb
 1952              		.thumb_func
 1953              		.type	moveAndAngle, %function
 1954              	moveAndAngle:
 1955              	.LFB81:
 395:dcmotor.c     **** }
 396:dcmotor.c     **** 
 397:dcmotor.c     **** void moveAndAngle(int horizontal, int vertical, int angle){
 1956              		.loc 1 397 0
 1957              		.cfi_startproc
 1958              		@ args = 0, pretend = 0, frame = 0
 1959              		@ frame_needed = 0, uses_anonymous_args = 0
 1960              	.LVL240:
 1961 0000 08B5     		push	{r3, lr}
 1962              		.cfi_def_cfa_offset 8
 1963              		.cfi_offset 3, -8
 1964              		.cfi_offset 14, -4
 398:dcmotor.c     ****     // TO COMPLETE NIDHIN
 399:dcmotor.c     ****     UART_1_PutString("Move and Angle called");
 1965              		.loc 1 399 0
 1966 0002 0248     		ldr	r0, .L109
 1967              	.LVL241:
 1968 0004 FFF7FEFF 		bl	UART_1_PutString
 1969              	.LVL242:
 1970 0008 08BD     		pop	{r3, pc}
 1971              	.L110:
 1972 000a 00BF     		.align	2
 1973              	.L109:
 1974 000c 30000000 		.word	.LC2
 1975              		.cfi_endproc
 1976              	.LFE81:
 1977              		.size	moveAndAngle, .-moveAndAngle
 1978              		.global	__aeabi_dcmpgt
 1979              		.section	.text.correctAngle,"ax",%progbits
 1980              		.align	2
 1981              		.global	correctAngle
 1982              		.thumb
 1983              		.thumb_func
 1984              		.type	correctAngle, %function
 1985              	correctAngle:
 1986              	.LFB82:
 400:dcmotor.c     ****     return;    
 401:dcmotor.c     **** }
 402:dcmotor.c     **** 
 403:dcmotor.c     **** void correctAngle(){
 1987              		.loc 1 403 0
 1988              		.cfi_startproc
 1989              		@ args = 0, pretend = 0, frame = 0
 1990              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccL77S3Y.s 			page 43


 1991 0000 10B5     		push	{r4, lr}
 1992              		.cfi_def_cfa_offset 8
 1993              		.cfi_offset 4, -8
 1994              		.cfi_offset 14, -4
 404:dcmotor.c     ****     moveAndAngle(HOME_MIDPOINT, 20, WEST_ANGLE); // Choose west angle because nothing will be block
 1995              		.loc 1 404 0
 1996 0002 B422     		movs	r2, #180
 1997 0004 1421     		movs	r1, #20
 1998 0006 3C20     		movs	r0, #60
 1999 0008 FFF7FEFF 		bl	moveAndAngle
 2000              	.LVL243:
 405:dcmotor.c     ****     distanceCheck();
 2001              		.loc 1 405 0
 2002 000c FFF7FEFF 		bl	distanceCheck
 2003              	.LVL244:
 406:dcmotor.c     ****     // rotate by micro steps until front two sensors are equal within tolerance
 407:dcmotor.c     ****     
 408:dcmotor.c     ****     int error = abs(ultrasonic_distances[LEFT_FRONT] - ultrasonic_distances[RIGHT_FRONT]);
 2004              		.loc 1 408 0
 2005 0010 0D4B     		ldr	r3, .L114+8
 2006 0012 9968     		ldr	r1, [r3, #8]	@ float
 2007 0014 5868     		ldr	r0, [r3, #4]	@ float
 2008 0016 FFF7FEFF 		bl	__aeabi_fsub
 2009              	.LVL245:
 2010 001a FFF7FEFF 		bl	__aeabi_f2d
 2011              	.LVL246:
 2012 001e FFF7FEFF 		bl	abs
 2013              	.LVL247:
 2014 0022 0446     		mov	r4, r0
 2015              	.LVL248:
 2016              	.L112:
 409:dcmotor.c     ****     while (error > ANGLE_TOLERANCE){
 2017              		.loc 1 409 0
 2018 0024 2046     		mov	r0, r4
 2019 0026 FFF7FEFF 		bl	__aeabi_i2d
 2020              	.LVL249:
 2021 002a 05A3     		adr	r3, .L114
 2022 002c D3E90023 		ldrd	r2, [r3]
 2023 0030 FFF7FEFF 		bl	__aeabi_dcmpgt
 2024              	.LVL250:
 2025 0034 0028     		cmp	r0, #0
 2026 0036 F5D1     		bne	.L112
 410:dcmotor.c     ****         // microTurn();
 411:dcmotor.c     ****         error = abs(ultrasonic_distances[LEFT_FRONT] - ultrasonic_distances[RIGHT_FRONT]);
 412:dcmotor.c     ****     }
 413:dcmotor.c     ****     
 414:dcmotor.c     **** }
 2027              		.loc 1 414 0
 2028 0038 10BD     		pop	{r4, pc}
 2029              	.LVL251:
 2030              	.L115:
 2031 003a 00BFAFF3 		.align	3
 2031      0080
 2032              	.L114:
 2033 0040 7B14AE47 		.word	1202590843
 2034 0044 E17A843F 		.word	1065646817
 2035 0048 00000000 		.word	ultrasonic_distances
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccL77S3Y.s 			page 44


 2036              		.cfi_endproc
 2037              	.LFE82:
 2038              		.size	correctAngle, .-correctAngle
 2039              		.comm	initialisation,4,4
 2040              		.comm	output,32,4
 2041              		.comm	turningRightFlag,2,2
 2042              		.comm	turningLeftFlag,2,2
 2043              		.comm	drivingBackwardFlag,2,2
 2044              		.comm	drivingForwardFlag,2,2
 2045              		.comm	puckPileLocation,4,4
 2046              		.comm	block_edge_location,16,4
 2047              		.comm	sweeping,4,4
 2048              		.comm	puckRackOffsetsFromWest,20,4
 2049              		.comm	puckRackColours,20,4
 2050              		.comm	currentPuckRackScanningIndex,4,4
 2051              		.comm	driveStraightEnable,4,4
 2052              		.section	.rodata.str1.4,"aMS",%progbits,1
 2053              		.align	2
 2054              	.LC0:
 2055 0000 436F756E 		.ascii	"Counter 1 interrupt \012\000"
 2055      74657220 
 2055      3120696E 
 2055      74657272 
 2055      75707420 
 2056 0016 0000     		.space	2
 2057              	.LC1:
 2058 0018 436F756E 		.ascii	"Counter 2 interrupt \012\000"
 2058      74657220 
 2058      3220696E 
 2058      74657272 
 2058      75707420 
 2059 002e 0000     		.space	2
 2060              	.LC2:
 2061 0030 4D6F7665 		.ascii	"Move and Angle called\000"
 2061      20616E64 
 2061      20416E67 
 2061      6C652063 
 2061      616C6C65 
 2062              		.text
 2063              	.Letext0:
 2064              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 2065              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 2066              		.file 4 "Generated_Source\\PSoC5/core_cm3.h"
 2067              		.file 5 "main.h"
 2068              		.file 6 "ultrasonic.h"
 2069              		.file 7 "dcmotor.h"
 2070              		.file 8 "customMath.h"
 2071              		.file 9 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 2072              		.file 10 "Generated_Source\\PSoC5/Motor_1_Encoder_Counts.h"
 2073              		.file 11 "Generated_Source\\PSoC5/Motor_2_Encoder_Counts.h"
 2074              		.file 12 "Generated_Source\\PSoC5/Motor_1_driver.h"
 2075              		.file 13 "Generated_Source\\PSoC5/Motor_2_driver.h"
 2076              		.file 14 "Generated_Source\\PSoC5/Drift_Check_Timer.h"
 2077              		.file 15 "Generated_Source\\PSoC5/UART_1.h"
 2078              		.file 16 "<built-in>"
 2079              		.section	.debug_info,"",%progbits
 2080              	.Ldebug_info0:
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccL77S3Y.s 			page 45


 2081 0000 0E0C0000 		.4byte	0xc0e
 2082 0004 0400     		.2byte	0x4
 2083 0006 00000000 		.4byte	.Ldebug_abbrev0
 2084 000a 04       		.byte	0x4
 2085 000b 01       		.uleb128 0x1
 2086 000c 5D060000 		.4byte	.LASF96
 2087 0010 0C       		.byte	0xc
 2088 0011 A6030000 		.4byte	.LASF97
 2089 0015 C0050000 		.4byte	.LASF98
 2090 0019 00000000 		.4byte	.Ldebug_ranges0+0
 2091 001d 00000000 		.4byte	0
 2092 0021 00000000 		.4byte	.Ldebug_line0
 2093 0025 02       		.uleb128 0x2
 2094 0026 04       		.byte	0x4
 2095 0027 04       		.byte	0x4
 2096 0028 EA010000 		.4byte	.LASF0
 2097 002c 02       		.uleb128 0x2
 2098 002d 08       		.byte	0x8
 2099 002e 04       		.byte	0x4
 2100 002f 2E050000 		.4byte	.LASF1
 2101 0033 02       		.uleb128 0x2
 2102 0034 01       		.byte	0x1
 2103 0035 06       		.byte	0x6
 2104 0036 6F030000 		.4byte	.LASF2
 2105 003a 02       		.uleb128 0x2
 2106 003b 01       		.byte	0x1
 2107 003c 08       		.byte	0x8
 2108 003d 1B030000 		.4byte	.LASF3
 2109 0041 02       		.uleb128 0x2
 2110 0042 02       		.byte	0x2
 2111 0043 05       		.byte	0x5
 2112 0044 8A000000 		.4byte	.LASF4
 2113 0048 02       		.uleb128 0x2
 2114 0049 02       		.byte	0x2
 2115 004a 07       		.byte	0x7
 2116 004b F2030000 		.4byte	.LASF5
 2117 004f 03       		.uleb128 0x3
 2118 0050 A6050000 		.4byte	.LASF11
 2119 0054 02       		.byte	0x2
 2120 0055 3F       		.byte	0x3f
 2121 0056 5A000000 		.4byte	0x5a
 2122 005a 02       		.uleb128 0x2
 2123 005b 04       		.byte	0x4
 2124 005c 05       		.byte	0x5
 2125 005d 8D020000 		.4byte	.LASF6
 2126 0061 02       		.uleb128 0x2
 2127 0062 04       		.byte	0x4
 2128 0063 07       		.byte	0x7
 2129 0064 BA020000 		.4byte	.LASF7
 2130 0068 02       		.uleb128 0x2
 2131 0069 08       		.byte	0x8
 2132 006a 05       		.byte	0x5
 2133 006b 30020000 		.4byte	.LASF8
 2134 006f 02       		.uleb128 0x2
 2135 0070 08       		.byte	0x8
 2136 0071 07       		.byte	0x7
 2137 0072 8F030000 		.4byte	.LASF9
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccL77S3Y.s 			page 46


 2138 0076 04       		.uleb128 0x4
 2139 0077 04       		.byte	0x4
 2140 0078 05       		.byte	0x5
 2141 0079 696E7400 		.ascii	"int\000"
 2142 007d 02       		.uleb128 0x2
 2143 007e 04       		.byte	0x4
 2144 007f 07       		.byte	0x7
 2145 0080 B0030000 		.4byte	.LASF10
 2146 0084 03       		.uleb128 0x3
 2147 0085 28040000 		.4byte	.LASF12
 2148 0089 03       		.byte	0x3
 2149 008a 2C       		.byte	0x2c
 2150 008b 4F000000 		.4byte	0x4f
 2151 008f 02       		.uleb128 0x2
 2152 0090 01       		.byte	0x1
 2153 0091 08       		.byte	0x8
 2154 0092 1D040000 		.4byte	.LASF13
 2155 0096 02       		.uleb128 0x2
 2156 0097 08       		.byte	0x8
 2157 0098 04       		.byte	0x4
 2158 0099 29030000 		.4byte	.LASF14
 2159 009d 02       		.uleb128 0x2
 2160 009e 04       		.byte	0x4
 2161 009f 07       		.byte	0x7
 2162 00a0 34060000 		.4byte	.LASF15
 2163 00a4 05       		.uleb128 0x5
 2164 00a5 05040000 		.4byte	.LASF19
 2165 00a9 01       		.byte	0x1
 2166 00aa 23       		.byte	0x23
 2167 00ab 00000000 		.4byte	.LFB64
 2168 00af 5C010000 		.4byte	.LFE64-.LFB64
 2169 00b3 01       		.uleb128 0x1
 2170 00b4 9C       		.byte	0x9c
 2171 00b5 1A010000 		.4byte	0x11a
 2172 00b9 06       		.uleb128 0x6
 2173 00ba E0030000 		.4byte	.LASF16
 2174 00be 01       		.byte	0x1
 2175 00bf 23       		.byte	0x23
 2176 00c0 76000000 		.4byte	0x76
 2177 00c4 00000000 		.4byte	.LLST0
 2178 00c8 06       		.uleb128 0x6
 2179 00c9 B8000000 		.4byte	.LASF17
 2180 00cd 01       		.byte	0x1
 2181 00ce 23       		.byte	0x23
 2182 00cf 76000000 		.4byte	0x76
 2183 00d3 45000000 		.4byte	.LLST1
 2184 00d7 06       		.uleb128 0x6
 2185 00d8 D9020000 		.4byte	.LASF18
 2186 00dc 01       		.byte	0x1
 2187 00dd 23       		.byte	0x23
 2188 00de 76000000 		.4byte	0x76
 2189 00e2 8A000000 		.4byte	.LLST2
 2190 00e6 07       		.uleb128 0x7
 2191 00e7 58040000 		.4byte	.LASF23
 2192 00eb 01       		.byte	0x1
 2193 00ec 24       		.byte	0x24
 2194 00ed 25000000 		.4byte	0x25
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccL77S3Y.s 			page 47


 2195 00f1 CF000000 		.4byte	.LLST3
 2196 00f5 08       		.uleb128 0x8
 2197 00f6 50000000 		.4byte	.LVL15
 2198 00fa 080B0000 		.4byte	0xb08
 2199 00fe 08       		.uleb128 0x8
 2200 00ff 84000000 		.4byte	.LVL20
 2201 0103 130B0000 		.4byte	0xb13
 2202 0107 08       		.uleb128 0x8
 2203 0108 E0000000 		.4byte	.LVL35
 2204 010c 080B0000 		.4byte	0xb08
 2205 0110 08       		.uleb128 0x8
 2206 0111 14010000 		.4byte	.LVL40
 2207 0115 130B0000 		.4byte	0xb13
 2208 0119 00       		.byte	0
 2209 011a 05       		.uleb128 0x5
 2210 011b A5040000 		.4byte	.LASF20
 2211 011f 01       		.byte	0x1
 2212 0120 33       		.byte	0x33
 2213 0121 00000000 		.4byte	.LFB65
 2214 0125 78000000 		.4byte	.LFE65-.LFB65
 2215 0129 01       		.uleb128 0x1
 2216 012a 9C       		.byte	0x9c
 2217 012b 6C010000 		.4byte	0x16c
 2218 012f 06       		.uleb128 0x6
 2219 0130 E0030000 		.4byte	.LASF16
 2220 0134 01       		.byte	0x1
 2221 0135 33       		.byte	0x33
 2222 0136 76000000 		.4byte	0x76
 2223 013a 03010000 		.4byte	.LLST4
 2224 013e 06       		.uleb128 0x6
 2225 013f 75000000 		.4byte	.LASF21
 2226 0143 01       		.byte	0x1
 2227 0144 33       		.byte	0x33
 2228 0145 76000000 		.4byte	0x76
 2229 0149 24010000 		.4byte	.LLST5
 2230 014d 06       		.uleb128 0x6
 2231 014e D9010000 		.4byte	.LASF22
 2232 0152 01       		.byte	0x1
 2233 0153 33       		.byte	0x33
 2234 0154 76000000 		.4byte	0x76
 2235 0158 50010000 		.4byte	.LLST6
 2236 015c 07       		.uleb128 0x7
 2237 015d CB000000 		.4byte	.LASF24
 2238 0161 01       		.byte	0x1
 2239 0162 34       		.byte	0x34
 2240 0163 76000000 		.4byte	0x76
 2241 0167 7C010000 		.4byte	.LLST7
 2242 016b 00       		.byte	0
 2243 016c 09       		.uleb128 0x9
 2244 016d AF020000 		.4byte	.LASF25
 2245 0171 01       		.byte	0x1
 2246 0172 43       		.byte	0x43
 2247 0173 00000000 		.4byte	.LFB66
 2248 0177 C8000000 		.4byte	.LFE66-.LFB66
 2249 017b 01       		.uleb128 0x1
 2250 017c 9C       		.byte	0x9c
 2251 017d F3010000 		.4byte	0x1f3
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccL77S3Y.s 			page 48


 2252 0181 0A       		.uleb128 0xa
 2253 0182 16000000 		.4byte	.LBB2
 2254 0186 B2000000 		.4byte	.LBE2-.LBB2
 2255 018a 07       		.uleb128 0x7
 2256 018b 1D000000 		.4byte	.LASF26
 2257 018f 01       		.byte	0x1
 2258 0190 47       		.byte	0x47
 2259 0191 76000000 		.4byte	0x76
 2260 0195 9A010000 		.4byte	.LLST8
 2261 0199 08       		.uleb128 0x8
 2262 019a 2E000000 		.4byte	.LVL53
 2263 019e 1E0B0000 		.4byte	0xb1e
 2264 01a2 08       		.uleb128 0x8
 2265 01a3 3E000000 		.4byte	.LVL54
 2266 01a7 A4000000 		.4byte	0xa4
 2267 01ab 08       		.uleb128 0x8
 2268 01ac 4E000000 		.4byte	.LVL55
 2269 01b0 290B0000 		.4byte	0xb29
 2270 01b4 08       		.uleb128 0x8
 2271 01b5 5E000000 		.4byte	.LVL56
 2272 01b9 1A010000 		.4byte	0x11a
 2273 01bd 08       		.uleb128 0x8
 2274 01be 6E000000 		.4byte	.LVL57
 2275 01c2 1E0B0000 		.4byte	0xb1e
 2276 01c6 08       		.uleb128 0x8
 2277 01c7 7E000000 		.4byte	.LVL58
 2278 01cb 1A010000 		.4byte	0x11a
 2279 01cf 0B       		.uleb128 0xb
 2280 01d0 84000000 		.4byte	.LVL59
 2281 01d4 340B0000 		.4byte	0xb34
 2282 01d8 E2010000 		.4byte	0x1e2
 2283 01dc 0C       		.uleb128 0xc
 2284 01dd 01       		.uleb128 0x1
 2285 01de 50       		.byte	0x50
 2286 01df 01       		.uleb128 0x1
 2287 01e0 30       		.byte	0x30
 2288 01e1 00       		.byte	0
 2289 01e2 0D       		.uleb128 0xd
 2290 01e3 8A000000 		.4byte	.LVL60
 2291 01e7 3F0B0000 		.4byte	0xb3f
 2292 01eb 0C       		.uleb128 0xc
 2293 01ec 01       		.uleb128 0x1
 2294 01ed 50       		.byte	0x50
 2295 01ee 01       		.uleb128 0x1
 2296 01ef 30       		.byte	0x30
 2297 01f0 00       		.byte	0
 2298 01f1 00       		.byte	0
 2299 01f2 00       		.byte	0
 2300 01f3 05       		.uleb128 0x5
 2301 01f4 78020000 		.4byte	.LASF27
 2302 01f8 01       		.byte	0x1
 2303 01f9 68       		.byte	0x68
 2304 01fa 00000000 		.4byte	.LFB67
 2305 01fe 70000000 		.4byte	.LFE67-.LFB67
 2306 0202 01       		.uleb128 0x1
 2307 0203 9C       		.byte	0x9c
 2308 0204 69020000 		.4byte	0x269
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccL77S3Y.s 			page 49


 2309 0208 06       		.uleb128 0x6
 2310 0209 9F040000 		.4byte	.LASF28
 2311 020d 01       		.byte	0x1
 2312 020e 68       		.byte	0x68
 2313 020f 25000000 		.4byte	0x25
 2314 0213 C3010000 		.4byte	.LLST9
 2315 0217 06       		.uleb128 0x6
 2316 0218 22040000 		.4byte	.LASF29
 2317 021c 01       		.byte	0x1
 2318 021d 68       		.byte	0x68
 2319 021e 25000000 		.4byte	0x25
 2320 0222 E6010000 		.4byte	.LLST10
 2321 0226 06       		.uleb128 0x6
 2322 0227 0B070000 		.4byte	.LASF30
 2323 022b 01       		.byte	0x1
 2324 022c 68       		.byte	0x68
 2325 022d 25000000 		.4byte	0x25
 2326 0231 14020000 		.4byte	.LLST11
 2327 0235 06       		.uleb128 0x6
 2328 0236 50060000 		.4byte	.LASF31
 2329 023a 01       		.byte	0x1
 2330 023b 68       		.byte	0x68
 2331 023c 25000000 		.4byte	0x25
 2332 0240 42020000 		.4byte	.LLST12
 2333 0244 08       		.uleb128 0x8
 2334 0245 1E000000 		.4byte	.LVL66
 2335 0249 4A0B0000 		.4byte	0xb4a
 2336 024d 08       		.uleb128 0x8
 2337 024e 36000000 		.4byte	.LVL70
 2338 0252 550B0000 		.4byte	0xb55
 2339 0256 08       		.uleb128 0x8
 2340 0257 4E000000 		.4byte	.LVL74
 2341 025b 600B0000 		.4byte	0xb60
 2342 025f 08       		.uleb128 0x8
 2343 0260 66000000 		.4byte	.LVL78
 2344 0264 6B0B0000 		.4byte	0xb6b
 2345 0268 00       		.byte	0
 2346 0269 05       		.uleb128 0x5
 2347 026a 34010000 		.4byte	.LASF32
 2348 026e 01       		.byte	0x1
 2349 026f 71       		.byte	0x71
 2350 0270 00000000 		.4byte	.LFB68
 2351 0274 B0010000 		.4byte	.LFE68-.LFB68
 2352 0278 01       		.uleb128 0x1
 2353 0279 9C       		.byte	0x9c
 2354 027a BA020000 		.4byte	0x2ba
 2355 027e 07       		.uleb128 0x7
 2356 027f 85000000 		.4byte	.LASF33
 2357 0283 01       		.byte	0x1
 2358 0284 72       		.byte	0x72
 2359 0285 76000000 		.4byte	0x76
 2360 0289 70020000 		.4byte	.LLST13
 2361 028d 0B       		.uleb128 0xb
 2362 028e 80010000 		.4byte	.LVL100
 2363 0292 F3010000 		.4byte	0x1f3
 2364 0296 B0020000 		.4byte	0x2b0
 2365 029a 0C       		.uleb128 0xc
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccL77S3Y.s 			page 50


 2366 029b 01       		.uleb128 0x1
 2367 029c 51       		.byte	0x51
 2368 029d 03       		.uleb128 0x3
 2369 029e F5       		.byte	0xf5
 2370 029f 04       		.uleb128 0x4
 2371 02a0 25       		.uleb128 0x25
 2372 02a1 0C       		.uleb128 0xc
 2373 02a2 01       		.uleb128 0x1
 2374 02a3 52       		.byte	0x52
 2375 02a4 03       		.uleb128 0x3
 2376 02a5 F5       		.byte	0xf5
 2377 02a6 05       		.uleb128 0x5
 2378 02a7 25       		.uleb128 0x25
 2379 02a8 0C       		.uleb128 0xc
 2380 02a9 01       		.uleb128 0x1
 2381 02aa 53       		.byte	0x53
 2382 02ab 03       		.uleb128 0x3
 2383 02ac F5       		.byte	0xf5
 2384 02ad 06       		.uleb128 0x6
 2385 02ae 25       		.uleb128 0x25
 2386 02af 00       		.byte	0
 2387 02b0 08       		.uleb128 0x8
 2388 02b1 84010000 		.4byte	.LVL101
 2389 02b5 760B0000 		.4byte	0xb76
 2390 02b9 00       		.byte	0
 2391 02ba 09       		.uleb128 0x9
 2392 02bb 41010000 		.4byte	.LASF34
 2393 02bf 01       		.byte	0x1
 2394 02c0 C0       		.byte	0xc0
 2395 02c1 00000000 		.4byte	.LFB69
 2396 02c5 20000000 		.4byte	.LFE69-.LFB69
 2397 02c9 01       		.uleb128 0x1
 2398 02ca 9C       		.byte	0x9c
 2399 02cb 38030000 		.4byte	0x338
 2400 02cf 06       		.uleb128 0x6
 2401 02d0 98050000 		.4byte	.LASF35
 2402 02d4 01       		.byte	0x1
 2403 02d5 C0       		.byte	0xc0
 2404 02d6 76000000 		.4byte	0x76
 2405 02da D0020000 		.4byte	.LLST14
 2406 02de 06       		.uleb128 0x6
 2407 02df 9F050000 		.4byte	.LASF36
 2408 02e3 01       		.byte	0x1
 2409 02e4 C0       		.byte	0xc0
 2410 02e5 76000000 		.4byte	0x76
 2411 02e9 EE020000 		.4byte	.LLST15
 2412 02ed 0B       		.uleb128 0xb
 2413 02ee 0C000000 		.4byte	.LVL104
 2414 02f2 340B0000 		.4byte	0xb34
 2415 02f6 00030000 		.4byte	0x300
 2416 02fa 0C       		.uleb128 0xc
 2417 02fb 01       		.uleb128 0x1
 2418 02fc 50       		.byte	0x50
 2419 02fd 01       		.uleb128 0x1
 2420 02fe 30       		.byte	0x30
 2421 02ff 00       		.byte	0
 2422 0300 0B       		.uleb128 0xb
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccL77S3Y.s 			page 51


 2423 0301 12000000 		.4byte	.LVL105
 2424 0305 3F0B0000 		.4byte	0xb3f
 2425 0309 13030000 		.4byte	0x313
 2426 030d 0C       		.uleb128 0xc
 2427 030e 01       		.uleb128 0x1
 2428 030f 50       		.byte	0x50
 2429 0310 01       		.uleb128 0x1
 2430 0311 30       		.byte	0x30
 2431 0312 00       		.byte	0
 2432 0313 0B       		.uleb128 0xb
 2433 0314 18000000 		.4byte	.LVL106
 2434 0318 810B0000 		.4byte	0xb81
 2435 031c 27030000 		.4byte	0x327
 2436 0320 0C       		.uleb128 0xc
 2437 0321 01       		.uleb128 0x1
 2438 0322 50       		.byte	0x50
 2439 0323 02       		.uleb128 0x2
 2440 0324 75       		.byte	0x75
 2441 0325 00       		.sleb128 0
 2442 0326 00       		.byte	0
 2443 0327 0D       		.uleb128 0xd
 2444 0328 1E000000 		.4byte	.LVL107
 2445 032c 8C0B0000 		.4byte	0xb8c
 2446 0330 0C       		.uleb128 0xc
 2447 0331 01       		.uleb128 0x1
 2448 0332 50       		.byte	0x50
 2449 0333 02       		.uleb128 0x2
 2450 0334 74       		.byte	0x74
 2451 0335 00       		.sleb128 0
 2452 0336 00       		.byte	0
 2453 0337 00       		.byte	0
 2454 0338 05       		.uleb128 0x5
 2455 0339 CD010000 		.4byte	.LASF37
 2456 033d 01       		.byte	0x1
 2457 033e C8       		.byte	0xc8
 2458 033f 00000000 		.4byte	.LFB70
 2459 0343 C4000000 		.4byte	.LFE70-.LFB70
 2460 0347 01       		.uleb128 0x1
 2461 0348 9C       		.byte	0x9c
 2462 0349 AF030000 		.4byte	0x3af
 2463 034d 06       		.uleb128 0x6
 2464 034e 56060000 		.4byte	.LASF38
 2465 0352 01       		.byte	0x1
 2466 0353 C8       		.byte	0xc8
 2467 0354 25000000 		.4byte	0x25
 2468 0358 0C030000 		.4byte	.LLST16
 2469 035c 07       		.uleb128 0x7
 2470 035d E0030000 		.4byte	.LASF16
 2471 0361 01       		.byte	0x1
 2472 0362 C9       		.byte	0xc9
 2473 0363 76000000 		.4byte	0x76
 2474 0367 2F030000 		.4byte	.LLST17
 2475 036b 08       		.uleb128 0x8
 2476 036c 34000000 		.4byte	.LVL112
 2477 0370 BA020000 		.4byte	0x2ba
 2478 0374 08       		.uleb128 0x8
 2479 0375 4E000000 		.4byte	.LVL113
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccL77S3Y.s 			page 52


 2480 0379 970B0000 		.4byte	0xb97
 2481 037d 08       		.uleb128 0x8
 2482 037e 52000000 		.4byte	.LVL114
 2483 0382 A20B0000 		.4byte	0xba2
 2484 0386 08       		.uleb128 0x8
 2485 0387 56000000 		.4byte	.LVL115
 2486 038b 760B0000 		.4byte	0xb76
 2487 038f 0D       		.uleb128 0xd
 2488 0390 80000000 		.4byte	.LVL120
 2489 0394 F3010000 		.4byte	0x1f3
 2490 0398 0C       		.uleb128 0xc
 2491 0399 01       		.uleb128 0x1
 2492 039a 51       		.byte	0x51
 2493 039b 03       		.uleb128 0x3
 2494 039c F5       		.byte	0xf5
 2495 039d 04       		.uleb128 0x4
 2496 039e 25       		.uleb128 0x25
 2497 039f 0C       		.uleb128 0xc
 2498 03a0 01       		.uleb128 0x1
 2499 03a1 52       		.byte	0x52
 2500 03a2 03       		.uleb128 0x3
 2501 03a3 F5       		.byte	0xf5
 2502 03a4 07       		.uleb128 0x7
 2503 03a5 25       		.uleb128 0x25
 2504 03a6 0C       		.uleb128 0xc
 2505 03a7 01       		.uleb128 0x1
 2506 03a8 53       		.byte	0x53
 2507 03a9 03       		.uleb128 0x3
 2508 03aa F5       		.byte	0xf5
 2509 03ab 08       		.uleb128 0x8
 2510 03ac 25       		.uleb128 0x25
 2511 03ad 00       		.byte	0
 2512 03ae 00       		.byte	0
 2513 03af 05       		.uleb128 0x5
 2514 03b0 2D000000 		.4byte	.LASF39
 2515 03b4 01       		.byte	0x1
 2516 03b5 E0       		.byte	0xe0
 2517 03b6 00000000 		.4byte	.LFB71
 2518 03ba 9C000000 		.4byte	.LFE71-.LFB71
 2519 03be 01       		.uleb128 0x1
 2520 03bf 9C       		.byte	0x9c
 2521 03c0 28040000 		.4byte	0x428
 2522 03c4 0E       		.uleb128 0xe
 2523 03c5 E0030000 		.4byte	.LASF16
 2524 03c9 01       		.byte	0x1
 2525 03ca E1       		.byte	0xe1
 2526 03cb 76000000 		.4byte	0x76
 2527 03cf DCFF     		.2byte	0xffdc
 2528 03d1 0B       		.uleb128 0xb
 2529 03d2 26000000 		.4byte	.LVL122
 2530 03d6 BA020000 		.4byte	0x2ba
 2531 03da ED030000 		.4byte	0x3ed
 2532 03de 0C       		.uleb128 0xc
 2533 03df 01       		.uleb128 0x1
 2534 03e0 50       		.byte	0x50
 2535 03e1 03       		.uleb128 0x3
 2536 03e2 0A       		.byte	0xa
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccL77S3Y.s 			page 53


 2537 03e3 DCFF     		.2byte	0xffdc
 2538 03e5 0C       		.uleb128 0xc
 2539 03e6 01       		.uleb128 0x1
 2540 03e7 51       		.byte	0x51
 2541 03e8 03       		.uleb128 0x3
 2542 03e9 0A       		.byte	0xa
 2543 03ea DCFF     		.2byte	0xffdc
 2544 03ec 00       		.byte	0
 2545 03ed 08       		.uleb128 0x8
 2546 03ee 40000000 		.4byte	.LVL123
 2547 03f2 970B0000 		.4byte	0xb97
 2548 03f6 08       		.uleb128 0x8
 2549 03f7 44000000 		.4byte	.LVL124
 2550 03fb A20B0000 		.4byte	0xba2
 2551 03ff 08       		.uleb128 0x8
 2552 0400 48000000 		.4byte	.LVL125
 2553 0404 760B0000 		.4byte	0xb76
 2554 0408 0D       		.uleb128 0xd
 2555 0409 72000000 		.4byte	.LVL130
 2556 040d F3010000 		.4byte	0x1f3
 2557 0411 0C       		.uleb128 0xc
 2558 0412 01       		.uleb128 0x1
 2559 0413 51       		.byte	0x51
 2560 0414 03       		.uleb128 0x3
 2561 0415 F5       		.byte	0xf5
 2562 0416 04       		.uleb128 0x4
 2563 0417 25       		.uleb128 0x25
 2564 0418 0C       		.uleb128 0xc
 2565 0419 01       		.uleb128 0x1
 2566 041a 52       		.byte	0x52
 2567 041b 03       		.uleb128 0x3
 2568 041c F5       		.byte	0xf5
 2569 041d 07       		.uleb128 0x7
 2570 041e 25       		.uleb128 0x25
 2571 041f 0C       		.uleb128 0xc
 2572 0420 01       		.uleb128 0x1
 2573 0421 53       		.byte	0x53
 2574 0422 03       		.uleb128 0x3
 2575 0423 F5       		.byte	0xf5
 2576 0424 08       		.uleb128 0x8
 2577 0425 25       		.uleb128 0x25
 2578 0426 00       		.byte	0
 2579 0427 00       		.byte	0
 2580 0428 05       		.uleb128 0x5
 2581 0429 CC020000 		.4byte	.LASF40
 2582 042d 01       		.byte	0x1
 2583 042e F3       		.byte	0xf3
 2584 042f 00000000 		.4byte	.LFB72
 2585 0433 C4000000 		.4byte	.LFE72-.LFB72
 2586 0437 01       		.uleb128 0x1
 2587 0438 9C       		.byte	0x9c
 2588 0439 9F040000 		.4byte	0x49f
 2589 043d 06       		.uleb128 0x6
 2590 043e 56060000 		.4byte	.LASF38
 2591 0442 01       		.byte	0x1
 2592 0443 F3       		.byte	0xf3
 2593 0444 25000000 		.4byte	0x25
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccL77S3Y.s 			page 54


 2594 0448 42030000 		.4byte	.LLST18
 2595 044c 07       		.uleb128 0x7
 2596 044d E0030000 		.4byte	.LASF16
 2597 0451 01       		.byte	0x1
 2598 0452 F4       		.byte	0xf4
 2599 0453 76000000 		.4byte	0x76
 2600 0457 65030000 		.4byte	.LLST19
 2601 045b 08       		.uleb128 0x8
 2602 045c 34000000 		.4byte	.LVL135
 2603 0460 BA020000 		.4byte	0x2ba
 2604 0464 08       		.uleb128 0x8
 2605 0465 4A000000 		.4byte	.LVL136
 2606 0469 970B0000 		.4byte	0xb97
 2607 046d 08       		.uleb128 0x8
 2608 046e 4E000000 		.4byte	.LVL137
 2609 0472 A20B0000 		.4byte	0xba2
 2610 0476 08       		.uleb128 0x8
 2611 0477 52000000 		.4byte	.LVL138
 2612 047b 760B0000 		.4byte	0xb76
 2613 047f 0D       		.uleb128 0xd
 2614 0480 7A000000 		.4byte	.LVL143
 2615 0484 F3010000 		.4byte	0x1f3
 2616 0488 0C       		.uleb128 0xc
 2617 0489 01       		.uleb128 0x1
 2618 048a 51       		.byte	0x51
 2619 048b 03       		.uleb128 0x3
 2620 048c F5       		.byte	0xf5
 2621 048d 04       		.uleb128 0x4
 2622 048e 25       		.uleb128 0x25
 2623 048f 0C       		.uleb128 0xc
 2624 0490 01       		.uleb128 0x1
 2625 0491 52       		.byte	0x52
 2626 0492 03       		.uleb128 0x3
 2627 0493 F5       		.byte	0xf5
 2628 0494 07       		.uleb128 0x7
 2629 0495 25       		.uleb128 0x25
 2630 0496 0C       		.uleb128 0xc
 2631 0497 01       		.uleb128 0x1
 2632 0498 53       		.byte	0x53
 2633 0499 03       		.uleb128 0x3
 2634 049a F5       		.byte	0xf5
 2635 049b 08       		.uleb128 0x8
 2636 049c 25       		.uleb128 0x25
 2637 049d 00       		.byte	0
 2638 049e 00       		.byte	0
 2639 049f 0F       		.uleb128 0xf
 2640 04a0 96020000 		.4byte	.LASF41
 2641 04a4 01       		.byte	0x1
 2642 04a5 0A01     		.2byte	0x10a
 2643 04a7 00000000 		.4byte	.LFB73
 2644 04ab 94000000 		.4byte	.LFE73-.LFB73
 2645 04af 01       		.uleb128 0x1
 2646 04b0 9C       		.byte	0x9c
 2647 04b1 1A050000 		.4byte	0x51a
 2648 04b5 10       		.uleb128 0x10
 2649 04b6 E0030000 		.4byte	.LASF16
 2650 04ba 01       		.byte	0x1
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccL77S3Y.s 			page 55


 2651 04bb 0B01     		.2byte	0x10b
 2652 04bd 76000000 		.4byte	0x76
 2653 04c1 DCFF     		.2byte	0xffdc
 2654 04c3 0B       		.uleb128 0xb
 2655 04c4 26000000 		.4byte	.LVL145
 2656 04c8 BA020000 		.4byte	0x2ba
 2657 04cc DF040000 		.4byte	0x4df
 2658 04d0 0C       		.uleb128 0xc
 2659 04d1 01       		.uleb128 0x1
 2660 04d2 50       		.byte	0x50
 2661 04d3 03       		.uleb128 0x3
 2662 04d4 0A       		.byte	0xa
 2663 04d5 DCFF     		.2byte	0xffdc
 2664 04d7 0C       		.uleb128 0xc
 2665 04d8 01       		.uleb128 0x1
 2666 04d9 51       		.byte	0x51
 2667 04da 03       		.uleb128 0x3
 2668 04db 0A       		.byte	0xa
 2669 04dc DCFF     		.2byte	0xffdc
 2670 04de 00       		.byte	0
 2671 04df 08       		.uleb128 0x8
 2672 04e0 3C000000 		.4byte	.LVL146
 2673 04e4 970B0000 		.4byte	0xb97
 2674 04e8 08       		.uleb128 0x8
 2675 04e9 40000000 		.4byte	.LVL147
 2676 04ed A20B0000 		.4byte	0xba2
 2677 04f1 08       		.uleb128 0x8
 2678 04f2 44000000 		.4byte	.LVL148
 2679 04f6 760B0000 		.4byte	0xb76
 2680 04fa 0D       		.uleb128 0xd
 2681 04fb 6C000000 		.4byte	.LVL153
 2682 04ff F3010000 		.4byte	0x1f3
 2683 0503 0C       		.uleb128 0xc
 2684 0504 01       		.uleb128 0x1
 2685 0505 51       		.byte	0x51
 2686 0506 03       		.uleb128 0x3
 2687 0507 F5       		.byte	0xf5
 2688 0508 04       		.uleb128 0x4
 2689 0509 25       		.uleb128 0x25
 2690 050a 0C       		.uleb128 0xc
 2691 050b 01       		.uleb128 0x1
 2692 050c 52       		.byte	0x52
 2693 050d 03       		.uleb128 0x3
 2694 050e F5       		.byte	0xf5
 2695 050f 07       		.uleb128 0x7
 2696 0510 25       		.uleb128 0x25
 2697 0511 0C       		.uleb128 0xc
 2698 0512 01       		.uleb128 0x1
 2699 0513 53       		.byte	0x53
 2700 0514 03       		.uleb128 0x3
 2701 0515 F5       		.byte	0xf5
 2702 0516 08       		.uleb128 0x8
 2703 0517 25       		.uleb128 0x25
 2704 0518 00       		.byte	0
 2705 0519 00       		.byte	0
 2706 051a 0F       		.uleb128 0xf
 2707 051b 60030000 		.4byte	.LASF42
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccL77S3Y.s 			page 56


 2708 051f 01       		.byte	0x1
 2709 0520 1D01     		.2byte	0x11d
 2710 0522 00000000 		.4byte	.LFB74
 2711 0526 CC000000 		.4byte	.LFE74-.LFB74
 2712 052a 01       		.uleb128 0x1
 2713 052b 9C       		.byte	0x9c
 2714 052c 9D050000 		.4byte	0x59d
 2715 0530 11       		.uleb128 0x11
 2716 0531 56060000 		.4byte	.LASF38
 2717 0535 01       		.byte	0x1
 2718 0536 1D01     		.2byte	0x11d
 2719 0538 25000000 		.4byte	0x25
 2720 053c 78030000 		.4byte	.LLST20
 2721 0540 12       		.uleb128 0x12
 2722 0541 E0030000 		.4byte	.LASF16
 2723 0545 01       		.byte	0x1
 2724 0546 2001     		.2byte	0x120
 2725 0548 76000000 		.4byte	0x76
 2726 054c 9B030000 		.4byte	.LLST21
 2727 0550 08       		.uleb128 0x8
 2728 0551 16000000 		.4byte	.LVL157
 2729 0555 AD0B0000 		.4byte	0xbad
 2730 0559 08       		.uleb128 0x8
 2731 055a 38000000 		.4byte	.LVL159
 2732 055e BA020000 		.4byte	0x2ba
 2733 0562 08       		.uleb128 0x8
 2734 0563 52000000 		.4byte	.LVL160
 2735 0567 970B0000 		.4byte	0xb97
 2736 056b 08       		.uleb128 0x8
 2737 056c 56000000 		.4byte	.LVL161
 2738 0570 A20B0000 		.4byte	0xba2
 2739 0574 08       		.uleb128 0x8
 2740 0575 5A000000 		.4byte	.LVL162
 2741 0579 760B0000 		.4byte	0xb76
 2742 057d 0D       		.uleb128 0xd
 2743 057e 84000000 		.4byte	.LVL167
 2744 0582 F3010000 		.4byte	0x1f3
 2745 0586 0C       		.uleb128 0xc
 2746 0587 01       		.uleb128 0x1
 2747 0588 51       		.byte	0x51
 2748 0589 03       		.uleb128 0x3
 2749 058a F5       		.byte	0xf5
 2750 058b 04       		.uleb128 0x4
 2751 058c 25       		.uleb128 0x25
 2752 058d 0C       		.uleb128 0xc
 2753 058e 01       		.uleb128 0x1
 2754 058f 52       		.byte	0x52
 2755 0590 03       		.uleb128 0x3
 2756 0591 F5       		.byte	0xf5
 2757 0592 07       		.uleb128 0x7
 2758 0593 25       		.uleb128 0x25
 2759 0594 0C       		.uleb128 0xc
 2760 0595 01       		.uleb128 0x1
 2761 0596 53       		.byte	0x53
 2762 0597 03       		.uleb128 0x3
 2763 0598 F5       		.byte	0xf5
 2764 0599 08       		.uleb128 0x8
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccL77S3Y.s 			page 57


 2765 059a 25       		.uleb128 0x25
 2766 059b 00       		.byte	0
 2767 059c 00       		.byte	0
 2768 059d 0F       		.uleb128 0xf
 2769 059e 2A060000 		.4byte	.LASF43
 2770 05a2 01       		.byte	0x1
 2771 05a3 3501     		.2byte	0x135
 2772 05a5 00000000 		.4byte	.LFB75
 2773 05a9 C4000000 		.4byte	.LFE75-.LFB75
 2774 05ad 01       		.uleb128 0x1
 2775 05ae 9C       		.byte	0x9c
 2776 05af 20060000 		.4byte	0x620
 2777 05b3 11       		.uleb128 0x11
 2778 05b4 56060000 		.4byte	.LASF38
 2779 05b8 01       		.byte	0x1
 2780 05b9 3501     		.2byte	0x135
 2781 05bb 25000000 		.4byte	0x25
 2782 05bf AE030000 		.4byte	.LLST22
 2783 05c3 12       		.uleb128 0x12
 2784 05c4 E0030000 		.4byte	.LASF16
 2785 05c8 01       		.byte	0x1
 2786 05c9 3601     		.2byte	0x136
 2787 05cb 76000000 		.4byte	0x76
 2788 05cf D1030000 		.4byte	.LLST23
 2789 05d3 08       		.uleb128 0x8
 2790 05d4 16000000 		.4byte	.LVL171
 2791 05d8 AD0B0000 		.4byte	0xbad
 2792 05dc 08       		.uleb128 0x8
 2793 05dd 38000000 		.4byte	.LVL173
 2794 05e1 BA020000 		.4byte	0x2ba
 2795 05e5 08       		.uleb128 0x8
 2796 05e6 4E000000 		.4byte	.LVL174
 2797 05ea 970B0000 		.4byte	0xb97
 2798 05ee 08       		.uleb128 0x8
 2799 05ef 52000000 		.4byte	.LVL175
 2800 05f3 A20B0000 		.4byte	0xba2
 2801 05f7 08       		.uleb128 0x8
 2802 05f8 56000000 		.4byte	.LVL176
 2803 05fc 760B0000 		.4byte	0xb76
 2804 0600 0D       		.uleb128 0xd
 2805 0601 7E000000 		.4byte	.LVL181
 2806 0605 F3010000 		.4byte	0x1f3
 2807 0609 0C       		.uleb128 0xc
 2808 060a 01       		.uleb128 0x1
 2809 060b 51       		.byte	0x51
 2810 060c 03       		.uleb128 0x3
 2811 060d F5       		.byte	0xf5
 2812 060e 04       		.uleb128 0x4
 2813 060f 25       		.uleb128 0x25
 2814 0610 0C       		.uleb128 0xc
 2815 0611 01       		.uleb128 0x1
 2816 0612 52       		.byte	0x52
 2817 0613 03       		.uleb128 0x3
 2818 0614 F5       		.byte	0xf5
 2819 0615 07       		.uleb128 0x7
 2820 0616 25       		.uleb128 0x25
 2821 0617 0C       		.uleb128 0xc
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccL77S3Y.s 			page 58


 2822 0618 01       		.uleb128 0x1
 2823 0619 53       		.byte	0x53
 2824 061a 03       		.uleb128 0x3
 2825 061b F5       		.byte	0xf5
 2826 061c 08       		.uleb128 0x8
 2827 061d 25       		.uleb128 0x25
 2828 061e 00       		.byte	0
 2829 061f 00       		.byte	0
 2830 0620 0F       		.uleb128 0xf
 2831 0621 FE060000 		.4byte	.LASF44
 2832 0625 01       		.byte	0x1
 2833 0626 4E01     		.2byte	0x14e
 2834 0628 00000000 		.4byte	.LFB76
 2835 062c 78000000 		.4byte	.LFE76-.LFB76
 2836 0630 01       		.uleb128 0x1
 2837 0631 9C       		.byte	0x9c
 2838 0632 B5060000 		.4byte	0x6b5
 2839 0636 11       		.uleb128 0x11
 2840 0637 56060000 		.4byte	.LASF38
 2841 063b 01       		.byte	0x1
 2842 063c 4E01     		.2byte	0x14e
 2843 063e 76000000 		.4byte	0x76
 2844 0642 E4030000 		.4byte	.LLST24
 2845 0646 11       		.uleb128 0x11
 2846 0647 35030000 		.4byte	.LASF45
 2847 064b 01       		.byte	0x1
 2848 064c 4E01     		.2byte	0x14e
 2849 064e 76000000 		.4byte	0x76
 2850 0652 10040000 		.4byte	.LLST25
 2851 0656 12       		.uleb128 0x12
 2852 0657 85000000 		.4byte	.LASF33
 2853 065b 01       		.byte	0x1
 2854 065c 5001     		.2byte	0x150
 2855 065e 25000000 		.4byte	0x25
 2856 0662 3C040000 		.4byte	.LLST26
 2857 0666 0B       		.uleb128 0xb
 2858 0667 14000000 		.4byte	.LVL185
 2859 066b 9D050000 		.4byte	0x59d
 2860 066f 7B060000 		.4byte	0x67b
 2861 0673 0C       		.uleb128 0xc
 2862 0674 01       		.uleb128 0x1
 2863 0675 50       		.byte	0x50
 2864 0676 03       		.uleb128 0x3
 2865 0677 F5       		.byte	0xf5
 2866 0678 08       		.uleb128 0x8
 2867 0679 25       		.uleb128 0x25
 2868 067a 00       		.byte	0
 2869 067b 08       		.uleb128 0x8
 2870 067c 36000000 		.4byte	.LVL191
 2871 0680 130B0000 		.4byte	0xb13
 2872 0684 08       		.uleb128 0x8
 2873 0685 4A000000 		.4byte	.LVL194
 2874 0689 28040000 		.4byte	0x428
 2875 068d 0B       		.uleb128 0xb
 2876 068e 50000000 		.4byte	.LVL195
 2877 0692 1A050000 		.4byte	0x51a
 2878 0696 A2060000 		.4byte	0x6a2
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccL77S3Y.s 			page 59


 2879 069a 0C       		.uleb128 0xc
 2880 069b 01       		.uleb128 0x1
 2881 069c 50       		.byte	0x50
 2882 069d 03       		.uleb128 0x3
 2883 069e F5       		.byte	0xf5
 2884 069f 08       		.uleb128 0x8
 2885 06a0 25       		.uleb128 0x25
 2886 06a1 00       		.byte	0
 2887 06a2 08       		.uleb128 0x8
 2888 06a3 58000000 		.4byte	.LVL196
 2889 06a7 B90B0000 		.4byte	0xbb9
 2890 06ab 08       		.uleb128 0x8
 2891 06ac 6C000000 		.4byte	.LVL199
 2892 06b0 38030000 		.4byte	0x338
 2893 06b4 00       		.byte	0
 2894 06b5 0F       		.uleb128 0xf
 2895 06b6 7D050000 		.4byte	.LASF46
 2896 06ba 01       		.byte	0x1
 2897 06bb 5A01     		.2byte	0x15a
 2898 06bd 00000000 		.4byte	.LFB77
 2899 06c1 78000000 		.4byte	.LFE77-.LFB77
 2900 06c5 01       		.uleb128 0x1
 2901 06c6 9C       		.byte	0x9c
 2902 06c7 4A070000 		.4byte	0x74a
 2903 06cb 11       		.uleb128 0x11
 2904 06cc 56060000 		.4byte	.LASF38
 2905 06d0 01       		.byte	0x1
 2906 06d1 5A01     		.2byte	0x15a
 2907 06d3 76000000 		.4byte	0x76
 2908 06d7 64040000 		.4byte	.LLST27
 2909 06db 11       		.uleb128 0x11
 2910 06dc 35030000 		.4byte	.LASF45
 2911 06e0 01       		.byte	0x1
 2912 06e1 5A01     		.2byte	0x15a
 2913 06e3 76000000 		.4byte	0x76
 2914 06e7 90040000 		.4byte	.LLST28
 2915 06eb 12       		.uleb128 0x12
 2916 06ec 85000000 		.4byte	.LASF33
 2917 06f0 01       		.byte	0x1
 2918 06f1 5C01     		.2byte	0x15c
 2919 06f3 25000000 		.4byte	0x25
 2920 06f7 BC040000 		.4byte	.LLST29
 2921 06fb 0B       		.uleb128 0xb
 2922 06fc 14000000 		.4byte	.LVL203
 2923 0700 1A050000 		.4byte	0x51a
 2924 0704 10070000 		.4byte	0x710
 2925 0708 0C       		.uleb128 0xc
 2926 0709 01       		.uleb128 0x1
 2927 070a 50       		.byte	0x50
 2928 070b 03       		.uleb128 0x3
 2929 070c F5       		.byte	0xf5
 2930 070d 08       		.uleb128 0x8
 2931 070e 25       		.uleb128 0x25
 2932 070f 00       		.byte	0
 2933 0710 08       		.uleb128 0x8
 2934 0711 36000000 		.4byte	.LVL209
 2935 0715 130B0000 		.4byte	0xb13
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccL77S3Y.s 			page 60


 2936 0719 08       		.uleb128 0x8
 2937 071a 4A000000 		.4byte	.LVL212
 2938 071e 28040000 		.4byte	0x428
 2939 0722 0B       		.uleb128 0xb
 2940 0723 50000000 		.4byte	.LVL213
 2941 0727 9D050000 		.4byte	0x59d
 2942 072b 37070000 		.4byte	0x737
 2943 072f 0C       		.uleb128 0xc
 2944 0730 01       		.uleb128 0x1
 2945 0731 50       		.byte	0x50
 2946 0732 03       		.uleb128 0x3
 2947 0733 F5       		.byte	0xf5
 2948 0734 08       		.uleb128 0x8
 2949 0735 25       		.uleb128 0x25
 2950 0736 00       		.byte	0
 2951 0737 08       		.uleb128 0x8
 2952 0738 58000000 		.4byte	.LVL214
 2953 073c B90B0000 		.4byte	0xbb9
 2954 0740 08       		.uleb128 0x8
 2955 0741 6C000000 		.4byte	.LVL217
 2956 0745 38030000 		.4byte	0x338
 2957 0749 00       		.byte	0
 2958 074a 0F       		.uleb128 0xf
 2959 074b E7030000 		.4byte	.LASF47
 2960 074f 01       		.byte	0x1
 2961 0750 6601     		.2byte	0x166
 2962 0752 00000000 		.4byte	.LFB78
 2963 0756 64000000 		.4byte	.LFE78-.LFB78
 2964 075a 01       		.uleb128 0x1
 2965 075b 9C       		.byte	0x9c
 2966 075c 94070000 		.4byte	0x794
 2967 0760 11       		.uleb128 0x11
 2968 0761 8F040000 		.4byte	.LASF48
 2969 0765 01       		.byte	0x1
 2970 0766 6601     		.2byte	0x166
 2971 0768 94070000 		.4byte	0x794
 2972 076c E4040000 		.4byte	.LLST30
 2973 0770 0A       		.uleb128 0xa
 2974 0771 20000000 		.4byte	.LBB3
 2975 0775 44000000 		.4byte	.LBE3-.LBB3
 2976 0779 12       		.uleb128 0x12
 2977 077a D8000000 		.4byte	.LASF49
 2978 077e 01       		.byte	0x1
 2979 077f 6C01     		.2byte	0x16c
 2980 0781 25000000 		.4byte	0x25
 2981 0785 10050000 		.4byte	.LLST31
 2982 0789 08       		.uleb128 0x8
 2983 078a 52000000 		.4byte	.LVL226
 2984 078e 1A050000 		.4byte	0x51a
 2985 0792 00       		.byte	0
 2986 0793 00       		.byte	0
 2987 0794 13       		.uleb128 0x13
 2988 0795 04       		.byte	0x4
 2989 0796 76000000 		.4byte	0x76
 2990 079a 14       		.uleb128 0x14
 2991 079b 44040000 		.4byte	.LASF50
 2992 079f 01       		.byte	0x1
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccL77S3Y.s 			page 61


 2993 07a0 7501     		.2byte	0x175
 2994 07a2 00000000 		.4byte	.LFB79
 2995 07a6 40000000 		.4byte	.LFE79-.LFB79
 2996 07aa 01       		.uleb128 0x1
 2997 07ab 9C       		.byte	0x9c
 2998 07ac 09080000 		.4byte	0x809
 2999 07b0 0B       		.uleb128 0xb
 3000 07b1 08000000 		.4byte	.LVL228
 3001 07b5 4A0B0000 		.4byte	0xb4a
 3002 07b9 C3070000 		.4byte	0x7c3
 3003 07bd 0C       		.uleb128 0xc
 3004 07be 01       		.uleb128 0x1
 3005 07bf 50       		.byte	0x50
 3006 07c0 01       		.uleb128 0x1
 3007 07c1 30       		.byte	0x30
 3008 07c2 00       		.byte	0
 3009 07c3 0B       		.uleb128 0xb
 3010 07c4 0E000000 		.4byte	.LVL229
 3011 07c8 600B0000 		.4byte	0xb60
 3012 07cc D6070000 		.4byte	0x7d6
 3013 07d0 0C       		.uleb128 0xc
 3014 07d1 01       		.uleb128 0x1
 3015 07d2 50       		.byte	0x50
 3016 07d3 01       		.uleb128 0x1
 3017 07d4 30       		.byte	0x30
 3018 07d5 00       		.byte	0
 3019 07d6 08       		.uleb128 0x8
 3020 07d7 12000000 		.4byte	.LVL230
 3021 07db C40B0000 		.4byte	0xbc4
 3022 07df 0B       		.uleb128 0xb
 3023 07e0 22000000 		.4byte	.LVL231
 3024 07e4 CF0B0000 		.4byte	0xbcf
 3025 07e8 F6070000 		.4byte	0x7f6
 3026 07ec 0C       		.uleb128 0xc
 3027 07ed 01       		.uleb128 0x1
 3028 07ee 50       		.byte	0x50
 3029 07ef 05       		.uleb128 0x5
 3030 07f0 03       		.byte	0x3
 3031 07f1 00000000 		.4byte	.LC0
 3032 07f5 00       		.byte	0
 3033 07f6 08       		.uleb128 0x8
 3034 07f7 2A000000 		.4byte	.LVL232
 3035 07fb 6C010000 		.4byte	0x16c
 3036 07ff 08       		.uleb128 0x8
 3037 0800 2E000000 		.4byte	.LVL233
 3038 0804 DA0B0000 		.4byte	0xbda
 3039 0808 00       		.byte	0
 3040 0809 14       		.uleb128 0x14
 3041 080a 94000000 		.4byte	.LASF51
 3042 080e 01       		.byte	0x1
 3043 080f 8101     		.2byte	0x181
 3044 0811 00000000 		.4byte	.LFB80
 3045 0815 40000000 		.4byte	.LFE80-.LFB80
 3046 0819 01       		.uleb128 0x1
 3047 081a 9C       		.byte	0x9c
 3048 081b 78080000 		.4byte	0x878
 3049 081f 0B       		.uleb128 0xb
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccL77S3Y.s 			page 62


 3050 0820 08000000 		.4byte	.LVL234
 3051 0824 550B0000 		.4byte	0xb55
 3052 0828 32080000 		.4byte	0x832
 3053 082c 0C       		.uleb128 0xc
 3054 082d 01       		.uleb128 0x1
 3055 082e 50       		.byte	0x50
 3056 082f 01       		.uleb128 0x1
 3057 0830 30       		.byte	0x30
 3058 0831 00       		.byte	0
 3059 0832 0B       		.uleb128 0xb
 3060 0833 0E000000 		.4byte	.LVL235
 3061 0837 6B0B0000 		.4byte	0xb6b
 3062 083b 45080000 		.4byte	0x845
 3063 083f 0C       		.uleb128 0xc
 3064 0840 01       		.uleb128 0x1
 3065 0841 50       		.byte	0x50
 3066 0842 01       		.uleb128 0x1
 3067 0843 30       		.byte	0x30
 3068 0844 00       		.byte	0
 3069 0845 08       		.uleb128 0x8
 3070 0846 12000000 		.4byte	.LVL236
 3071 084a E50B0000 		.4byte	0xbe5
 3072 084e 0B       		.uleb128 0xb
 3073 084f 22000000 		.4byte	.LVL237
 3074 0853 CF0B0000 		.4byte	0xbcf
 3075 0857 65080000 		.4byte	0x865
 3076 085b 0C       		.uleb128 0xc
 3077 085c 01       		.uleb128 0x1
 3078 085d 50       		.byte	0x50
 3079 085e 05       		.uleb128 0x5
 3080 085f 03       		.byte	0x3
 3081 0860 18000000 		.4byte	.LC1
 3082 0864 00       		.byte	0
 3083 0865 08       		.uleb128 0x8
 3084 0866 2A000000 		.4byte	.LVL238
 3085 086a 6C010000 		.4byte	0x16c
 3086 086e 08       		.uleb128 0x8
 3087 086f 2E000000 		.4byte	.LVL239
 3088 0873 F00B0000 		.4byte	0xbf0
 3089 0877 00       		.byte	0
 3090 0878 14       		.uleb128 0x14
 3091 0879 E1040000 		.4byte	.LASF52
 3092 087d 01       		.byte	0x1
 3093 087e 8D01     		.2byte	0x18d
 3094 0880 00000000 		.4byte	.LFB81
 3095 0884 10000000 		.4byte	.LFE81-.LFB81
 3096 0888 01       		.uleb128 0x1
 3097 0889 9C       		.byte	0x9c
 3098 088a D2080000 		.4byte	0x8d2
 3099 088e 11       		.uleb128 0x11
 3100 088f E0000000 		.4byte	.LASF53
 3101 0893 01       		.byte	0x1
 3102 0894 8D01     		.2byte	0x18d
 3103 0896 76000000 		.4byte	0x76
 3104 089a 23050000 		.4byte	.LLST32
 3105 089e 11       		.uleb128 0x11
 3106 089f 14000000 		.4byte	.LASF54
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccL77S3Y.s 			page 63


 3107 08a3 01       		.byte	0x1
 3108 08a4 8D01     		.2byte	0x18d
 3109 08a6 76000000 		.4byte	0x76
 3110 08aa 44050000 		.4byte	.LLST33
 3111 08ae 11       		.uleb128 0x11
 3112 08af 3D060000 		.4byte	.LASF55
 3113 08b3 01       		.byte	0x1
 3114 08b4 8D01     		.2byte	0x18d
 3115 08b6 76000000 		.4byte	0x76
 3116 08ba 65050000 		.4byte	.LLST34
 3117 08be 0D       		.uleb128 0xd
 3118 08bf 08000000 		.4byte	.LVL242
 3119 08c3 CF0B0000 		.4byte	0xbcf
 3120 08c7 0C       		.uleb128 0xc
 3121 08c8 01       		.uleb128 0x1
 3122 08c9 50       		.byte	0x50
 3123 08ca 05       		.uleb128 0x5
 3124 08cb 03       		.byte	0x3
 3125 08cc 30000000 		.4byte	.LC2
 3126 08d0 00       		.byte	0
 3127 08d1 00       		.byte	0
 3128 08d2 15       		.uleb128 0x15
 3129 08d3 68000000 		.4byte	.LASF99
 3130 08d7 01       		.byte	0x1
 3131 08d8 9301     		.2byte	0x193
 3132 08da 00000000 		.4byte	.LFB82
 3133 08de 4C000000 		.4byte	.LFE82-.LFB82
 3134 08e2 01       		.uleb128 0x1
 3135 08e3 9C       		.byte	0x9c
 3136 08e4 3B090000 		.4byte	0x93b
 3137 08e8 12       		.uleb128 0x12
 3138 08e9 4A060000 		.4byte	.LASF56
 3139 08ed 01       		.byte	0x1
 3140 08ee 9801     		.2byte	0x198
 3141 08f0 76000000 		.4byte	0x76
 3142 08f4 86050000 		.4byte	.LLST35
 3143 08f8 16       		.uleb128 0x16
 3144 08f9 61627300 		.ascii	"abs\000"
 3145 08fd 10       		.byte	0x10
 3146 08fe 00       		.byte	0
 3147 08ff 76000000 		.4byte	0x76
 3148 0903 09090000 		.4byte	0x909
 3149 0907 17       		.uleb128 0x17
 3150 0908 00       		.byte	0
 3151 0909 0B       		.uleb128 0xb
 3152 090a 0C000000 		.4byte	.LVL243
 3153 090e 78080000 		.4byte	0x878
 3154 0912 28090000 		.4byte	0x928
 3155 0916 0C       		.uleb128 0xc
 3156 0917 01       		.uleb128 0x1
 3157 0918 50       		.byte	0x50
 3158 0919 02       		.uleb128 0x2
 3159 091a 08       		.byte	0x8
 3160 091b 3C       		.byte	0x3c
 3161 091c 0C       		.uleb128 0xc
 3162 091d 01       		.uleb128 0x1
 3163 091e 51       		.byte	0x51
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccL77S3Y.s 			page 64


 3164 091f 01       		.uleb128 0x1
 3165 0920 44       		.byte	0x44
 3166 0921 0C       		.uleb128 0xc
 3167 0922 01       		.uleb128 0x1
 3168 0923 52       		.byte	0x52
 3169 0924 02       		.uleb128 0x2
 3170 0925 08       		.byte	0x8
 3171 0926 B4       		.byte	0xb4
 3172 0927 00       		.byte	0
 3173 0928 08       		.uleb128 0x8
 3174 0929 10000000 		.4byte	.LVL244
 3175 092d FB0B0000 		.4byte	0xbfb
 3176 0931 08       		.uleb128 0x8
 3177 0932 22000000 		.4byte	.LVL247
 3178 0936 060C0000 		.4byte	0xc06
 3179 093a 00       		.byte	0
 3180 093b 18       		.uleb128 0x18
 3181 093c 46050000 		.4byte	.LASF57
 3182 0940 04       		.byte	0x4
 3183 0941 1207     		.2byte	0x712
 3184 0943 47090000 		.4byte	0x947
 3185 0947 19       		.uleb128 0x19
 3186 0948 84000000 		.4byte	0x84
 3187 094c 1A       		.uleb128 0x1a
 3188 094d 25000000 		.4byte	0x25
 3189 0951 5C090000 		.4byte	0x95c
 3190 0955 1B       		.uleb128 0x1b
 3191 0956 9D000000 		.4byte	0x9d
 3192 095a 04       		.byte	0x4
 3193 095b 00       		.byte	0
 3194 095c 1C       		.uleb128 0x1c
 3195 095d 1B020000 		.4byte	.LASF58
 3196 0961 05       		.byte	0x5
 3197 0962 88       		.byte	0x88
 3198 0963 4C090000 		.4byte	0x94c
 3199 0967 1D       		.uleb128 0x1d
 3200 0968 30040000 		.4byte	.LASF59
 3201 096c 06       		.byte	0x6
 3202 096d 1D       		.byte	0x1d
 3203 096e 76000000 		.4byte	0x76
 3204 0972 05       		.uleb128 0x5
 3205 0973 03       		.byte	0x3
 3206 0974 00000000 		.4byte	driveStraightEnable
 3207 0978 1D       		.uleb128 0x1d
 3208 0979 FE020000 		.4byte	.LASF60
 3209 097d 06       		.byte	0x6
 3210 097e 1F       		.byte	0x1f
 3211 097f 76000000 		.4byte	0x76
 3212 0983 05       		.uleb128 0x5
 3213 0984 03       		.byte	0x3
 3214 0985 00000000 		.4byte	currentPuckRackScanningIndex
 3215 0989 1A       		.uleb128 0x1a
 3216 098a 76000000 		.4byte	0x76
 3217 098e 99090000 		.4byte	0x999
 3218 0992 1B       		.uleb128 0x1b
 3219 0993 9D000000 		.4byte	0x9d
 3220 0997 04       		.byte	0x4
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccL77S3Y.s 			page 65


 3221 0998 00       		.byte	0
 3222 0999 1D       		.uleb128 0x1d
 3223 099a B0050000 		.4byte	.LASF61
 3224 099e 06       		.byte	0x6
 3225 099f 20       		.byte	0x20
 3226 09a0 89090000 		.4byte	0x989
 3227 09a4 05       		.uleb128 0x5
 3228 09a5 03       		.byte	0x3
 3229 09a6 00000000 		.4byte	puckRackColours
 3230 09aa 1D       		.uleb128 0x1d
 3231 09ab FF000000 		.4byte	.LASF62
 3232 09af 06       		.byte	0x6
 3233 09b0 21       		.byte	0x21
 3234 09b1 89090000 		.4byte	0x989
 3235 09b5 05       		.uleb128 0x5
 3236 09b6 03       		.byte	0x3
 3237 09b7 00000000 		.4byte	puckRackOffsetsFromWest
 3238 09bb 1D       		.uleb128 0x1d
 3239 09bc 14040000 		.4byte	.LASF63
 3240 09c0 06       		.byte	0x6
 3241 09c1 22       		.byte	0x22
 3242 09c2 76000000 		.4byte	0x76
 3243 09c6 05       		.uleb128 0x5
 3244 09c7 03       		.byte	0x3
 3245 09c8 00000000 		.4byte	sweeping
 3246 09cc 1A       		.uleb128 0x1a
 3247 09cd 25000000 		.4byte	0x25
 3248 09d1 DC090000 		.4byte	0x9dc
 3249 09d5 1B       		.uleb128 0x1b
 3250 09d6 9D000000 		.4byte	0x9d
 3251 09da 03       		.byte	0x3
 3252 09db 00       		.byte	0
 3253 09dc 1D       		.uleb128 0x1d
 3254 09dd 7B030000 		.4byte	.LASF64
 3255 09e1 06       		.byte	0x6
 3256 09e2 23       		.byte	0x23
 3257 09e3 CC090000 		.4byte	0x9cc
 3258 09e7 05       		.uleb128 0x5
 3259 09e8 03       		.byte	0x3
 3260 09e9 00000000 		.4byte	block_edge_location
 3261 09ed 1D       		.uleb128 0x1d
 3262 09ee ED020000 		.4byte	.LASF65
 3263 09f2 05       		.byte	0x5
 3264 09f3 7A       		.byte	0x7a
 3265 09f4 25000000 		.4byte	0x25
 3266 09f8 05       		.uleb128 0x5
 3267 09f9 03       		.byte	0x3
 3268 09fa 00000000 		.4byte	puckPileLocation
 3269 09fe 1D       		.uleb128 0x1d
 3270 09ff B8000000 		.4byte	.LASF17
 3271 0a03 07       		.byte	0x7
 3272 0a04 3D       		.byte	0x3d
 3273 0a05 41000000 		.4byte	0x41
 3274 0a09 05       		.uleb128 0x5
 3275 0a0a 03       		.byte	0x3
 3276 0a0b 00000000 		.4byte	drivingForwardFlag
 3277 0a0f 1D       		.uleb128 0x1d
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccL77S3Y.s 			page 66


 3278 0a10 D9020000 		.4byte	.LASF18
 3279 0a14 07       		.byte	0x7
 3280 0a15 3E       		.byte	0x3e
 3281 0a16 41000000 		.4byte	0x41
 3282 0a1a 05       		.uleb128 0x5
 3283 0a1b 03       		.byte	0x3
 3284 0a1c 00000000 		.4byte	drivingBackwardFlag
 3285 0a20 1D       		.uleb128 0x1d
 3286 0a21 75000000 		.4byte	.LASF21
 3287 0a25 07       		.byte	0x7
 3288 0a26 3F       		.byte	0x3f
 3289 0a27 41000000 		.4byte	0x41
 3290 0a2b 05       		.uleb128 0x5
 3291 0a2c 03       		.byte	0x3
 3292 0a2d 00000000 		.4byte	turningLeftFlag
 3293 0a31 1D       		.uleb128 0x1d
 3294 0a32 D9010000 		.4byte	.LASF22
 3295 0a36 07       		.byte	0x7
 3296 0a37 40       		.byte	0x40
 3297 0a38 41000000 		.4byte	0x41
 3298 0a3c 05       		.uleb128 0x5
 3299 0a3d 03       		.byte	0x3
 3300 0a3e 00000000 		.4byte	turningRightFlag
 3301 0a42 1D       		.uleb128 0x1d
 3302 0a43 11070000 		.4byte	.LASF66
 3303 0a47 06       		.byte	0x6
 3304 0a48 2B       		.byte	0x2b
 3305 0a49 76000000 		.4byte	0x76
 3306 0a4d 05       		.uleb128 0x5
 3307 0a4e 03       		.byte	0x3
 3308 0a4f 00000000 		.4byte	initialisation
 3309 0a53 1A       		.uleb128 0x1a
 3310 0a54 8F000000 		.4byte	0x8f
 3311 0a58 630A0000 		.4byte	0xa63
 3312 0a5c 1B       		.uleb128 0x1b
 3313 0a5d 9D000000 		.4byte	0x9d
 3314 0a61 1F       		.byte	0x1f
 3315 0a62 00       		.byte	0
 3316 0a63 1D       		.uleb128 0x1d
 3317 0a64 43060000 		.4byte	.LASF67
 3318 0a68 07       		.byte	0x7
 3319 0a69 48       		.byte	0x48
 3320 0a6a 530A0000 		.4byte	0xa53
 3321 0a6e 05       		.uleb128 0x5
 3322 0a6f 03       		.byte	0x3
 3323 0a70 00000000 		.4byte	output
 3324 0a74 1C       		.uleb128 0x1c
 3325 0a75 9F040000 		.4byte	.LASF28
 3326 0a79 07       		.byte	0x7
 3327 0a7a 2D       		.byte	0x2d
 3328 0a7b 76000000 		.4byte	0x76
 3329 0a7f 1C       		.uleb128 0x1c
 3330 0a80 22040000 		.4byte	.LASF29
 3331 0a84 07       		.byte	0x7
 3332 0a85 2E       		.byte	0x2e
 3333 0a86 76000000 		.4byte	0x76
 3334 0a8a 1C       		.uleb128 0x1c
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccL77S3Y.s 			page 67


 3335 0a8b 0B070000 		.4byte	.LASF30
 3336 0a8f 07       		.byte	0x7
 3337 0a90 2F       		.byte	0x2f
 3338 0a91 76000000 		.4byte	0x76
 3339 0a95 1C       		.uleb128 0x1c
 3340 0a96 50060000 		.4byte	.LASF31
 3341 0a9a 07       		.byte	0x7
 3342 0a9b 30       		.byte	0x30
 3343 0a9c 76000000 		.4byte	0x76
 3344 0aa0 1C       		.uleb128 0x1c
 3345 0aa1 B1010000 		.4byte	.LASF68
 3346 0aa5 07       		.byte	0x7
 3347 0aa6 2B       		.byte	0x2b
 3348 0aa7 41000000 		.4byte	0x41
 3349 0aab 1C       		.uleb128 0x1c
 3350 0aac 8B050000 		.4byte	.LASF69
 3351 0ab0 07       		.byte	0x7
 3352 0ab1 2C       		.byte	0x2c
 3353 0ab2 41000000 		.4byte	0x41
 3354 0ab6 1C       		.uleb128 0x1c
 3355 0ab7 EB000000 		.4byte	.LASF70
 3356 0abb 07       		.byte	0x7
 3357 0abc 31       		.byte	0x31
 3358 0abd 76000000 		.4byte	0x76
 3359 0ac1 1C       		.uleb128 0x1c
 3360 0ac2 00000000 		.4byte	.LASF71
 3361 0ac6 07       		.byte	0x7
 3362 0ac7 32       		.byte	0x32
 3363 0ac8 76000000 		.4byte	0x76
 3364 0acc 1A       		.uleb128 0x1a
 3365 0acd 25000000 		.4byte	0x25
 3366 0ad1 DC0A0000 		.4byte	0xadc
 3367 0ad5 1B       		.uleb128 0x1b
 3368 0ad6 9D000000 		.4byte	0x9d
 3369 0ada 01       		.byte	0x1
 3370 0adb 00       		.byte	0
 3371 0adc 1C       		.uleb128 0x1c
 3372 0add A8000000 		.4byte	.LASF72
 3373 0ae1 07       		.byte	0x7
 3374 0ae2 27       		.byte	0x27
 3375 0ae3 CC0A0000 		.4byte	0xacc
 3376 0ae7 1C       		.uleb128 0x1c
 3377 0ae8 EB060000 		.4byte	.LASF73
 3378 0aec 08       		.byte	0x8
 3379 0aed 10       		.byte	0x10
 3380 0aee 76000000 		.4byte	0x76
 3381 0af2 1C       		.uleb128 0x1c
 3382 0af3 BE010000 		.4byte	.LASF74
 3383 0af7 07       		.byte	0x7
 3384 0af8 36       		.byte	0x36
 3385 0af9 CC090000 		.4byte	0x9cc
 3386 0afd 1C       		.uleb128 0x1c
 3387 0afe 1A060000 		.4byte	.LASF75
 3388 0b02 07       		.byte	0x7
 3389 0b03 43       		.byte	0x43
 3390 0b04 41000000 		.4byte	0x41
 3391 0b08 1E       		.uleb128 0x1e
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccL77S3Y.s 			page 68


 3392 0b09 636F7300 		.ascii	"cos\000"
 3393 0b0d 636F7300 		.ascii	"cos\000"
 3394 0b11 09       		.byte	0x9
 3395 0b12 6E       		.byte	0x6e
 3396 0b13 1E       		.uleb128 0x1e
 3397 0b14 73696E00 		.ascii	"sin\000"
 3398 0b18 73696E00 		.ascii	"sin\000"
 3399 0b1c 09       		.byte	0x9
 3400 0b1d 6F       		.byte	0x6f
 3401 0b1e 1F       		.uleb128 0x1f
 3402 0b1f 38070000 		.4byte	.LASF76
 3403 0b23 38070000 		.4byte	.LASF76
 3404 0b27 0A       		.byte	0xa
 3405 0b28 5D       		.byte	0x5d
 3406 0b29 1F       		.uleb128 0x1f
 3407 0b2a BD030000 		.4byte	.LASF77
 3408 0b2e BD030000 		.4byte	.LASF77
 3409 0b32 0B       		.byte	0xb
 3410 0b33 5D       		.byte	0x5d
 3411 0b34 1F       		.uleb128 0x1f
 3412 0b35 8D010000 		.4byte	.LASF78
 3413 0b39 8D010000 		.4byte	.LASF78
 3414 0b3d 0A       		.byte	0xa
 3415 0b3e 5A       		.byte	0x5a
 3416 0b3f 1F       		.uleb128 0x1f
 3417 0b40 EE040000 		.4byte	.LASF79
 3418 0b44 EE040000 		.4byte	.LASF79
 3419 0b48 0B       		.byte	0xb
 3420 0b49 5A       		.byte	0x5a
 3421 0b4a 1F       		.uleb128 0x1f
 3422 0b4b 53010000 		.4byte	.LASF80
 3423 0b4f 53010000 		.4byte	.LASF80
 3424 0b53 0C       		.byte	0xc
 3425 0b54 C7       		.byte	0xc7
 3426 0b55 1F       		.uleb128 0x1f
 3427 0b56 3E020000 		.4byte	.LASF81
 3428 0b5a 3E020000 		.4byte	.LASF81
 3429 0b5e 0D       		.byte	0xd
 3430 0b5f C7       		.byte	0xc7
 3431 0b60 1F       		.uleb128 0x1f
 3432 0b61 70010000 		.4byte	.LASF82
 3433 0b65 70010000 		.4byte	.LASF82
 3434 0b69 0C       		.byte	0xc
 3435 0b6a CA       		.byte	0xca
 3436 0b6b 1F       		.uleb128 0x1f
 3437 0b6c 5B020000 		.4byte	.LASF83
 3438 0b70 5B020000 		.4byte	.LASF83
 3439 0b74 0D       		.byte	0xd
 3440 0b75 CA       		.byte	0xca
 3441 0b76 1F       		.uleb128 0x1f
 3442 0b77 20070000 		.4byte	.LASF84
 3443 0b7b 20070000 		.4byte	.LASF84
 3444 0b7f 0E       		.byte	0xe
 3445 0b80 5A       		.byte	0x5a
 3446 0b81 1F       		.uleb128 0x1f
 3447 0b82 3D030000 		.4byte	.LASF85
 3448 0b86 3D030000 		.4byte	.LASF85
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccL77S3Y.s 			page 69


 3449 0b8a 0A       		.byte	0xa
 3450 0b8b 5F       		.byte	0x5f
 3451 0b8c 1F       		.uleb128 0x1f
 3452 0b8d 45000000 		.4byte	.LASF86
 3453 0b91 45000000 		.4byte	.LASF86
 3454 0b95 0B       		.byte	0xb
 3455 0b96 5F       		.byte	0x5f
 3456 0b97 1F       		.uleb128 0x1f
 3457 0b98 17010000 		.4byte	.LASF87
 3458 0b9c 17010000 		.4byte	.LASF87
 3459 0ba0 0A       		.byte	0xa
 3460 0ba1 4F       		.byte	0x4f
 3461 0ba2 1F       		.uleb128 0x1f
 3462 0ba3 F0010000 		.4byte	.LASF88
 3463 0ba7 F0010000 		.4byte	.LASF88
 3464 0bab 0B       		.byte	0xb
 3465 0bac 4F       		.byte	0x4f
 3466 0bad 20       		.uleb128 0x20
 3467 0bae 69030000 		.4byte	.LASF89
 3468 0bb2 69030000 		.4byte	.LASF89
 3469 0bb6 09       		.byte	0x9
 3470 0bb7 4B01     		.2byte	0x14b
 3471 0bb9 1E       		.uleb128 0x1e
 3472 0bba 74616E00 		.ascii	"tan\000"
 3473 0bbe 74616E00 		.ascii	"tan\000"
 3474 0bc2 09       		.byte	0x9
 3475 0bc3 70       		.byte	0x70
 3476 0bc4 1F       		.uleb128 0x1f
 3477 0bc5 12050000 		.4byte	.LASF90
 3478 0bc9 12050000 		.4byte	.LASF90
 3479 0bcd 0A       		.byte	0xa
 3480 0bce 50       		.byte	0x50
 3481 0bcf 1F       		.uleb128 0x1f
 3482 0bd0 35050000 		.4byte	.LASF91
 3483 0bd4 35050000 		.4byte	.LASF91
 3484 0bd8 0F       		.byte	0xf
 3485 0bd9 8B       		.byte	0x8b
 3486 0bda 1F       		.uleb128 0x1f
 3487 0bdb B7040000 		.4byte	.LASF92
 3488 0bdf B7040000 		.4byte	.LASF92
 3489 0be3 0A       		.byte	0xa
 3490 0be4 52       		.byte	0x52
 3491 0be5 1F       		.uleb128 0x1f
 3492 0be6 73040000 		.4byte	.LASF93
 3493 0bea 73040000 		.4byte	.LASF93
 3494 0bee 0B       		.byte	0xb
 3495 0bef 50       		.byte	0x50
 3496 0bf0 1F       		.uleb128 0x1f
 3497 0bf1 53050000 		.4byte	.LASF94
 3498 0bf5 53050000 		.4byte	.LASF94
 3499 0bf9 0B       		.byte	0xb
 3500 0bfa 52       		.byte	0x52
 3501 0bfb 1F       		.uleb128 0x1f
 3502 0bfc 0D020000 		.4byte	.LASF95
 3503 0c00 0D020000 		.4byte	.LASF95
 3504 0c04 06       		.byte	0x6
 3505 0c05 15       		.byte	0x15
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccL77S3Y.s 			page 70


 3506 0c06 1E       		.uleb128 0x1e
 3507 0c07 61627300 		.ascii	"abs\000"
 3508 0c0b 61627300 		.ascii	"abs\000"
 3509 0c0f 10       		.byte	0x10
 3510 0c10 00       		.byte	0
 3511 0c11 00       		.byte	0
 3512              		.section	.debug_abbrev,"",%progbits
 3513              	.Ldebug_abbrev0:
 3514 0000 01       		.uleb128 0x1
 3515 0001 11       		.uleb128 0x11
 3516 0002 01       		.byte	0x1
 3517 0003 25       		.uleb128 0x25
 3518 0004 0E       		.uleb128 0xe
 3519 0005 13       		.uleb128 0x13
 3520 0006 0B       		.uleb128 0xb
 3521 0007 03       		.uleb128 0x3
 3522 0008 0E       		.uleb128 0xe
 3523 0009 1B       		.uleb128 0x1b
 3524 000a 0E       		.uleb128 0xe
 3525 000b 55       		.uleb128 0x55
 3526 000c 17       		.uleb128 0x17
 3527 000d 11       		.uleb128 0x11
 3528 000e 01       		.uleb128 0x1
 3529 000f 10       		.uleb128 0x10
 3530 0010 17       		.uleb128 0x17
 3531 0011 00       		.byte	0
 3532 0012 00       		.byte	0
 3533 0013 02       		.uleb128 0x2
 3534 0014 24       		.uleb128 0x24
 3535 0015 00       		.byte	0
 3536 0016 0B       		.uleb128 0xb
 3537 0017 0B       		.uleb128 0xb
 3538 0018 3E       		.uleb128 0x3e
 3539 0019 0B       		.uleb128 0xb
 3540 001a 03       		.uleb128 0x3
 3541 001b 0E       		.uleb128 0xe
 3542 001c 00       		.byte	0
 3543 001d 00       		.byte	0
 3544 001e 03       		.uleb128 0x3
 3545 001f 16       		.uleb128 0x16
 3546 0020 00       		.byte	0
 3547 0021 03       		.uleb128 0x3
 3548 0022 0E       		.uleb128 0xe
 3549 0023 3A       		.uleb128 0x3a
 3550 0024 0B       		.uleb128 0xb
 3551 0025 3B       		.uleb128 0x3b
 3552 0026 0B       		.uleb128 0xb
 3553 0027 49       		.uleb128 0x49
 3554 0028 13       		.uleb128 0x13
 3555 0029 00       		.byte	0
 3556 002a 00       		.byte	0
 3557 002b 04       		.uleb128 0x4
 3558 002c 24       		.uleb128 0x24
 3559 002d 00       		.byte	0
 3560 002e 0B       		.uleb128 0xb
 3561 002f 0B       		.uleb128 0xb
 3562 0030 3E       		.uleb128 0x3e
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccL77S3Y.s 			page 71


 3563 0031 0B       		.uleb128 0xb
 3564 0032 03       		.uleb128 0x3
 3565 0033 08       		.uleb128 0x8
 3566 0034 00       		.byte	0
 3567 0035 00       		.byte	0
 3568 0036 05       		.uleb128 0x5
 3569 0037 2E       		.uleb128 0x2e
 3570 0038 01       		.byte	0x1
 3571 0039 3F       		.uleb128 0x3f
 3572 003a 19       		.uleb128 0x19
 3573 003b 03       		.uleb128 0x3
 3574 003c 0E       		.uleb128 0xe
 3575 003d 3A       		.uleb128 0x3a
 3576 003e 0B       		.uleb128 0xb
 3577 003f 3B       		.uleb128 0x3b
 3578 0040 0B       		.uleb128 0xb
 3579 0041 27       		.uleb128 0x27
 3580 0042 19       		.uleb128 0x19
 3581 0043 11       		.uleb128 0x11
 3582 0044 01       		.uleb128 0x1
 3583 0045 12       		.uleb128 0x12
 3584 0046 06       		.uleb128 0x6
 3585 0047 40       		.uleb128 0x40
 3586 0048 18       		.uleb128 0x18
 3587 0049 9642     		.uleb128 0x2116
 3588 004b 19       		.uleb128 0x19
 3589 004c 01       		.uleb128 0x1
 3590 004d 13       		.uleb128 0x13
 3591 004e 00       		.byte	0
 3592 004f 00       		.byte	0
 3593 0050 06       		.uleb128 0x6
 3594 0051 05       		.uleb128 0x5
 3595 0052 00       		.byte	0
 3596 0053 03       		.uleb128 0x3
 3597 0054 0E       		.uleb128 0xe
 3598 0055 3A       		.uleb128 0x3a
 3599 0056 0B       		.uleb128 0xb
 3600 0057 3B       		.uleb128 0x3b
 3601 0058 0B       		.uleb128 0xb
 3602 0059 49       		.uleb128 0x49
 3603 005a 13       		.uleb128 0x13
 3604 005b 02       		.uleb128 0x2
 3605 005c 17       		.uleb128 0x17
 3606 005d 00       		.byte	0
 3607 005e 00       		.byte	0
 3608 005f 07       		.uleb128 0x7
 3609 0060 34       		.uleb128 0x34
 3610 0061 00       		.byte	0
 3611 0062 03       		.uleb128 0x3
 3612 0063 0E       		.uleb128 0xe
 3613 0064 3A       		.uleb128 0x3a
 3614 0065 0B       		.uleb128 0xb
 3615 0066 3B       		.uleb128 0x3b
 3616 0067 0B       		.uleb128 0xb
 3617 0068 49       		.uleb128 0x49
 3618 0069 13       		.uleb128 0x13
 3619 006a 02       		.uleb128 0x2
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccL77S3Y.s 			page 72


 3620 006b 17       		.uleb128 0x17
 3621 006c 00       		.byte	0
 3622 006d 00       		.byte	0
 3623 006e 08       		.uleb128 0x8
 3624 006f 898201   		.uleb128 0x4109
 3625 0072 00       		.byte	0
 3626 0073 11       		.uleb128 0x11
 3627 0074 01       		.uleb128 0x1
 3628 0075 31       		.uleb128 0x31
 3629 0076 13       		.uleb128 0x13
 3630 0077 00       		.byte	0
 3631 0078 00       		.byte	0
 3632 0079 09       		.uleb128 0x9
 3633 007a 2E       		.uleb128 0x2e
 3634 007b 01       		.byte	0x1
 3635 007c 3F       		.uleb128 0x3f
 3636 007d 19       		.uleb128 0x19
 3637 007e 03       		.uleb128 0x3
 3638 007f 0E       		.uleb128 0xe
 3639 0080 3A       		.uleb128 0x3a
 3640 0081 0B       		.uleb128 0xb
 3641 0082 3B       		.uleb128 0x3b
 3642 0083 0B       		.uleb128 0xb
 3643 0084 27       		.uleb128 0x27
 3644 0085 19       		.uleb128 0x19
 3645 0086 11       		.uleb128 0x11
 3646 0087 01       		.uleb128 0x1
 3647 0088 12       		.uleb128 0x12
 3648 0089 06       		.uleb128 0x6
 3649 008a 40       		.uleb128 0x40
 3650 008b 18       		.uleb128 0x18
 3651 008c 9742     		.uleb128 0x2117
 3652 008e 19       		.uleb128 0x19
 3653 008f 01       		.uleb128 0x1
 3654 0090 13       		.uleb128 0x13
 3655 0091 00       		.byte	0
 3656 0092 00       		.byte	0
 3657 0093 0A       		.uleb128 0xa
 3658 0094 0B       		.uleb128 0xb
 3659 0095 01       		.byte	0x1
 3660 0096 11       		.uleb128 0x11
 3661 0097 01       		.uleb128 0x1
 3662 0098 12       		.uleb128 0x12
 3663 0099 06       		.uleb128 0x6
 3664 009a 00       		.byte	0
 3665 009b 00       		.byte	0
 3666 009c 0B       		.uleb128 0xb
 3667 009d 898201   		.uleb128 0x4109
 3668 00a0 01       		.byte	0x1
 3669 00a1 11       		.uleb128 0x11
 3670 00a2 01       		.uleb128 0x1
 3671 00a3 31       		.uleb128 0x31
 3672 00a4 13       		.uleb128 0x13
 3673 00a5 01       		.uleb128 0x1
 3674 00a6 13       		.uleb128 0x13
 3675 00a7 00       		.byte	0
 3676 00a8 00       		.byte	0
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccL77S3Y.s 			page 73


 3677 00a9 0C       		.uleb128 0xc
 3678 00aa 8A8201   		.uleb128 0x410a
 3679 00ad 00       		.byte	0
 3680 00ae 02       		.uleb128 0x2
 3681 00af 18       		.uleb128 0x18
 3682 00b0 9142     		.uleb128 0x2111
 3683 00b2 18       		.uleb128 0x18
 3684 00b3 00       		.byte	0
 3685 00b4 00       		.byte	0
 3686 00b5 0D       		.uleb128 0xd
 3687 00b6 898201   		.uleb128 0x4109
 3688 00b9 01       		.byte	0x1
 3689 00ba 11       		.uleb128 0x11
 3690 00bb 01       		.uleb128 0x1
 3691 00bc 31       		.uleb128 0x31
 3692 00bd 13       		.uleb128 0x13
 3693 00be 00       		.byte	0
 3694 00bf 00       		.byte	0
 3695 00c0 0E       		.uleb128 0xe
 3696 00c1 34       		.uleb128 0x34
 3697 00c2 00       		.byte	0
 3698 00c3 03       		.uleb128 0x3
 3699 00c4 0E       		.uleb128 0xe
 3700 00c5 3A       		.uleb128 0x3a
 3701 00c6 0B       		.uleb128 0xb
 3702 00c7 3B       		.uleb128 0x3b
 3703 00c8 0B       		.uleb128 0xb
 3704 00c9 49       		.uleb128 0x49
 3705 00ca 13       		.uleb128 0x13
 3706 00cb 1C       		.uleb128 0x1c
 3707 00cc 05       		.uleb128 0x5
 3708 00cd 00       		.byte	0
 3709 00ce 00       		.byte	0
 3710 00cf 0F       		.uleb128 0xf
 3711 00d0 2E       		.uleb128 0x2e
 3712 00d1 01       		.byte	0x1
 3713 00d2 3F       		.uleb128 0x3f
 3714 00d3 19       		.uleb128 0x19
 3715 00d4 03       		.uleb128 0x3
 3716 00d5 0E       		.uleb128 0xe
 3717 00d6 3A       		.uleb128 0x3a
 3718 00d7 0B       		.uleb128 0xb
 3719 00d8 3B       		.uleb128 0x3b
 3720 00d9 05       		.uleb128 0x5
 3721 00da 27       		.uleb128 0x27
 3722 00db 19       		.uleb128 0x19
 3723 00dc 11       		.uleb128 0x11
 3724 00dd 01       		.uleb128 0x1
 3725 00de 12       		.uleb128 0x12
 3726 00df 06       		.uleb128 0x6
 3727 00e0 40       		.uleb128 0x40
 3728 00e1 18       		.uleb128 0x18
 3729 00e2 9642     		.uleb128 0x2116
 3730 00e4 19       		.uleb128 0x19
 3731 00e5 01       		.uleb128 0x1
 3732 00e6 13       		.uleb128 0x13
 3733 00e7 00       		.byte	0
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccL77S3Y.s 			page 74


 3734 00e8 00       		.byte	0
 3735 00e9 10       		.uleb128 0x10
 3736 00ea 34       		.uleb128 0x34
 3737 00eb 00       		.byte	0
 3738 00ec 03       		.uleb128 0x3
 3739 00ed 0E       		.uleb128 0xe
 3740 00ee 3A       		.uleb128 0x3a
 3741 00ef 0B       		.uleb128 0xb
 3742 00f0 3B       		.uleb128 0x3b
 3743 00f1 05       		.uleb128 0x5
 3744 00f2 49       		.uleb128 0x49
 3745 00f3 13       		.uleb128 0x13
 3746 00f4 1C       		.uleb128 0x1c
 3747 00f5 05       		.uleb128 0x5
 3748 00f6 00       		.byte	0
 3749 00f7 00       		.byte	0
 3750 00f8 11       		.uleb128 0x11
 3751 00f9 05       		.uleb128 0x5
 3752 00fa 00       		.byte	0
 3753 00fb 03       		.uleb128 0x3
 3754 00fc 0E       		.uleb128 0xe
 3755 00fd 3A       		.uleb128 0x3a
 3756 00fe 0B       		.uleb128 0xb
 3757 00ff 3B       		.uleb128 0x3b
 3758 0100 05       		.uleb128 0x5
 3759 0101 49       		.uleb128 0x49
 3760 0102 13       		.uleb128 0x13
 3761 0103 02       		.uleb128 0x2
 3762 0104 17       		.uleb128 0x17
 3763 0105 00       		.byte	0
 3764 0106 00       		.byte	0
 3765 0107 12       		.uleb128 0x12
 3766 0108 34       		.uleb128 0x34
 3767 0109 00       		.byte	0
 3768 010a 03       		.uleb128 0x3
 3769 010b 0E       		.uleb128 0xe
 3770 010c 3A       		.uleb128 0x3a
 3771 010d 0B       		.uleb128 0xb
 3772 010e 3B       		.uleb128 0x3b
 3773 010f 05       		.uleb128 0x5
 3774 0110 49       		.uleb128 0x49
 3775 0111 13       		.uleb128 0x13
 3776 0112 02       		.uleb128 0x2
 3777 0113 17       		.uleb128 0x17
 3778 0114 00       		.byte	0
 3779 0115 00       		.byte	0
 3780 0116 13       		.uleb128 0x13
 3781 0117 0F       		.uleb128 0xf
 3782 0118 00       		.byte	0
 3783 0119 0B       		.uleb128 0xb
 3784 011a 0B       		.uleb128 0xb
 3785 011b 49       		.uleb128 0x49
 3786 011c 13       		.uleb128 0x13
 3787 011d 00       		.byte	0
 3788 011e 00       		.byte	0
 3789 011f 14       		.uleb128 0x14
 3790 0120 2E       		.uleb128 0x2e
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccL77S3Y.s 			page 75


 3791 0121 01       		.byte	0x1
 3792 0122 3F       		.uleb128 0x3f
 3793 0123 19       		.uleb128 0x19
 3794 0124 03       		.uleb128 0x3
 3795 0125 0E       		.uleb128 0xe
 3796 0126 3A       		.uleb128 0x3a
 3797 0127 0B       		.uleb128 0xb
 3798 0128 3B       		.uleb128 0x3b
 3799 0129 05       		.uleb128 0x5
 3800 012a 27       		.uleb128 0x27
 3801 012b 19       		.uleb128 0x19
 3802 012c 11       		.uleb128 0x11
 3803 012d 01       		.uleb128 0x1
 3804 012e 12       		.uleb128 0x12
 3805 012f 06       		.uleb128 0x6
 3806 0130 40       		.uleb128 0x40
 3807 0131 18       		.uleb128 0x18
 3808 0132 9742     		.uleb128 0x2117
 3809 0134 19       		.uleb128 0x19
 3810 0135 01       		.uleb128 0x1
 3811 0136 13       		.uleb128 0x13
 3812 0137 00       		.byte	0
 3813 0138 00       		.byte	0
 3814 0139 15       		.uleb128 0x15
 3815 013a 2E       		.uleb128 0x2e
 3816 013b 01       		.byte	0x1
 3817 013c 3F       		.uleb128 0x3f
 3818 013d 19       		.uleb128 0x19
 3819 013e 03       		.uleb128 0x3
 3820 013f 0E       		.uleb128 0xe
 3821 0140 3A       		.uleb128 0x3a
 3822 0141 0B       		.uleb128 0xb
 3823 0142 3B       		.uleb128 0x3b
 3824 0143 05       		.uleb128 0x5
 3825 0144 11       		.uleb128 0x11
 3826 0145 01       		.uleb128 0x1
 3827 0146 12       		.uleb128 0x12
 3828 0147 06       		.uleb128 0x6
 3829 0148 40       		.uleb128 0x40
 3830 0149 18       		.uleb128 0x18
 3831 014a 9642     		.uleb128 0x2116
 3832 014c 19       		.uleb128 0x19
 3833 014d 01       		.uleb128 0x1
 3834 014e 13       		.uleb128 0x13
 3835 014f 00       		.byte	0
 3836 0150 00       		.byte	0
 3837 0151 16       		.uleb128 0x16
 3838 0152 2E       		.uleb128 0x2e
 3839 0153 01       		.byte	0x1
 3840 0154 3F       		.uleb128 0x3f
 3841 0155 19       		.uleb128 0x19
 3842 0156 03       		.uleb128 0x3
 3843 0157 08       		.uleb128 0x8
 3844 0158 3A       		.uleb128 0x3a
 3845 0159 0B       		.uleb128 0xb
 3846 015a 3B       		.uleb128 0x3b
 3847 015b 0B       		.uleb128 0xb
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccL77S3Y.s 			page 76


 3848 015c 49       		.uleb128 0x49
 3849 015d 13       		.uleb128 0x13
 3850 015e 3C       		.uleb128 0x3c
 3851 015f 19       		.uleb128 0x19
 3852 0160 01       		.uleb128 0x1
 3853 0161 13       		.uleb128 0x13
 3854 0162 00       		.byte	0
 3855 0163 00       		.byte	0
 3856 0164 17       		.uleb128 0x17
 3857 0165 18       		.uleb128 0x18
 3858 0166 00       		.byte	0
 3859 0167 00       		.byte	0
 3860 0168 00       		.byte	0
 3861 0169 18       		.uleb128 0x18
 3862 016a 34       		.uleb128 0x34
 3863 016b 00       		.byte	0
 3864 016c 03       		.uleb128 0x3
 3865 016d 0E       		.uleb128 0xe
 3866 016e 3A       		.uleb128 0x3a
 3867 016f 0B       		.uleb128 0xb
 3868 0170 3B       		.uleb128 0x3b
 3869 0171 05       		.uleb128 0x5
 3870 0172 49       		.uleb128 0x49
 3871 0173 13       		.uleb128 0x13
 3872 0174 3F       		.uleb128 0x3f
 3873 0175 19       		.uleb128 0x19
 3874 0176 3C       		.uleb128 0x3c
 3875 0177 19       		.uleb128 0x19
 3876 0178 00       		.byte	0
 3877 0179 00       		.byte	0
 3878 017a 19       		.uleb128 0x19
 3879 017b 35       		.uleb128 0x35
 3880 017c 00       		.byte	0
 3881 017d 49       		.uleb128 0x49
 3882 017e 13       		.uleb128 0x13
 3883 017f 00       		.byte	0
 3884 0180 00       		.byte	0
 3885 0181 1A       		.uleb128 0x1a
 3886 0182 01       		.uleb128 0x1
 3887 0183 01       		.byte	0x1
 3888 0184 49       		.uleb128 0x49
 3889 0185 13       		.uleb128 0x13
 3890 0186 01       		.uleb128 0x1
 3891 0187 13       		.uleb128 0x13
 3892 0188 00       		.byte	0
 3893 0189 00       		.byte	0
 3894 018a 1B       		.uleb128 0x1b
 3895 018b 21       		.uleb128 0x21
 3896 018c 00       		.byte	0
 3897 018d 49       		.uleb128 0x49
 3898 018e 13       		.uleb128 0x13
 3899 018f 2F       		.uleb128 0x2f
 3900 0190 0B       		.uleb128 0xb
 3901 0191 00       		.byte	0
 3902 0192 00       		.byte	0
 3903 0193 1C       		.uleb128 0x1c
 3904 0194 34       		.uleb128 0x34
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccL77S3Y.s 			page 77


 3905 0195 00       		.byte	0
 3906 0196 03       		.uleb128 0x3
 3907 0197 0E       		.uleb128 0xe
 3908 0198 3A       		.uleb128 0x3a
 3909 0199 0B       		.uleb128 0xb
 3910 019a 3B       		.uleb128 0x3b
 3911 019b 0B       		.uleb128 0xb
 3912 019c 49       		.uleb128 0x49
 3913 019d 13       		.uleb128 0x13
 3914 019e 3F       		.uleb128 0x3f
 3915 019f 19       		.uleb128 0x19
 3916 01a0 3C       		.uleb128 0x3c
 3917 01a1 19       		.uleb128 0x19
 3918 01a2 00       		.byte	0
 3919 01a3 00       		.byte	0
 3920 01a4 1D       		.uleb128 0x1d
 3921 01a5 34       		.uleb128 0x34
 3922 01a6 00       		.byte	0
 3923 01a7 03       		.uleb128 0x3
 3924 01a8 0E       		.uleb128 0xe
 3925 01a9 3A       		.uleb128 0x3a
 3926 01aa 0B       		.uleb128 0xb
 3927 01ab 3B       		.uleb128 0x3b
 3928 01ac 0B       		.uleb128 0xb
 3929 01ad 49       		.uleb128 0x49
 3930 01ae 13       		.uleb128 0x13
 3931 01af 3F       		.uleb128 0x3f
 3932 01b0 19       		.uleb128 0x19
 3933 01b1 02       		.uleb128 0x2
 3934 01b2 18       		.uleb128 0x18
 3935 01b3 00       		.byte	0
 3936 01b4 00       		.byte	0
 3937 01b5 1E       		.uleb128 0x1e
 3938 01b6 2E       		.uleb128 0x2e
 3939 01b7 00       		.byte	0
 3940 01b8 3F       		.uleb128 0x3f
 3941 01b9 19       		.uleb128 0x19
 3942 01ba 3C       		.uleb128 0x3c
 3943 01bb 19       		.uleb128 0x19
 3944 01bc 6E       		.uleb128 0x6e
 3945 01bd 08       		.uleb128 0x8
 3946 01be 03       		.uleb128 0x3
 3947 01bf 08       		.uleb128 0x8
 3948 01c0 3A       		.uleb128 0x3a
 3949 01c1 0B       		.uleb128 0xb
 3950 01c2 3B       		.uleb128 0x3b
 3951 01c3 0B       		.uleb128 0xb
 3952 01c4 00       		.byte	0
 3953 01c5 00       		.byte	0
 3954 01c6 1F       		.uleb128 0x1f
 3955 01c7 2E       		.uleb128 0x2e
 3956 01c8 00       		.byte	0
 3957 01c9 3F       		.uleb128 0x3f
 3958 01ca 19       		.uleb128 0x19
 3959 01cb 3C       		.uleb128 0x3c
 3960 01cc 19       		.uleb128 0x19
 3961 01cd 6E       		.uleb128 0x6e
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccL77S3Y.s 			page 78


 3962 01ce 0E       		.uleb128 0xe
 3963 01cf 03       		.uleb128 0x3
 3964 01d0 0E       		.uleb128 0xe
 3965 01d1 3A       		.uleb128 0x3a
 3966 01d2 0B       		.uleb128 0xb
 3967 01d3 3B       		.uleb128 0x3b
 3968 01d4 0B       		.uleb128 0xb
 3969 01d5 00       		.byte	0
 3970 01d6 00       		.byte	0
 3971 01d7 20       		.uleb128 0x20
 3972 01d8 2E       		.uleb128 0x2e
 3973 01d9 00       		.byte	0
 3974 01da 3F       		.uleb128 0x3f
 3975 01db 19       		.uleb128 0x19
 3976 01dc 3C       		.uleb128 0x3c
 3977 01dd 19       		.uleb128 0x19
 3978 01de 6E       		.uleb128 0x6e
 3979 01df 0E       		.uleb128 0xe
 3980 01e0 03       		.uleb128 0x3
 3981 01e1 0E       		.uleb128 0xe
 3982 01e2 3A       		.uleb128 0x3a
 3983 01e3 0B       		.uleb128 0xb
 3984 01e4 3B       		.uleb128 0x3b
 3985 01e5 05       		.uleb128 0x5
 3986 01e6 00       		.byte	0
 3987 01e7 00       		.byte	0
 3988 01e8 00       		.byte	0
 3989              		.section	.debug_loc,"",%progbits
 3990              	.Ldebug_loc0:
 3991              	.LLST0:
 3992 0000 00000000 		.4byte	.LVL0
 3993 0004 0E000000 		.4byte	.LVL1
 3994 0008 0100     		.2byte	0x1
 3995 000a 50       		.byte	0x50
 3996 000b 0E000000 		.4byte	.LVL1
 3997 000f 4C000000 		.4byte	.LVL14
 3998 0013 0100     		.2byte	0x1
 3999 0015 57       		.byte	0x57
 4000 0016 4C000000 		.4byte	.LVL14
 4001 001a B0000000 		.4byte	.LVL25
 4002 001e 0400     		.2byte	0x4
 4003 0020 F3       		.byte	0xf3
 4004 0021 01       		.uleb128 0x1
 4005 0022 50       		.byte	0x50
 4006 0023 9F       		.byte	0x9f
 4007 0024 B0000000 		.4byte	.LVL25
 4008 0028 DC000000 		.4byte	.LVL34
 4009 002c 0100     		.2byte	0x1
 4010 002e 57       		.byte	0x57
 4011 002f DC000000 		.4byte	.LVL34
 4012 0033 5C010000 		.4byte	.LFE64
 4013 0037 0400     		.2byte	0x4
 4014 0039 F3       		.byte	0xf3
 4015 003a 01       		.uleb128 0x1
 4016 003b 50       		.byte	0x50
 4017 003c 9F       		.byte	0x9f
 4018 003d 00000000 		.4byte	0
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccL77S3Y.s 			page 79


 4019 0041 00000000 		.4byte	0
 4020              	.LLST1:
 4021 0045 00000000 		.4byte	.LVL0
 4022 0049 11000000 		.4byte	.LVL2-1
 4023 004d 0100     		.2byte	0x1
 4024 004f 51       		.byte	0x51
 4025 0050 11000000 		.4byte	.LVL2-1
 4026 0054 40000000 		.4byte	.LVL10
 4027 0058 0100     		.2byte	0x1
 4028 005a 54       		.byte	0x54
 4029 005b 40000000 		.4byte	.LVL10
 4030 005f B0000000 		.4byte	.LVL25
 4031 0063 0400     		.2byte	0x4
 4032 0065 F3       		.byte	0xf3
 4033 0066 01       		.uleb128 0x1
 4034 0067 51       		.byte	0x51
 4035 0068 9F       		.byte	0x9f
 4036 0069 B0000000 		.4byte	.LVL25
 4037 006d C6000000 		.4byte	.LVL29
 4038 0071 0100     		.2byte	0x1
 4039 0073 54       		.byte	0x54
 4040 0074 C6000000 		.4byte	.LVL29
 4041 0078 5C010000 		.4byte	.LFE64
 4042 007c 0400     		.2byte	0x4
 4043 007e F3       		.byte	0xf3
 4044 007f 01       		.uleb128 0x1
 4045 0080 51       		.byte	0x51
 4046 0081 9F       		.byte	0x9f
 4047 0082 00000000 		.4byte	0
 4048 0086 00000000 		.4byte	0
 4049              	.LLST2:
 4050 008a 00000000 		.4byte	.LVL0
 4051 008e 11000000 		.4byte	.LVL2-1
 4052 0092 0100     		.2byte	0x1
 4053 0094 52       		.byte	0x52
 4054 0095 11000000 		.4byte	.LVL2-1
 4055 0099 42000000 		.4byte	.LVL11
 4056 009d 0100     		.2byte	0x1
 4057 009f 55       		.byte	0x55
 4058 00a0 42000000 		.4byte	.LVL11
 4059 00a4 B0000000 		.4byte	.LVL25
 4060 00a8 0400     		.2byte	0x4
 4061 00aa F3       		.byte	0xf3
 4062 00ab 01       		.uleb128 0x1
 4063 00ac 52       		.byte	0x52
 4064 00ad 9F       		.byte	0x9f
 4065 00ae B0000000 		.4byte	.LVL25
 4066 00b2 C8000000 		.4byte	.LVL30
 4067 00b6 0100     		.2byte	0x1
 4068 00b8 55       		.byte	0x55
 4069 00b9 C8000000 		.4byte	.LVL30
 4070 00bd 5C010000 		.4byte	.LFE64
 4071 00c1 0400     		.2byte	0x4
 4072 00c3 F3       		.byte	0xf3
 4073 00c4 01       		.uleb128 0x1
 4074 00c5 52       		.byte	0x52
 4075 00c6 9F       		.byte	0x9f
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccL77S3Y.s 			page 80


 4076 00c7 00000000 		.4byte	0
 4077 00cb 00000000 		.4byte	0
 4078              	.LLST3:
 4079 00cf 2A000000 		.4byte	.LVL6
 4080 00d3 30000000 		.4byte	.LVL7
 4081 00d7 0100     		.2byte	0x1
 4082 00d9 50       		.byte	0x50
 4083 00da 30000000 		.4byte	.LVL7
 4084 00de 4A000000 		.4byte	.LVL13
 4085 00e2 0100     		.2byte	0x1
 4086 00e4 56       		.byte	0x56
 4087 00e5 B0000000 		.4byte	.LVL25
 4088 00e9 B6000000 		.4byte	.LVL26
 4089 00ed 0100     		.2byte	0x1
 4090 00ef 50       		.byte	0x50
 4091 00f0 B6000000 		.4byte	.LVL26
 4092 00f4 DA000000 		.4byte	.LVL33
 4093 00f8 0100     		.2byte	0x1
 4094 00fa 56       		.byte	0x56
 4095 00fb 00000000 		.4byte	0
 4096 00ff 00000000 		.4byte	0
 4097              	.LLST4:
 4098 0103 00000000 		.4byte	.LVL45
 4099 0107 09000000 		.4byte	.LVL46-1
 4100 010b 0100     		.2byte	0x1
 4101 010d 50       		.byte	0x50
 4102 010e 09000000 		.4byte	.LVL46-1
 4103 0112 78000000 		.4byte	.LFE65
 4104 0116 0400     		.2byte	0x4
 4105 0118 F3       		.byte	0xf3
 4106 0119 01       		.uleb128 0x1
 4107 011a 50       		.byte	0x50
 4108 011b 9F       		.byte	0x9f
 4109 011c 00000000 		.4byte	0
 4110 0120 00000000 		.4byte	0
 4111              	.LLST5:
 4112 0124 00000000 		.4byte	.LVL45
 4113 0128 09000000 		.4byte	.LVL46-1
 4114 012c 0100     		.2byte	0x1
 4115 012e 51       		.byte	0x51
 4116 012f 09000000 		.4byte	.LVL46-1
 4117 0133 68000000 		.4byte	.LVL52
 4118 0137 0100     		.2byte	0x1
 4119 0139 54       		.byte	0x54
 4120 013a 68000000 		.4byte	.LVL52
 4121 013e 78000000 		.4byte	.LFE65
 4122 0142 0400     		.2byte	0x4
 4123 0144 F3       		.byte	0xf3
 4124 0145 01       		.uleb128 0x1
 4125 0146 51       		.byte	0x51
 4126 0147 9F       		.byte	0x9f
 4127 0148 00000000 		.4byte	0
 4128 014c 00000000 		.4byte	0
 4129              	.LLST6:
 4130 0150 00000000 		.4byte	.LVL45
 4131 0154 09000000 		.4byte	.LVL46-1
 4132 0158 0100     		.2byte	0x1
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccL77S3Y.s 			page 81


 4133 015a 52       		.byte	0x52
 4134 015b 09000000 		.4byte	.LVL46-1
 4135 015f 68000000 		.4byte	.LVL52
 4136 0163 0100     		.2byte	0x1
 4137 0165 55       		.byte	0x55
 4138 0166 68000000 		.4byte	.LVL52
 4139 016a 78000000 		.4byte	.LFE65
 4140 016e 0400     		.2byte	0x4
 4141 0170 F3       		.byte	0xf3
 4142 0171 01       		.uleb128 0x1
 4143 0172 52       		.byte	0x52
 4144 0173 9F       		.byte	0x9f
 4145 0174 00000000 		.4byte	0
 4146 0178 00000000 		.4byte	0
 4147              	.LLST7:
 4148 017c 18000000 		.4byte	.LVL48
 4149 0180 22000000 		.4byte	.LVL49
 4150 0184 0100     		.2byte	0x1
 4151 0186 50       		.byte	0x50
 4152 0187 3C000000 		.4byte	.LVL50
 4153 018b 46000000 		.4byte	.LVL51
 4154 018f 0100     		.2byte	0x1
 4155 0191 50       		.byte	0x50
 4156 0192 00000000 		.4byte	0
 4157 0196 00000000 		.4byte	0
 4158              	.LLST8:
 4159 019a 2E000000 		.4byte	.LVL53
 4160 019e 3D000000 		.4byte	.LVL54-1
 4161 01a2 0100     		.2byte	0x1
 4162 01a4 50       		.byte	0x50
 4163 01a5 4E000000 		.4byte	.LVL55
 4164 01a9 5D000000 		.4byte	.LVL56-1
 4165 01ad 0100     		.2byte	0x1
 4166 01af 50       		.byte	0x50
 4167 01b0 6E000000 		.4byte	.LVL57
 4168 01b4 7D000000 		.4byte	.LVL58-1
 4169 01b8 0100     		.2byte	0x1
 4170 01ba 50       		.byte	0x50
 4171 01bb 00000000 		.4byte	0
 4172 01bf 00000000 		.4byte	0
 4173              	.LLST9:
 4174 01c3 00000000 		.4byte	.LVL61
 4175 01c7 0D000000 		.4byte	.LVL63-1
 4176 01cb 0100     		.2byte	0x1
 4177 01cd 50       		.byte	0x50
 4178 01ce 0D000000 		.4byte	.LVL63-1
 4179 01d2 70000000 		.4byte	.LFE67
 4180 01d6 0600     		.2byte	0x6
 4181 01d8 F3       		.byte	0xf3
 4182 01d9 03       		.uleb128 0x3
 4183 01da F5       		.byte	0xf5
 4184 01db 00       		.uleb128 0
 4185 01dc 25       		.uleb128 0x25
 4186 01dd 9F       		.byte	0x9f
 4187 01de 00000000 		.4byte	0
 4188 01e2 00000000 		.4byte	0
 4189              	.LLST10:
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccL77S3Y.s 			page 82


 4190 01e6 00000000 		.4byte	.LVL61
 4191 01ea 0A000000 		.4byte	.LVL62
 4192 01ee 0100     		.2byte	0x1
 4193 01f0 51       		.byte	0x51
 4194 01f1 0A000000 		.4byte	.LVL62
 4195 01f5 68000000 		.4byte	.LVL79
 4196 01f9 0100     		.2byte	0x1
 4197 01fb 55       		.byte	0x55
 4198 01fc 68000000 		.4byte	.LVL79
 4199 0200 70000000 		.4byte	.LFE67
 4200 0204 0600     		.2byte	0x6
 4201 0206 F3       		.byte	0xf3
 4202 0207 03       		.uleb128 0x3
 4203 0208 F5       		.byte	0xf5
 4204 0209 01       		.uleb128 0x1
 4205 020a 25       		.uleb128 0x25
 4206 020b 9F       		.byte	0x9f
 4207 020c 00000000 		.4byte	0
 4208 0210 00000000 		.4byte	0
 4209              	.LLST11:
 4210 0214 00000000 		.4byte	.LVL61
 4211 0218 0D000000 		.4byte	.LVL63-1
 4212 021c 0100     		.2byte	0x1
 4213 021e 52       		.byte	0x52
 4214 021f 0D000000 		.4byte	.LVL63-1
 4215 0223 68000000 		.4byte	.LVL79
 4216 0227 0100     		.2byte	0x1
 4217 0229 56       		.byte	0x56
 4218 022a 68000000 		.4byte	.LVL79
 4219 022e 70000000 		.4byte	.LFE67
 4220 0232 0600     		.2byte	0x6
 4221 0234 F3       		.byte	0xf3
 4222 0235 03       		.uleb128 0x3
 4223 0236 F5       		.byte	0xf5
 4224 0237 02       		.uleb128 0x2
 4225 0238 25       		.uleb128 0x25
 4226 0239 9F       		.byte	0x9f
 4227 023a 00000000 		.4byte	0
 4228 023e 00000000 		.4byte	0
 4229              	.LLST12:
 4230 0242 00000000 		.4byte	.LVL61
 4231 0246 0D000000 		.4byte	.LVL63-1
 4232 024a 0100     		.2byte	0x1
 4233 024c 53       		.byte	0x53
 4234 024d 0D000000 		.4byte	.LVL63-1
 4235 0251 68000000 		.4byte	.LVL79
 4236 0255 0100     		.2byte	0x1
 4237 0257 54       		.byte	0x54
 4238 0258 68000000 		.4byte	.LVL79
 4239 025c 70000000 		.4byte	.LFE67
 4240 0260 0600     		.2byte	0x6
 4241 0262 F3       		.byte	0xf3
 4242 0263 03       		.uleb128 0x3
 4243 0264 F5       		.byte	0xf5
 4244 0265 03       		.uleb128 0x3
 4245 0266 25       		.uleb128 0x25
 4246 0267 9F       		.byte	0x9f
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccL77S3Y.s 			page 83


 4247 0268 00000000 		.4byte	0
 4248 026c 00000000 		.4byte	0
 4249              	.LLST13:
 4250 0270 2C000000 		.4byte	.LVL80
 4251 0274 36000000 		.4byte	.LVL81
 4252 0278 0100     		.2byte	0x1
 4253 027a 52       		.byte	0x52
 4254 027b 54000000 		.4byte	.LVL82
 4255 027f 5E000000 		.4byte	.LVL83
 4256 0283 0100     		.2byte	0x1
 4257 0285 52       		.byte	0x52
 4258 0286 7C000000 		.4byte	.LVL84
 4259 028a 86000000 		.4byte	.LVL85
 4260 028e 0100     		.2byte	0x1
 4261 0290 52       		.byte	0x52
 4262 0291 A4000000 		.4byte	.LVL86
 4263 0295 AE000000 		.4byte	.LVL87
 4264 0299 0100     		.2byte	0x1
 4265 029b 52       		.byte	0x52
 4266 029c D0000000 		.4byte	.LVL88
 4267 02a0 DA000000 		.4byte	.LVL89
 4268 02a4 0100     		.2byte	0x1
 4269 02a6 53       		.byte	0x53
 4270 02a7 F8000000 		.4byte	.LVL90
 4271 02ab 02010000 		.4byte	.LVL91
 4272 02af 0100     		.2byte	0x1
 4273 02b1 53       		.byte	0x53
 4274 02b2 20010000 		.4byte	.LVL92
 4275 02b6 2A010000 		.4byte	.LVL93
 4276 02ba 0100     		.2byte	0x1
 4277 02bc 52       		.byte	0x52
 4278 02bd 48010000 		.4byte	.LVL94
 4279 02c1 50010000 		.4byte	.LVL95
 4280 02c5 0100     		.2byte	0x1
 4281 02c7 52       		.byte	0x52
 4282 02c8 00000000 		.4byte	0
 4283 02cc 00000000 		.4byte	0
 4284              	.LLST14:
 4285 02d0 00000000 		.4byte	.LVL102
 4286 02d4 08000000 		.4byte	.LVL103
 4287 02d8 0100     		.2byte	0x1
 4288 02da 50       		.byte	0x50
 4289 02db 08000000 		.4byte	.LVL103
 4290 02df 20000000 		.4byte	.LFE69
 4291 02e3 0100     		.2byte	0x1
 4292 02e5 55       		.byte	0x55
 4293 02e6 00000000 		.4byte	0
 4294 02ea 00000000 		.4byte	0
 4295              	.LLST15:
 4296 02ee 00000000 		.4byte	.LVL102
 4297 02f2 0B000000 		.4byte	.LVL104-1
 4298 02f6 0100     		.2byte	0x1
 4299 02f8 51       		.byte	0x51
 4300 02f9 0B000000 		.4byte	.LVL104-1
 4301 02fd 20000000 		.4byte	.LFE69
 4302 0301 0100     		.2byte	0x1
 4303 0303 54       		.byte	0x54
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccL77S3Y.s 			page 84


 4304 0304 00000000 		.4byte	0
 4305 0308 00000000 		.4byte	0
 4306              	.LLST16:
 4307 030c 00000000 		.4byte	.LVL108
 4308 0310 07000000 		.4byte	.LVL109-1
 4309 0314 0100     		.2byte	0x1
 4310 0316 50       		.byte	0x50
 4311 0317 07000000 		.4byte	.LVL109-1
 4312 031b C4000000 		.4byte	.LFE70
 4313 031f 0600     		.2byte	0x6
 4314 0321 F3       		.byte	0xf3
 4315 0322 03       		.uleb128 0x3
 4316 0323 F5       		.byte	0xf5
 4317 0324 00       		.uleb128 0
 4318 0325 25       		.uleb128 0x25
 4319 0326 9F       		.byte	0x9f
 4320 0327 00000000 		.4byte	0
 4321 032b 00000000 		.4byte	0
 4322              	.LLST17:
 4323 032f 16000000 		.4byte	.LVL111
 4324 0333 33000000 		.4byte	.LVL112-1
 4325 0337 0100     		.2byte	0x1
 4326 0339 50       		.byte	0x50
 4327 033a 00000000 		.4byte	0
 4328 033e 00000000 		.4byte	0
 4329              	.LLST18:
 4330 0342 00000000 		.4byte	.LVL131
 4331 0346 07000000 		.4byte	.LVL132-1
 4332 034a 0100     		.2byte	0x1
 4333 034c 50       		.byte	0x50
 4334 034d 07000000 		.4byte	.LVL132-1
 4335 0351 C4000000 		.4byte	.LFE72
 4336 0355 0600     		.2byte	0x6
 4337 0357 F3       		.byte	0xf3
 4338 0358 03       		.uleb128 0x3
 4339 0359 F5       		.byte	0xf5
 4340 035a 00       		.uleb128 0
 4341 035b 25       		.uleb128 0x25
 4342 035c 9F       		.byte	0x9f
 4343 035d 00000000 		.4byte	0
 4344 0361 00000000 		.4byte	0
 4345              	.LLST19:
 4346 0365 16000000 		.4byte	.LVL134
 4347 0369 33000000 		.4byte	.LVL135-1
 4348 036d 0100     		.2byte	0x1
 4349 036f 50       		.byte	0x50
 4350 0370 00000000 		.4byte	0
 4351 0374 00000000 		.4byte	0
 4352              	.LLST20:
 4353 0378 00000000 		.4byte	.LVL154
 4354 037c 07000000 		.4byte	.LVL155-1
 4355 0380 0100     		.2byte	0x1
 4356 0382 50       		.byte	0x50
 4357 0383 07000000 		.4byte	.LVL155-1
 4358 0387 CC000000 		.4byte	.LFE74
 4359 038b 0600     		.2byte	0x6
 4360 038d F3       		.byte	0xf3
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccL77S3Y.s 			page 85


 4361 038e 03       		.uleb128 0x3
 4362 038f F5       		.byte	0xf5
 4363 0390 00       		.uleb128 0
 4364 0391 25       		.uleb128 0x25
 4365 0392 9F       		.byte	0x9f
 4366 0393 00000000 		.4byte	0
 4367 0397 00000000 		.4byte	0
 4368              	.LLST21:
 4369 039b 1A000000 		.4byte	.LVL158
 4370 039f 37000000 		.4byte	.LVL159-1
 4371 03a3 0100     		.2byte	0x1
 4372 03a5 50       		.byte	0x50
 4373 03a6 00000000 		.4byte	0
 4374 03aa 00000000 		.4byte	0
 4375              	.LLST22:
 4376 03ae 00000000 		.4byte	.LVL168
 4377 03b2 07000000 		.4byte	.LVL169-1
 4378 03b6 0100     		.2byte	0x1
 4379 03b8 50       		.byte	0x50
 4380 03b9 07000000 		.4byte	.LVL169-1
 4381 03bd C4000000 		.4byte	.LFE75
 4382 03c1 0600     		.2byte	0x6
 4383 03c3 F3       		.byte	0xf3
 4384 03c4 03       		.uleb128 0x3
 4385 03c5 F5       		.byte	0xf5
 4386 03c6 00       		.uleb128 0
 4387 03c7 25       		.uleb128 0x25
 4388 03c8 9F       		.byte	0x9f
 4389 03c9 00000000 		.4byte	0
 4390 03cd 00000000 		.4byte	0
 4391              	.LLST23:
 4392 03d1 1A000000 		.4byte	.LVL172
 4393 03d5 37000000 		.4byte	.LVL173-1
 4394 03d9 0100     		.2byte	0x1
 4395 03db 50       		.byte	0x50
 4396 03dc 00000000 		.4byte	0
 4397 03e0 00000000 		.4byte	0
 4398              	.LLST24:
 4399 03e4 00000000 		.4byte	.LVL182
 4400 03e8 0A000000 		.4byte	.LVL183
 4401 03ec 0100     		.2byte	0x1
 4402 03ee 50       		.byte	0x50
 4403 03ef 0A000000 		.4byte	.LVL183
 4404 03f3 1C000000 		.4byte	.LVL187
 4405 03f7 0100     		.2byte	0x1
 4406 03f9 54       		.byte	0x54
 4407 03fa 1C000000 		.4byte	.LVL187
 4408 03fe 78000000 		.4byte	.LFE76
 4409 0402 0400     		.2byte	0x4
 4410 0404 F3       		.byte	0xf3
 4411 0405 01       		.uleb128 0x1
 4412 0406 50       		.byte	0x50
 4413 0407 9F       		.byte	0x9f
 4414 0408 00000000 		.4byte	0
 4415 040c 00000000 		.4byte	0
 4416              	.LLST25:
 4417 0410 00000000 		.4byte	.LVL182
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccL77S3Y.s 			page 86


 4418 0414 0D000000 		.4byte	.LVL184-1
 4419 0418 0100     		.2byte	0x1
 4420 041a 51       		.byte	0x51
 4421 041b 0D000000 		.4byte	.LVL184-1
 4422 041f 30000000 		.4byte	.LVL190
 4423 0423 0100     		.2byte	0x1
 4424 0425 56       		.byte	0x56
 4425 0426 30000000 		.4byte	.LVL190
 4426 042a 78000000 		.4byte	.LFE76
 4427 042e 0400     		.2byte	0x4
 4428 0430 F3       		.byte	0xf3
 4429 0431 01       		.uleb128 0x1
 4430 0432 51       		.byte	0x51
 4431 0433 9F       		.byte	0x9f
 4432 0434 00000000 		.4byte	0
 4433 0438 00000000 		.4byte	0
 4434              	.LLST26:
 4435 043c 42000000 		.4byte	.LVL192
 4436 0440 45000000 		.4byte	.LVL193-1
 4437 0444 0600     		.2byte	0x6
 4438 0446 F5       		.byte	0xf5
 4439 0447 00       		.uleb128 0
 4440 0448 2C       		.uleb128 0x2c
 4441 0449 F7       		.byte	0xf7
 4442 044a 25       		.uleb128 0x25
 4443 044b 9F       		.byte	0x9f
 4444 044c 64000000 		.4byte	.LVL197
 4445 0450 67000000 		.4byte	.LVL198-1
 4446 0454 0600     		.2byte	0x6
 4447 0456 F5       		.byte	0xf5
 4448 0457 00       		.uleb128 0
 4449 0458 2C       		.uleb128 0x2c
 4450 0459 F7       		.byte	0xf7
 4451 045a 25       		.uleb128 0x25
 4452 045b 9F       		.byte	0x9f
 4453 045c 00000000 		.4byte	0
 4454 0460 00000000 		.4byte	0
 4455              	.LLST27:
 4456 0464 00000000 		.4byte	.LVL200
 4457 0468 0A000000 		.4byte	.LVL201
 4458 046c 0100     		.2byte	0x1
 4459 046e 50       		.byte	0x50
 4460 046f 0A000000 		.4byte	.LVL201
 4461 0473 1C000000 		.4byte	.LVL205
 4462 0477 0100     		.2byte	0x1
 4463 0479 54       		.byte	0x54
 4464 047a 1C000000 		.4byte	.LVL205
 4465 047e 78000000 		.4byte	.LFE77
 4466 0482 0400     		.2byte	0x4
 4467 0484 F3       		.byte	0xf3
 4468 0485 01       		.uleb128 0x1
 4469 0486 50       		.byte	0x50
 4470 0487 9F       		.byte	0x9f
 4471 0488 00000000 		.4byte	0
 4472 048c 00000000 		.4byte	0
 4473              	.LLST28:
 4474 0490 00000000 		.4byte	.LVL200
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccL77S3Y.s 			page 87


 4475 0494 0D000000 		.4byte	.LVL202-1
 4476 0498 0100     		.2byte	0x1
 4477 049a 51       		.byte	0x51
 4478 049b 0D000000 		.4byte	.LVL202-1
 4479 049f 30000000 		.4byte	.LVL208
 4480 04a3 0100     		.2byte	0x1
 4481 04a5 56       		.byte	0x56
 4482 04a6 30000000 		.4byte	.LVL208
 4483 04aa 78000000 		.4byte	.LFE77
 4484 04ae 0400     		.2byte	0x4
 4485 04b0 F3       		.byte	0xf3
 4486 04b1 01       		.uleb128 0x1
 4487 04b2 51       		.byte	0x51
 4488 04b3 9F       		.byte	0x9f
 4489 04b4 00000000 		.4byte	0
 4490 04b8 00000000 		.4byte	0
 4491              	.LLST29:
 4492 04bc 42000000 		.4byte	.LVL210
 4493 04c0 45000000 		.4byte	.LVL211-1
 4494 04c4 0600     		.2byte	0x6
 4495 04c6 F5       		.byte	0xf5
 4496 04c7 00       		.uleb128 0
 4497 04c8 2C       		.uleb128 0x2c
 4498 04c9 F7       		.byte	0xf7
 4499 04ca 25       		.uleb128 0x25
 4500 04cb 9F       		.byte	0x9f
 4501 04cc 64000000 		.4byte	.LVL215
 4502 04d0 67000000 		.4byte	.LVL216-1
 4503 04d4 0600     		.2byte	0x6
 4504 04d6 F5       		.byte	0xf5
 4505 04d7 00       		.uleb128 0
 4506 04d8 2C       		.uleb128 0x2c
 4507 04d9 F7       		.byte	0xf7
 4508 04da 25       		.uleb128 0x25
 4509 04db 9F       		.byte	0x9f
 4510 04dc 00000000 		.4byte	0
 4511 04e0 00000000 		.4byte	0
 4512              	.LLST30:
 4513 04e4 00000000 		.4byte	.LVL218
 4514 04e8 0E000000 		.4byte	.LVL219
 4515 04ec 0100     		.2byte	0x1
 4516 04ee 50       		.byte	0x50
 4517 04ef 0E000000 		.4byte	.LVL219
 4518 04f3 54000000 		.4byte	.LVL227
 4519 04f7 0100     		.2byte	0x1
 4520 04f9 55       		.byte	0x55
 4521 04fa 54000000 		.4byte	.LVL227
 4522 04fe 64000000 		.4byte	.LFE78
 4523 0502 0400     		.2byte	0x4
 4524 0504 F3       		.byte	0xf3
 4525 0505 01       		.uleb128 0x1
 4526 0506 50       		.byte	0x50
 4527 0507 9F       		.byte	0x9f
 4528 0508 00000000 		.4byte	0
 4529 050c 00000000 		.4byte	0
 4530              	.LLST31:
 4531 0510 2C000000 		.4byte	.LVL223
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccL77S3Y.s 			page 88


 4532 0514 31000000 		.4byte	.LVL224-1
 4533 0518 0100     		.2byte	0x1
 4534 051a 50       		.byte	0x50
 4535 051b 00000000 		.4byte	0
 4536 051f 00000000 		.4byte	0
 4537              	.LLST32:
 4538 0523 00000000 		.4byte	.LVL240
 4539 0527 04000000 		.4byte	.LVL241
 4540 052b 0100     		.2byte	0x1
 4541 052d 50       		.byte	0x50
 4542 052e 04000000 		.4byte	.LVL241
 4543 0532 10000000 		.4byte	.LFE81
 4544 0536 0400     		.2byte	0x4
 4545 0538 F3       		.byte	0xf3
 4546 0539 01       		.uleb128 0x1
 4547 053a 50       		.byte	0x50
 4548 053b 9F       		.byte	0x9f
 4549 053c 00000000 		.4byte	0
 4550 0540 00000000 		.4byte	0
 4551              	.LLST33:
 4552 0544 00000000 		.4byte	.LVL240
 4553 0548 07000000 		.4byte	.LVL242-1
 4554 054c 0100     		.2byte	0x1
 4555 054e 51       		.byte	0x51
 4556 054f 07000000 		.4byte	.LVL242-1
 4557 0553 10000000 		.4byte	.LFE81
 4558 0557 0400     		.2byte	0x4
 4559 0559 F3       		.byte	0xf3
 4560 055a 01       		.uleb128 0x1
 4561 055b 51       		.byte	0x51
 4562 055c 9F       		.byte	0x9f
 4563 055d 00000000 		.4byte	0
 4564 0561 00000000 		.4byte	0
 4565              	.LLST34:
 4566 0565 00000000 		.4byte	.LVL240
 4567 0569 07000000 		.4byte	.LVL242-1
 4568 056d 0100     		.2byte	0x1
 4569 056f 52       		.byte	0x52
 4570 0570 07000000 		.4byte	.LVL242-1
 4571 0574 10000000 		.4byte	.LFE81
 4572 0578 0400     		.2byte	0x4
 4573 057a F3       		.byte	0xf3
 4574 057b 01       		.uleb128 0x1
 4575 057c 52       		.byte	0x52
 4576 057d 9F       		.byte	0x9f
 4577 057e 00000000 		.4byte	0
 4578 0582 00000000 		.4byte	0
 4579              	.LLST35:
 4580 0586 24000000 		.4byte	.LVL248
 4581 058a 3A000000 		.4byte	.LVL251
 4582 058e 0100     		.2byte	0x1
 4583 0590 54       		.byte	0x54
 4584 0591 00000000 		.4byte	0
 4585 0595 00000000 		.4byte	0
 4586              		.section	.debug_aranges,"",%progbits
 4587 0000 AC000000 		.4byte	0xac
 4588 0004 0200     		.2byte	0x2
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccL77S3Y.s 			page 89


 4589 0006 00000000 		.4byte	.Ldebug_info0
 4590 000a 04       		.byte	0x4
 4591 000b 00       		.byte	0
 4592 000c 0000     		.2byte	0
 4593 000e 0000     		.2byte	0
 4594 0010 00000000 		.4byte	.LFB64
 4595 0014 5C010000 		.4byte	.LFE64-.LFB64
 4596 0018 00000000 		.4byte	.LFB65
 4597 001c 78000000 		.4byte	.LFE65-.LFB65
 4598 0020 00000000 		.4byte	.LFB66
 4599 0024 C8000000 		.4byte	.LFE66-.LFB66
 4600 0028 00000000 		.4byte	.LFB67
 4601 002c 70000000 		.4byte	.LFE67-.LFB67
 4602 0030 00000000 		.4byte	.LFB68
 4603 0034 B0010000 		.4byte	.LFE68-.LFB68
 4604 0038 00000000 		.4byte	.LFB69
 4605 003c 20000000 		.4byte	.LFE69-.LFB69
 4606 0040 00000000 		.4byte	.LFB70
 4607 0044 C4000000 		.4byte	.LFE70-.LFB70
 4608 0048 00000000 		.4byte	.LFB71
 4609 004c 9C000000 		.4byte	.LFE71-.LFB71
 4610 0050 00000000 		.4byte	.LFB72
 4611 0054 C4000000 		.4byte	.LFE72-.LFB72
 4612 0058 00000000 		.4byte	.LFB73
 4613 005c 94000000 		.4byte	.LFE73-.LFB73
 4614 0060 00000000 		.4byte	.LFB74
 4615 0064 CC000000 		.4byte	.LFE74-.LFB74
 4616 0068 00000000 		.4byte	.LFB75
 4617 006c C4000000 		.4byte	.LFE75-.LFB75
 4618 0070 00000000 		.4byte	.LFB76
 4619 0074 78000000 		.4byte	.LFE76-.LFB76
 4620 0078 00000000 		.4byte	.LFB77
 4621 007c 78000000 		.4byte	.LFE77-.LFB77
 4622 0080 00000000 		.4byte	.LFB78
 4623 0084 64000000 		.4byte	.LFE78-.LFB78
 4624 0088 00000000 		.4byte	.LFB79
 4625 008c 40000000 		.4byte	.LFE79-.LFB79
 4626 0090 00000000 		.4byte	.LFB80
 4627 0094 40000000 		.4byte	.LFE80-.LFB80
 4628 0098 00000000 		.4byte	.LFB81
 4629 009c 10000000 		.4byte	.LFE81-.LFB81
 4630 00a0 00000000 		.4byte	.LFB82
 4631 00a4 4C000000 		.4byte	.LFE82-.LFB82
 4632 00a8 00000000 		.4byte	0
 4633 00ac 00000000 		.4byte	0
 4634              		.section	.debug_ranges,"",%progbits
 4635              	.Ldebug_ranges0:
 4636 0000 00000000 		.4byte	.LFB64
 4637 0004 5C010000 		.4byte	.LFE64
 4638 0008 00000000 		.4byte	.LFB65
 4639 000c 78000000 		.4byte	.LFE65
 4640 0010 00000000 		.4byte	.LFB66
 4641 0014 C8000000 		.4byte	.LFE66
 4642 0018 00000000 		.4byte	.LFB67
 4643 001c 70000000 		.4byte	.LFE67
 4644 0020 00000000 		.4byte	.LFB68
 4645 0024 B0010000 		.4byte	.LFE68
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccL77S3Y.s 			page 90


 4646 0028 00000000 		.4byte	.LFB69
 4647 002c 20000000 		.4byte	.LFE69
 4648 0030 00000000 		.4byte	.LFB70
 4649 0034 C4000000 		.4byte	.LFE70
 4650 0038 00000000 		.4byte	.LFB71
 4651 003c 9C000000 		.4byte	.LFE71
 4652 0040 00000000 		.4byte	.LFB72
 4653 0044 C4000000 		.4byte	.LFE72
 4654 0048 00000000 		.4byte	.LFB73
 4655 004c 94000000 		.4byte	.LFE73
 4656 0050 00000000 		.4byte	.LFB74
 4657 0054 CC000000 		.4byte	.LFE74
 4658 0058 00000000 		.4byte	.LFB75
 4659 005c C4000000 		.4byte	.LFE75
 4660 0060 00000000 		.4byte	.LFB76
 4661 0064 78000000 		.4byte	.LFE76
 4662 0068 00000000 		.4byte	.LFB77
 4663 006c 78000000 		.4byte	.LFE77
 4664 0070 00000000 		.4byte	.LFB78
 4665 0074 64000000 		.4byte	.LFE78
 4666 0078 00000000 		.4byte	.LFB79
 4667 007c 40000000 		.4byte	.LFE79
 4668 0080 00000000 		.4byte	.LFB80
 4669 0084 40000000 		.4byte	.LFE80
 4670 0088 00000000 		.4byte	.LFB81
 4671 008c 10000000 		.4byte	.LFE81
 4672 0090 00000000 		.4byte	.LFB82
 4673 0094 4C000000 		.4byte	.LFE82
 4674 0098 00000000 		.4byte	0
 4675 009c 00000000 		.4byte	0
 4676              		.section	.debug_line,"",%progbits
 4677              	.Ldebug_line0:
 4678 0000 E2040000 		.section	.debug_str,"MS",%progbits,1
 4678      02007C02 
 4678      00000201 
 4678      FB0E0D00 
 4678      01010101 
 4679              	.LASF71:
 4680 0000 6D6F746F 		.ascii	"motor2EncoderCounts\000"
 4680      7232456E 
 4680      636F6465 
 4680      72436F75 
 4680      6E747300 
 4681              	.LASF54:
 4682 0014 76657274 		.ascii	"vertical\000"
 4682      6963616C 
 4682      00
 4683              	.LASF26:
 4684 001d 636F6D70 		.ascii	"completedCounts\000"
 4684      6C657465 
 4684      64436F75 
 4684      6E747300 
 4685              	.LASF39:
 4686 002d 6D6F7665 		.ascii	"moveForwardIndefinitely\000"
 4686      466F7277 
 4686      61726449 
 4686      6E646566 
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccL77S3Y.s 			page 91


 4686      696E6974 
 4687              	.LASF86:
 4688 0045 4D6F746F 		.ascii	"Motor_2_Encoder_Counts_WritePeriod\000"
 4688      725F325F 
 4688      456E636F 
 4688      6465725F 
 4688      436F756E 
 4689              	.LASF99:
 4690 0068 636F7272 		.ascii	"correctAngle\000"
 4690      65637441 
 4690      6E676C65 
 4690      00
 4691              	.LASF21:
 4692 0075 7475726E 		.ascii	"turningLeftFlag\000"
 4692      696E674C 
 4692      65667446 
 4692      6C616700 
 4693              	.LASF33:
 4694 0085 74656D70 		.ascii	"temp\000"
 4694      00
 4695              	.LASF4:
 4696 008a 73686F72 		.ascii	"short int\000"
 4696      7420696E 
 4696      7400
 4697              	.LASF51:
 4698 0094 73746F70 		.ascii	"stopMotor2AndUpdate\000"
 4698      4D6F746F 
 4698      7232416E 
 4698      64557064 
 4698      61746500 
 4699              	.LASF72:
 4700 00a8 63757272 		.ascii	"currentPosition\000"
 4700      656E7450 
 4700      6F736974 
 4700      696F6E00 
 4701              	.LASF17:
 4702 00b8 64726976 		.ascii	"drivingForwardFlag\000"
 4702      696E6746 
 4702      6F727761 
 4702      7264466C 
 4702      616700
 4703              	.LASF24:
 4704 00cb 64656772 		.ascii	"degreesMoved\000"
 4704      6565734D 
 4704      6F766564 
 4704      00
 4705              	.LASF49:
 4706 00d8 78546F4D 		.ascii	"xToMove\000"
 4706      6F766500 
 4707              	.LASF53:
 4708 00e0 686F7269 		.ascii	"horizontal\000"
 4708      7A6F6E74 
 4708      616C00
 4709              	.LASF70:
 4710 00eb 6D6F746F 		.ascii	"motor1EncoderCounts\000"
 4710      7231456E 
 4710      636F6465 
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccL77S3Y.s 			page 92


 4710      72436F75 
 4710      6E747300 
 4711              	.LASF62:
 4712 00ff 7075636B 		.ascii	"puckRackOffsetsFromWest\000"
 4712      5261636B 
 4712      4F666673 
 4712      65747346 
 4712      726F6D57 
 4713              	.LASF87:
 4714 0117 4D6F746F 		.ascii	"Motor_1_Encoder_Counts_Start\000"
 4714      725F315F 
 4714      456E636F 
 4714      6465725F 
 4714      436F756E 
 4715              	.LASF32:
 4716 0134 64726966 		.ascii	"driftCorrect\000"
 4716      74436F72 
 4716      72656374 
 4716      00
 4717              	.LASF34:
 4718 0141 636F756E 		.ascii	"counterInitialise\000"
 4718      74657249 
 4718      6E697469 
 4718      616C6973 
 4718      6500
 4719              	.LASF80:
 4720 0153 4D6F746F 		.ascii	"Motor_1_driver_WriteCompare1\000"
 4720      725F315F 
 4720      64726976 
 4720      65725F57 
 4720      72697465 
 4721              	.LASF82:
 4722 0170 4D6F746F 		.ascii	"Motor_1_driver_WriteCompare2\000"
 4722      725F315F 
 4722      64726976 
 4722      65725F57 
 4722      72697465 
 4723              	.LASF78:
 4724 018d 4D6F746F 		.ascii	"Motor_1_Encoder_Counts_WriteCounter\000"
 4724      725F315F 
 4724      456E636F 
 4724      6465725F 
 4724      436F756E 
 4725              	.LASF68:
 4726 01b1 6D6F746F 		.ascii	"motor1Enable\000"
 4726      7231456E 
 4726      61626C65 
 4726      00
 4727              	.LASF74:
 4728 01be 626C6F63 		.ascii	"block_location\000"
 4728      6B5F6C6F 
 4728      63617469 
 4728      6F6E00
 4729              	.LASF37:
 4730 01cd 6D6F7665 		.ascii	"moveForward\000"
 4730      466F7277 
 4730      61726400 
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccL77S3Y.s 			page 93


 4731              	.LASF22:
 4732 01d9 7475726E 		.ascii	"turningRightFlag\000"
 4732      696E6752 
 4732      69676874 
 4732      466C6167 
 4732      00
 4733              	.LASF0:
 4734 01ea 666C6F61 		.ascii	"float\000"
 4734      7400
 4735              	.LASF88:
 4736 01f0 4D6F746F 		.ascii	"Motor_2_Encoder_Counts_Start\000"
 4736      725F325F 
 4736      456E636F 
 4736      6465725F 
 4736      436F756E 
 4737              	.LASF95:
 4738 020d 64697374 		.ascii	"distanceCheck\000"
 4738      616E6365 
 4738      43686563 
 4738      6B00
 4739              	.LASF58:
 4740 021b 756C7472 		.ascii	"ultrasonic_distances\000"
 4740      61736F6E 
 4740      69635F64 
 4740      69737461 
 4740      6E636573 
 4741              	.LASF8:
 4742 0230 6C6F6E67 		.ascii	"long long int\000"
 4742      206C6F6E 
 4742      6720696E 
 4742      7400
 4743              	.LASF81:
 4744 023e 4D6F746F 		.ascii	"Motor_2_driver_WriteCompare1\000"
 4744      725F325F 
 4744      64726976 
 4744      65725F57 
 4744      72697465 
 4745              	.LASF83:
 4746 025b 4D6F746F 		.ascii	"Motor_2_driver_WriteCompare2\000"
 4746      725F325F 
 4746      64726976 
 4746      65725F57 
 4746      72697465 
 4747              	.LASF27:
 4748 0278 6D6F746F 		.ascii	"motorDutyCycleUpdate\000"
 4748      72447574 
 4748      79437963 
 4748      6C655570 
 4748      64617465 
 4749              	.LASF6:
 4750 028d 6C6F6E67 		.ascii	"long int\000"
 4750      20696E74 
 4750      00
 4751              	.LASF41:
 4752 0296 6D6F7665 		.ascii	"moveBackwardIndefinitely\000"
 4752      4261636B 
 4752      77617264 
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccL77S3Y.s 			page 94


 4752      496E6465 
 4752      66696E69 
 4753              	.LASF25:
 4754 02af 73746F70 		.ascii	"stopMotion\000"
 4754      4D6F7469 
 4754      6F6E00
 4755              	.LASF7:
 4756 02ba 6C6F6E67 		.ascii	"long unsigned int\000"
 4756      20756E73 
 4756      69676E65 
 4756      6420696E 
 4756      7400
 4757              	.LASF40:
 4758 02cc 6D6F7665 		.ascii	"moveBackward\000"
 4758      4261636B 
 4758      77617264 
 4758      00
 4759              	.LASF18:
 4760 02d9 64726976 		.ascii	"drivingBackwardFlag\000"
 4760      696E6742 
 4760      61636B77 
 4760      61726446 
 4760      6C616700 
 4761              	.LASF65:
 4762 02ed 7075636B 		.ascii	"puckPileLocation\000"
 4762      50696C65 
 4762      4C6F6361 
 4762      74696F6E 
 4762      00
 4763              	.LASF60:
 4764 02fe 63757272 		.ascii	"currentPuckRackScanningIndex\000"
 4764      656E7450 
 4764      75636B52 
 4764      61636B53 
 4764      63616E6E 
 4765              	.LASF3:
 4766 031b 756E7369 		.ascii	"unsigned char\000"
 4766      676E6564 
 4766      20636861 
 4766      7200
 4767              	.LASF14:
 4768 0329 6C6F6E67 		.ascii	"long double\000"
 4768      20646F75 
 4768      626C6500 
 4769              	.LASF45:
 4770 0335 64656772 		.ascii	"degrees\000"
 4770      65657300 
 4771              	.LASF85:
 4772 033d 4D6F746F 		.ascii	"Motor_1_Encoder_Counts_WritePeriod\000"
 4772      725F315F 
 4772      456E636F 
 4772      6465725F 
 4772      436F756E 
 4773              	.LASF42:
 4774 0360 7475726E 		.ascii	"turnLeft\000"
 4774      4C656674 
 4774      00
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccL77S3Y.s 			page 95


 4775              	.LASF89:
 4776 0369 726F756E 		.ascii	"round\000"
 4776      6400
 4777              	.LASF2:
 4778 036f 7369676E 		.ascii	"signed char\000"
 4778      65642063 
 4778      68617200 
 4779              	.LASF64:
 4780 037b 626C6F63 		.ascii	"block_edge_location\000"
 4780      6B5F6564 
 4780      67655F6C 
 4780      6F636174 
 4780      696F6E00 
 4781              	.LASF9:
 4782 038f 6C6F6E67 		.ascii	"long long unsigned int\000"
 4782      206C6F6E 
 4782      6720756E 
 4782      7369676E 
 4782      65642069 
 4783              	.LASF97:
 4784 03a6 64636D6F 		.ascii	"dcmotor.c\000"
 4784      746F722E 
 4784      6300
 4785              	.LASF10:
 4786 03b0 756E7369 		.ascii	"unsigned int\000"
 4786      676E6564 
 4786      20696E74 
 4786      00
 4787              	.LASF77:
 4788 03bd 4D6F746F 		.ascii	"Motor_2_Encoder_Counts_ReadCounter\000"
 4788      725F325F 
 4788      456E636F 
 4788      6465725F 
 4788      436F756E 
 4789              	.LASF16:
 4790 03e0 636F756E 		.ascii	"counts\000"
 4790      747300
 4791              	.LASF47:
 4792 03e7 6E657874 		.ascii	"nextMotion\000"
 4792      4D6F7469 
 4792      6F6E00
 4793              	.LASF5:
 4794 03f2 73686F72 		.ascii	"short unsigned int\000"
 4794      7420756E 
 4794      7369676E 
 4794      65642069 
 4794      6E7400
 4795              	.LASF19:
 4796 0405 706F7369 		.ascii	"positionUpdate\000"
 4796      74696F6E 
 4796      55706461 
 4796      746500
 4797              	.LASF63:
 4798 0414 73776565 		.ascii	"sweeping\000"
 4798      70696E67 
 4798      00
 4799              	.LASF13:
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccL77S3Y.s 			page 96


 4800 041d 63686172 		.ascii	"char\000"
 4800      00
 4801              	.LASF29:
 4802 0422 4D315F42 		.ascii	"M1_BD\000"
 4802      4400
 4803              	.LASF12:
 4804 0428 696E7433 		.ascii	"int32_t\000"
 4804      325F7400 
 4805              	.LASF59:
 4806 0430 64726976 		.ascii	"driveStraightEnable\000"
 4806      65537472 
 4806      61696768 
 4806      74456E61 
 4806      626C6500 
 4807              	.LASF50:
 4808 0444 73746F70 		.ascii	"stopMotor1AndUpdate\000"
 4808      4D6F746F 
 4808      7231416E 
 4808      64557064 
 4808      61746500 
 4809              	.LASF23:
 4810 0458 63757272 		.ascii	"currentOrientation_Radians\000"
 4810      656E744F 
 4810      7269656E 
 4810      74617469 
 4810      6F6E5F52 
 4811              	.LASF93:
 4812 0473 4D6F746F 		.ascii	"Motor_2_Encoder_Counts_Stop\000"
 4812      725F325F 
 4812      456E636F 
 4812      6465725F 
 4812      436F756E 
 4813              	.LASF48:
 4814 048f 64657369 		.ascii	"desiredPosition\000"
 4814      72656450 
 4814      6F736974 
 4814      696F6E00 
 4815              	.LASF28:
 4816 049f 4D315F46 		.ascii	"M1_FD\000"
 4816      4400
 4817              	.LASF20:
 4818 04a5 6F726965 		.ascii	"orientationUpdate\000"
 4818      6E746174 
 4818      696F6E55 
 4818      70646174 
 4818      6500
 4819              	.LASF92:
 4820 04b7 4D6F746F 		.ascii	"Motor_1_Encoder_Counts_ReadStatusRegister\000"
 4820      725F315F 
 4820      456E636F 
 4820      6465725F 
 4820      436F756E 
 4821              	.LASF52:
 4822 04e1 6D6F7665 		.ascii	"moveAndAngle\000"
 4822      416E6441 
 4822      6E676C65 
 4822      00
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccL77S3Y.s 			page 97


 4823              	.LASF79:
 4824 04ee 4D6F746F 		.ascii	"Motor_2_Encoder_Counts_WriteCounter\000"
 4824      725F325F 
 4824      456E636F 
 4824      6465725F 
 4824      436F756E 
 4825              	.LASF90:
 4826 0512 4D6F746F 		.ascii	"Motor_1_Encoder_Counts_Stop\000"
 4826      725F315F 
 4826      456E636F 
 4826      6465725F 
 4826      436F756E 
 4827              	.LASF1:
 4828 052e 646F7562 		.ascii	"double\000"
 4828      6C6500
 4829              	.LASF91:
 4830 0535 55415254 		.ascii	"UART_1_PutString\000"
 4830      5F315F50 
 4830      75745374 
 4830      72696E67 
 4830      00
 4831              	.LASF57:
 4832 0546 49544D5F 		.ascii	"ITM_RxBuffer\000"
 4832      52784275 
 4832      66666572 
 4832      00
 4833              	.LASF94:
 4834 0553 4D6F746F 		.ascii	"Motor_2_Encoder_Counts_ReadStatusRegister\000"
 4834      725F325F 
 4834      456E636F 
 4834      6465725F 
 4834      436F756E 
 4835              	.LASF46:
 4836 057d 64697370 		.ascii	"displaceRight\000"
 4836      6C616365 
 4836      52696768 
 4836      7400
 4837              	.LASF69:
 4838 058b 6D6F746F 		.ascii	"motor2Enable\000"
 4838      7232456E 
 4838      61626C65 
 4838      00
 4839              	.LASF35:
 4840 0598 636F756E 		.ascii	"count1\000"
 4840      743100
 4841              	.LASF36:
 4842 059f 636F756E 		.ascii	"count2\000"
 4842      743200
 4843              	.LASF11:
 4844 05a6 5F5F696E 		.ascii	"__int32_t\000"
 4844      7433325F 
 4844      7400
 4845              	.LASF61:
 4846 05b0 7075636B 		.ascii	"puckRackColours\000"
 4846      5261636B 
 4846      436F6C6F 
 4846      75727300 
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccL77S3Y.s 			page 98


 4847              	.LASF98:
 4848 05c0 433A5C55 		.ascii	"C:\\Users\\Misha\\Documents\\PSoC Creator\\ECE3091_"
 4848      73657273 
 4848      5C4D6973 
 4848      68615C44 
 4848      6F63756D 
 4849 05ee 47726F75 		.ascii	"Group17\\Group17RobotReal\\Group17Robot.cydsn\000"
 4849      7031375C 
 4849      47726F75 
 4849      70313752 
 4849      6F626F74 
 4850              	.LASF75:
 4851 061a 6D6F7665 		.ascii	"moveLeftAllowed\000"
 4851      4C656674 
 4851      416C6C6F 
 4851      77656400 
 4852              	.LASF43:
 4853 062a 7475726E 		.ascii	"turnRight\000"
 4853      52696768 
 4853      7400
 4854              	.LASF15:
 4855 0634 73697A65 		.ascii	"sizetype\000"
 4855      74797065 
 4855      00
 4856              	.LASF55:
 4857 063d 616E676C 		.ascii	"angle\000"
 4857      6500
 4858              	.LASF67:
 4859 0643 6F757470 		.ascii	"output\000"
 4859      757400
 4860              	.LASF56:
 4861 064a 6572726F 		.ascii	"error\000"
 4861      7200
 4862              	.LASF31:
 4863 0650 4D325F42 		.ascii	"M2_BD\000"
 4863      4400
 4864              	.LASF38:
 4865 0656 616D6F75 		.ascii	"amount\000"
 4865      6E7400
 4866              	.LASF96:
 4867 065d 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 4867      43313120 
 4867      352E342E 
 4867      31203230 
 4867      31363036 
 4868 0690 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 4868      20726576 
 4868      6973696F 
 4868      6E203233 
 4868      37373135 
 4869 06c3 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 4869      66756E63 
 4869      74696F6E 
 4869      2D736563 
 4869      74696F6E 
 4870              	.LASF73:
 4871 06eb 63757272 		.ascii	"currentOrientation\000"
ARM GAS  C:\Users\Misha\AppData\Local\Temp\ccL77S3Y.s 			page 99


 4871      656E744F 
 4871      7269656E 
 4871      74617469 
 4871      6F6E00
 4872              	.LASF44:
 4873 06fe 64697370 		.ascii	"displaceLeft\000"
 4873      6C616365 
 4873      4C656674 
 4873      00
 4874              	.LASF30:
 4875 070b 4D325F46 		.ascii	"M2_FD\000"
 4875      4400
 4876              	.LASF66:
 4877 0711 696E6974 		.ascii	"initialisation\000"
 4877      69616C69 
 4877      73617469 
 4877      6F6E00
 4878              	.LASF84:
 4879 0720 44726966 		.ascii	"Drift_Check_Timer_Start\000"
 4879      745F4368 
 4879      65636B5F 
 4879      54696D65 
 4879      725F5374 
 4880              	.LASF76:
 4881 0738 4D6F746F 		.ascii	"Motor_1_Encoder_Counts_ReadCounter\000"
 4881      725F315F 
 4881      456E636F 
 4881      6465725F 
 4881      436F756E 
 4882              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
