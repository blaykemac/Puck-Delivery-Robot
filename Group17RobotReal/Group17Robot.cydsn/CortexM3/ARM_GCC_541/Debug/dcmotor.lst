ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\cc13CBnx.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"dcmotor.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	__aeabi_i2d
  20              		.global	__aeabi_dmul
  21              		.global	__aeabi_ddiv
  22              		.global	__aeabi_d2f
  23              		.global	__aeabi_f2d
  24              		.global	__aeabi_dadd
  25              		.section	.text.positionUpdate,"ax",%progbits
  26              		.align	2
  27              		.global	positionUpdate
  28              		.thumb
  29              		.thumb_func
  30              		.type	positionUpdate, %function
  31              	positionUpdate:
  32              	.LFB64:
  33              		.file 1 "dcmotor.c"
   1:dcmotor.c     **** /* ========================================
   2:dcmotor.c     ****  *
   3:dcmotor.c     ****  * Copyright YOUR COMPANY, THE YEAR
   4:dcmotor.c     ****  * All Rights Reserved
   5:dcmotor.c     ****  * UNPUBLISHED, LICENSED SOFTWARE.
   6:dcmotor.c     ****  *
   7:dcmotor.c     ****  * CONFIDENTIAL AND PROPRIETARY INFORMATION
   8:dcmotor.c     ****  * WHICH IS THE PROPERTY OF your company.
   9:dcmotor.c     ****  *
  10:dcmotor.c     ****  * ========================================
  11:dcmotor.c     **** */
  12:dcmotor.c     **** 
  13:dcmotor.c     **** //Standard C libraries
  14:dcmotor.c     **** #include "project.h"
  15:dcmotor.c     **** #include <stdio.h>
  16:dcmotor.c     **** #include <string.h>
  17:dcmotor.c     **** #include <math.h>
  18:dcmotor.c     **** #include "ultrasonic.h"
  19:dcmotor.c     **** #include "main.h"
  20:dcmotor.c     **** #include "dcmotor.h"
  21:dcmotor.c     **** 
  22:dcmotor.c     **** //global variable currentPosition and currentOrientation (in main). Declare as externs in 
  23:dcmotor.c     **** //dcmotor, I guess
  24:dcmotor.c     **** extern float currentPosition[2];
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\cc13CBnx.s 			page 2


  25:dcmotor.c     **** extern float desiredPosition[2];
  26:dcmotor.c     **** extern int currentOrientation; //in degrees (convert to radians when needed)
  27:dcmotor.c     **** extern int desiredOrientation;
  28:dcmotor.c     **** extern short int motor1Enable; //These two will be on if the motors are on
  29:dcmotor.c     **** extern short int motor2Enable;
  30:dcmotor.c     **** extern int M1_FD; //The four values shown here will be the duty cycles of the motors
  31:dcmotor.c     **** extern int M1_BD; //There are times when parts of the code (such as the driftCorrect function)
  32:dcmotor.c     **** extern int M2_FD; //need to know about the duty cycles. So we make the duty cycles a globally 
  33:dcmotor.c     **** extern int M2_BD; //known variable
  34:dcmotor.c     **** extern int motor1EncoderCounts; //These two variables will allow the entire program to keep 
  35:dcmotor.c     **** extern int motor2EncoderCounts; //track of how many turns the motors have spun 
  36:dcmotor.c     **** extern short int moveNow; //This is a flag that lets the main program tell the moving functions
  37:dcmotor.c     **** //whether we want the robot to be moving or not. For example, when we need to operate servos
  38:dcmotor.c     **** //the main program would set moveNow to FALSE.
  39:dcmotor.c     **** extern float block_location[4]; //This will hold the co-ordinates for the obstacle block. 0,1 will 
  40:dcmotor.c     **** //and xmax, 2,3 will be ymin, ymax.
  41:dcmotor.c     **** extern int state; //The state of the robot as defined in main 
  42:dcmotor.c     **** 
  43:dcmotor.c     **** //The four flags below let the rest of the program know if the robot is trying to drive 
  44:dcmotor.c     **** //forward or back, turn left or right. At the start of every motion, turn these flags on
  45:dcmotor.c     **** //at the end turn them off.
  46:dcmotor.c     **** extern int drivingForwardFlag;
  47:dcmotor.c     **** extern int drivingBackwardFlag;
  48:dcmotor.c     **** extern int turningLeftFlag;
  49:dcmotor.c     **** extern int turningRightFlag;
  50:dcmotor.c     **** 
  51:dcmotor.c     **** //These flags will be used by the main program to allow the robot to move in certain directions
  52:dcmotor.c     **** extern short int moveLeftAllowed;
  53:dcmotor.c     **** extern short int moveRightAllowed;
  54:dcmotor.c     **** extern short int moveForwardAllowed;
  55:dcmotor.c     **** extern short int moveBackwardAllowed;
  56:dcmotor.c     **** 
  57:dcmotor.c     **** extern char output[32]; //for the UART
  58:dcmotor.c     **** 
  59:dcmotor.c     **** //This function takes a number of counts from the encoder and, assuming that the number of 
  60:dcmotor.c     **** //counts has been moved in the currentOrientation direction, updates the current position. 
  61:dcmotor.c     **** //Current position can only be updated from within this function
  62:dcmotor.c     **** void positionUpdate(int counts, int drivingForwardFlag, int drivingBackwardFlag){
  34              		.loc 1 62 0
  35              		.cfi_startproc
  36              		@ args = 0, pretend = 0, frame = 0
  37              		@ frame_needed = 0, uses_anonymous_args = 0
  38              	.LVL0:
  39 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
  40              		.cfi_def_cfa_offset 32
  41              		.cfi_offset 4, -32
  42              		.cfi_offset 5, -28
  43              		.cfi_offset 6, -24
  44              		.cfi_offset 7, -20
  45              		.cfi_offset 8, -16
  46              		.cfi_offset 9, -12
  47              		.cfi_offset 10, -8
  48              		.cfi_offset 14, -4
  49 0004 0746     		mov	r7, r0
  50 0006 0C46     		mov	r4, r1
  51 0008 1546     		mov	r5, r2
  63:dcmotor.c     ****     float currentOrientation_Radians = (M_PI*currentOrientation/180);
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\cc13CBnx.s 			page 3


  52              		.loc 1 63 0
  53 000a 514B     		ldr	r3, .L5+16
  54 000c 1868     		ldr	r0, [r3]
  55              	.LVL1:
  56 000e FFF7FEFF 		bl	__aeabi_i2d
  57              	.LVL2:
  58 0012 4BA3     		adr	r3, .L5
  59 0014 D3E90023 		ldrd	r2, [r3]
  60 0018 FFF7FEFF 		bl	__aeabi_dmul
  61              	.LVL3:
  62 001c 0022     		movs	r2, #0
  63 001e 4D4B     		ldr	r3, .L5+20
  64 0020 FFF7FEFF 		bl	__aeabi_ddiv
  65              	.LVL4:
  66 0024 FFF7FEFF 		bl	__aeabi_d2f
  67              	.LVL5:
  68 0028 0646     		mov	r6, r0
  69              	.LVL6:
  64:dcmotor.c     ****     if (drivingForwardFlag == TRUE){
  70              		.loc 1 64 0
  71 002a 012C     		cmp	r4, #1
  72 002c 40D1     		bne	.L2
  65:dcmotor.c     ****         //When we update position, be aware that we measure orientation as 0 degres facing
  66:dcmotor.c     ****         //to the east of the arena and increasing counterclockwise
  67:dcmotor.c     ****         currentPosition[0] += CM_PER_COUNT*counts*cos(currentOrientation_Radians);
  73              		.loc 1 67 0
  74 002e 3846     		mov	r0, r7
  75              	.LVL7:
  76 0030 FFF7FEFF 		bl	__aeabi_i2d
  77              	.LVL8:
  78 0034 44A3     		adr	r3, .L5+8
  79 0036 D3E90023 		ldrd	r2, [r3]
  80 003a FFF7FEFF 		bl	__aeabi_dmul
  81              	.LVL9:
  82 003e 0446     		mov	r4, r0
  83              	.LVL10:
  84 0040 0D46     		mov	r5, r1
  85              	.LVL11:
  86 0042 3046     		mov	r0, r6
  87 0044 FFF7FEFF 		bl	__aeabi_f2d
  88              	.LVL12:
  89 0048 0646     		mov	r6, r0
  90              	.LVL13:
  91 004a 0F46     		mov	r7, r1
  92              	.LVL14:
  93 004c FFF7FEFF 		bl	cos
  94              	.LVL15:
  95 0050 0246     		mov	r2, r0
  96 0052 0B46     		mov	r3, r1
  97 0054 2046     		mov	r0, r4
  98 0056 2946     		mov	r1, r5
  99 0058 FFF7FEFF 		bl	__aeabi_dmul
 100              	.LVL16:
 101 005c 8046     		mov	r8, r0
 102 005e 8946     		mov	r9, r1
 103 0060 DFF8F4A0 		ldr	r10, .L5+24
 104 0064 DAF80000 		ldr	r0, [r10]	@ float
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\cc13CBnx.s 			page 4


 105 0068 FFF7FEFF 		bl	__aeabi_f2d
 106              	.LVL17:
 107 006c 4246     		mov	r2, r8
 108 006e 4B46     		mov	r3, r9
 109 0070 FFF7FEFF 		bl	__aeabi_dadd
 110              	.LVL18:
 111 0074 FFF7FEFF 		bl	__aeabi_d2f
 112              	.LVL19:
 113 0078 CAF80000 		str	r0, [r10]	@ float
  68:dcmotor.c     ****         currentPosition[1] += CM_PER_COUNT*counts*sin(currentOrientation_Radians);
 114              		.loc 1 68 0
 115 007c 3046     		mov	r0, r6
 116 007e 3946     		mov	r1, r7
 117 0080 FFF7FEFF 		bl	sin
 118              	.LVL20:
 119 0084 0246     		mov	r2, r0
 120 0086 0B46     		mov	r3, r1
 121 0088 2046     		mov	r0, r4
 122 008a 2946     		mov	r1, r5
 123 008c FFF7FEFF 		bl	__aeabi_dmul
 124              	.LVL21:
 125 0090 0446     		mov	r4, r0
 126 0092 0D46     		mov	r5, r1
 127 0094 DAF80400 		ldr	r0, [r10, #4]	@ float
 128 0098 FFF7FEFF 		bl	__aeabi_f2d
 129              	.LVL22:
 130 009c 2246     		mov	r2, r4
 131 009e 2B46     		mov	r3, r5
 132 00a0 FFF7FEFF 		bl	__aeabi_dadd
 133              	.LVL23:
 134 00a4 FFF7FEFF 		bl	__aeabi_d2f
 135              	.LVL24:
 136 00a8 CAF80400 		str	r0, [r10, #4]	@ float
 137 00ac BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 138              	.LVL25:
 139              	.L2:
  69:dcmotor.c     ****     }else if (drivingBackwardFlag == TRUE){
 140              		.loc 1 69 0
 141 00b0 012D     		cmp	r5, #1
 142 00b2 43D1     		bne	.L1
  70:dcmotor.c     ****         currentPosition[0] += CM_PER_COUNT*counts*cos(currentOrientation_Radians + M_PI); 
 143              		.loc 1 70 0
 144 00b4 3846     		mov	r0, r7
 145              	.LVL26:
 146 00b6 FFF7FEFF 		bl	__aeabi_i2d
 147              	.LVL27:
 148 00ba 23A3     		adr	r3, .L5+8
 149 00bc D3E90023 		ldrd	r2, [r3]
 150 00c0 FFF7FEFF 		bl	__aeabi_dmul
 151              	.LVL28:
 152 00c4 0446     		mov	r4, r0
 153              	.LVL29:
 154 00c6 0D46     		mov	r5, r1
 155              	.LVL30:
 156 00c8 3046     		mov	r0, r6
 157 00ca FFF7FEFF 		bl	__aeabi_f2d
 158              	.LVL31:
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\cc13CBnx.s 			page 5


 159 00ce 1CA3     		adr	r3, .L5
 160 00d0 D3E90023 		ldrd	r2, [r3]
 161 00d4 FFF7FEFF 		bl	__aeabi_dadd
 162              	.LVL32:
 163 00d8 0646     		mov	r6, r0
 164              	.LVL33:
 165 00da 0F46     		mov	r7, r1
 166              	.LVL34:
 167 00dc FFF7FEFF 		bl	cos
 168              	.LVL35:
 169 00e0 0246     		mov	r2, r0
 170 00e2 0B46     		mov	r3, r1
 171 00e4 2046     		mov	r0, r4
 172 00e6 2946     		mov	r1, r5
 173 00e8 FFF7FEFF 		bl	__aeabi_dmul
 174              	.LVL36:
 175 00ec 8046     		mov	r8, r0
 176 00ee 8946     		mov	r9, r1
 177 00f0 DFF864A0 		ldr	r10, .L5+24
 178 00f4 DAF80000 		ldr	r0, [r10]	@ float
 179 00f8 FFF7FEFF 		bl	__aeabi_f2d
 180              	.LVL37:
 181 00fc 4246     		mov	r2, r8
 182 00fe 4B46     		mov	r3, r9
 183 0100 FFF7FEFF 		bl	__aeabi_dadd
 184              	.LVL38:
 185 0104 FFF7FEFF 		bl	__aeabi_d2f
 186              	.LVL39:
 187 0108 CAF80000 		str	r0, [r10]	@ float
  71:dcmotor.c     ****         currentPosition[1] += CM_PER_COUNT*counts*sin(currentOrientation_Radians + M_PI);
 188              		.loc 1 71 0
 189 010c 3046     		mov	r0, r6
 190 010e 3946     		mov	r1, r7
 191 0110 FFF7FEFF 		bl	sin
 192              	.LVL40:
 193 0114 0246     		mov	r2, r0
 194 0116 0B46     		mov	r3, r1
 195 0118 2046     		mov	r0, r4
 196 011a 2946     		mov	r1, r5
 197 011c FFF7FEFF 		bl	__aeabi_dmul
 198              	.LVL41:
 199 0120 0446     		mov	r4, r0
 200 0122 0D46     		mov	r5, r1
 201 0124 DAF80400 		ldr	r0, [r10, #4]	@ float
 202 0128 FFF7FEFF 		bl	__aeabi_f2d
 203              	.LVL42:
 204 012c 2246     		mov	r2, r4
 205 012e 2B46     		mov	r3, r5
 206 0130 FFF7FEFF 		bl	__aeabi_dadd
 207              	.LVL43:
 208 0134 FFF7FEFF 		bl	__aeabi_d2f
 209              	.LVL44:
 210 0138 CAF80400 		str	r0, [r10, #4]	@ float
 211              	.L1:
 212 013c BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 213              	.L6:
 214              		.align	3
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\cc13CBnx.s 			page 6


 215              	.L5:
 216 0140 182D4454 		.word	1413754136
 217 0144 FB210940 		.word	1074340347
 218 0148 12A5BDC1 		.word	-1044536046
 219 014c 1726933F 		.word	1066608151
 220 0150 00000000 		.word	currentOrientation
 221 0154 00806640 		.word	1080459264
 222 0158 00000000 		.word	currentPosition
 223              		.cfi_endproc
 224              	.LFE64:
 225              		.size	positionUpdate, .-positionUpdate
 226              		.global	__aeabi_d2iz
 227              		.section	.text.orientationUpdate,"ax",%progbits
 228              		.align	2
 229              		.global	orientationUpdate
 230              		.thumb
 231              		.thumb_func
 232              		.type	orientationUpdate, %function
 233              	orientationUpdate:
 234              	.LFB65:
  72:dcmotor.c     ****     }
  73:dcmotor.c     **** }
  74:dcmotor.c     **** 
  75:dcmotor.c     **** //This function takes a number of counts from the encoder, and based on whether we are 
  76:dcmotor.c     **** //turning left or right, updates the current orientation. Current orientation can only
  77:dcmotor.c     **** //be updated from within this function
  78:dcmotor.c     **** void orientationUpdate(int counts,int turningLeftFlag, int turningRightFlag){
 235              		.loc 1 78 0
 236              		.cfi_startproc
 237              		@ args = 0, pretend = 0, frame = 0
 238              		@ frame_needed = 0, uses_anonymous_args = 0
 239              	.LVL45:
 240 0000 38B5     		push	{r3, r4, r5, lr}
 241              		.cfi_def_cfa_offset 16
 242              		.cfi_offset 3, -16
 243              		.cfi_offset 4, -12
 244              		.cfi_offset 5, -8
 245              		.cfi_offset 14, -4
 246 0002 0C46     		mov	r4, r1
 247 0004 1546     		mov	r5, r2
  79:dcmotor.c     ****     int degreesMoved = counts*DEGREES_PER_COUNT;
 248              		.loc 1 79 0
 249 0006 FFF7FEFF 		bl	__aeabi_i2d
 250              	.LVL46:
 251 000a 17A3     		adr	r3, .L11
 252 000c D3E90023 		ldrd	r2, [r3]
 253 0010 FFF7FEFF 		bl	__aeabi_dmul
 254              	.LVL47:
 255 0014 FFF7FEFF 		bl	__aeabi_d2iz
 256              	.LVL48:
  80:dcmotor.c     ****     if (turningLeftFlag == TRUE){
 257              		.loc 1 80 0
 258 0018 012C     		cmp	r4, #1
 259 001a 0FD1     		bne	.L8
  81:dcmotor.c     ****         currentOrientation += degreesMoved;
 260              		.loc 1 81 0
 261 001c 1449     		ldr	r1, .L11+8
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\cc13CBnx.s 			page 7


 262 001e 0B68     		ldr	r3, [r1]
 263 0020 1844     		add	r0, r0, r3
 264              	.LVL49:
  82:dcmotor.c     ****         currentOrientation = currentOrientation%360;
 265              		.loc 1 82 0
 266 0022 144A     		ldr	r2, .L11+12
 267 0024 80FB0223 		smull	r2, r3, r0, r2
 268 0028 C218     		adds	r2, r0, r3
 269 002a C317     		asrs	r3, r0, #31
 270 002c C3EB2223 		rsb	r3, r3, r2, asr #8
 271 0030 4FF4B472 		mov	r2, #360
 272 0034 02FB1303 		mls	r3, r2, r3, r0
 273 0038 0B60     		str	r3, [r1]
 274 003a 38BD     		pop	{r3, r4, r5, pc}
 275              	.LVL50:
 276              	.L8:
  83:dcmotor.c     ****     }else if (turningRightFlag == TRUE){
 277              		.loc 1 83 0
 278 003c 012D     		cmp	r5, #1
 279 003e 12D1     		bne	.L7
  84:dcmotor.c     ****         currentOrientation -= degreesMoved;
 280              		.loc 1 84 0
 281 0040 0B49     		ldr	r1, .L11+8
 282 0042 0B68     		ldr	r3, [r1]
 283 0044 181A     		subs	r0, r3, r0
 284              	.LVL51:
  85:dcmotor.c     ****         currentOrientation = currentOrientation%360;
 285              		.loc 1 85 0
 286 0046 0B4A     		ldr	r2, .L11+12
 287 0048 80FB0223 		smull	r2, r3, r0, r2
 288 004c C218     		adds	r2, r0, r3
 289 004e C317     		asrs	r3, r0, #31
 290 0050 C3EB2223 		rsb	r3, r3, r2, asr #8
 291 0054 4FF4B472 		mov	r2, #360
 292 0058 02FB1303 		mls	r3, r2, r3, r0
 293 005c 0B60     		str	r3, [r1]
  86:dcmotor.c     ****         if (currentOrientation < 0){
 294              		.loc 1 86 0
 295 005e 002B     		cmp	r3, #0
 296 0060 01DA     		bge	.L7
  87:dcmotor.c     ****             currentOrientation += 360;
 297              		.loc 1 87 0
 298 0062 1344     		add	r3, r3, r2
 299 0064 0B60     		str	r3, [r1]
 300              	.L7:
 301 0066 38BD     		pop	{r3, r4, r5, pc}
 302              	.LVL52:
 303              	.L12:
 304              		.align	3
 305              	.L11:
 306 0068 E17A14AE 		.word	-1374389535
 307 006c 47E1BA3F 		.word	1069211975
 308 0070 00000000 		.word	currentOrientation
 309 0074 B7600BB6 		.word	-1240768329
 310              		.cfi_endproc
 311              	.LFE65:
 312              		.size	orientationUpdate, .-orientationUpdate
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\cc13CBnx.s 			page 8


 313              		.section	.text.stopMotion,"ax",%progbits
 314              		.align	2
 315              		.global	stopMotion
 316              		.thumb
 317              		.thumb_func
 318              		.type	stopMotion, %function
 319              	stopMotion:
 320              	.LFB66:
  88:dcmotor.c     ****         }
  89:dcmotor.c     ****     }
  90:dcmotor.c     **** }
  91:dcmotor.c     **** 
  92:dcmotor.c     **** //This function will be called once the ultrasonics or the encoders decide that it is time
  93:dcmotor.c     **** //to stop moving. 
  94:dcmotor.c     **** void stopMotion(void){
 321              		.loc 1 94 0
 322              		.cfi_startproc
 323              		@ args = 0, pretend = 0, frame = 0
 324              		@ frame_needed = 0, uses_anonymous_args = 0
 325 0000 08B5     		push	{r3, lr}
 326              		.cfi_def_cfa_offset 8
 327              		.cfi_offset 3, -8
 328              		.cfi_offset 14, -4
  95:dcmotor.c     ****     if ((motor1Enable == FALSE) && (motor2Enable == FALSE)){
 329              		.loc 1 95 0
 330 0002 244B     		ldr	r3, .L20
 331 0004 B3F90030 		ldrsh	r3, [r3]
 332 0008 002B     		cmp	r3, #0
 333 000a 41D1     		bne	.L13
 334              		.loc 1 95 0 is_stmt 0 discriminator 1
 335 000c 224B     		ldr	r3, .L20+4
 336 000e B3F90030 		ldrsh	r3, [r3]
 337 0012 002B     		cmp	r3, #0
 338 0014 3CD1     		bne	.L13
 339              	.LBB2:
  96:dcmotor.c     ****         //Update the driving permission flags
  97:dcmotor.c     ****         //Read encoder counts and update from previous position
  98:dcmotor.c     ****         int completedCounts;
  99:dcmotor.c     ****         if ((drivingForwardFlag == TRUE)||(drivingBackwardFlag == TRUE)){
 340              		.loc 1 99 0 is_stmt 1
 341 0016 214B     		ldr	r3, .L20+8
 342 0018 1B68     		ldr	r3, [r3]
 343 001a 012B     		cmp	r3, #1
 344 001c 03D0     		beq	.L15
 345              		.loc 1 99 0 is_stmt 0 discriminator 1
 346 001e 204B     		ldr	r3, .L20+12
 347 0020 1B68     		ldr	r3, [r3]
 348 0022 012B     		cmp	r3, #1
 349 0024 08D1     		bne	.L16
 350              	.L15:
 100:dcmotor.c     ****             //We assume that the two counter will have identical counts
 101:dcmotor.c     ****             completedCounts = Motor_1_Encoder_Counts_ReadCounter();
 351              		.loc 1 101 0 is_stmt 1
 352 0026 FFF7FEFF 		bl	Motor_1_Encoder_Counts_ReadCounter
 353              	.LVL53:
 102:dcmotor.c     ****             positionUpdate(completedCounts,drivingForwardFlag,drivingBackwardFlag);
 354              		.loc 1 102 0
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\cc13CBnx.s 			page 9


 355 002a 1D4B     		ldr	r3, .L20+12
 356 002c 1A68     		ldr	r2, [r3]
 357 002e 1B4B     		ldr	r3, .L20+8
 358 0030 1968     		ldr	r1, [r3]
 359 0032 FFF7FEFF 		bl	positionUpdate
 360              	.LVL54:
 361 0036 18E0     		b	.L17
 362              	.L16:
 103:dcmotor.c     ****         }else if (turningLeftFlag == TRUE){
 363              		.loc 1 103 0
 364 0038 1A4B     		ldr	r3, .L20+16
 365 003a 1B68     		ldr	r3, [r3]
 366 003c 012B     		cmp	r3, #1
 367 003e 08D1     		bne	.L18
 104:dcmotor.c     ****             completedCounts = Motor_2_Encoder_Counts_ReadCounter();
 368              		.loc 1 104 0
 369 0040 FFF7FEFF 		bl	Motor_2_Encoder_Counts_ReadCounter
 370              	.LVL55:
 105:dcmotor.c     ****             orientationUpdate(completedCounts,turningLeftFlag,turningRightFlag);
 371              		.loc 1 105 0
 372 0044 184B     		ldr	r3, .L20+20
 373 0046 1A68     		ldr	r2, [r3]
 374 0048 164B     		ldr	r3, .L20+16
 375 004a 1968     		ldr	r1, [r3]
 376 004c FFF7FEFF 		bl	orientationUpdate
 377              	.LVL56:
 378 0050 0BE0     		b	.L17
 379              	.L18:
 106:dcmotor.c     ****         }else if (turningRightFlag == TRUE){
 380              		.loc 1 106 0
 381 0052 154B     		ldr	r3, .L20+20
 382 0054 1B68     		ldr	r3, [r3]
 383 0056 012B     		cmp	r3, #1
 384 0058 07D1     		bne	.L17
 107:dcmotor.c     ****             completedCounts = Motor_1_Encoder_Counts_ReadCounter();
 385              		.loc 1 107 0
 386 005a FFF7FEFF 		bl	Motor_1_Encoder_Counts_ReadCounter
 387              	.LVL57:
 108:dcmotor.c     ****             orientationUpdate(completedCounts,turningLeftFlag,turningRightFlag);
 388              		.loc 1 108 0
 389 005e 124B     		ldr	r3, .L20+20
 390 0060 1A68     		ldr	r2, [r3]
 391 0062 104B     		ldr	r3, .L20+16
 392 0064 1968     		ldr	r1, [r3]
 393 0066 FFF7FEFF 		bl	orientationUpdate
 394              	.LVL58:
 395              	.L17:
 109:dcmotor.c     ****         }
 110:dcmotor.c     ****                 
 111:dcmotor.c     ****         //Clear encoder counts
 112:dcmotor.c     ****         Motor_1_Encoder_Counts_WriteCounter(0);
 396              		.loc 1 112 0
 397 006a 0020     		movs	r0, #0
 398 006c FFF7FEFF 		bl	Motor_1_Encoder_Counts_WriteCounter
 399              	.LVL59:
 113:dcmotor.c     ****         Motor_2_Encoder_Counts_WriteCounter(0);
 400              		.loc 1 113 0
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\cc13CBnx.s 			page 10


 401 0070 0020     		movs	r0, #0
 402 0072 FFF7FEFF 		bl	Motor_2_Encoder_Counts_WriteCounter
 403              	.LVL60:
 114:dcmotor.c     ****         
 115:dcmotor.c     ****         motor1EncoderCounts = 0;
 404              		.loc 1 115 0
 405 0076 0023     		movs	r3, #0
 406 0078 0C4A     		ldr	r2, .L20+24
 407 007a 1360     		str	r3, [r2]
 116:dcmotor.c     ****         motor2EncoderCounts = 0;
 408              		.loc 1 116 0
 409 007c 0C4A     		ldr	r2, .L20+28
 410 007e 1360     		str	r3, [r2]
 117:dcmotor.c     ****         
 118:dcmotor.c     ****         //Just for now, we are going to update driving flags by turning all of them off
 119:dcmotor.c     ****         drivingForwardFlag = FALSE;
 411              		.loc 1 119 0
 412 0080 064A     		ldr	r2, .L20+8
 413 0082 1360     		str	r3, [r2]
 120:dcmotor.c     ****         drivingBackwardFlag = FALSE;
 414              		.loc 1 120 0
 415 0084 064A     		ldr	r2, .L20+12
 416 0086 1360     		str	r3, [r2]
 121:dcmotor.c     ****         turningLeftFlag = FALSE;
 417              		.loc 1 121 0
 418 0088 064A     		ldr	r2, .L20+16
 419 008a 1360     		str	r3, [r2]
 122:dcmotor.c     ****         turningRightFlag = FALSE;
 420              		.loc 1 122 0
 421 008c 064A     		ldr	r2, .L20+20
 422 008e 1360     		str	r3, [r2]
 423              	.L13:
 424 0090 08BD     		pop	{r3, pc}
 425              	.L21:
 426 0092 00BF     		.align	2
 427              	.L20:
 428 0094 00000000 		.word	motor1Enable
 429 0098 00000000 		.word	motor2Enable
 430 009c 00000000 		.word	drivingForwardFlag
 431 00a0 00000000 		.word	drivingBackwardFlag
 432 00a4 00000000 		.word	turningLeftFlag
 433 00a8 00000000 		.word	turningRightFlag
 434 00ac 00000000 		.word	motor1EncoderCounts
 435 00b0 00000000 		.word	motor2EncoderCounts
 436              	.LBE2:
 437              		.cfi_endproc
 438              	.LFE66:
 439              		.size	stopMotion, .-stopMotion
 440              		.global	__aeabi_fdiv
 441              		.global	__aeabi_fmul
 442              		.global	__aeabi_f2uiz
 443              		.section	.text.motorDutyCycleUpdate,"ax",%progbits
 444              		.align	2
 445              		.global	motorDutyCycleUpdate
 446              		.thumb
 447              		.thumb_func
 448              		.type	motorDutyCycleUpdate, %function
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\cc13CBnx.s 			page 11


 449              	motorDutyCycleUpdate:
 450              	.LFB67:
 123:dcmotor.c     ****         
 124:dcmotor.c     ****         //Have code here to plan the route which should also update the driving flags
 125:dcmotor.c     ****         
 126:dcmotor.c     ****     }
 127:dcmotor.c     **** }
 128:dcmotor.c     **** 
 129:dcmotor.c     **** //Takes the duty cycles must be expressed as a percentage and runs the motors at those duty
 130:dcmotor.c     **** //cycles
 131:dcmotor.c     **** void motorDutyCycleUpdate(float M1_FD, float M1_BD, float M2_FD, float M2_BD){
 451              		.loc 1 131 0
 452              		.cfi_startproc
 453              		@ args = 0, pretend = 0, frame = 0
 454              		@ frame_needed = 0, uses_anonymous_args = 0
 455              	.LVL61:
 456 0000 70B5     		push	{r4, r5, r6, lr}
 457              		.cfi_def_cfa_offset 16
 458              		.cfi_offset 4, -16
 459              		.cfi_offset 5, -12
 460              		.cfi_offset 6, -8
 461              		.cfi_offset 14, -4
 462 0002 0D46     		mov	r5, r1
 463 0004 1646     		mov	r6, r2
 464 0006 1C46     		mov	r4, r3
 132:dcmotor.c     ****     Motor_1_driver_WriteCompare1((M1_FD/NUM_TO_PERCENT_CONVERTER)*DCMOTOR_PWM_PERIOD);
 465              		.loc 1 132 0
 466 0008 1749     		ldr	r1, .L24
 467              	.LVL62:
 468 000a FFF7FEFF 		bl	__aeabi_fdiv
 469              	.LVL63:
 470 000e 1749     		ldr	r1, .L24+4
 471 0010 FFF7FEFF 		bl	__aeabi_fmul
 472              	.LVL64:
 473 0014 FFF7FEFF 		bl	__aeabi_f2uiz
 474              	.LVL65:
 475 0018 80B2     		uxth	r0, r0
 476 001a FFF7FEFF 		bl	Motor_1_driver_WriteCompare1
 477              	.LVL66:
 133:dcmotor.c     ****     Motor_2_driver_WriteCompare1((M2_FD/NUM_TO_PERCENT_CONVERTER)*DCMOTOR_PWM_PERIOD);
 478              		.loc 1 133 0
 479 001e 1249     		ldr	r1, .L24
 480 0020 3046     		mov	r0, r6
 481 0022 FFF7FEFF 		bl	__aeabi_fdiv
 482              	.LVL67:
 483 0026 1149     		ldr	r1, .L24+4
 484 0028 FFF7FEFF 		bl	__aeabi_fmul
 485              	.LVL68:
 486 002c FFF7FEFF 		bl	__aeabi_f2uiz
 487              	.LVL69:
 488 0030 80B2     		uxth	r0, r0
 489 0032 FFF7FEFF 		bl	Motor_2_driver_WriteCompare1
 490              	.LVL70:
 134:dcmotor.c     ****     Motor_1_driver_WriteCompare2((M1_BD/NUM_TO_PERCENT_CONVERTER)*DCMOTOR_PWM_PERIOD);
 491              		.loc 1 134 0
 492 0036 0C49     		ldr	r1, .L24
 493 0038 2846     		mov	r0, r5
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\cc13CBnx.s 			page 12


 494 003a FFF7FEFF 		bl	__aeabi_fdiv
 495              	.LVL71:
 496 003e 0B49     		ldr	r1, .L24+4
 497 0040 FFF7FEFF 		bl	__aeabi_fmul
 498              	.LVL72:
 499 0044 FFF7FEFF 		bl	__aeabi_f2uiz
 500              	.LVL73:
 501 0048 80B2     		uxth	r0, r0
 502 004a FFF7FEFF 		bl	Motor_1_driver_WriteCompare2
 503              	.LVL74:
 135:dcmotor.c     ****     Motor_2_driver_WriteCompare2((M2_BD/NUM_TO_PERCENT_CONVERTER)*DCMOTOR_PWM_PERIOD);
 504              		.loc 1 135 0
 505 004e 0649     		ldr	r1, .L24
 506 0050 2046     		mov	r0, r4
 507 0052 FFF7FEFF 		bl	__aeabi_fdiv
 508              	.LVL75:
 509 0056 0549     		ldr	r1, .L24+4
 510 0058 FFF7FEFF 		bl	__aeabi_fmul
 511              	.LVL76:
 512 005c FFF7FEFF 		bl	__aeabi_f2uiz
 513              	.LVL77:
 514 0060 80B2     		uxth	r0, r0
 515 0062 FFF7FEFF 		bl	Motor_2_driver_WriteCompare2
 516              	.LVL78:
 517 0066 70BD     		pop	{r4, r5, r6, pc}
 518              	.LVL79:
 519              	.L25:
 520              		.align	2
 521              	.L24:
 522 0068 0000C842 		.word	1120403456
 523 006c 00009643 		.word	1133903872
 524              		.cfi_endproc
 525              	.LFE67:
 526              		.size	motorDutyCycleUpdate, .-motorDutyCycleUpdate
 527              		.global	__aeabi_i2f
 528              		.section	.text.driftCorrect,"ax",%progbits
 529              		.align	2
 530              		.global	driftCorrect
 531              		.thumb
 532              		.thumb_func
 533              		.type	driftCorrect, %function
 534              	driftCorrect:
 535              	.LFB68:
 136:dcmotor.c     **** }
 137:dcmotor.c     **** 
 138:dcmotor.c     **** //This function will be responsible for adjusting any drift. It will read and modify 
 139:dcmotor.c     **** //global variables M1_FD,M1_BD,M2_FD and M2_BD to do so.
 140:dcmotor.c     **** void driftCorrect(void){
 536              		.loc 1 140 0
 537              		.cfi_startproc
 538              		@ args = 0, pretend = 0, frame = 0
 539              		@ frame_needed = 0, uses_anonymous_args = 0
 540 0000 70B5     		push	{r4, r5, r6, lr}
 541              		.cfi_def_cfa_offset 16
 542              		.cfi_offset 4, -16
 543              		.cfi_offset 5, -12
 544              		.cfi_offset 6, -8
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\cc13CBnx.s 			page 13


 545              		.cfi_offset 14, -4
 141:dcmotor.c     ****     int temp; //allows us to swap motor encoders' speeds
 142:dcmotor.c     ****     if (motor1EncoderCounts > motor2EncoderCounts){
 546              		.loc 1 142 0
 547 0002 5D4B     		ldr	r3, .L44
 548 0004 1A68     		ldr	r2, [r3]
 549 0006 5D4B     		ldr	r3, .L44+4
 550 0008 1B68     		ldr	r3, [r3]
 551 000a 9A42     		cmp	r2, r3
 552 000c 4BDD     		ble	.L27
 143:dcmotor.c     ****         if (drivingForwardFlag == TRUE){
 553              		.loc 1 143 0
 554 000e 5C4B     		ldr	r3, .L44+8
 555 0010 1B68     		ldr	r3, [r3]
 556 0012 012B     		cmp	r3, #1
 557 0014 0ED1     		bne	.L28
 144:dcmotor.c     ****             if (M1_FD == M2_FD){
 558              		.loc 1 144 0
 559 0016 5B4B     		ldr	r3, .L44+12
 560 0018 1A68     		ldr	r2, [r3]
 561 001a 5B4B     		ldr	r3, .L44+16
 562 001c 1B68     		ldr	r3, [r3]
 563 001e 9A42     		cmp	r2, r3
 564 0020 03D1     		bne	.L29
 145:dcmotor.c     ****                 M1_FD = M2_FD - 1;
 565              		.loc 1 145 0
 566 0022 013B     		subs	r3, r3, #1
 567 0024 574A     		ldr	r2, .L44+12
 568 0026 1360     		str	r3, [r2]
 569 0028 8AE0     		b	.L30
 570              	.L29:
 571              	.LVL80:
 146:dcmotor.c     ****             }else{
 147:dcmotor.c     ****                 temp = M1_FD;
 148:dcmotor.c     ****                 M1_FD = M2_FD;
 572              		.loc 1 148 0
 573 002a 5649     		ldr	r1, .L44+12
 574 002c 0B60     		str	r3, [r1]
 149:dcmotor.c     ****                 M2_FD = temp;
 575              		.loc 1 149 0
 576 002e 564B     		ldr	r3, .L44+16
 577 0030 1A60     		str	r2, [r3]
 578 0032 85E0     		b	.L30
 579              	.LVL81:
 580              	.L28:
 150:dcmotor.c     ****             }
 151:dcmotor.c     ****         }
 152:dcmotor.c     ****         else if (drivingBackwardFlag == TRUE){
 581              		.loc 1 152 0
 582 0034 554B     		ldr	r3, .L44+20
 583 0036 1B68     		ldr	r3, [r3]
 584 0038 012B     		cmp	r3, #1
 585 003a 0ED1     		bne	.L31
 153:dcmotor.c     ****             if (M1_BD == M2_BD){
 586              		.loc 1 153 0
 587 003c 544B     		ldr	r3, .L44+24
 588 003e 1A68     		ldr	r2, [r3]
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\cc13CBnx.s 			page 14


 589 0040 544B     		ldr	r3, .L44+28
 590 0042 1B68     		ldr	r3, [r3]
 591 0044 9A42     		cmp	r2, r3
 592 0046 03D1     		bne	.L32
 154:dcmotor.c     ****                 M1_BD = M2_BD - 1;
 593              		.loc 1 154 0
 594 0048 013B     		subs	r3, r3, #1
 595 004a 514A     		ldr	r2, .L44+24
 596 004c 1360     		str	r3, [r2]
 597 004e 77E0     		b	.L30
 598              	.L32:
 599              	.LVL82:
 155:dcmotor.c     ****             }else{
 156:dcmotor.c     ****                 temp = M1_BD;
 157:dcmotor.c     ****                 M1_BD = M2_BD;
 600              		.loc 1 157 0
 601 0050 4F49     		ldr	r1, .L44+24
 602 0052 0B60     		str	r3, [r1]
 158:dcmotor.c     ****                 M2_BD = temp;
 603              		.loc 1 158 0
 604 0054 4F4B     		ldr	r3, .L44+28
 605 0056 1A60     		str	r2, [r3]
 606 0058 72E0     		b	.L30
 607              	.LVL83:
 608              	.L31:
 159:dcmotor.c     ****             }
 160:dcmotor.c     ****         }else if (turningLeftFlag == TRUE){
 609              		.loc 1 160 0
 610 005a 4F4B     		ldr	r3, .L44+32
 611 005c 1B68     		ldr	r3, [r3]
 612 005e 012B     		cmp	r3, #1
 613 0060 0ED1     		bne	.L33
 161:dcmotor.c     ****             if (M1_BD == M2_FD){
 614              		.loc 1 161 0
 615 0062 4B4B     		ldr	r3, .L44+24
 616 0064 1A68     		ldr	r2, [r3]
 617 0066 484B     		ldr	r3, .L44+16
 618 0068 1B68     		ldr	r3, [r3]
 619 006a 9A42     		cmp	r2, r3
 620 006c 03D1     		bne	.L34
 162:dcmotor.c     ****                 M1_BD = M2_FD - 1;
 621              		.loc 1 162 0
 622 006e 013B     		subs	r3, r3, #1
 623 0070 474A     		ldr	r2, .L44+24
 624 0072 1360     		str	r3, [r2]
 625 0074 64E0     		b	.L30
 626              	.L34:
 627              	.LVL84:
 163:dcmotor.c     ****             }else{
 164:dcmotor.c     ****                 temp = M1_BD;
 165:dcmotor.c     ****                 M1_BD = M2_FD;
 628              		.loc 1 165 0
 629 0076 4649     		ldr	r1, .L44+24
 630 0078 0B60     		str	r3, [r1]
 166:dcmotor.c     ****                 M2_FD = temp;
 631              		.loc 1 166 0
 632 007a 434B     		ldr	r3, .L44+16
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\cc13CBnx.s 			page 15


 633 007c 1A60     		str	r2, [r3]
 634 007e 5FE0     		b	.L30
 635              	.LVL85:
 636              	.L33:
 167:dcmotor.c     ****             }
 168:dcmotor.c     ****         }else if (turningRightFlag == TRUE){
 637              		.loc 1 168 0
 638 0080 464B     		ldr	r3, .L44+36
 639 0082 1B68     		ldr	r3, [r3]
 640 0084 012B     		cmp	r3, #1
 641 0086 5BD1     		bne	.L30
 169:dcmotor.c     ****             if (M1_FD == M2_BD){
 642              		.loc 1 169 0
 643 0088 3E4B     		ldr	r3, .L44+12
 644 008a 1A68     		ldr	r2, [r3]
 645 008c 414B     		ldr	r3, .L44+28
 646 008e 1B68     		ldr	r3, [r3]
 647 0090 9A42     		cmp	r2, r3
 648 0092 03D1     		bne	.L35
 170:dcmotor.c     ****                 M1_FD = M2_BD - 1;
 649              		.loc 1 170 0
 650 0094 013B     		subs	r3, r3, #1
 651 0096 3B4A     		ldr	r2, .L44+12
 652 0098 1360     		str	r3, [r2]
 653 009a 51E0     		b	.L30
 654              	.L35:
 655              	.LVL86:
 171:dcmotor.c     ****             }else{
 172:dcmotor.c     ****                 temp = M1_FD;
 173:dcmotor.c     ****                 M1_FD = M2_BD;
 656              		.loc 1 173 0
 657 009c 3949     		ldr	r1, .L44+12
 658 009e 0B60     		str	r3, [r1]
 174:dcmotor.c     ****                 M2_BD = temp;
 659              		.loc 1 174 0
 660 00a0 3C4B     		ldr	r3, .L44+28
 661 00a2 1A60     		str	r2, [r3]
 662 00a4 4CE0     		b	.L30
 663              	.LVL87:
 664              	.L27:
 175:dcmotor.c     ****             }
 176:dcmotor.c     ****         }
 177:dcmotor.c     ****     }else if (motor2EncoderCounts > motor1EncoderCounts){
 665              		.loc 1 177 0
 666 00a6 9A42     		cmp	r2, r3
 667 00a8 4ADA     		bge	.L30
 178:dcmotor.c     ****         if (drivingForwardFlag == TRUE){
 668              		.loc 1 178 0
 669 00aa 354B     		ldr	r3, .L44+8
 670 00ac 1B68     		ldr	r3, [r3]
 671 00ae 012B     		cmp	r3, #1
 672 00b0 0ED1     		bne	.L36
 179:dcmotor.c     ****             if (M1_FD == M2_FD){
 673              		.loc 1 179 0
 674 00b2 344B     		ldr	r3, .L44+12
 675 00b4 1B68     		ldr	r3, [r3]
 676 00b6 344A     		ldr	r2, .L44+16
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\cc13CBnx.s 			page 16


 677 00b8 1268     		ldr	r2, [r2]
 678 00ba 9342     		cmp	r3, r2
 679 00bc 03D1     		bne	.L37
 180:dcmotor.c     ****                 M2_FD = M1_FD - 1 ;
 680              		.loc 1 180 0
 681 00be 013B     		subs	r3, r3, #1
 682 00c0 314A     		ldr	r2, .L44+16
 683 00c2 1360     		str	r3, [r2]
 684 00c4 3CE0     		b	.L30
 685              	.L37:
 686              	.LVL88:
 181:dcmotor.c     ****             }else{
 182:dcmotor.c     ****                 temp = M1_FD;
 183:dcmotor.c     ****                 M1_FD = M2_FD;
 687              		.loc 1 183 0
 688 00c6 2F49     		ldr	r1, .L44+12
 689 00c8 0A60     		str	r2, [r1]
 184:dcmotor.c     ****                 M2_FD = temp;
 690              		.loc 1 184 0
 691 00ca 2F4A     		ldr	r2, .L44+16
 692 00cc 1360     		str	r3, [r2]
 693 00ce 37E0     		b	.L30
 694              	.LVL89:
 695              	.L36:
 185:dcmotor.c     ****             }
 186:dcmotor.c     ****         }
 187:dcmotor.c     ****         else if (drivingBackwardFlag == TRUE){
 696              		.loc 1 187 0
 697 00d0 2E4B     		ldr	r3, .L44+20
 698 00d2 1B68     		ldr	r3, [r3]
 699 00d4 012B     		cmp	r3, #1
 700 00d6 0ED1     		bne	.L38
 188:dcmotor.c     ****             if (M1_BD == M2_BD){
 701              		.loc 1 188 0
 702 00d8 2D4B     		ldr	r3, .L44+24
 703 00da 1B68     		ldr	r3, [r3]
 704 00dc 2D4A     		ldr	r2, .L44+28
 705 00de 1268     		ldr	r2, [r2]
 706 00e0 9342     		cmp	r3, r2
 707 00e2 03D1     		bne	.L39
 189:dcmotor.c     ****                 M2_BD = M1_BD - 1;
 708              		.loc 1 189 0
 709 00e4 013B     		subs	r3, r3, #1
 710 00e6 2B4A     		ldr	r2, .L44+28
 711 00e8 1360     		str	r3, [r2]
 712 00ea 29E0     		b	.L30
 713              	.L39:
 714              	.LVL90:
 190:dcmotor.c     ****             }else{
 191:dcmotor.c     ****                 temp = M1_BD;
 192:dcmotor.c     ****                 M1_BD = M2_BD;
 715              		.loc 1 192 0
 716 00ec 2849     		ldr	r1, .L44+24
 717 00ee 0A60     		str	r2, [r1]
 193:dcmotor.c     ****                 M2_BD = temp;
 718              		.loc 1 193 0
 719 00f0 284A     		ldr	r2, .L44+28
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\cc13CBnx.s 			page 17


 720 00f2 1360     		str	r3, [r2]
 721 00f4 24E0     		b	.L30
 722              	.LVL91:
 723              	.L38:
 194:dcmotor.c     ****             }
 195:dcmotor.c     ****         }else if (turningLeftFlag == TRUE){
 724              		.loc 1 195 0
 725 00f6 284B     		ldr	r3, .L44+32
 726 00f8 1B68     		ldr	r3, [r3]
 727 00fa 012B     		cmp	r3, #1
 728 00fc 0ED1     		bne	.L40
 196:dcmotor.c     ****             if (M1_BD == M2_FD){
 729              		.loc 1 196 0
 730 00fe 244B     		ldr	r3, .L44+24
 731 0100 1A68     		ldr	r2, [r3]
 732 0102 214B     		ldr	r3, .L44+16
 733 0104 1B68     		ldr	r3, [r3]
 734 0106 9A42     		cmp	r2, r3
 735 0108 03D1     		bne	.L41
 197:dcmotor.c     ****                 M1_BD = M2_FD - 1;
 736              		.loc 1 197 0
 737 010a 013B     		subs	r3, r3, #1
 738 010c 204A     		ldr	r2, .L44+24
 739 010e 1360     		str	r3, [r2]
 740 0110 16E0     		b	.L30
 741              	.L41:
 742              	.LVL92:
 198:dcmotor.c     ****             }else{
 199:dcmotor.c     ****                 temp = M1_BD;
 200:dcmotor.c     ****                 M1_BD = M2_FD;
 743              		.loc 1 200 0
 744 0112 1F49     		ldr	r1, .L44+24
 745 0114 0B60     		str	r3, [r1]
 201:dcmotor.c     ****                 M2_FD = temp;
 746              		.loc 1 201 0
 747 0116 1C4B     		ldr	r3, .L44+16
 748 0118 1A60     		str	r2, [r3]
 749 011a 11E0     		b	.L30
 750              	.LVL93:
 751              	.L40:
 202:dcmotor.c     ****             }
 203:dcmotor.c     ****         }else if (turningRightFlag == TRUE){
 752              		.loc 1 203 0
 753 011c 1F4B     		ldr	r3, .L44+36
 754 011e 1B68     		ldr	r3, [r3]
 755 0120 012B     		cmp	r3, #1
 756 0122 0DD1     		bne	.L30
 204:dcmotor.c     ****             if (M1_FD == M2_BD){
 757              		.loc 1 204 0
 758 0124 174B     		ldr	r3, .L44+12
 759 0126 1A68     		ldr	r2, [r3]
 760 0128 1A4B     		ldr	r3, .L44+28
 761 012a 1B68     		ldr	r3, [r3]
 762 012c 9A42     		cmp	r2, r3
 763 012e 03D1     		bne	.L42
 205:dcmotor.c     ****                 M1_FD = M2_BD - 1;
 764              		.loc 1 205 0
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\cc13CBnx.s 			page 18


 765 0130 013B     		subs	r3, r3, #1
 766 0132 144A     		ldr	r2, .L44+12
 767 0134 1360     		str	r3, [r2]
 768 0136 03E0     		b	.L30
 769              	.L42:
 770              	.LVL94:
 206:dcmotor.c     ****             }else{
 207:dcmotor.c     ****                 temp = M1_FD;
 208:dcmotor.c     ****                 M1_FD = M2_BD;
 771              		.loc 1 208 0
 772 0138 1249     		ldr	r1, .L44+12
 773 013a 0B60     		str	r3, [r1]
 209:dcmotor.c     ****                 M2_BD = temp;
 774              		.loc 1 209 0
 775 013c 154B     		ldr	r3, .L44+28
 776 013e 1A60     		str	r2, [r3]
 777              	.LVL95:
 778              	.L30:
 210:dcmotor.c     ****             }
 211:dcmotor.c     ****         }
 212:dcmotor.c     ****     }
 213:dcmotor.c     ****     motorDutyCycleUpdate(M1_FD,M1_BD,M2_FD,M2_BD);
 779              		.loc 1 213 0
 780 0140 144B     		ldr	r3, .L44+28
 781 0142 1868     		ldr	r0, [r3]
 782 0144 FFF7FEFF 		bl	__aeabi_i2f
 783              	.LVL96:
 784 0148 0646     		mov	r6, r0
 785 014a 0F4B     		ldr	r3, .L44+16
 786 014c 1868     		ldr	r0, [r3]
 787 014e FFF7FEFF 		bl	__aeabi_i2f
 788              	.LVL97:
 789 0152 0546     		mov	r5, r0
 790 0154 0E4B     		ldr	r3, .L44+24
 791 0156 1868     		ldr	r0, [r3]
 792 0158 FFF7FEFF 		bl	__aeabi_i2f
 793              	.LVL98:
 794 015c 0446     		mov	r4, r0
 795 015e 094B     		ldr	r3, .L44+12
 796 0160 1868     		ldr	r0, [r3]
 797 0162 FFF7FEFF 		bl	__aeabi_i2f
 798              	.LVL99:
 799 0166 3346     		mov	r3, r6
 800 0168 2A46     		mov	r2, r5
 801 016a 2146     		mov	r1, r4
 802 016c FFF7FEFF 		bl	motorDutyCycleUpdate
 803              	.LVL100:
 214:dcmotor.c     ****     Drift_Check_Timer_Start(); 
 804              		.loc 1 214 0
 805 0170 FFF7FEFF 		bl	Drift_Check_Timer_Start
 806              	.LVL101:
 807 0174 70BD     		pop	{r4, r5, r6, pc}
 808              	.L45:
 809 0176 00BF     		.align	2
 810              	.L44:
 811 0178 00000000 		.word	motor1EncoderCounts
 812 017c 00000000 		.word	motor2EncoderCounts
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\cc13CBnx.s 			page 19


 813 0180 00000000 		.word	drivingForwardFlag
 814 0184 00000000 		.word	M1_FD
 815 0188 00000000 		.word	M2_FD
 816 018c 00000000 		.word	drivingBackwardFlag
 817 0190 00000000 		.word	M1_BD
 818 0194 00000000 		.word	M2_BD
 819 0198 00000000 		.word	turningLeftFlag
 820 019c 00000000 		.word	turningRightFlag
 821              		.cfi_endproc
 822              	.LFE68:
 823              		.size	driftCorrect, .-driftCorrect
 824              		.section	.text.counterInitialise,"ax",%progbits
 825              		.align	2
 826              		.global	counterInitialise
 827              		.thumb
 828              		.thumb_func
 829              		.type	counterInitialise, %function
 830              	counterInitialise:
 831              	.LFB69:
 215:dcmotor.c     **** }
 216:dcmotor.c     **** 
 217:dcmotor.c     **** //Takes two integers count1 and count2, and sets the counters up so that they will start counting 
 218:dcmotor.c     **** //at zero and interrupt when their counts equal the count values specified
 219:dcmotor.c     **** void counterInitialise(int count1, int count2){
 832              		.loc 1 219 0
 833              		.cfi_startproc
 834              		@ args = 0, pretend = 0, frame = 0
 835              		@ frame_needed = 0, uses_anonymous_args = 0
 836              	.LVL102:
 837 0000 38B5     		push	{r3, r4, r5, lr}
 838              		.cfi_def_cfa_offset 16
 839              		.cfi_offset 3, -16
 840              		.cfi_offset 4, -12
 841              		.cfi_offset 5, -8
 842              		.cfi_offset 14, -4
 843 0002 0546     		mov	r5, r0
 844 0004 0C46     		mov	r4, r1
 220:dcmotor.c     ****     Motor_1_Encoder_Counts_WriteCounter(0); //Start the counters from 0
 845              		.loc 1 220 0
 846 0006 0020     		movs	r0, #0
 847              	.LVL103:
 848 0008 FFF7FEFF 		bl	Motor_1_Encoder_Counts_WriteCounter
 849              	.LVL104:
 221:dcmotor.c     ****     Motor_2_Encoder_Counts_WriteCounter(0); //Start the counters from 0
 850              		.loc 1 221 0
 851 000c 0020     		movs	r0, #0
 852 000e FFF7FEFF 		bl	Motor_2_Encoder_Counts_WriteCounter
 853              	.LVL105:
 222:dcmotor.c     ****     Motor_1_Encoder_Counts_WritePeriod(count1);
 854              		.loc 1 222 0
 855 0012 A8B2     		uxth	r0, r5
 856 0014 FFF7FEFF 		bl	Motor_1_Encoder_Counts_WritePeriod
 857              	.LVL106:
 223:dcmotor.c     ****     Motor_2_Encoder_Counts_WritePeriod(count2);
 858              		.loc 1 223 0
 859 0018 A0B2     		uxth	r0, r4
 860 001a FFF7FEFF 		bl	Motor_2_Encoder_Counts_WritePeriod
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\cc13CBnx.s 			page 20


 861              	.LVL107:
 862 001e 38BD     		pop	{r3, r4, r5, pc}
 863              		.cfi_endproc
 864              	.LFE69:
 865              		.size	counterInitialise, .-counterInitialise
 866              		.section	.text.moveForward,"ax",%progbits
 867              		.align	2
 868              		.global	moveForward
 869              		.thumb
 870              		.thumb_func
 871              		.type	moveForward, %function
 872              	moveForward:
 873              	.LFB70:
 224:dcmotor.c     **** }
 225:dcmotor.c     **** 
 226:dcmotor.c     **** //Takes a distance to move in cm and moves. Blocking (sadly)
 227:dcmotor.c     **** void moveForward(float amount){
 874              		.loc 1 227 0
 875              		.cfi_startproc
 876              		@ args = 0, pretend = 0, frame = 0
 877              		@ frame_needed = 0, uses_anonymous_args = 0
 878              	.LVL108:
 879 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 880              		.cfi_def_cfa_offset 24
 881              		.cfi_offset 4, -24
 882              		.cfi_offset 5, -20
 883              		.cfi_offset 6, -16
 884              		.cfi_offset 7, -12
 885              		.cfi_offset 8, -8
 886              		.cfi_offset 14, -4
 228:dcmotor.c     ****     int counts = amount/CM_PER_COUNT;
 887              		.loc 1 228 0
 888 0004 FFF7FEFF 		bl	__aeabi_f2d
 889              	.LVL109:
 890 0008 23A3     		adr	r3, .L52
 891 000a D3E90023 		ldrd	r2, [r3]
 892 000e FFF7FEFF 		bl	__aeabi_ddiv
 893              	.LVL110:
 894 0012 FFF7FEFF 		bl	__aeabi_d2iz
 895              	.LVL111:
 229:dcmotor.c     ****     motor1Enable = TRUE;
 896              		.loc 1 229 0
 897 0016 0123     		movs	r3, #1
 898 0018 214A     		ldr	r2, .L52+8
 899 001a 1380     		strh	r3, [r2]	@ movhi
 230:dcmotor.c     ****     motor2Enable = TRUE;
 900              		.loc 1 230 0
 901 001c 214A     		ldr	r2, .L52+12
 902 001e 1380     		strh	r3, [r2]	@ movhi
 231:dcmotor.c     ****     drivingForwardFlag = TRUE;
 903              		.loc 1 231 0
 904 0020 214A     		ldr	r2, .L52+16
 905 0022 1360     		str	r3, [r2]
 232:dcmotor.c     ****     motor1EncoderCounts = 0;
 906              		.loc 1 232 0
 907 0024 0024     		movs	r4, #0
 908 0026 214B     		ldr	r3, .L52+20
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\cc13CBnx.s 			page 21


 909 0028 1C60     		str	r4, [r3]
 233:dcmotor.c     ****     motor2EncoderCounts = 0;
 910              		.loc 1 233 0
 911 002a 214B     		ldr	r3, .L52+24
 912 002c 1C60     		str	r4, [r3]
 234:dcmotor.c     ****     counterInitialise(counts,counts); //Sets up counters to interrupt at right time
 913              		.loc 1 234 0
 914 002e 0146     		mov	r1, r0
 915 0030 FFF7FEFF 		bl	counterInitialise
 916              	.LVL112:
 235:dcmotor.c     ****     M1_FD = DCMOTOR_IDEAL_DUTY_CYCLE;
 917              		.loc 1 235 0
 918 0034 1F4D     		ldr	r5, .L52+28
 919 0036 5023     		movs	r3, #80
 920 0038 2B60     		str	r3, [r5]
 236:dcmotor.c     ****     M1_BD = 0;
 921              		.loc 1 236 0
 922 003a 1F4E     		ldr	r6, .L52+32
 923 003c 3460     		str	r4, [r6]
 237:dcmotor.c     ****     M2_FD =  DCMOTOR_IDEAL_DUTY_CYCLE;
 924              		.loc 1 237 0
 925 003e 1F4F     		ldr	r7, .L52+36
 926 0040 3B60     		str	r3, [r7]
 238:dcmotor.c     ****     M2_BD = 0;
 927              		.loc 1 238 0
 928 0042 DFF87C80 		ldr	r8, .L52+40
 929 0046 C8F80040 		str	r4, [r8]
 239:dcmotor.c     ****     Motor_1_Encoder_Counts_Start();
 930              		.loc 1 239 0
 931 004a FFF7FEFF 		bl	Motor_1_Encoder_Counts_Start
 932              	.LVL113:
 240:dcmotor.c     ****     Motor_2_Encoder_Counts_Start();
 933              		.loc 1 240 0
 934 004e FFF7FEFF 		bl	Motor_2_Encoder_Counts_Start
 935              	.LVL114:
 241:dcmotor.c     ****     Drift_Check_Timer_Start();
 936              		.loc 1 241 0
 937 0052 FFF7FEFF 		bl	Drift_Check_Timer_Start
 938              	.LVL115:
 242:dcmotor.c     ****     motorDutyCycleUpdate(M1_FD,M1_BD,M2_FD,M2_BD);//This gets the motors going
 939              		.loc 1 242 0
 940 0056 D8F80000 		ldr	r0, [r8]
 941 005a FFF7FEFF 		bl	__aeabi_i2f
 942              	.LVL116:
 943 005e 8046     		mov	r8, r0
 944 0060 3868     		ldr	r0, [r7]
 945 0062 FFF7FEFF 		bl	__aeabi_i2f
 946              	.LVL117:
 947 0066 0746     		mov	r7, r0
 948 0068 3068     		ldr	r0, [r6]
 949 006a FFF7FEFF 		bl	__aeabi_i2f
 950              	.LVL118:
 951 006e 0446     		mov	r4, r0
 952 0070 2868     		ldr	r0, [r5]
 953 0072 FFF7FEFF 		bl	__aeabi_i2f
 954              	.LVL119:
 955 0076 4346     		mov	r3, r8
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\cc13CBnx.s 			page 22


 956 0078 3A46     		mov	r2, r7
 957 007a 2146     		mov	r1, r4
 958 007c FFF7FEFF 		bl	motorDutyCycleUpdate
 959              	.LVL120:
 960              	.L49:
 243:dcmotor.c     ****     //The below line just traps execution here until the motion is completed
 244:dcmotor.c     ****     while ((motor1Enable == TRUE)||(motor2Enable == TRUE)){
 961              		.loc 1 244 0 discriminator 3
 962 0080 074B     		ldr	r3, .L52+8
 963 0082 B3F90030 		ldrsh	r3, [r3]
 964 0086 012B     		cmp	r3, #1
 965 0088 FAD0     		beq	.L49
 966              		.loc 1 244 0 is_stmt 0 discriminator 2
 967 008a 064B     		ldr	r3, .L52+12
 968 008c B3F90030 		ldrsh	r3, [r3]
 969 0090 012B     		cmp	r3, #1
 970 0092 F5D0     		beq	.L49
 245:dcmotor.c     ****     
 246:dcmotor.c     ****     }
 247:dcmotor.c     **** }
 971              		.loc 1 247 0 is_stmt 1
 972 0094 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 973              	.L53:
 974              		.align	3
 975              	.L52:
 976 0098 12A5BDC1 		.word	-1044536046
 977 009c 1726933F 		.word	1066608151
 978 00a0 00000000 		.word	motor1Enable
 979 00a4 00000000 		.word	motor2Enable
 980 00a8 00000000 		.word	drivingForwardFlag
 981 00ac 00000000 		.word	motor1EncoderCounts
 982 00b0 00000000 		.word	motor2EncoderCounts
 983 00b4 00000000 		.word	M1_FD
 984 00b8 00000000 		.word	M1_BD
 985 00bc 00000000 		.word	M2_FD
 986 00c0 00000000 		.word	M2_BD
 987              		.cfi_endproc
 988              	.LFE70:
 989              		.size	moveForward, .-moveForward
 990              		.section	.text.moveForwardIndefinitely,"ax",%progbits
 991              		.align	2
 992              		.global	moveForwardIndefinitely
 993              		.thumb
 994              		.thumb_func
 995              		.type	moveForwardIndefinitely, %function
 996              	moveForwardIndefinitely:
 997              	.LFB71:
 248:dcmotor.c     **** 
 249:dcmotor.c     **** //Non-blocking move function. It will be called and will cause the robot to move forward until 
 250:dcmotor.c     **** //interrupted out by ultrasonics
 251:dcmotor.c     **** void moveForwardIndefinitely(void){
 998              		.loc 1 251 0
 999              		.cfi_startproc
 1000              		@ args = 0, pretend = 0, frame = 0
 1001              		@ frame_needed = 0, uses_anonymous_args = 0
 1002 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1003              		.cfi_def_cfa_offset 24
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\cc13CBnx.s 			page 23


 1004              		.cfi_offset 4, -24
 1005              		.cfi_offset 5, -20
 1006              		.cfi_offset 6, -16
 1007              		.cfi_offset 7, -12
 1008              		.cfi_offset 8, -8
 1009              		.cfi_offset 14, -4
 1010              	.LVL121:
 252:dcmotor.c     ****     int counts = ENCODER_COUNTS_MAX;
 253:dcmotor.c     ****     motor1Enable = TRUE;
 1011              		.loc 1 253 0
 1012 0004 0123     		movs	r3, #1
 1013 0006 1C4A     		ldr	r2, .L56
 1014 0008 1380     		strh	r3, [r2]	@ movhi
 254:dcmotor.c     ****     motor2Enable = TRUE;
 1015              		.loc 1 254 0
 1016 000a 1C4A     		ldr	r2, .L56+4
 1017 000c 1380     		strh	r3, [r2]	@ movhi
 255:dcmotor.c     ****     drivingForwardFlag = TRUE;
 1018              		.loc 1 255 0
 1019 000e 1C4A     		ldr	r2, .L56+8
 1020 0010 1360     		str	r3, [r2]
 256:dcmotor.c     ****     motor1EncoderCounts = 0;
 1021              		.loc 1 256 0
 1022 0012 0024     		movs	r4, #0
 1023 0014 1B4B     		ldr	r3, .L56+12
 1024 0016 1C60     		str	r4, [r3]
 257:dcmotor.c     ****     motor2EncoderCounts = 0;
 1025              		.loc 1 257 0
 1026 0018 1B4B     		ldr	r3, .L56+16
 1027 001a 1C60     		str	r4, [r3]
 258:dcmotor.c     ****     counterInitialise(counts,counts); //Sets up counters to interrupt at right time
 1028              		.loc 1 258 0
 1029 001c 4FF6DC71 		movw	r1, #65500
 1030 0020 0846     		mov	r0, r1
 1031 0022 FFF7FEFF 		bl	counterInitialise
 1032              	.LVL122:
 259:dcmotor.c     ****     M1_FD = DCMOTOR_IDEAL_DUTY_CYCLE;
 1033              		.loc 1 259 0
 1034 0026 194D     		ldr	r5, .L56+20
 1035 0028 5023     		movs	r3, #80
 1036 002a 2B60     		str	r3, [r5]
 260:dcmotor.c     ****     M1_BD = 0;
 1037              		.loc 1 260 0
 1038 002c 184E     		ldr	r6, .L56+24
 1039 002e 3460     		str	r4, [r6]
 261:dcmotor.c     ****     M2_FD =  DCMOTOR_IDEAL_DUTY_CYCLE;
 1040              		.loc 1 261 0
 1041 0030 184F     		ldr	r7, .L56+28
 1042 0032 3B60     		str	r3, [r7]
 262:dcmotor.c     ****     M2_BD = 0;
 1043              		.loc 1 262 0
 1044 0034 DFF86080 		ldr	r8, .L56+32
 1045 0038 C8F80040 		str	r4, [r8]
 263:dcmotor.c     ****     Motor_1_Encoder_Counts_Start();
 1046              		.loc 1 263 0
 1047 003c FFF7FEFF 		bl	Motor_1_Encoder_Counts_Start
 1048              	.LVL123:
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\cc13CBnx.s 			page 24


 264:dcmotor.c     ****     Motor_2_Encoder_Counts_Start();
 1049              		.loc 1 264 0
 1050 0040 FFF7FEFF 		bl	Motor_2_Encoder_Counts_Start
 1051              	.LVL124:
 265:dcmotor.c     ****     Drift_Check_Timer_Start();
 1052              		.loc 1 265 0
 1053 0044 FFF7FEFF 		bl	Drift_Check_Timer_Start
 1054              	.LVL125:
 266:dcmotor.c     ****     motorDutyCycleUpdate(M1_FD,M1_BD,M2_FD,M2_BD);//This gets the motors going
 1055              		.loc 1 266 0
 1056 0048 D8F80000 		ldr	r0, [r8]
 1057 004c FFF7FEFF 		bl	__aeabi_i2f
 1058              	.LVL126:
 1059 0050 8046     		mov	r8, r0
 1060 0052 3868     		ldr	r0, [r7]
 1061 0054 FFF7FEFF 		bl	__aeabi_i2f
 1062              	.LVL127:
 1063 0058 0746     		mov	r7, r0
 1064 005a 3068     		ldr	r0, [r6]
 1065 005c FFF7FEFF 		bl	__aeabi_i2f
 1066              	.LVL128:
 1067 0060 0446     		mov	r4, r0
 1068 0062 2868     		ldr	r0, [r5]
 1069 0064 FFF7FEFF 		bl	__aeabi_i2f
 1070              	.LVL129:
 1071 0068 4346     		mov	r3, r8
 1072 006a 3A46     		mov	r2, r7
 1073 006c 2146     		mov	r1, r4
 1074 006e FFF7FEFF 		bl	motorDutyCycleUpdate
 1075              	.LVL130:
 1076 0072 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1077              	.L57:
 1078 0076 00BF     		.align	2
 1079              	.L56:
 1080 0078 00000000 		.word	motor1Enable
 1081 007c 00000000 		.word	motor2Enable
 1082 0080 00000000 		.word	drivingForwardFlag
 1083 0084 00000000 		.word	motor1EncoderCounts
 1084 0088 00000000 		.word	motor2EncoderCounts
 1085 008c 00000000 		.word	M1_FD
 1086 0090 00000000 		.word	M1_BD
 1087 0094 00000000 		.word	M2_FD
 1088 0098 00000000 		.word	M2_BD
 1089              		.cfi_endproc
 1090              	.LFE71:
 1091              		.size	moveForwardIndefinitely, .-moveForwardIndefinitely
 1092              		.section	.text.moveBackward,"ax",%progbits
 1093              		.align	2
 1094              		.global	moveBackward
 1095              		.thumb
 1096              		.thumb_func
 1097              		.type	moveBackward, %function
 1098              	moveBackward:
 1099              	.LFB72:
 267:dcmotor.c     ****     //The below line just traps execution here until the motion is completed
 268:dcmotor.c     **** }
 269:dcmotor.c     **** //Takes a distance to move in cm and moves. Blocking (sadly)
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\cc13CBnx.s 			page 25


 270:dcmotor.c     **** void moveBackward(float amount){
 1100              		.loc 1 270 0
 1101              		.cfi_startproc
 1102              		@ args = 0, pretend = 0, frame = 0
 1103              		@ frame_needed = 0, uses_anonymous_args = 0
 1104              	.LVL131:
 1105 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1106              		.cfi_def_cfa_offset 24
 1107              		.cfi_offset 4, -24
 1108              		.cfi_offset 5, -20
 1109              		.cfi_offset 6, -16
 1110              		.cfi_offset 7, -12
 1111              		.cfi_offset 8, -8
 1112              		.cfi_offset 14, -4
 271:dcmotor.c     ****     int counts = amount/CM_PER_COUNT;
 1113              		.loc 1 271 0
 1114 0004 FFF7FEFF 		bl	__aeabi_f2d
 1115              	.LVL132:
 1116 0008 23A3     		adr	r3, .L62
 1117 000a D3E90023 		ldrd	r2, [r3]
 1118 000e FFF7FEFF 		bl	__aeabi_ddiv
 1119              	.LVL133:
 1120 0012 FFF7FEFF 		bl	__aeabi_d2iz
 1121              	.LVL134:
 272:dcmotor.c     ****     motor1Enable = TRUE;
 1122              		.loc 1 272 0
 1123 0016 0123     		movs	r3, #1
 1124 0018 214A     		ldr	r2, .L62+8
 1125 001a 1380     		strh	r3, [r2]	@ movhi
 273:dcmotor.c     ****     motor2Enable = TRUE;
 1126              		.loc 1 273 0
 1127 001c 214A     		ldr	r2, .L62+12
 1128 001e 1380     		strh	r3, [r2]	@ movhi
 274:dcmotor.c     ****     drivingBackwardFlag = TRUE;
 1129              		.loc 1 274 0
 1130 0020 214A     		ldr	r2, .L62+16
 1131 0022 1360     		str	r3, [r2]
 275:dcmotor.c     ****     motor1EncoderCounts = 0;
 1132              		.loc 1 275 0
 1133 0024 0024     		movs	r4, #0
 1134 0026 214B     		ldr	r3, .L62+20
 1135 0028 1C60     		str	r4, [r3]
 276:dcmotor.c     ****     motor2EncoderCounts = 0;
 1136              		.loc 1 276 0
 1137 002a 214B     		ldr	r3, .L62+24
 1138 002c 1C60     		str	r4, [r3]
 277:dcmotor.c     ****     counterInitialise(counts,counts); //Sets up counters to interrupt at right time
 1139              		.loc 1 277 0
 1140 002e 0146     		mov	r1, r0
 1141 0030 FFF7FEFF 		bl	counterInitialise
 1142              	.LVL135:
 278:dcmotor.c     ****     M1_FD = 0;
 1143              		.loc 1 278 0
 1144 0034 1F4D     		ldr	r5, .L62+28
 1145 0036 2C60     		str	r4, [r5]
 279:dcmotor.c     ****     M1_BD = DCMOTOR_IDEAL_DUTY_CYCLE;
 1146              		.loc 1 279 0
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\cc13CBnx.s 			page 26


 1147 0038 1F4E     		ldr	r6, .L62+32
 1148 003a 5023     		movs	r3, #80
 1149 003c 3360     		str	r3, [r6]
 280:dcmotor.c     ****     M2_FD =  0;
 1150              		.loc 1 280 0
 1151 003e 1F4F     		ldr	r7, .L62+36
 1152 0040 3C60     		str	r4, [r7]
 281:dcmotor.c     ****     M2_BD = DCMOTOR_IDEAL_DUTY_CYCLE;
 1153              		.loc 1 281 0
 1154 0042 1F4C     		ldr	r4, .L62+40
 1155 0044 2360     		str	r3, [r4]
 282:dcmotor.c     ****     Motor_1_Encoder_Counts_Start();
 1156              		.loc 1 282 0
 1157 0046 FFF7FEFF 		bl	Motor_1_Encoder_Counts_Start
 1158              	.LVL136:
 283:dcmotor.c     ****     Motor_2_Encoder_Counts_Start();
 1159              		.loc 1 283 0
 1160 004a FFF7FEFF 		bl	Motor_2_Encoder_Counts_Start
 1161              	.LVL137:
 284:dcmotor.c     ****     Drift_Check_Timer_Start();
 1162              		.loc 1 284 0
 1163 004e FFF7FEFF 		bl	Drift_Check_Timer_Start
 1164              	.LVL138:
 285:dcmotor.c     ****     motorDutyCycleUpdate(M1_FD,M1_BD,M2_FD,M2_BD);//This gets the motors going
 1165              		.loc 1 285 0
 1166 0052 2068     		ldr	r0, [r4]
 1167 0054 FFF7FEFF 		bl	__aeabi_i2f
 1168              	.LVL139:
 1169 0058 8046     		mov	r8, r0
 1170 005a 3868     		ldr	r0, [r7]
 1171 005c FFF7FEFF 		bl	__aeabi_i2f
 1172              	.LVL140:
 1173 0060 0746     		mov	r7, r0
 1174 0062 3068     		ldr	r0, [r6]
 1175 0064 FFF7FEFF 		bl	__aeabi_i2f
 1176              	.LVL141:
 1177 0068 0446     		mov	r4, r0
 1178 006a 2868     		ldr	r0, [r5]
 1179 006c FFF7FEFF 		bl	__aeabi_i2f
 1180              	.LVL142:
 1181 0070 4346     		mov	r3, r8
 1182 0072 3A46     		mov	r2, r7
 1183 0074 2146     		mov	r1, r4
 1184 0076 FFF7FEFF 		bl	motorDutyCycleUpdate
 1185              	.LVL143:
 1186              	.L59:
 286:dcmotor.c     ****     //The below line just traps execution here until the motion is completed
 287:dcmotor.c     ****     while ((motor1Enable == TRUE)||(motor2Enable == TRUE)){
 1187              		.loc 1 287 0 discriminator 3
 1188 007a 094B     		ldr	r3, .L62+8
 1189 007c B3F90030 		ldrsh	r3, [r3]
 1190 0080 012B     		cmp	r3, #1
 1191 0082 FAD0     		beq	.L59
 1192              		.loc 1 287 0 is_stmt 0 discriminator 2
 1193 0084 074B     		ldr	r3, .L62+12
 1194 0086 B3F90030 		ldrsh	r3, [r3]
 1195 008a 012B     		cmp	r3, #1
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\cc13CBnx.s 			page 27


 1196 008c F5D0     		beq	.L59
 288:dcmotor.c     ****     
 289:dcmotor.c     ****     }
 290:dcmotor.c     **** }
 1197              		.loc 1 290 0 is_stmt 1
 1198 008e BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1199              	.L63:
 1200 0092 00BFAFF3 		.align	3
 1200      0080
 1201              	.L62:
 1202 0098 12A5BDC1 		.word	-1044536046
 1203 009c 1726933F 		.word	1066608151
 1204 00a0 00000000 		.word	motor1Enable
 1205 00a4 00000000 		.word	motor2Enable
 1206 00a8 00000000 		.word	drivingBackwardFlag
 1207 00ac 00000000 		.word	motor1EncoderCounts
 1208 00b0 00000000 		.word	motor2EncoderCounts
 1209 00b4 00000000 		.word	M1_FD
 1210 00b8 00000000 		.word	M1_BD
 1211 00bc 00000000 		.word	M2_FD
 1212 00c0 00000000 		.word	M2_BD
 1213              		.cfi_endproc
 1214              	.LFE72:
 1215              		.size	moveBackward, .-moveBackward
 1216              		.section	.text.moveBackwardIndefinitely,"ax",%progbits
 1217              		.align	2
 1218              		.global	moveBackwardIndefinitely
 1219              		.thumb
 1220              		.thumb_func
 1221              		.type	moveBackwardIndefinitely, %function
 1222              	moveBackwardIndefinitely:
 1223              	.LFB73:
 291:dcmotor.c     **** 
 292:dcmotor.c     **** //Allows the robot to move backward indefinitely until interrupted out by ultrasonics
 293:dcmotor.c     **** void moveBackwardIndefinitely(void){
 1224              		.loc 1 293 0
 1225              		.cfi_startproc
 1226              		@ args = 0, pretend = 0, frame = 0
 1227              		@ frame_needed = 0, uses_anonymous_args = 0
 1228 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1229              		.cfi_def_cfa_offset 24
 1230              		.cfi_offset 4, -24
 1231              		.cfi_offset 5, -20
 1232              		.cfi_offset 6, -16
 1233              		.cfi_offset 7, -12
 1234              		.cfi_offset 8, -8
 1235              		.cfi_offset 14, -4
 1236              	.LVL144:
 294:dcmotor.c     ****     int counts = ENCODER_COUNTS_MAX;
 295:dcmotor.c     ****     motor1Enable = TRUE;
 1237              		.loc 1 295 0
 1238 0004 0123     		movs	r3, #1
 1239 0006 1A4A     		ldr	r2, .L66
 1240 0008 1380     		strh	r3, [r2]	@ movhi
 296:dcmotor.c     ****     motor2Enable = TRUE;
 1241              		.loc 1 296 0
 1242 000a 1A4A     		ldr	r2, .L66+4
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\cc13CBnx.s 			page 28


 1243 000c 1380     		strh	r3, [r2]	@ movhi
 297:dcmotor.c     ****     drivingBackwardFlag = TRUE;
 1244              		.loc 1 297 0
 1245 000e 1A4A     		ldr	r2, .L66+8
 1246 0010 1360     		str	r3, [r2]
 298:dcmotor.c     ****     motor1EncoderCounts = 0;
 1247              		.loc 1 298 0
 1248 0012 0024     		movs	r4, #0
 1249 0014 194B     		ldr	r3, .L66+12
 1250 0016 1C60     		str	r4, [r3]
 299:dcmotor.c     ****     motor2EncoderCounts = 0;
 1251              		.loc 1 299 0
 1252 0018 194B     		ldr	r3, .L66+16
 1253 001a 1C60     		str	r4, [r3]
 300:dcmotor.c     ****     counterInitialise(counts,counts); //Sets up counters to interrupt at right time
 1254              		.loc 1 300 0
 1255 001c 4FF6DC71 		movw	r1, #65500
 1256 0020 0846     		mov	r0, r1
 1257 0022 FFF7FEFF 		bl	counterInitialise
 1258              	.LVL145:
 301:dcmotor.c     ****     M1_FD = 0;
 1259              		.loc 1 301 0
 1260 0026 174D     		ldr	r5, .L66+20
 1261 0028 2C60     		str	r4, [r5]
 302:dcmotor.c     ****     M1_BD = DCMOTOR_IDEAL_DUTY_CYCLE;
 1262              		.loc 1 302 0
 1263 002a 174E     		ldr	r6, .L66+24
 1264 002c 5023     		movs	r3, #80
 1265 002e 3360     		str	r3, [r6]
 303:dcmotor.c     ****     M2_FD =  0;
 1266              		.loc 1 303 0
 1267 0030 164F     		ldr	r7, .L66+28
 1268 0032 3C60     		str	r4, [r7]
 304:dcmotor.c     ****     M2_BD = DCMOTOR_IDEAL_DUTY_CYCLE;
 1269              		.loc 1 304 0
 1270 0034 164C     		ldr	r4, .L66+32
 1271 0036 2360     		str	r3, [r4]
 305:dcmotor.c     ****     Motor_1_Encoder_Counts_Start();
 1272              		.loc 1 305 0
 1273 0038 FFF7FEFF 		bl	Motor_1_Encoder_Counts_Start
 1274              	.LVL146:
 306:dcmotor.c     ****     Motor_2_Encoder_Counts_Start();
 1275              		.loc 1 306 0
 1276 003c FFF7FEFF 		bl	Motor_2_Encoder_Counts_Start
 1277              	.LVL147:
 307:dcmotor.c     ****     Drift_Check_Timer_Start();
 1278              		.loc 1 307 0
 1279 0040 FFF7FEFF 		bl	Drift_Check_Timer_Start
 1280              	.LVL148:
 308:dcmotor.c     ****     motorDutyCycleUpdate(M1_FD,M1_BD,M2_FD,M2_BD);//This gets the motors going
 1281              		.loc 1 308 0
 1282 0044 2068     		ldr	r0, [r4]
 1283 0046 FFF7FEFF 		bl	__aeabi_i2f
 1284              	.LVL149:
 1285 004a 8046     		mov	r8, r0
 1286 004c 3868     		ldr	r0, [r7]
 1287 004e FFF7FEFF 		bl	__aeabi_i2f
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\cc13CBnx.s 			page 29


 1288              	.LVL150:
 1289 0052 0746     		mov	r7, r0
 1290 0054 3068     		ldr	r0, [r6]
 1291 0056 FFF7FEFF 		bl	__aeabi_i2f
 1292              	.LVL151:
 1293 005a 0446     		mov	r4, r0
 1294 005c 2868     		ldr	r0, [r5]
 1295 005e FFF7FEFF 		bl	__aeabi_i2f
 1296              	.LVL152:
 1297 0062 4346     		mov	r3, r8
 1298 0064 3A46     		mov	r2, r7
 1299 0066 2146     		mov	r1, r4
 1300 0068 FFF7FEFF 		bl	motorDutyCycleUpdate
 1301              	.LVL153:
 1302 006c BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1303              	.L67:
 1304              		.align	2
 1305              	.L66:
 1306 0070 00000000 		.word	motor1Enable
 1307 0074 00000000 		.word	motor2Enable
 1308 0078 00000000 		.word	drivingBackwardFlag
 1309 007c 00000000 		.word	motor1EncoderCounts
 1310 0080 00000000 		.word	motor2EncoderCounts
 1311 0084 00000000 		.word	M1_FD
 1312 0088 00000000 		.word	M1_BD
 1313 008c 00000000 		.word	M2_FD
 1314 0090 00000000 		.word	M2_BD
 1315              		.cfi_endproc
 1316              	.LFE73:
 1317              		.size	moveBackwardIndefinitely, .-moveBackwardIndefinitely
 1318              		.section	.text.turnLeft,"ax",%progbits
 1319              		.align	2
 1320              		.global	turnLeft
 1321              		.thumb
 1322              		.thumb_func
 1323              		.type	turnLeft, %function
 1324              	turnLeft:
 1325              	.LFB74:
 309:dcmotor.c     **** }
 310:dcmotor.c     **** 
 311:dcmotor.c     **** //Takes an angle to turn in degrees and turns left that much
 312:dcmotor.c     **** void turnLeft(float amount){
 1326              		.loc 1 312 0
 1327              		.cfi_startproc
 1328              		@ args = 0, pretend = 0, frame = 0
 1329              		@ frame_needed = 0, uses_anonymous_args = 0
 1330              	.LVL154:
 1331 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1332              		.cfi_def_cfa_offset 24
 1333              		.cfi_offset 4, -24
 1334              		.cfi_offset 5, -20
 1335              		.cfi_offset 6, -16
 1336              		.cfi_offset 7, -12
 1337              		.cfi_offset 8, -8
 1338              		.cfi_offset 14, -4
 313:dcmotor.c     ****     //We need to make sure that the timers are disabled when we are doing turning motions
 314:dcmotor.c     ****     //Otherwise they will try and correct the turning
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\cc13CBnx.s 			page 30


 315:dcmotor.c     ****     int counts = round(amount/DEGREES_PER_COUNT);
 1339              		.loc 1 315 0
 1340 0004 FFF7FEFF 		bl	__aeabi_f2d
 1341              	.LVL155:
 1342 0008 25A3     		adr	r3, .L72
 1343 000a D3E90023 		ldrd	r2, [r3]
 1344 000e FFF7FEFF 		bl	__aeabi_ddiv
 1345              	.LVL156:
 1346 0012 FFF7FEFF 		bl	round
 1347              	.LVL157:
 1348 0016 FFF7FEFF 		bl	__aeabi_d2iz
 1349              	.LVL158:
 316:dcmotor.c     ****     motor1Enable = TRUE;
 1350              		.loc 1 316 0
 1351 001a 0123     		movs	r3, #1
 1352 001c 224A     		ldr	r2, .L72+8
 1353 001e 1380     		strh	r3, [r2]	@ movhi
 317:dcmotor.c     ****     motor2Enable = TRUE;
 1354              		.loc 1 317 0
 1355 0020 224A     		ldr	r2, .L72+12
 1356 0022 1380     		strh	r3, [r2]	@ movhi
 318:dcmotor.c     ****     turningLeftFlag = TRUE;
 1357              		.loc 1 318 0
 1358 0024 224A     		ldr	r2, .L72+16
 1359 0026 1360     		str	r3, [r2]
 319:dcmotor.c     ****     motor1EncoderCounts = 0;
 1360              		.loc 1 319 0
 1361 0028 0024     		movs	r4, #0
 1362 002a 224B     		ldr	r3, .L72+20
 1363 002c 1C60     		str	r4, [r3]
 320:dcmotor.c     ****     motor2EncoderCounts = 0;
 1364              		.loc 1 320 0
 1365 002e 224B     		ldr	r3, .L72+24
 1366 0030 1C60     		str	r4, [r3]
 321:dcmotor.c     ****     counterInitialise(counts,counts); //Sets up counters to interrupt at right time
 1367              		.loc 1 321 0
 1368 0032 0146     		mov	r1, r0
 1369 0034 FFF7FEFF 		bl	counterInitialise
 1370              	.LVL159:
 322:dcmotor.c     ****     M1_FD = 0;
 1371              		.loc 1 322 0
 1372 0038 204D     		ldr	r5, .L72+28
 1373 003a 2C60     		str	r4, [r5]
 323:dcmotor.c     ****     M1_BD = DCMOTOR_IDEAL_DUTY_CYCLE;
 1374              		.loc 1 323 0
 1375 003c 204E     		ldr	r6, .L72+32
 1376 003e 5023     		movs	r3, #80
 1377 0040 3360     		str	r3, [r6]
 324:dcmotor.c     ****     M2_FD = DCMOTOR_IDEAL_DUTY_CYCLE;
 1378              		.loc 1 324 0
 1379 0042 204F     		ldr	r7, .L72+36
 1380 0044 3B60     		str	r3, [r7]
 325:dcmotor.c     ****     M2_BD = 0;
 1381              		.loc 1 325 0
 1382 0046 DFF88080 		ldr	r8, .L72+40
 1383 004a C8F80040 		str	r4, [r8]
 326:dcmotor.c     ****     Motor_1_Encoder_Counts_Start();
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\cc13CBnx.s 			page 31


 1384              		.loc 1 326 0
 1385 004e FFF7FEFF 		bl	Motor_1_Encoder_Counts_Start
 1386              	.LVL160:
 327:dcmotor.c     ****     Motor_2_Encoder_Counts_Start();
 1387              		.loc 1 327 0
 1388 0052 FFF7FEFF 		bl	Motor_2_Encoder_Counts_Start
 1389              	.LVL161:
 328:dcmotor.c     ****     Drift_Check_Timer_Start();
 1390              		.loc 1 328 0
 1391 0056 FFF7FEFF 		bl	Drift_Check_Timer_Start
 1392              	.LVL162:
 329:dcmotor.c     ****     motorDutyCycleUpdate(M1_FD,M1_BD,M2_FD,M2_BD);//This gets the motors going
 1393              		.loc 1 329 0
 1394 005a D8F80000 		ldr	r0, [r8]
 1395 005e FFF7FEFF 		bl	__aeabi_i2f
 1396              	.LVL163:
 1397 0062 8046     		mov	r8, r0
 1398 0064 3868     		ldr	r0, [r7]
 1399 0066 FFF7FEFF 		bl	__aeabi_i2f
 1400              	.LVL164:
 1401 006a 0746     		mov	r7, r0
 1402 006c 3068     		ldr	r0, [r6]
 1403 006e FFF7FEFF 		bl	__aeabi_i2f
 1404              	.LVL165:
 1405 0072 0446     		mov	r4, r0
 1406 0074 2868     		ldr	r0, [r5]
 1407 0076 FFF7FEFF 		bl	__aeabi_i2f
 1408              	.LVL166:
 1409 007a 4346     		mov	r3, r8
 1410 007c 3A46     		mov	r2, r7
 1411 007e 2146     		mov	r1, r4
 1412 0080 FFF7FEFF 		bl	motorDutyCycleUpdate
 1413              	.LVL167:
 1414              	.L69:
 330:dcmotor.c     ****     //The below line just traps execution here until the motion is completed
 331:dcmotor.c     ****     while ((motor1Enable == TRUE)||(motor2Enable == TRUE)){
 1415              		.loc 1 331 0 discriminator 3
 1416 0084 084B     		ldr	r3, .L72+8
 1417 0086 B3F90030 		ldrsh	r3, [r3]
 1418 008a 012B     		cmp	r3, #1
 1419 008c FAD0     		beq	.L69
 1420              		.loc 1 331 0 is_stmt 0 discriminator 2
 1421 008e 074B     		ldr	r3, .L72+12
 1422 0090 B3F90030 		ldrsh	r3, [r3]
 1423 0094 012B     		cmp	r3, #1
 1424 0096 F5D0     		beq	.L69
 332:dcmotor.c     ****     
 333:dcmotor.c     ****     }
 334:dcmotor.c     **** }
 1425              		.loc 1 334 0 is_stmt 1
 1426 0098 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1427              	.L73:
 1428 009c AFF30080 		.align	3
 1429              	.L72:
 1430 00a0 E17A14AE 		.word	-1374389535
 1431 00a4 47E1BA3F 		.word	1069211975
 1432 00a8 00000000 		.word	motor1Enable
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\cc13CBnx.s 			page 32


 1433 00ac 00000000 		.word	motor2Enable
 1434 00b0 00000000 		.word	turningLeftFlag
 1435 00b4 00000000 		.word	motor1EncoderCounts
 1436 00b8 00000000 		.word	motor2EncoderCounts
 1437 00bc 00000000 		.word	M1_FD
 1438 00c0 00000000 		.word	M1_BD
 1439 00c4 00000000 		.word	M2_FD
 1440 00c8 00000000 		.word	M2_BD
 1441              		.cfi_endproc
 1442              	.LFE74:
 1443              		.size	turnLeft, .-turnLeft
 1444              		.section	.text.turnRight,"ax",%progbits
 1445              		.align	2
 1446              		.global	turnRight
 1447              		.thumb
 1448              		.thumb_func
 1449              		.type	turnRight, %function
 1450              	turnRight:
 1451              	.LFB75:
 335:dcmotor.c     **** 
 336:dcmotor.c     **** void turnRight(float amount){
 1452              		.loc 1 336 0
 1453              		.cfi_startproc
 1454              		@ args = 0, pretend = 0, frame = 0
 1455              		@ frame_needed = 0, uses_anonymous_args = 0
 1456              	.LVL168:
 1457 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1458              		.cfi_def_cfa_offset 24
 1459              		.cfi_offset 4, -24
 1460              		.cfi_offset 5, -20
 1461              		.cfi_offset 6, -16
 1462              		.cfi_offset 7, -12
 1463              		.cfi_offset 8, -8
 1464              		.cfi_offset 14, -4
 337:dcmotor.c     ****     int counts = round(amount/DEGREES_PER_COUNT);
 1465              		.loc 1 337 0
 1466 0004 FFF7FEFF 		bl	__aeabi_f2d
 1467              	.LVL169:
 1468 0008 23A3     		adr	r3, .L78
 1469 000a D3E90023 		ldrd	r2, [r3]
 1470 000e FFF7FEFF 		bl	__aeabi_ddiv
 1471              	.LVL170:
 1472 0012 FFF7FEFF 		bl	round
 1473              	.LVL171:
 1474 0016 FFF7FEFF 		bl	__aeabi_d2iz
 1475              	.LVL172:
 338:dcmotor.c     ****     motor1Enable = TRUE;
 1476              		.loc 1 338 0
 1477 001a 0123     		movs	r3, #1
 1478 001c 204A     		ldr	r2, .L78+8
 1479 001e 1380     		strh	r3, [r2]	@ movhi
 339:dcmotor.c     ****     motor2Enable = TRUE;
 1480              		.loc 1 339 0
 1481 0020 204A     		ldr	r2, .L78+12
 1482 0022 1380     		strh	r3, [r2]	@ movhi
 340:dcmotor.c     ****     turningRightFlag = TRUE;
 1483              		.loc 1 340 0
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\cc13CBnx.s 			page 33


 1484 0024 204A     		ldr	r2, .L78+16
 1485 0026 1360     		str	r3, [r2]
 341:dcmotor.c     ****     motor1EncoderCounts = 0;
 1486              		.loc 1 341 0
 1487 0028 0024     		movs	r4, #0
 1488 002a 204B     		ldr	r3, .L78+20
 1489 002c 1C60     		str	r4, [r3]
 342:dcmotor.c     ****     motor2EncoderCounts = 0;
 1490              		.loc 1 342 0
 1491 002e 204B     		ldr	r3, .L78+24
 1492 0030 1C60     		str	r4, [r3]
 343:dcmotor.c     ****     counterInitialise(counts,counts); //Sets up counters to interrupt at right time
 1493              		.loc 1 343 0
 1494 0032 0146     		mov	r1, r0
 1495 0034 FFF7FEFF 		bl	counterInitialise
 1496              	.LVL173:
 344:dcmotor.c     ****     M1_FD = DCMOTOR_IDEAL_DUTY_CYCLE;
 1497              		.loc 1 344 0
 1498 0038 1E4D     		ldr	r5, .L78+28
 1499 003a 5023     		movs	r3, #80
 1500 003c 2B60     		str	r3, [r5]
 345:dcmotor.c     ****     M1_BD = 0;
 1501              		.loc 1 345 0
 1502 003e 1E4E     		ldr	r6, .L78+32
 1503 0040 3460     		str	r4, [r6]
 346:dcmotor.c     ****     M2_FD = 0;
 1504              		.loc 1 346 0
 1505 0042 1E4F     		ldr	r7, .L78+36
 1506 0044 3C60     		str	r4, [r7]
 347:dcmotor.c     ****     M2_BD = DCMOTOR_IDEAL_DUTY_CYCLE;
 1507              		.loc 1 347 0
 1508 0046 1E4C     		ldr	r4, .L78+40
 1509 0048 2360     		str	r3, [r4]
 348:dcmotor.c     ****     Motor_1_Encoder_Counts_Start();
 1510              		.loc 1 348 0
 1511 004a FFF7FEFF 		bl	Motor_1_Encoder_Counts_Start
 1512              	.LVL174:
 349:dcmotor.c     ****     Motor_2_Encoder_Counts_Start();
 1513              		.loc 1 349 0
 1514 004e FFF7FEFF 		bl	Motor_2_Encoder_Counts_Start
 1515              	.LVL175:
 350:dcmotor.c     ****     Drift_Check_Timer_Start();
 1516              		.loc 1 350 0
 1517 0052 FFF7FEFF 		bl	Drift_Check_Timer_Start
 1518              	.LVL176:
 351:dcmotor.c     ****     motorDutyCycleUpdate(M1_FD,M1_BD,M2_FD,M2_BD);//This gets the motors going
 1519              		.loc 1 351 0
 1520 0056 2068     		ldr	r0, [r4]
 1521 0058 FFF7FEFF 		bl	__aeabi_i2f
 1522              	.LVL177:
 1523 005c 8046     		mov	r8, r0
 1524 005e 3868     		ldr	r0, [r7]
 1525 0060 FFF7FEFF 		bl	__aeabi_i2f
 1526              	.LVL178:
 1527 0064 0746     		mov	r7, r0
 1528 0066 3068     		ldr	r0, [r6]
 1529 0068 FFF7FEFF 		bl	__aeabi_i2f
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\cc13CBnx.s 			page 34


 1530              	.LVL179:
 1531 006c 0446     		mov	r4, r0
 1532 006e 2868     		ldr	r0, [r5]
 1533 0070 FFF7FEFF 		bl	__aeabi_i2f
 1534              	.LVL180:
 1535 0074 4346     		mov	r3, r8
 1536 0076 3A46     		mov	r2, r7
 1537 0078 2146     		mov	r1, r4
 1538 007a FFF7FEFF 		bl	motorDutyCycleUpdate
 1539              	.LVL181:
 1540              	.L75:
 352:dcmotor.c     ****     //The below line just traps execution here until the motion is completed
 353:dcmotor.c     ****     while ((motor1Enable == TRUE)||(motor2Enable == TRUE)){
 1541              		.loc 1 353 0 discriminator 3
 1542 007e 084B     		ldr	r3, .L78+8
 1543 0080 B3F90030 		ldrsh	r3, [r3]
 1544 0084 012B     		cmp	r3, #1
 1545 0086 FAD0     		beq	.L75
 1546              		.loc 1 353 0 is_stmt 0 discriminator 2
 1547 0088 064B     		ldr	r3, .L78+12
 1548 008a B3F90030 		ldrsh	r3, [r3]
 1549 008e 012B     		cmp	r3, #1
 1550 0090 F5D0     		beq	.L75
 354:dcmotor.c     ****     
 355:dcmotor.c     ****     }
 356:dcmotor.c     **** }
 1551              		.loc 1 356 0 is_stmt 1
 1552 0092 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1553              	.L79:
 1554 0096 00BF     		.align	3
 1555              	.L78:
 1556 0098 E17A14AE 		.word	-1374389535
 1557 009c 47E1BA3F 		.word	1069211975
 1558 00a0 00000000 		.word	motor1Enable
 1559 00a4 00000000 		.word	motor2Enable
 1560 00a8 00000000 		.word	turningRightFlag
 1561 00ac 00000000 		.word	motor1EncoderCounts
 1562 00b0 00000000 		.word	motor2EncoderCounts
 1563 00b4 00000000 		.word	M1_FD
 1564 00b8 00000000 		.word	M1_BD
 1565 00bc 00000000 		.word	M2_FD
 1566 00c0 00000000 		.word	M2_BD
 1567              		.cfi_endproc
 1568              	.LFE75:
 1569              		.size	turnRight, .-turnRight
 1570              		.section	.text.displaceLeft,"ax",%progbits
 1571              		.align	2
 1572              		.global	displaceLeft
 1573              		.thumb
 1574              		.thumb_func
 1575              		.type	displaceLeft, %function
 1576              	displaceLeft:
 1577              	.LFB76:
 357:dcmotor.c     **** 
 358:dcmotor.c     **** //The displaceLeft and displaceRight functions should let us slide left and right. 
 359:dcmotor.c     **** //We should ensure that these are only called when we are not close enough to the walls
 360:dcmotor.c     **** //to create issues otherwise we could get stuck in these functions permanently
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\cc13CBnx.s 			page 35


 361:dcmotor.c     **** void displaceLeft(int amount,int degrees){
 1578              		.loc 1 361 0
 1579              		.cfi_startproc
 1580              		@ args = 0, pretend = 0, frame = 0
 1581              		@ frame_needed = 0, uses_anonymous_args = 0
 1582              	.LVL182:
 1583 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1584              		.cfi_def_cfa_offset 24
 1585              		.cfi_offset 4, -24
 1586              		.cfi_offset 5, -20
 1587              		.cfi_offset 6, -16
 1588              		.cfi_offset 7, -12
 1589              		.cfi_offset 8, -8
 1590              		.cfi_offset 14, -4
 1591 0004 0446     		mov	r4, r0
 1592 0006 0E46     		mov	r6, r1
 362:dcmotor.c     ****     turnRight(degrees);
 1593              		.loc 1 362 0
 1594 0008 0846     		mov	r0, r1
 1595              	.LVL183:
 1596 000a FFF7FEFF 		bl	__aeabi_i2f
 1597              	.LVL184:
 1598 000e 8046     		mov	r8, r0
 1599 0010 FFF7FEFF 		bl	turnRight
 1600              	.LVL185:
 363:dcmotor.c     ****     float temp = amount/sin((M_PI/180)*degrees);
 1601              		.loc 1 363 0
 1602 0014 2046     		mov	r0, r4
 1603 0016 FFF7FEFF 		bl	__aeabi_i2d
 1604              	.LVL186:
 1605 001a 0446     		mov	r4, r0
 1606              	.LVL187:
 1607 001c 0D46     		mov	r5, r1
 1608 001e 3046     		mov	r0, r6
 1609 0020 FFF7FEFF 		bl	__aeabi_i2d
 1610              	.LVL188:
 1611 0024 12A3     		adr	r3, .L82
 1612 0026 D3E90023 		ldrd	r2, [r3]
 1613 002a FFF7FEFF 		bl	__aeabi_dmul
 1614              	.LVL189:
 1615 002e 0646     		mov	r6, r0
 1616              	.LVL190:
 1617 0030 0F46     		mov	r7, r1
 1618 0032 FFF7FEFF 		bl	sin
 1619              	.LVL191:
 1620 0036 0246     		mov	r2, r0
 1621 0038 0B46     		mov	r3, r1
 1622 003a 2046     		mov	r0, r4
 1623 003c 2946     		mov	r1, r5
 1624 003e FFF7FEFF 		bl	__aeabi_ddiv
 1625              	.LVL192:
 364:dcmotor.c     ****     moveBackward(amount/sin((M_PI/180)*degrees));
 1626              		.loc 1 364 0
 1627 0042 FFF7FEFF 		bl	__aeabi_d2f
 1628              	.LVL193:
 1629 0046 FFF7FEFF 		bl	moveBackward
 1630              	.LVL194:
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\cc13CBnx.s 			page 36


 365:dcmotor.c     ****     turnLeft(degrees);
 1631              		.loc 1 365 0
 1632 004a 4046     		mov	r0, r8
 1633 004c FFF7FEFF 		bl	turnLeft
 1634              	.LVL195:
 366:dcmotor.c     ****     temp = amount/tan((M_PI/180)*degrees);
 1635              		.loc 1 366 0
 1636 0050 3046     		mov	r0, r6
 1637 0052 3946     		mov	r1, r7
 1638 0054 FFF7FEFF 		bl	tan
 1639              	.LVL196:
 1640 0058 0246     		mov	r2, r0
 1641 005a 0B46     		mov	r3, r1
 1642 005c 2046     		mov	r0, r4
 1643 005e 2946     		mov	r1, r5
 1644 0060 FFF7FEFF 		bl	__aeabi_ddiv
 1645              	.LVL197:
 367:dcmotor.c     ****     moveForward(amount/tan((M_PI/180)*degrees));
 1646              		.loc 1 367 0
 1647 0064 FFF7FEFF 		bl	__aeabi_d2f
 1648              	.LVL198:
 1649 0068 FFF7FEFF 		bl	moveForward
 1650              	.LVL199:
 1651 006c BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1652              	.L83:
 1653              		.align	3
 1654              	.L82:
 1655 0070 399D52A2 		.word	-1571644103
 1656 0074 46DF913F 		.word	1066524486
 1657              		.cfi_endproc
 1658              	.LFE76:
 1659              		.size	displaceLeft, .-displaceLeft
 1660              		.section	.text.displaceRight,"ax",%progbits
 1661              		.align	2
 1662              		.global	displaceRight
 1663              		.thumb
 1664              		.thumb_func
 1665              		.type	displaceRight, %function
 1666              	displaceRight:
 1667              	.LFB77:
 368:dcmotor.c     **** }
 369:dcmotor.c     **** 
 370:dcmotor.c     **** //The displaceLeft and displaceRight functions should let us slide left and right. 
 371:dcmotor.c     **** //We should ensure that these are only called when we are not close enough to the walls
 372:dcmotor.c     **** //to create issues otherwise we could get stuck in these functions permanently
 373:dcmotor.c     **** void displaceRight(int amount,int degrees){
 1668              		.loc 1 373 0
 1669              		.cfi_startproc
 1670              		@ args = 0, pretend = 0, frame = 0
 1671              		@ frame_needed = 0, uses_anonymous_args = 0
 1672              	.LVL200:
 1673 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1674              		.cfi_def_cfa_offset 24
 1675              		.cfi_offset 4, -24
 1676              		.cfi_offset 5, -20
 1677              		.cfi_offset 6, -16
 1678              		.cfi_offset 7, -12
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\cc13CBnx.s 			page 37


 1679              		.cfi_offset 8, -8
 1680              		.cfi_offset 14, -4
 1681 0004 0446     		mov	r4, r0
 1682 0006 0E46     		mov	r6, r1
 374:dcmotor.c     ****     turnLeft(degrees);
 1683              		.loc 1 374 0
 1684 0008 0846     		mov	r0, r1
 1685              	.LVL201:
 1686 000a FFF7FEFF 		bl	__aeabi_i2f
 1687              	.LVL202:
 1688 000e 8046     		mov	r8, r0
 1689 0010 FFF7FEFF 		bl	turnLeft
 1690              	.LVL203:
 375:dcmotor.c     ****     float temp = amount/sin((M_PI/180)*degrees);
 1691              		.loc 1 375 0
 1692 0014 2046     		mov	r0, r4
 1693 0016 FFF7FEFF 		bl	__aeabi_i2d
 1694              	.LVL204:
 1695 001a 0446     		mov	r4, r0
 1696              	.LVL205:
 1697 001c 0D46     		mov	r5, r1
 1698 001e 3046     		mov	r0, r6
 1699 0020 FFF7FEFF 		bl	__aeabi_i2d
 1700              	.LVL206:
 1701 0024 12A3     		adr	r3, .L86
 1702 0026 D3E90023 		ldrd	r2, [r3]
 1703 002a FFF7FEFF 		bl	__aeabi_dmul
 1704              	.LVL207:
 1705 002e 0646     		mov	r6, r0
 1706              	.LVL208:
 1707 0030 0F46     		mov	r7, r1
 1708 0032 FFF7FEFF 		bl	sin
 1709              	.LVL209:
 1710 0036 0246     		mov	r2, r0
 1711 0038 0B46     		mov	r3, r1
 1712 003a 2046     		mov	r0, r4
 1713 003c 2946     		mov	r1, r5
 1714 003e FFF7FEFF 		bl	__aeabi_ddiv
 1715              	.LVL210:
 376:dcmotor.c     ****     moveBackward(amount/sin((M_PI/180)*degrees));
 1716              		.loc 1 376 0
 1717 0042 FFF7FEFF 		bl	__aeabi_d2f
 1718              	.LVL211:
 1719 0046 FFF7FEFF 		bl	moveBackward
 1720              	.LVL212:
 377:dcmotor.c     ****     turnRight(degrees);
 1721              		.loc 1 377 0
 1722 004a 4046     		mov	r0, r8
 1723 004c FFF7FEFF 		bl	turnRight
 1724              	.LVL213:
 378:dcmotor.c     ****     temp = amount/tan((M_PI/180)*degrees);
 1725              		.loc 1 378 0
 1726 0050 3046     		mov	r0, r6
 1727 0052 3946     		mov	r1, r7
 1728 0054 FFF7FEFF 		bl	tan
 1729              	.LVL214:
 1730 0058 0246     		mov	r2, r0
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\cc13CBnx.s 			page 38


 1731 005a 0B46     		mov	r3, r1
 1732 005c 2046     		mov	r0, r4
 1733 005e 2946     		mov	r1, r5
 1734 0060 FFF7FEFF 		bl	__aeabi_ddiv
 1735              	.LVL215:
 379:dcmotor.c     ****     moveForward(amount/tan((M_PI/180)*degrees));
 1736              		.loc 1 379 0
 1737 0064 FFF7FEFF 		bl	__aeabi_d2f
 1738              	.LVL216:
 1739 0068 FFF7FEFF 		bl	moveForward
 1740              	.LVL217:
 1741 006c BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1742              	.L87:
 1743              		.align	3
 1744              	.L86:
 1745 0070 399D52A2 		.word	-1571644103
 1746 0074 46DF913F 		.word	1066524486
 1747              		.cfi_endproc
 1748              	.LFE77:
 1749              		.size	displaceRight, .-displaceRight
 1750              		.global	__aeabi_fcmplt
 1751              		.global	__aeabi_fsub
 1752              		.section	.text.nextMotion,"ax",%progbits
 1753              		.align	2
 1754              		.global	nextMotion
 1755              		.thumb
 1756              		.thumb_func
 1757              		.type	nextMotion, %function
 1758              	nextMotion:
 1759              	.LFB78:
 380:dcmotor.c     **** }
 381:dcmotor.c     **** 
 382:dcmotor.c     **** //Looks at the current position, desired position and the location of the block, 
 383:dcmotor.c     **** //and plans a route, executing the next motion in that route if the main program 
 384:dcmotor.c     **** //permits (via having the moveNow flag set to TRUE)
 385:dcmotor.c     **** void nextMotion(int * desiredPosition){
 1760              		.loc 1 385 0
 1761              		.cfi_startproc
 1762              		@ args = 0, pretend = 0, frame = 0
 1763              		@ frame_needed = 0, uses_anonymous_args = 0
 1764              	.LVL218:
 1765 0000 38B5     		push	{r3, r4, r5, lr}
 1766              		.cfi_def_cfa_offset 16
 1767              		.cfi_offset 3, -16
 1768              		.cfi_offset 4, -12
 1769              		.cfi_offset 5, -8
 1770              		.cfi_offset 14, -4
 1771 0002 0546     		mov	r5, r0
 386:dcmotor.c     ****     //Check that we have already acquired the block's location (by checking we aren't in 
 387:dcmotor.c     ****     //the scanning for block state)
 388:dcmotor.c     ****     //Check what motions are available to us from the flags
 389:dcmotor.c     ****     //Check what motions are available to us from our location compared to obstacle
 390:dcmotor.c     ****     if (block_location[0] < currentPosition[0] && currentPosition[0] < block_location[1]){
 1772              		.loc 1 390 0
 1773 0004 134B     		ldr	r3, .L97
 1774 0006 1C68     		ldr	r4, [r3]	@ float
 1775 0008 2146     		mov	r1, r4
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\cc13CBnx.s 			page 39


 1776 000a 134B     		ldr	r3, .L97+4
 1777 000c 1868     		ldr	r0, [r3]	@ float
 1778              	.LVL219:
 1779 000e FFF7FEFF 		bl	__aeabi_fcmplt
 1780              	.LVL220:
 1781 0012 F0B1     		cbz	r0, .L88
 1782              		.loc 1 390 0 is_stmt 0 discriminator 1
 1783 0014 104B     		ldr	r3, .L97+4
 1784 0016 5968     		ldr	r1, [r3, #4]	@ float
 1785 0018 2046     		mov	r0, r4
 1786 001a FFF7FEFF 		bl	__aeabi_fcmplt
 1787              	.LVL221:
 1788 001e C0B1     		cbz	r0, .L88
 1789              	.LBB3:
 391:dcmotor.c     ****         float xToMove = desiredPosition[0] - currentPosition[0];
 1790              		.loc 1 391 0 is_stmt 1
 1791 0020 2868     		ldr	r0, [r5]
 1792 0022 FFF7FEFF 		bl	__aeabi_i2f
 1793              	.LVL222:
 1794 0026 2146     		mov	r1, r4
 1795 0028 FFF7FEFF 		bl	__aeabi_fsub
 1796              	.LVL223:
 392:dcmotor.c     ****         if ((xToMove <0) && (moveLeftAllowed == TRUE)){
 1797              		.loc 1 392 0
 1798 002c 0021     		movs	r1, #0
 1799 002e FFF7FEFF 		bl	__aeabi_fcmplt
 1800              	.LVL224:
 1801 0032 70B1     		cbz	r0, .L88
 1802              		.loc 1 392 0 is_stmt 0 discriminator 1
 1803 0034 094B     		ldr	r3, .L97+8
 1804 0036 B3F90030 		ldrsh	r3, [r3]
 1805 003a 012B     		cmp	r3, #1
 1806 003c 09D1     		bne	.L88
 393:dcmotor.c     ****             if (currentOrientation != 180){
 1807              		.loc 1 393 0 is_stmt 1
 1808 003e 084B     		ldr	r3, .L97+12
 1809 0040 1868     		ldr	r0, [r3]
 1810 0042 B428     		cmp	r0, #180
 1811 0044 05D0     		beq	.L88
 394:dcmotor.c     ****                 turnLeft(180 - currentOrientation);
 1812              		.loc 1 394 0
 1813 0046 C0F1B400 		rsb	r0, r0, #180
 1814 004a FFF7FEFF 		bl	__aeabi_i2f
 1815              	.LVL225:
 1816 004e FFF7FEFF 		bl	turnLeft
 1817              	.LVL226:
 1818              	.L88:
 1819 0052 38BD     		pop	{r3, r4, r5, pc}
 1820              	.LVL227:
 1821              	.L98:
 1822              		.align	2
 1823              	.L97:
 1824 0054 00000000 		.word	currentPosition
 1825 0058 00000000 		.word	block_location
 1826 005c 00000000 		.word	moveLeftAllowed
 1827 0060 00000000 		.word	currentOrientation
 1828              	.LBE3:
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\cc13CBnx.s 			page 40


 1829              		.cfi_endproc
 1830              	.LFE78:
 1831              		.size	nextMotion, .-nextMotion
 1832              		.section	.text.stopMotor1AndUpdate,"ax",%progbits
 1833              		.align	2
 1834              		.global	stopMotor1AndUpdate
 1835              		.thumb
 1836              		.thumb_func
 1837              		.type	stopMotor1AndUpdate, %function
 1838              	stopMotor1AndUpdate:
 1839              	.LFB79:
 395:dcmotor.c     ****             }
 396:dcmotor.c     ****         }
 397:dcmotor.c     ****     }
 398:dcmotor.c     **** }
 399:dcmotor.c     **** 
 400:dcmotor.c     **** void stopMotor1AndUpdate(void){
 1840              		.loc 1 400 0
 1841              		.cfi_startproc
 1842              		@ args = 0, pretend = 0, frame = 0
 1843              		@ frame_needed = 0, uses_anonymous_args = 0
 1844 0000 10B5     		push	{r4, lr}
 1845              		.cfi_def_cfa_offset 8
 1846              		.cfi_offset 4, -8
 1847              		.cfi_offset 14, -4
 401:dcmotor.c     ****     Motor_1_driver_WriteCompare1(0);
 1848              		.loc 1 401 0
 1849 0002 0020     		movs	r0, #0
 1850 0004 FFF7FEFF 		bl	Motor_1_driver_WriteCompare1
 1851              	.LVL228:
 402:dcmotor.c     ****     Motor_1_driver_WriteCompare2(0);
 1852              		.loc 1 402 0
 1853 0008 0020     		movs	r0, #0
 1854 000a FFF7FEFF 		bl	Motor_1_driver_WriteCompare2
 1855              	.LVL229:
 403:dcmotor.c     ****     Motor_1_Encoder_Counts_Stop();
 1856              		.loc 1 403 0
 1857 000e FFF7FEFF 		bl	Motor_1_Encoder_Counts_Stop
 1858              	.LVL230:
 404:dcmotor.c     ****     M1_FD = 0;
 1859              		.loc 1 404 0
 1860 0012 0024     		movs	r4, #0
 1861 0014 064B     		ldr	r3, .L101
 1862 0016 1C60     		str	r4, [r3]
 405:dcmotor.c     ****     M1_BD = 0;
 1863              		.loc 1 405 0
 1864 0018 064B     		ldr	r3, .L101+4
 1865 001a 1C60     		str	r4, [r3]
 406:dcmotor.c     ****     UART_1_PutString("Counter 1 interrupt \n");
 1866              		.loc 1 406 0
 1867 001c 0648     		ldr	r0, .L101+8
 1868 001e FFF7FEFF 		bl	UART_1_PutString
 1869              	.LVL231:
 407:dcmotor.c     ****     motor1Enable = FALSE;
 1870              		.loc 1 407 0
 1871 0022 064B     		ldr	r3, .L101+12
 1872 0024 1C80     		strh	r4, [r3]	@ movhi
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\cc13CBnx.s 			page 41


 408:dcmotor.c     ****     stopMotion();
 1873              		.loc 1 408 0
 1874 0026 FFF7FEFF 		bl	stopMotion
 1875              	.LVL232:
 409:dcmotor.c     ****     Motor_1_Encoder_Counts_ReadStatusRegister(); //Clears the interrupt
 1876              		.loc 1 409 0
 1877 002a FFF7FEFF 		bl	Motor_1_Encoder_Counts_ReadStatusRegister
 1878              	.LVL233:
 1879 002e 10BD     		pop	{r4, pc}
 1880              	.L102:
 1881              		.align	2
 1882              	.L101:
 1883 0030 00000000 		.word	M1_FD
 1884 0034 00000000 		.word	M1_BD
 1885 0038 00000000 		.word	.LC0
 1886 003c 00000000 		.word	motor1Enable
 1887              		.cfi_endproc
 1888              	.LFE79:
 1889              		.size	stopMotor1AndUpdate, .-stopMotor1AndUpdate
 1890              		.section	.text.stopMotor2AndUpdate,"ax",%progbits
 1891              		.align	2
 1892              		.global	stopMotor2AndUpdate
 1893              		.thumb
 1894              		.thumb_func
 1895              		.type	stopMotor2AndUpdate, %function
 1896              	stopMotor2AndUpdate:
 1897              	.LFB80:
 410:dcmotor.c     **** }
 411:dcmotor.c     **** 
 412:dcmotor.c     **** void stopMotor2AndUpdate(void){
 1898              		.loc 1 412 0
 1899              		.cfi_startproc
 1900              		@ args = 0, pretend = 0, frame = 0
 1901              		@ frame_needed = 0, uses_anonymous_args = 0
 1902 0000 10B5     		push	{r4, lr}
 1903              		.cfi_def_cfa_offset 8
 1904              		.cfi_offset 4, -8
 1905              		.cfi_offset 14, -4
 413:dcmotor.c     ****     Motor_2_driver_WriteCompare1(0);
 1906              		.loc 1 413 0
 1907 0002 0020     		movs	r0, #0
 1908 0004 FFF7FEFF 		bl	Motor_2_driver_WriteCompare1
 1909              	.LVL234:
 414:dcmotor.c     ****     Motor_2_driver_WriteCompare2(0);
 1910              		.loc 1 414 0
 1911 0008 0020     		movs	r0, #0
 1912 000a FFF7FEFF 		bl	Motor_2_driver_WriteCompare2
 1913              	.LVL235:
 415:dcmotor.c     ****     Motor_2_Encoder_Counts_Stop();
 1914              		.loc 1 415 0
 1915 000e FFF7FEFF 		bl	Motor_2_Encoder_Counts_Stop
 1916              	.LVL236:
 416:dcmotor.c     ****     M2_FD = 0;
 1917              		.loc 1 416 0
 1918 0012 0024     		movs	r4, #0
 1919 0014 064B     		ldr	r3, .L105
 1920 0016 1C60     		str	r4, [r3]
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\cc13CBnx.s 			page 42


 417:dcmotor.c     ****     M2_BD = 0;
 1921              		.loc 1 417 0
 1922 0018 064B     		ldr	r3, .L105+4
 1923 001a 1C60     		str	r4, [r3]
 418:dcmotor.c     ****     UART_1_PutString("Counter 2 interrupt \n");
 1924              		.loc 1 418 0
 1925 001c 0648     		ldr	r0, .L105+8
 1926 001e FFF7FEFF 		bl	UART_1_PutString
 1927              	.LVL237:
 419:dcmotor.c     ****     motor2Enable = FALSE;   
 1928              		.loc 1 419 0
 1929 0022 064B     		ldr	r3, .L105+12
 1930 0024 1C80     		strh	r4, [r3]	@ movhi
 420:dcmotor.c     ****     stopMotion();
 1931              		.loc 1 420 0
 1932 0026 FFF7FEFF 		bl	stopMotion
 1933              	.LVL238:
 421:dcmotor.c     ****     Motor_2_Encoder_Counts_ReadStatusRegister(); //Clears the interrupt
 1934              		.loc 1 421 0
 1935 002a FFF7FEFF 		bl	Motor_2_Encoder_Counts_ReadStatusRegister
 1936              	.LVL239:
 1937 002e 10BD     		pop	{r4, pc}
 1938              	.L106:
 1939              		.align	2
 1940              	.L105:
 1941 0030 00000000 		.word	M2_FD
 1942 0034 00000000 		.word	M2_BD
 1943 0038 18000000 		.word	.LC1
 1944 003c 00000000 		.word	motor2Enable
 1945              		.cfi_endproc
 1946              	.LFE80:
 1947              		.size	stopMotor2AndUpdate, .-stopMotor2AndUpdate
 1948              		.section	.text.moveAndAngle,"ax",%progbits
 1949              		.align	2
 1950              		.global	moveAndAngle
 1951              		.thumb
 1952              		.thumb_func
 1953              		.type	moveAndAngle, %function
 1954              	moveAndAngle:
 1955              	.LFB81:
 422:dcmotor.c     **** }
 423:dcmotor.c     **** 
 424:dcmotor.c     **** void moveAndAngle(int horizontal, int vertical, int angle){
 1956              		.loc 1 424 0
 1957              		.cfi_startproc
 1958              		@ args = 0, pretend = 0, frame = 0
 1959              		@ frame_needed = 0, uses_anonymous_args = 0
 1960              	.LVL240:
 1961 0000 08B5     		push	{r3, lr}
 1962              		.cfi_def_cfa_offset 8
 1963              		.cfi_offset 3, -8
 1964              		.cfi_offset 14, -4
 425:dcmotor.c     ****     // TO COMPLETE NIDHIN
 426:dcmotor.c     ****     UART_1_PutString("Move and Angle called");
 1965              		.loc 1 426 0
 1966 0002 0248     		ldr	r0, .L109
 1967              	.LVL241:
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\cc13CBnx.s 			page 43


 1968 0004 FFF7FEFF 		bl	UART_1_PutString
 1969              	.LVL242:
 1970 0008 08BD     		pop	{r3, pc}
 1971              	.L110:
 1972 000a 00BF     		.align	2
 1973              	.L109:
 1974 000c 30000000 		.word	.LC2
 1975              		.cfi_endproc
 1976              	.LFE81:
 1977              		.size	moveAndAngle, .-moveAndAngle
 1978              		.global	__aeabi_dcmpgt
 1979              		.section	.text.correctAngle,"ax",%progbits
 1980              		.align	2
 1981              		.global	correctAngle
 1982              		.thumb
 1983              		.thumb_func
 1984              		.type	correctAngle, %function
 1985              	correctAngle:
 1986              	.LFB82:
 427:dcmotor.c     ****     return;    
 428:dcmotor.c     **** }
 429:dcmotor.c     **** 
 430:dcmotor.c     **** void correctAngle(){
 1987              		.loc 1 430 0
 1988              		.cfi_startproc
 1989              		@ args = 0, pretend = 0, frame = 0
 1990              		@ frame_needed = 0, uses_anonymous_args = 0
 1991 0000 10B5     		push	{r4, lr}
 1992              		.cfi_def_cfa_offset 8
 1993              		.cfi_offset 4, -8
 1994              		.cfi_offset 14, -4
 431:dcmotor.c     ****     moveAndAngle(HOME_MIDPOINT, 20, WEST_ANGLE); // Choose west angle because nothing will be block
 1995              		.loc 1 431 0
 1996 0002 B422     		movs	r2, #180
 1997 0004 1421     		movs	r1, #20
 1998 0006 3C20     		movs	r0, #60
 1999 0008 FFF7FEFF 		bl	moveAndAngle
 2000              	.LVL243:
 432:dcmotor.c     ****     distanceCheck();
 2001              		.loc 1 432 0
 2002 000c FFF7FEFF 		bl	distanceCheck
 2003              	.LVL244:
 433:dcmotor.c     ****     // rotate by micro steps until front two sensors are equal within tolerance
 434:dcmotor.c     ****     
 435:dcmotor.c     ****     int error = abs(ultrasonic_distances[LEFT_FRONT] - ultrasonic_distances[RIGHT_FRONT]);
 2004              		.loc 1 435 0
 2005 0010 0D4B     		ldr	r3, .L114+8
 2006 0012 9968     		ldr	r1, [r3, #8]	@ float
 2007 0014 5868     		ldr	r0, [r3, #4]	@ float
 2008 0016 FFF7FEFF 		bl	__aeabi_fsub
 2009              	.LVL245:
 2010 001a FFF7FEFF 		bl	__aeabi_f2d
 2011              	.LVL246:
 2012 001e FFF7FEFF 		bl	abs
 2013              	.LVL247:
 2014 0022 0446     		mov	r4, r0
 2015              	.LVL248:
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\cc13CBnx.s 			page 44


 2016              	.L112:
 436:dcmotor.c     ****     while (error > ANGLE_TOLERANCE){
 2017              		.loc 1 436 0
 2018 0024 2046     		mov	r0, r4
 2019 0026 FFF7FEFF 		bl	__aeabi_i2d
 2020              	.LVL249:
 2021 002a 05A3     		adr	r3, .L114
 2022 002c D3E90023 		ldrd	r2, [r3]
 2023 0030 FFF7FEFF 		bl	__aeabi_dcmpgt
 2024              	.LVL250:
 2025 0034 0028     		cmp	r0, #0
 2026 0036 F5D1     		bne	.L112
 437:dcmotor.c     ****         // microTurn();
 438:dcmotor.c     ****         error = abs(ultrasonic_distances[LEFT_FRONT] - ultrasonic_distances[RIGHT_FRONT]);
 439:dcmotor.c     ****     }
 440:dcmotor.c     ****     
 441:dcmotor.c     **** }
 2027              		.loc 1 441 0
 2028 0038 10BD     		pop	{r4, pc}
 2029              	.LVL251:
 2030              	.L115:
 2031 003a 00BFAFF3 		.align	3
 2031      0080
 2032              	.L114:
 2033 0040 7B14AE47 		.word	1202590843
 2034 0044 E17A843F 		.word	1065646817
 2035 0048 00000000 		.word	ultrasonic_distances
 2036              		.cfi_endproc
 2037              	.LFE82:
 2038              		.size	correctAngle, .-correctAngle
 2039              		.comm	puckPileLocation,4,4
 2040              		.comm	block_edge_location,16,4
 2041              		.comm	sweeping,4,4
 2042              		.comm	puckRackOffsetsFromWest,20,4
 2043              		.comm	puckRackColours,20,4
 2044              		.comm	currentPuckRackScanningIndex,4,4
 2045              		.comm	driveStraightEnable,4,4
 2046              		.comm	initialisation,4,4
 2047              		.section	.rodata.str1.4,"aMS",%progbits,1
 2048              		.align	2
 2049              	.LC0:
 2050 0000 436F756E 		.ascii	"Counter 1 interrupt \012\000"
 2050      74657220 
 2050      3120696E 
 2050      74657272 
 2050      75707420 
 2051 0016 0000     		.space	2
 2052              	.LC1:
 2053 0018 436F756E 		.ascii	"Counter 2 interrupt \012\000"
 2053      74657220 
 2053      3220696E 
 2053      74657272 
 2053      75707420 
 2054 002e 0000     		.space	2
 2055              	.LC2:
 2056 0030 4D6F7665 		.ascii	"Move and Angle called\000"
 2056      20616E64 
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\cc13CBnx.s 			page 45


 2056      20416E67 
 2056      6C652063 
 2056      616C6C65 
 2057              		.text
 2058              	.Letext0:
 2059              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 2060              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 2061              		.file 4 "Generated_Source\\PSoC5/core_cm3.h"
 2062              		.file 5 "main.h"
 2063              		.file 6 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 2064              		.file 7 "Generated_Source\\PSoC5/Motor_1_Encoder_Counts.h"
 2065              		.file 8 "Generated_Source\\PSoC5/Motor_2_Encoder_Counts.h"
 2066              		.file 9 "Generated_Source\\PSoC5/Motor_1_driver.h"
 2067              		.file 10 "Generated_Source\\PSoC5/Motor_2_driver.h"
 2068              		.file 11 "Generated_Source\\PSoC5/Drift_Check_Timer.h"
 2069              		.file 12 "Generated_Source\\PSoC5/UART_1.h"
 2070              		.file 13 "ultrasonic.h"
 2071              		.file 14 "<built-in>"
 2072              		.section	.debug_info,"",%progbits
 2073              	.Ldebug_info0:
 2074 0000 D80B0000 		.4byte	0xbd8
 2075 0004 0400     		.2byte	0x4
 2076 0006 00000000 		.4byte	.Ldebug_abbrev0
 2077 000a 04       		.byte	0x4
 2078 000b 01       		.uleb128 0x1
 2079 000c 65060000 		.4byte	.LASF95
 2080 0010 0C       		.byte	0xc
 2081 0011 0F040000 		.4byte	.LASF96
 2082 0015 6F030000 		.4byte	.LASF97
 2083 0019 00000000 		.4byte	.Ldebug_ranges0+0
 2084 001d 00000000 		.4byte	0
 2085 0021 00000000 		.4byte	.Ldebug_line0
 2086 0025 02       		.uleb128 0x2
 2087 0026 04       		.byte	0x4
 2088 0027 04       		.byte	0x4
 2089 0028 F0010000 		.4byte	.LASF0
 2090 002c 02       		.uleb128 0x2
 2091 002d 08       		.byte	0x8
 2092 002e 04       		.byte	0x4
 2093 002f 97050000 		.4byte	.LASF1
 2094 0033 02       		.uleb128 0x2
 2095 0034 01       		.byte	0x1
 2096 0035 06       		.byte	0x6
 2097 0036 D8030000 		.4byte	.LASF2
 2098 003a 02       		.uleb128 0x2
 2099 003b 01       		.byte	0x1
 2100 003c 08       		.byte	0x8
 2101 003d 21030000 		.4byte	.LASF3
 2102 0041 02       		.uleb128 0x2
 2103 0042 02       		.byte	0x2
 2104 0043 05       		.byte	0x5
 2105 0044 8A000000 		.4byte	.LASF4
 2106 0048 02       		.uleb128 0x2
 2107 0049 02       		.byte	0x2
 2108 004a 07       		.byte	0x7
 2109 004b 5B040000 		.4byte	.LASF5
 2110 004f 03       		.uleb128 0x3
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\cc13CBnx.s 			page 46


 2111 0050 02060000 		.4byte	.LASF11
 2112 0054 02       		.byte	0x2
 2113 0055 3F       		.byte	0x3f
 2114 0056 5A000000 		.4byte	0x5a
 2115 005a 02       		.uleb128 0x2
 2116 005b 04       		.byte	0x4
 2117 005c 05       		.byte	0x5
 2118 005d 93020000 		.4byte	.LASF6
 2119 0061 02       		.uleb128 0x2
 2120 0062 04       		.byte	0x4
 2121 0063 07       		.byte	0x7
 2122 0064 C0020000 		.4byte	.LASF7
 2123 0068 02       		.uleb128 0x2
 2124 0069 08       		.byte	0x8
 2125 006a 05       		.byte	0x5
 2126 006b 36020000 		.4byte	.LASF8
 2127 006f 02       		.uleb128 0x2
 2128 0070 08       		.byte	0x8
 2129 0071 07       		.byte	0x7
 2130 0072 F8030000 		.4byte	.LASF9
 2131 0076 04       		.uleb128 0x4
 2132 0077 04       		.byte	0x4
 2133 0078 05       		.byte	0x5
 2134 0079 696E7400 		.ascii	"int\000"
 2135 007d 02       		.uleb128 0x2
 2136 007e 04       		.byte	0x4
 2137 007f 07       		.byte	0x7
 2138 0080 19040000 		.4byte	.LASF10
 2139 0084 03       		.uleb128 0x3
 2140 0085 91040000 		.4byte	.LASF12
 2141 0089 03       		.byte	0x3
 2142 008a 2C       		.byte	0x2c
 2143 008b 4F000000 		.4byte	0x4f
 2144 008f 02       		.uleb128 0x2
 2145 0090 01       		.byte	0x1
 2146 0091 08       		.byte	0x8
 2147 0092 86040000 		.4byte	.LASF13
 2148 0096 02       		.uleb128 0x2
 2149 0097 08       		.byte	0x8
 2150 0098 04       		.byte	0x4
 2151 0099 2F030000 		.4byte	.LASF14
 2152 009d 02       		.uleb128 0x2
 2153 009e 04       		.byte	0x4
 2154 009f 07       		.byte	0x7
 2155 00a0 36060000 		.4byte	.LASF15
 2156 00a4 05       		.uleb128 0x5
 2157 00a5 6E040000 		.4byte	.LASF19
 2158 00a9 01       		.byte	0x1
 2159 00aa 3E       		.byte	0x3e
 2160 00ab 00000000 		.4byte	.LFB64
 2161 00af 5C010000 		.4byte	.LFE64-.LFB64
 2162 00b3 01       		.uleb128 0x1
 2163 00b4 9C       		.byte	0x9c
 2164 00b5 1A010000 		.4byte	0x11a
 2165 00b9 06       		.uleb128 0x6
 2166 00ba 49040000 		.4byte	.LASF16
 2167 00be 01       		.byte	0x1
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\cc13CBnx.s 			page 47


 2168 00bf 3E       		.byte	0x3e
 2169 00c0 76000000 		.4byte	0x76
 2170 00c4 00000000 		.4byte	.LLST0
 2171 00c8 06       		.uleb128 0x6
 2172 00c9 B8000000 		.4byte	.LASF17
 2173 00cd 01       		.byte	0x1
 2174 00ce 3E       		.byte	0x3e
 2175 00cf 76000000 		.4byte	0x76
 2176 00d3 45000000 		.4byte	.LLST1
 2177 00d7 06       		.uleb128 0x6
 2178 00d8 DF020000 		.4byte	.LASF18
 2179 00dc 01       		.byte	0x1
 2180 00dd 3E       		.byte	0x3e
 2181 00de 76000000 		.4byte	0x76
 2182 00e2 8A000000 		.4byte	.LLST2
 2183 00e6 07       		.uleb128 0x7
 2184 00e7 C1040000 		.4byte	.LASF23
 2185 00eb 01       		.byte	0x1
 2186 00ec 3F       		.byte	0x3f
 2187 00ed 25000000 		.4byte	0x25
 2188 00f1 CF000000 		.4byte	.LLST3
 2189 00f5 08       		.uleb128 0x8
 2190 00f6 50000000 		.4byte	.LVL15
 2191 00fa D20A0000 		.4byte	0xad2
 2192 00fe 08       		.uleb128 0x8
 2193 00ff 84000000 		.4byte	.LVL20
 2194 0103 DD0A0000 		.4byte	0xadd
 2195 0107 08       		.uleb128 0x8
 2196 0108 E0000000 		.4byte	.LVL35
 2197 010c D20A0000 		.4byte	0xad2
 2198 0110 08       		.uleb128 0x8
 2199 0111 14010000 		.4byte	.LVL40
 2200 0115 DD0A0000 		.4byte	0xadd
 2201 0119 00       		.byte	0
 2202 011a 05       		.uleb128 0x5
 2203 011b 0E050000 		.4byte	.LASF20
 2204 011f 01       		.byte	0x1
 2205 0120 4E       		.byte	0x4e
 2206 0121 00000000 		.4byte	.LFB65
 2207 0125 78000000 		.4byte	.LFE65-.LFB65
 2208 0129 01       		.uleb128 0x1
 2209 012a 9C       		.byte	0x9c
 2210 012b 6C010000 		.4byte	0x16c
 2211 012f 06       		.uleb128 0x6
 2212 0130 49040000 		.4byte	.LASF16
 2213 0134 01       		.byte	0x1
 2214 0135 4E       		.byte	0x4e
 2215 0136 76000000 		.4byte	0x76
 2216 013a 03010000 		.4byte	.LLST4
 2217 013e 06       		.uleb128 0x6
 2218 013f 75000000 		.4byte	.LASF21
 2219 0143 01       		.byte	0x1
 2220 0144 4E       		.byte	0x4e
 2221 0145 76000000 		.4byte	0x76
 2222 0149 24010000 		.4byte	.LLST5
 2223 014d 06       		.uleb128 0x6
 2224 014e DF010000 		.4byte	.LASF22
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\cc13CBnx.s 			page 48


 2225 0152 01       		.byte	0x1
 2226 0153 4E       		.byte	0x4e
 2227 0154 76000000 		.4byte	0x76
 2228 0158 50010000 		.4byte	.LLST6
 2229 015c 07       		.uleb128 0x7
 2230 015d CB000000 		.4byte	.LASF24
 2231 0161 01       		.byte	0x1
 2232 0162 4F       		.byte	0x4f
 2233 0163 76000000 		.4byte	0x76
 2234 0167 7C010000 		.4byte	.LLST7
 2235 016b 00       		.byte	0
 2236 016c 09       		.uleb128 0x9
 2237 016d B5020000 		.4byte	.LASF25
 2238 0171 01       		.byte	0x1
 2239 0172 5E       		.byte	0x5e
 2240 0173 00000000 		.4byte	.LFB66
 2241 0177 B4000000 		.4byte	.LFE66-.LFB66
 2242 017b 01       		.uleb128 0x1
 2243 017c 9C       		.byte	0x9c
 2244 017d F3010000 		.4byte	0x1f3
 2245 0181 0A       		.uleb128 0xa
 2246 0182 16000000 		.4byte	.LBB2
 2247 0186 9E000000 		.4byte	.LBE2-.LBB2
 2248 018a 07       		.uleb128 0x7
 2249 018b 1D000000 		.4byte	.LASF26
 2250 018f 01       		.byte	0x1
 2251 0190 62       		.byte	0x62
 2252 0191 76000000 		.4byte	0x76
 2253 0195 9A010000 		.4byte	.LLST8
 2254 0199 08       		.uleb128 0x8
 2255 019a 2A000000 		.4byte	.LVL53
 2256 019e E80A0000 		.4byte	0xae8
 2257 01a2 08       		.uleb128 0x8
 2258 01a3 36000000 		.4byte	.LVL54
 2259 01a7 A4000000 		.4byte	0xa4
 2260 01ab 08       		.uleb128 0x8
 2261 01ac 44000000 		.4byte	.LVL55
 2262 01b0 F30A0000 		.4byte	0xaf3
 2263 01b4 08       		.uleb128 0x8
 2264 01b5 50000000 		.4byte	.LVL56
 2265 01b9 1A010000 		.4byte	0x11a
 2266 01bd 08       		.uleb128 0x8
 2267 01be 5E000000 		.4byte	.LVL57
 2268 01c2 E80A0000 		.4byte	0xae8
 2269 01c6 08       		.uleb128 0x8
 2270 01c7 6A000000 		.4byte	.LVL58
 2271 01cb 1A010000 		.4byte	0x11a
 2272 01cf 0B       		.uleb128 0xb
 2273 01d0 70000000 		.4byte	.LVL59
 2274 01d4 FE0A0000 		.4byte	0xafe
 2275 01d8 E2010000 		.4byte	0x1e2
 2276 01dc 0C       		.uleb128 0xc
 2277 01dd 01       		.uleb128 0x1
 2278 01de 50       		.byte	0x50
 2279 01df 01       		.uleb128 0x1
 2280 01e0 30       		.byte	0x30
 2281 01e1 00       		.byte	0
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\cc13CBnx.s 			page 49


 2282 01e2 0D       		.uleb128 0xd
 2283 01e3 76000000 		.4byte	.LVL60
 2284 01e7 090B0000 		.4byte	0xb09
 2285 01eb 0C       		.uleb128 0xc
 2286 01ec 01       		.uleb128 0x1
 2287 01ed 50       		.byte	0x50
 2288 01ee 01       		.uleb128 0x1
 2289 01ef 30       		.byte	0x30
 2290 01f0 00       		.byte	0
 2291 01f1 00       		.byte	0
 2292 01f2 00       		.byte	0
 2293 01f3 05       		.uleb128 0x5
 2294 01f4 7E020000 		.4byte	.LASF27
 2295 01f8 01       		.byte	0x1
 2296 01f9 83       		.byte	0x83
 2297 01fa 00000000 		.4byte	.LFB67
 2298 01fe 70000000 		.4byte	.LFE67-.LFB67
 2299 0202 01       		.uleb128 0x1
 2300 0203 9C       		.byte	0x9c
 2301 0204 69020000 		.4byte	0x269
 2302 0208 06       		.uleb128 0x6
 2303 0209 08050000 		.4byte	.LASF28
 2304 020d 01       		.byte	0x1
 2305 020e 83       		.byte	0x83
 2306 020f 25000000 		.4byte	0x25
 2307 0213 C3010000 		.4byte	.LLST9
 2308 0217 06       		.uleb128 0x6
 2309 0218 8B040000 		.4byte	.LASF29
 2310 021c 01       		.byte	0x1
 2311 021d 83       		.byte	0x83
 2312 021e 25000000 		.4byte	0x25
 2313 0222 E6010000 		.4byte	.LLST10
 2314 0226 06       		.uleb128 0x6
 2315 0227 13070000 		.4byte	.LASF30
 2316 022b 01       		.byte	0x1
 2317 022c 83       		.byte	0x83
 2318 022d 25000000 		.4byte	0x25
 2319 0231 14020000 		.4byte	.LLST11
 2320 0235 06       		.uleb128 0x6
 2321 0236 4B060000 		.4byte	.LASF31
 2322 023a 01       		.byte	0x1
 2323 023b 83       		.byte	0x83
 2324 023c 25000000 		.4byte	0x25
 2325 0240 42020000 		.4byte	.LLST12
 2326 0244 08       		.uleb128 0x8
 2327 0245 1E000000 		.4byte	.LVL66
 2328 0249 140B0000 		.4byte	0xb14
 2329 024d 08       		.uleb128 0x8
 2330 024e 36000000 		.4byte	.LVL70
 2331 0252 1F0B0000 		.4byte	0xb1f
 2332 0256 08       		.uleb128 0x8
 2333 0257 4E000000 		.4byte	.LVL74
 2334 025b 2A0B0000 		.4byte	0xb2a
 2335 025f 08       		.uleb128 0x8
 2336 0260 66000000 		.4byte	.LVL78
 2337 0264 350B0000 		.4byte	0xb35
 2338 0268 00       		.byte	0
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\cc13CBnx.s 			page 50


 2339 0269 05       		.uleb128 0x5
 2340 026a 3A010000 		.4byte	.LASF32
 2341 026e 01       		.byte	0x1
 2342 026f 8C       		.byte	0x8c
 2343 0270 00000000 		.4byte	.LFB68
 2344 0274 A0010000 		.4byte	.LFE68-.LFB68
 2345 0278 01       		.uleb128 0x1
 2346 0279 9C       		.byte	0x9c
 2347 027a BA020000 		.4byte	0x2ba
 2348 027e 07       		.uleb128 0x7
 2349 027f 85000000 		.4byte	.LASF33
 2350 0283 01       		.byte	0x1
 2351 0284 8D       		.byte	0x8d
 2352 0285 76000000 		.4byte	0x76
 2353 0289 70020000 		.4byte	.LLST13
 2354 028d 0B       		.uleb128 0xb
 2355 028e 70010000 		.4byte	.LVL100
 2356 0292 F3010000 		.4byte	0x1f3
 2357 0296 B0020000 		.4byte	0x2b0
 2358 029a 0C       		.uleb128 0xc
 2359 029b 01       		.uleb128 0x1
 2360 029c 51       		.byte	0x51
 2361 029d 03       		.uleb128 0x3
 2362 029e F5       		.byte	0xf5
 2363 029f 04       		.uleb128 0x4
 2364 02a0 25       		.uleb128 0x25
 2365 02a1 0C       		.uleb128 0xc
 2366 02a2 01       		.uleb128 0x1
 2367 02a3 52       		.byte	0x52
 2368 02a4 03       		.uleb128 0x3
 2369 02a5 F5       		.byte	0xf5
 2370 02a6 05       		.uleb128 0x5
 2371 02a7 25       		.uleb128 0x25
 2372 02a8 0C       		.uleb128 0xc
 2373 02a9 01       		.uleb128 0x1
 2374 02aa 53       		.byte	0x53
 2375 02ab 03       		.uleb128 0x3
 2376 02ac F5       		.byte	0xf5
 2377 02ad 06       		.uleb128 0x6
 2378 02ae 25       		.uleb128 0x25
 2379 02af 00       		.byte	0
 2380 02b0 08       		.uleb128 0x8
 2381 02b1 74010000 		.4byte	.LVL101
 2382 02b5 400B0000 		.4byte	0xb40
 2383 02b9 00       		.byte	0
 2384 02ba 09       		.uleb128 0x9
 2385 02bb 47010000 		.4byte	.LASF34
 2386 02bf 01       		.byte	0x1
 2387 02c0 DB       		.byte	0xdb
 2388 02c1 00000000 		.4byte	.LFB69
 2389 02c5 20000000 		.4byte	.LFE69-.LFB69
 2390 02c9 01       		.uleb128 0x1
 2391 02ca 9C       		.byte	0x9c
 2392 02cb 38030000 		.4byte	0x338
 2393 02cf 06       		.uleb128 0x6
 2394 02d0 F4050000 		.4byte	.LASF35
 2395 02d4 01       		.byte	0x1
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\cc13CBnx.s 			page 51


 2396 02d5 DB       		.byte	0xdb
 2397 02d6 76000000 		.4byte	0x76
 2398 02da D0020000 		.4byte	.LLST14
 2399 02de 06       		.uleb128 0x6
 2400 02df FB050000 		.4byte	.LASF36
 2401 02e3 01       		.byte	0x1
 2402 02e4 DB       		.byte	0xdb
 2403 02e5 76000000 		.4byte	0x76
 2404 02e9 EE020000 		.4byte	.LLST15
 2405 02ed 0B       		.uleb128 0xb
 2406 02ee 0C000000 		.4byte	.LVL104
 2407 02f2 FE0A0000 		.4byte	0xafe
 2408 02f6 00030000 		.4byte	0x300
 2409 02fa 0C       		.uleb128 0xc
 2410 02fb 01       		.uleb128 0x1
 2411 02fc 50       		.byte	0x50
 2412 02fd 01       		.uleb128 0x1
 2413 02fe 30       		.byte	0x30
 2414 02ff 00       		.byte	0
 2415 0300 0B       		.uleb128 0xb
 2416 0301 12000000 		.4byte	.LVL105
 2417 0305 090B0000 		.4byte	0xb09
 2418 0309 13030000 		.4byte	0x313
 2419 030d 0C       		.uleb128 0xc
 2420 030e 01       		.uleb128 0x1
 2421 030f 50       		.byte	0x50
 2422 0310 01       		.uleb128 0x1
 2423 0311 30       		.byte	0x30
 2424 0312 00       		.byte	0
 2425 0313 0B       		.uleb128 0xb
 2426 0314 18000000 		.4byte	.LVL106
 2427 0318 4B0B0000 		.4byte	0xb4b
 2428 031c 27030000 		.4byte	0x327
 2429 0320 0C       		.uleb128 0xc
 2430 0321 01       		.uleb128 0x1
 2431 0322 50       		.byte	0x50
 2432 0323 02       		.uleb128 0x2
 2433 0324 75       		.byte	0x75
 2434 0325 00       		.sleb128 0
 2435 0326 00       		.byte	0
 2436 0327 0D       		.uleb128 0xd
 2437 0328 1E000000 		.4byte	.LVL107
 2438 032c 560B0000 		.4byte	0xb56
 2439 0330 0C       		.uleb128 0xc
 2440 0331 01       		.uleb128 0x1
 2441 0332 50       		.byte	0x50
 2442 0333 02       		.uleb128 0x2
 2443 0334 74       		.byte	0x74
 2444 0335 00       		.sleb128 0
 2445 0336 00       		.byte	0
 2446 0337 00       		.byte	0
 2447 0338 05       		.uleb128 0x5
 2448 0339 D3010000 		.4byte	.LASF37
 2449 033d 01       		.byte	0x1
 2450 033e E3       		.byte	0xe3
 2451 033f 00000000 		.4byte	.LFB70
 2452 0343 C4000000 		.4byte	.LFE70-.LFB70
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\cc13CBnx.s 			page 52


 2453 0347 01       		.uleb128 0x1
 2454 0348 9C       		.byte	0x9c
 2455 0349 AF030000 		.4byte	0x3af
 2456 034d 06       		.uleb128 0x6
 2457 034e 51060000 		.4byte	.LASF38
 2458 0352 01       		.byte	0x1
 2459 0353 E3       		.byte	0xe3
 2460 0354 25000000 		.4byte	0x25
 2461 0358 0C030000 		.4byte	.LLST16
 2462 035c 07       		.uleb128 0x7
 2463 035d 49040000 		.4byte	.LASF16
 2464 0361 01       		.byte	0x1
 2465 0362 E4       		.byte	0xe4
 2466 0363 76000000 		.4byte	0x76
 2467 0367 2F030000 		.4byte	.LLST17
 2468 036b 08       		.uleb128 0x8
 2469 036c 34000000 		.4byte	.LVL112
 2470 0370 BA020000 		.4byte	0x2ba
 2471 0374 08       		.uleb128 0x8
 2472 0375 4E000000 		.4byte	.LVL113
 2473 0379 610B0000 		.4byte	0xb61
 2474 037d 08       		.uleb128 0x8
 2475 037e 52000000 		.4byte	.LVL114
 2476 0382 6C0B0000 		.4byte	0xb6c
 2477 0386 08       		.uleb128 0x8
 2478 0387 56000000 		.4byte	.LVL115
 2479 038b 400B0000 		.4byte	0xb40
 2480 038f 0D       		.uleb128 0xd
 2481 0390 80000000 		.4byte	.LVL120
 2482 0394 F3010000 		.4byte	0x1f3
 2483 0398 0C       		.uleb128 0xc
 2484 0399 01       		.uleb128 0x1
 2485 039a 51       		.byte	0x51
 2486 039b 03       		.uleb128 0x3
 2487 039c F5       		.byte	0xf5
 2488 039d 04       		.uleb128 0x4
 2489 039e 25       		.uleb128 0x25
 2490 039f 0C       		.uleb128 0xc
 2491 03a0 01       		.uleb128 0x1
 2492 03a1 52       		.byte	0x52
 2493 03a2 03       		.uleb128 0x3
 2494 03a3 F5       		.byte	0xf5
 2495 03a4 07       		.uleb128 0x7
 2496 03a5 25       		.uleb128 0x25
 2497 03a6 0C       		.uleb128 0xc
 2498 03a7 01       		.uleb128 0x1
 2499 03a8 53       		.byte	0x53
 2500 03a9 03       		.uleb128 0x3
 2501 03aa F5       		.byte	0xf5
 2502 03ab 08       		.uleb128 0x8
 2503 03ac 25       		.uleb128 0x25
 2504 03ad 00       		.byte	0
 2505 03ae 00       		.byte	0
 2506 03af 05       		.uleb128 0x5
 2507 03b0 2D000000 		.4byte	.LASF39
 2508 03b4 01       		.byte	0x1
 2509 03b5 FB       		.byte	0xfb
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\cc13CBnx.s 			page 53


 2510 03b6 00000000 		.4byte	.LFB71
 2511 03ba 9C000000 		.4byte	.LFE71-.LFB71
 2512 03be 01       		.uleb128 0x1
 2513 03bf 9C       		.byte	0x9c
 2514 03c0 28040000 		.4byte	0x428
 2515 03c4 0E       		.uleb128 0xe
 2516 03c5 49040000 		.4byte	.LASF16
 2517 03c9 01       		.byte	0x1
 2518 03ca FC       		.byte	0xfc
 2519 03cb 76000000 		.4byte	0x76
 2520 03cf DCFF     		.2byte	0xffdc
 2521 03d1 0B       		.uleb128 0xb
 2522 03d2 26000000 		.4byte	.LVL122
 2523 03d6 BA020000 		.4byte	0x2ba
 2524 03da ED030000 		.4byte	0x3ed
 2525 03de 0C       		.uleb128 0xc
 2526 03df 01       		.uleb128 0x1
 2527 03e0 50       		.byte	0x50
 2528 03e1 03       		.uleb128 0x3
 2529 03e2 0A       		.byte	0xa
 2530 03e3 DCFF     		.2byte	0xffdc
 2531 03e5 0C       		.uleb128 0xc
 2532 03e6 01       		.uleb128 0x1
 2533 03e7 51       		.byte	0x51
 2534 03e8 03       		.uleb128 0x3
 2535 03e9 0A       		.byte	0xa
 2536 03ea DCFF     		.2byte	0xffdc
 2537 03ec 00       		.byte	0
 2538 03ed 08       		.uleb128 0x8
 2539 03ee 40000000 		.4byte	.LVL123
 2540 03f2 610B0000 		.4byte	0xb61
 2541 03f6 08       		.uleb128 0x8
 2542 03f7 44000000 		.4byte	.LVL124
 2543 03fb 6C0B0000 		.4byte	0xb6c
 2544 03ff 08       		.uleb128 0x8
 2545 0400 48000000 		.4byte	.LVL125
 2546 0404 400B0000 		.4byte	0xb40
 2547 0408 0D       		.uleb128 0xd
 2548 0409 72000000 		.4byte	.LVL130
 2549 040d F3010000 		.4byte	0x1f3
 2550 0411 0C       		.uleb128 0xc
 2551 0412 01       		.uleb128 0x1
 2552 0413 51       		.byte	0x51
 2553 0414 03       		.uleb128 0x3
 2554 0415 F5       		.byte	0xf5
 2555 0416 04       		.uleb128 0x4
 2556 0417 25       		.uleb128 0x25
 2557 0418 0C       		.uleb128 0xc
 2558 0419 01       		.uleb128 0x1
 2559 041a 52       		.byte	0x52
 2560 041b 03       		.uleb128 0x3
 2561 041c F5       		.byte	0xf5
 2562 041d 07       		.uleb128 0x7
 2563 041e 25       		.uleb128 0x25
 2564 041f 0C       		.uleb128 0xc
 2565 0420 01       		.uleb128 0x1
 2566 0421 53       		.byte	0x53
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\cc13CBnx.s 			page 54


 2567 0422 03       		.uleb128 0x3
 2568 0423 F5       		.byte	0xf5
 2569 0424 08       		.uleb128 0x8
 2570 0425 25       		.uleb128 0x25
 2571 0426 00       		.byte	0
 2572 0427 00       		.byte	0
 2573 0428 0F       		.uleb128 0xf
 2574 0429 D2020000 		.4byte	.LASF40
 2575 042d 01       		.byte	0x1
 2576 042e 0E01     		.2byte	0x10e
 2577 0430 00000000 		.4byte	.LFB72
 2578 0434 C4000000 		.4byte	.LFE72-.LFB72
 2579 0438 01       		.uleb128 0x1
 2580 0439 9C       		.byte	0x9c
 2581 043a A2040000 		.4byte	0x4a2
 2582 043e 10       		.uleb128 0x10
 2583 043f 51060000 		.4byte	.LASF38
 2584 0443 01       		.byte	0x1
 2585 0444 0E01     		.2byte	0x10e
 2586 0446 25000000 		.4byte	0x25
 2587 044a 42030000 		.4byte	.LLST18
 2588 044e 11       		.uleb128 0x11
 2589 044f 49040000 		.4byte	.LASF16
 2590 0453 01       		.byte	0x1
 2591 0454 0F01     		.2byte	0x10f
 2592 0456 76000000 		.4byte	0x76
 2593 045a 65030000 		.4byte	.LLST19
 2594 045e 08       		.uleb128 0x8
 2595 045f 34000000 		.4byte	.LVL135
 2596 0463 BA020000 		.4byte	0x2ba
 2597 0467 08       		.uleb128 0x8
 2598 0468 4A000000 		.4byte	.LVL136
 2599 046c 610B0000 		.4byte	0xb61
 2600 0470 08       		.uleb128 0x8
 2601 0471 4E000000 		.4byte	.LVL137
 2602 0475 6C0B0000 		.4byte	0xb6c
 2603 0479 08       		.uleb128 0x8
 2604 047a 52000000 		.4byte	.LVL138
 2605 047e 400B0000 		.4byte	0xb40
 2606 0482 0D       		.uleb128 0xd
 2607 0483 7A000000 		.4byte	.LVL143
 2608 0487 F3010000 		.4byte	0x1f3
 2609 048b 0C       		.uleb128 0xc
 2610 048c 01       		.uleb128 0x1
 2611 048d 51       		.byte	0x51
 2612 048e 03       		.uleb128 0x3
 2613 048f F5       		.byte	0xf5
 2614 0490 04       		.uleb128 0x4
 2615 0491 25       		.uleb128 0x25
 2616 0492 0C       		.uleb128 0xc
 2617 0493 01       		.uleb128 0x1
 2618 0494 52       		.byte	0x52
 2619 0495 03       		.uleb128 0x3
 2620 0496 F5       		.byte	0xf5
 2621 0497 07       		.uleb128 0x7
 2622 0498 25       		.uleb128 0x25
 2623 0499 0C       		.uleb128 0xc
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\cc13CBnx.s 			page 55


 2624 049a 01       		.uleb128 0x1
 2625 049b 53       		.byte	0x53
 2626 049c 03       		.uleb128 0x3
 2627 049d F5       		.byte	0xf5
 2628 049e 08       		.uleb128 0x8
 2629 049f 25       		.uleb128 0x25
 2630 04a0 00       		.byte	0
 2631 04a1 00       		.byte	0
 2632 04a2 0F       		.uleb128 0xf
 2633 04a3 9C020000 		.4byte	.LASF41
 2634 04a7 01       		.byte	0x1
 2635 04a8 2501     		.2byte	0x125
 2636 04aa 00000000 		.4byte	.LFB73
 2637 04ae 94000000 		.4byte	.LFE73-.LFB73
 2638 04b2 01       		.uleb128 0x1
 2639 04b3 9C       		.byte	0x9c
 2640 04b4 1D050000 		.4byte	0x51d
 2641 04b8 12       		.uleb128 0x12
 2642 04b9 49040000 		.4byte	.LASF16
 2643 04bd 01       		.byte	0x1
 2644 04be 2601     		.2byte	0x126
 2645 04c0 76000000 		.4byte	0x76
 2646 04c4 DCFF     		.2byte	0xffdc
 2647 04c6 0B       		.uleb128 0xb
 2648 04c7 26000000 		.4byte	.LVL145
 2649 04cb BA020000 		.4byte	0x2ba
 2650 04cf E2040000 		.4byte	0x4e2
 2651 04d3 0C       		.uleb128 0xc
 2652 04d4 01       		.uleb128 0x1
 2653 04d5 50       		.byte	0x50
 2654 04d6 03       		.uleb128 0x3
 2655 04d7 0A       		.byte	0xa
 2656 04d8 DCFF     		.2byte	0xffdc
 2657 04da 0C       		.uleb128 0xc
 2658 04db 01       		.uleb128 0x1
 2659 04dc 51       		.byte	0x51
 2660 04dd 03       		.uleb128 0x3
 2661 04de 0A       		.byte	0xa
 2662 04df DCFF     		.2byte	0xffdc
 2663 04e1 00       		.byte	0
 2664 04e2 08       		.uleb128 0x8
 2665 04e3 3C000000 		.4byte	.LVL146
 2666 04e7 610B0000 		.4byte	0xb61
 2667 04eb 08       		.uleb128 0x8
 2668 04ec 40000000 		.4byte	.LVL147
 2669 04f0 6C0B0000 		.4byte	0xb6c
 2670 04f4 08       		.uleb128 0x8
 2671 04f5 44000000 		.4byte	.LVL148
 2672 04f9 400B0000 		.4byte	0xb40
 2673 04fd 0D       		.uleb128 0xd
 2674 04fe 6C000000 		.4byte	.LVL153
 2675 0502 F3010000 		.4byte	0x1f3
 2676 0506 0C       		.uleb128 0xc
 2677 0507 01       		.uleb128 0x1
 2678 0508 51       		.byte	0x51
 2679 0509 03       		.uleb128 0x3
 2680 050a F5       		.byte	0xf5
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\cc13CBnx.s 			page 56


 2681 050b 04       		.uleb128 0x4
 2682 050c 25       		.uleb128 0x25
 2683 050d 0C       		.uleb128 0xc
 2684 050e 01       		.uleb128 0x1
 2685 050f 52       		.byte	0x52
 2686 0510 03       		.uleb128 0x3
 2687 0511 F5       		.byte	0xf5
 2688 0512 07       		.uleb128 0x7
 2689 0513 25       		.uleb128 0x25
 2690 0514 0C       		.uleb128 0xc
 2691 0515 01       		.uleb128 0x1
 2692 0516 53       		.byte	0x53
 2693 0517 03       		.uleb128 0x3
 2694 0518 F5       		.byte	0xf5
 2695 0519 08       		.uleb128 0x8
 2696 051a 25       		.uleb128 0x25
 2697 051b 00       		.byte	0
 2698 051c 00       		.byte	0
 2699 051d 0F       		.uleb128 0xf
 2700 051e 66030000 		.4byte	.LASF42
 2701 0522 01       		.byte	0x1
 2702 0523 3801     		.2byte	0x138
 2703 0525 00000000 		.4byte	.LFB74
 2704 0529 CC000000 		.4byte	.LFE74-.LFB74
 2705 052d 01       		.uleb128 0x1
 2706 052e 9C       		.byte	0x9c
 2707 052f A0050000 		.4byte	0x5a0
 2708 0533 10       		.uleb128 0x10
 2709 0534 51060000 		.4byte	.LASF38
 2710 0538 01       		.byte	0x1
 2711 0539 3801     		.2byte	0x138
 2712 053b 25000000 		.4byte	0x25
 2713 053f 78030000 		.4byte	.LLST20
 2714 0543 11       		.uleb128 0x11
 2715 0544 49040000 		.4byte	.LASF16
 2716 0548 01       		.byte	0x1
 2717 0549 3B01     		.2byte	0x13b
 2718 054b 76000000 		.4byte	0x76
 2719 054f 9B030000 		.4byte	.LLST21
 2720 0553 08       		.uleb128 0x8
 2721 0554 16000000 		.4byte	.LVL157
 2722 0558 770B0000 		.4byte	0xb77
 2723 055c 08       		.uleb128 0x8
 2724 055d 38000000 		.4byte	.LVL159
 2725 0561 BA020000 		.4byte	0x2ba
 2726 0565 08       		.uleb128 0x8
 2727 0566 52000000 		.4byte	.LVL160
 2728 056a 610B0000 		.4byte	0xb61
 2729 056e 08       		.uleb128 0x8
 2730 056f 56000000 		.4byte	.LVL161
 2731 0573 6C0B0000 		.4byte	0xb6c
 2732 0577 08       		.uleb128 0x8
 2733 0578 5A000000 		.4byte	.LVL162
 2734 057c 400B0000 		.4byte	0xb40
 2735 0580 0D       		.uleb128 0xd
 2736 0581 84000000 		.4byte	.LVL167
 2737 0585 F3010000 		.4byte	0x1f3
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\cc13CBnx.s 			page 57


 2738 0589 0C       		.uleb128 0xc
 2739 058a 01       		.uleb128 0x1
 2740 058b 51       		.byte	0x51
 2741 058c 03       		.uleb128 0x3
 2742 058d F5       		.byte	0xf5
 2743 058e 04       		.uleb128 0x4
 2744 058f 25       		.uleb128 0x25
 2745 0590 0C       		.uleb128 0xc
 2746 0591 01       		.uleb128 0x1
 2747 0592 52       		.byte	0x52
 2748 0593 03       		.uleb128 0x3
 2749 0594 F5       		.byte	0xf5
 2750 0595 07       		.uleb128 0x7
 2751 0596 25       		.uleb128 0x25
 2752 0597 0C       		.uleb128 0xc
 2753 0598 01       		.uleb128 0x1
 2754 0599 53       		.byte	0x53
 2755 059a 03       		.uleb128 0x3
 2756 059b F5       		.byte	0xf5
 2757 059c 08       		.uleb128 0x8
 2758 059d 25       		.uleb128 0x25
 2759 059e 00       		.byte	0
 2760 059f 00       		.byte	0
 2761 05a0 0F       		.uleb128 0xf
 2762 05a1 2C060000 		.4byte	.LASF43
 2763 05a5 01       		.byte	0x1
 2764 05a6 5001     		.2byte	0x150
 2765 05a8 00000000 		.4byte	.LFB75
 2766 05ac C4000000 		.4byte	.LFE75-.LFB75
 2767 05b0 01       		.uleb128 0x1
 2768 05b1 9C       		.byte	0x9c
 2769 05b2 23060000 		.4byte	0x623
 2770 05b6 10       		.uleb128 0x10
 2771 05b7 51060000 		.4byte	.LASF38
 2772 05bb 01       		.byte	0x1
 2773 05bc 5001     		.2byte	0x150
 2774 05be 25000000 		.4byte	0x25
 2775 05c2 AE030000 		.4byte	.LLST22
 2776 05c6 11       		.uleb128 0x11
 2777 05c7 49040000 		.4byte	.LASF16
 2778 05cb 01       		.byte	0x1
 2779 05cc 5101     		.2byte	0x151
 2780 05ce 76000000 		.4byte	0x76
 2781 05d2 D1030000 		.4byte	.LLST23
 2782 05d6 08       		.uleb128 0x8
 2783 05d7 16000000 		.4byte	.LVL171
 2784 05db 770B0000 		.4byte	0xb77
 2785 05df 08       		.uleb128 0x8
 2786 05e0 38000000 		.4byte	.LVL173
 2787 05e4 BA020000 		.4byte	0x2ba
 2788 05e8 08       		.uleb128 0x8
 2789 05e9 4E000000 		.4byte	.LVL174
 2790 05ed 610B0000 		.4byte	0xb61
 2791 05f1 08       		.uleb128 0x8
 2792 05f2 52000000 		.4byte	.LVL175
 2793 05f6 6C0B0000 		.4byte	0xb6c
 2794 05fa 08       		.uleb128 0x8
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\cc13CBnx.s 			page 58


 2795 05fb 56000000 		.4byte	.LVL176
 2796 05ff 400B0000 		.4byte	0xb40
 2797 0603 0D       		.uleb128 0xd
 2798 0604 7E000000 		.4byte	.LVL181
 2799 0608 F3010000 		.4byte	0x1f3
 2800 060c 0C       		.uleb128 0xc
 2801 060d 01       		.uleb128 0x1
 2802 060e 51       		.byte	0x51
 2803 060f 03       		.uleb128 0x3
 2804 0610 F5       		.byte	0xf5
 2805 0611 04       		.uleb128 0x4
 2806 0612 25       		.uleb128 0x25
 2807 0613 0C       		.uleb128 0xc
 2808 0614 01       		.uleb128 0x1
 2809 0615 52       		.byte	0x52
 2810 0616 03       		.uleb128 0x3
 2811 0617 F5       		.byte	0xf5
 2812 0618 07       		.uleb128 0x7
 2813 0619 25       		.uleb128 0x25
 2814 061a 0C       		.uleb128 0xc
 2815 061b 01       		.uleb128 0x1
 2816 061c 53       		.byte	0x53
 2817 061d 03       		.uleb128 0x3
 2818 061e F5       		.byte	0xf5
 2819 061f 08       		.uleb128 0x8
 2820 0620 25       		.uleb128 0x25
 2821 0621 00       		.byte	0
 2822 0622 00       		.byte	0
 2823 0623 0F       		.uleb128 0xf
 2824 0624 06070000 		.4byte	.LASF44
 2825 0628 01       		.byte	0x1
 2826 0629 6901     		.2byte	0x169
 2827 062b 00000000 		.4byte	.LFB76
 2828 062f 78000000 		.4byte	.LFE76-.LFB76
 2829 0633 01       		.uleb128 0x1
 2830 0634 9C       		.byte	0x9c
 2831 0635 B8060000 		.4byte	0x6b8
 2832 0639 10       		.uleb128 0x10
 2833 063a 51060000 		.4byte	.LASF38
 2834 063e 01       		.byte	0x1
 2835 063f 6901     		.2byte	0x169
 2836 0641 76000000 		.4byte	0x76
 2837 0645 E4030000 		.4byte	.LLST24
 2838 0649 10       		.uleb128 0x10
 2839 064a 3B030000 		.4byte	.LASF45
 2840 064e 01       		.byte	0x1
 2841 064f 6901     		.2byte	0x169
 2842 0651 76000000 		.4byte	0x76
 2843 0655 10040000 		.4byte	.LLST25
 2844 0659 11       		.uleb128 0x11
 2845 065a 85000000 		.4byte	.LASF33
 2846 065e 01       		.byte	0x1
 2847 065f 6B01     		.2byte	0x16b
 2848 0661 25000000 		.4byte	0x25
 2849 0665 3C040000 		.4byte	.LLST26
 2850 0669 0B       		.uleb128 0xb
 2851 066a 14000000 		.4byte	.LVL185
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\cc13CBnx.s 			page 59


 2852 066e A0050000 		.4byte	0x5a0
 2853 0672 7E060000 		.4byte	0x67e
 2854 0676 0C       		.uleb128 0xc
 2855 0677 01       		.uleb128 0x1
 2856 0678 50       		.byte	0x50
 2857 0679 03       		.uleb128 0x3
 2858 067a F5       		.byte	0xf5
 2859 067b 08       		.uleb128 0x8
 2860 067c 25       		.uleb128 0x25
 2861 067d 00       		.byte	0
 2862 067e 08       		.uleb128 0x8
 2863 067f 36000000 		.4byte	.LVL191
 2864 0683 DD0A0000 		.4byte	0xadd
 2865 0687 08       		.uleb128 0x8
 2866 0688 4A000000 		.4byte	.LVL194
 2867 068c 28040000 		.4byte	0x428
 2868 0690 0B       		.uleb128 0xb
 2869 0691 50000000 		.4byte	.LVL195
 2870 0695 1D050000 		.4byte	0x51d
 2871 0699 A5060000 		.4byte	0x6a5
 2872 069d 0C       		.uleb128 0xc
 2873 069e 01       		.uleb128 0x1
 2874 069f 50       		.byte	0x50
 2875 06a0 03       		.uleb128 0x3
 2876 06a1 F5       		.byte	0xf5
 2877 06a2 08       		.uleb128 0x8
 2878 06a3 25       		.uleb128 0x25
 2879 06a4 00       		.byte	0
 2880 06a5 08       		.uleb128 0x8
 2881 06a6 58000000 		.4byte	.LVL196
 2882 06aa 830B0000 		.4byte	0xb83
 2883 06ae 08       		.uleb128 0x8
 2884 06af 6C000000 		.4byte	.LVL199
 2885 06b3 38030000 		.4byte	0x338
 2886 06b7 00       		.byte	0
 2887 06b8 0F       		.uleb128 0xf
 2888 06b9 D9050000 		.4byte	.LASF46
 2889 06bd 01       		.byte	0x1
 2890 06be 7501     		.2byte	0x175
 2891 06c0 00000000 		.4byte	.LFB77
 2892 06c4 78000000 		.4byte	.LFE77-.LFB77
 2893 06c8 01       		.uleb128 0x1
 2894 06c9 9C       		.byte	0x9c
 2895 06ca 4D070000 		.4byte	0x74d
 2896 06ce 10       		.uleb128 0x10
 2897 06cf 51060000 		.4byte	.LASF38
 2898 06d3 01       		.byte	0x1
 2899 06d4 7501     		.2byte	0x175
 2900 06d6 76000000 		.4byte	0x76
 2901 06da 64040000 		.4byte	.LLST27
 2902 06de 10       		.uleb128 0x10
 2903 06df 3B030000 		.4byte	.LASF45
 2904 06e3 01       		.byte	0x1
 2905 06e4 7501     		.2byte	0x175
 2906 06e6 76000000 		.4byte	0x76
 2907 06ea 90040000 		.4byte	.LLST28
 2908 06ee 11       		.uleb128 0x11
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\cc13CBnx.s 			page 60


 2909 06ef 85000000 		.4byte	.LASF33
 2910 06f3 01       		.byte	0x1
 2911 06f4 7701     		.2byte	0x177
 2912 06f6 25000000 		.4byte	0x25
 2913 06fa BC040000 		.4byte	.LLST29
 2914 06fe 0B       		.uleb128 0xb
 2915 06ff 14000000 		.4byte	.LVL203
 2916 0703 1D050000 		.4byte	0x51d
 2917 0707 13070000 		.4byte	0x713
 2918 070b 0C       		.uleb128 0xc
 2919 070c 01       		.uleb128 0x1
 2920 070d 50       		.byte	0x50
 2921 070e 03       		.uleb128 0x3
 2922 070f F5       		.byte	0xf5
 2923 0710 08       		.uleb128 0x8
 2924 0711 25       		.uleb128 0x25
 2925 0712 00       		.byte	0
 2926 0713 08       		.uleb128 0x8
 2927 0714 36000000 		.4byte	.LVL209
 2928 0718 DD0A0000 		.4byte	0xadd
 2929 071c 08       		.uleb128 0x8
 2930 071d 4A000000 		.4byte	.LVL212
 2931 0721 28040000 		.4byte	0x428
 2932 0725 0B       		.uleb128 0xb
 2933 0726 50000000 		.4byte	.LVL213
 2934 072a A0050000 		.4byte	0x5a0
 2935 072e 3A070000 		.4byte	0x73a
 2936 0732 0C       		.uleb128 0xc
 2937 0733 01       		.uleb128 0x1
 2938 0734 50       		.byte	0x50
 2939 0735 03       		.uleb128 0x3
 2940 0736 F5       		.byte	0xf5
 2941 0737 08       		.uleb128 0x8
 2942 0738 25       		.uleb128 0x25
 2943 0739 00       		.byte	0
 2944 073a 08       		.uleb128 0x8
 2945 073b 58000000 		.4byte	.LVL214
 2946 073f 830B0000 		.4byte	0xb83
 2947 0743 08       		.uleb128 0x8
 2948 0744 6C000000 		.4byte	.LVL217
 2949 0748 38030000 		.4byte	0x338
 2950 074c 00       		.byte	0
 2951 074d 0F       		.uleb128 0xf
 2952 074e 50040000 		.4byte	.LASF47
 2953 0752 01       		.byte	0x1
 2954 0753 8101     		.2byte	0x181
 2955 0755 00000000 		.4byte	.LFB78
 2956 0759 64000000 		.4byte	.LFE78-.LFB78
 2957 075d 01       		.uleb128 0x1
 2958 075e 9C       		.byte	0x9c
 2959 075f 97070000 		.4byte	0x797
 2960 0763 10       		.uleb128 0x10
 2961 0764 F8040000 		.4byte	.LASF48
 2962 0768 01       		.byte	0x1
 2963 0769 8101     		.2byte	0x181
 2964 076b 97070000 		.4byte	0x797
 2965 076f E4040000 		.4byte	.LLST30
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\cc13CBnx.s 			page 61


 2966 0773 0A       		.uleb128 0xa
 2967 0774 20000000 		.4byte	.LBB3
 2968 0778 44000000 		.4byte	.LBE3-.LBB3
 2969 077c 11       		.uleb128 0x11
 2970 077d D8000000 		.4byte	.LASF49
 2971 0781 01       		.byte	0x1
 2972 0782 8701     		.2byte	0x187
 2973 0784 25000000 		.4byte	0x25
 2974 0788 10050000 		.4byte	.LLST31
 2975 078c 08       		.uleb128 0x8
 2976 078d 52000000 		.4byte	.LVL226
 2977 0791 1D050000 		.4byte	0x51d
 2978 0795 00       		.byte	0
 2979 0796 00       		.byte	0
 2980 0797 13       		.uleb128 0x13
 2981 0798 04       		.byte	0x4
 2982 0799 76000000 		.4byte	0x76
 2983 079d 14       		.uleb128 0x14
 2984 079e AD040000 		.4byte	.LASF50
 2985 07a2 01       		.byte	0x1
 2986 07a3 9001     		.2byte	0x190
 2987 07a5 00000000 		.4byte	.LFB79
 2988 07a9 40000000 		.4byte	.LFE79-.LFB79
 2989 07ad 01       		.uleb128 0x1
 2990 07ae 9C       		.byte	0x9c
 2991 07af 0C080000 		.4byte	0x80c
 2992 07b3 0B       		.uleb128 0xb
 2993 07b4 08000000 		.4byte	.LVL228
 2994 07b8 140B0000 		.4byte	0xb14
 2995 07bc C6070000 		.4byte	0x7c6
 2996 07c0 0C       		.uleb128 0xc
 2997 07c1 01       		.uleb128 0x1
 2998 07c2 50       		.byte	0x50
 2999 07c3 01       		.uleb128 0x1
 3000 07c4 30       		.byte	0x30
 3001 07c5 00       		.byte	0
 3002 07c6 0B       		.uleb128 0xb
 3003 07c7 0E000000 		.4byte	.LVL229
 3004 07cb 2A0B0000 		.4byte	0xb2a
 3005 07cf D9070000 		.4byte	0x7d9
 3006 07d3 0C       		.uleb128 0xc
 3007 07d4 01       		.uleb128 0x1
 3008 07d5 50       		.byte	0x50
 3009 07d6 01       		.uleb128 0x1
 3010 07d7 30       		.byte	0x30
 3011 07d8 00       		.byte	0
 3012 07d9 08       		.uleb128 0x8
 3013 07da 12000000 		.4byte	.LVL230
 3014 07de 8E0B0000 		.4byte	0xb8e
 3015 07e2 0B       		.uleb128 0xb
 3016 07e3 22000000 		.4byte	.LVL231
 3017 07e7 990B0000 		.4byte	0xb99
 3018 07eb F9070000 		.4byte	0x7f9
 3019 07ef 0C       		.uleb128 0xc
 3020 07f0 01       		.uleb128 0x1
 3021 07f1 50       		.byte	0x50
 3022 07f2 05       		.uleb128 0x5
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\cc13CBnx.s 			page 62


 3023 07f3 03       		.byte	0x3
 3024 07f4 00000000 		.4byte	.LC0
 3025 07f8 00       		.byte	0
 3026 07f9 08       		.uleb128 0x8
 3027 07fa 2A000000 		.4byte	.LVL232
 3028 07fe 6C010000 		.4byte	0x16c
 3029 0802 08       		.uleb128 0x8
 3030 0803 2E000000 		.4byte	.LVL233
 3031 0807 A40B0000 		.4byte	0xba4
 3032 080b 00       		.byte	0
 3033 080c 14       		.uleb128 0x14
 3034 080d 94000000 		.4byte	.LASF51
 3035 0811 01       		.byte	0x1
 3036 0812 9C01     		.2byte	0x19c
 3037 0814 00000000 		.4byte	.LFB80
 3038 0818 40000000 		.4byte	.LFE80-.LFB80
 3039 081c 01       		.uleb128 0x1
 3040 081d 9C       		.byte	0x9c
 3041 081e 7B080000 		.4byte	0x87b
 3042 0822 0B       		.uleb128 0xb
 3043 0823 08000000 		.4byte	.LVL234
 3044 0827 1F0B0000 		.4byte	0xb1f
 3045 082b 35080000 		.4byte	0x835
 3046 082f 0C       		.uleb128 0xc
 3047 0830 01       		.uleb128 0x1
 3048 0831 50       		.byte	0x50
 3049 0832 01       		.uleb128 0x1
 3050 0833 30       		.byte	0x30
 3051 0834 00       		.byte	0
 3052 0835 0B       		.uleb128 0xb
 3053 0836 0E000000 		.4byte	.LVL235
 3054 083a 350B0000 		.4byte	0xb35
 3055 083e 48080000 		.4byte	0x848
 3056 0842 0C       		.uleb128 0xc
 3057 0843 01       		.uleb128 0x1
 3058 0844 50       		.byte	0x50
 3059 0845 01       		.uleb128 0x1
 3060 0846 30       		.byte	0x30
 3061 0847 00       		.byte	0
 3062 0848 08       		.uleb128 0x8
 3063 0849 12000000 		.4byte	.LVL236
 3064 084d AF0B0000 		.4byte	0xbaf
 3065 0851 0B       		.uleb128 0xb
 3066 0852 22000000 		.4byte	.LVL237
 3067 0856 990B0000 		.4byte	0xb99
 3068 085a 68080000 		.4byte	0x868
 3069 085e 0C       		.uleb128 0xc
 3070 085f 01       		.uleb128 0x1
 3071 0860 50       		.byte	0x50
 3072 0861 05       		.uleb128 0x5
 3073 0862 03       		.byte	0x3
 3074 0863 18000000 		.4byte	.LC1
 3075 0867 00       		.byte	0
 3076 0868 08       		.uleb128 0x8
 3077 0869 2A000000 		.4byte	.LVL238
 3078 086d 6C010000 		.4byte	0x16c
 3079 0871 08       		.uleb128 0x8
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\cc13CBnx.s 			page 63


 3080 0872 2E000000 		.4byte	.LVL239
 3081 0876 BA0B0000 		.4byte	0xbba
 3082 087a 00       		.byte	0
 3083 087b 14       		.uleb128 0x14
 3084 087c 4A050000 		.4byte	.LASF52
 3085 0880 01       		.byte	0x1
 3086 0881 A801     		.2byte	0x1a8
 3087 0883 00000000 		.4byte	.LFB81
 3088 0887 10000000 		.4byte	.LFE81-.LFB81
 3089 088b 01       		.uleb128 0x1
 3090 088c 9C       		.byte	0x9c
 3091 088d D5080000 		.4byte	0x8d5
 3092 0891 10       		.uleb128 0x10
 3093 0892 E0000000 		.4byte	.LASF53
 3094 0896 01       		.byte	0x1
 3095 0897 A801     		.2byte	0x1a8
 3096 0899 76000000 		.4byte	0x76
 3097 089d 23050000 		.4byte	.LLST32
 3098 08a1 10       		.uleb128 0x10
 3099 08a2 14000000 		.4byte	.LASF54
 3100 08a6 01       		.byte	0x1
 3101 08a7 A801     		.2byte	0x1a8
 3102 08a9 76000000 		.4byte	0x76
 3103 08ad 44050000 		.4byte	.LLST33
 3104 08b1 10       		.uleb128 0x10
 3105 08b2 3F060000 		.4byte	.LASF55
 3106 08b6 01       		.byte	0x1
 3107 08b7 A801     		.2byte	0x1a8
 3108 08b9 76000000 		.4byte	0x76
 3109 08bd 65050000 		.4byte	.LLST34
 3110 08c1 0D       		.uleb128 0xd
 3111 08c2 08000000 		.4byte	.LVL242
 3112 08c6 990B0000 		.4byte	0xb99
 3113 08ca 0C       		.uleb128 0xc
 3114 08cb 01       		.uleb128 0x1
 3115 08cc 50       		.byte	0x50
 3116 08cd 05       		.uleb128 0x5
 3117 08ce 03       		.byte	0x3
 3118 08cf 30000000 		.4byte	.LC2
 3119 08d3 00       		.byte	0
 3120 08d4 00       		.byte	0
 3121 08d5 15       		.uleb128 0x15
 3122 08d6 68000000 		.4byte	.LASF98
 3123 08da 01       		.byte	0x1
 3124 08db AE01     		.2byte	0x1ae
 3125 08dd 00000000 		.4byte	.LFB82
 3126 08e1 4C000000 		.4byte	.LFE82-.LFB82
 3127 08e5 01       		.uleb128 0x1
 3128 08e6 9C       		.byte	0x9c
 3129 08e7 3E090000 		.4byte	0x93e
 3130 08eb 11       		.uleb128 0x11
 3131 08ec 45060000 		.4byte	.LASF56
 3132 08f0 01       		.byte	0x1
 3133 08f1 B301     		.2byte	0x1b3
 3134 08f3 76000000 		.4byte	0x76
 3135 08f7 86050000 		.4byte	.LLST35
 3136 08fb 16       		.uleb128 0x16
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\cc13CBnx.s 			page 64


 3137 08fc 61627300 		.ascii	"abs\000"
 3138 0900 0E       		.byte	0xe
 3139 0901 00       		.byte	0
 3140 0902 76000000 		.4byte	0x76
 3141 0906 0C090000 		.4byte	0x90c
 3142 090a 17       		.uleb128 0x17
 3143 090b 00       		.byte	0
 3144 090c 0B       		.uleb128 0xb
 3145 090d 0C000000 		.4byte	.LVL243
 3146 0911 7B080000 		.4byte	0x87b
 3147 0915 2B090000 		.4byte	0x92b
 3148 0919 0C       		.uleb128 0xc
 3149 091a 01       		.uleb128 0x1
 3150 091b 50       		.byte	0x50
 3151 091c 02       		.uleb128 0x2
 3152 091d 08       		.byte	0x8
 3153 091e 3C       		.byte	0x3c
 3154 091f 0C       		.uleb128 0xc
 3155 0920 01       		.uleb128 0x1
 3156 0921 51       		.byte	0x51
 3157 0922 01       		.uleb128 0x1
 3158 0923 44       		.byte	0x44
 3159 0924 0C       		.uleb128 0xc
 3160 0925 01       		.uleb128 0x1
 3161 0926 52       		.byte	0x52
 3162 0927 02       		.uleb128 0x2
 3163 0928 08       		.byte	0x8
 3164 0929 B4       		.byte	0xb4
 3165 092a 00       		.byte	0
 3166 092b 08       		.uleb128 0x8
 3167 092c 10000000 		.4byte	.LVL244
 3168 0930 C50B0000 		.4byte	0xbc5
 3169 0934 08       		.uleb128 0x8
 3170 0935 22000000 		.4byte	.LVL247
 3171 0939 D00B0000 		.4byte	0xbd0
 3172 093d 00       		.byte	0
 3173 093e 18       		.uleb128 0x18
 3174 093f 58060000 		.4byte	.LASF57
 3175 0943 04       		.byte	0x4
 3176 0944 1207     		.2byte	0x712
 3177 0946 4A090000 		.4byte	0x94a
 3178 094a 19       		.uleb128 0x19
 3179 094b 84000000 		.4byte	0x84
 3180 094f 1A       		.uleb128 0x1a
 3181 0950 99040000 		.4byte	.LASF58
 3182 0954 05       		.byte	0x5
 3183 0955 6F       		.byte	0x6f
 3184 0956 76000000 		.4byte	0x76
 3185 095a 05       		.uleb128 0x5
 3186 095b 03       		.byte	0x3
 3187 095c 00000000 		.4byte	driveStraightEnable
 3188 0960 1A       		.uleb128 0x1a
 3189 0961 04030000 		.4byte	.LASF59
 3190 0965 05       		.byte	0x5
 3191 0966 70       		.byte	0x70
 3192 0967 76000000 		.4byte	0x76
 3193 096b 05       		.uleb128 0x5
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\cc13CBnx.s 			page 65


 3194 096c 03       		.byte	0x3
 3195 096d 00000000 		.4byte	currentPuckRackScanningIndex
 3196 0971 1B       		.uleb128 0x1b
 3197 0972 76000000 		.4byte	0x76
 3198 0976 81090000 		.4byte	0x981
 3199 097a 1C       		.uleb128 0x1c
 3200 097b 9D000000 		.4byte	0x9d
 3201 097f 04       		.byte	0x4
 3202 0980 00       		.byte	0
 3203 0981 1A       		.uleb128 0x1a
 3204 0982 0C060000 		.4byte	.LASF60
 3205 0986 05       		.byte	0x5
 3206 0987 71       		.byte	0x71
 3207 0988 71090000 		.4byte	0x971
 3208 098c 05       		.uleb128 0x5
 3209 098d 03       		.byte	0x3
 3210 098e 00000000 		.4byte	puckRackColours
 3211 0992 1A       		.uleb128 0x1a
 3212 0993 FF000000 		.4byte	.LASF61
 3213 0997 05       		.byte	0x5
 3214 0998 72       		.byte	0x72
 3215 0999 71090000 		.4byte	0x971
 3216 099d 05       		.uleb128 0x5
 3217 099e 03       		.byte	0x3
 3218 099f 00000000 		.4byte	puckRackOffsetsFromWest
 3219 09a3 1A       		.uleb128 0x1a
 3220 09a4 7D040000 		.4byte	.LASF62
 3221 09a8 05       		.byte	0x5
 3222 09a9 73       		.byte	0x73
 3223 09aa 76000000 		.4byte	0x76
 3224 09ae 05       		.uleb128 0x5
 3225 09af 03       		.byte	0x3
 3226 09b0 00000000 		.4byte	sweeping
 3227 09b4 1B       		.uleb128 0x1b
 3228 09b5 25000000 		.4byte	0x25
 3229 09b9 C4090000 		.4byte	0x9c4
 3230 09bd 1C       		.uleb128 0x1c
 3231 09be 9D000000 		.4byte	0x9d
 3232 09c2 03       		.byte	0x3
 3233 09c3 00       		.byte	0
 3234 09c4 1A       		.uleb128 0x1a
 3235 09c5 E4030000 		.4byte	.LASF63
 3236 09c9 05       		.byte	0x5
 3237 09ca 74       		.byte	0x74
 3238 09cb B4090000 		.4byte	0x9b4
 3239 09cf 05       		.uleb128 0x5
 3240 09d0 03       		.byte	0x3
 3241 09d1 00000000 		.4byte	block_edge_location
 3242 09d5 1A       		.uleb128 0x1a
 3243 09d6 19070000 		.4byte	.LASF64
 3244 09da 05       		.byte	0x5
 3245 09db 76       		.byte	0x76
 3246 09dc 76000000 		.4byte	0x76
 3247 09e0 05       		.uleb128 0x5
 3248 09e1 03       		.byte	0x3
 3249 09e2 00000000 		.4byte	initialisation
 3250 09e6 1B       		.uleb128 0x1b
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\cc13CBnx.s 			page 66


 3251 09e7 25000000 		.4byte	0x25
 3252 09eb F6090000 		.4byte	0x9f6
 3253 09ef 1C       		.uleb128 0x1c
 3254 09f0 9D000000 		.4byte	0x9d
 3255 09f4 04       		.byte	0x4
 3256 09f5 00       		.byte	0
 3257 09f6 1D       		.uleb128 0x1d
 3258 09f7 21020000 		.4byte	.LASF65
 3259 09fb 05       		.byte	0x5
 3260 09fc 6E       		.byte	0x6e
 3261 09fd E6090000 		.4byte	0x9e6
 3262 0a01 1A       		.uleb128 0x1a
 3263 0a02 F3020000 		.4byte	.LASF66
 3264 0a06 05       		.byte	0x5
 3265 0a07 75       		.byte	0x75
 3266 0a08 25000000 		.4byte	0x25
 3267 0a0c 05       		.uleb128 0x5
 3268 0a0d 03       		.byte	0x3
 3269 0a0e 00000000 		.4byte	puckPileLocation
 3270 0a12 1B       		.uleb128 0x1b
 3271 0a13 25000000 		.4byte	0x25
 3272 0a17 220A0000 		.4byte	0xa22
 3273 0a1b 1C       		.uleb128 0x1c
 3274 0a1c 9D000000 		.4byte	0x9d
 3275 0a20 01       		.byte	0x1
 3276 0a21 00       		.byte	0
 3277 0a22 1D       		.uleb128 0x1d
 3278 0a23 A8000000 		.4byte	.LASF67
 3279 0a27 01       		.byte	0x1
 3280 0a28 18       		.byte	0x18
 3281 0a29 120A0000 		.4byte	0xa12
 3282 0a2d 1D       		.uleb128 0x1d
 3283 0a2e F3060000 		.4byte	.LASF68
 3284 0a32 01       		.byte	0x1
 3285 0a33 1A       		.byte	0x1a
 3286 0a34 76000000 		.4byte	0x76
 3287 0a38 1D       		.uleb128 0x1d
 3288 0a39 B7010000 		.4byte	.LASF69
 3289 0a3d 01       		.byte	0x1
 3290 0a3e 1C       		.byte	0x1c
 3291 0a3f 41000000 		.4byte	0x41
 3292 0a43 1D       		.uleb128 0x1d
 3293 0a44 E7050000 		.4byte	.LASF70
 3294 0a48 01       		.byte	0x1
 3295 0a49 1D       		.byte	0x1d
 3296 0a4a 41000000 		.4byte	0x41
 3297 0a4e 1D       		.uleb128 0x1d
 3298 0a4f 08050000 		.4byte	.LASF28
 3299 0a53 01       		.byte	0x1
 3300 0a54 1E       		.byte	0x1e
 3301 0a55 76000000 		.4byte	0x76
 3302 0a59 1D       		.uleb128 0x1d
 3303 0a5a 8B040000 		.4byte	.LASF29
 3304 0a5e 01       		.byte	0x1
 3305 0a5f 1F       		.byte	0x1f
 3306 0a60 76000000 		.4byte	0x76
 3307 0a64 1D       		.uleb128 0x1d
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\cc13CBnx.s 			page 67


 3308 0a65 13070000 		.4byte	.LASF30
 3309 0a69 01       		.byte	0x1
 3310 0a6a 20       		.byte	0x20
 3311 0a6b 76000000 		.4byte	0x76
 3312 0a6f 1D       		.uleb128 0x1d
 3313 0a70 4B060000 		.4byte	.LASF31
 3314 0a74 01       		.byte	0x1
 3315 0a75 21       		.byte	0x21
 3316 0a76 76000000 		.4byte	0x76
 3317 0a7a 1D       		.uleb128 0x1d
 3318 0a7b EB000000 		.4byte	.LASF71
 3319 0a7f 01       		.byte	0x1
 3320 0a80 22       		.byte	0x22
 3321 0a81 76000000 		.4byte	0x76
 3322 0a85 1D       		.uleb128 0x1d
 3323 0a86 00000000 		.4byte	.LASF72
 3324 0a8a 01       		.byte	0x1
 3325 0a8b 23       		.byte	0x23
 3326 0a8c 76000000 		.4byte	0x76
 3327 0a90 1D       		.uleb128 0x1d
 3328 0a91 C4010000 		.4byte	.LASF73
 3329 0a95 01       		.byte	0x1
 3330 0a96 27       		.byte	0x27
 3331 0a97 B4090000 		.4byte	0x9b4
 3332 0a9b 1D       		.uleb128 0x1d
 3333 0a9c B8000000 		.4byte	.LASF17
 3334 0aa0 01       		.byte	0x1
 3335 0aa1 2E       		.byte	0x2e
 3336 0aa2 76000000 		.4byte	0x76
 3337 0aa6 1D       		.uleb128 0x1d
 3338 0aa7 DF020000 		.4byte	.LASF18
 3339 0aab 01       		.byte	0x1
 3340 0aac 2F       		.byte	0x2f
 3341 0aad 76000000 		.4byte	0x76
 3342 0ab1 1D       		.uleb128 0x1d
 3343 0ab2 75000000 		.4byte	.LASF21
 3344 0ab6 01       		.byte	0x1
 3345 0ab7 30       		.byte	0x30
 3346 0ab8 76000000 		.4byte	0x76
 3347 0abc 1D       		.uleb128 0x1d
 3348 0abd DF010000 		.4byte	.LASF22
 3349 0ac1 01       		.byte	0x1
 3350 0ac2 31       		.byte	0x31
 3351 0ac3 76000000 		.4byte	0x76
 3352 0ac7 1D       		.uleb128 0x1d
 3353 0ac8 1C060000 		.4byte	.LASF74
 3354 0acc 01       		.byte	0x1
 3355 0acd 34       		.byte	0x34
 3356 0ace 41000000 		.4byte	0x41
 3357 0ad2 1E       		.uleb128 0x1e
 3358 0ad3 636F7300 		.ascii	"cos\000"
 3359 0ad7 636F7300 		.ascii	"cos\000"
 3360 0adb 06       		.byte	0x6
 3361 0adc 6E       		.byte	0x6e
 3362 0add 1E       		.uleb128 0x1e
 3363 0ade 73696E00 		.ascii	"sin\000"
 3364 0ae2 73696E00 		.ascii	"sin\000"
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\cc13CBnx.s 			page 68


 3365 0ae6 06       		.byte	0x6
 3366 0ae7 6F       		.byte	0x6f
 3367 0ae8 1F       		.uleb128 0x1f
 3368 0ae9 40070000 		.4byte	.LASF75
 3369 0aed 40070000 		.4byte	.LASF75
 3370 0af1 07       		.byte	0x7
 3371 0af2 5D       		.byte	0x5d
 3372 0af3 1F       		.uleb128 0x1f
 3373 0af4 26040000 		.4byte	.LASF76
 3374 0af8 26040000 		.4byte	.LASF76
 3375 0afc 08       		.byte	0x8
 3376 0afd 5D       		.byte	0x5d
 3377 0afe 1F       		.uleb128 0x1f
 3378 0aff 93010000 		.4byte	.LASF77
 3379 0b03 93010000 		.4byte	.LASF77
 3380 0b07 07       		.byte	0x7
 3381 0b08 5A       		.byte	0x5a
 3382 0b09 1F       		.uleb128 0x1f
 3383 0b0a 57050000 		.4byte	.LASF78
 3384 0b0e 57050000 		.4byte	.LASF78
 3385 0b12 08       		.byte	0x8
 3386 0b13 5A       		.byte	0x5a
 3387 0b14 1F       		.uleb128 0x1f
 3388 0b15 59010000 		.4byte	.LASF79
 3389 0b19 59010000 		.4byte	.LASF79
 3390 0b1d 09       		.byte	0x9
 3391 0b1e C7       		.byte	0xc7
 3392 0b1f 1F       		.uleb128 0x1f
 3393 0b20 44020000 		.4byte	.LASF80
 3394 0b24 44020000 		.4byte	.LASF80
 3395 0b28 0A       		.byte	0xa
 3396 0b29 C7       		.byte	0xc7
 3397 0b2a 1F       		.uleb128 0x1f
 3398 0b2b 76010000 		.4byte	.LASF81
 3399 0b2f 76010000 		.4byte	.LASF81
 3400 0b33 09       		.byte	0x9
 3401 0b34 CA       		.byte	0xca
 3402 0b35 1F       		.uleb128 0x1f
 3403 0b36 61020000 		.4byte	.LASF82
 3404 0b3a 61020000 		.4byte	.LASF82
 3405 0b3e 0A       		.byte	0xa
 3406 0b3f CA       		.byte	0xca
 3407 0b40 1F       		.uleb128 0x1f
 3408 0b41 28070000 		.4byte	.LASF83
 3409 0b45 28070000 		.4byte	.LASF83
 3410 0b49 0B       		.byte	0xb
 3411 0b4a 5A       		.byte	0x5a
 3412 0b4b 1F       		.uleb128 0x1f
 3413 0b4c 43030000 		.4byte	.LASF84
 3414 0b50 43030000 		.4byte	.LASF84
 3415 0b54 07       		.byte	0x7
 3416 0b55 5F       		.byte	0x5f
 3417 0b56 1F       		.uleb128 0x1f
 3418 0b57 45000000 		.4byte	.LASF85
 3419 0b5b 45000000 		.4byte	.LASF85
 3420 0b5f 08       		.byte	0x8
 3421 0b60 5F       		.byte	0x5f
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\cc13CBnx.s 			page 69


 3422 0b61 1F       		.uleb128 0x1f
 3423 0b62 1D010000 		.4byte	.LASF86
 3424 0b66 1D010000 		.4byte	.LASF86
 3425 0b6a 07       		.byte	0x7
 3426 0b6b 4F       		.byte	0x4f
 3427 0b6c 1F       		.uleb128 0x1f
 3428 0b6d F6010000 		.4byte	.LASF87
 3429 0b71 F6010000 		.4byte	.LASF87
 3430 0b75 08       		.byte	0x8
 3431 0b76 4F       		.byte	0x4f
 3432 0b77 20       		.uleb128 0x20
 3433 0b78 17010000 		.4byte	.LASF88
 3434 0b7c 17010000 		.4byte	.LASF88
 3435 0b80 06       		.byte	0x6
 3436 0b81 4B01     		.2byte	0x14b
 3437 0b83 1E       		.uleb128 0x1e
 3438 0b84 74616E00 		.ascii	"tan\000"
 3439 0b88 74616E00 		.ascii	"tan\000"
 3440 0b8c 06       		.byte	0x6
 3441 0b8d 70       		.byte	0x70
 3442 0b8e 1F       		.uleb128 0x1f
 3443 0b8f 7B050000 		.4byte	.LASF89
 3444 0b93 7B050000 		.4byte	.LASF89
 3445 0b97 07       		.byte	0x7
 3446 0b98 50       		.byte	0x50
 3447 0b99 1F       		.uleb128 0x1f
 3448 0b9a 9E050000 		.4byte	.LASF90
 3449 0b9e 9E050000 		.4byte	.LASF90
 3450 0ba2 0C       		.byte	0xc
 3451 0ba3 8B       		.byte	0x8b
 3452 0ba4 1F       		.uleb128 0x1f
 3453 0ba5 20050000 		.4byte	.LASF91
 3454 0ba9 20050000 		.4byte	.LASF91
 3455 0bad 07       		.byte	0x7
 3456 0bae 52       		.byte	0x52
 3457 0baf 1F       		.uleb128 0x1f
 3458 0bb0 DC040000 		.4byte	.LASF92
 3459 0bb4 DC040000 		.4byte	.LASF92
 3460 0bb8 08       		.byte	0x8
 3461 0bb9 50       		.byte	0x50
 3462 0bba 1F       		.uleb128 0x1f
 3463 0bbb AF050000 		.4byte	.LASF93
 3464 0bbf AF050000 		.4byte	.LASF93
 3465 0bc3 08       		.byte	0x8
 3466 0bc4 52       		.byte	0x52
 3467 0bc5 1F       		.uleb128 0x1f
 3468 0bc6 13020000 		.4byte	.LASF94
 3469 0bca 13020000 		.4byte	.LASF94
 3470 0bce 0D       		.byte	0xd
 3471 0bcf 14       		.byte	0x14
 3472 0bd0 1E       		.uleb128 0x1e
 3473 0bd1 61627300 		.ascii	"abs\000"
 3474 0bd5 61627300 		.ascii	"abs\000"
 3475 0bd9 0E       		.byte	0xe
 3476 0bda 00       		.byte	0
 3477 0bdb 00       		.byte	0
 3478              		.section	.debug_abbrev,"",%progbits
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\cc13CBnx.s 			page 70


 3479              	.Ldebug_abbrev0:
 3480 0000 01       		.uleb128 0x1
 3481 0001 11       		.uleb128 0x11
 3482 0002 01       		.byte	0x1
 3483 0003 25       		.uleb128 0x25
 3484 0004 0E       		.uleb128 0xe
 3485 0005 13       		.uleb128 0x13
 3486 0006 0B       		.uleb128 0xb
 3487 0007 03       		.uleb128 0x3
 3488 0008 0E       		.uleb128 0xe
 3489 0009 1B       		.uleb128 0x1b
 3490 000a 0E       		.uleb128 0xe
 3491 000b 55       		.uleb128 0x55
 3492 000c 17       		.uleb128 0x17
 3493 000d 11       		.uleb128 0x11
 3494 000e 01       		.uleb128 0x1
 3495 000f 10       		.uleb128 0x10
 3496 0010 17       		.uleb128 0x17
 3497 0011 00       		.byte	0
 3498 0012 00       		.byte	0
 3499 0013 02       		.uleb128 0x2
 3500 0014 24       		.uleb128 0x24
 3501 0015 00       		.byte	0
 3502 0016 0B       		.uleb128 0xb
 3503 0017 0B       		.uleb128 0xb
 3504 0018 3E       		.uleb128 0x3e
 3505 0019 0B       		.uleb128 0xb
 3506 001a 03       		.uleb128 0x3
 3507 001b 0E       		.uleb128 0xe
 3508 001c 00       		.byte	0
 3509 001d 00       		.byte	0
 3510 001e 03       		.uleb128 0x3
 3511 001f 16       		.uleb128 0x16
 3512 0020 00       		.byte	0
 3513 0021 03       		.uleb128 0x3
 3514 0022 0E       		.uleb128 0xe
 3515 0023 3A       		.uleb128 0x3a
 3516 0024 0B       		.uleb128 0xb
 3517 0025 3B       		.uleb128 0x3b
 3518 0026 0B       		.uleb128 0xb
 3519 0027 49       		.uleb128 0x49
 3520 0028 13       		.uleb128 0x13
 3521 0029 00       		.byte	0
 3522 002a 00       		.byte	0
 3523 002b 04       		.uleb128 0x4
 3524 002c 24       		.uleb128 0x24
 3525 002d 00       		.byte	0
 3526 002e 0B       		.uleb128 0xb
 3527 002f 0B       		.uleb128 0xb
 3528 0030 3E       		.uleb128 0x3e
 3529 0031 0B       		.uleb128 0xb
 3530 0032 03       		.uleb128 0x3
 3531 0033 08       		.uleb128 0x8
 3532 0034 00       		.byte	0
 3533 0035 00       		.byte	0
 3534 0036 05       		.uleb128 0x5
 3535 0037 2E       		.uleb128 0x2e
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\cc13CBnx.s 			page 71


 3536 0038 01       		.byte	0x1
 3537 0039 3F       		.uleb128 0x3f
 3538 003a 19       		.uleb128 0x19
 3539 003b 03       		.uleb128 0x3
 3540 003c 0E       		.uleb128 0xe
 3541 003d 3A       		.uleb128 0x3a
 3542 003e 0B       		.uleb128 0xb
 3543 003f 3B       		.uleb128 0x3b
 3544 0040 0B       		.uleb128 0xb
 3545 0041 27       		.uleb128 0x27
 3546 0042 19       		.uleb128 0x19
 3547 0043 11       		.uleb128 0x11
 3548 0044 01       		.uleb128 0x1
 3549 0045 12       		.uleb128 0x12
 3550 0046 06       		.uleb128 0x6
 3551 0047 40       		.uleb128 0x40
 3552 0048 18       		.uleb128 0x18
 3553 0049 9642     		.uleb128 0x2116
 3554 004b 19       		.uleb128 0x19
 3555 004c 01       		.uleb128 0x1
 3556 004d 13       		.uleb128 0x13
 3557 004e 00       		.byte	0
 3558 004f 00       		.byte	0
 3559 0050 06       		.uleb128 0x6
 3560 0051 05       		.uleb128 0x5
 3561 0052 00       		.byte	0
 3562 0053 03       		.uleb128 0x3
 3563 0054 0E       		.uleb128 0xe
 3564 0055 3A       		.uleb128 0x3a
 3565 0056 0B       		.uleb128 0xb
 3566 0057 3B       		.uleb128 0x3b
 3567 0058 0B       		.uleb128 0xb
 3568 0059 49       		.uleb128 0x49
 3569 005a 13       		.uleb128 0x13
 3570 005b 02       		.uleb128 0x2
 3571 005c 17       		.uleb128 0x17
 3572 005d 00       		.byte	0
 3573 005e 00       		.byte	0
 3574 005f 07       		.uleb128 0x7
 3575 0060 34       		.uleb128 0x34
 3576 0061 00       		.byte	0
 3577 0062 03       		.uleb128 0x3
 3578 0063 0E       		.uleb128 0xe
 3579 0064 3A       		.uleb128 0x3a
 3580 0065 0B       		.uleb128 0xb
 3581 0066 3B       		.uleb128 0x3b
 3582 0067 0B       		.uleb128 0xb
 3583 0068 49       		.uleb128 0x49
 3584 0069 13       		.uleb128 0x13
 3585 006a 02       		.uleb128 0x2
 3586 006b 17       		.uleb128 0x17
 3587 006c 00       		.byte	0
 3588 006d 00       		.byte	0
 3589 006e 08       		.uleb128 0x8
 3590 006f 898201   		.uleb128 0x4109
 3591 0072 00       		.byte	0
 3592 0073 11       		.uleb128 0x11
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\cc13CBnx.s 			page 72


 3593 0074 01       		.uleb128 0x1
 3594 0075 31       		.uleb128 0x31
 3595 0076 13       		.uleb128 0x13
 3596 0077 00       		.byte	0
 3597 0078 00       		.byte	0
 3598 0079 09       		.uleb128 0x9
 3599 007a 2E       		.uleb128 0x2e
 3600 007b 01       		.byte	0x1
 3601 007c 3F       		.uleb128 0x3f
 3602 007d 19       		.uleb128 0x19
 3603 007e 03       		.uleb128 0x3
 3604 007f 0E       		.uleb128 0xe
 3605 0080 3A       		.uleb128 0x3a
 3606 0081 0B       		.uleb128 0xb
 3607 0082 3B       		.uleb128 0x3b
 3608 0083 0B       		.uleb128 0xb
 3609 0084 27       		.uleb128 0x27
 3610 0085 19       		.uleb128 0x19
 3611 0086 11       		.uleb128 0x11
 3612 0087 01       		.uleb128 0x1
 3613 0088 12       		.uleb128 0x12
 3614 0089 06       		.uleb128 0x6
 3615 008a 40       		.uleb128 0x40
 3616 008b 18       		.uleb128 0x18
 3617 008c 9742     		.uleb128 0x2117
 3618 008e 19       		.uleb128 0x19
 3619 008f 01       		.uleb128 0x1
 3620 0090 13       		.uleb128 0x13
 3621 0091 00       		.byte	0
 3622 0092 00       		.byte	0
 3623 0093 0A       		.uleb128 0xa
 3624 0094 0B       		.uleb128 0xb
 3625 0095 01       		.byte	0x1
 3626 0096 11       		.uleb128 0x11
 3627 0097 01       		.uleb128 0x1
 3628 0098 12       		.uleb128 0x12
 3629 0099 06       		.uleb128 0x6
 3630 009a 00       		.byte	0
 3631 009b 00       		.byte	0
 3632 009c 0B       		.uleb128 0xb
 3633 009d 898201   		.uleb128 0x4109
 3634 00a0 01       		.byte	0x1
 3635 00a1 11       		.uleb128 0x11
 3636 00a2 01       		.uleb128 0x1
 3637 00a3 31       		.uleb128 0x31
 3638 00a4 13       		.uleb128 0x13
 3639 00a5 01       		.uleb128 0x1
 3640 00a6 13       		.uleb128 0x13
 3641 00a7 00       		.byte	0
 3642 00a8 00       		.byte	0
 3643 00a9 0C       		.uleb128 0xc
 3644 00aa 8A8201   		.uleb128 0x410a
 3645 00ad 00       		.byte	0
 3646 00ae 02       		.uleb128 0x2
 3647 00af 18       		.uleb128 0x18
 3648 00b0 9142     		.uleb128 0x2111
 3649 00b2 18       		.uleb128 0x18
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\cc13CBnx.s 			page 73


 3650 00b3 00       		.byte	0
 3651 00b4 00       		.byte	0
 3652 00b5 0D       		.uleb128 0xd
 3653 00b6 898201   		.uleb128 0x4109
 3654 00b9 01       		.byte	0x1
 3655 00ba 11       		.uleb128 0x11
 3656 00bb 01       		.uleb128 0x1
 3657 00bc 31       		.uleb128 0x31
 3658 00bd 13       		.uleb128 0x13
 3659 00be 00       		.byte	0
 3660 00bf 00       		.byte	0
 3661 00c0 0E       		.uleb128 0xe
 3662 00c1 34       		.uleb128 0x34
 3663 00c2 00       		.byte	0
 3664 00c3 03       		.uleb128 0x3
 3665 00c4 0E       		.uleb128 0xe
 3666 00c5 3A       		.uleb128 0x3a
 3667 00c6 0B       		.uleb128 0xb
 3668 00c7 3B       		.uleb128 0x3b
 3669 00c8 0B       		.uleb128 0xb
 3670 00c9 49       		.uleb128 0x49
 3671 00ca 13       		.uleb128 0x13
 3672 00cb 1C       		.uleb128 0x1c
 3673 00cc 05       		.uleb128 0x5
 3674 00cd 00       		.byte	0
 3675 00ce 00       		.byte	0
 3676 00cf 0F       		.uleb128 0xf
 3677 00d0 2E       		.uleb128 0x2e
 3678 00d1 01       		.byte	0x1
 3679 00d2 3F       		.uleb128 0x3f
 3680 00d3 19       		.uleb128 0x19
 3681 00d4 03       		.uleb128 0x3
 3682 00d5 0E       		.uleb128 0xe
 3683 00d6 3A       		.uleb128 0x3a
 3684 00d7 0B       		.uleb128 0xb
 3685 00d8 3B       		.uleb128 0x3b
 3686 00d9 05       		.uleb128 0x5
 3687 00da 27       		.uleb128 0x27
 3688 00db 19       		.uleb128 0x19
 3689 00dc 11       		.uleb128 0x11
 3690 00dd 01       		.uleb128 0x1
 3691 00de 12       		.uleb128 0x12
 3692 00df 06       		.uleb128 0x6
 3693 00e0 40       		.uleb128 0x40
 3694 00e1 18       		.uleb128 0x18
 3695 00e2 9642     		.uleb128 0x2116
 3696 00e4 19       		.uleb128 0x19
 3697 00e5 01       		.uleb128 0x1
 3698 00e6 13       		.uleb128 0x13
 3699 00e7 00       		.byte	0
 3700 00e8 00       		.byte	0
 3701 00e9 10       		.uleb128 0x10
 3702 00ea 05       		.uleb128 0x5
 3703 00eb 00       		.byte	0
 3704 00ec 03       		.uleb128 0x3
 3705 00ed 0E       		.uleb128 0xe
 3706 00ee 3A       		.uleb128 0x3a
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\cc13CBnx.s 			page 74


 3707 00ef 0B       		.uleb128 0xb
 3708 00f0 3B       		.uleb128 0x3b
 3709 00f1 05       		.uleb128 0x5
 3710 00f2 49       		.uleb128 0x49
 3711 00f3 13       		.uleb128 0x13
 3712 00f4 02       		.uleb128 0x2
 3713 00f5 17       		.uleb128 0x17
 3714 00f6 00       		.byte	0
 3715 00f7 00       		.byte	0
 3716 00f8 11       		.uleb128 0x11
 3717 00f9 34       		.uleb128 0x34
 3718 00fa 00       		.byte	0
 3719 00fb 03       		.uleb128 0x3
 3720 00fc 0E       		.uleb128 0xe
 3721 00fd 3A       		.uleb128 0x3a
 3722 00fe 0B       		.uleb128 0xb
 3723 00ff 3B       		.uleb128 0x3b
 3724 0100 05       		.uleb128 0x5
 3725 0101 49       		.uleb128 0x49
 3726 0102 13       		.uleb128 0x13
 3727 0103 02       		.uleb128 0x2
 3728 0104 17       		.uleb128 0x17
 3729 0105 00       		.byte	0
 3730 0106 00       		.byte	0
 3731 0107 12       		.uleb128 0x12
 3732 0108 34       		.uleb128 0x34
 3733 0109 00       		.byte	0
 3734 010a 03       		.uleb128 0x3
 3735 010b 0E       		.uleb128 0xe
 3736 010c 3A       		.uleb128 0x3a
 3737 010d 0B       		.uleb128 0xb
 3738 010e 3B       		.uleb128 0x3b
 3739 010f 05       		.uleb128 0x5
 3740 0110 49       		.uleb128 0x49
 3741 0111 13       		.uleb128 0x13
 3742 0112 1C       		.uleb128 0x1c
 3743 0113 05       		.uleb128 0x5
 3744 0114 00       		.byte	0
 3745 0115 00       		.byte	0
 3746 0116 13       		.uleb128 0x13
 3747 0117 0F       		.uleb128 0xf
 3748 0118 00       		.byte	0
 3749 0119 0B       		.uleb128 0xb
 3750 011a 0B       		.uleb128 0xb
 3751 011b 49       		.uleb128 0x49
 3752 011c 13       		.uleb128 0x13
 3753 011d 00       		.byte	0
 3754 011e 00       		.byte	0
 3755 011f 14       		.uleb128 0x14
 3756 0120 2E       		.uleb128 0x2e
 3757 0121 01       		.byte	0x1
 3758 0122 3F       		.uleb128 0x3f
 3759 0123 19       		.uleb128 0x19
 3760 0124 03       		.uleb128 0x3
 3761 0125 0E       		.uleb128 0xe
 3762 0126 3A       		.uleb128 0x3a
 3763 0127 0B       		.uleb128 0xb
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\cc13CBnx.s 			page 75


 3764 0128 3B       		.uleb128 0x3b
 3765 0129 05       		.uleb128 0x5
 3766 012a 27       		.uleb128 0x27
 3767 012b 19       		.uleb128 0x19
 3768 012c 11       		.uleb128 0x11
 3769 012d 01       		.uleb128 0x1
 3770 012e 12       		.uleb128 0x12
 3771 012f 06       		.uleb128 0x6
 3772 0130 40       		.uleb128 0x40
 3773 0131 18       		.uleb128 0x18
 3774 0132 9742     		.uleb128 0x2117
 3775 0134 19       		.uleb128 0x19
 3776 0135 01       		.uleb128 0x1
 3777 0136 13       		.uleb128 0x13
 3778 0137 00       		.byte	0
 3779 0138 00       		.byte	0
 3780 0139 15       		.uleb128 0x15
 3781 013a 2E       		.uleb128 0x2e
 3782 013b 01       		.byte	0x1
 3783 013c 3F       		.uleb128 0x3f
 3784 013d 19       		.uleb128 0x19
 3785 013e 03       		.uleb128 0x3
 3786 013f 0E       		.uleb128 0xe
 3787 0140 3A       		.uleb128 0x3a
 3788 0141 0B       		.uleb128 0xb
 3789 0142 3B       		.uleb128 0x3b
 3790 0143 05       		.uleb128 0x5
 3791 0144 11       		.uleb128 0x11
 3792 0145 01       		.uleb128 0x1
 3793 0146 12       		.uleb128 0x12
 3794 0147 06       		.uleb128 0x6
 3795 0148 40       		.uleb128 0x40
 3796 0149 18       		.uleb128 0x18
 3797 014a 9642     		.uleb128 0x2116
 3798 014c 19       		.uleb128 0x19
 3799 014d 01       		.uleb128 0x1
 3800 014e 13       		.uleb128 0x13
 3801 014f 00       		.byte	0
 3802 0150 00       		.byte	0
 3803 0151 16       		.uleb128 0x16
 3804 0152 2E       		.uleb128 0x2e
 3805 0153 01       		.byte	0x1
 3806 0154 3F       		.uleb128 0x3f
 3807 0155 19       		.uleb128 0x19
 3808 0156 03       		.uleb128 0x3
 3809 0157 08       		.uleb128 0x8
 3810 0158 3A       		.uleb128 0x3a
 3811 0159 0B       		.uleb128 0xb
 3812 015a 3B       		.uleb128 0x3b
 3813 015b 0B       		.uleb128 0xb
 3814 015c 49       		.uleb128 0x49
 3815 015d 13       		.uleb128 0x13
 3816 015e 3C       		.uleb128 0x3c
 3817 015f 19       		.uleb128 0x19
 3818 0160 01       		.uleb128 0x1
 3819 0161 13       		.uleb128 0x13
 3820 0162 00       		.byte	0
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\cc13CBnx.s 			page 76


 3821 0163 00       		.byte	0
 3822 0164 17       		.uleb128 0x17
 3823 0165 18       		.uleb128 0x18
 3824 0166 00       		.byte	0
 3825 0167 00       		.byte	0
 3826 0168 00       		.byte	0
 3827 0169 18       		.uleb128 0x18
 3828 016a 34       		.uleb128 0x34
 3829 016b 00       		.byte	0
 3830 016c 03       		.uleb128 0x3
 3831 016d 0E       		.uleb128 0xe
 3832 016e 3A       		.uleb128 0x3a
 3833 016f 0B       		.uleb128 0xb
 3834 0170 3B       		.uleb128 0x3b
 3835 0171 05       		.uleb128 0x5
 3836 0172 49       		.uleb128 0x49
 3837 0173 13       		.uleb128 0x13
 3838 0174 3F       		.uleb128 0x3f
 3839 0175 19       		.uleb128 0x19
 3840 0176 3C       		.uleb128 0x3c
 3841 0177 19       		.uleb128 0x19
 3842 0178 00       		.byte	0
 3843 0179 00       		.byte	0
 3844 017a 19       		.uleb128 0x19
 3845 017b 35       		.uleb128 0x35
 3846 017c 00       		.byte	0
 3847 017d 49       		.uleb128 0x49
 3848 017e 13       		.uleb128 0x13
 3849 017f 00       		.byte	0
 3850 0180 00       		.byte	0
 3851 0181 1A       		.uleb128 0x1a
 3852 0182 34       		.uleb128 0x34
 3853 0183 00       		.byte	0
 3854 0184 03       		.uleb128 0x3
 3855 0185 0E       		.uleb128 0xe
 3856 0186 3A       		.uleb128 0x3a
 3857 0187 0B       		.uleb128 0xb
 3858 0188 3B       		.uleb128 0x3b
 3859 0189 0B       		.uleb128 0xb
 3860 018a 49       		.uleb128 0x49
 3861 018b 13       		.uleb128 0x13
 3862 018c 3F       		.uleb128 0x3f
 3863 018d 19       		.uleb128 0x19
 3864 018e 02       		.uleb128 0x2
 3865 018f 18       		.uleb128 0x18
 3866 0190 00       		.byte	0
 3867 0191 00       		.byte	0
 3868 0192 1B       		.uleb128 0x1b
 3869 0193 01       		.uleb128 0x1
 3870 0194 01       		.byte	0x1
 3871 0195 49       		.uleb128 0x49
 3872 0196 13       		.uleb128 0x13
 3873 0197 01       		.uleb128 0x1
 3874 0198 13       		.uleb128 0x13
 3875 0199 00       		.byte	0
 3876 019a 00       		.byte	0
 3877 019b 1C       		.uleb128 0x1c
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\cc13CBnx.s 			page 77


 3878 019c 21       		.uleb128 0x21
 3879 019d 00       		.byte	0
 3880 019e 49       		.uleb128 0x49
 3881 019f 13       		.uleb128 0x13
 3882 01a0 2F       		.uleb128 0x2f
 3883 01a1 0B       		.uleb128 0xb
 3884 01a2 00       		.byte	0
 3885 01a3 00       		.byte	0
 3886 01a4 1D       		.uleb128 0x1d
 3887 01a5 34       		.uleb128 0x34
 3888 01a6 00       		.byte	0
 3889 01a7 03       		.uleb128 0x3
 3890 01a8 0E       		.uleb128 0xe
 3891 01a9 3A       		.uleb128 0x3a
 3892 01aa 0B       		.uleb128 0xb
 3893 01ab 3B       		.uleb128 0x3b
 3894 01ac 0B       		.uleb128 0xb
 3895 01ad 49       		.uleb128 0x49
 3896 01ae 13       		.uleb128 0x13
 3897 01af 3F       		.uleb128 0x3f
 3898 01b0 19       		.uleb128 0x19
 3899 01b1 3C       		.uleb128 0x3c
 3900 01b2 19       		.uleb128 0x19
 3901 01b3 00       		.byte	0
 3902 01b4 00       		.byte	0
 3903 01b5 1E       		.uleb128 0x1e
 3904 01b6 2E       		.uleb128 0x2e
 3905 01b7 00       		.byte	0
 3906 01b8 3F       		.uleb128 0x3f
 3907 01b9 19       		.uleb128 0x19
 3908 01ba 3C       		.uleb128 0x3c
 3909 01bb 19       		.uleb128 0x19
 3910 01bc 6E       		.uleb128 0x6e
 3911 01bd 08       		.uleb128 0x8
 3912 01be 03       		.uleb128 0x3
 3913 01bf 08       		.uleb128 0x8
 3914 01c0 3A       		.uleb128 0x3a
 3915 01c1 0B       		.uleb128 0xb
 3916 01c2 3B       		.uleb128 0x3b
 3917 01c3 0B       		.uleb128 0xb
 3918 01c4 00       		.byte	0
 3919 01c5 00       		.byte	0
 3920 01c6 1F       		.uleb128 0x1f
 3921 01c7 2E       		.uleb128 0x2e
 3922 01c8 00       		.byte	0
 3923 01c9 3F       		.uleb128 0x3f
 3924 01ca 19       		.uleb128 0x19
 3925 01cb 3C       		.uleb128 0x3c
 3926 01cc 19       		.uleb128 0x19
 3927 01cd 6E       		.uleb128 0x6e
 3928 01ce 0E       		.uleb128 0xe
 3929 01cf 03       		.uleb128 0x3
 3930 01d0 0E       		.uleb128 0xe
 3931 01d1 3A       		.uleb128 0x3a
 3932 01d2 0B       		.uleb128 0xb
 3933 01d3 3B       		.uleb128 0x3b
 3934 01d4 0B       		.uleb128 0xb
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\cc13CBnx.s 			page 78


 3935 01d5 00       		.byte	0
 3936 01d6 00       		.byte	0
 3937 01d7 20       		.uleb128 0x20
 3938 01d8 2E       		.uleb128 0x2e
 3939 01d9 00       		.byte	0
 3940 01da 3F       		.uleb128 0x3f
 3941 01db 19       		.uleb128 0x19
 3942 01dc 3C       		.uleb128 0x3c
 3943 01dd 19       		.uleb128 0x19
 3944 01de 6E       		.uleb128 0x6e
 3945 01df 0E       		.uleb128 0xe
 3946 01e0 03       		.uleb128 0x3
 3947 01e1 0E       		.uleb128 0xe
 3948 01e2 3A       		.uleb128 0x3a
 3949 01e3 0B       		.uleb128 0xb
 3950 01e4 3B       		.uleb128 0x3b
 3951 01e5 05       		.uleb128 0x5
 3952 01e6 00       		.byte	0
 3953 01e7 00       		.byte	0
 3954 01e8 00       		.byte	0
 3955              		.section	.debug_loc,"",%progbits
 3956              	.Ldebug_loc0:
 3957              	.LLST0:
 3958 0000 00000000 		.4byte	.LVL0
 3959 0004 0E000000 		.4byte	.LVL1
 3960 0008 0100     		.2byte	0x1
 3961 000a 50       		.byte	0x50
 3962 000b 0E000000 		.4byte	.LVL1
 3963 000f 4C000000 		.4byte	.LVL14
 3964 0013 0100     		.2byte	0x1
 3965 0015 57       		.byte	0x57
 3966 0016 4C000000 		.4byte	.LVL14
 3967 001a B0000000 		.4byte	.LVL25
 3968 001e 0400     		.2byte	0x4
 3969 0020 F3       		.byte	0xf3
 3970 0021 01       		.uleb128 0x1
 3971 0022 50       		.byte	0x50
 3972 0023 9F       		.byte	0x9f
 3973 0024 B0000000 		.4byte	.LVL25
 3974 0028 DC000000 		.4byte	.LVL34
 3975 002c 0100     		.2byte	0x1
 3976 002e 57       		.byte	0x57
 3977 002f DC000000 		.4byte	.LVL34
 3978 0033 5C010000 		.4byte	.LFE64
 3979 0037 0400     		.2byte	0x4
 3980 0039 F3       		.byte	0xf3
 3981 003a 01       		.uleb128 0x1
 3982 003b 50       		.byte	0x50
 3983 003c 9F       		.byte	0x9f
 3984 003d 00000000 		.4byte	0
 3985 0041 00000000 		.4byte	0
 3986              	.LLST1:
 3987 0045 00000000 		.4byte	.LVL0
 3988 0049 11000000 		.4byte	.LVL2-1
 3989 004d 0100     		.2byte	0x1
 3990 004f 51       		.byte	0x51
 3991 0050 11000000 		.4byte	.LVL2-1
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\cc13CBnx.s 			page 79


 3992 0054 40000000 		.4byte	.LVL10
 3993 0058 0100     		.2byte	0x1
 3994 005a 54       		.byte	0x54
 3995 005b 40000000 		.4byte	.LVL10
 3996 005f B0000000 		.4byte	.LVL25
 3997 0063 0400     		.2byte	0x4
 3998 0065 F3       		.byte	0xf3
 3999 0066 01       		.uleb128 0x1
 4000 0067 51       		.byte	0x51
 4001 0068 9F       		.byte	0x9f
 4002 0069 B0000000 		.4byte	.LVL25
 4003 006d C6000000 		.4byte	.LVL29
 4004 0071 0100     		.2byte	0x1
 4005 0073 54       		.byte	0x54
 4006 0074 C6000000 		.4byte	.LVL29
 4007 0078 5C010000 		.4byte	.LFE64
 4008 007c 0400     		.2byte	0x4
 4009 007e F3       		.byte	0xf3
 4010 007f 01       		.uleb128 0x1
 4011 0080 51       		.byte	0x51
 4012 0081 9F       		.byte	0x9f
 4013 0082 00000000 		.4byte	0
 4014 0086 00000000 		.4byte	0
 4015              	.LLST2:
 4016 008a 00000000 		.4byte	.LVL0
 4017 008e 11000000 		.4byte	.LVL2-1
 4018 0092 0100     		.2byte	0x1
 4019 0094 52       		.byte	0x52
 4020 0095 11000000 		.4byte	.LVL2-1
 4021 0099 42000000 		.4byte	.LVL11
 4022 009d 0100     		.2byte	0x1
 4023 009f 55       		.byte	0x55
 4024 00a0 42000000 		.4byte	.LVL11
 4025 00a4 B0000000 		.4byte	.LVL25
 4026 00a8 0400     		.2byte	0x4
 4027 00aa F3       		.byte	0xf3
 4028 00ab 01       		.uleb128 0x1
 4029 00ac 52       		.byte	0x52
 4030 00ad 9F       		.byte	0x9f
 4031 00ae B0000000 		.4byte	.LVL25
 4032 00b2 C8000000 		.4byte	.LVL30
 4033 00b6 0100     		.2byte	0x1
 4034 00b8 55       		.byte	0x55
 4035 00b9 C8000000 		.4byte	.LVL30
 4036 00bd 5C010000 		.4byte	.LFE64
 4037 00c1 0400     		.2byte	0x4
 4038 00c3 F3       		.byte	0xf3
 4039 00c4 01       		.uleb128 0x1
 4040 00c5 52       		.byte	0x52
 4041 00c6 9F       		.byte	0x9f
 4042 00c7 00000000 		.4byte	0
 4043 00cb 00000000 		.4byte	0
 4044              	.LLST3:
 4045 00cf 2A000000 		.4byte	.LVL6
 4046 00d3 30000000 		.4byte	.LVL7
 4047 00d7 0100     		.2byte	0x1
 4048 00d9 50       		.byte	0x50
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\cc13CBnx.s 			page 80


 4049 00da 30000000 		.4byte	.LVL7
 4050 00de 4A000000 		.4byte	.LVL13
 4051 00e2 0100     		.2byte	0x1
 4052 00e4 56       		.byte	0x56
 4053 00e5 B0000000 		.4byte	.LVL25
 4054 00e9 B6000000 		.4byte	.LVL26
 4055 00ed 0100     		.2byte	0x1
 4056 00ef 50       		.byte	0x50
 4057 00f0 B6000000 		.4byte	.LVL26
 4058 00f4 DA000000 		.4byte	.LVL33
 4059 00f8 0100     		.2byte	0x1
 4060 00fa 56       		.byte	0x56
 4061 00fb 00000000 		.4byte	0
 4062 00ff 00000000 		.4byte	0
 4063              	.LLST4:
 4064 0103 00000000 		.4byte	.LVL45
 4065 0107 09000000 		.4byte	.LVL46-1
 4066 010b 0100     		.2byte	0x1
 4067 010d 50       		.byte	0x50
 4068 010e 09000000 		.4byte	.LVL46-1
 4069 0112 78000000 		.4byte	.LFE65
 4070 0116 0400     		.2byte	0x4
 4071 0118 F3       		.byte	0xf3
 4072 0119 01       		.uleb128 0x1
 4073 011a 50       		.byte	0x50
 4074 011b 9F       		.byte	0x9f
 4075 011c 00000000 		.4byte	0
 4076 0120 00000000 		.4byte	0
 4077              	.LLST5:
 4078 0124 00000000 		.4byte	.LVL45
 4079 0128 09000000 		.4byte	.LVL46-1
 4080 012c 0100     		.2byte	0x1
 4081 012e 51       		.byte	0x51
 4082 012f 09000000 		.4byte	.LVL46-1
 4083 0133 68000000 		.4byte	.LVL52
 4084 0137 0100     		.2byte	0x1
 4085 0139 54       		.byte	0x54
 4086 013a 68000000 		.4byte	.LVL52
 4087 013e 78000000 		.4byte	.LFE65
 4088 0142 0400     		.2byte	0x4
 4089 0144 F3       		.byte	0xf3
 4090 0145 01       		.uleb128 0x1
 4091 0146 51       		.byte	0x51
 4092 0147 9F       		.byte	0x9f
 4093 0148 00000000 		.4byte	0
 4094 014c 00000000 		.4byte	0
 4095              	.LLST6:
 4096 0150 00000000 		.4byte	.LVL45
 4097 0154 09000000 		.4byte	.LVL46-1
 4098 0158 0100     		.2byte	0x1
 4099 015a 52       		.byte	0x52
 4100 015b 09000000 		.4byte	.LVL46-1
 4101 015f 68000000 		.4byte	.LVL52
 4102 0163 0100     		.2byte	0x1
 4103 0165 55       		.byte	0x55
 4104 0166 68000000 		.4byte	.LVL52
 4105 016a 78000000 		.4byte	.LFE65
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\cc13CBnx.s 			page 81


 4106 016e 0400     		.2byte	0x4
 4107 0170 F3       		.byte	0xf3
 4108 0171 01       		.uleb128 0x1
 4109 0172 52       		.byte	0x52
 4110 0173 9F       		.byte	0x9f
 4111 0174 00000000 		.4byte	0
 4112 0178 00000000 		.4byte	0
 4113              	.LLST7:
 4114 017c 18000000 		.4byte	.LVL48
 4115 0180 22000000 		.4byte	.LVL49
 4116 0184 0100     		.2byte	0x1
 4117 0186 50       		.byte	0x50
 4118 0187 3C000000 		.4byte	.LVL50
 4119 018b 46000000 		.4byte	.LVL51
 4120 018f 0100     		.2byte	0x1
 4121 0191 50       		.byte	0x50
 4122 0192 00000000 		.4byte	0
 4123 0196 00000000 		.4byte	0
 4124              	.LLST8:
 4125 019a 2A000000 		.4byte	.LVL53
 4126 019e 35000000 		.4byte	.LVL54-1
 4127 01a2 0100     		.2byte	0x1
 4128 01a4 50       		.byte	0x50
 4129 01a5 44000000 		.4byte	.LVL55
 4130 01a9 4F000000 		.4byte	.LVL56-1
 4131 01ad 0100     		.2byte	0x1
 4132 01af 50       		.byte	0x50
 4133 01b0 5E000000 		.4byte	.LVL57
 4134 01b4 69000000 		.4byte	.LVL58-1
 4135 01b8 0100     		.2byte	0x1
 4136 01ba 50       		.byte	0x50
 4137 01bb 00000000 		.4byte	0
 4138 01bf 00000000 		.4byte	0
 4139              	.LLST9:
 4140 01c3 00000000 		.4byte	.LVL61
 4141 01c7 0D000000 		.4byte	.LVL63-1
 4142 01cb 0100     		.2byte	0x1
 4143 01cd 50       		.byte	0x50
 4144 01ce 0D000000 		.4byte	.LVL63-1
 4145 01d2 70000000 		.4byte	.LFE67
 4146 01d6 0600     		.2byte	0x6
 4147 01d8 F3       		.byte	0xf3
 4148 01d9 03       		.uleb128 0x3
 4149 01da F5       		.byte	0xf5
 4150 01db 00       		.uleb128 0
 4151 01dc 25       		.uleb128 0x25
 4152 01dd 9F       		.byte	0x9f
 4153 01de 00000000 		.4byte	0
 4154 01e2 00000000 		.4byte	0
 4155              	.LLST10:
 4156 01e6 00000000 		.4byte	.LVL61
 4157 01ea 0A000000 		.4byte	.LVL62
 4158 01ee 0100     		.2byte	0x1
 4159 01f0 51       		.byte	0x51
 4160 01f1 0A000000 		.4byte	.LVL62
 4161 01f5 68000000 		.4byte	.LVL79
 4162 01f9 0100     		.2byte	0x1
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\cc13CBnx.s 			page 82


 4163 01fb 55       		.byte	0x55
 4164 01fc 68000000 		.4byte	.LVL79
 4165 0200 70000000 		.4byte	.LFE67
 4166 0204 0600     		.2byte	0x6
 4167 0206 F3       		.byte	0xf3
 4168 0207 03       		.uleb128 0x3
 4169 0208 F5       		.byte	0xf5
 4170 0209 01       		.uleb128 0x1
 4171 020a 25       		.uleb128 0x25
 4172 020b 9F       		.byte	0x9f
 4173 020c 00000000 		.4byte	0
 4174 0210 00000000 		.4byte	0
 4175              	.LLST11:
 4176 0214 00000000 		.4byte	.LVL61
 4177 0218 0D000000 		.4byte	.LVL63-1
 4178 021c 0100     		.2byte	0x1
 4179 021e 52       		.byte	0x52
 4180 021f 0D000000 		.4byte	.LVL63-1
 4181 0223 68000000 		.4byte	.LVL79
 4182 0227 0100     		.2byte	0x1
 4183 0229 56       		.byte	0x56
 4184 022a 68000000 		.4byte	.LVL79
 4185 022e 70000000 		.4byte	.LFE67
 4186 0232 0600     		.2byte	0x6
 4187 0234 F3       		.byte	0xf3
 4188 0235 03       		.uleb128 0x3
 4189 0236 F5       		.byte	0xf5
 4190 0237 02       		.uleb128 0x2
 4191 0238 25       		.uleb128 0x25
 4192 0239 9F       		.byte	0x9f
 4193 023a 00000000 		.4byte	0
 4194 023e 00000000 		.4byte	0
 4195              	.LLST12:
 4196 0242 00000000 		.4byte	.LVL61
 4197 0246 0D000000 		.4byte	.LVL63-1
 4198 024a 0100     		.2byte	0x1
 4199 024c 53       		.byte	0x53
 4200 024d 0D000000 		.4byte	.LVL63-1
 4201 0251 68000000 		.4byte	.LVL79
 4202 0255 0100     		.2byte	0x1
 4203 0257 54       		.byte	0x54
 4204 0258 68000000 		.4byte	.LVL79
 4205 025c 70000000 		.4byte	.LFE67
 4206 0260 0600     		.2byte	0x6
 4207 0262 F3       		.byte	0xf3
 4208 0263 03       		.uleb128 0x3
 4209 0264 F5       		.byte	0xf5
 4210 0265 03       		.uleb128 0x3
 4211 0266 25       		.uleb128 0x25
 4212 0267 9F       		.byte	0x9f
 4213 0268 00000000 		.4byte	0
 4214 026c 00000000 		.4byte	0
 4215              	.LLST13:
 4216 0270 2A000000 		.4byte	.LVL80
 4217 0274 34000000 		.4byte	.LVL81
 4218 0278 0100     		.2byte	0x1
 4219 027a 52       		.byte	0x52
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\cc13CBnx.s 			page 83


 4220 027b 50000000 		.4byte	.LVL82
 4221 027f 5A000000 		.4byte	.LVL83
 4222 0283 0100     		.2byte	0x1
 4223 0285 52       		.byte	0x52
 4224 0286 76000000 		.4byte	.LVL84
 4225 028a 80000000 		.4byte	.LVL85
 4226 028e 0100     		.2byte	0x1
 4227 0290 52       		.byte	0x52
 4228 0291 9C000000 		.4byte	.LVL86
 4229 0295 A6000000 		.4byte	.LVL87
 4230 0299 0100     		.2byte	0x1
 4231 029b 52       		.byte	0x52
 4232 029c C6000000 		.4byte	.LVL88
 4233 02a0 D0000000 		.4byte	.LVL89
 4234 02a4 0100     		.2byte	0x1
 4235 02a6 53       		.byte	0x53
 4236 02a7 EC000000 		.4byte	.LVL90
 4237 02ab F6000000 		.4byte	.LVL91
 4238 02af 0100     		.2byte	0x1
 4239 02b1 53       		.byte	0x53
 4240 02b2 12010000 		.4byte	.LVL92
 4241 02b6 1C010000 		.4byte	.LVL93
 4242 02ba 0100     		.2byte	0x1
 4243 02bc 52       		.byte	0x52
 4244 02bd 38010000 		.4byte	.LVL94
 4245 02c1 40010000 		.4byte	.LVL95
 4246 02c5 0100     		.2byte	0x1
 4247 02c7 52       		.byte	0x52
 4248 02c8 00000000 		.4byte	0
 4249 02cc 00000000 		.4byte	0
 4250              	.LLST14:
 4251 02d0 00000000 		.4byte	.LVL102
 4252 02d4 08000000 		.4byte	.LVL103
 4253 02d8 0100     		.2byte	0x1
 4254 02da 50       		.byte	0x50
 4255 02db 08000000 		.4byte	.LVL103
 4256 02df 20000000 		.4byte	.LFE69
 4257 02e3 0100     		.2byte	0x1
 4258 02e5 55       		.byte	0x55
 4259 02e6 00000000 		.4byte	0
 4260 02ea 00000000 		.4byte	0
 4261              	.LLST15:
 4262 02ee 00000000 		.4byte	.LVL102
 4263 02f2 0B000000 		.4byte	.LVL104-1
 4264 02f6 0100     		.2byte	0x1
 4265 02f8 51       		.byte	0x51
 4266 02f9 0B000000 		.4byte	.LVL104-1
 4267 02fd 20000000 		.4byte	.LFE69
 4268 0301 0100     		.2byte	0x1
 4269 0303 54       		.byte	0x54
 4270 0304 00000000 		.4byte	0
 4271 0308 00000000 		.4byte	0
 4272              	.LLST16:
 4273 030c 00000000 		.4byte	.LVL108
 4274 0310 07000000 		.4byte	.LVL109-1
 4275 0314 0100     		.2byte	0x1
 4276 0316 50       		.byte	0x50
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\cc13CBnx.s 			page 84


 4277 0317 07000000 		.4byte	.LVL109-1
 4278 031b C4000000 		.4byte	.LFE70
 4279 031f 0600     		.2byte	0x6
 4280 0321 F3       		.byte	0xf3
 4281 0322 03       		.uleb128 0x3
 4282 0323 F5       		.byte	0xf5
 4283 0324 00       		.uleb128 0
 4284 0325 25       		.uleb128 0x25
 4285 0326 9F       		.byte	0x9f
 4286 0327 00000000 		.4byte	0
 4287 032b 00000000 		.4byte	0
 4288              	.LLST17:
 4289 032f 16000000 		.4byte	.LVL111
 4290 0333 33000000 		.4byte	.LVL112-1
 4291 0337 0100     		.2byte	0x1
 4292 0339 50       		.byte	0x50
 4293 033a 00000000 		.4byte	0
 4294 033e 00000000 		.4byte	0
 4295              	.LLST18:
 4296 0342 00000000 		.4byte	.LVL131
 4297 0346 07000000 		.4byte	.LVL132-1
 4298 034a 0100     		.2byte	0x1
 4299 034c 50       		.byte	0x50
 4300 034d 07000000 		.4byte	.LVL132-1
 4301 0351 C4000000 		.4byte	.LFE72
 4302 0355 0600     		.2byte	0x6
 4303 0357 F3       		.byte	0xf3
 4304 0358 03       		.uleb128 0x3
 4305 0359 F5       		.byte	0xf5
 4306 035a 00       		.uleb128 0
 4307 035b 25       		.uleb128 0x25
 4308 035c 9F       		.byte	0x9f
 4309 035d 00000000 		.4byte	0
 4310 0361 00000000 		.4byte	0
 4311              	.LLST19:
 4312 0365 16000000 		.4byte	.LVL134
 4313 0369 33000000 		.4byte	.LVL135-1
 4314 036d 0100     		.2byte	0x1
 4315 036f 50       		.byte	0x50
 4316 0370 00000000 		.4byte	0
 4317 0374 00000000 		.4byte	0
 4318              	.LLST20:
 4319 0378 00000000 		.4byte	.LVL154
 4320 037c 07000000 		.4byte	.LVL155-1
 4321 0380 0100     		.2byte	0x1
 4322 0382 50       		.byte	0x50
 4323 0383 07000000 		.4byte	.LVL155-1
 4324 0387 CC000000 		.4byte	.LFE74
 4325 038b 0600     		.2byte	0x6
 4326 038d F3       		.byte	0xf3
 4327 038e 03       		.uleb128 0x3
 4328 038f F5       		.byte	0xf5
 4329 0390 00       		.uleb128 0
 4330 0391 25       		.uleb128 0x25
 4331 0392 9F       		.byte	0x9f
 4332 0393 00000000 		.4byte	0
 4333 0397 00000000 		.4byte	0
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\cc13CBnx.s 			page 85


 4334              	.LLST21:
 4335 039b 1A000000 		.4byte	.LVL158
 4336 039f 37000000 		.4byte	.LVL159-1
 4337 03a3 0100     		.2byte	0x1
 4338 03a5 50       		.byte	0x50
 4339 03a6 00000000 		.4byte	0
 4340 03aa 00000000 		.4byte	0
 4341              	.LLST22:
 4342 03ae 00000000 		.4byte	.LVL168
 4343 03b2 07000000 		.4byte	.LVL169-1
 4344 03b6 0100     		.2byte	0x1
 4345 03b8 50       		.byte	0x50
 4346 03b9 07000000 		.4byte	.LVL169-1
 4347 03bd C4000000 		.4byte	.LFE75
 4348 03c1 0600     		.2byte	0x6
 4349 03c3 F3       		.byte	0xf3
 4350 03c4 03       		.uleb128 0x3
 4351 03c5 F5       		.byte	0xf5
 4352 03c6 00       		.uleb128 0
 4353 03c7 25       		.uleb128 0x25
 4354 03c8 9F       		.byte	0x9f
 4355 03c9 00000000 		.4byte	0
 4356 03cd 00000000 		.4byte	0
 4357              	.LLST23:
 4358 03d1 1A000000 		.4byte	.LVL172
 4359 03d5 37000000 		.4byte	.LVL173-1
 4360 03d9 0100     		.2byte	0x1
 4361 03db 50       		.byte	0x50
 4362 03dc 00000000 		.4byte	0
 4363 03e0 00000000 		.4byte	0
 4364              	.LLST24:
 4365 03e4 00000000 		.4byte	.LVL182
 4366 03e8 0A000000 		.4byte	.LVL183
 4367 03ec 0100     		.2byte	0x1
 4368 03ee 50       		.byte	0x50
 4369 03ef 0A000000 		.4byte	.LVL183
 4370 03f3 1C000000 		.4byte	.LVL187
 4371 03f7 0100     		.2byte	0x1
 4372 03f9 54       		.byte	0x54
 4373 03fa 1C000000 		.4byte	.LVL187
 4374 03fe 78000000 		.4byte	.LFE76
 4375 0402 0400     		.2byte	0x4
 4376 0404 F3       		.byte	0xf3
 4377 0405 01       		.uleb128 0x1
 4378 0406 50       		.byte	0x50
 4379 0407 9F       		.byte	0x9f
 4380 0408 00000000 		.4byte	0
 4381 040c 00000000 		.4byte	0
 4382              	.LLST25:
 4383 0410 00000000 		.4byte	.LVL182
 4384 0414 0D000000 		.4byte	.LVL184-1
 4385 0418 0100     		.2byte	0x1
 4386 041a 51       		.byte	0x51
 4387 041b 0D000000 		.4byte	.LVL184-1
 4388 041f 30000000 		.4byte	.LVL190
 4389 0423 0100     		.2byte	0x1
 4390 0425 56       		.byte	0x56
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\cc13CBnx.s 			page 86


 4391 0426 30000000 		.4byte	.LVL190
 4392 042a 78000000 		.4byte	.LFE76
 4393 042e 0400     		.2byte	0x4
 4394 0430 F3       		.byte	0xf3
 4395 0431 01       		.uleb128 0x1
 4396 0432 51       		.byte	0x51
 4397 0433 9F       		.byte	0x9f
 4398 0434 00000000 		.4byte	0
 4399 0438 00000000 		.4byte	0
 4400              	.LLST26:
 4401 043c 42000000 		.4byte	.LVL192
 4402 0440 45000000 		.4byte	.LVL193-1
 4403 0444 0600     		.2byte	0x6
 4404 0446 F5       		.byte	0xf5
 4405 0447 00       		.uleb128 0
 4406 0448 2C       		.uleb128 0x2c
 4407 0449 F7       		.byte	0xf7
 4408 044a 25       		.uleb128 0x25
 4409 044b 9F       		.byte	0x9f
 4410 044c 64000000 		.4byte	.LVL197
 4411 0450 67000000 		.4byte	.LVL198-1
 4412 0454 0600     		.2byte	0x6
 4413 0456 F5       		.byte	0xf5
 4414 0457 00       		.uleb128 0
 4415 0458 2C       		.uleb128 0x2c
 4416 0459 F7       		.byte	0xf7
 4417 045a 25       		.uleb128 0x25
 4418 045b 9F       		.byte	0x9f
 4419 045c 00000000 		.4byte	0
 4420 0460 00000000 		.4byte	0
 4421              	.LLST27:
 4422 0464 00000000 		.4byte	.LVL200
 4423 0468 0A000000 		.4byte	.LVL201
 4424 046c 0100     		.2byte	0x1
 4425 046e 50       		.byte	0x50
 4426 046f 0A000000 		.4byte	.LVL201
 4427 0473 1C000000 		.4byte	.LVL205
 4428 0477 0100     		.2byte	0x1
 4429 0479 54       		.byte	0x54
 4430 047a 1C000000 		.4byte	.LVL205
 4431 047e 78000000 		.4byte	.LFE77
 4432 0482 0400     		.2byte	0x4
 4433 0484 F3       		.byte	0xf3
 4434 0485 01       		.uleb128 0x1
 4435 0486 50       		.byte	0x50
 4436 0487 9F       		.byte	0x9f
 4437 0488 00000000 		.4byte	0
 4438 048c 00000000 		.4byte	0
 4439              	.LLST28:
 4440 0490 00000000 		.4byte	.LVL200
 4441 0494 0D000000 		.4byte	.LVL202-1
 4442 0498 0100     		.2byte	0x1
 4443 049a 51       		.byte	0x51
 4444 049b 0D000000 		.4byte	.LVL202-1
 4445 049f 30000000 		.4byte	.LVL208
 4446 04a3 0100     		.2byte	0x1
 4447 04a5 56       		.byte	0x56
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\cc13CBnx.s 			page 87


 4448 04a6 30000000 		.4byte	.LVL208
 4449 04aa 78000000 		.4byte	.LFE77
 4450 04ae 0400     		.2byte	0x4
 4451 04b0 F3       		.byte	0xf3
 4452 04b1 01       		.uleb128 0x1
 4453 04b2 51       		.byte	0x51
 4454 04b3 9F       		.byte	0x9f
 4455 04b4 00000000 		.4byte	0
 4456 04b8 00000000 		.4byte	0
 4457              	.LLST29:
 4458 04bc 42000000 		.4byte	.LVL210
 4459 04c0 45000000 		.4byte	.LVL211-1
 4460 04c4 0600     		.2byte	0x6
 4461 04c6 F5       		.byte	0xf5
 4462 04c7 00       		.uleb128 0
 4463 04c8 2C       		.uleb128 0x2c
 4464 04c9 F7       		.byte	0xf7
 4465 04ca 25       		.uleb128 0x25
 4466 04cb 9F       		.byte	0x9f
 4467 04cc 64000000 		.4byte	.LVL215
 4468 04d0 67000000 		.4byte	.LVL216-1
 4469 04d4 0600     		.2byte	0x6
 4470 04d6 F5       		.byte	0xf5
 4471 04d7 00       		.uleb128 0
 4472 04d8 2C       		.uleb128 0x2c
 4473 04d9 F7       		.byte	0xf7
 4474 04da 25       		.uleb128 0x25
 4475 04db 9F       		.byte	0x9f
 4476 04dc 00000000 		.4byte	0
 4477 04e0 00000000 		.4byte	0
 4478              	.LLST30:
 4479 04e4 00000000 		.4byte	.LVL218
 4480 04e8 0E000000 		.4byte	.LVL219
 4481 04ec 0100     		.2byte	0x1
 4482 04ee 50       		.byte	0x50
 4483 04ef 0E000000 		.4byte	.LVL219
 4484 04f3 54000000 		.4byte	.LVL227
 4485 04f7 0100     		.2byte	0x1
 4486 04f9 55       		.byte	0x55
 4487 04fa 54000000 		.4byte	.LVL227
 4488 04fe 64000000 		.4byte	.LFE78
 4489 0502 0400     		.2byte	0x4
 4490 0504 F3       		.byte	0xf3
 4491 0505 01       		.uleb128 0x1
 4492 0506 50       		.byte	0x50
 4493 0507 9F       		.byte	0x9f
 4494 0508 00000000 		.4byte	0
 4495 050c 00000000 		.4byte	0
 4496              	.LLST31:
 4497 0510 2C000000 		.4byte	.LVL223
 4498 0514 31000000 		.4byte	.LVL224-1
 4499 0518 0100     		.2byte	0x1
 4500 051a 50       		.byte	0x50
 4501 051b 00000000 		.4byte	0
 4502 051f 00000000 		.4byte	0
 4503              	.LLST32:
 4504 0523 00000000 		.4byte	.LVL240
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\cc13CBnx.s 			page 88


 4505 0527 04000000 		.4byte	.LVL241
 4506 052b 0100     		.2byte	0x1
 4507 052d 50       		.byte	0x50
 4508 052e 04000000 		.4byte	.LVL241
 4509 0532 10000000 		.4byte	.LFE81
 4510 0536 0400     		.2byte	0x4
 4511 0538 F3       		.byte	0xf3
 4512 0539 01       		.uleb128 0x1
 4513 053a 50       		.byte	0x50
 4514 053b 9F       		.byte	0x9f
 4515 053c 00000000 		.4byte	0
 4516 0540 00000000 		.4byte	0
 4517              	.LLST33:
 4518 0544 00000000 		.4byte	.LVL240
 4519 0548 07000000 		.4byte	.LVL242-1
 4520 054c 0100     		.2byte	0x1
 4521 054e 51       		.byte	0x51
 4522 054f 07000000 		.4byte	.LVL242-1
 4523 0553 10000000 		.4byte	.LFE81
 4524 0557 0400     		.2byte	0x4
 4525 0559 F3       		.byte	0xf3
 4526 055a 01       		.uleb128 0x1
 4527 055b 51       		.byte	0x51
 4528 055c 9F       		.byte	0x9f
 4529 055d 00000000 		.4byte	0
 4530 0561 00000000 		.4byte	0
 4531              	.LLST34:
 4532 0565 00000000 		.4byte	.LVL240
 4533 0569 07000000 		.4byte	.LVL242-1
 4534 056d 0100     		.2byte	0x1
 4535 056f 52       		.byte	0x52
 4536 0570 07000000 		.4byte	.LVL242-1
 4537 0574 10000000 		.4byte	.LFE81
 4538 0578 0400     		.2byte	0x4
 4539 057a F3       		.byte	0xf3
 4540 057b 01       		.uleb128 0x1
 4541 057c 52       		.byte	0x52
 4542 057d 9F       		.byte	0x9f
 4543 057e 00000000 		.4byte	0
 4544 0582 00000000 		.4byte	0
 4545              	.LLST35:
 4546 0586 24000000 		.4byte	.LVL248
 4547 058a 3A000000 		.4byte	.LVL251
 4548 058e 0100     		.2byte	0x1
 4549 0590 54       		.byte	0x54
 4550 0591 00000000 		.4byte	0
 4551 0595 00000000 		.4byte	0
 4552              		.section	.debug_aranges,"",%progbits
 4553 0000 AC000000 		.4byte	0xac
 4554 0004 0200     		.2byte	0x2
 4555 0006 00000000 		.4byte	.Ldebug_info0
 4556 000a 04       		.byte	0x4
 4557 000b 00       		.byte	0
 4558 000c 0000     		.2byte	0
 4559 000e 0000     		.2byte	0
 4560 0010 00000000 		.4byte	.LFB64
 4561 0014 5C010000 		.4byte	.LFE64-.LFB64
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\cc13CBnx.s 			page 89


 4562 0018 00000000 		.4byte	.LFB65
 4563 001c 78000000 		.4byte	.LFE65-.LFB65
 4564 0020 00000000 		.4byte	.LFB66
 4565 0024 B4000000 		.4byte	.LFE66-.LFB66
 4566 0028 00000000 		.4byte	.LFB67
 4567 002c 70000000 		.4byte	.LFE67-.LFB67
 4568 0030 00000000 		.4byte	.LFB68
 4569 0034 A0010000 		.4byte	.LFE68-.LFB68
 4570 0038 00000000 		.4byte	.LFB69
 4571 003c 20000000 		.4byte	.LFE69-.LFB69
 4572 0040 00000000 		.4byte	.LFB70
 4573 0044 C4000000 		.4byte	.LFE70-.LFB70
 4574 0048 00000000 		.4byte	.LFB71
 4575 004c 9C000000 		.4byte	.LFE71-.LFB71
 4576 0050 00000000 		.4byte	.LFB72
 4577 0054 C4000000 		.4byte	.LFE72-.LFB72
 4578 0058 00000000 		.4byte	.LFB73
 4579 005c 94000000 		.4byte	.LFE73-.LFB73
 4580 0060 00000000 		.4byte	.LFB74
 4581 0064 CC000000 		.4byte	.LFE74-.LFB74
 4582 0068 00000000 		.4byte	.LFB75
 4583 006c C4000000 		.4byte	.LFE75-.LFB75
 4584 0070 00000000 		.4byte	.LFB76
 4585 0074 78000000 		.4byte	.LFE76-.LFB76
 4586 0078 00000000 		.4byte	.LFB77
 4587 007c 78000000 		.4byte	.LFE77-.LFB77
 4588 0080 00000000 		.4byte	.LFB78
 4589 0084 64000000 		.4byte	.LFE78-.LFB78
 4590 0088 00000000 		.4byte	.LFB79
 4591 008c 40000000 		.4byte	.LFE79-.LFB79
 4592 0090 00000000 		.4byte	.LFB80
 4593 0094 40000000 		.4byte	.LFE80-.LFB80
 4594 0098 00000000 		.4byte	.LFB81
 4595 009c 10000000 		.4byte	.LFE81-.LFB81
 4596 00a0 00000000 		.4byte	.LFB82
 4597 00a4 4C000000 		.4byte	.LFE82-.LFB82
 4598 00a8 00000000 		.4byte	0
 4599 00ac 00000000 		.4byte	0
 4600              		.section	.debug_ranges,"",%progbits
 4601              	.Ldebug_ranges0:
 4602 0000 00000000 		.4byte	.LFB64
 4603 0004 5C010000 		.4byte	.LFE64
 4604 0008 00000000 		.4byte	.LFB65
 4605 000c 78000000 		.4byte	.LFE65
 4606 0010 00000000 		.4byte	.LFB66
 4607 0014 B4000000 		.4byte	.LFE66
 4608 0018 00000000 		.4byte	.LFB67
 4609 001c 70000000 		.4byte	.LFE67
 4610 0020 00000000 		.4byte	.LFB68
 4611 0024 A0010000 		.4byte	.LFE68
 4612 0028 00000000 		.4byte	.LFB69
 4613 002c 20000000 		.4byte	.LFE69
 4614 0030 00000000 		.4byte	.LFB70
 4615 0034 C4000000 		.4byte	.LFE70
 4616 0038 00000000 		.4byte	.LFB71
 4617 003c 9C000000 		.4byte	.LFE71
 4618 0040 00000000 		.4byte	.LFB72
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\cc13CBnx.s 			page 90


 4619 0044 C4000000 		.4byte	.LFE72
 4620 0048 00000000 		.4byte	.LFB73
 4621 004c 94000000 		.4byte	.LFE73
 4622 0050 00000000 		.4byte	.LFB74
 4623 0054 CC000000 		.4byte	.LFE74
 4624 0058 00000000 		.4byte	.LFB75
 4625 005c C4000000 		.4byte	.LFE75
 4626 0060 00000000 		.4byte	.LFB76
 4627 0064 78000000 		.4byte	.LFE76
 4628 0068 00000000 		.4byte	.LFB77
 4629 006c 78000000 		.4byte	.LFE77
 4630 0070 00000000 		.4byte	.LFB78
 4631 0074 64000000 		.4byte	.LFE78
 4632 0078 00000000 		.4byte	.LFB79
 4633 007c 40000000 		.4byte	.LFE79
 4634 0080 00000000 		.4byte	.LFB80
 4635 0084 40000000 		.4byte	.LFE80
 4636 0088 00000000 		.4byte	.LFB81
 4637 008c 10000000 		.4byte	.LFE81
 4638 0090 00000000 		.4byte	.LFB82
 4639 0094 4C000000 		.4byte	.LFE82
 4640 0098 00000000 		.4byte	0
 4641 009c 00000000 		.4byte	0
 4642              		.section	.debug_line,"",%progbits
 4643              	.Ldebug_line0:
 4644 0000 C6040000 		.section	.debug_str,"MS",%progbits,1
 4644      02005F02 
 4644      00000201 
 4644      FB0E0D00 
 4644      01010101 
 4645              	.LASF72:
 4646 0000 6D6F746F 		.ascii	"motor2EncoderCounts\000"
 4646      7232456E 
 4646      636F6465 
 4646      72436F75 
 4646      6E747300 
 4647              	.LASF54:
 4648 0014 76657274 		.ascii	"vertical\000"
 4648      6963616C 
 4648      00
 4649              	.LASF26:
 4650 001d 636F6D70 		.ascii	"completedCounts\000"
 4650      6C657465 
 4650      64436F75 
 4650      6E747300 
 4651              	.LASF39:
 4652 002d 6D6F7665 		.ascii	"moveForwardIndefinitely\000"
 4652      466F7277 
 4652      61726449 
 4652      6E646566 
 4652      696E6974 
 4653              	.LASF85:
 4654 0045 4D6F746F 		.ascii	"Motor_2_Encoder_Counts_WritePeriod\000"
 4654      725F325F 
 4654      456E636F 
 4654      6465725F 
 4654      436F756E 
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\cc13CBnx.s 			page 91


 4655              	.LASF98:
 4656 0068 636F7272 		.ascii	"correctAngle\000"
 4656      65637441 
 4656      6E676C65 
 4656      00
 4657              	.LASF21:
 4658 0075 7475726E 		.ascii	"turningLeftFlag\000"
 4658      696E674C 
 4658      65667446 
 4658      6C616700 
 4659              	.LASF33:
 4660 0085 74656D70 		.ascii	"temp\000"
 4660      00
 4661              	.LASF4:
 4662 008a 73686F72 		.ascii	"short int\000"
 4662      7420696E 
 4662      7400
 4663              	.LASF51:
 4664 0094 73746F70 		.ascii	"stopMotor2AndUpdate\000"
 4664      4D6F746F 
 4664      7232416E 
 4664      64557064 
 4664      61746500 
 4665              	.LASF67:
 4666 00a8 63757272 		.ascii	"currentPosition\000"
 4666      656E7450 
 4666      6F736974 
 4666      696F6E00 
 4667              	.LASF17:
 4668 00b8 64726976 		.ascii	"drivingForwardFlag\000"
 4668      696E6746 
 4668      6F727761 
 4668      7264466C 
 4668      616700
 4669              	.LASF24:
 4670 00cb 64656772 		.ascii	"degreesMoved\000"
 4670      6565734D 
 4670      6F766564 
 4670      00
 4671              	.LASF49:
 4672 00d8 78546F4D 		.ascii	"xToMove\000"
 4672      6F766500 
 4673              	.LASF53:
 4674 00e0 686F7269 		.ascii	"horizontal\000"
 4674      7A6F6E74 
 4674      616C00
 4675              	.LASF71:
 4676 00eb 6D6F746F 		.ascii	"motor1EncoderCounts\000"
 4676      7231456E 
 4676      636F6465 
 4676      72436F75 
 4676      6E747300 
 4677              	.LASF61:
 4678 00ff 7075636B 		.ascii	"puckRackOffsetsFromWest\000"
 4678      5261636B 
 4678      4F666673 
 4678      65747346 
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\cc13CBnx.s 			page 92


 4678      726F6D57 
 4679              	.LASF88:
 4680 0117 726F756E 		.ascii	"round\000"
 4680      6400
 4681              	.LASF86:
 4682 011d 4D6F746F 		.ascii	"Motor_1_Encoder_Counts_Start\000"
 4682      725F315F 
 4682      456E636F 
 4682      6465725F 
 4682      436F756E 
 4683              	.LASF32:
 4684 013a 64726966 		.ascii	"driftCorrect\000"
 4684      74436F72 
 4684      72656374 
 4684      00
 4685              	.LASF34:
 4686 0147 636F756E 		.ascii	"counterInitialise\000"
 4686      74657249 
 4686      6E697469 
 4686      616C6973 
 4686      6500
 4687              	.LASF79:
 4688 0159 4D6F746F 		.ascii	"Motor_1_driver_WriteCompare1\000"
 4688      725F315F 
 4688      64726976 
 4688      65725F57 
 4688      72697465 
 4689              	.LASF81:
 4690 0176 4D6F746F 		.ascii	"Motor_1_driver_WriteCompare2\000"
 4690      725F315F 
 4690      64726976 
 4690      65725F57 
 4690      72697465 
 4691              	.LASF77:
 4692 0193 4D6F746F 		.ascii	"Motor_1_Encoder_Counts_WriteCounter\000"
 4692      725F315F 
 4692      456E636F 
 4692      6465725F 
 4692      436F756E 
 4693              	.LASF69:
 4694 01b7 6D6F746F 		.ascii	"motor1Enable\000"
 4694      7231456E 
 4694      61626C65 
 4694      00
 4695              	.LASF73:
 4696 01c4 626C6F63 		.ascii	"block_location\000"
 4696      6B5F6C6F 
 4696      63617469 
 4696      6F6E00
 4697              	.LASF37:
 4698 01d3 6D6F7665 		.ascii	"moveForward\000"
 4698      466F7277 
 4698      61726400 
 4699              	.LASF22:
 4700 01df 7475726E 		.ascii	"turningRightFlag\000"
 4700      696E6752 
 4700      69676874 
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\cc13CBnx.s 			page 93


 4700      466C6167 
 4700      00
 4701              	.LASF0:
 4702 01f0 666C6F61 		.ascii	"float\000"
 4702      7400
 4703              	.LASF87:
 4704 01f6 4D6F746F 		.ascii	"Motor_2_Encoder_Counts_Start\000"
 4704      725F325F 
 4704      456E636F 
 4704      6465725F 
 4704      436F756E 
 4705              	.LASF94:
 4706 0213 64697374 		.ascii	"distanceCheck\000"
 4706      616E6365 
 4706      43686563 
 4706      6B00
 4707              	.LASF65:
 4708 0221 756C7472 		.ascii	"ultrasonic_distances\000"
 4708      61736F6E 
 4708      69635F64 
 4708      69737461 
 4708      6E636573 
 4709              	.LASF8:
 4710 0236 6C6F6E67 		.ascii	"long long int\000"
 4710      206C6F6E 
 4710      6720696E 
 4710      7400
 4711              	.LASF80:
 4712 0244 4D6F746F 		.ascii	"Motor_2_driver_WriteCompare1\000"
 4712      725F325F 
 4712      64726976 
 4712      65725F57 
 4712      72697465 
 4713              	.LASF82:
 4714 0261 4D6F746F 		.ascii	"Motor_2_driver_WriteCompare2\000"
 4714      725F325F 
 4714      64726976 
 4714      65725F57 
 4714      72697465 
 4715              	.LASF27:
 4716 027e 6D6F746F 		.ascii	"motorDutyCycleUpdate\000"
 4716      72447574 
 4716      79437963 
 4716      6C655570 
 4716      64617465 
 4717              	.LASF6:
 4718 0293 6C6F6E67 		.ascii	"long int\000"
 4718      20696E74 
 4718      00
 4719              	.LASF41:
 4720 029c 6D6F7665 		.ascii	"moveBackwardIndefinitely\000"
 4720      4261636B 
 4720      77617264 
 4720      496E6465 
 4720      66696E69 
 4721              	.LASF25:
 4722 02b5 73746F70 		.ascii	"stopMotion\000"
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\cc13CBnx.s 			page 94


 4722      4D6F7469 
 4722      6F6E00
 4723              	.LASF7:
 4724 02c0 6C6F6E67 		.ascii	"long unsigned int\000"
 4724      20756E73 
 4724      69676E65 
 4724      6420696E 
 4724      7400
 4725              	.LASF40:
 4726 02d2 6D6F7665 		.ascii	"moveBackward\000"
 4726      4261636B 
 4726      77617264 
 4726      00
 4727              	.LASF18:
 4728 02df 64726976 		.ascii	"drivingBackwardFlag\000"
 4728      696E6742 
 4728      61636B77 
 4728      61726446 
 4728      6C616700 
 4729              	.LASF66:
 4730 02f3 7075636B 		.ascii	"puckPileLocation\000"
 4730      50696C65 
 4730      4C6F6361 
 4730      74696F6E 
 4730      00
 4731              	.LASF59:
 4732 0304 63757272 		.ascii	"currentPuckRackScanningIndex\000"
 4732      656E7450 
 4732      75636B52 
 4732      61636B53 
 4732      63616E6E 
 4733              	.LASF3:
 4734 0321 756E7369 		.ascii	"unsigned char\000"
 4734      676E6564 
 4734      20636861 
 4734      7200
 4735              	.LASF14:
 4736 032f 6C6F6E67 		.ascii	"long double\000"
 4736      20646F75 
 4736      626C6500 
 4737              	.LASF45:
 4738 033b 64656772 		.ascii	"degrees\000"
 4738      65657300 
 4739              	.LASF84:
 4740 0343 4D6F746F 		.ascii	"Motor_1_Encoder_Counts_WritePeriod\000"
 4740      725F315F 
 4740      456E636F 
 4740      6465725F 
 4740      436F756E 
 4741              	.LASF42:
 4742 0366 7475726E 		.ascii	"turnLeft\000"
 4742      4C656674 
 4742      00
 4743              	.LASF97:
 4744 036f 5C5C6164 		.ascii	"\\\\ad.monash.edu\\home\\User026\\bamcg3\\Documents"
 4744      2E6D6F6E 
 4744      6173682E 
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\cc13CBnx.s 			page 95


 4744      6564755C 
 4744      686F6D65 
 4745 039c 5C476974 		.ascii	"\\GitHub\\ECE3091_Group17\\Group17RobotReal\\Group1"
 4745      4875625C 
 4745      45434533 
 4745      3039315F 
 4745      47726F75 
 4746 03cb 37526F62 		.ascii	"7Robot.cydsn\000"
 4746      6F742E63 
 4746      7964736E 
 4746      00
 4747              	.LASF2:
 4748 03d8 7369676E 		.ascii	"signed char\000"
 4748      65642063 
 4748      68617200 
 4749              	.LASF63:
 4750 03e4 626C6F63 		.ascii	"block_edge_location\000"
 4750      6B5F6564 
 4750      67655F6C 
 4750      6F636174 
 4750      696F6E00 
 4751              	.LASF9:
 4752 03f8 6C6F6E67 		.ascii	"long long unsigned int\000"
 4752      206C6F6E 
 4752      6720756E 
 4752      7369676E 
 4752      65642069 
 4753              	.LASF96:
 4754 040f 64636D6F 		.ascii	"dcmotor.c\000"
 4754      746F722E 
 4754      6300
 4755              	.LASF10:
 4756 0419 756E7369 		.ascii	"unsigned int\000"
 4756      676E6564 
 4756      20696E74 
 4756      00
 4757              	.LASF76:
 4758 0426 4D6F746F 		.ascii	"Motor_2_Encoder_Counts_ReadCounter\000"
 4758      725F325F 
 4758      456E636F 
 4758      6465725F 
 4758      436F756E 
 4759              	.LASF16:
 4760 0449 636F756E 		.ascii	"counts\000"
 4760      747300
 4761              	.LASF47:
 4762 0450 6E657874 		.ascii	"nextMotion\000"
 4762      4D6F7469 
 4762      6F6E00
 4763              	.LASF5:
 4764 045b 73686F72 		.ascii	"short unsigned int\000"
 4764      7420756E 
 4764      7369676E 
 4764      65642069 
 4764      6E7400
 4765              	.LASF19:
 4766 046e 706F7369 		.ascii	"positionUpdate\000"
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\cc13CBnx.s 			page 96


 4766      74696F6E 
 4766      55706461 
 4766      746500
 4767              	.LASF62:
 4768 047d 73776565 		.ascii	"sweeping\000"
 4768      70696E67 
 4768      00
 4769              	.LASF13:
 4770 0486 63686172 		.ascii	"char\000"
 4770      00
 4771              	.LASF29:
 4772 048b 4D315F42 		.ascii	"M1_BD\000"
 4772      4400
 4773              	.LASF12:
 4774 0491 696E7433 		.ascii	"int32_t\000"
 4774      325F7400 
 4775              	.LASF58:
 4776 0499 64726976 		.ascii	"driveStraightEnable\000"
 4776      65537472 
 4776      61696768 
 4776      74456E61 
 4776      626C6500 
 4777              	.LASF50:
 4778 04ad 73746F70 		.ascii	"stopMotor1AndUpdate\000"
 4778      4D6F746F 
 4778      7231416E 
 4778      64557064 
 4778      61746500 
 4779              	.LASF23:
 4780 04c1 63757272 		.ascii	"currentOrientation_Radians\000"
 4780      656E744F 
 4780      7269656E 
 4780      74617469 
 4780      6F6E5F52 
 4781              	.LASF92:
 4782 04dc 4D6F746F 		.ascii	"Motor_2_Encoder_Counts_Stop\000"
 4782      725F325F 
 4782      456E636F 
 4782      6465725F 
 4782      436F756E 
 4783              	.LASF48:
 4784 04f8 64657369 		.ascii	"desiredPosition\000"
 4784      72656450 
 4784      6F736974 
 4784      696F6E00 
 4785              	.LASF28:
 4786 0508 4D315F46 		.ascii	"M1_FD\000"
 4786      4400
 4787              	.LASF20:
 4788 050e 6F726965 		.ascii	"orientationUpdate\000"
 4788      6E746174 
 4788      696F6E55 
 4788      70646174 
 4788      6500
 4789              	.LASF91:
 4790 0520 4D6F746F 		.ascii	"Motor_1_Encoder_Counts_ReadStatusRegister\000"
 4790      725F315F 
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\cc13CBnx.s 			page 97


 4790      456E636F 
 4790      6465725F 
 4790      436F756E 
 4791              	.LASF52:
 4792 054a 6D6F7665 		.ascii	"moveAndAngle\000"
 4792      416E6441 
 4792      6E676C65 
 4792      00
 4793              	.LASF78:
 4794 0557 4D6F746F 		.ascii	"Motor_2_Encoder_Counts_WriteCounter\000"
 4794      725F325F 
 4794      456E636F 
 4794      6465725F 
 4794      436F756E 
 4795              	.LASF89:
 4796 057b 4D6F746F 		.ascii	"Motor_1_Encoder_Counts_Stop\000"
 4796      725F315F 
 4796      456E636F 
 4796      6465725F 
 4796      436F756E 
 4797              	.LASF1:
 4798 0597 646F7562 		.ascii	"double\000"
 4798      6C6500
 4799              	.LASF90:
 4800 059e 55415254 		.ascii	"UART_1_PutString\000"
 4800      5F315F50 
 4800      75745374 
 4800      72696E67 
 4800      00
 4801              	.LASF93:
 4802 05af 4D6F746F 		.ascii	"Motor_2_Encoder_Counts_ReadStatusRegister\000"
 4802      725F325F 
 4802      456E636F 
 4802      6465725F 
 4802      436F756E 
 4803              	.LASF46:
 4804 05d9 64697370 		.ascii	"displaceRight\000"
 4804      6C616365 
 4804      52696768 
 4804      7400
 4805              	.LASF70:
 4806 05e7 6D6F746F 		.ascii	"motor2Enable\000"
 4806      7232456E 
 4806      61626C65 
 4806      00
 4807              	.LASF35:
 4808 05f4 636F756E 		.ascii	"count1\000"
 4808      743100
 4809              	.LASF36:
 4810 05fb 636F756E 		.ascii	"count2\000"
 4810      743200
 4811              	.LASF11:
 4812 0602 5F5F696E 		.ascii	"__int32_t\000"
 4812      7433325F 
 4812      7400
 4813              	.LASF60:
 4814 060c 7075636B 		.ascii	"puckRackColours\000"
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\cc13CBnx.s 			page 98


 4814      5261636B 
 4814      436F6C6F 
 4814      75727300 
 4815              	.LASF74:
 4816 061c 6D6F7665 		.ascii	"moveLeftAllowed\000"
 4816      4C656674 
 4816      416C6C6F 
 4816      77656400 
 4817              	.LASF43:
 4818 062c 7475726E 		.ascii	"turnRight\000"
 4818      52696768 
 4818      7400
 4819              	.LASF15:
 4820 0636 73697A65 		.ascii	"sizetype\000"
 4820      74797065 
 4820      00
 4821              	.LASF55:
 4822 063f 616E676C 		.ascii	"angle\000"
 4822      6500
 4823              	.LASF56:
 4824 0645 6572726F 		.ascii	"error\000"
 4824      7200
 4825              	.LASF31:
 4826 064b 4D325F42 		.ascii	"M2_BD\000"
 4826      4400
 4827              	.LASF38:
 4828 0651 616D6F75 		.ascii	"amount\000"
 4828      6E7400
 4829              	.LASF57:
 4830 0658 49544D5F 		.ascii	"ITM_RxBuffer\000"
 4830      52784275 
 4830      66666572 
 4830      00
 4831              	.LASF95:
 4832 0665 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 4832      43313120 
 4832      352E342E 
 4832      31203230 
 4832      31363036 
 4833 0698 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 4833      20726576 
 4833      6973696F 
 4833      6E203233 
 4833      37373135 
 4834 06cb 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 4834      66756E63 
 4834      74696F6E 
 4834      2D736563 
 4834      74696F6E 
 4835              	.LASF68:
 4836 06f3 63757272 		.ascii	"currentOrientation\000"
 4836      656E744F 
 4836      7269656E 
 4836      74617469 
 4836      6F6E00
 4837              	.LASF44:
 4838 0706 64697370 		.ascii	"displaceLeft\000"
ARM GAS  C:\Users\bamcg3\AppData\Local\Temp\cc13CBnx.s 			page 99


 4838      6C616365 
 4838      4C656674 
 4838      00
 4839              	.LASF30:
 4840 0713 4D325F46 		.ascii	"M2_FD\000"
 4840      4400
 4841              	.LASF64:
 4842 0719 696E6974 		.ascii	"initialisation\000"
 4842      69616C69 
 4842      73617469 
 4842      6F6E00
 4843              	.LASF83:
 4844 0728 44726966 		.ascii	"Drift_Check_Timer_Start\000"
 4844      745F4368 
 4844      65636B5F 
 4844      54696D65 
 4844      725F5374 
 4845              	.LASF75:
 4846 0740 4D6F746F 		.ascii	"Motor_1_Encoder_Counts_ReadCounter\000"
 4846      725F315F 
 4846      456E636F 
 4846      6465725F 
 4846      436F756E 
 4847              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
